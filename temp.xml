<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/httpd/repos/httpd-2.2.34/server/config.c" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/* Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<comment type="block" pos:line="17" pos:column="1">/*
 * http_config.c: once was auxillary functions for reading httpd's config
 * file and converting filenames into a namespace
 *
 * Rob McCool
 *
 * Wall-to-wall rewrite for Apache... commands which are part of the
 * server core can now be found next door in "http_core.c".  Now contains
 * general command loop, and functions which do bookkeeping for the new
 * Apache config stuff (modules and configuration vectors).
 *
 * rst
 *
 */</comment>

<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include<pos:position pos:line="32" pos:column="9"/></cpp:directive> <cpp:file pos:line="32" pos:column="10">"apr.h"<pos:position pos:line="32" pos:column="17"/></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include<pos:position pos:line="33" pos:column="9"/></cpp:directive> <cpp:file pos:line="33" pos:column="10">"apr_strings.h"<pos:position pos:line="33" pos:column="25"/></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include<pos:position pos:line="34" pos:column="9"/></cpp:directive> <cpp:file pos:line="34" pos:column="10">"apr_portable.h"<pos:position pos:line="34" pos:column="26"/></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include<pos:position pos:line="35" pos:column="9"/></cpp:directive> <cpp:file pos:line="35" pos:column="10">"apr_file_io.h"<pos:position pos:line="35" pos:column="25"/></cpp:file></cpp:include>
<cpp:include pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">include<pos:position pos:line="36" pos:column="9"/></cpp:directive> <cpp:file pos:line="36" pos:column="10">"apr_fnmatch.h"<pos:position pos:line="36" pos:column="25"/></cpp:file></cpp:include>

<cpp:define pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">define<pos:position pos:line="38" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="38" pos:column="9">APR_WANT_STDIO<pos:position pos:line="38" pos:column="23"/></name></cpp:macro></cpp:define>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define<pos:position pos:line="39" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">APR_WANT_STRFUNC<pos:position pos:line="39" pos:column="25"/></name></cpp:macro></cpp:define>
<cpp:include pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">include<pos:position pos:line="40" pos:column="9"/></cpp:directive> <cpp:file pos:line="40" pos:column="10">"apr_want.h"<pos:position pos:line="40" pos:column="22"/></cpp:file></cpp:include>

<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define<pos:position pos:line="42" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">CORE_PRIVATE<pos:position pos:line="42" pos:column="21"/></name></cpp:macro></cpp:define>

<cpp:include pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">include<pos:position pos:line="44" pos:column="9"/></cpp:directive> <cpp:file pos:line="44" pos:column="10">"ap_config.h"<pos:position pos:line="44" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">include<pos:position pos:line="45" pos:column="9"/></cpp:directive> <cpp:file pos:line="45" pos:column="10">"httpd.h"<pos:position pos:line="45" pos:column="19"/></cpp:file></cpp:include>
<cpp:include pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">include<pos:position pos:line="46" pos:column="9"/></cpp:directive> <cpp:file pos:line="46" pos:column="10">"http_config.h"<pos:position pos:line="46" pos:column="25"/></cpp:file></cpp:include>
<cpp:include pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">include<pos:position pos:line="47" pos:column="9"/></cpp:directive> <cpp:file pos:line="47" pos:column="10">"http_protocol.h"<pos:position pos:line="47" pos:column="27"/></cpp:file></cpp:include>
<cpp:include pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">include<pos:position pos:line="48" pos:column="9"/></cpp:directive> <cpp:file pos:line="48" pos:column="10">"http_core.h"<pos:position pos:line="48" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">include<pos:position pos:line="49" pos:column="9"/></cpp:directive> <cpp:file pos:line="49" pos:column="10">"http_log.h"<pos:position pos:line="49" pos:column="22"/></cpp:file></cpp:include>      <comment type="block" pos:line="49" pos:column="28">/* for errors in parse_htaccess */</comment>
<cpp:include pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">include<pos:position pos:line="50" pos:column="9"/></cpp:directive> <cpp:file pos:line="50" pos:column="10">"http_request.h"<pos:position pos:line="50" pos:column="26"/></cpp:file></cpp:include>  <comment type="block" pos:line="50" pos:column="28">/* for default_handler (see invoke_handler) */</comment>
<cpp:include pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">include<pos:position pos:line="51" pos:column="9"/></cpp:directive> <cpp:file pos:line="51" pos:column="10">"http_main.h"<pos:position pos:line="51" pos:column="23"/></cpp:file></cpp:include>
<cpp:include pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">include<pos:position pos:line="52" pos:column="9"/></cpp:directive> <cpp:file pos:line="52" pos:column="10">"http_vhost.h"<pos:position pos:line="52" pos:column="24"/></cpp:file></cpp:include>
<cpp:include pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">include<pos:position pos:line="53" pos:column="9"/></cpp:directive> <cpp:file pos:line="53" pos:column="10">"util_cfgtree.h"<pos:position pos:line="53" pos:column="26"/></cpp:file></cpp:include>
<cpp:include pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">include<pos:position pos:line="54" pos:column="9"/></cpp:directive> <cpp:file pos:line="54" pos:column="10">"mpm.h"<pos:position pos:line="54" pos:column="17"/></cpp:file></cpp:include>


<decl_stmt><decl><type><name pos:line="57" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="57" pos:column="16"/></name> <specifier pos:line="57" pos:column="17">const<pos:position pos:line="57" pos:column="22"/></specifier> <name pos:line="57" pos:column="23">char<pos:position pos:line="57" pos:column="27"/></name> <modifier pos:line="57" pos:column="28">*<pos:position pos:line="57" pos:column="29"/></modifier></type><name pos:line="57" pos:column="29">ap_server_argv0<pos:position pos:line="57" pos:column="44"/></name> <init pos:line="57" pos:column="45">= <expr><name pos:line="57" pos:column="47">NULL<pos:position pos:line="57" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="52"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="59" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="59" pos:column="16"/></name> <specifier pos:line="59" pos:column="17">const<pos:position pos:line="59" pos:column="22"/></specifier> <name pos:line="59" pos:column="23">char<pos:position pos:line="59" pos:column="27"/></name> <modifier pos:line="59" pos:column="28">*<pos:position pos:line="59" pos:column="29"/></modifier></type><name pos:line="59" pos:column="29">ap_server_root<pos:position pos:line="59" pos:column="43"/></name> <init pos:line="59" pos:column="44">= <expr><name pos:line="59" pos:column="46">NULL<pos:position pos:line="59" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="51"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="61" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="61" pos:column="16"/></name> <name pos:line="61" pos:column="17">apr_array_header_t<pos:position pos:line="61" pos:column="35"/></name> <modifier pos:line="61" pos:column="36">*<pos:position pos:line="61" pos:column="37"/></modifier></type><name pos:line="61" pos:column="37">ap_server_pre_read_config<pos:position pos:line="61" pos:column="62"/></name> <init pos:line="61" pos:column="63">= <expr><name pos:line="61" pos:column="65">NULL<pos:position pos:line="61" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="61" pos:column="70"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="62" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="62" pos:column="16"/></name> <name pos:line="62" pos:column="17">apr_array_header_t<pos:position pos:line="62" pos:column="35"/></name> <modifier pos:line="62" pos:column="36">*<pos:position pos:line="62" pos:column="37"/></modifier></type><name pos:line="62" pos:column="37">ap_server_post_read_config<pos:position pos:line="62" pos:column="63"/></name> <init pos:line="62" pos:column="64">= <expr><name pos:line="62" pos:column="66">NULL<pos:position pos:line="62" pos:column="70"/></name></expr></init></decl>;<pos:position pos:line="62" pos:column="71"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="63" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="63" pos:column="16"/></name> <name pos:line="63" pos:column="17">apr_array_header_t<pos:position pos:line="63" pos:column="35"/></name> <modifier pos:line="63" pos:column="36">*<pos:position pos:line="63" pos:column="37"/></modifier></type><name pos:line="63" pos:column="37">ap_server_config_defines<pos:position pos:line="63" pos:column="61"/></name> <init pos:line="63" pos:column="62">= <expr><name pos:line="63" pos:column="64">NULL<pos:position pos:line="63" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="63" pos:column="69"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="65" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="65" pos:column="16"/></name> <name pos:line="65" pos:column="17">ap_directive_t<pos:position pos:line="65" pos:column="31"/></name> <modifier pos:line="65" pos:column="32">*<pos:position pos:line="65" pos:column="33"/></modifier></type><name pos:line="65" pos:column="33">ap_conftree<pos:position pos:line="65" pos:column="44"/></name> <init pos:line="65" pos:column="45">= <expr><name pos:line="65" pos:column="47">NULL<pos:position pos:line="65" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="65" pos:column="52"/></decl_stmt>

<macro><name pos:line="67" pos:column="1">APR_HOOK_STRUCT<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(
           <argument pos:line="68" pos:column="12">APR_HOOK_LINK(header_parser)
           APR_HOOK_LINK(pre_config)
           APR_HOOK_LINK(post_config)
           APR_HOOK_LINK(open_logs)
           APR_HOOK_LINK(child_init)
           APR_HOOK_LINK(handler)
           APR_HOOK_LINK(quick_handler)
           APR_HOOK_LINK(optional_fn_retrieve)
           APR_HOOK_LINK(test_config)<pos:position pos:line="76" pos:column="38"/></argument>
)<pos:position pos:line="77" pos:column="2"/></argument_list></macro>

<macro><name pos:line="79" pos:column="1">AP_IMPLEMENT_HOOK_RUN_ALL<pos:position pos:line="79" pos:column="26"/></name><argument_list pos:line="79" pos:column="26">(<argument pos:line="79" pos:column="27">int<pos:position pos:line="79" pos:column="30"/></argument>, <argument pos:line="79" pos:column="32">header_parser<pos:position pos:line="79" pos:column="45"/></argument>,
                          <argument pos:line="80" pos:column="27">(request_rec *r)<pos:position pos:line="80" pos:column="43"/></argument>, <argument pos:line="80" pos:column="45">(r)<pos:position pos:line="80" pos:column="48"/></argument>, <argument pos:line="80" pos:column="50">OK<pos:position pos:line="80" pos:column="52"/></argument>, <argument pos:line="80" pos:column="54">DECLINED<pos:position pos:line="80" pos:column="62"/></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></macro>

<macro><name pos:line="82" pos:column="1">AP_IMPLEMENT_HOOK_RUN_ALL<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument pos:line="82" pos:column="27">int<pos:position pos:line="82" pos:column="30"/></argument>, <argument pos:line="82" pos:column="32">pre_config<pos:position pos:line="82" pos:column="42"/></argument>,
                          <argument pos:line="83" pos:column="27">(apr_pool_t *pconf, apr_pool_t *plog,
                           apr_pool_t *ptemp)<pos:position pos:line="84" pos:column="46"/></argument>,
                          <argument pos:line="85" pos:column="27">(pconf, plog, ptemp)<pos:position pos:line="85" pos:column="47"/></argument>, <argument pos:line="85" pos:column="49">OK<pos:position pos:line="85" pos:column="51"/></argument>, <argument pos:line="85" pos:column="53">DECLINED<pos:position pos:line="85" pos:column="61"/></argument>)<pos:position pos:line="85" pos:column="62"/></argument_list></macro>

<macro><name pos:line="87" pos:column="1">AP_IMPLEMENT_HOOK_VOID<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument pos:line="87" pos:column="24">test_config<pos:position pos:line="87" pos:column="35"/></argument>,
                       <argument pos:line="88" pos:column="24">(apr_pool_t *pconf, server_rec *s)<pos:position pos:line="88" pos:column="58"/></argument>,
                       <argument pos:line="89" pos:column="24">(pconf, s)<pos:position pos:line="89" pos:column="34"/></argument>)<pos:position pos:line="89" pos:column="35"/></argument_list></macro>

<macro><name pos:line="91" pos:column="1">AP_IMPLEMENT_HOOK_RUN_ALL<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">(<argument pos:line="91" pos:column="27">int<pos:position pos:line="91" pos:column="30"/></argument>, <argument pos:line="91" pos:column="32">post_config<pos:position pos:line="91" pos:column="43"/></argument>,
                          <argument pos:line="92" pos:column="27">(apr_pool_t *pconf, apr_pool_t *plog,
                           apr_pool_t *ptemp, server_rec *s)<pos:position pos:line="93" pos:column="61"/></argument>,
                          <argument pos:line="94" pos:column="27">(pconf, plog, ptemp, s)<pos:position pos:line="94" pos:column="50"/></argument>, <argument pos:line="94" pos:column="52">OK<pos:position pos:line="94" pos:column="54"/></argument>, <argument pos:line="94" pos:column="56">DECLINED<pos:position pos:line="94" pos:column="64"/></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></macro>

<comment type="block" pos:line="96" pos:column="1">/* During the course of debugging I expanded this macro out, so
 * rather than remove all the useful information there is in the
 * following lines, I'm going to leave it here in case anyone
 * else finds it useful.
 *
 * Ben has looked at it and thinks it correct :)
 *
AP_DECLARE(int) ap_hook_post_config(ap_HOOK_post_config_t *pf,
                                    const char * const *aszPre,
                                    const char * const *aszSucc,
                                    int nOrder)
{
    ap_LINK_post_config_t *pHook;

    if (!_hooks.link_post_config) {
        _hooks.link_post_config = apr_array_make(apr_hook_global_pool, 1,
                                                 sizeof(ap_LINK_post_config_t));
        apr_hook_sort_register("post_config", &amp;_hooks.link_post_config);
    }

    pHook = apr_array_push(_hooks.link_post_config);
    pHook-&gt;pFunc = pf;
    pHook-&gt;aszPredecessors = aszPre;
    pHook-&gt;aszSuccessors = aszSucc;
    pHook-&gt;nOrder = nOrder;
    pHook-&gt;szName = apr_hook_debug_current;

    if (apr_hook_debug_enabled)
        apr_hook_debug_show("post_config", aszPre, aszSucc);
}

AP_DECLARE(apr_array_header_t *) ap_hook_get_post_config(void) {
    return _hooks.link_post_config;
}

AP_DECLARE(int) ap_run_post_config(apr_pool_t *pconf,
                                   apr_pool_t *plog,
                                   apr_pool_t *ptemp,
                                   server_rec *s)
{
    ap_LINK_post_config_t *pHook;
    int n;

    if(!_hooks.link_post_config)
        return;

    pHook = (ap_LINK_post_config_t *)_hooks.link_post_config-&gt;elts;
    for (n = 0; n &lt; _hooks.link_post_config-&gt;nelts; ++n)
        pHook[n].pFunc (pconf, plog, ptemp, s);
}
 */</comment>

<macro><name pos:line="148" pos:column="1">AP_IMPLEMENT_HOOK_RUN_ALL<pos:position pos:line="148" pos:column="26"/></name><argument_list pos:line="148" pos:column="26">(<argument pos:line="148" pos:column="27">int<pos:position pos:line="148" pos:column="30"/></argument>, <argument pos:line="148" pos:column="32">open_logs<pos:position pos:line="148" pos:column="41"/></argument>,
                          <argument pos:line="149" pos:column="27">(apr_pool_t *pconf, apr_pool_t *plog,
                           apr_pool_t *ptemp, server_rec *s)<pos:position pos:line="150" pos:column="61"/></argument>,
                          <argument pos:line="151" pos:column="27">(pconf, plog, ptemp, s)<pos:position pos:line="151" pos:column="50"/></argument>, <argument pos:line="151" pos:column="52">OK<pos:position pos:line="151" pos:column="54"/></argument>, <argument pos:line="151" pos:column="56">DECLINED<pos:position pos:line="151" pos:column="64"/></argument>)<pos:position pos:line="151" pos:column="65"/></argument_list></macro>

<macro><name pos:line="153" pos:column="1">AP_IMPLEMENT_HOOK_VOID<pos:position pos:line="153" pos:column="23"/></name><argument_list pos:line="153" pos:column="23">(<argument pos:line="153" pos:column="24">child_init<pos:position pos:line="153" pos:column="34"/></argument>,
                       <argument pos:line="154" pos:column="24">(apr_pool_t *pchild, server_rec *s)<pos:position pos:line="154" pos:column="59"/></argument>,
                       <argument pos:line="155" pos:column="24">(pchild, s)<pos:position pos:line="155" pos:column="35"/></argument>)<pos:position pos:line="155" pos:column="36"/></argument_list></macro>

<macro><name pos:line="157" pos:column="1">AP_IMPLEMENT_HOOK_RUN_FIRST<pos:position pos:line="157" pos:column="28"/></name><argument_list pos:line="157" pos:column="28">(<argument pos:line="157" pos:column="29">int<pos:position pos:line="157" pos:column="32"/></argument>, <argument pos:line="157" pos:column="34">handler<pos:position pos:line="157" pos:column="41"/></argument>, <argument pos:line="157" pos:column="43">(request_rec *r)<pos:position pos:line="157" pos:column="59"/></argument>,
                            <argument pos:line="158" pos:column="29">(r)<pos:position pos:line="158" pos:column="32"/></argument>, <argument pos:line="158" pos:column="34">DECLINED<pos:position pos:line="158" pos:column="42"/></argument>)<pos:position pos:line="158" pos:column="43"/></argument_list></macro>

<macro><name pos:line="160" pos:column="1">AP_IMPLEMENT_HOOK_RUN_FIRST<pos:position pos:line="160" pos:column="28"/></name><argument_list pos:line="160" pos:column="28">(<argument pos:line="160" pos:column="29">int<pos:position pos:line="160" pos:column="32"/></argument>, <argument pos:line="160" pos:column="34">quick_handler<pos:position pos:line="160" pos:column="47"/></argument>, <argument pos:line="160" pos:column="49">(request_rec *r, int lookup)<pos:position pos:line="160" pos:column="77"/></argument>,
                            <argument pos:line="161" pos:column="29">(r, lookup)<pos:position pos:line="161" pos:column="40"/></argument>, <argument pos:line="161" pos:column="42">DECLINED<pos:position pos:line="161" pos:column="50"/></argument>)<pos:position pos:line="161" pos:column="51"/></argument_list></macro>

<macro><name pos:line="163" pos:column="1">AP_IMPLEMENT_HOOK_VOID<pos:position pos:line="163" pos:column="23"/></name><argument_list pos:line="163" pos:column="23">(<argument pos:line="163" pos:column="24">optional_fn_retrieve<pos:position pos:line="163" pos:column="44"/></argument>, <argument pos:line="163" pos:column="46">(void)<pos:position pos:line="163" pos:column="52"/></argument>, <argument pos:line="163" pos:column="54">()<pos:position pos:line="163" pos:column="56"/></argument>)<pos:position pos:line="163" pos:column="57"/></argument_list></macro>

<comment type="block" pos:line="165" pos:column="1">/****************************************************************
 *
 * We begin with the functions which deal with the linked list
 * of modules which control just about all of the server operation.
 */</comment>

<comment type="block" pos:line="171" pos:column="1">/* total_modules is the number of modules that have been linked
 * into the server.
 */</comment>
<decl_stmt><decl><specifier pos:line="174" pos:column="1">static<pos:position pos:line="174" pos:column="7"/></specifier> <type><name pos:line="174" pos:column="8">int<pos:position pos:line="174" pos:column="11"/></name></type> <name pos:line="174" pos:column="12">total_modules<pos:position pos:line="174" pos:column="25"/></name> <init pos:line="174" pos:column="26">= <expr><literal type="number" pos:line="174" pos:column="28">0<pos:position pos:line="174" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="174" pos:column="30"/></decl_stmt>

<comment type="block" pos:line="176" pos:column="1">/* dynamic_modules is the number of modules that have been added
 * after the pre-loaded ones have been set up. It shouldn't be larger
 * than DYNAMIC_MODULE_LIMIT.
 */</comment>
<decl_stmt><decl><specifier pos:line="180" pos:column="1">static<pos:position pos:line="180" pos:column="7"/></specifier> <type><name pos:line="180" pos:column="8">int<pos:position pos:line="180" pos:column="11"/></name></type> <name pos:line="180" pos:column="12">dynamic_modules<pos:position pos:line="180" pos:column="27"/></name> <init pos:line="180" pos:column="28">= <expr><literal type="number" pos:line="180" pos:column="30">0<pos:position pos:line="180" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="180" pos:column="32"/></decl_stmt>

<decl_stmt><decl><type><name pos:line="182" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="182" pos:column="16"/></name> <name pos:line="182" pos:column="17">module<pos:position pos:line="182" pos:column="23"/></name> <modifier pos:line="182" pos:column="24">*<pos:position pos:line="182" pos:column="25"/></modifier></type><name pos:line="182" pos:column="25">ap_top_module<pos:position pos:line="182" pos:column="38"/></name> <init pos:line="182" pos:column="39">= <expr><name pos:line="182" pos:column="41">NULL<pos:position pos:line="182" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="182" pos:column="46"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="183" pos:column="1">AP_DECLARE_DATA<pos:position pos:line="183" pos:column="16"/></name> <name pos:line="183" pos:column="17">module<pos:position pos:line="183" pos:column="23"/></name> <modifier pos:line="183" pos:column="24">*<pos:position pos:line="183" pos:column="25"/></modifier><modifier pos:line="183" pos:column="25">*<pos:position pos:line="183" pos:column="26"/></modifier></type><name pos:line="183" pos:column="26">ap_loaded_modules<pos:position pos:line="183" pos:column="43"/></name><init pos:line="183" pos:column="43">=<expr><name pos:line="183" pos:column="44">NULL<pos:position pos:line="183" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="183" pos:column="49"/></decl_stmt>

<decl_stmt><decl><specifier pos:line="185" pos:column="1">static<pos:position pos:line="185" pos:column="7"/></specifier> <type><name pos:line="185" pos:column="8">apr_hash_t<pos:position pos:line="185" pos:column="18"/></name> <modifier pos:line="185" pos:column="19">*<pos:position pos:line="185" pos:column="20"/></modifier></type><name pos:line="185" pos:column="20">ap_config_hash<pos:position pos:line="185" pos:column="34"/></name> <init pos:line="185" pos:column="35">= <expr><name pos:line="185" pos:column="37">NULL<pos:position pos:line="185" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="185" pos:column="42"/></decl_stmt>

<typedef pos:line="187" pos:column="1">typedef <function_decl><type><name pos:line="187" pos:column="9">int<pos:position pos:line="187" pos:column="12"/></name></type> (<modifier pos:line="187" pos:column="14">*<pos:position pos:line="187" pos:column="15"/></modifier><name pos:line="187" pos:column="15">handler_func<pos:position pos:line="187" pos:column="27"/></name>)<parameter_list pos:line="187" pos:column="28">(<parameter><decl><type><name pos:line="187" pos:column="29">request_rec<pos:position pos:line="187" pos:column="40"/></name> <modifier pos:line="187" pos:column="41">*<pos:position pos:line="187" pos:column="42"/></modifier></type></decl></parameter>)<pos:position pos:line="187" pos:column="43"/></parameter_list>;<pos:position pos:line="187" pos:column="44"/></function_decl></typedef>
<typedef pos:line="188" pos:column="1">typedef <function_decl><type><name pos:line="188" pos:column="9">void<pos:position pos:line="188" pos:column="13"/></name> <modifier pos:line="188" pos:column="14">*<pos:position pos:line="188" pos:column="15"/></modifier></type>(<modifier pos:line="188" pos:column="16">*<pos:position pos:line="188" pos:column="17"/></modifier><name pos:line="188" pos:column="17">dir_maker_func<pos:position pos:line="188" pos:column="31"/></name>)<parameter_list pos:line="188" pos:column="32">(<parameter><decl><type><name pos:line="188" pos:column="33">apr_pool_t<pos:position pos:line="188" pos:column="43"/></name> <modifier pos:line="188" pos:column="44">*<pos:position pos:line="188" pos:column="45"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="188" pos:column="47">char<pos:position pos:line="188" pos:column="51"/></name> <modifier pos:line="188" pos:column="52">*<pos:position pos:line="188" pos:column="53"/></modifier></type></decl></parameter>)<pos:position pos:line="188" pos:column="54"/></parameter_list>;<pos:position pos:line="188" pos:column="55"/></function_decl></typedef>
<typedef pos:line="189" pos:column="1">typedef <function_decl><type><name pos:line="189" pos:column="9">void<pos:position pos:line="189" pos:column="13"/></name> <modifier pos:line="189" pos:column="14">*<pos:position pos:line="189" pos:column="15"/></modifier></type>(<modifier pos:line="189" pos:column="16">*<pos:position pos:line="189" pos:column="17"/></modifier><name pos:line="189" pos:column="17">merger_func<pos:position pos:line="189" pos:column="28"/></name>)<parameter_list pos:line="189" pos:column="29">(<parameter><decl><type><name pos:line="189" pos:column="30">apr_pool_t<pos:position pos:line="189" pos:column="40"/></name> <modifier pos:line="189" pos:column="41">*<pos:position pos:line="189" pos:column="42"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="189" pos:column="44">void<pos:position pos:line="189" pos:column="48"/></name> <modifier pos:line="189" pos:column="49">*<pos:position pos:line="189" pos:column="50"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="189" pos:column="52">void<pos:position pos:line="189" pos:column="56"/></name> <modifier pos:line="189" pos:column="57">*<pos:position pos:line="189" pos:column="58"/></modifier></type></decl></parameter>)<pos:position pos:line="189" pos:column="59"/></parameter_list>;<pos:position pos:line="189" pos:column="60"/></function_decl></typedef>

<comment type="block" pos:line="191" pos:column="1">/* maximum nesting level for config directories */</comment>
<cpp:ifndef pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">ifndef<pos:position pos:line="192" pos:column="8"/></cpp:directive> <name pos:line="192" pos:column="9">AP_MAX_INCLUDE_DIR_DEPTH<pos:position pos:line="192" pos:column="33"/></name></cpp:ifndef>
<cpp:define pos:line="193" pos:column="1">#<cpp:directive pos:line="193" pos:column="2">define<pos:position pos:line="193" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="193" pos:column="9">AP_MAX_INCLUDE_DIR_DEPTH<pos:position pos:line="193" pos:column="33"/></name></cpp:macro> <cpp:value pos:line="193" pos:column="34">(128)<pos:position pos:line="193" pos:column="39"/></cpp:value></cpp:define>
<cpp:endif pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">endif<pos:position pos:line="194" pos:column="7"/></cpp:directive></cpp:endif>

<comment type="block" pos:line="196" pos:column="1">/* Dealing with config vectors.  These are associated with per-directory,
 * per-server, and per-request configuration, and have a void* pointer for
 * each modules.  The nature of the structure pointed to is private to the
 * module in question... the core doesn't (and can't) know.  However, there
 * are defined interfaces which allow it to create instances of its private
 * per-directory and per-server structures, and to merge the per-directory
 * structures of a directory and its subdirectory (producing a new one in
 * which the defaults applying to the base directory have been properly
 * overridden).
 */</comment>

<function><specifier pos:line="207" pos:column="1">static<pos:position pos:line="207" pos:column="7"/></specifier> <type><name pos:line="207" pos:column="8">ap_conf_vector_t<pos:position pos:line="207" pos:column="24"/></name> <modifier pos:line="207" pos:column="25">*<pos:position pos:line="207" pos:column="26"/></modifier></type><name pos:line="207" pos:column="26">create_empty_config<pos:position pos:line="207" pos:column="45"/></name><parameter_list pos:line="207" pos:column="45">(<parameter><decl><type><name pos:line="207" pos:column="46">apr_pool_t<pos:position pos:line="207" pos:column="56"/></name> <modifier pos:line="207" pos:column="57">*<pos:position pos:line="207" pos:column="58"/></modifier></type><name pos:line="207" pos:column="58">p<pos:position pos:line="207" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="207" pos:column="60"/></parameter_list>
<block pos:line="208" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="209" pos:column="5">void<pos:position pos:line="209" pos:column="9"/></name> <modifier pos:line="209" pos:column="10">*<pos:position pos:line="209" pos:column="11"/></modifier></type><name pos:line="209" pos:column="11">conf_vector<pos:position pos:line="209" pos:column="22"/></name> <init pos:line="209" pos:column="23">= <expr><call><name pos:line="209" pos:column="25">apr_pcalloc<pos:position pos:line="209" pos:column="36"/></name><argument_list pos:line="209" pos:column="36">(<argument><expr><name pos:line="209" pos:column="37">p<pos:position pos:line="209" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="209" pos:column="40">sizeof<argument_list pos:line="209" pos:column="46">(<argument><expr><name pos:line="209" pos:column="47">void<pos:position pos:line="209" pos:column="51"/></name> <operator pos:line="209" pos:column="52">*<pos:position pos:line="209" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="209" pos:column="54"/></argument_list></sizeof> <operator pos:line="209" pos:column="55">*<pos:position pos:line="209" pos:column="56"/></operator>
                                    <operator pos:line="210" pos:column="37">(<pos:position pos:line="210" pos:column="38"/></operator><name pos:line="210" pos:column="38">total_modules<pos:position pos:line="210" pos:column="51"/></name> <operator pos:line="210" pos:column="52">+<pos:position pos:line="210" pos:column="53"/></operator> <name pos:line="210" pos:column="54">DYNAMIC_MODULE_LIMIT<pos:position pos:line="210" pos:column="74"/></name><operator pos:line="210" pos:column="74">)<pos:position pos:line="210" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="210" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="210" pos:column="77"/></decl_stmt>
    <return pos:line="211" pos:column="5">return <expr><name pos:line="211" pos:column="12">conf_vector<pos:position pos:line="211" pos:column="23"/></name></expr>;<pos:position pos:line="211" pos:column="24"/></return>
}<pos:position pos:line="212" pos:column="2"/></block></function>

<function><specifier pos:line="214" pos:column="1">static<pos:position pos:line="214" pos:column="7"/></specifier> <type><name pos:line="214" pos:column="8">ap_conf_vector_t<pos:position pos:line="214" pos:column="24"/></name> <modifier pos:line="214" pos:column="25">*<pos:position pos:line="214" pos:column="26"/></modifier></type><name pos:line="214" pos:column="26">create_default_per_dir_config<pos:position pos:line="214" pos:column="55"/></name><parameter_list pos:line="214" pos:column="55">(<parameter><decl><type><name pos:line="214" pos:column="56">apr_pool_t<pos:position pos:line="214" pos:column="66"/></name> <modifier pos:line="214" pos:column="67">*<pos:position pos:line="214" pos:column="68"/></modifier></type><name pos:line="214" pos:column="68">p<pos:position pos:line="214" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="214" pos:column="70"/></parameter_list>
<block pos:line="215" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="216" pos:column="5">void<pos:position pos:line="216" pos:column="9"/></name> <modifier pos:line="216" pos:column="10">*<pos:position pos:line="216" pos:column="11"/></modifier><modifier pos:line="216" pos:column="11">*<pos:position pos:line="216" pos:column="12"/></modifier></type><name pos:line="216" pos:column="12">conf_vector<pos:position pos:line="216" pos:column="23"/></name> <init pos:line="216" pos:column="24">= <expr><call><name pos:line="216" pos:column="26">apr_pcalloc<pos:position pos:line="216" pos:column="37"/></name><argument_list pos:line="216" pos:column="37">(<argument><expr><name pos:line="216" pos:column="38">p<pos:position pos:line="216" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="216" pos:column="41">sizeof<argument_list pos:line="216" pos:column="47">(<argument><expr><name pos:line="216" pos:column="48">void<pos:position pos:line="216" pos:column="52"/></name> <operator pos:line="216" pos:column="53">*<pos:position pos:line="216" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="216" pos:column="55"/></argument_list></sizeof> <operator pos:line="216" pos:column="56">*<pos:position pos:line="216" pos:column="57"/></operator>
                                     <operator pos:line="217" pos:column="38">(<pos:position pos:line="217" pos:column="39"/></operator><name pos:line="217" pos:column="39">total_modules<pos:position pos:line="217" pos:column="52"/></name> <operator pos:line="217" pos:column="53">+<pos:position pos:line="217" pos:column="54"/></operator> <name pos:line="217" pos:column="55">DYNAMIC_MODULE_LIMIT<pos:position pos:line="217" pos:column="75"/></name><operator pos:line="217" pos:column="75">)<pos:position pos:line="217" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="217" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="217" pos:column="78"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="218" pos:column="5">module<pos:position pos:line="218" pos:column="11"/></name> <modifier pos:line="218" pos:column="12">*<pos:position pos:line="218" pos:column="13"/></modifier></type><name pos:line="218" pos:column="13">modp<pos:position pos:line="218" pos:column="17"/></name></decl>;<pos:position pos:line="218" pos:column="18"/></decl_stmt>

    <for pos:line="220" pos:column="5">for <control pos:line="220" pos:column="9">(<init><expr><name pos:line="220" pos:column="10">modp<pos:position pos:line="220" pos:column="14"/></name> <operator pos:line="220" pos:column="15">=<pos:position pos:line="220" pos:column="16"/></operator> <name pos:line="220" pos:column="17">ap_top_module<pos:position pos:line="220" pos:column="30"/></name></expr>;<pos:position pos:line="220" pos:column="31"/></init> <condition><expr><name pos:line="220" pos:column="32">modp<pos:position pos:line="220" pos:column="36"/></name></expr>;<pos:position pos:line="220" pos:column="37"/></condition> <incr><expr><name pos:line="220" pos:column="38">modp<pos:position pos:line="220" pos:column="42"/></name> <operator pos:line="220" pos:column="43">=<pos:position pos:line="220" pos:column="44"/></operator> <name><name pos:line="220" pos:column="45">modp<pos:position pos:line="220" pos:column="49"/></name><operator pos:line="220" pos:column="49">-&gt;<pos:position pos:line="220" pos:column="54"/></operator><name pos:line="220" pos:column="51">next<pos:position pos:line="220" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="220" pos:column="56"/></control> <block pos:line="220" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="221" pos:column="9">dir_maker_func<pos:position pos:line="221" pos:column="23"/></name></type> <name pos:line="221" pos:column="24">df<pos:position pos:line="221" pos:column="26"/></name> <init pos:line="221" pos:column="27">= <expr><name><name pos:line="221" pos:column="29">modp<pos:position pos:line="221" pos:column="33"/></name><operator pos:line="221" pos:column="33">-&gt;<pos:position pos:line="221" pos:column="38"/></operator><name pos:line="221" pos:column="35">create_dir_config<pos:position pos:line="221" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="221" pos:column="53"/></decl_stmt>

        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name pos:line="223" pos:column="13">df<pos:position pos:line="223" pos:column="15"/></name></expr>)<pos:position pos:line="223" pos:column="16"/></condition><then pos:line="223" pos:column="16">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="224" pos:column="13">conf_vector<pos:position pos:line="224" pos:column="24"/></name><index pos:line="224" pos:column="24">[<expr><name><name pos:line="224" pos:column="25">modp<pos:position pos:line="224" pos:column="29"/></name><operator pos:line="224" pos:column="29">-&gt;<pos:position pos:line="224" pos:column="34"/></operator><name pos:line="224" pos:column="31">module_index<pos:position pos:line="224" pos:column="43"/></name></name></expr>]<pos:position pos:line="224" pos:column="44"/></index></name> <operator pos:line="224" pos:column="45">=<pos:position pos:line="224" pos:column="46"/></operator> <call pos:line="224" pos:column="47">(<modifier pos:line="224" pos:column="48">*<pos:position pos:line="224" pos:column="49"/></modifier><name pos:line="224" pos:column="49">df<pos:position pos:line="224" pos:column="51"/></name>)<argument_list pos:line="224" pos:column="52">(<argument><expr><name pos:line="224" pos:column="53">p<pos:position pos:line="224" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="56">NULL<pos:position pos:line="224" pos:column="60"/></name></expr></argument>)<pos:position pos:line="224" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="62"/></expr_stmt></block></then></if>
    }<pos:position pos:line="225" pos:column="6"/></block></for>

    <return pos:line="227" pos:column="5">return <expr><operator pos:line="227" pos:column="12">(<pos:position pos:line="227" pos:column="13"/></operator><name pos:line="227" pos:column="13">ap_conf_vector_t<pos:position pos:line="227" pos:column="29"/></name> <operator pos:line="227" pos:column="30">*<pos:position pos:line="227" pos:column="31"/></operator><operator pos:line="227" pos:column="31">)<pos:position pos:line="227" pos:column="32"/></operator><name pos:line="227" pos:column="32">conf_vector<pos:position pos:line="227" pos:column="43"/></name></expr>;<pos:position pos:line="227" pos:column="44"/></return>
}<pos:position pos:line="228" pos:column="2"/></block></function>

<macro><name pos:line="230" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="230" pos:column="16"/></name><argument_list pos:line="230" pos:column="16">(<argument pos:line="230" pos:column="17">ap_conf_vector_t *<pos:position pos:line="230" pos:column="35"/></argument>)<pos:position pos:line="230" pos:column="36"/></argument_list></macro> <macro><name pos:line="230" pos:column="37">ap_merge_per_dir_configs<pos:position pos:line="230" pos:column="61"/></name><argument_list pos:line="230" pos:column="61">(<argument pos:line="230" pos:column="62">apr_pool_t *p<pos:position pos:line="230" pos:column="75"/></argument>,
                                           <argument pos:line="231" pos:column="44">ap_conf_vector_t *base<pos:position pos:line="231" pos:column="66"/></argument>,
                                           <argument pos:line="232" pos:column="44">ap_conf_vector_t *new_conf<pos:position pos:line="232" pos:column="70"/></argument>)<pos:position pos:line="232" pos:column="71"/></argument_list></macro>
<block pos:line="233" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="234" pos:column="5">void<pos:position pos:line="234" pos:column="9"/></name> <modifier pos:line="234" pos:column="10">*<pos:position pos:line="234" pos:column="11"/></modifier><modifier pos:line="234" pos:column="11">*<pos:position pos:line="234" pos:column="12"/></modifier></type><name pos:line="234" pos:column="12">conf_vector<pos:position pos:line="234" pos:column="23"/></name> <init pos:line="234" pos:column="24">= <expr><call><name pos:line="234" pos:column="26">apr_palloc<pos:position pos:line="234" pos:column="36"/></name><argument_list pos:line="234" pos:column="36">(<argument><expr><name pos:line="234" pos:column="37">p<pos:position pos:line="234" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="234" pos:column="40">sizeof<argument_list pos:line="234" pos:column="46">(<argument><expr><name pos:line="234" pos:column="47">void<pos:position pos:line="234" pos:column="51"/></name> <operator pos:line="234" pos:column="52">*<pos:position pos:line="234" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="234" pos:column="54"/></argument_list></sizeof> <operator pos:line="234" pos:column="55">*<pos:position pos:line="234" pos:column="56"/></operator> <name pos:line="234" pos:column="57">total_modules<pos:position pos:line="234" pos:column="70"/></name></expr></argument>)<pos:position pos:line="234" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="234" pos:column="72"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="235" pos:column="5">void<pos:position pos:line="235" pos:column="9"/></name> <modifier pos:line="235" pos:column="10">*<pos:position pos:line="235" pos:column="11"/></modifier><modifier pos:line="235" pos:column="11">*<pos:position pos:line="235" pos:column="12"/></modifier></type><name pos:line="235" pos:column="12">base_vector<pos:position pos:line="235" pos:column="23"/></name> <init pos:line="235" pos:column="24">= <expr><operator pos:line="235" pos:column="26">(<pos:position pos:line="235" pos:column="27"/></operator><name pos:line="235" pos:column="27">void<pos:position pos:line="235" pos:column="31"/></name> <operator pos:line="235" pos:column="32">*<pos:position pos:line="235" pos:column="33"/></operator><operator pos:line="235" pos:column="33">*<pos:position pos:line="235" pos:column="34"/></operator><operator pos:line="235" pos:column="34">)<pos:position pos:line="235" pos:column="35"/></operator><name pos:line="235" pos:column="35">base<pos:position pos:line="235" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="235" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="236" pos:column="5">void<pos:position pos:line="236" pos:column="9"/></name> <modifier pos:line="236" pos:column="10">*<pos:position pos:line="236" pos:column="11"/></modifier><modifier pos:line="236" pos:column="11">*<pos:position pos:line="236" pos:column="12"/></modifier></type><name pos:line="236" pos:column="12">new_vector<pos:position pos:line="236" pos:column="22"/></name> <init pos:line="236" pos:column="23">= <expr><operator pos:line="236" pos:column="25">(<pos:position pos:line="236" pos:column="26"/></operator><name pos:line="236" pos:column="26">void<pos:position pos:line="236" pos:column="30"/></name> <operator pos:line="236" pos:column="31">*<pos:position pos:line="236" pos:column="32"/></operator><operator pos:line="236" pos:column="32">*<pos:position pos:line="236" pos:column="33"/></operator><operator pos:line="236" pos:column="33">)<pos:position pos:line="236" pos:column="34"/></operator><name pos:line="236" pos:column="34">new_conf<pos:position pos:line="236" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="236" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="237" pos:column="5">module<pos:position pos:line="237" pos:column="11"/></name> <modifier pos:line="237" pos:column="12">*<pos:position pos:line="237" pos:column="13"/></modifier></type><name pos:line="237" pos:column="13">modp<pos:position pos:line="237" pos:column="17"/></name></decl>;<pos:position pos:line="237" pos:column="18"/></decl_stmt>

    <for pos:line="239" pos:column="5">for <control pos:line="239" pos:column="9">(<init><expr><name pos:line="239" pos:column="10">modp<pos:position pos:line="239" pos:column="14"/></name> <operator pos:line="239" pos:column="15">=<pos:position pos:line="239" pos:column="16"/></operator> <name pos:line="239" pos:column="17">ap_top_module<pos:position pos:line="239" pos:column="30"/></name></expr>;<pos:position pos:line="239" pos:column="31"/></init> <condition><expr><name pos:line="239" pos:column="32">modp<pos:position pos:line="239" pos:column="36"/></name></expr>;<pos:position pos:line="239" pos:column="37"/></condition> <incr><expr><name pos:line="239" pos:column="38">modp<pos:position pos:line="239" pos:column="42"/></name> <operator pos:line="239" pos:column="43">=<pos:position pos:line="239" pos:column="44"/></operator> <name><name pos:line="239" pos:column="45">modp<pos:position pos:line="239" pos:column="49"/></name><operator pos:line="239" pos:column="49">-&gt;<pos:position pos:line="239" pos:column="54"/></operator><name pos:line="239" pos:column="51">next<pos:position pos:line="239" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="239" pos:column="56"/></control> <block pos:line="239" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="240" pos:column="9">int<pos:position pos:line="240" pos:column="12"/></name></type> <name pos:line="240" pos:column="13">i<pos:position pos:line="240" pos:column="14"/></name> <init pos:line="240" pos:column="15">= <expr><name><name pos:line="240" pos:column="17">modp<pos:position pos:line="240" pos:column="21"/></name><operator pos:line="240" pos:column="21">-&gt;<pos:position pos:line="240" pos:column="26"/></operator><name pos:line="240" pos:column="23">module_index<pos:position pos:line="240" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="240" pos:column="36"/></decl_stmt>

        <if pos:line="242" pos:column="9">if <condition pos:line="242" pos:column="12">(<expr><operator pos:line="242" pos:column="13">!<pos:position pos:line="242" pos:column="14"/></operator><name><name pos:line="242" pos:column="14">new_vector<pos:position pos:line="242" pos:column="24"/></name><index pos:line="242" pos:column="24">[<expr><name pos:line="242" pos:column="25">i<pos:position pos:line="242" pos:column="26"/></name></expr>]<pos:position pos:line="242" pos:column="27"/></index></name></expr>)<pos:position pos:line="242" pos:column="28"/></condition><then pos:line="242" pos:column="28"> <block pos:line="242" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="243" pos:column="13">conf_vector<pos:position pos:line="243" pos:column="24"/></name><index pos:line="243" pos:column="24">[<expr><name pos:line="243" pos:column="25">i<pos:position pos:line="243" pos:column="26"/></name></expr>]<pos:position pos:line="243" pos:column="27"/></index></name> <operator pos:line="243" pos:column="28">=<pos:position pos:line="243" pos:column="29"/></operator> <name><name pos:line="243" pos:column="30">base_vector<pos:position pos:line="243" pos:column="41"/></name><index pos:line="243" pos:column="41">[<expr><name pos:line="243" pos:column="42">i<pos:position pos:line="243" pos:column="43"/></name></expr>]<pos:position pos:line="243" pos:column="44"/></index></name></expr>;<pos:position pos:line="243" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="244" pos:column="10"/></block></then>
        <else pos:line="245" pos:column="9">else <block pos:line="245" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="246" pos:column="13">merger_func<pos:position pos:line="246" pos:column="24"/></name></type> <name pos:line="246" pos:column="25">df<pos:position pos:line="246" pos:column="27"/></name> <init pos:line="246" pos:column="28">= <expr><name><name pos:line="246" pos:column="30">modp<pos:position pos:line="246" pos:column="34"/></name><operator pos:line="246" pos:column="34">-&gt;<pos:position pos:line="246" pos:column="39"/></operator><name pos:line="246" pos:column="36">merge_dir_config<pos:position pos:line="246" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="246" pos:column="53"/></decl_stmt>
            <if pos:line="247" pos:column="13">if <condition pos:line="247" pos:column="16">(<expr><name pos:line="247" pos:column="17">df<pos:position pos:line="247" pos:column="19"/></name> <operator pos:line="247" pos:column="20">&amp;&amp;<pos:position pos:line="247" pos:column="30"/></operator> <name><name pos:line="247" pos:column="23">base_vector<pos:position pos:line="247" pos:column="34"/></name><index pos:line="247" pos:column="34">[<expr><name pos:line="247" pos:column="35">i<pos:position pos:line="247" pos:column="36"/></name></expr>]<pos:position pos:line="247" pos:column="37"/></index></name></expr>)<pos:position pos:line="247" pos:column="38"/></condition><then pos:line="247" pos:column="38"> <block pos:line="247" pos:column="39">{
                <expr_stmt><expr><name><name pos:line="248" pos:column="17">conf_vector<pos:position pos:line="248" pos:column="28"/></name><index pos:line="248" pos:column="28">[<expr><name pos:line="248" pos:column="29">i<pos:position pos:line="248" pos:column="30"/></name></expr>]<pos:position pos:line="248" pos:column="31"/></index></name> <operator pos:line="248" pos:column="32">=<pos:position pos:line="248" pos:column="33"/></operator> <call pos:line="248" pos:column="34">(<modifier pos:line="248" pos:column="35">*<pos:position pos:line="248" pos:column="36"/></modifier><name pos:line="248" pos:column="36">df<pos:position pos:line="248" pos:column="38"/></name>)<argument_list pos:line="248" pos:column="39">(<argument><expr><name pos:line="248" pos:column="40">p<pos:position pos:line="248" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="43">base_vector<pos:position pos:line="248" pos:column="54"/></name><index pos:line="248" pos:column="54">[<expr><name pos:line="248" pos:column="55">i<pos:position pos:line="248" pos:column="56"/></name></expr>]<pos:position pos:line="248" pos:column="57"/></index></name></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="59">new_vector<pos:position pos:line="248" pos:column="69"/></name><index pos:line="248" pos:column="69">[<expr><name pos:line="248" pos:column="70">i<pos:position pos:line="248" pos:column="71"/></name></expr>]<pos:position pos:line="248" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="248" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="249" pos:column="14"/></block></then>
            <else pos:line="250" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="251" pos:column="17">conf_vector<pos:position pos:line="251" pos:column="28"/></name><index pos:line="251" pos:column="28">[<expr><name pos:line="251" pos:column="29">i<pos:position pos:line="251" pos:column="30"/></name></expr>]<pos:position pos:line="251" pos:column="31"/></index></name> <operator pos:line="251" pos:column="32">=<pos:position pos:line="251" pos:column="33"/></operator> <name><name pos:line="251" pos:column="34">new_vector<pos:position pos:line="251" pos:column="44"/></name><index pos:line="251" pos:column="44">[<expr><name pos:line="251" pos:column="45">i<pos:position pos:line="251" pos:column="46"/></name></expr>]<pos:position pos:line="251" pos:column="47"/></index></name></expr>;<pos:position pos:line="251" pos:column="48"/></expr_stmt></block></else></if>
        }<pos:position pos:line="252" pos:column="10"/></block></else></if>
    }<pos:position pos:line="253" pos:column="6"/></block></for>

    <return pos:line="255" pos:column="5">return <expr><operator pos:line="255" pos:column="12">(<pos:position pos:line="255" pos:column="13"/></operator><name pos:line="255" pos:column="13">ap_conf_vector_t<pos:position pos:line="255" pos:column="29"/></name> <operator pos:line="255" pos:column="30">*<pos:position pos:line="255" pos:column="31"/></operator><operator pos:line="255" pos:column="31">)<pos:position pos:line="255" pos:column="32"/></operator><name pos:line="255" pos:column="32">conf_vector<pos:position pos:line="255" pos:column="43"/></name></expr>;<pos:position pos:line="255" pos:column="44"/></return>
}<pos:position pos:line="256" pos:column="2"/></block>

<function><specifier pos:line="258" pos:column="1">static<pos:position pos:line="258" pos:column="7"/></specifier> <type><name pos:line="258" pos:column="8">ap_conf_vector_t<pos:position pos:line="258" pos:column="24"/></name> <modifier pos:line="258" pos:column="25">*<pos:position pos:line="258" pos:column="26"/></modifier></type><name pos:line="258" pos:column="26">create_server_config<pos:position pos:line="258" pos:column="46"/></name><parameter_list pos:line="258" pos:column="46">(<parameter><decl><type><name pos:line="258" pos:column="47">apr_pool_t<pos:position pos:line="258" pos:column="57"/></name> <modifier pos:line="258" pos:column="58">*<pos:position pos:line="258" pos:column="59"/></modifier></type><name pos:line="258" pos:column="59">p<pos:position pos:line="258" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="258" pos:column="62">server_rec<pos:position pos:line="258" pos:column="72"/></name> <modifier pos:line="258" pos:column="73">*<pos:position pos:line="258" pos:column="74"/></modifier></type><name pos:line="258" pos:column="74">s<pos:position pos:line="258" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="258" pos:column="76"/></parameter_list>
<block pos:line="259" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="260" pos:column="5">void<pos:position pos:line="260" pos:column="9"/></name> <modifier pos:line="260" pos:column="10">*<pos:position pos:line="260" pos:column="11"/></modifier><modifier pos:line="260" pos:column="11">*<pos:position pos:line="260" pos:column="12"/></modifier></type><name pos:line="260" pos:column="12">conf_vector<pos:position pos:line="260" pos:column="23"/></name> <init pos:line="260" pos:column="24">= <expr><call><name pos:line="260" pos:column="26">apr_pcalloc<pos:position pos:line="260" pos:column="37"/></name><argument_list pos:line="260" pos:column="37">(<argument><expr><name pos:line="260" pos:column="38">p<pos:position pos:line="260" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="260" pos:column="41">sizeof<argument_list pos:line="260" pos:column="47">(<argument><expr><name pos:line="260" pos:column="48">void<pos:position pos:line="260" pos:column="52"/></name> <operator pos:line="260" pos:column="53">*<pos:position pos:line="260" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="260" pos:column="55"/></argument_list></sizeof> <operator pos:line="260" pos:column="56">*<pos:position pos:line="260" pos:column="57"/></operator>
                                     <operator pos:line="261" pos:column="38">(<pos:position pos:line="261" pos:column="39"/></operator><name pos:line="261" pos:column="39">total_modules<pos:position pos:line="261" pos:column="52"/></name> <operator pos:line="261" pos:column="53">+<pos:position pos:line="261" pos:column="54"/></operator> <name pos:line="261" pos:column="55">DYNAMIC_MODULE_LIMIT<pos:position pos:line="261" pos:column="75"/></name><operator pos:line="261" pos:column="75">)<pos:position pos:line="261" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="261" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="261" pos:column="78"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="262" pos:column="5">module<pos:position pos:line="262" pos:column="11"/></name> <modifier pos:line="262" pos:column="12">*<pos:position pos:line="262" pos:column="13"/></modifier></type><name pos:line="262" pos:column="13">modp<pos:position pos:line="262" pos:column="17"/></name></decl>;<pos:position pos:line="262" pos:column="18"/></decl_stmt>

    <for pos:line="264" pos:column="5">for <control pos:line="264" pos:column="9">(<init><expr><name pos:line="264" pos:column="10">modp<pos:position pos:line="264" pos:column="14"/></name> <operator pos:line="264" pos:column="15">=<pos:position pos:line="264" pos:column="16"/></operator> <name pos:line="264" pos:column="17">ap_top_module<pos:position pos:line="264" pos:column="30"/></name></expr>;<pos:position pos:line="264" pos:column="31"/></init> <condition><expr><name pos:line="264" pos:column="32">modp<pos:position pos:line="264" pos:column="36"/></name></expr>;<pos:position pos:line="264" pos:column="37"/></condition> <incr><expr><name pos:line="264" pos:column="38">modp<pos:position pos:line="264" pos:column="42"/></name> <operator pos:line="264" pos:column="43">=<pos:position pos:line="264" pos:column="44"/></operator> <name><name pos:line="264" pos:column="45">modp<pos:position pos:line="264" pos:column="49"/></name><operator pos:line="264" pos:column="49">-&gt;<pos:position pos:line="264" pos:column="54"/></operator><name pos:line="264" pos:column="51">next<pos:position pos:line="264" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="264" pos:column="56"/></control> <block pos:line="264" pos:column="57">{
        <if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><name><name pos:line="265" pos:column="13">modp<pos:position pos:line="265" pos:column="17"/></name><operator pos:line="265" pos:column="17">-&gt;<pos:position pos:line="265" pos:column="22"/></operator><name pos:line="265" pos:column="19">create_server_config<pos:position pos:line="265" pos:column="39"/></name></name></expr>)<pos:position pos:line="265" pos:column="40"/></condition><then pos:line="265" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="266" pos:column="13">conf_vector<pos:position pos:line="266" pos:column="24"/></name><index pos:line="266" pos:column="24">[<expr><name><name pos:line="266" pos:column="25">modp<pos:position pos:line="266" pos:column="29"/></name><operator pos:line="266" pos:column="29">-&gt;<pos:position pos:line="266" pos:column="34"/></operator><name pos:line="266" pos:column="31">module_index<pos:position pos:line="266" pos:column="43"/></name></name></expr>]<pos:position pos:line="266" pos:column="44"/></index></name> <operator pos:line="266" pos:column="45">=<pos:position pos:line="266" pos:column="46"/></operator> <call pos:line="266" pos:column="47">(<modifier pos:line="266" pos:column="48">*<pos:position pos:line="266" pos:column="49"/></modifier><name><name pos:line="266" pos:column="49">modp<pos:position pos:line="266" pos:column="53"/></name><operator pos:line="266" pos:column="53">-&gt;<pos:position pos:line="266" pos:column="58"/></operator><name pos:line="266" pos:column="55">create_server_config<pos:position pos:line="266" pos:column="75"/></name></name>)<argument_list pos:line="266" pos:column="76">(<argument><expr><name pos:line="266" pos:column="77">p<pos:position pos:line="266" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="80">s<pos:position pos:line="266" pos:column="81"/></name></expr></argument>)<pos:position pos:line="266" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="83"/></expr_stmt></block></then></if>
    }<pos:position pos:line="267" pos:column="6"/></block></for>

    <return pos:line="269" pos:column="5">return <expr><operator pos:line="269" pos:column="12">(<pos:position pos:line="269" pos:column="13"/></operator><name pos:line="269" pos:column="13">ap_conf_vector_t<pos:position pos:line="269" pos:column="29"/></name> <operator pos:line="269" pos:column="30">*<pos:position pos:line="269" pos:column="31"/></operator><operator pos:line="269" pos:column="31">)<pos:position pos:line="269" pos:column="32"/></operator><name pos:line="269" pos:column="32">conf_vector<pos:position pos:line="269" pos:column="43"/></name></expr>;<pos:position pos:line="269" pos:column="44"/></return>
}<pos:position pos:line="270" pos:column="2"/></block></function>

<function><specifier pos:line="272" pos:column="1">static<pos:position pos:line="272" pos:column="7"/></specifier> <type><name pos:line="272" pos:column="8">void<pos:position pos:line="272" pos:column="12"/></name></type> <name pos:line="272" pos:column="13">merge_server_configs<pos:position pos:line="272" pos:column="33"/></name><parameter_list pos:line="272" pos:column="33">(<parameter><decl><type><name pos:line="272" pos:column="34">apr_pool_t<pos:position pos:line="272" pos:column="44"/></name> <modifier pos:line="272" pos:column="45">*<pos:position pos:line="272" pos:column="46"/></modifier></type><name pos:line="272" pos:column="46">p<pos:position pos:line="272" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="272" pos:column="49">ap_conf_vector_t<pos:position pos:line="272" pos:column="65"/></name> <modifier pos:line="272" pos:column="66">*<pos:position pos:line="272" pos:column="67"/></modifier></type><name pos:line="272" pos:column="67">base<pos:position pos:line="272" pos:column="71"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="273" pos:column="34">ap_conf_vector_t<pos:position pos:line="273" pos:column="50"/></name> <modifier pos:line="273" pos:column="51">*<pos:position pos:line="273" pos:column="52"/></modifier></type><name pos:line="273" pos:column="52">virt<pos:position pos:line="273" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="273" pos:column="57"/></parameter_list>
<block pos:line="274" pos:column="1">{
    <comment type="block" pos:line="275" pos:column="5">/* Can reuse the 'virt' vector for the spine of it, since we don't
     * have to deal with the moral equivalent of .htaccess files here...
     */</comment>

    <decl_stmt><decl><type><name pos:line="279" pos:column="5">void<pos:position pos:line="279" pos:column="9"/></name> <modifier pos:line="279" pos:column="10">*<pos:position pos:line="279" pos:column="11"/></modifier><modifier pos:line="279" pos:column="11">*<pos:position pos:line="279" pos:column="12"/></modifier></type><name pos:line="279" pos:column="12">base_vector<pos:position pos:line="279" pos:column="23"/></name> <init pos:line="279" pos:column="24">= <expr><operator pos:line="279" pos:column="26">(<pos:position pos:line="279" pos:column="27"/></operator><name pos:line="279" pos:column="27">void<pos:position pos:line="279" pos:column="31"/></name> <operator pos:line="279" pos:column="32">*<pos:position pos:line="279" pos:column="33"/></operator><operator pos:line="279" pos:column="33">*<pos:position pos:line="279" pos:column="34"/></operator><operator pos:line="279" pos:column="34">)<pos:position pos:line="279" pos:column="35"/></operator><name pos:line="279" pos:column="35">base<pos:position pos:line="279" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="279" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="280" pos:column="5">void<pos:position pos:line="280" pos:column="9"/></name> <modifier pos:line="280" pos:column="10">*<pos:position pos:line="280" pos:column="11"/></modifier><modifier pos:line="280" pos:column="11">*<pos:position pos:line="280" pos:column="12"/></modifier></type><name pos:line="280" pos:column="12">virt_vector<pos:position pos:line="280" pos:column="23"/></name> <init pos:line="280" pos:column="24">= <expr><operator pos:line="280" pos:column="26">(<pos:position pos:line="280" pos:column="27"/></operator><name pos:line="280" pos:column="27">void<pos:position pos:line="280" pos:column="31"/></name> <operator pos:line="280" pos:column="32">*<pos:position pos:line="280" pos:column="33"/></operator><operator pos:line="280" pos:column="33">*<pos:position pos:line="280" pos:column="34"/></operator><operator pos:line="280" pos:column="34">)<pos:position pos:line="280" pos:column="35"/></operator><name pos:line="280" pos:column="35">virt<pos:position pos:line="280" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="280" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="281" pos:column="5">module<pos:position pos:line="281" pos:column="11"/></name> <modifier pos:line="281" pos:column="12">*<pos:position pos:line="281" pos:column="13"/></modifier></type><name pos:line="281" pos:column="13">modp<pos:position pos:line="281" pos:column="17"/></name></decl>;<pos:position pos:line="281" pos:column="18"/></decl_stmt>

    <for pos:line="283" pos:column="5">for <control pos:line="283" pos:column="9">(<init><expr><name pos:line="283" pos:column="10">modp<pos:position pos:line="283" pos:column="14"/></name> <operator pos:line="283" pos:column="15">=<pos:position pos:line="283" pos:column="16"/></operator> <name pos:line="283" pos:column="17">ap_top_module<pos:position pos:line="283" pos:column="30"/></name></expr>;<pos:position pos:line="283" pos:column="31"/></init> <condition><expr><name pos:line="283" pos:column="32">modp<pos:position pos:line="283" pos:column="36"/></name></expr>;<pos:position pos:line="283" pos:column="37"/></condition> <incr><expr><name pos:line="283" pos:column="38">modp<pos:position pos:line="283" pos:column="42"/></name> <operator pos:line="283" pos:column="43">=<pos:position pos:line="283" pos:column="44"/></operator> <name><name pos:line="283" pos:column="45">modp<pos:position pos:line="283" pos:column="49"/></name><operator pos:line="283" pos:column="49">-&gt;<pos:position pos:line="283" pos:column="54"/></operator><name pos:line="283" pos:column="51">next<pos:position pos:line="283" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="283" pos:column="56"/></control> <block pos:line="283" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="284" pos:column="9">merger_func<pos:position pos:line="284" pos:column="20"/></name></type> <name pos:line="284" pos:column="21">df<pos:position pos:line="284" pos:column="23"/></name> <init pos:line="284" pos:column="24">= <expr><name><name pos:line="284" pos:column="26">modp<pos:position pos:line="284" pos:column="30"/></name><operator pos:line="284" pos:column="30">-&gt;<pos:position pos:line="284" pos:column="35"/></operator><name pos:line="284" pos:column="32">merge_server_config<pos:position pos:line="284" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="284" pos:column="52"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="285" pos:column="9">int<pos:position pos:line="285" pos:column="12"/></name></type> <name pos:line="285" pos:column="13">i<pos:position pos:line="285" pos:column="14"/></name> <init pos:line="285" pos:column="15">= <expr><name><name pos:line="285" pos:column="17">modp<pos:position pos:line="285" pos:column="21"/></name><operator pos:line="285" pos:column="21">-&gt;<pos:position pos:line="285" pos:column="26"/></operator><name pos:line="285" pos:column="23">module_index<pos:position pos:line="285" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="285" pos:column="36"/></decl_stmt>

        <if pos:line="287" pos:column="9">if <condition pos:line="287" pos:column="12">(<expr><operator pos:line="287" pos:column="13">!<pos:position pos:line="287" pos:column="14"/></operator><name><name pos:line="287" pos:column="14">virt_vector<pos:position pos:line="287" pos:column="25"/></name><index pos:line="287" pos:column="25">[<expr><name pos:line="287" pos:column="26">i<pos:position pos:line="287" pos:column="27"/></name></expr>]<pos:position pos:line="287" pos:column="28"/></index></name></expr>)<pos:position pos:line="287" pos:column="29"/></condition><then pos:line="287" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="288" pos:column="13">virt_vector<pos:position pos:line="288" pos:column="24"/></name><index pos:line="288" pos:column="24">[<expr><name pos:line="288" pos:column="25">i<pos:position pos:line="288" pos:column="26"/></name></expr>]<pos:position pos:line="288" pos:column="27"/></index></name> <operator pos:line="288" pos:column="28">=<pos:position pos:line="288" pos:column="29"/></operator> <name><name pos:line="288" pos:column="30">base_vector<pos:position pos:line="288" pos:column="41"/></name><index pos:line="288" pos:column="41">[<expr><name pos:line="288" pos:column="42">i<pos:position pos:line="288" pos:column="43"/></name></expr>]<pos:position pos:line="288" pos:column="44"/></index></name></expr>;<pos:position pos:line="288" pos:column="45"/></expr_stmt></block></then>
        <elseif pos:line="289" pos:column="9">else <if pos:line="289" pos:column="14">if <condition pos:line="289" pos:column="17">(<expr><name pos:line="289" pos:column="18">df<pos:position pos:line="289" pos:column="20"/></name></expr>)<pos:position pos:line="289" pos:column="21"/></condition><then pos:line="289" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="290" pos:column="13">virt_vector<pos:position pos:line="290" pos:column="24"/></name><index pos:line="290" pos:column="24">[<expr><name pos:line="290" pos:column="25">i<pos:position pos:line="290" pos:column="26"/></name></expr>]<pos:position pos:line="290" pos:column="27"/></index></name> <operator pos:line="290" pos:column="28">=<pos:position pos:line="290" pos:column="29"/></operator> <call pos:line="290" pos:column="30">(<modifier pos:line="290" pos:column="31">*<pos:position pos:line="290" pos:column="32"/></modifier><name pos:line="290" pos:column="32">df<pos:position pos:line="290" pos:column="34"/></name>)<argument_list pos:line="290" pos:column="35">(<argument><expr><name pos:line="290" pos:column="36">p<pos:position pos:line="290" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="290" pos:column="39">base_vector<pos:position pos:line="290" pos:column="50"/></name><index pos:line="290" pos:column="50">[<expr><name pos:line="290" pos:column="51">i<pos:position pos:line="290" pos:column="52"/></name></expr>]<pos:position pos:line="290" pos:column="53"/></index></name></expr></argument>, <argument><expr><name><name pos:line="290" pos:column="55">virt_vector<pos:position pos:line="290" pos:column="66"/></name><index pos:line="290" pos:column="66">[<expr><name pos:line="290" pos:column="67">i<pos:position pos:line="290" pos:column="68"/></name></expr>]<pos:position pos:line="290" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="290" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="71"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="291" pos:column="6"/></block></for>
}<pos:position pos:line="292" pos:column="2"/></block></function>

<macro><name pos:line="294" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="294" pos:column="16"/></name><argument_list pos:line="294" pos:column="16">(<argument pos:line="294" pos:column="17">ap_conf_vector_t *<pos:position pos:line="294" pos:column="35"/></argument>)<pos:position pos:line="294" pos:column="36"/></argument_list></macro> <macro><name pos:line="294" pos:column="37">ap_create_request_config<pos:position pos:line="294" pos:column="61"/></name><argument_list pos:line="294" pos:column="61">(<argument pos:line="294" pos:column="62">apr_pool_t *p<pos:position pos:line="294" pos:column="75"/></argument>)<pos:position pos:line="294" pos:column="76"/></argument_list></macro>
<block pos:line="295" pos:column="1">{
    <return pos:line="296" pos:column="5">return <expr><call><name pos:line="296" pos:column="12">create_empty_config<pos:position pos:line="296" pos:column="31"/></name><argument_list pos:line="296" pos:column="31">(<argument><expr><name pos:line="296" pos:column="32">p<pos:position pos:line="296" pos:column="33"/></name></expr></argument>)<pos:position pos:line="296" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="35"/></return>
}<pos:position pos:line="297" pos:column="2"/></block>

<macro><name pos:line="299" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="299" pos:column="16"/></name><argument_list pos:line="299" pos:column="16">(<argument pos:line="299" pos:column="17">ap_conf_vector_t *<pos:position pos:line="299" pos:column="35"/></argument>)<pos:position pos:line="299" pos:column="36"/></argument_list></macro> <macro><name pos:line="299" pos:column="37">ap_create_conn_config<pos:position pos:line="299" pos:column="58"/></name><argument_list pos:line="299" pos:column="58">(<argument pos:line="299" pos:column="59">apr_pool_t *p<pos:position pos:line="299" pos:column="72"/></argument>)<pos:position pos:line="299" pos:column="73"/></argument_list></macro>
<block pos:line="300" pos:column="1">{
    <return pos:line="301" pos:column="5">return <expr><call><name pos:line="301" pos:column="12">create_empty_config<pos:position pos:line="301" pos:column="31"/></name><argument_list pos:line="301" pos:column="31">(<argument><expr><name pos:line="301" pos:column="32">p<pos:position pos:line="301" pos:column="33"/></name></expr></argument>)<pos:position pos:line="301" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="35"/></return>
}<pos:position pos:line="302" pos:column="2"/></block>

<macro><name pos:line="304" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="304" pos:column="16"/></name><argument_list pos:line="304" pos:column="16">(<argument pos:line="304" pos:column="17">ap_conf_vector_t *<pos:position pos:line="304" pos:column="35"/></argument>)<pos:position pos:line="304" pos:column="36"/></argument_list></macro> <macro><name pos:line="304" pos:column="37">ap_create_per_dir_config<pos:position pos:line="304" pos:column="61"/></name><argument_list pos:line="304" pos:column="61">(<argument pos:line="304" pos:column="62">apr_pool_t *p<pos:position pos:line="304" pos:column="75"/></argument>)<pos:position pos:line="304" pos:column="76"/></argument_list></macro>
<block pos:line="305" pos:column="1">{
    <return pos:line="306" pos:column="5">return <expr><call><name pos:line="306" pos:column="12">create_empty_config<pos:position pos:line="306" pos:column="31"/></name><argument_list pos:line="306" pos:column="31">(<argument><expr><name pos:line="306" pos:column="32">p<pos:position pos:line="306" pos:column="33"/></name></expr></argument>)<pos:position pos:line="306" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="35"/></return>
}<pos:position pos:line="307" pos:column="2"/></block>

<comment type="block" pos:line="309" pos:column="1">/* Invoke the filter_init_func for all filters with FILTERS where f-&gt;r
 * matches R.  Restricting to a matching R avoids re-running init
 * functions for filters configured for r-&gt;main where r is a
 * subrequest.  */</comment>
<function><specifier pos:line="313" pos:column="1">static<pos:position pos:line="313" pos:column="7"/></specifier> <type><name pos:line="313" pos:column="8">int<pos:position pos:line="313" pos:column="11"/></name></type> <name pos:line="313" pos:column="12">invoke_filter_init<pos:position pos:line="313" pos:column="30"/></name><parameter_list pos:line="313" pos:column="30">(<parameter><decl><type><name pos:line="313" pos:column="31">request_rec<pos:position pos:line="313" pos:column="42"/></name> <modifier pos:line="313" pos:column="43">*<pos:position pos:line="313" pos:column="44"/></modifier></type><name pos:line="313" pos:column="44">r<pos:position pos:line="313" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="313" pos:column="47">ap_filter_t<pos:position pos:line="313" pos:column="58"/></name> <modifier pos:line="313" pos:column="59">*<pos:position pos:line="313" pos:column="60"/></modifier></type><name pos:line="313" pos:column="60">filters<pos:position pos:line="313" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="313" pos:column="68"/></parameter_list>
<block pos:line="314" pos:column="1">{
    <while pos:line="315" pos:column="5">while <condition pos:line="315" pos:column="11">(<expr><name pos:line="315" pos:column="12">filters<pos:position pos:line="315" pos:column="19"/></name></expr>)<pos:position pos:line="315" pos:column="20"/></condition> <block pos:line="315" pos:column="21">{
        <if pos:line="316" pos:column="9">if <condition pos:line="316" pos:column="12">(<expr><name><name pos:line="316" pos:column="13">filters<pos:position pos:line="316" pos:column="20"/></name><operator pos:line="316" pos:column="20">-&gt;<pos:position pos:line="316" pos:column="25"/></operator><name pos:line="316" pos:column="22">frec<pos:position pos:line="316" pos:column="26"/></name><operator pos:line="316" pos:column="26">-&gt;<pos:position pos:line="316" pos:column="31"/></operator><name pos:line="316" pos:column="28">filter_init_func<pos:position pos:line="316" pos:column="44"/></name></name> <operator pos:line="316" pos:column="45">&amp;&amp;<pos:position pos:line="316" pos:column="55"/></operator> <name><name pos:line="316" pos:column="48">filters<pos:position pos:line="316" pos:column="55"/></name><operator pos:line="316" pos:column="55">-&gt;<pos:position pos:line="316" pos:column="60"/></operator><name pos:line="316" pos:column="57">r<pos:position pos:line="316" pos:column="58"/></name></name> <operator pos:line="316" pos:column="59">==<pos:position pos:line="316" pos:column="61"/></operator> <name pos:line="316" pos:column="62">r<pos:position pos:line="316" pos:column="63"/></name></expr>)<pos:position pos:line="316" pos:column="64"/></condition><then pos:line="316" pos:column="64"> <block pos:line="316" pos:column="65">{
            <decl_stmt><decl><type><name pos:line="317" pos:column="13">int<pos:position pos:line="317" pos:column="16"/></name></type> <name pos:line="317" pos:column="17">result<pos:position pos:line="317" pos:column="23"/></name> <init pos:line="317" pos:column="24">= <expr><call><name><name pos:line="317" pos:column="26">filters<pos:position pos:line="317" pos:column="33"/></name><operator pos:line="317" pos:column="33">-&gt;<pos:position pos:line="317" pos:column="38"/></operator><name pos:line="317" pos:column="35">frec<pos:position pos:line="317" pos:column="39"/></name><operator pos:line="317" pos:column="39">-&gt;<pos:position pos:line="317" pos:column="44"/></operator><name pos:line="317" pos:column="41">filter_init_func<pos:position pos:line="317" pos:column="57"/></name></name><argument_list pos:line="317" pos:column="57">(<argument><expr><name pos:line="317" pos:column="58">filters<pos:position pos:line="317" pos:column="65"/></name></expr></argument>)<pos:position pos:line="317" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="317" pos:column="67"/></decl_stmt>
            <if pos:line="318" pos:column="13">if <condition pos:line="318" pos:column="16">(<expr><name pos:line="318" pos:column="17">result<pos:position pos:line="318" pos:column="23"/></name> <operator pos:line="318" pos:column="24">!=<pos:position pos:line="318" pos:column="26"/></operator> <name pos:line="318" pos:column="27">OK<pos:position pos:line="318" pos:column="29"/></name></expr>)<pos:position pos:line="318" pos:column="30"/></condition><then pos:line="318" pos:column="30"> <block pos:line="318" pos:column="31">{
                <return pos:line="319" pos:column="17">return <expr><name pos:line="319" pos:column="24">result<pos:position pos:line="319" pos:column="30"/></name></expr>;<pos:position pos:line="319" pos:column="31"/></return>
            }<pos:position pos:line="320" pos:column="14"/></block></then></if>
        }<pos:position pos:line="321" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="322" pos:column="9">filters<pos:position pos:line="322" pos:column="16"/></name> <operator pos:line="322" pos:column="17">=<pos:position pos:line="322" pos:column="18"/></operator> <name><name pos:line="322" pos:column="19">filters<pos:position pos:line="322" pos:column="26"/></name><operator pos:line="322" pos:column="26">-&gt;<pos:position pos:line="322" pos:column="31"/></operator><name pos:line="322" pos:column="28">next<pos:position pos:line="322" pos:column="32"/></name></name></expr>;<pos:position pos:line="322" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="323" pos:column="6"/></block></while>
    <return pos:line="324" pos:column="5">return <expr><name pos:line="324" pos:column="12">OK<pos:position pos:line="324" pos:column="14"/></name></expr>;<pos:position pos:line="324" pos:column="15"/></return>
}<pos:position pos:line="325" pos:column="2"/></block></function>

<macro><name pos:line="327" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="327" pos:column="16"/></name><argument_list pos:line="327" pos:column="16">(<argument pos:line="327" pos:column="17">int<pos:position pos:line="327" pos:column="20"/></argument>)<pos:position pos:line="327" pos:column="21"/></argument_list></macro> <macro><name pos:line="327" pos:column="22">ap_invoke_handler<pos:position pos:line="327" pos:column="39"/></name><argument_list pos:line="327" pos:column="39">(<argument pos:line="327" pos:column="40">request_rec *r<pos:position pos:line="327" pos:column="54"/></argument>)<pos:position pos:line="327" pos:column="55"/></argument_list></macro>
<block pos:line="328" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="329" pos:column="5">const<pos:position pos:line="329" pos:column="10"/></specifier> <name pos:line="329" pos:column="11">char<pos:position pos:line="329" pos:column="15"/></name> <modifier pos:line="329" pos:column="16">*<pos:position pos:line="329" pos:column="17"/></modifier></type><name pos:line="329" pos:column="17">handler<pos:position pos:line="329" pos:column="24"/></name></decl>;<pos:position pos:line="329" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="330" pos:column="5">const<pos:position pos:line="330" pos:column="10"/></specifier> <name pos:line="330" pos:column="11">char<pos:position pos:line="330" pos:column="15"/></name> <modifier pos:line="330" pos:column="16">*<pos:position pos:line="330" pos:column="17"/></modifier></type><name pos:line="330" pos:column="17">p<pos:position pos:line="330" pos:column="18"/></name></decl>;<pos:position pos:line="330" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="331" pos:column="5">int<pos:position pos:line="331" pos:column="8"/></name></type> <name pos:line="331" pos:column="9">result<pos:position pos:line="331" pos:column="15"/></name></decl>;<pos:position pos:line="331" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="332" pos:column="5">const<pos:position pos:line="332" pos:column="10"/></specifier> <name pos:line="332" pos:column="11">char<pos:position pos:line="332" pos:column="15"/></name> <modifier pos:line="332" pos:column="16">*<pos:position pos:line="332" pos:column="17"/></modifier></type><name pos:line="332" pos:column="17">old_handler<pos:position pos:line="332" pos:column="28"/></name> <init pos:line="332" pos:column="29">= <expr><name><name pos:line="332" pos:column="31">r<pos:position pos:line="332" pos:column="32"/></name><operator pos:line="332" pos:column="32">-&gt;<pos:position pos:line="332" pos:column="37"/></operator><name pos:line="332" pos:column="34">handler<pos:position pos:line="332" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="332" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="333" pos:column="5">const<pos:position pos:line="333" pos:column="10"/></specifier> <name pos:line="333" pos:column="11">char<pos:position pos:line="333" pos:column="15"/></name> <modifier pos:line="333" pos:column="16">*<pos:position pos:line="333" pos:column="17"/></modifier></type><name pos:line="333" pos:column="17">ignore<pos:position pos:line="333" pos:column="23"/></name></decl>;<pos:position pos:line="333" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="335" pos:column="5">/*
     * The new insert_filter stage makes the most sense here.  We only use
     * it when we are going to run the request, so we must insert filters
     * if any are available.  Since the goal of this phase is to allow all
     * modules to insert a filter if they want to, this filter returns
     * void.  I just can't see any way that this filter can reasonably
     * fail, either your modules inserts something or it doesn't.  rbb
     */</comment>
    <expr_stmt><expr><call><name pos:line="343" pos:column="5">ap_run_insert_filter<pos:position pos:line="343" pos:column="25"/></name><argument_list pos:line="343" pos:column="25">(<argument><expr><name pos:line="343" pos:column="26">r<pos:position pos:line="343" pos:column="27"/></name></expr></argument>)<pos:position pos:line="343" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="345" pos:column="5">/* Before continuing, allow each filter that is in the two chains to
     * run their init function to let them do any magic before we could
     * start generating data.
     */</comment>
    <expr_stmt><expr><name pos:line="349" pos:column="5">result<pos:position pos:line="349" pos:column="11"/></name> <operator pos:line="349" pos:column="12">=<pos:position pos:line="349" pos:column="13"/></operator> <call><name pos:line="349" pos:column="14">invoke_filter_init<pos:position pos:line="349" pos:column="32"/></name><argument_list pos:line="349" pos:column="32">(<argument><expr><name pos:line="349" pos:column="33">r<pos:position pos:line="349" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="349" pos:column="36">r<pos:position pos:line="349" pos:column="37"/></name><operator pos:line="349" pos:column="37">-&gt;<pos:position pos:line="349" pos:column="42"/></operator><name pos:line="349" pos:column="39">input_filters<pos:position pos:line="349" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="349" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="54"/></expr_stmt>
    <if pos:line="350" pos:column="5">if <condition pos:line="350" pos:column="8">(<expr><name pos:line="350" pos:column="9">result<pos:position pos:line="350" pos:column="15"/></name> <operator pos:line="350" pos:column="16">!=<pos:position pos:line="350" pos:column="18"/></operator> <name pos:line="350" pos:column="19">OK<pos:position pos:line="350" pos:column="21"/></name></expr>)<pos:position pos:line="350" pos:column="22"/></condition><then pos:line="350" pos:column="22"> <block pos:line="350" pos:column="23">{
        <return pos:line="351" pos:column="9">return <expr><name pos:line="351" pos:column="16">result<pos:position pos:line="351" pos:column="22"/></name></expr>;<pos:position pos:line="351" pos:column="23"/></return>
    }<pos:position pos:line="352" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="353" pos:column="5">result<pos:position pos:line="353" pos:column="11"/></name> <operator pos:line="353" pos:column="12">=<pos:position pos:line="353" pos:column="13"/></operator> <call><name pos:line="353" pos:column="14">invoke_filter_init<pos:position pos:line="353" pos:column="32"/></name><argument_list pos:line="353" pos:column="32">(<argument><expr><name pos:line="353" pos:column="33">r<pos:position pos:line="353" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="353" pos:column="36">r<pos:position pos:line="353" pos:column="37"/></name><operator pos:line="353" pos:column="37">-&gt;<pos:position pos:line="353" pos:column="42"/></operator><name pos:line="353" pos:column="39">output_filters<pos:position pos:line="353" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="353" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="55"/></expr_stmt>
    <if pos:line="354" pos:column="5">if <condition pos:line="354" pos:column="8">(<expr><name pos:line="354" pos:column="9">result<pos:position pos:line="354" pos:column="15"/></name> <operator pos:line="354" pos:column="16">!=<pos:position pos:line="354" pos:column="18"/></operator> <name pos:line="354" pos:column="19">OK<pos:position pos:line="354" pos:column="21"/></name></expr>)<pos:position pos:line="354" pos:column="22"/></condition><then pos:line="354" pos:column="22"> <block pos:line="354" pos:column="23">{
        <return pos:line="355" pos:column="9">return <expr><name pos:line="355" pos:column="16">result<pos:position pos:line="355" pos:column="22"/></name></expr>;<pos:position pos:line="355" pos:column="23"/></return>
    }<pos:position pos:line="356" pos:column="6"/></block></then></if>

    <if pos:line="358" pos:column="5">if <condition pos:line="358" pos:column="8">(<expr><operator pos:line="358" pos:column="9">!<pos:position pos:line="358" pos:column="10"/></operator><name><name pos:line="358" pos:column="10">r<pos:position pos:line="358" pos:column="11"/></name><operator pos:line="358" pos:column="11">-&gt;<pos:position pos:line="358" pos:column="16"/></operator><name pos:line="358" pos:column="13">handler<pos:position pos:line="358" pos:column="20"/></name></name></expr>)<pos:position pos:line="358" pos:column="21"/></condition><then pos:line="358" pos:column="21"> <block pos:line="358" pos:column="22">{
        <expr_stmt><expr><name pos:line="359" pos:column="9">handler<pos:position pos:line="359" pos:column="16"/></name> <operator pos:line="359" pos:column="17">=<pos:position pos:line="359" pos:column="18"/></operator> <ternary><condition><expr><name><name pos:line="359" pos:column="19">r<pos:position pos:line="359" pos:column="20"/></name><operator pos:line="359" pos:column="20">-&gt;<pos:position pos:line="359" pos:column="25"/></operator><name pos:line="359" pos:column="22">content_type<pos:position pos:line="359" pos:column="34"/></name></name></expr> ?<pos:position pos:line="359" pos:column="36"/></condition><then pos:line="359" pos:column="36"> <expr><name><name pos:line="359" pos:column="37">r<pos:position pos:line="359" pos:column="38"/></name><operator pos:line="359" pos:column="38">-&gt;<pos:position pos:line="359" pos:column="43"/></operator><name pos:line="359" pos:column="40">content_type<pos:position pos:line="359" pos:column="52"/></name></name></expr> <pos:position pos:line="359" pos:column="53"/></then><else pos:line="359" pos:column="53">: <expr><call><name pos:line="359" pos:column="55">ap_default_type<pos:position pos:line="359" pos:column="70"/></name><argument_list pos:line="359" pos:column="70">(<argument><expr><name pos:line="359" pos:column="71">r<pos:position pos:line="359" pos:column="72"/></name></expr></argument>)<pos:position pos:line="359" pos:column="73"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="359" pos:column="74"/></expr_stmt>
        <if pos:line="360" pos:column="9">if <condition pos:line="360" pos:column="12">(<expr><operator pos:line="360" pos:column="13">(<pos:position pos:line="360" pos:column="14"/></operator><name pos:line="360" pos:column="14">p<pos:position pos:line="360" pos:column="15"/></name><operator pos:line="360" pos:column="15">=<pos:position pos:line="360" pos:column="16"/></operator><call><name pos:line="360" pos:column="16">ap_strchr_c<pos:position pos:line="360" pos:column="27"/></name><argument_list pos:line="360" pos:column="27">(<argument><expr><name pos:line="360" pos:column="28">handler<pos:position pos:line="360" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="360" pos:column="37">';'<pos:position pos:line="360" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="360" pos:column="41"/></argument_list></call><operator pos:line="360" pos:column="41">)<pos:position pos:line="360" pos:column="42"/></operator> <operator pos:line="360" pos:column="43">!=<pos:position pos:line="360" pos:column="45"/></operator> <name pos:line="360" pos:column="46">NULL<pos:position pos:line="360" pos:column="50"/></name></expr>)<pos:position pos:line="360" pos:column="51"/></condition><then pos:line="360" pos:column="51"> <block pos:line="360" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="361" pos:column="13">char<pos:position pos:line="361" pos:column="17"/></name> <modifier pos:line="361" pos:column="18">*<pos:position pos:line="361" pos:column="19"/></modifier></type><name pos:line="361" pos:column="19">new_handler<pos:position pos:line="361" pos:column="30"/></name> <init pos:line="361" pos:column="31">= <expr><operator pos:line="361" pos:column="33">(<pos:position pos:line="361" pos:column="34"/></operator><name pos:line="361" pos:column="34">char<pos:position pos:line="361" pos:column="38"/></name> <operator pos:line="361" pos:column="39">*<pos:position pos:line="361" pos:column="40"/></operator><operator pos:line="361" pos:column="40">)<pos:position pos:line="361" pos:column="41"/></operator><call><name pos:line="361" pos:column="41">apr_pmemdup<pos:position pos:line="361" pos:column="52"/></name><argument_list pos:line="361" pos:column="52">(<argument><expr><name><name pos:line="361" pos:column="53">r<pos:position pos:line="361" pos:column="54"/></name><operator pos:line="361" pos:column="54">-&gt;<pos:position pos:line="361" pos:column="59"/></operator><name pos:line="361" pos:column="56">pool<pos:position pos:line="361" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="62">handler<pos:position pos:line="361" pos:column="69"/></name></expr></argument>,
                                                    <argument><expr><name pos:line="362" pos:column="53">p<pos:position pos:line="362" pos:column="54"/></name> <operator pos:line="362" pos:column="55">-<pos:position pos:line="362" pos:column="56"/></operator> <name pos:line="362" pos:column="57">handler<pos:position pos:line="362" pos:column="64"/></name> <operator pos:line="362" pos:column="65">+<pos:position pos:line="362" pos:column="66"/></operator> <literal type="number" pos:line="362" pos:column="67">1<pos:position pos:line="362" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="362" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="362" pos:column="70"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="363" pos:column="13">char<pos:position pos:line="363" pos:column="17"/></name> <modifier pos:line="363" pos:column="18">*<pos:position pos:line="363" pos:column="19"/></modifier></type><name pos:line="363" pos:column="19">p2<pos:position pos:line="363" pos:column="21"/></name> <init pos:line="363" pos:column="22">= <expr><name pos:line="363" pos:column="24">new_handler<pos:position pos:line="363" pos:column="35"/></name> <operator pos:line="363" pos:column="36">+<pos:position pos:line="363" pos:column="37"/></operator> <operator pos:line="363" pos:column="38">(<pos:position pos:line="363" pos:column="39"/></operator><name pos:line="363" pos:column="39">p<pos:position pos:line="363" pos:column="40"/></name> <operator pos:line="363" pos:column="41">-<pos:position pos:line="363" pos:column="42"/></operator> <name pos:line="363" pos:column="43">handler<pos:position pos:line="363" pos:column="50"/></name><operator pos:line="363" pos:column="50">)<pos:position pos:line="363" pos:column="51"/></operator></expr></init></decl>;<pos:position pos:line="363" pos:column="52"/></decl_stmt>
            <expr_stmt><expr><name pos:line="364" pos:column="13">handler<pos:position pos:line="364" pos:column="20"/></name> <operator pos:line="364" pos:column="21">=<pos:position pos:line="364" pos:column="22"/></operator> <name pos:line="364" pos:column="23">new_handler<pos:position pos:line="364" pos:column="34"/></name></expr>;<pos:position pos:line="364" pos:column="35"/></expr_stmt>

            <comment type="block" pos:line="366" pos:column="13">/* MIME type arguments */</comment>
            <while pos:line="367" pos:column="13">while <condition pos:line="367" pos:column="19">(<expr><name pos:line="367" pos:column="20">p2<pos:position pos:line="367" pos:column="22"/></name> <operator pos:line="367" pos:column="23">&gt;<pos:position pos:line="367" pos:column="27"/></operator> <name pos:line="367" pos:column="25">handler<pos:position pos:line="367" pos:column="32"/></name> <operator pos:line="367" pos:column="33">&amp;&amp;<pos:position pos:line="367" pos:column="43"/></operator> <name><name pos:line="367" pos:column="36">p2<pos:position pos:line="367" pos:column="38"/></name><index pos:line="367" pos:column="38">[<expr><operator pos:line="367" pos:column="39">-<pos:position pos:line="367" pos:column="40"/></operator><literal type="number" pos:line="367" pos:column="40">1<pos:position pos:line="367" pos:column="41"/></literal></expr>]<pos:position pos:line="367" pos:column="42"/></index></name> <operator pos:line="367" pos:column="43">==<pos:position pos:line="367" pos:column="45"/></operator> <literal type="char" pos:line="367" pos:column="46">' '<pos:position pos:line="367" pos:column="49"/></literal></expr>)<pos:position pos:line="367" pos:column="50"/></condition>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="368" pos:column="17">--<pos:position pos:line="368" pos:column="19"/></operator><name pos:line="368" pos:column="19">p2<pos:position pos:line="368" pos:column="21"/></name></expr>;<pos:position pos:line="368" pos:column="22"/></expr_stmt></block></while> <comment type="block" pos:line="368" pos:column="23">/* strip trailing spaces */</comment>

            <expr_stmt><expr><operator pos:line="370" pos:column="13">*<pos:position pos:line="370" pos:column="14"/></operator><name pos:line="370" pos:column="14">p2<pos:position pos:line="370" pos:column="16"/></name><operator pos:line="370" pos:column="16">=<pos:position pos:line="370" pos:column="17"/></operator><literal type="char" pos:line="370" pos:column="17">'\0'<pos:position pos:line="370" pos:column="21"/></literal></expr>;<pos:position pos:line="370" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="371" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="373" pos:column="9">r<pos:position pos:line="373" pos:column="10"/></name><operator pos:line="373" pos:column="10">-&gt;<pos:position pos:line="373" pos:column="15"/></operator><name pos:line="373" pos:column="12">handler<pos:position pos:line="373" pos:column="19"/></name></name> <operator pos:line="373" pos:column="20">=<pos:position pos:line="373" pos:column="21"/></operator> <name pos:line="373" pos:column="22">handler<pos:position pos:line="373" pos:column="29"/></name></expr>;<pos:position pos:line="373" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="374" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="376" pos:column="5">result<pos:position pos:line="376" pos:column="11"/></name> <operator pos:line="376" pos:column="12">=<pos:position pos:line="376" pos:column="13"/></operator> <call><name pos:line="376" pos:column="14">ap_run_handler<pos:position pos:line="376" pos:column="28"/></name><argument_list pos:line="376" pos:column="28">(<argument><expr><name pos:line="376" pos:column="29">r<pos:position pos:line="376" pos:column="30"/></name></expr></argument>)<pos:position pos:line="376" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="378" pos:column="5">r<pos:position pos:line="378" pos:column="6"/></name><operator pos:line="378" pos:column="6">-&gt;<pos:position pos:line="378" pos:column="11"/></operator><name pos:line="378" pos:column="8">handler<pos:position pos:line="378" pos:column="15"/></name></name> <operator pos:line="378" pos:column="16">=<pos:position pos:line="378" pos:column="17"/></operator> <name pos:line="378" pos:column="18">old_handler<pos:position pos:line="378" pos:column="29"/></name></expr>;<pos:position pos:line="378" pos:column="30"/></expr_stmt>

    <if pos:line="380" pos:column="5">if <condition pos:line="380" pos:column="8">(<expr><name pos:line="380" pos:column="9">result<pos:position pos:line="380" pos:column="15"/></name> <operator pos:line="380" pos:column="16">==<pos:position pos:line="380" pos:column="18"/></operator> <name pos:line="380" pos:column="19">DECLINED<pos:position pos:line="380" pos:column="27"/></name> <operator pos:line="380" pos:column="28">&amp;&amp;<pos:position pos:line="380" pos:column="38"/></operator> <name><name pos:line="380" pos:column="31">r<pos:position pos:line="380" pos:column="32"/></name><operator pos:line="380" pos:column="32">-&gt;<pos:position pos:line="380" pos:column="37"/></operator><name pos:line="380" pos:column="34">handler<pos:position pos:line="380" pos:column="41"/></name></name> <operator pos:line="380" pos:column="42">&amp;&amp;<pos:position pos:line="380" pos:column="52"/></operator> <name><name pos:line="380" pos:column="45">r<pos:position pos:line="380" pos:column="46"/></name><operator pos:line="380" pos:column="46">-&gt;<pos:position pos:line="380" pos:column="51"/></operator><name pos:line="380" pos:column="48">filename<pos:position pos:line="380" pos:column="56"/></name></name></expr>)<pos:position pos:line="380" pos:column="57"/></condition><then pos:line="380" pos:column="57"> <block pos:line="380" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="381" pos:column="9">ap_log_rerror<pos:position pos:line="381" pos:column="22"/></name><argument_list pos:line="381" pos:column="22">(<argument><expr><name pos:line="381" pos:column="23">APLOG_MARK<pos:position pos:line="381" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="35">APLOG_WARNING<pos:position pos:line="381" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="381" pos:column="50">0<pos:position pos:line="381" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="381" pos:column="53">r<pos:position pos:line="381" pos:column="54"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="382" pos:column="13">"handler \"%s\" not found for: %s"<pos:position pos:line="382" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="382" pos:column="49">r<pos:position pos:line="382" pos:column="50"/></name><operator pos:line="382" pos:column="50">-&gt;<pos:position pos:line="382" pos:column="55"/></operator><name pos:line="382" pos:column="52">handler<pos:position pos:line="382" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="382" pos:column="61">r<pos:position pos:line="382" pos:column="62"/></name><operator pos:line="382" pos:column="62">-&gt;<pos:position pos:line="382" pos:column="67"/></operator><name pos:line="382" pos:column="64">filename<pos:position pos:line="382" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="382" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="383" pos:column="6"/></block></then></if>
    <if pos:line="384" pos:column="5">if <condition pos:line="384" pos:column="8">(<expr><operator pos:line="384" pos:column="9">(<pos:position pos:line="384" pos:column="10"/></operator><name pos:line="384" pos:column="10">result<pos:position pos:line="384" pos:column="16"/></name> <operator pos:line="384" pos:column="17">!=<pos:position pos:line="384" pos:column="19"/></operator> <name pos:line="384" pos:column="20">OK<pos:position pos:line="384" pos:column="22"/></name><operator pos:line="384" pos:column="22">)<pos:position pos:line="384" pos:column="23"/></operator> <operator pos:line="384" pos:column="24">&amp;&amp;<pos:position pos:line="384" pos:column="34"/></operator> <operator pos:line="384" pos:column="27">(<pos:position pos:line="384" pos:column="28"/></operator><name pos:line="384" pos:column="28">result<pos:position pos:line="384" pos:column="34"/></name> <operator pos:line="384" pos:column="35">!=<pos:position pos:line="384" pos:column="37"/></operator> <name pos:line="384" pos:column="38">DONE<pos:position pos:line="384" pos:column="42"/></name><operator pos:line="384" pos:column="42">)<pos:position pos:line="384" pos:column="43"/></operator> <operator pos:line="384" pos:column="44">&amp;&amp;<pos:position pos:line="384" pos:column="54"/></operator> <operator pos:line="384" pos:column="47">(<pos:position pos:line="384" pos:column="48"/></operator><name pos:line="384" pos:column="48">result<pos:position pos:line="384" pos:column="54"/></name> <operator pos:line="384" pos:column="55">!=<pos:position pos:line="384" pos:column="57"/></operator> <name pos:line="384" pos:column="58">DECLINED<pos:position pos:line="384" pos:column="66"/></name><operator pos:line="384" pos:column="66">)<pos:position pos:line="384" pos:column="67"/></operator>
        <operator pos:line="385" pos:column="9">&amp;&amp;<pos:position pos:line="385" pos:column="19"/></operator> <operator pos:line="385" pos:column="12">(<pos:position pos:line="385" pos:column="13"/></operator><name pos:line="385" pos:column="13">result<pos:position pos:line="385" pos:column="19"/></name> <operator pos:line="385" pos:column="20">!=<pos:position pos:line="385" pos:column="22"/></operator> <name pos:line="385" pos:column="23">AP_FILTER_ERROR<pos:position pos:line="385" pos:column="38"/></name><operator pos:line="385" pos:column="38">)<pos:position pos:line="385" pos:column="39"/></operator>
        <operator pos:line="386" pos:column="9">&amp;&amp;<pos:position pos:line="386" pos:column="19"/></operator> <operator pos:line="386" pos:column="12">!<pos:position pos:line="386" pos:column="13"/></operator><call><name pos:line="386" pos:column="13">ap_is_HTTP_VALID_RESPONSE<pos:position pos:line="386" pos:column="38"/></name><argument_list pos:line="386" pos:column="38">(<argument><expr><name pos:line="386" pos:column="39">result<pos:position pos:line="386" pos:column="45"/></name></expr></argument>)<pos:position pos:line="386" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="386" pos:column="47"/></condition><then pos:line="386" pos:column="47"> <block pos:line="386" pos:column="48">{
        <comment type="block" pos:line="387" pos:column="9">/* If a module is deliberately returning something else
         * (request_rec in non-HTTP or proprietary extension?)
         * let it set a note to allow it explicitly.
         * Otherwise, a return code that is neither reserved nor HTTP
         * is a bug, as in PR#31759.
         */</comment>
        <expr_stmt><expr><name pos:line="393" pos:column="9">ignore<pos:position pos:line="393" pos:column="15"/></name> <operator pos:line="393" pos:column="16">=<pos:position pos:line="393" pos:column="17"/></operator> <call><name pos:line="393" pos:column="18">apr_table_get<pos:position pos:line="393" pos:column="31"/></name><argument_list pos:line="393" pos:column="31">(<argument><expr><name><name pos:line="393" pos:column="32">r<pos:position pos:line="393" pos:column="33"/></name><operator pos:line="393" pos:column="33">-&gt;<pos:position pos:line="393" pos:column="38"/></operator><name pos:line="393" pos:column="35">notes<pos:position pos:line="393" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="393" pos:column="42">"HTTP_IGNORE_RANGE"<pos:position pos:line="393" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="393" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="63"/></expr_stmt>
        <if pos:line="394" pos:column="9">if <condition pos:line="394" pos:column="12">(<expr><operator pos:line="394" pos:column="13">!<pos:position pos:line="394" pos:column="14"/></operator><name pos:line="394" pos:column="14">ignore<pos:position pos:line="394" pos:column="20"/></name></expr>)<pos:position pos:line="394" pos:column="21"/></condition><then pos:line="394" pos:column="21"> <block pos:line="394" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="395" pos:column="13">ap_log_rerror<pos:position pos:line="395" pos:column="26"/></name><argument_list pos:line="395" pos:column="26">(<argument><expr><name pos:line="395" pos:column="27">APLOG_MARK<pos:position pos:line="395" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="39">APLOG_ERR<pos:position pos:line="395" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="395" pos:column="50">0<pos:position pos:line="395" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="395" pos:column="53">r<pos:position pos:line="395" pos:column="54"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="396" pos:column="27">"Handler for %s returned invalid result code %d"<pos:position pos:line="396" pos:column="75"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="397" pos:column="27">r<pos:position pos:line="397" pos:column="28"/></name><operator pos:line="397" pos:column="28">-&gt;<pos:position pos:line="397" pos:column="33"/></operator><name pos:line="397" pos:column="30">handler<pos:position pos:line="397" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="39">result<pos:position pos:line="397" pos:column="45"/></name></expr></argument>)<pos:position pos:line="397" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="398" pos:column="13">result<pos:position pos:line="398" pos:column="19"/></name> <operator pos:line="398" pos:column="20">=<pos:position pos:line="398" pos:column="21"/></operator> <name pos:line="398" pos:column="22">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="398" pos:column="48"/></name></expr>;<pos:position pos:line="398" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="399" pos:column="10"/></block></then></if>
    }<pos:position pos:line="400" pos:column="6"/></block></then></if>

    <return pos:line="402" pos:column="5">return <expr><ternary><condition><expr><name pos:line="402" pos:column="12">result<pos:position pos:line="402" pos:column="18"/></name> <operator pos:line="402" pos:column="19">==<pos:position pos:line="402" pos:column="21"/></operator> <name pos:line="402" pos:column="22">DECLINED<pos:position pos:line="402" pos:column="30"/></name></expr> ?<pos:position pos:line="402" pos:column="32"/></condition><then pos:line="402" pos:column="32"> <expr><name pos:line="402" pos:column="33">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="402" pos:column="59"/></name></expr> <pos:position pos:line="402" pos:column="60"/></then><else pos:line="402" pos:column="60">: <expr><name pos:line="402" pos:column="62">result<pos:position pos:line="402" pos:column="68"/></name></expr></else></ternary></expr>;<pos:position pos:line="402" pos:column="69"/></return>
}<pos:position pos:line="403" pos:column="2"/></block>

<macro><name pos:line="405" pos:column="1">AP_DECLARE<pos:position pos:line="405" pos:column="11"/></name><argument_list pos:line="405" pos:column="11">(<argument pos:line="405" pos:column="12">int<pos:position pos:line="405" pos:column="15"/></argument>)<pos:position pos:line="405" pos:column="16"/></argument_list></macro> <macro><name pos:line="405" pos:column="17">ap_method_is_limited<pos:position pos:line="405" pos:column="37"/></name><argument_list pos:line="405" pos:column="37">(<argument pos:line="405" pos:column="38">cmd_parms *cmd<pos:position pos:line="405" pos:column="52"/></argument>, <argument pos:line="405" pos:column="54">const char *method<pos:position pos:line="405" pos:column="72"/></argument>)<pos:position pos:line="405" pos:column="73"/></argument_list></macro>
<block pos:line="406" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="407" pos:column="5">int<pos:position pos:line="407" pos:column="8"/></name></type> <name pos:line="407" pos:column="9">methnum<pos:position pos:line="407" pos:column="16"/></name></decl>;<pos:position pos:line="407" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><name pos:line="409" pos:column="5">methnum<pos:position pos:line="409" pos:column="12"/></name> <operator pos:line="409" pos:column="13">=<pos:position pos:line="409" pos:column="14"/></operator> <call><name pos:line="409" pos:column="15">ap_method_number_of<pos:position pos:line="409" pos:column="34"/></name><argument_list pos:line="409" pos:column="34">(<argument><expr><name pos:line="409" pos:column="35">method<pos:position pos:line="409" pos:column="41"/></name></expr></argument>)<pos:position pos:line="409" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="411" pos:column="5">/*
     * A method number either hardcoded into apache or
     * added by a module and registered.
     */</comment>
    <if pos:line="415" pos:column="5">if <condition pos:line="415" pos:column="8">(<expr><name pos:line="415" pos:column="9">methnum<pos:position pos:line="415" pos:column="16"/></name> <operator pos:line="415" pos:column="17">!=<pos:position pos:line="415" pos:column="19"/></operator> <name pos:line="415" pos:column="20">M_INVALID<pos:position pos:line="415" pos:column="29"/></name></expr>)<pos:position pos:line="415" pos:column="30"/></condition><then pos:line="415" pos:column="30"> <block pos:line="415" pos:column="31">{
        <return pos:line="416" pos:column="9">return <expr><ternary><condition><expr><operator pos:line="416" pos:column="16">(<pos:position pos:line="416" pos:column="17"/></operator><name><name pos:line="416" pos:column="17">cmd<pos:position pos:line="416" pos:column="20"/></name><operator pos:line="416" pos:column="20">-&gt;<pos:position pos:line="416" pos:column="25"/></operator><name pos:line="416" pos:column="22">limited<pos:position pos:line="416" pos:column="29"/></name></name> <operator pos:line="416" pos:column="30">&amp;<pos:position pos:line="416" pos:column="35"/></operator> <operator pos:line="416" pos:column="32">(<pos:position pos:line="416" pos:column="33"/></operator><name pos:line="416" pos:column="33">AP_METHOD_BIT<pos:position pos:line="416" pos:column="46"/></name> <operator pos:line="416" pos:column="47">&lt;&lt;<pos:position pos:line="416" pos:column="55"/></operator> <name pos:line="416" pos:column="50">methnum<pos:position pos:line="416" pos:column="57"/></name><operator pos:line="416" pos:column="57">)<pos:position pos:line="416" pos:column="58"/></operator><operator pos:line="416" pos:column="58">)<pos:position pos:line="416" pos:column="59"/></operator></expr> ?<pos:position pos:line="416" pos:column="61"/></condition><then pos:line="416" pos:column="61"> <expr><literal type="number" pos:line="416" pos:column="62">1<pos:position pos:line="416" pos:column="63"/></literal></expr> <pos:position pos:line="416" pos:column="64"/></then><else pos:line="416" pos:column="64">: <expr><literal type="number" pos:line="416" pos:column="66">0<pos:position pos:line="416" pos:column="67"/></literal></expr></else></ternary></expr>;<pos:position pos:line="416" pos:column="68"/></return>
    }<pos:position pos:line="417" pos:column="6"/></block></then></if>

    <return pos:line="419" pos:column="5">return <expr><literal type="number" pos:line="419" pos:column="12">0<pos:position pos:line="419" pos:column="13"/></literal></expr>;<pos:position pos:line="419" pos:column="14"/></return> <comment type="block" pos:line="419" pos:column="15">/* not found */</comment>
}<pos:position pos:line="420" pos:column="2"/></block>

<macro><name pos:line="422" pos:column="1">AP_DECLARE<pos:position pos:line="422" pos:column="11"/></name><argument_list pos:line="422" pos:column="11">(<argument pos:line="422" pos:column="12">void<pos:position pos:line="422" pos:column="16"/></argument>)<pos:position pos:line="422" pos:column="17"/></argument_list></macro> <macro><name pos:line="422" pos:column="18">ap_register_hooks<pos:position pos:line="422" pos:column="35"/></name><argument_list pos:line="422" pos:column="35">(<argument pos:line="422" pos:column="36">module *m<pos:position pos:line="422" pos:column="45"/></argument>, <argument pos:line="422" pos:column="47">apr_pool_t *p<pos:position pos:line="422" pos:column="60"/></argument>)<pos:position pos:line="422" pos:column="61"/></argument_list></macro>
<block pos:line="423" pos:column="1">{
    <if pos:line="424" pos:column="5">if <condition pos:line="424" pos:column="8">(<expr><name><name pos:line="424" pos:column="9">m<pos:position pos:line="424" pos:column="10"/></name><operator pos:line="424" pos:column="10">-&gt;<pos:position pos:line="424" pos:column="15"/></operator><name pos:line="424" pos:column="12">register_hooks<pos:position pos:line="424" pos:column="26"/></name></name></expr>)<pos:position pos:line="424" pos:column="27"/></condition><then pos:line="424" pos:column="27"> <block pos:line="424" pos:column="28">{
        <if pos:line="425" pos:column="9">if <condition pos:line="425" pos:column="12">(<expr><call><name pos:line="425" pos:column="13">getenv<pos:position pos:line="425" pos:column="19"/></name><argument_list pos:line="425" pos:column="19">(<argument><expr><literal type="string" pos:line="425" pos:column="20">"SHOW_HOOKS"<pos:position pos:line="425" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="425" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="425" pos:column="34"/></condition><then pos:line="425" pos:column="34"> <block pos:line="425" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="426" pos:column="13">printf<pos:position pos:line="426" pos:column="19"/></name><argument_list pos:line="426" pos:column="19">(<argument><expr><literal type="string" pos:line="426" pos:column="20">"Registering hooks for %s\n"<pos:position pos:line="426" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="426" pos:column="50">m<pos:position pos:line="426" pos:column="51"/></name><operator pos:line="426" pos:column="51">-&gt;<pos:position pos:line="426" pos:column="56"/></operator><name pos:line="426" pos:column="53">name<pos:position pos:line="426" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="426" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="427" pos:column="13">apr_hook_debug_enabled<pos:position pos:line="427" pos:column="35"/></name> <operator pos:line="427" pos:column="36">=<pos:position pos:line="427" pos:column="37"/></operator> <literal type="number" pos:line="427" pos:column="38">1<pos:position pos:line="427" pos:column="39"/></literal></expr>;<pos:position pos:line="427" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="428" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="430" pos:column="9">apr_hook_debug_current<pos:position pos:line="430" pos:column="31"/></name> <operator pos:line="430" pos:column="32">=<pos:position pos:line="430" pos:column="33"/></operator> <name><name pos:line="430" pos:column="34">m<pos:position pos:line="430" pos:column="35"/></name><operator pos:line="430" pos:column="35">-&gt;<pos:position pos:line="430" pos:column="40"/></operator><name pos:line="430" pos:column="37">name<pos:position pos:line="430" pos:column="41"/></name></name></expr>;<pos:position pos:line="430" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="431" pos:column="9">m<pos:position pos:line="431" pos:column="10"/></name><operator pos:line="431" pos:column="10">-&gt;<pos:position pos:line="431" pos:column="15"/></operator><name pos:line="431" pos:column="12">register_hooks<pos:position pos:line="431" pos:column="26"/></name></name><argument_list pos:line="431" pos:column="26">(<argument><expr><name pos:line="431" pos:column="27">p<pos:position pos:line="431" pos:column="28"/></name></expr></argument>)<pos:position pos:line="431" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="431" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="432" pos:column="6"/></block></then></if>
}<pos:position pos:line="433" pos:column="2"/></block>

<function_decl><specifier pos:line="435" pos:column="1">static<pos:position pos:line="435" pos:column="7"/></specifier> <type><name pos:line="435" pos:column="8">void<pos:position pos:line="435" pos:column="12"/></name></type> <name pos:line="435" pos:column="13">ap_add_module_commands<pos:position pos:line="435" pos:column="35"/></name><parameter_list pos:line="435" pos:column="35">(<parameter><decl><type><name pos:line="435" pos:column="36">module<pos:position pos:line="435" pos:column="42"/></name> <modifier pos:line="435" pos:column="43">*<pos:position pos:line="435" pos:column="44"/></modifier></type><name pos:line="435" pos:column="44">m<pos:position pos:line="435" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="435" pos:column="47">apr_pool_t<pos:position pos:line="435" pos:column="57"/></name> <modifier pos:line="435" pos:column="58">*<pos:position pos:line="435" pos:column="59"/></modifier></type><name pos:line="435" pos:column="59">p<pos:position pos:line="435" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="435" pos:column="61"/></parameter_list>;<pos:position pos:line="435" pos:column="62"/></function_decl>

<typedef pos:line="437" pos:column="1">typedef <type><name><name pos:line="437" pos:column="9">struct<pos:position pos:line="437" pos:column="15"/></name> <name pos:line="437" pos:column="16">ap_mod_list_struct<pos:position pos:line="437" pos:column="34"/></name></name></type> <name pos:line="437" pos:column="35">ap_mod_list<pos:position pos:line="437" pos:column="46"/></name>;<pos:position pos:line="437" pos:column="47"/></typedef>
<struct pos:line="438" pos:column="1">struct <name pos:line="438" pos:column="8">ap_mod_list_struct<pos:position pos:line="438" pos:column="26"/></name> <block pos:line="438" pos:column="27">{
    <decl_stmt><decl><type><name><name pos:line="439" pos:column="5">struct<pos:position pos:line="439" pos:column="11"/></name> <name pos:line="439" pos:column="12">ap_mod_list_struct<pos:position pos:line="439" pos:column="30"/></name></name> <modifier pos:line="439" pos:column="31">*<pos:position pos:line="439" pos:column="32"/></modifier></type><name pos:line="439" pos:column="32">next<pos:position pos:line="439" pos:column="36"/></name></decl>;<pos:position pos:line="439" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="440" pos:column="5">module<pos:position pos:line="440" pos:column="11"/></name> <modifier pos:line="440" pos:column="12">*<pos:position pos:line="440" pos:column="13"/></modifier></type><name pos:line="440" pos:column="13">m<pos:position pos:line="440" pos:column="14"/></name></decl>;<pos:position pos:line="440" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="441" pos:column="5">const<pos:position pos:line="441" pos:column="10"/></specifier> <name pos:line="441" pos:column="11">command_rec<pos:position pos:line="441" pos:column="22"/></name> <modifier pos:line="441" pos:column="23">*<pos:position pos:line="441" pos:column="24"/></modifier></type><name pos:line="441" pos:column="24">cmd<pos:position pos:line="441" pos:column="27"/></name></decl>;<pos:position pos:line="441" pos:column="28"/></decl_stmt>
}<pos:position pos:line="442" pos:column="2"/></block>;<pos:position pos:line="442" pos:column="3"/></struct>

<function><specifier pos:line="444" pos:column="1">static<pos:position pos:line="444" pos:column="7"/></specifier> <type><name pos:line="444" pos:column="8">apr_status_t<pos:position pos:line="444" pos:column="20"/></name></type> <name pos:line="444" pos:column="21">reload_conf_hash<pos:position pos:line="444" pos:column="37"/></name><parameter_list pos:line="444" pos:column="37">(<parameter><decl><type><name pos:line="444" pos:column="38">void<pos:position pos:line="444" pos:column="42"/></name> <modifier pos:line="444" pos:column="43">*<pos:position pos:line="444" pos:column="44"/></modifier></type><name pos:line="444" pos:column="44">baton<pos:position pos:line="444" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="444" pos:column="50"/></parameter_list>
<block pos:line="445" pos:column="1">{
    <expr_stmt><expr><name pos:line="446" pos:column="5">ap_config_hash<pos:position pos:line="446" pos:column="19"/></name> <operator pos:line="446" pos:column="20">=<pos:position pos:line="446" pos:column="21"/></operator> <name pos:line="446" pos:column="22">NULL<pos:position pos:line="446" pos:column="26"/></name></expr>;<pos:position pos:line="446" pos:column="27"/></expr_stmt>
    <return pos:line="447" pos:column="5">return <expr><name pos:line="447" pos:column="12">APR_SUCCESS<pos:position pos:line="447" pos:column="23"/></name></expr>;<pos:position pos:line="447" pos:column="24"/></return>
}<pos:position pos:line="448" pos:column="2"/></block></function>

<function><specifier pos:line="450" pos:column="1">static<pos:position pos:line="450" pos:column="7"/></specifier> <type><name pos:line="450" pos:column="8">void<pos:position pos:line="450" pos:column="12"/></name></type> <name pos:line="450" pos:column="13">rebuild_conf_hash<pos:position pos:line="450" pos:column="30"/></name><parameter_list pos:line="450" pos:column="30">(<parameter><decl><type><name pos:line="450" pos:column="31">apr_pool_t<pos:position pos:line="450" pos:column="41"/></name> <modifier pos:line="450" pos:column="42">*<pos:position pos:line="450" pos:column="43"/></modifier></type><name pos:line="450" pos:column="43">p<pos:position pos:line="450" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="450" pos:column="46">int<pos:position pos:line="450" pos:column="49"/></name></type> <name pos:line="450" pos:column="50">add_prelinked<pos:position pos:line="450" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="450" pos:column="64"/></parameter_list>
<block pos:line="451" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="452" pos:column="5">module<pos:position pos:line="452" pos:column="11"/></name> <modifier pos:line="452" pos:column="12">*<pos:position pos:line="452" pos:column="13"/></modifier><modifier pos:line="452" pos:column="13">*<pos:position pos:line="452" pos:column="14"/></modifier></type><name pos:line="452" pos:column="14">m<pos:position pos:line="452" pos:column="15"/></name></decl>;<pos:position pos:line="452" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="454" pos:column="5">ap_config_hash<pos:position pos:line="454" pos:column="19"/></name> <operator pos:line="454" pos:column="20">=<pos:position pos:line="454" pos:column="21"/></operator> <call><name pos:line="454" pos:column="22">apr_hash_make<pos:position pos:line="454" pos:column="35"/></name><argument_list pos:line="454" pos:column="35">(<argument><expr><name pos:line="454" pos:column="36">p<pos:position pos:line="454" pos:column="37"/></name></expr></argument>)<pos:position pos:line="454" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="456" pos:column="5">apr_pool_cleanup_register<pos:position pos:line="456" pos:column="30"/></name><argument_list pos:line="456" pos:column="30">(<argument><expr><name pos:line="456" pos:column="31">p<pos:position pos:line="456" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="34">NULL<pos:position pos:line="456" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="40">reload_conf_hash<pos:position pos:line="456" pos:column="56"/></name></expr></argument>,
                              <argument><expr><name pos:line="457" pos:column="31">apr_pool_cleanup_null<pos:position pos:line="457" pos:column="52"/></name></expr></argument>)<pos:position pos:line="457" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="54"/></expr_stmt>
    <if pos:line="458" pos:column="5">if <condition pos:line="458" pos:column="8">(<expr><name pos:line="458" pos:column="9">add_prelinked<pos:position pos:line="458" pos:column="22"/></name></expr>)<pos:position pos:line="458" pos:column="23"/></condition><then pos:line="458" pos:column="23"> <block pos:line="458" pos:column="24">{
        <for pos:line="459" pos:column="9">for <control pos:line="459" pos:column="13">(<init><expr><name pos:line="459" pos:column="14">m<pos:position pos:line="459" pos:column="15"/></name> <operator pos:line="459" pos:column="16">=<pos:position pos:line="459" pos:column="17"/></operator> <name pos:line="459" pos:column="18">ap_prelinked_modules<pos:position pos:line="459" pos:column="38"/></name></expr>;<pos:position pos:line="459" pos:column="39"/></init> <condition><expr><operator pos:line="459" pos:column="40">*<pos:position pos:line="459" pos:column="41"/></operator><name pos:line="459" pos:column="41">m<pos:position pos:line="459" pos:column="42"/></name> <operator pos:line="459" pos:column="43">!=<pos:position pos:line="459" pos:column="45"/></operator> <name pos:line="459" pos:column="46">NULL<pos:position pos:line="459" pos:column="50"/></name></expr>;<pos:position pos:line="459" pos:column="51"/></condition> <incr><expr><name pos:line="459" pos:column="52">m<pos:position pos:line="459" pos:column="53"/></name><operator pos:line="459" pos:column="53">++<pos:position pos:line="459" pos:column="55"/></operator></expr></incr>)<pos:position pos:line="459" pos:column="56"/></control> <block pos:line="459" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="460" pos:column="13">ap_add_module_commands<pos:position pos:line="460" pos:column="35"/></name><argument_list pos:line="460" pos:column="35">(<argument><expr><operator pos:line="460" pos:column="36">*<pos:position pos:line="460" pos:column="37"/></operator><name pos:line="460" pos:column="37">m<pos:position pos:line="460" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="460" pos:column="40">p<pos:position pos:line="460" pos:column="41"/></name></expr></argument>)<pos:position pos:line="460" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="461" pos:column="10"/></block></for>
    }<pos:position pos:line="462" pos:column="6"/></block></then></if>
}<pos:position pos:line="463" pos:column="2"/></block></function>

<function><specifier pos:line="465" pos:column="1">static<pos:position pos:line="465" pos:column="7"/></specifier> <type><name pos:line="465" pos:column="8">void<pos:position pos:line="465" pos:column="12"/></name></type> <name pos:line="465" pos:column="13">ap_add_module_commands<pos:position pos:line="465" pos:column="35"/></name><parameter_list pos:line="465" pos:column="35">(<parameter><decl><type><name pos:line="465" pos:column="36">module<pos:position pos:line="465" pos:column="42"/></name> <modifier pos:line="465" pos:column="43">*<pos:position pos:line="465" pos:column="44"/></modifier></type><name pos:line="465" pos:column="44">m<pos:position pos:line="465" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="465" pos:column="47">apr_pool_t<pos:position pos:line="465" pos:column="57"/></name> <modifier pos:line="465" pos:column="58">*<pos:position pos:line="465" pos:column="59"/></modifier></type><name pos:line="465" pos:column="59">p<pos:position pos:line="465" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="465" pos:column="61"/></parameter_list>
<block pos:line="466" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="467" pos:column="5">apr_pool_t<pos:position pos:line="467" pos:column="15"/></name> <modifier pos:line="467" pos:column="16">*<pos:position pos:line="467" pos:column="17"/></modifier></type><name pos:line="467" pos:column="17">tpool<pos:position pos:line="467" pos:column="22"/></name></decl>;<pos:position pos:line="467" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="468" pos:column="5">ap_mod_list<pos:position pos:line="468" pos:column="16"/></name> <modifier pos:line="468" pos:column="17">*<pos:position pos:line="468" pos:column="18"/></modifier></type><name pos:line="468" pos:column="18">mln<pos:position pos:line="468" pos:column="21"/></name></decl>;<pos:position pos:line="468" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="469" pos:column="5">const<pos:position pos:line="469" pos:column="10"/></specifier> <name pos:line="469" pos:column="11">command_rec<pos:position pos:line="469" pos:column="22"/></name> <modifier pos:line="469" pos:column="23">*<pos:position pos:line="469" pos:column="24"/></modifier></type><name pos:line="469" pos:column="24">cmd<pos:position pos:line="469" pos:column="27"/></name></decl>;<pos:position pos:line="469" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="470" pos:column="5">char<pos:position pos:line="470" pos:column="9"/></name> <modifier pos:line="470" pos:column="10">*<pos:position pos:line="470" pos:column="11"/></modifier></type><name pos:line="470" pos:column="11">dir<pos:position pos:line="470" pos:column="14"/></name></decl>;<pos:position pos:line="470" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="472" pos:column="5">cmd<pos:position pos:line="472" pos:column="8"/></name> <operator pos:line="472" pos:column="9">=<pos:position pos:line="472" pos:column="10"/></operator> <name><name pos:line="472" pos:column="11">m<pos:position pos:line="472" pos:column="12"/></name><operator pos:line="472" pos:column="12">-&gt;<pos:position pos:line="472" pos:column="17"/></operator><name pos:line="472" pos:column="14">cmds<pos:position pos:line="472" pos:column="18"/></name></name></expr>;<pos:position pos:line="472" pos:column="19"/></expr_stmt>

    <if pos:line="474" pos:column="5">if <condition pos:line="474" pos:column="8">(<expr><name pos:line="474" pos:column="9">ap_config_hash<pos:position pos:line="474" pos:column="23"/></name> <operator pos:line="474" pos:column="24">==<pos:position pos:line="474" pos:column="26"/></operator> <name pos:line="474" pos:column="27">NULL<pos:position pos:line="474" pos:column="31"/></name></expr>)<pos:position pos:line="474" pos:column="32"/></condition><then pos:line="474" pos:column="32"> <block pos:line="474" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="475" pos:column="9">rebuild_conf_hash<pos:position pos:line="475" pos:column="26"/></name><argument_list pos:line="475" pos:column="26">(<argument><expr><name pos:line="475" pos:column="27">p<pos:position pos:line="475" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="475" pos:column="30">0<pos:position pos:line="475" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="475" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="476" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="478" pos:column="5">tpool<pos:position pos:line="478" pos:column="10"/></name> <operator pos:line="478" pos:column="11">=<pos:position pos:line="478" pos:column="12"/></operator> <call><name pos:line="478" pos:column="13">apr_hash_pool_get<pos:position pos:line="478" pos:column="30"/></name><argument_list pos:line="478" pos:column="30">(<argument><expr><name pos:line="478" pos:column="31">ap_config_hash<pos:position pos:line="478" pos:column="45"/></name></expr></argument>)<pos:position pos:line="478" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="478" pos:column="47"/></expr_stmt>

    <while pos:line="480" pos:column="5">while <condition pos:line="480" pos:column="11">(<expr><name pos:line="480" pos:column="12">cmd<pos:position pos:line="480" pos:column="15"/></name> <operator pos:line="480" pos:column="16">&amp;&amp;<pos:position pos:line="480" pos:column="26"/></operator> <name><name pos:line="480" pos:column="19">cmd<pos:position pos:line="480" pos:column="22"/></name><operator pos:line="480" pos:column="22">-&gt;<pos:position pos:line="480" pos:column="27"/></operator><name pos:line="480" pos:column="24">name<pos:position pos:line="480" pos:column="28"/></name></name></expr>)<pos:position pos:line="480" pos:column="29"/></condition> <block pos:line="480" pos:column="30">{
        <expr_stmt><expr><name pos:line="481" pos:column="9">mln<pos:position pos:line="481" pos:column="12"/></name> <operator pos:line="481" pos:column="13">=<pos:position pos:line="481" pos:column="14"/></operator> <call><name pos:line="481" pos:column="15">apr_palloc<pos:position pos:line="481" pos:column="25"/></name><argument_list pos:line="481" pos:column="25">(<argument><expr><name pos:line="481" pos:column="26">tpool<pos:position pos:line="481" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="481" pos:column="33">sizeof<argument_list pos:line="481" pos:column="39">(<argument><expr><name pos:line="481" pos:column="40">ap_mod_list<pos:position pos:line="481" pos:column="51"/></name></expr></argument>)<pos:position pos:line="481" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="481" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="482" pos:column="9">mln<pos:position pos:line="482" pos:column="12"/></name><operator pos:line="482" pos:column="12">-&gt;<pos:position pos:line="482" pos:column="17"/></operator><name pos:line="482" pos:column="14">cmd<pos:position pos:line="482" pos:column="17"/></name></name> <operator pos:line="482" pos:column="18">=<pos:position pos:line="482" pos:column="19"/></operator> <name pos:line="482" pos:column="20">cmd<pos:position pos:line="482" pos:column="23"/></name></expr>;<pos:position pos:line="482" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="483" pos:column="9">mln<pos:position pos:line="483" pos:column="12"/></name><operator pos:line="483" pos:column="12">-&gt;<pos:position pos:line="483" pos:column="17"/></operator><name pos:line="483" pos:column="14">m<pos:position pos:line="483" pos:column="15"/></name></name> <operator pos:line="483" pos:column="16">=<pos:position pos:line="483" pos:column="17"/></operator> <name pos:line="483" pos:column="18">m<pos:position pos:line="483" pos:column="19"/></name></expr>;<pos:position pos:line="483" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="484" pos:column="9">dir<pos:position pos:line="484" pos:column="12"/></name> <operator pos:line="484" pos:column="13">=<pos:position pos:line="484" pos:column="14"/></operator> <call><name pos:line="484" pos:column="15">apr_pstrdup<pos:position pos:line="484" pos:column="26"/></name><argument_list pos:line="484" pos:column="26">(<argument><expr><name pos:line="484" pos:column="27">tpool<pos:position pos:line="484" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="484" pos:column="34">cmd<pos:position pos:line="484" pos:column="37"/></name><operator pos:line="484" pos:column="37">-&gt;<pos:position pos:line="484" pos:column="42"/></operator><name pos:line="484" pos:column="39">name<pos:position pos:line="484" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="484" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="484" pos:column="45"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="486" pos:column="9">ap_str_tolower<pos:position pos:line="486" pos:column="23"/></name><argument_list pos:line="486" pos:column="23">(<argument><expr><name pos:line="486" pos:column="24">dir<pos:position pos:line="486" pos:column="27"/></name></expr></argument>)<pos:position pos:line="486" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="29"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="488" pos:column="9">mln<pos:position pos:line="488" pos:column="12"/></name><operator pos:line="488" pos:column="12">-&gt;<pos:position pos:line="488" pos:column="17"/></operator><name pos:line="488" pos:column="14">next<pos:position pos:line="488" pos:column="18"/></name></name> <operator pos:line="488" pos:column="19">=<pos:position pos:line="488" pos:column="20"/></operator> <call><name pos:line="488" pos:column="21">apr_hash_get<pos:position pos:line="488" pos:column="33"/></name><argument_list pos:line="488" pos:column="33">(<argument><expr><name pos:line="488" pos:column="34">ap_config_hash<pos:position pos:line="488" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="50">dir<pos:position pos:line="488" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="55">APR_HASH_KEY_STRING<pos:position pos:line="488" pos:column="74"/></name></expr></argument>)<pos:position pos:line="488" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="489" pos:column="9">apr_hash_set<pos:position pos:line="489" pos:column="21"/></name><argument_list pos:line="489" pos:column="21">(<argument><expr><name pos:line="489" pos:column="22">ap_config_hash<pos:position pos:line="489" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="489" pos:column="38">dir<pos:position pos:line="489" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="489" pos:column="43">APR_HASH_KEY_STRING<pos:position pos:line="489" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="489" pos:column="64">mln<pos:position pos:line="489" pos:column="67"/></name></expr></argument>)<pos:position pos:line="489" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="490" pos:column="9">++<pos:position pos:line="490" pos:column="11"/></operator><name pos:line="490" pos:column="11">cmd<pos:position pos:line="490" pos:column="14"/></name></expr>;<pos:position pos:line="490" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="491" pos:column="6"/></block></while>
}<pos:position pos:line="492" pos:column="2"/></block></function>


<comment type="block" pos:line="495" pos:column="1">/* One-time setup for precompiled modules --- NOT to be done on restart */</comment>

<macro><name pos:line="497" pos:column="1">AP_DECLARE<pos:position pos:line="497" pos:column="11"/></name><argument_list pos:line="497" pos:column="11">(<argument pos:line="497" pos:column="12">const char *<pos:position pos:line="497" pos:column="24"/></argument>)<pos:position pos:line="497" pos:column="25"/></argument_list></macro> <macro><name pos:line="497" pos:column="26">ap_add_module<pos:position pos:line="497" pos:column="39"/></name><argument_list pos:line="497" pos:column="39">(<argument pos:line="497" pos:column="40">module *m<pos:position pos:line="497" pos:column="49"/></argument>, <argument pos:line="497" pos:column="51">apr_pool_t *p<pos:position pos:line="497" pos:column="64"/></argument>)<pos:position pos:line="497" pos:column="65"/></argument_list></macro>
<block pos:line="498" pos:column="1">{
    <comment type="block" pos:line="499" pos:column="5">/* This could be called from a LoadModule httpd.conf command,
     * after the file has been linked and the module structure within it
     * teased out...
     */</comment>

    <if pos:line="504" pos:column="5">if <condition pos:line="504" pos:column="8">(<expr><name><name pos:line="504" pos:column="9">m<pos:position pos:line="504" pos:column="10"/></name><operator pos:line="504" pos:column="10">-&gt;<pos:position pos:line="504" pos:column="15"/></operator><name pos:line="504" pos:column="12">version<pos:position pos:line="504" pos:column="19"/></name></name> <operator pos:line="504" pos:column="20">!=<pos:position pos:line="504" pos:column="22"/></operator> <name pos:line="504" pos:column="23">MODULE_MAGIC_NUMBER_MAJOR<pos:position pos:line="504" pos:column="48"/></name></expr>)<pos:position pos:line="504" pos:column="49"/></condition><then pos:line="504" pos:column="49"> <block pos:line="504" pos:column="50">{
        <return pos:line="505" pos:column="9">return <expr><call><name pos:line="505" pos:column="16">apr_psprintf<pos:position pos:line="505" pos:column="28"/></name><argument_list pos:line="505" pos:column="28">(<argument><expr><name pos:line="505" pos:column="29">p<pos:position pos:line="505" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="505" pos:column="32">"Module \"%s\" is not compatible with this "<pos:position pos:line="505" pos:column="76"/></literal>
                            <literal type="string" pos:line="506" pos:column="29">"version of Apache (found %d, need %d). Please "<pos:position pos:line="506" pos:column="77"/></literal>
                            <literal type="string" pos:line="507" pos:column="29">"contact the vendor for the correct version."<pos:position pos:line="507" pos:column="74"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="508" pos:column="29">m<pos:position pos:line="508" pos:column="30"/></name><operator pos:line="508" pos:column="30">-&gt;<pos:position pos:line="508" pos:column="35"/></operator><name pos:line="508" pos:column="32">name<pos:position pos:line="508" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="508" pos:column="38">m<pos:position pos:line="508" pos:column="39"/></name><operator pos:line="508" pos:column="39">-&gt;<pos:position pos:line="508" pos:column="44"/></operator><name pos:line="508" pos:column="41">version<pos:position pos:line="508" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="508" pos:column="50">MODULE_MAGIC_NUMBER_MAJOR<pos:position pos:line="508" pos:column="75"/></name></expr></argument>)<pos:position pos:line="508" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="77"/></return>
    }<pos:position pos:line="509" pos:column="6"/></block></then></if>

    <if pos:line="511" pos:column="5">if <condition pos:line="511" pos:column="8">(<expr><name><name pos:line="511" pos:column="9">m<pos:position pos:line="511" pos:column="10"/></name><operator pos:line="511" pos:column="10">-&gt;<pos:position pos:line="511" pos:column="15"/></operator><name pos:line="511" pos:column="12">next<pos:position pos:line="511" pos:column="16"/></name></name> <operator pos:line="511" pos:column="17">==<pos:position pos:line="511" pos:column="19"/></operator> <name pos:line="511" pos:column="20">NULL<pos:position pos:line="511" pos:column="24"/></name></expr>)<pos:position pos:line="511" pos:column="25"/></condition><then pos:line="511" pos:column="25"> <block pos:line="511" pos:column="26">{
        <expr_stmt><expr><name><name pos:line="512" pos:column="9">m<pos:position pos:line="512" pos:column="10"/></name><operator pos:line="512" pos:column="10">-&gt;<pos:position pos:line="512" pos:column="15"/></operator><name pos:line="512" pos:column="12">next<pos:position pos:line="512" pos:column="16"/></name></name> <operator pos:line="512" pos:column="17">=<pos:position pos:line="512" pos:column="18"/></operator> <name pos:line="512" pos:column="19">ap_top_module<pos:position pos:line="512" pos:column="32"/></name></expr>;<pos:position pos:line="512" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="513" pos:column="9">ap_top_module<pos:position pos:line="513" pos:column="22"/></name> <operator pos:line="513" pos:column="23">=<pos:position pos:line="513" pos:column="24"/></operator> <name pos:line="513" pos:column="25">m<pos:position pos:line="513" pos:column="26"/></name></expr>;<pos:position pos:line="513" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="514" pos:column="6"/></block></then></if>

    <if pos:line="516" pos:column="5">if <condition pos:line="516" pos:column="8">(<expr><name><name pos:line="516" pos:column="9">m<pos:position pos:line="516" pos:column="10"/></name><operator pos:line="516" pos:column="10">-&gt;<pos:position pos:line="516" pos:column="15"/></operator><name pos:line="516" pos:column="12">module_index<pos:position pos:line="516" pos:column="24"/></name></name> <operator pos:line="516" pos:column="25">==<pos:position pos:line="516" pos:column="27"/></operator> <operator pos:line="516" pos:column="28">-<pos:position pos:line="516" pos:column="29"/></operator><literal type="number" pos:line="516" pos:column="29">1<pos:position pos:line="516" pos:column="30"/></literal></expr>)<pos:position pos:line="516" pos:column="31"/></condition><then pos:line="516" pos:column="31"> <block pos:line="516" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="517" pos:column="9">m<pos:position pos:line="517" pos:column="10"/></name><operator pos:line="517" pos:column="10">-&gt;<pos:position pos:line="517" pos:column="15"/></operator><name pos:line="517" pos:column="12">module_index<pos:position pos:line="517" pos:column="24"/></name></name> <operator pos:line="517" pos:column="25">=<pos:position pos:line="517" pos:column="26"/></operator> <name pos:line="517" pos:column="27">total_modules<pos:position pos:line="517" pos:column="40"/></name><operator pos:line="517" pos:column="40">++<pos:position pos:line="517" pos:column="42"/></operator></expr>;<pos:position pos:line="517" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="518" pos:column="9">dynamic_modules<pos:position pos:line="518" pos:column="24"/></name><operator pos:line="518" pos:column="24">++<pos:position pos:line="518" pos:column="26"/></operator></expr>;<pos:position pos:line="518" pos:column="27"/></expr_stmt>

        <if pos:line="520" pos:column="9">if <condition pos:line="520" pos:column="12">(<expr><name pos:line="520" pos:column="13">dynamic_modules<pos:position pos:line="520" pos:column="28"/></name> <operator pos:line="520" pos:column="29">&gt;<pos:position pos:line="520" pos:column="33"/></operator> <name pos:line="520" pos:column="31">DYNAMIC_MODULE_LIMIT<pos:position pos:line="520" pos:column="51"/></name></expr>)<pos:position pos:line="520" pos:column="52"/></condition><then pos:line="520" pos:column="52"> <block pos:line="520" pos:column="53">{
            <return pos:line="521" pos:column="13">return <expr><call><name pos:line="521" pos:column="20">apr_psprintf<pos:position pos:line="521" pos:column="32"/></name><argument_list pos:line="521" pos:column="32">(<argument><expr><name pos:line="521" pos:column="33">p<pos:position pos:line="521" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="521" pos:column="36">"Module \"%s\" could not be loaded, "<pos:position pos:line="521" pos:column="73"/></literal>
                                <literal type="string" pos:line="522" pos:column="33">"because the dynamic module limit was "<pos:position pos:line="522" pos:column="72"/></literal>
                                <literal type="string" pos:line="523" pos:column="33">"reached. Please increase "<pos:position pos:line="523" pos:column="60"/></literal>
                                <literal type="string" pos:line="524" pos:column="33">"DYNAMIC_MODULE_LIMIT and recompile."<pos:position pos:line="524" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="524" pos:column="72">m<pos:position pos:line="524" pos:column="73"/></name><operator pos:line="524" pos:column="73">-&gt;<pos:position pos:line="524" pos:column="78"/></operator><name pos:line="524" pos:column="75">name<pos:position pos:line="524" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="524" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="524" pos:column="81"/></return>
        }<pos:position pos:line="525" pos:column="10"/></block></then></if>
    }<pos:position pos:line="526" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="528" pos:column="5">/* Some C compilers put a complete path into __FILE__, but we want
     * only the filename (e.g. mod_includes.c). So check for path
     * components (Unix and DOS), and remove them.
     */</comment>

    <if pos:line="533" pos:column="5">if <condition pos:line="533" pos:column="8">(<expr><call><name pos:line="533" pos:column="9">ap_strrchr_c<pos:position pos:line="533" pos:column="21"/></name><argument_list pos:line="533" pos:column="21">(<argument><expr><name><name pos:line="533" pos:column="22">m<pos:position pos:line="533" pos:column="23"/></name><operator pos:line="533" pos:column="23">-&gt;<pos:position pos:line="533" pos:column="28"/></operator><name pos:line="533" pos:column="25">name<pos:position pos:line="533" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="533" pos:column="31">'/'<pos:position pos:line="533" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="533" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="533" pos:column="36"/></condition><then pos:line="533" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="534" pos:column="9">m<pos:position pos:line="534" pos:column="10"/></name><operator pos:line="534" pos:column="10">-&gt;<pos:position pos:line="534" pos:column="15"/></operator><name pos:line="534" pos:column="12">name<pos:position pos:line="534" pos:column="16"/></name></name> <operator pos:line="534" pos:column="17">=<pos:position pos:line="534" pos:column="18"/></operator> <literal type="number" pos:line="534" pos:column="19">1<pos:position pos:line="534" pos:column="20"/></literal> <operator pos:line="534" pos:column="21">+<pos:position pos:line="534" pos:column="22"/></operator> <call><name pos:line="534" pos:column="23">ap_strrchr_c<pos:position pos:line="534" pos:column="35"/></name><argument_list pos:line="534" pos:column="35">(<argument><expr><name><name pos:line="534" pos:column="36">m<pos:position pos:line="534" pos:column="37"/></name><operator pos:line="534" pos:column="37">-&gt;<pos:position pos:line="534" pos:column="42"/></operator><name pos:line="534" pos:column="39">name<pos:position pos:line="534" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="534" pos:column="45">'/'<pos:position pos:line="534" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="534" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="50"/></expr_stmt></block></then></if>

    <if pos:line="536" pos:column="5">if <condition pos:line="536" pos:column="8">(<expr><call><name pos:line="536" pos:column="9">ap_strrchr_c<pos:position pos:line="536" pos:column="21"/></name><argument_list pos:line="536" pos:column="21">(<argument><expr><name><name pos:line="536" pos:column="22">m<pos:position pos:line="536" pos:column="23"/></name><operator pos:line="536" pos:column="23">-&gt;<pos:position pos:line="536" pos:column="28"/></operator><name pos:line="536" pos:column="25">name<pos:position pos:line="536" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="536" pos:column="31">'\\'<pos:position pos:line="536" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="536" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="536" pos:column="37"/></condition><then pos:line="536" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="537" pos:column="9">m<pos:position pos:line="537" pos:column="10"/></name><operator pos:line="537" pos:column="10">-&gt;<pos:position pos:line="537" pos:column="15"/></operator><name pos:line="537" pos:column="12">name<pos:position pos:line="537" pos:column="16"/></name></name> <operator pos:line="537" pos:column="17">=<pos:position pos:line="537" pos:column="18"/></operator> <literal type="number" pos:line="537" pos:column="19">1<pos:position pos:line="537" pos:column="20"/></literal> <operator pos:line="537" pos:column="21">+<pos:position pos:line="537" pos:column="22"/></operator> <call><name pos:line="537" pos:column="23">ap_strrchr_c<pos:position pos:line="537" pos:column="35"/></name><argument_list pos:line="537" pos:column="35">(<argument><expr><name><name pos:line="537" pos:column="36">m<pos:position pos:line="537" pos:column="37"/></name><operator pos:line="537" pos:column="37">-&gt;<pos:position pos:line="537" pos:column="42"/></operator><name pos:line="537" pos:column="39">name<pos:position pos:line="537" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="537" pos:column="45">'\\'<pos:position pos:line="537" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="537" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="51"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="539" pos:column="1">#<cpp:directive pos:line="539" pos:column="2">ifdef<pos:position pos:line="539" pos:column="7"/></cpp:directive> <name pos:line="539" pos:column="8">_OSD_POSIX<pos:position pos:line="539" pos:column="18"/></name></cpp:ifdef>
    <comment type="block" pos:line="540" pos:column="5">/* __FILE__ =
     * "*POSIX(/home/martin/apache/src/modules/standard/mod_info.c)"
     */</comment>

    <comment type="block" pos:line="544" pos:column="5">/* We cannot fix the string in-place, because it's const */</comment>
    <if pos:line="545" pos:column="5">if <condition pos:line="545" pos:column="8">(<expr><name><name pos:line="545" pos:column="9">m<pos:position pos:line="545" pos:column="10"/></name><operator pos:line="545" pos:column="10">-&gt;<pos:position pos:line="545" pos:column="15"/></operator><name pos:line="545" pos:column="12">name<pos:position pos:line="545" pos:column="16"/></name><index pos:line="545" pos:column="16">[<expr><call><name pos:line="545" pos:column="17">strlen<pos:position pos:line="545" pos:column="23"/></name><argument_list pos:line="545" pos:column="23">(<argument><expr><name><name pos:line="545" pos:column="24">m<pos:position pos:line="545" pos:column="25"/></name><operator pos:line="545" pos:column="25">-&gt;<pos:position pos:line="545" pos:column="30"/></operator><name pos:line="545" pos:column="27">name<pos:position pos:line="545" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="545" pos:column="32"/></argument_list></call><operator pos:line="545" pos:column="32">-<pos:position pos:line="545" pos:column="33"/></operator><literal type="number" pos:line="545" pos:column="33">1<pos:position pos:line="545" pos:column="34"/></literal></expr>]<pos:position pos:line="545" pos:column="35"/></index></name> <operator pos:line="545" pos:column="36">==<pos:position pos:line="545" pos:column="38"/></operator> <literal type="char" pos:line="545" pos:column="39">')'<pos:position pos:line="545" pos:column="42"/></literal></expr>)<pos:position pos:line="545" pos:column="43"/></condition><then pos:line="545" pos:column="43"> <block pos:line="545" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="546" pos:column="9">char<pos:position pos:line="546" pos:column="13"/></name> <modifier pos:line="546" pos:column="14">*<pos:position pos:line="546" pos:column="15"/></modifier></type><name pos:line="546" pos:column="15">tmp<pos:position pos:line="546" pos:column="18"/></name> <init pos:line="546" pos:column="19">= <expr><call><name pos:line="546" pos:column="21">strdup<pos:position pos:line="546" pos:column="27"/></name><argument_list pos:line="546" pos:column="27">(<argument><expr><name><name pos:line="546" pos:column="28">m<pos:position pos:line="546" pos:column="29"/></name><operator pos:line="546" pos:column="29">-&gt;<pos:position pos:line="546" pos:column="34"/></operator><name pos:line="546" pos:column="31">name<pos:position pos:line="546" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="546" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="546" pos:column="37"/></decl_stmt> <comment type="block" pos:line="546" pos:column="38">/* FIXME: memory leak, albeit a small one */</comment>
        <expr_stmt><expr><name><name pos:line="547" pos:column="9">tmp<pos:position pos:line="547" pos:column="12"/></name><index pos:line="547" pos:column="12">[<expr><call><name pos:line="547" pos:column="13">strlen<pos:position pos:line="547" pos:column="19"/></name><argument_list pos:line="547" pos:column="19">(<argument><expr><name pos:line="547" pos:column="20">tmp<pos:position pos:line="547" pos:column="23"/></name></expr></argument>)<pos:position pos:line="547" pos:column="24"/></argument_list></call><operator pos:line="547" pos:column="24">-<pos:position pos:line="547" pos:column="25"/></operator><literal type="number" pos:line="547" pos:column="25">1<pos:position pos:line="547" pos:column="26"/></literal></expr>]<pos:position pos:line="547" pos:column="27"/></index></name> <operator pos:line="547" pos:column="28">=<pos:position pos:line="547" pos:column="29"/></operator> <literal type="char" pos:line="547" pos:column="30">'\0'<pos:position pos:line="547" pos:column="34"/></literal></expr>;<pos:position pos:line="547" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="548" pos:column="9">m<pos:position pos:line="548" pos:column="10"/></name><operator pos:line="548" pos:column="10">-&gt;<pos:position pos:line="548" pos:column="15"/></operator><name pos:line="548" pos:column="12">name<pos:position pos:line="548" pos:column="16"/></name></name> <operator pos:line="548" pos:column="17">=<pos:position pos:line="548" pos:column="18"/></operator> <name pos:line="548" pos:column="19">tmp<pos:position pos:line="548" pos:column="22"/></name></expr>;<pos:position pos:line="548" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="549" pos:column="6"/></block></then></if>
<cpp:endif pos:line="550" pos:column="1">#<cpp:directive pos:line="550" pos:column="2">endif<pos:position pos:line="550" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="550" pos:column="8">/*_OSD_POSIX*/</comment>

    <expr_stmt><expr><call><name pos:line="552" pos:column="5">ap_add_module_commands<pos:position pos:line="552" pos:column="27"/></name><argument_list pos:line="552" pos:column="27">(<argument><expr><name pos:line="552" pos:column="28">m<pos:position pos:line="552" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="552" pos:column="31">p<pos:position pos:line="552" pos:column="32"/></name></expr></argument>)<pos:position pos:line="552" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="552" pos:column="34"/></expr_stmt>
    <comment type="block" pos:line="553" pos:column="5">/*  FIXME: is this the right place to call this?
     *  It doesn't appear to be
     */</comment>
    <expr_stmt><expr><call><name pos:line="556" pos:column="5">ap_register_hooks<pos:position pos:line="556" pos:column="22"/></name><argument_list pos:line="556" pos:column="22">(<argument><expr><name pos:line="556" pos:column="23">m<pos:position pos:line="556" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="26">p<pos:position pos:line="556" pos:column="27"/></name></expr></argument>)<pos:position pos:line="556" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="556" pos:column="29"/></expr_stmt>

    <return pos:line="558" pos:column="5">return <expr><name pos:line="558" pos:column="12">NULL<pos:position pos:line="558" pos:column="16"/></name></expr>;<pos:position pos:line="558" pos:column="17"/></return>
}<pos:position pos:line="559" pos:column="2"/></block>

<comment type="block" pos:line="561" pos:column="1">/*
 * remove_module undoes what add_module did. There are some caveats:
 * when the module is removed, its slot is lost so all the current
 * per-dir and per-server configurations are invalid. So we should
 * only ever call this function when you are invalidating almost
 * all our current data. I.e. when doing a restart.
 */</comment>

<macro><name pos:line="569" pos:column="1">AP_DECLARE<pos:position pos:line="569" pos:column="11"/></name><argument_list pos:line="569" pos:column="11">(<argument pos:line="569" pos:column="12">void<pos:position pos:line="569" pos:column="16"/></argument>)<pos:position pos:line="569" pos:column="17"/></argument_list></macro> <macro><name pos:line="569" pos:column="18">ap_remove_module<pos:position pos:line="569" pos:column="34"/></name><argument_list pos:line="569" pos:column="34">(<argument pos:line="569" pos:column="35">module *m<pos:position pos:line="569" pos:column="44"/></argument>)<pos:position pos:line="569" pos:column="45"/></argument_list></macro>
<block pos:line="570" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="571" pos:column="5">module<pos:position pos:line="571" pos:column="11"/></name> <modifier pos:line="571" pos:column="12">*<pos:position pos:line="571" pos:column="13"/></modifier></type><name pos:line="571" pos:column="13">modp<pos:position pos:line="571" pos:column="17"/></name></decl>;<pos:position pos:line="571" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="573" pos:column="5">modp<pos:position pos:line="573" pos:column="9"/></name> <operator pos:line="573" pos:column="10">=<pos:position pos:line="573" pos:column="11"/></operator> <name pos:line="573" pos:column="12">ap_top_module<pos:position pos:line="573" pos:column="25"/></name></expr>;<pos:position pos:line="573" pos:column="26"/></expr_stmt>
    <if pos:line="574" pos:column="5">if <condition pos:line="574" pos:column="8">(<expr><name pos:line="574" pos:column="9">modp<pos:position pos:line="574" pos:column="13"/></name> <operator pos:line="574" pos:column="14">==<pos:position pos:line="574" pos:column="16"/></operator> <name pos:line="574" pos:column="17">m<pos:position pos:line="574" pos:column="18"/></name></expr>)<pos:position pos:line="574" pos:column="19"/></condition><then pos:line="574" pos:column="19"> <block pos:line="574" pos:column="20">{
        <comment type="block" pos:line="575" pos:column="9">/* We are the top module, special case */</comment>
        <expr_stmt><expr><name pos:line="576" pos:column="9">ap_top_module<pos:position pos:line="576" pos:column="22"/></name> <operator pos:line="576" pos:column="23">=<pos:position pos:line="576" pos:column="24"/></operator> <name><name pos:line="576" pos:column="25">modp<pos:position pos:line="576" pos:column="29"/></name><operator pos:line="576" pos:column="29">-&gt;<pos:position pos:line="576" pos:column="34"/></operator><name pos:line="576" pos:column="31">next<pos:position pos:line="576" pos:column="35"/></name></name></expr>;<pos:position pos:line="576" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="577" pos:column="9">m<pos:position pos:line="577" pos:column="10"/></name><operator pos:line="577" pos:column="10">-&gt;<pos:position pos:line="577" pos:column="15"/></operator><name pos:line="577" pos:column="12">next<pos:position pos:line="577" pos:column="16"/></name></name> <operator pos:line="577" pos:column="17">=<pos:position pos:line="577" pos:column="18"/></operator> <name pos:line="577" pos:column="19">NULL<pos:position pos:line="577" pos:column="23"/></name></expr>;<pos:position pos:line="577" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="578" pos:column="6"/></block></then>
    <else pos:line="579" pos:column="5">else <block pos:line="579" pos:column="10">{
        <comment type="block" pos:line="580" pos:column="9">/* Not the top module, find use. When found modp will
         * point to the module _before_ us in the list
         */</comment>

        <while pos:line="584" pos:column="9">while <condition pos:line="584" pos:column="15">(<expr><name pos:line="584" pos:column="16">modp<pos:position pos:line="584" pos:column="20"/></name> <operator pos:line="584" pos:column="21">&amp;&amp;<pos:position pos:line="584" pos:column="31"/></operator> <name><name pos:line="584" pos:column="24">modp<pos:position pos:line="584" pos:column="28"/></name><operator pos:line="584" pos:column="28">-&gt;<pos:position pos:line="584" pos:column="33"/></operator><name pos:line="584" pos:column="30">next<pos:position pos:line="584" pos:column="34"/></name></name> <operator pos:line="584" pos:column="35">!=<pos:position pos:line="584" pos:column="37"/></operator> <name pos:line="584" pos:column="38">m<pos:position pos:line="584" pos:column="39"/></name></expr>)<pos:position pos:line="584" pos:column="40"/></condition> <block pos:line="584" pos:column="41">{
            <expr_stmt><expr><name pos:line="585" pos:column="13">modp<pos:position pos:line="585" pos:column="17"/></name> <operator pos:line="585" pos:column="18">=<pos:position pos:line="585" pos:column="19"/></operator> <name><name pos:line="585" pos:column="20">modp<pos:position pos:line="585" pos:column="24"/></name><operator pos:line="585" pos:column="24">-&gt;<pos:position pos:line="585" pos:column="29"/></operator><name pos:line="585" pos:column="26">next<pos:position pos:line="585" pos:column="30"/></name></name></expr>;<pos:position pos:line="585" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="586" pos:column="10"/></block></while>

        <if pos:line="588" pos:column="9">if <condition pos:line="588" pos:column="12">(<expr><operator pos:line="588" pos:column="13">!<pos:position pos:line="588" pos:column="14"/></operator><name pos:line="588" pos:column="14">modp<pos:position pos:line="588" pos:column="18"/></name></expr>)<pos:position pos:line="588" pos:column="19"/></condition><then pos:line="588" pos:column="19"> <block pos:line="588" pos:column="20">{
            <comment type="block" pos:line="589" pos:column="13">/* Uh-oh, this module doesn't exist */</comment>
            <expr_stmt><expr><call><name pos:line="590" pos:column="13">ap_log_error<pos:position pos:line="590" pos:column="25"/></name><argument_list pos:line="590" pos:column="25">(<argument><expr><name pos:line="590" pos:column="26">APLOG_MARK<pos:position pos:line="590" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="590" pos:column="38">APLOG_ERR<pos:position pos:line="590" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="590" pos:column="49">0<pos:position pos:line="590" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="590" pos:column="52">NULL<pos:position pos:line="590" pos:column="56"/></name></expr></argument>,
                         <argument><expr><literal type="string" pos:line="591" pos:column="26">"Cannot remove module %s: not found in module list"<pos:position pos:line="591" pos:column="77"/></literal></expr></argument>,
                         <argument><expr><name><name pos:line="592" pos:column="26">m<pos:position pos:line="592" pos:column="27"/></name><operator pos:line="592" pos:column="27">-&gt;<pos:position pos:line="592" pos:column="32"/></operator><name pos:line="592" pos:column="29">name<pos:position pos:line="592" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="592" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="592" pos:column="35"/></expr_stmt>
            <return pos:line="593" pos:column="13">return;<pos:position pos:line="593" pos:column="20"/></return>
        }<pos:position pos:line="594" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="596" pos:column="9">/* Eliminate us from the module list */</comment>
        <expr_stmt><expr><name><name pos:line="597" pos:column="9">modp<pos:position pos:line="597" pos:column="13"/></name><operator pos:line="597" pos:column="13">-&gt;<pos:position pos:line="597" pos:column="18"/></operator><name pos:line="597" pos:column="15">next<pos:position pos:line="597" pos:column="19"/></name></name> <operator pos:line="597" pos:column="20">=<pos:position pos:line="597" pos:column="21"/></operator> <name><name pos:line="597" pos:column="22">modp<pos:position pos:line="597" pos:column="26"/></name><operator pos:line="597" pos:column="26">-&gt;<pos:position pos:line="597" pos:column="31"/></operator><name pos:line="597" pos:column="28">next<pos:position pos:line="597" pos:column="32"/></name><operator pos:line="597" pos:column="32">-&gt;<pos:position pos:line="597" pos:column="37"/></operator><name pos:line="597" pos:column="34">next<pos:position pos:line="597" pos:column="38"/></name></name></expr>;<pos:position pos:line="597" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="598" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="600" pos:column="5">m<pos:position pos:line="600" pos:column="6"/></name><operator pos:line="600" pos:column="6">-&gt;<pos:position pos:line="600" pos:column="11"/></operator><name pos:line="600" pos:column="8">module_index<pos:position pos:line="600" pos:column="20"/></name></name> <operator pos:line="600" pos:column="21">=<pos:position pos:line="600" pos:column="22"/></operator> <operator pos:line="600" pos:column="23">-<pos:position pos:line="600" pos:column="24"/></operator><literal type="number" pos:line="600" pos:column="24">1<pos:position pos:line="600" pos:column="25"/></literal></expr>;<pos:position pos:line="600" pos:column="26"/></expr_stmt> <comment type="block" pos:line="600" pos:column="27">/* simulate being unloaded, should
                           * be unnecessary */</comment>
    <expr_stmt><expr><name pos:line="602" pos:column="5">dynamic_modules<pos:position pos:line="602" pos:column="20"/></name><operator pos:line="602" pos:column="20">--<pos:position pos:line="602" pos:column="22"/></operator></expr>;<pos:position pos:line="602" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="603" pos:column="5">total_modules<pos:position pos:line="603" pos:column="18"/></name><operator pos:line="603" pos:column="18">--<pos:position pos:line="603" pos:column="20"/></operator></expr>;<pos:position pos:line="603" pos:column="21"/></expr_stmt>
}<pos:position pos:line="604" pos:column="2"/></block>

<macro><name pos:line="606" pos:column="1">AP_DECLARE<pos:position pos:line="606" pos:column="11"/></name><argument_list pos:line="606" pos:column="11">(<argument pos:line="606" pos:column="12">const char *<pos:position pos:line="606" pos:column="24"/></argument>)<pos:position pos:line="606" pos:column="25"/></argument_list></macro> <macro><name pos:line="606" pos:column="26">ap_add_loaded_module<pos:position pos:line="606" pos:column="46"/></name><argument_list pos:line="606" pos:column="46">(<argument pos:line="606" pos:column="47">module *mod<pos:position pos:line="606" pos:column="58"/></argument>, <argument pos:line="606" pos:column="60">apr_pool_t *p<pos:position pos:line="606" pos:column="73"/></argument>)<pos:position pos:line="606" pos:column="74"/></argument_list></macro>
<block pos:line="607" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="608" pos:column="5">module<pos:position pos:line="608" pos:column="11"/></name> <modifier pos:line="608" pos:column="12">*<pos:position pos:line="608" pos:column="13"/></modifier><modifier pos:line="608" pos:column="13">*<pos:position pos:line="608" pos:column="14"/></modifier></type><name pos:line="608" pos:column="14">m<pos:position pos:line="608" pos:column="15"/></name></decl>;<pos:position pos:line="608" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="609" pos:column="5">const<pos:position pos:line="609" pos:column="10"/></specifier> <name pos:line="609" pos:column="11">char<pos:position pos:line="609" pos:column="15"/></name> <modifier pos:line="609" pos:column="16">*<pos:position pos:line="609" pos:column="17"/></modifier></type><name pos:line="609" pos:column="17">error<pos:position pos:line="609" pos:column="22"/></name></decl>;<pos:position pos:line="609" pos:column="23"/></decl_stmt>

    <comment type="block" pos:line="611" pos:column="5">/*
     *  Add module pointer to top of chained module list
     */</comment>
    <expr_stmt><expr><name pos:line="614" pos:column="5">error<pos:position pos:line="614" pos:column="10"/></name> <operator pos:line="614" pos:column="11">=<pos:position pos:line="614" pos:column="12"/></operator> <call><name pos:line="614" pos:column="13">ap_add_module<pos:position pos:line="614" pos:column="26"/></name><argument_list pos:line="614" pos:column="26">(<argument><expr><name pos:line="614" pos:column="27">mod<pos:position pos:line="614" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="614" pos:column="32">p<pos:position pos:line="614" pos:column="33"/></name></expr></argument>)<pos:position pos:line="614" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="35"/></expr_stmt>
    <if pos:line="615" pos:column="5">if <condition pos:line="615" pos:column="8">(<expr><name pos:line="615" pos:column="9">error<pos:position pos:line="615" pos:column="14"/></name></expr>)<pos:position pos:line="615" pos:column="15"/></condition><then pos:line="615" pos:column="15"> <block pos:line="615" pos:column="16">{
        <return pos:line="616" pos:column="9">return <expr><name pos:line="616" pos:column="16">error<pos:position pos:line="616" pos:column="21"/></name></expr>;<pos:position pos:line="616" pos:column="22"/></return>
    }<pos:position pos:line="617" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="619" pos:column="5">/*
     *  And module pointer to list of loaded modules
     *
     *  Notes: 1. ap_add_module() would already complain if no more space
     *            exists for adding a dynamically loaded module
     *         2. ap_add_module() accepts double inclusion, so we have
     *            to accept this, too.
     */</comment>
    <for pos:line="627" pos:column="5">for <control pos:line="627" pos:column="9">(<init><expr><name pos:line="627" pos:column="10">m<pos:position pos:line="627" pos:column="11"/></name> <operator pos:line="627" pos:column="12">=<pos:position pos:line="627" pos:column="13"/></operator> <name pos:line="627" pos:column="14">ap_loaded_modules<pos:position pos:line="627" pos:column="31"/></name></expr>;<pos:position pos:line="627" pos:column="32"/></init> <condition><expr><operator pos:line="627" pos:column="33">*<pos:position pos:line="627" pos:column="34"/></operator><name pos:line="627" pos:column="34">m<pos:position pos:line="627" pos:column="35"/></name> <operator pos:line="627" pos:column="36">!=<pos:position pos:line="627" pos:column="38"/></operator> <name pos:line="627" pos:column="39">NULL<pos:position pos:line="627" pos:column="43"/></name></expr>;<pos:position pos:line="627" pos:column="44"/></condition> <incr><expr><name pos:line="627" pos:column="45">m<pos:position pos:line="627" pos:column="46"/></name><operator pos:line="627" pos:column="46">++<pos:position pos:line="627" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="627" pos:column="49"/></control>
        <block type="pseudo"><empty_stmt pos:line="628" pos:column="9">;<pos:position pos:line="628" pos:column="10"/></empty_stmt></block></for>
    <expr_stmt><expr><operator pos:line="629" pos:column="5">*<pos:position pos:line="629" pos:column="6"/></operator><name pos:line="629" pos:column="6">m<pos:position pos:line="629" pos:column="7"/></name><operator pos:line="629" pos:column="7">++<pos:position pos:line="629" pos:column="9"/></operator> <operator pos:line="629" pos:column="10">=<pos:position pos:line="629" pos:column="11"/></operator> <name pos:line="629" pos:column="12">mod<pos:position pos:line="629" pos:column="15"/></name></expr>;<pos:position pos:line="629" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="630" pos:column="5">*<pos:position pos:line="630" pos:column="6"/></operator><name pos:line="630" pos:column="6">m<pos:position pos:line="630" pos:column="7"/></name> <operator pos:line="630" pos:column="8">=<pos:position pos:line="630" pos:column="9"/></operator> <name pos:line="630" pos:column="10">NULL<pos:position pos:line="630" pos:column="14"/></name></expr>;<pos:position pos:line="630" pos:column="15"/></expr_stmt>

    <return pos:line="632" pos:column="5">return <expr><name pos:line="632" pos:column="12">NULL<pos:position pos:line="632" pos:column="16"/></name></expr>;<pos:position pos:line="632" pos:column="17"/></return>
}<pos:position pos:line="633" pos:column="2"/></block>

<macro><name pos:line="635" pos:column="1">AP_DECLARE<pos:position pos:line="635" pos:column="11"/></name><argument_list pos:line="635" pos:column="11">(<argument pos:line="635" pos:column="12">void<pos:position pos:line="635" pos:column="16"/></argument>)<pos:position pos:line="635" pos:column="17"/></argument_list></macro> <macro><name pos:line="635" pos:column="18">ap_remove_loaded_module<pos:position pos:line="635" pos:column="41"/></name><argument_list pos:line="635" pos:column="41">(<argument pos:line="635" pos:column="42">module *mod<pos:position pos:line="635" pos:column="53"/></argument>)<pos:position pos:line="635" pos:column="54"/></argument_list></macro>
<block pos:line="636" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="637" pos:column="5">module<pos:position pos:line="637" pos:column="11"/></name> <modifier pos:line="637" pos:column="12">*<pos:position pos:line="637" pos:column="13"/></modifier><modifier pos:line="637" pos:column="13">*<pos:position pos:line="637" pos:column="14"/></modifier></type><name pos:line="637" pos:column="14">m<pos:position pos:line="637" pos:column="15"/></name></decl>;<pos:position pos:line="637" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="638" pos:column="5">module<pos:position pos:line="638" pos:column="11"/></name> <modifier pos:line="638" pos:column="12">*<pos:position pos:line="638" pos:column="13"/></modifier><modifier pos:line="638" pos:column="13">*<pos:position pos:line="638" pos:column="14"/></modifier></type><name pos:line="638" pos:column="14">m2<pos:position pos:line="638" pos:column="16"/></name></decl>;<pos:position pos:line="638" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="639" pos:column="5">int<pos:position pos:line="639" pos:column="8"/></name></type> <name pos:line="639" pos:column="9">done<pos:position pos:line="639" pos:column="13"/></name></decl>;<pos:position pos:line="639" pos:column="14"/></decl_stmt>

    <comment type="block" pos:line="641" pos:column="5">/*
     *  Remove module pointer from chained module list
     */</comment>
    <expr_stmt><expr><call><name pos:line="644" pos:column="5">ap_remove_module<pos:position pos:line="644" pos:column="21"/></name><argument_list pos:line="644" pos:column="21">(<argument><expr><name pos:line="644" pos:column="22">mod<pos:position pos:line="644" pos:column="25"/></name></expr></argument>)<pos:position pos:line="644" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="644" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="646" pos:column="5">/*
     *  Remove module pointer from list of loaded modules
     *
     *  Note: 1. We cannot determine if the module was successfully
     *           removed by ap_remove_module().
     *        2. We have not to complain explicity when the module
     *           is not found because ap_remove_module() did it
     *           for us already.
     */</comment>
    <for pos:line="655" pos:column="5">for <control pos:line="655" pos:column="9">(<init><expr><name pos:line="655" pos:column="10">m<pos:position pos:line="655" pos:column="11"/></name> <operator pos:line="655" pos:column="12">=<pos:position pos:line="655" pos:column="13"/></operator> <name pos:line="655" pos:column="14">m2<pos:position pos:line="655" pos:column="16"/></name> <operator pos:line="655" pos:column="17">=<pos:position pos:line="655" pos:column="18"/></operator> <name pos:line="655" pos:column="19">ap_loaded_modules<pos:position pos:line="655" pos:column="36"/></name></expr><operator pos:line="655" pos:column="36">,<pos:position pos:line="655" pos:column="37"/></operator> <expr><name pos:line="655" pos:column="38">done<pos:position pos:line="655" pos:column="42"/></name> <operator pos:line="655" pos:column="43">=<pos:position pos:line="655" pos:column="44"/></operator> <literal type="number" pos:line="655" pos:column="45">0<pos:position pos:line="655" pos:column="46"/></literal></expr>;<pos:position pos:line="655" pos:column="47"/></init> <condition><expr><operator pos:line="655" pos:column="48">*<pos:position pos:line="655" pos:column="49"/></operator><name pos:line="655" pos:column="49">m2<pos:position pos:line="655" pos:column="51"/></name> <operator pos:line="655" pos:column="52">!=<pos:position pos:line="655" pos:column="54"/></operator> <name pos:line="655" pos:column="55">NULL<pos:position pos:line="655" pos:column="59"/></name></expr>;<pos:position pos:line="655" pos:column="60"/></condition> <incr><expr><name pos:line="655" pos:column="61">m2<pos:position pos:line="655" pos:column="63"/></name><operator pos:line="655" pos:column="63">++<pos:position pos:line="655" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="655" pos:column="66"/></control> <block pos:line="655" pos:column="67">{
        <if pos:line="656" pos:column="9">if <condition pos:line="656" pos:column="12">(<expr><operator pos:line="656" pos:column="13">*<pos:position pos:line="656" pos:column="14"/></operator><name pos:line="656" pos:column="14">m2<pos:position pos:line="656" pos:column="16"/></name> <operator pos:line="656" pos:column="17">==<pos:position pos:line="656" pos:column="19"/></operator> <name pos:line="656" pos:column="20">mod<pos:position pos:line="656" pos:column="23"/></name> <operator pos:line="656" pos:column="24">&amp;&amp;<pos:position pos:line="656" pos:column="34"/></operator> <name pos:line="656" pos:column="27">done<pos:position pos:line="656" pos:column="31"/></name> <operator pos:line="656" pos:column="32">==<pos:position pos:line="656" pos:column="34"/></operator> <literal type="number" pos:line="656" pos:column="35">0<pos:position pos:line="656" pos:column="36"/></literal></expr>)<pos:position pos:line="656" pos:column="37"/></condition><then pos:line="656" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><name pos:line="657" pos:column="13">done<pos:position pos:line="657" pos:column="17"/></name> <operator pos:line="657" pos:column="18">=<pos:position pos:line="657" pos:column="19"/></operator> <literal type="number" pos:line="657" pos:column="20">1<pos:position pos:line="657" pos:column="21"/></literal></expr>;<pos:position pos:line="657" pos:column="22"/></expr_stmt></block></then>
        <else pos:line="658" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="659" pos:column="13">*<pos:position pos:line="659" pos:column="14"/></operator><name pos:line="659" pos:column="14">m<pos:position pos:line="659" pos:column="15"/></name><operator pos:line="659" pos:column="15">++<pos:position pos:line="659" pos:column="17"/></operator> <operator pos:line="659" pos:column="18">=<pos:position pos:line="659" pos:column="19"/></operator> <operator pos:line="659" pos:column="20">*<pos:position pos:line="659" pos:column="21"/></operator><name pos:line="659" pos:column="21">m2<pos:position pos:line="659" pos:column="23"/></name></expr>;<pos:position pos:line="659" pos:column="24"/></expr_stmt></block></else></if>
    }<pos:position pos:line="660" pos:column="6"/></block></for>

    <expr_stmt><expr><operator pos:line="662" pos:column="5">*<pos:position pos:line="662" pos:column="6"/></operator><name pos:line="662" pos:column="6">m<pos:position pos:line="662" pos:column="7"/></name> <operator pos:line="662" pos:column="8">=<pos:position pos:line="662" pos:column="9"/></operator> <name pos:line="662" pos:column="10">NULL<pos:position pos:line="662" pos:column="14"/></name></expr>;<pos:position pos:line="662" pos:column="15"/></expr_stmt>
}<pos:position pos:line="663" pos:column="2"/></block>

<macro><name pos:line="665" pos:column="1">AP_DECLARE<pos:position pos:line="665" pos:column="11"/></name><argument_list pos:line="665" pos:column="11">(<argument pos:line="665" pos:column="12">const char *<pos:position pos:line="665" pos:column="24"/></argument>)<pos:position pos:line="665" pos:column="25"/></argument_list></macro> <macro><name pos:line="665" pos:column="26">ap_setup_prelinked_modules<pos:position pos:line="665" pos:column="52"/></name><argument_list pos:line="665" pos:column="52">(<argument pos:line="665" pos:column="53">process_rec *process<pos:position pos:line="665" pos:column="73"/></argument>)<pos:position pos:line="665" pos:column="74"/></argument_list></macro>
<block pos:line="666" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="667" pos:column="5">module<pos:position pos:line="667" pos:column="11"/></name> <modifier pos:line="667" pos:column="12">*<pos:position pos:line="667" pos:column="13"/></modifier><modifier pos:line="667" pos:column="13">*<pos:position pos:line="667" pos:column="14"/></modifier></type><name pos:line="667" pos:column="14">m<pos:position pos:line="667" pos:column="15"/></name></decl>;<pos:position pos:line="667" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="668" pos:column="5">module<pos:position pos:line="668" pos:column="11"/></name> <modifier pos:line="668" pos:column="12">*<pos:position pos:line="668" pos:column="13"/></modifier><modifier pos:line="668" pos:column="13">*<pos:position pos:line="668" pos:column="14"/></modifier></type><name pos:line="668" pos:column="14">m2<pos:position pos:line="668" pos:column="16"/></name></decl>;<pos:position pos:line="668" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="669" pos:column="5">const<pos:position pos:line="669" pos:column="10"/></specifier> <name pos:line="669" pos:column="11">char<pos:position pos:line="669" pos:column="15"/></name> <modifier pos:line="669" pos:column="16">*<pos:position pos:line="669" pos:column="17"/></modifier></type><name pos:line="669" pos:column="17">error<pos:position pos:line="669" pos:column="22"/></name></decl>;<pos:position pos:line="669" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="671" pos:column="5">apr_hook_global_pool<pos:position pos:line="671" pos:column="25"/></name><operator pos:line="671" pos:column="25">=<pos:position pos:line="671" pos:column="26"/></operator><name><name pos:line="671" pos:column="26">process<pos:position pos:line="671" pos:column="33"/></name><operator pos:line="671" pos:column="33">-&gt;<pos:position pos:line="671" pos:column="38"/></operator><name pos:line="671" pos:column="35">pconf<pos:position pos:line="671" pos:column="40"/></name></name></expr>;<pos:position pos:line="671" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="673" pos:column="5">rebuild_conf_hash<pos:position pos:line="673" pos:column="22"/></name><argument_list pos:line="673" pos:column="22">(<argument><expr><name><name pos:line="673" pos:column="23">process<pos:position pos:line="673" pos:column="30"/></name><operator pos:line="673" pos:column="30">-&gt;<pos:position pos:line="673" pos:column="35"/></operator><name pos:line="673" pos:column="32">pconf<pos:position pos:line="673" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="673" pos:column="39">0<pos:position pos:line="673" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="673" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="673" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="675" pos:column="5">/*
     *  Initialise total_modules variable and module indices
     */</comment>
    <expr_stmt><expr><name pos:line="678" pos:column="5">total_modules<pos:position pos:line="678" pos:column="18"/></name> <operator pos:line="678" pos:column="19">=<pos:position pos:line="678" pos:column="20"/></operator> <literal type="number" pos:line="678" pos:column="21">0<pos:position pos:line="678" pos:column="22"/></literal></expr>;<pos:position pos:line="678" pos:column="23"/></expr_stmt>
    <for pos:line="679" pos:column="5">for <control pos:line="679" pos:column="9">(<init><expr><name pos:line="679" pos:column="10">m<pos:position pos:line="679" pos:column="11"/></name> <operator pos:line="679" pos:column="12">=<pos:position pos:line="679" pos:column="13"/></operator> <name pos:line="679" pos:column="14">ap_preloaded_modules<pos:position pos:line="679" pos:column="34"/></name></expr>;<pos:position pos:line="679" pos:column="35"/></init> <condition><expr><operator pos:line="679" pos:column="36">*<pos:position pos:line="679" pos:column="37"/></operator><name pos:line="679" pos:column="37">m<pos:position pos:line="679" pos:column="38"/></name> <operator pos:line="679" pos:column="39">!=<pos:position pos:line="679" pos:column="41"/></operator> <name pos:line="679" pos:column="42">NULL<pos:position pos:line="679" pos:column="46"/></name></expr>;<pos:position pos:line="679" pos:column="47"/></condition> <incr><expr><name pos:line="679" pos:column="48">m<pos:position pos:line="679" pos:column="49"/></name><operator pos:line="679" pos:column="49">++<pos:position pos:line="679" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="679" pos:column="52"/></control>
        <block type="pseudo"><expr_stmt><expr><name><operator pos:line="680" pos:column="9">(<pos:position pos:line="680" pos:column="10"/></operator><operator pos:line="680" pos:column="10">*<pos:position pos:line="680" pos:column="11"/></operator><name pos:line="680" pos:column="11">m<pos:position pos:line="680" pos:column="12"/></name><operator pos:line="680" pos:column="12">)<pos:position pos:line="680" pos:column="13"/></operator><operator pos:line="680" pos:column="13">-&gt;<pos:position pos:line="680" pos:column="18"/></operator><name pos:line="680" pos:column="15">module_index<pos:position pos:line="680" pos:column="27"/></name></name> <operator pos:line="680" pos:column="28">=<pos:position pos:line="680" pos:column="29"/></operator> <name pos:line="680" pos:column="30">total_modules<pos:position pos:line="680" pos:column="43"/></name><operator pos:line="680" pos:column="43">++<pos:position pos:line="680" pos:column="45"/></operator></expr>;<pos:position pos:line="680" pos:column="46"/></expr_stmt></block></for>

    <comment type="block" pos:line="682" pos:column="5">/*
     *  Initialise list of loaded modules
     */</comment>
    <expr_stmt><expr><name pos:line="685" pos:column="5">ap_loaded_modules<pos:position pos:line="685" pos:column="22"/></name> <operator pos:line="685" pos:column="23">=<pos:position pos:line="685" pos:column="24"/></operator> <operator pos:line="685" pos:column="25">(<pos:position pos:line="685" pos:column="26"/></operator><name pos:line="685" pos:column="26">module<pos:position pos:line="685" pos:column="32"/></name> <operator pos:line="685" pos:column="33">*<pos:position pos:line="685" pos:column="34"/></operator><operator pos:line="685" pos:column="34">*<pos:position pos:line="685" pos:column="35"/></operator><operator pos:line="685" pos:column="35">)<pos:position pos:line="685" pos:column="36"/></operator><call><name pos:line="685" pos:column="36">apr_palloc<pos:position pos:line="685" pos:column="46"/></name><argument_list pos:line="685" pos:column="46">(<argument><expr><name><name pos:line="685" pos:column="47">process<pos:position pos:line="685" pos:column="54"/></name><operator pos:line="685" pos:column="54">-&gt;<pos:position pos:line="685" pos:column="59"/></operator><name pos:line="685" pos:column="56">pool<pos:position pos:line="685" pos:column="60"/></name></name></expr></argument>,
        <argument><expr><sizeof pos:line="686" pos:column="9">sizeof<argument_list pos:line="686" pos:column="15">(<argument><expr><name pos:line="686" pos:column="16">module<pos:position pos:line="686" pos:column="22"/></name> <operator pos:line="686" pos:column="23">*<pos:position pos:line="686" pos:column="24"/></operator></expr></argument>)<pos:position pos:line="686" pos:column="25"/></argument_list></sizeof> <operator pos:line="686" pos:column="26">*<pos:position pos:line="686" pos:column="27"/></operator> <operator pos:line="686" pos:column="28">(<pos:position pos:line="686" pos:column="29"/></operator><name pos:line="686" pos:column="29">total_modules<pos:position pos:line="686" pos:column="42"/></name> <operator pos:line="686" pos:column="43">+<pos:position pos:line="686" pos:column="44"/></operator> <name pos:line="686" pos:column="45">DYNAMIC_MODULE_LIMIT<pos:position pos:line="686" pos:column="65"/></name> <operator pos:line="686" pos:column="66">+<pos:position pos:line="686" pos:column="67"/></operator> <literal type="number" pos:line="686" pos:column="68">1<pos:position pos:line="686" pos:column="69"/></literal><operator pos:line="686" pos:column="69">)<pos:position pos:line="686" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="686" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="686" pos:column="72"/></expr_stmt>

    <if pos:line="688" pos:column="5">if <condition pos:line="688" pos:column="8">(<expr><name pos:line="688" pos:column="9">ap_loaded_modules<pos:position pos:line="688" pos:column="26"/></name> <operator pos:line="688" pos:column="27">==<pos:position pos:line="688" pos:column="29"/></operator> <name pos:line="688" pos:column="30">NULL<pos:position pos:line="688" pos:column="34"/></name></expr>)<pos:position pos:line="688" pos:column="35"/></condition><then pos:line="688" pos:column="35"> <block pos:line="688" pos:column="36">{
        <return pos:line="689" pos:column="9">return <expr><literal type="string" pos:line="689" pos:column="16">"Ouch! Out of memory in ap_setup_prelinked_modules()!"<pos:position pos:line="689" pos:column="70"/></literal></expr>;<pos:position pos:line="689" pos:column="71"/></return>
    }<pos:position pos:line="690" pos:column="6"/></block></then></if>

    <for pos:line="692" pos:column="5">for <control pos:line="692" pos:column="9">(<init><expr><name pos:line="692" pos:column="10">m<pos:position pos:line="692" pos:column="11"/></name> <operator pos:line="692" pos:column="12">=<pos:position pos:line="692" pos:column="13"/></operator> <name pos:line="692" pos:column="14">ap_preloaded_modules<pos:position pos:line="692" pos:column="34"/></name></expr><operator pos:line="692" pos:column="34">,<pos:position pos:line="692" pos:column="35"/></operator> <expr><name pos:line="692" pos:column="36">m2<pos:position pos:line="692" pos:column="38"/></name> <operator pos:line="692" pos:column="39">=<pos:position pos:line="692" pos:column="40"/></operator> <name pos:line="692" pos:column="41">ap_loaded_modules<pos:position pos:line="692" pos:column="58"/></name></expr>;<pos:position pos:line="692" pos:column="59"/></init> <condition><expr><operator pos:line="692" pos:column="60">*<pos:position pos:line="692" pos:column="61"/></operator><name pos:line="692" pos:column="61">m<pos:position pos:line="692" pos:column="62"/></name> <operator pos:line="692" pos:column="63">!=<pos:position pos:line="692" pos:column="65"/></operator> <name pos:line="692" pos:column="66">NULL<pos:position pos:line="692" pos:column="70"/></name></expr>;<pos:position pos:line="692" pos:column="71"/></condition> <incr/>)<pos:position pos:line="692" pos:column="73"/></control>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="693" pos:column="9">*<pos:position pos:line="693" pos:column="10"/></operator><name pos:line="693" pos:column="10">m2<pos:position pos:line="693" pos:column="12"/></name><operator pos:line="693" pos:column="12">++<pos:position pos:line="693" pos:column="14"/></operator> <operator pos:line="693" pos:column="15">=<pos:position pos:line="693" pos:column="16"/></operator> <operator pos:line="693" pos:column="17">*<pos:position pos:line="693" pos:column="18"/></operator><name pos:line="693" pos:column="18">m<pos:position pos:line="693" pos:column="19"/></name><operator pos:line="693" pos:column="19">++<pos:position pos:line="693" pos:column="21"/></operator></expr>;<pos:position pos:line="693" pos:column="22"/></expr_stmt></block></for>

    <expr_stmt><expr><operator pos:line="695" pos:column="5">*<pos:position pos:line="695" pos:column="6"/></operator><name pos:line="695" pos:column="6">m2<pos:position pos:line="695" pos:column="8"/></name> <operator pos:line="695" pos:column="9">=<pos:position pos:line="695" pos:column="10"/></operator> <name pos:line="695" pos:column="11">NULL<pos:position pos:line="695" pos:column="15"/></name></expr>;<pos:position pos:line="695" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="697" pos:column="5">/*
     *   Initialize chain of linked (=activate) modules
     */</comment>
    <for pos:line="700" pos:column="5">for <control pos:line="700" pos:column="9">(<init><expr><name pos:line="700" pos:column="10">m<pos:position pos:line="700" pos:column="11"/></name> <operator pos:line="700" pos:column="12">=<pos:position pos:line="700" pos:column="13"/></operator> <name pos:line="700" pos:column="14">ap_prelinked_modules<pos:position pos:line="700" pos:column="34"/></name></expr>;<pos:position pos:line="700" pos:column="35"/></init> <condition><expr><operator pos:line="700" pos:column="36">*<pos:position pos:line="700" pos:column="37"/></operator><name pos:line="700" pos:column="37">m<pos:position pos:line="700" pos:column="38"/></name> <operator pos:line="700" pos:column="39">!=<pos:position pos:line="700" pos:column="41"/></operator> <name pos:line="700" pos:column="42">NULL<pos:position pos:line="700" pos:column="46"/></name></expr>;<pos:position pos:line="700" pos:column="47"/></condition> <incr><expr><name pos:line="700" pos:column="48">m<pos:position pos:line="700" pos:column="49"/></name><operator pos:line="700" pos:column="49">++<pos:position pos:line="700" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="700" pos:column="52"/></control> <block pos:line="700" pos:column="53">{
        <expr_stmt><expr><name pos:line="701" pos:column="9">error<pos:position pos:line="701" pos:column="14"/></name> <operator pos:line="701" pos:column="15">=<pos:position pos:line="701" pos:column="16"/></operator> <call><name pos:line="701" pos:column="17">ap_add_module<pos:position pos:line="701" pos:column="30"/></name><argument_list pos:line="701" pos:column="30">(<argument><expr><operator pos:line="701" pos:column="31">*<pos:position pos:line="701" pos:column="32"/></operator><name pos:line="701" pos:column="32">m<pos:position pos:line="701" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="701" pos:column="35">process<pos:position pos:line="701" pos:column="42"/></name><operator pos:line="701" pos:column="42">-&gt;<pos:position pos:line="701" pos:column="47"/></operator><name pos:line="701" pos:column="44">pconf<pos:position pos:line="701" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="701" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="701" pos:column="51"/></expr_stmt>
        <if pos:line="702" pos:column="9">if <condition pos:line="702" pos:column="12">(<expr><name pos:line="702" pos:column="13">error<pos:position pos:line="702" pos:column="18"/></name></expr>)<pos:position pos:line="702" pos:column="19"/></condition><then pos:line="702" pos:column="19"> <block pos:line="702" pos:column="20">{
            <return pos:line="703" pos:column="13">return <expr><name pos:line="703" pos:column="20">error<pos:position pos:line="703" pos:column="25"/></name></expr>;<pos:position pos:line="703" pos:column="26"/></return>
        }<pos:position pos:line="704" pos:column="10"/></block></then></if>
    }<pos:position pos:line="705" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="707" pos:column="5">apr_hook_sort_all<pos:position pos:line="707" pos:column="22"/></name><argument_list pos:line="707" pos:column="22">()<pos:position pos:line="707" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="707" pos:column="25"/></expr_stmt>

    <return pos:line="709" pos:column="5">return <expr><name pos:line="709" pos:column="12">NULL<pos:position pos:line="709" pos:column="16"/></name></expr>;<pos:position pos:line="709" pos:column="17"/></return>
}<pos:position pos:line="710" pos:column="2"/></block>

<macro><name pos:line="712" pos:column="1">AP_DECLARE<pos:position pos:line="712" pos:column="11"/></name><argument_list pos:line="712" pos:column="11">(<argument pos:line="712" pos:column="12">const char *<pos:position pos:line="712" pos:column="24"/></argument>)<pos:position pos:line="712" pos:column="25"/></argument_list></macro> <macro><name pos:line="712" pos:column="26">ap_find_module_name<pos:position pos:line="712" pos:column="45"/></name><argument_list pos:line="712" pos:column="45">(<argument pos:line="712" pos:column="46">module *m<pos:position pos:line="712" pos:column="55"/></argument>)<pos:position pos:line="712" pos:column="56"/></argument_list></macro>
<block pos:line="713" pos:column="1">{
    <return pos:line="714" pos:column="5">return <expr><name><name pos:line="714" pos:column="12">m<pos:position pos:line="714" pos:column="13"/></name><operator pos:line="714" pos:column="13">-&gt;<pos:position pos:line="714" pos:column="18"/></operator><name pos:line="714" pos:column="15">name<pos:position pos:line="714" pos:column="19"/></name></name></expr>;<pos:position pos:line="714" pos:column="20"/></return>
}<pos:position pos:line="715" pos:column="2"/></block>

<macro><name pos:line="717" pos:column="1">AP_DECLARE<pos:position pos:line="717" pos:column="11"/></name><argument_list pos:line="717" pos:column="11">(<argument pos:line="717" pos:column="12">module *<pos:position pos:line="717" pos:column="20"/></argument>)<pos:position pos:line="717" pos:column="21"/></argument_list></macro> <macro><name pos:line="717" pos:column="22">ap_find_linked_module<pos:position pos:line="717" pos:column="43"/></name><argument_list pos:line="717" pos:column="43">(<argument pos:line="717" pos:column="44">const char *name<pos:position pos:line="717" pos:column="60"/></argument>)<pos:position pos:line="717" pos:column="61"/></argument_list></macro>
<block pos:line="718" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="719" pos:column="5">module<pos:position pos:line="719" pos:column="11"/></name> <modifier pos:line="719" pos:column="12">*<pos:position pos:line="719" pos:column="13"/></modifier></type><name pos:line="719" pos:column="13">modp<pos:position pos:line="719" pos:column="17"/></name></decl>;<pos:position pos:line="719" pos:column="18"/></decl_stmt>

    <for pos:line="721" pos:column="5">for <control pos:line="721" pos:column="9">(<init><expr><name pos:line="721" pos:column="10">modp<pos:position pos:line="721" pos:column="14"/></name> <operator pos:line="721" pos:column="15">=<pos:position pos:line="721" pos:column="16"/></operator> <name pos:line="721" pos:column="17">ap_top_module<pos:position pos:line="721" pos:column="30"/></name></expr>;<pos:position pos:line="721" pos:column="31"/></init> <condition><expr><name pos:line="721" pos:column="32">modp<pos:position pos:line="721" pos:column="36"/></name></expr>;<pos:position pos:line="721" pos:column="37"/></condition> <incr><expr><name pos:line="721" pos:column="38">modp<pos:position pos:line="721" pos:column="42"/></name> <operator pos:line="721" pos:column="43">=<pos:position pos:line="721" pos:column="44"/></operator> <name><name pos:line="721" pos:column="45">modp<pos:position pos:line="721" pos:column="49"/></name><operator pos:line="721" pos:column="49">-&gt;<pos:position pos:line="721" pos:column="54"/></operator><name pos:line="721" pos:column="51">next<pos:position pos:line="721" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="721" pos:column="56"/></control> <block pos:line="721" pos:column="57">{
        <if pos:line="722" pos:column="9">if <condition pos:line="722" pos:column="12">(<expr><call><name pos:line="722" pos:column="13">strcmp<pos:position pos:line="722" pos:column="19"/></name><argument_list pos:line="722" pos:column="19">(<argument><expr><name><name pos:line="722" pos:column="20">modp<pos:position pos:line="722" pos:column="24"/></name><operator pos:line="722" pos:column="24">-&gt;<pos:position pos:line="722" pos:column="29"/></operator><name pos:line="722" pos:column="26">name<pos:position pos:line="722" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="722" pos:column="32">name<pos:position pos:line="722" pos:column="36"/></name></expr></argument>)<pos:position pos:line="722" pos:column="37"/></argument_list></call> <operator pos:line="722" pos:column="38">==<pos:position pos:line="722" pos:column="40"/></operator> <literal type="number" pos:line="722" pos:column="41">0<pos:position pos:line="722" pos:column="42"/></literal></expr>)<pos:position pos:line="722" pos:column="43"/></condition><then pos:line="722" pos:column="43">
            <block type="pseudo"><return pos:line="723" pos:column="13">return <expr><name pos:line="723" pos:column="20">modp<pos:position pos:line="723" pos:column="24"/></name></expr>;<pos:position pos:line="723" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="724" pos:column="6"/></block></for>

    <return pos:line="726" pos:column="5">return <expr><name pos:line="726" pos:column="12">NULL<pos:position pos:line="726" pos:column="16"/></name></expr>;<pos:position pos:line="726" pos:column="17"/></return>
}<pos:position pos:line="727" pos:column="2"/></block>

<comment type="block" pos:line="729" pos:column="1">/*****************************************************************
 *
 * Resource, access, and .htaccess config files now parsed by a common
 * command loop.
 *
 * Let's begin with the basics; parsing the line and
 * invoking the function...
 */</comment>

<cpp:define pos:line="738" pos:column="1">#<cpp:directive pos:line="738" pos:column="2">define<pos:position pos:line="738" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="738" pos:column="9">AP_MAX_ARGC<pos:position pos:line="738" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="738" pos:column="21">64<pos:position pos:line="738" pos:column="23"/></cpp:value></cpp:define>

<function><specifier pos:line="740" pos:column="1">static<pos:position pos:line="740" pos:column="7"/></specifier> <type><specifier pos:line="740" pos:column="8">const<pos:position pos:line="740" pos:column="13"/></specifier> <name pos:line="740" pos:column="14">char<pos:position pos:line="740" pos:column="18"/></name> <modifier pos:line="740" pos:column="19">*<pos:position pos:line="740" pos:column="20"/></modifier></type><name pos:line="740" pos:column="20">invoke_cmd<pos:position pos:line="740" pos:column="30"/></name><parameter_list pos:line="740" pos:column="30">(<parameter><decl><type><specifier pos:line="740" pos:column="31">const<pos:position pos:line="740" pos:column="36"/></specifier> <name pos:line="740" pos:column="37">command_rec<pos:position pos:line="740" pos:column="48"/></name> <modifier pos:line="740" pos:column="49">*<pos:position pos:line="740" pos:column="50"/></modifier></type><name pos:line="740" pos:column="50">cmd<pos:position pos:line="740" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="740" pos:column="55">cmd_parms<pos:position pos:line="740" pos:column="64"/></name> <modifier pos:line="740" pos:column="65">*<pos:position pos:line="740" pos:column="66"/></modifier></type><name pos:line="740" pos:column="66">parms<pos:position pos:line="740" pos:column="71"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="741" pos:column="31">void<pos:position pos:line="741" pos:column="35"/></name> <modifier pos:line="741" pos:column="36">*<pos:position pos:line="741" pos:column="37"/></modifier></type><name pos:line="741" pos:column="37">mconfig<pos:position pos:line="741" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="741" pos:column="46">const<pos:position pos:line="741" pos:column="51"/></specifier> <name pos:line="741" pos:column="52">char<pos:position pos:line="741" pos:column="56"/></name> <modifier pos:line="741" pos:column="57">*<pos:position pos:line="741" pos:column="58"/></modifier></type><name pos:line="741" pos:column="58">args<pos:position pos:line="741" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="741" pos:column="63"/></parameter_list>
<block pos:line="742" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="743" pos:column="5">char<pos:position pos:line="743" pos:column="9"/></name> <modifier pos:line="743" pos:column="10">*<pos:position pos:line="743" pos:column="11"/></modifier></type><name pos:line="743" pos:column="11">w<pos:position pos:line="743" pos:column="12"/></name></decl>, <modifier pos:line="743" pos:column="14">*<pos:position pos:line="743" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="743" pos:column="15">w2<pos:position pos:line="743" pos:column="17"/></name></decl>, <modifier pos:line="743" pos:column="19">*<pos:position pos:line="743" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="743" pos:column="20">w3<pos:position pos:line="743" pos:column="22"/></name></decl>;<pos:position pos:line="743" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="744" pos:column="5">const<pos:position pos:line="744" pos:column="10"/></specifier> <name pos:line="744" pos:column="11">char<pos:position pos:line="744" pos:column="15"/></name> <modifier pos:line="744" pos:column="16">*<pos:position pos:line="744" pos:column="17"/></modifier></type><name pos:line="744" pos:column="17">errmsg<pos:position pos:line="744" pos:column="23"/></name> <init pos:line="744" pos:column="24">= <expr><name pos:line="744" pos:column="26">NULL<pos:position pos:line="744" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="744" pos:column="31"/></decl_stmt>

    <if pos:line="746" pos:column="5">if <condition pos:line="746" pos:column="8">(<expr><operator pos:line="746" pos:column="9">(<pos:position pos:line="746" pos:column="10"/></operator><name><name pos:line="746" pos:column="10">parms<pos:position pos:line="746" pos:column="15"/></name><operator pos:line="746" pos:column="15">-&gt;<pos:position pos:line="746" pos:column="20"/></operator><name pos:line="746" pos:column="17">override<pos:position pos:line="746" pos:column="25"/></name></name> <operator pos:line="746" pos:column="26">&amp;<pos:position pos:line="746" pos:column="31"/></operator> <name><name pos:line="746" pos:column="28">cmd<pos:position pos:line="746" pos:column="31"/></name><operator pos:line="746" pos:column="31">-&gt;<pos:position pos:line="746" pos:column="36"/></operator><name pos:line="746" pos:column="33">req_override<pos:position pos:line="746" pos:column="45"/></name></name><operator pos:line="746" pos:column="45">)<pos:position pos:line="746" pos:column="46"/></operator> <operator pos:line="746" pos:column="47">==<pos:position pos:line="746" pos:column="49"/></operator> <literal type="number" pos:line="746" pos:column="50">0<pos:position pos:line="746" pos:column="51"/></literal></expr>)<pos:position pos:line="746" pos:column="52"/></condition><then pos:line="746" pos:column="52">
        <block type="pseudo"><return pos:line="747" pos:column="9">return <expr><call><name pos:line="747" pos:column="16">apr_pstrcat<pos:position pos:line="747" pos:column="27"/></name><argument_list pos:line="747" pos:column="27">(<argument><expr><name><name pos:line="747" pos:column="28">parms<pos:position pos:line="747" pos:column="33"/></name><operator pos:line="747" pos:column="33">-&gt;<pos:position pos:line="747" pos:column="38"/></operator><name pos:line="747" pos:column="35">pool<pos:position pos:line="747" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="747" pos:column="41">cmd<pos:position pos:line="747" pos:column="44"/></name><operator pos:line="747" pos:column="44">-&gt;<pos:position pos:line="747" pos:column="49"/></operator><name pos:line="747" pos:column="46">name<pos:position pos:line="747" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="747" pos:column="52">" not allowed here"<pos:position pos:line="747" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="747" pos:column="73">NULL<pos:position pos:line="747" pos:column="77"/></name></expr></argument>)<pos:position pos:line="747" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="747" pos:column="79"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="749" pos:column="5">parms<pos:position pos:line="749" pos:column="10"/></name><operator pos:line="749" pos:column="10">-&gt;<pos:position pos:line="749" pos:column="15"/></operator><name pos:line="749" pos:column="12">info<pos:position pos:line="749" pos:column="16"/></name></name> <operator pos:line="749" pos:column="17">=<pos:position pos:line="749" pos:column="18"/></operator> <name><name pos:line="749" pos:column="19">cmd<pos:position pos:line="749" pos:column="22"/></name><operator pos:line="749" pos:column="22">-&gt;<pos:position pos:line="749" pos:column="27"/></operator><name pos:line="749" pos:column="24">cmd_data<pos:position pos:line="749" pos:column="32"/></name></name></expr>;<pos:position pos:line="749" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="750" pos:column="5">parms<pos:position pos:line="750" pos:column="10"/></name><operator pos:line="750" pos:column="10">-&gt;<pos:position pos:line="750" pos:column="15"/></operator><name pos:line="750" pos:column="12">cmd<pos:position pos:line="750" pos:column="15"/></name></name> <operator pos:line="750" pos:column="16">=<pos:position pos:line="750" pos:column="17"/></operator> <name pos:line="750" pos:column="18">cmd<pos:position pos:line="750" pos:column="21"/></name></expr>;<pos:position pos:line="750" pos:column="22"/></expr_stmt>

    <switch pos:line="752" pos:column="5">switch <condition pos:line="752" pos:column="12">(<expr><name><name pos:line="752" pos:column="13">cmd<pos:position pos:line="752" pos:column="16"/></name><operator pos:line="752" pos:column="16">-&gt;<pos:position pos:line="752" pos:column="21"/></operator><name pos:line="752" pos:column="18">args_how<pos:position pos:line="752" pos:column="26"/></name></name></expr>)<pos:position pos:line="752" pos:column="27"/></condition> <block pos:line="752" pos:column="28">{
    <case pos:line="753" pos:column="5">case <expr><name pos:line="753" pos:column="10">RAW_ARGS<pos:position pos:line="753" pos:column="18"/></name></expr>:<pos:position pos:line="753" pos:column="19"/></case>
<cpp:ifdef pos:line="754" pos:column="1">#<cpp:directive pos:line="754" pos:column="2">ifdef<pos:position pos:line="754" pos:column="7"/></cpp:directive> <name pos:line="754" pos:column="8">RESOLVE_ENV_PER_TOKEN<pos:position pos:line="754" pos:column="29"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="755" pos:column="9">args<pos:position pos:line="755" pos:column="13"/></name> <operator pos:line="755" pos:column="14">=<pos:position pos:line="755" pos:column="15"/></operator> <call><name pos:line="755" pos:column="16">ap_resolve_env<pos:position pos:line="755" pos:column="30"/></name><argument_list pos:line="755" pos:column="30">(<argument><expr><name><name pos:line="755" pos:column="31">parms<pos:position pos:line="755" pos:column="36"/></name><operator pos:line="755" pos:column="36">-&gt;<pos:position pos:line="755" pos:column="41"/></operator><name pos:line="755" pos:column="38">pool<pos:position pos:line="755" pos:column="42"/></name></name></expr></argument>,<argument><expr><name pos:line="755" pos:column="43">args<pos:position pos:line="755" pos:column="47"/></name></expr></argument>)<pos:position pos:line="755" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="755" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="756" pos:column="1">#<cpp:directive pos:line="756" pos:column="2">endif<pos:position pos:line="756" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="757" pos:column="9">return <expr><call><name><name pos:line="757" pos:column="16">cmd<pos:position pos:line="757" pos:column="19"/></name><operator pos:line="757" pos:column="19">-&gt;<pos:position pos:line="757" pos:column="24"/></operator><name pos:line="757" pos:column="21">AP_RAW_ARGS<pos:position pos:line="757" pos:column="32"/></name></name><argument_list pos:line="757" pos:column="32">(<argument><expr><name pos:line="757" pos:column="33">parms<pos:position pos:line="757" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="757" pos:column="40">mconfig<pos:position pos:line="757" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="757" pos:column="49">args<pos:position pos:line="757" pos:column="53"/></name></expr></argument>)<pos:position pos:line="757" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="757" pos:column="55"/></return>

    <case pos:line="759" pos:column="5">case <expr><name pos:line="759" pos:column="10">TAKE_ARGV<pos:position pos:line="759" pos:column="19"/></name></expr>:<pos:position pos:line="759" pos:column="20"/></case>
        <block pos:line="760" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="761" pos:column="13">char<pos:position pos:line="761" pos:column="17"/></name> <modifier pos:line="761" pos:column="18">*<pos:position pos:line="761" pos:column="19"/></modifier></type><name><name pos:line="761" pos:column="19">argv<pos:position pos:line="761" pos:column="23"/></name><index pos:line="761" pos:column="23">[<expr><name pos:line="761" pos:column="24">AP_MAX_ARGC<pos:position pos:line="761" pos:column="35"/></name></expr>]<pos:position pos:line="761" pos:column="36"/></index></name></decl>;<pos:position pos:line="761" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="762" pos:column="13">int<pos:position pos:line="762" pos:column="16"/></name></type> <name pos:line="762" pos:column="17">argc<pos:position pos:line="762" pos:column="21"/></name> <init pos:line="762" pos:column="22">= <expr><literal type="number" pos:line="762" pos:column="24">0<pos:position pos:line="762" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="762" pos:column="26"/></decl_stmt>

            <do pos:line="764" pos:column="13">do <block pos:line="764" pos:column="16">{
                <expr_stmt><expr><name pos:line="765" pos:column="17">w<pos:position pos:line="765" pos:column="18"/></name> <operator pos:line="765" pos:column="19">=<pos:position pos:line="765" pos:column="20"/></operator> <call><name pos:line="765" pos:column="21">ap_getword_conf<pos:position pos:line="765" pos:column="36"/></name><argument_list pos:line="765" pos:column="36">(<argument><expr><name><name pos:line="765" pos:column="37">parms<pos:position pos:line="765" pos:column="42"/></name><operator pos:line="765" pos:column="42">-&gt;<pos:position pos:line="765" pos:column="47"/></operator><name pos:line="765" pos:column="44">pool<pos:position pos:line="765" pos:column="48"/></name></name></expr></argument>, <argument><expr><operator pos:line="765" pos:column="50">&amp;<pos:position pos:line="765" pos:column="55"/></operator><name pos:line="765" pos:column="51">args<pos:position pos:line="765" pos:column="55"/></name></expr></argument>)<pos:position pos:line="765" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="765" pos:column="57"/></expr_stmt>
                <if pos:line="766" pos:column="17">if <condition pos:line="766" pos:column="20">(<expr><operator pos:line="766" pos:column="21">*<pos:position pos:line="766" pos:column="22"/></operator><name pos:line="766" pos:column="22">w<pos:position pos:line="766" pos:column="23"/></name> <operator pos:line="766" pos:column="24">==<pos:position pos:line="766" pos:column="26"/></operator> <literal type="char" pos:line="766" pos:column="27">'\0'<pos:position pos:line="766" pos:column="31"/></literal> <operator pos:line="766" pos:column="32">&amp;&amp;<pos:position pos:line="766" pos:column="42"/></operator> <operator pos:line="766" pos:column="35">*<pos:position pos:line="766" pos:column="36"/></operator><name pos:line="766" pos:column="36">args<pos:position pos:line="766" pos:column="40"/></name> <operator pos:line="766" pos:column="41">==<pos:position pos:line="766" pos:column="43"/></operator> <literal type="char" pos:line="766" pos:column="44">'\0'<pos:position pos:line="766" pos:column="48"/></literal></expr>)<pos:position pos:line="766" pos:column="49"/></condition><then pos:line="766" pos:column="49"> <block pos:line="766" pos:column="50">{
                    <break pos:line="767" pos:column="21">break;<pos:position pos:line="767" pos:column="27"/></break>
                }<pos:position pos:line="768" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name><name pos:line="769" pos:column="17">argv<pos:position pos:line="769" pos:column="21"/></name><index pos:line="769" pos:column="21">[<expr><name pos:line="769" pos:column="22">argc<pos:position pos:line="769" pos:column="26"/></name></expr>]<pos:position pos:line="769" pos:column="27"/></index></name> <operator pos:line="769" pos:column="28">=<pos:position pos:line="769" pos:column="29"/></operator> <name pos:line="769" pos:column="30">w<pos:position pos:line="769" pos:column="31"/></name></expr>;<pos:position pos:line="769" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><name pos:line="770" pos:column="17">argc<pos:position pos:line="770" pos:column="21"/></name><operator pos:line="770" pos:column="21">++<pos:position pos:line="770" pos:column="23"/></operator></expr>;<pos:position pos:line="770" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="771" pos:column="14"/></block> while <condition pos:line="771" pos:column="21">(<expr><name pos:line="771" pos:column="22">argc<pos:position pos:line="771" pos:column="26"/></name> <operator pos:line="771" pos:column="27">&lt;<pos:position pos:line="771" pos:column="31"/></operator> <name pos:line="771" pos:column="29">AP_MAX_ARGC<pos:position pos:line="771" pos:column="40"/></name> <operator pos:line="771" pos:column="41">&amp;&amp;<pos:position pos:line="771" pos:column="51"/></operator> <operator pos:line="771" pos:column="44">*<pos:position pos:line="771" pos:column="45"/></operator><name pos:line="771" pos:column="45">args<pos:position pos:line="771" pos:column="49"/></name> <operator pos:line="771" pos:column="50">!=<pos:position pos:line="771" pos:column="52"/></operator> <literal type="char" pos:line="771" pos:column="53">'\0'<pos:position pos:line="771" pos:column="57"/></literal></expr>)<pos:position pos:line="771" pos:column="58"/></condition>;<pos:position pos:line="771" pos:column="59"/></do>

            <return pos:line="773" pos:column="13">return <expr><call><name><name pos:line="773" pos:column="20">cmd<pos:position pos:line="773" pos:column="23"/></name><operator pos:line="773" pos:column="23">-&gt;<pos:position pos:line="773" pos:column="28"/></operator><name pos:line="773" pos:column="25">AP_TAKE_ARGV<pos:position pos:line="773" pos:column="37"/></name></name><argument_list pos:line="773" pos:column="37">(<argument><expr><name pos:line="773" pos:column="38">parms<pos:position pos:line="773" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="773" pos:column="45">mconfig<pos:position pos:line="773" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="773" pos:column="54">argc<pos:position pos:line="773" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="773" pos:column="60">argv<pos:position pos:line="773" pos:column="64"/></name></expr></argument>)<pos:position pos:line="773" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="773" pos:column="66"/></return>
        }<pos:position pos:line="774" pos:column="10"/></block>

    <case pos:line="776" pos:column="5">case <expr><name pos:line="776" pos:column="10">NO_ARGS<pos:position pos:line="776" pos:column="17"/></name></expr>:<pos:position pos:line="776" pos:column="18"/></case>
        <if pos:line="777" pos:column="9">if <condition pos:line="777" pos:column="12">(<expr><operator pos:line="777" pos:column="13">*<pos:position pos:line="777" pos:column="14"/></operator><name pos:line="777" pos:column="14">args<pos:position pos:line="777" pos:column="18"/></name> <operator pos:line="777" pos:column="19">!=<pos:position pos:line="777" pos:column="21"/></operator> <literal type="number" pos:line="777" pos:column="22">0<pos:position pos:line="777" pos:column="23"/></literal></expr>)<pos:position pos:line="777" pos:column="24"/></condition><then pos:line="777" pos:column="24">
            <block type="pseudo"><return pos:line="778" pos:column="13">return <expr><call><name pos:line="778" pos:column="20">apr_pstrcat<pos:position pos:line="778" pos:column="31"/></name><argument_list pos:line="778" pos:column="31">(<argument><expr><name><name pos:line="778" pos:column="32">parms<pos:position pos:line="778" pos:column="37"/></name><operator pos:line="778" pos:column="37">-&gt;<pos:position pos:line="778" pos:column="42"/></operator><name pos:line="778" pos:column="39">pool<pos:position pos:line="778" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="778" pos:column="45">cmd<pos:position pos:line="778" pos:column="48"/></name><operator pos:line="778" pos:column="48">-&gt;<pos:position pos:line="778" pos:column="53"/></operator><name pos:line="778" pos:column="50">name<pos:position pos:line="778" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="778" pos:column="56">" takes no arguments"<pos:position pos:line="778" pos:column="77"/></literal></expr></argument>,
                               <argument><expr><name pos:line="779" pos:column="32">NULL<pos:position pos:line="779" pos:column="36"/></name></expr></argument>)<pos:position pos:line="779" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="779" pos:column="38"/></return></block></then></if>

        <return pos:line="781" pos:column="9">return <expr><call><name><name pos:line="781" pos:column="16">cmd<pos:position pos:line="781" pos:column="19"/></name><operator pos:line="781" pos:column="19">-&gt;<pos:position pos:line="781" pos:column="24"/></operator><name pos:line="781" pos:column="21">AP_NO_ARGS<pos:position pos:line="781" pos:column="31"/></name></name><argument_list pos:line="781" pos:column="31">(<argument><expr><name pos:line="781" pos:column="32">parms<pos:position pos:line="781" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="781" pos:column="39">mconfig<pos:position pos:line="781" pos:column="46"/></name></expr></argument>)<pos:position pos:line="781" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="781" pos:column="48"/></return>

    <case pos:line="783" pos:column="5">case <expr><name pos:line="783" pos:column="10">TAKE1<pos:position pos:line="783" pos:column="15"/></name></expr>:<pos:position pos:line="783" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="784" pos:column="9">w<pos:position pos:line="784" pos:column="10"/></name> <operator pos:line="784" pos:column="11">=<pos:position pos:line="784" pos:column="12"/></operator> <call><name pos:line="784" pos:column="13">ap_getword_conf<pos:position pos:line="784" pos:column="28"/></name><argument_list pos:line="784" pos:column="28">(<argument><expr><name><name pos:line="784" pos:column="29">parms<pos:position pos:line="784" pos:column="34"/></name><operator pos:line="784" pos:column="34">-&gt;<pos:position pos:line="784" pos:column="39"/></operator><name pos:line="784" pos:column="36">pool<pos:position pos:line="784" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="784" pos:column="42">&amp;<pos:position pos:line="784" pos:column="47"/></operator><name pos:line="784" pos:column="43">args<pos:position pos:line="784" pos:column="47"/></name></expr></argument>)<pos:position pos:line="784" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="784" pos:column="49"/></expr_stmt>

        <if pos:line="786" pos:column="9">if <condition pos:line="786" pos:column="12">(<expr><operator pos:line="786" pos:column="13">*<pos:position pos:line="786" pos:column="14"/></operator><name pos:line="786" pos:column="14">w<pos:position pos:line="786" pos:column="15"/></name> <operator pos:line="786" pos:column="16">==<pos:position pos:line="786" pos:column="18"/></operator> <literal type="char" pos:line="786" pos:column="19">'\0'<pos:position pos:line="786" pos:column="23"/></literal> <operator pos:line="786" pos:column="24">||<pos:position pos:line="786" pos:column="26"/></operator> <operator pos:line="786" pos:column="27">*<pos:position pos:line="786" pos:column="28"/></operator><name pos:line="786" pos:column="28">args<pos:position pos:line="786" pos:column="32"/></name> <operator pos:line="786" pos:column="33">!=<pos:position pos:line="786" pos:column="35"/></operator> <literal type="number" pos:line="786" pos:column="36">0<pos:position pos:line="786" pos:column="37"/></literal></expr>)<pos:position pos:line="786" pos:column="38"/></condition><then pos:line="786" pos:column="38">
            <block type="pseudo"><return pos:line="787" pos:column="13">return <expr><call><name pos:line="787" pos:column="20">apr_pstrcat<pos:position pos:line="787" pos:column="31"/></name><argument_list pos:line="787" pos:column="31">(<argument><expr><name><name pos:line="787" pos:column="32">parms<pos:position pos:line="787" pos:column="37"/></name><operator pos:line="787" pos:column="37">-&gt;<pos:position pos:line="787" pos:column="42"/></operator><name pos:line="787" pos:column="39">pool<pos:position pos:line="787" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="787" pos:column="45">cmd<pos:position pos:line="787" pos:column="48"/></name><operator pos:line="787" pos:column="48">-&gt;<pos:position pos:line="787" pos:column="53"/></operator><name pos:line="787" pos:column="50">name<pos:position pos:line="787" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="787" pos:column="56">" takes one argument"<pos:position pos:line="787" pos:column="77"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="788" pos:column="32">cmd<pos:position pos:line="788" pos:column="35"/></name><operator pos:line="788" pos:column="35">-&gt;<pos:position pos:line="788" pos:column="40"/></operator><name pos:line="788" pos:column="37">errmsg<pos:position pos:line="788" pos:column="43"/></name></name></expr> ?<pos:position pos:line="788" pos:column="45"/></condition><then pos:line="788" pos:column="45"> <expr><literal type="string" pos:line="788" pos:column="46">", "<pos:position pos:line="788" pos:column="50"/></literal></expr> <pos:position pos:line="788" pos:column="51"/></then><else pos:line="788" pos:column="51">: <expr><name pos:line="788" pos:column="53">NULL<pos:position pos:line="788" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="788" pos:column="59">cmd<pos:position pos:line="788" pos:column="62"/></name><operator pos:line="788" pos:column="62">-&gt;<pos:position pos:line="788" pos:column="67"/></operator><name pos:line="788" pos:column="64">errmsg<pos:position pos:line="788" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="788" pos:column="72">NULL<pos:position pos:line="788" pos:column="76"/></name></expr></argument>)<pos:position pos:line="788" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="788" pos:column="78"/></return></block></then></if>

        <return pos:line="790" pos:column="9">return <expr><call><name><name pos:line="790" pos:column="16">cmd<pos:position pos:line="790" pos:column="19"/></name><operator pos:line="790" pos:column="19">-&gt;<pos:position pos:line="790" pos:column="24"/></operator><name pos:line="790" pos:column="21">AP_TAKE1<pos:position pos:line="790" pos:column="29"/></name></name><argument_list pos:line="790" pos:column="29">(<argument><expr><name pos:line="790" pos:column="30">parms<pos:position pos:line="790" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="790" pos:column="37">mconfig<pos:position pos:line="790" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="790" pos:column="46">w<pos:position pos:line="790" pos:column="47"/></name></expr></argument>)<pos:position pos:line="790" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="790" pos:column="49"/></return>

    <case pos:line="792" pos:column="5">case <expr><name pos:line="792" pos:column="10">TAKE2<pos:position pos:line="792" pos:column="15"/></name></expr>:<pos:position pos:line="792" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="793" pos:column="9">w<pos:position pos:line="793" pos:column="10"/></name> <operator pos:line="793" pos:column="11">=<pos:position pos:line="793" pos:column="12"/></operator> <call><name pos:line="793" pos:column="13">ap_getword_conf<pos:position pos:line="793" pos:column="28"/></name><argument_list pos:line="793" pos:column="28">(<argument><expr><name><name pos:line="793" pos:column="29">parms<pos:position pos:line="793" pos:column="34"/></name><operator pos:line="793" pos:column="34">-&gt;<pos:position pos:line="793" pos:column="39"/></operator><name pos:line="793" pos:column="36">pool<pos:position pos:line="793" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="793" pos:column="42">&amp;<pos:position pos:line="793" pos:column="47"/></operator><name pos:line="793" pos:column="43">args<pos:position pos:line="793" pos:column="47"/></name></expr></argument>)<pos:position pos:line="793" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="793" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="794" pos:column="9">w2<pos:position pos:line="794" pos:column="11"/></name> <operator pos:line="794" pos:column="12">=<pos:position pos:line="794" pos:column="13"/></operator> <call><name pos:line="794" pos:column="14">ap_getword_conf<pos:position pos:line="794" pos:column="29"/></name><argument_list pos:line="794" pos:column="29">(<argument><expr><name><name pos:line="794" pos:column="30">parms<pos:position pos:line="794" pos:column="35"/></name><operator pos:line="794" pos:column="35">-&gt;<pos:position pos:line="794" pos:column="40"/></operator><name pos:line="794" pos:column="37">pool<pos:position pos:line="794" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="794" pos:column="43">&amp;<pos:position pos:line="794" pos:column="48"/></operator><name pos:line="794" pos:column="44">args<pos:position pos:line="794" pos:column="48"/></name></expr></argument>)<pos:position pos:line="794" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="794" pos:column="50"/></expr_stmt>

        <if pos:line="796" pos:column="9">if <condition pos:line="796" pos:column="12">(<expr><operator pos:line="796" pos:column="13">*<pos:position pos:line="796" pos:column="14"/></operator><name pos:line="796" pos:column="14">w<pos:position pos:line="796" pos:column="15"/></name> <operator pos:line="796" pos:column="16">==<pos:position pos:line="796" pos:column="18"/></operator> <literal type="char" pos:line="796" pos:column="19">'\0'<pos:position pos:line="796" pos:column="23"/></literal> <operator pos:line="796" pos:column="24">||<pos:position pos:line="796" pos:column="26"/></operator> <operator pos:line="796" pos:column="27">*<pos:position pos:line="796" pos:column="28"/></operator><name pos:line="796" pos:column="28">w2<pos:position pos:line="796" pos:column="30"/></name> <operator pos:line="796" pos:column="31">==<pos:position pos:line="796" pos:column="33"/></operator> <literal type="char" pos:line="796" pos:column="34">'\0'<pos:position pos:line="796" pos:column="38"/></literal> <operator pos:line="796" pos:column="39">||<pos:position pos:line="796" pos:column="41"/></operator> <operator pos:line="796" pos:column="42">*<pos:position pos:line="796" pos:column="43"/></operator><name pos:line="796" pos:column="43">args<pos:position pos:line="796" pos:column="47"/></name> <operator pos:line="796" pos:column="48">!=<pos:position pos:line="796" pos:column="50"/></operator> <literal type="number" pos:line="796" pos:column="51">0<pos:position pos:line="796" pos:column="52"/></literal></expr>)<pos:position pos:line="796" pos:column="53"/></condition><then pos:line="796" pos:column="53">
            <block type="pseudo"><return pos:line="797" pos:column="13">return <expr><call><name pos:line="797" pos:column="20">apr_pstrcat<pos:position pos:line="797" pos:column="31"/></name><argument_list pos:line="797" pos:column="31">(<argument><expr><name><name pos:line="797" pos:column="32">parms<pos:position pos:line="797" pos:column="37"/></name><operator pos:line="797" pos:column="37">-&gt;<pos:position pos:line="797" pos:column="42"/></operator><name pos:line="797" pos:column="39">pool<pos:position pos:line="797" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="797" pos:column="45">cmd<pos:position pos:line="797" pos:column="48"/></name><operator pos:line="797" pos:column="48">-&gt;<pos:position pos:line="797" pos:column="53"/></operator><name pos:line="797" pos:column="50">name<pos:position pos:line="797" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="797" pos:column="56">" takes two arguments"<pos:position pos:line="797" pos:column="78"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="798" pos:column="32">cmd<pos:position pos:line="798" pos:column="35"/></name><operator pos:line="798" pos:column="35">-&gt;<pos:position pos:line="798" pos:column="40"/></operator><name pos:line="798" pos:column="37">errmsg<pos:position pos:line="798" pos:column="43"/></name></name></expr> ?<pos:position pos:line="798" pos:column="45"/></condition><then pos:line="798" pos:column="45"> <expr><literal type="string" pos:line="798" pos:column="46">", "<pos:position pos:line="798" pos:column="50"/></literal></expr> <pos:position pos:line="798" pos:column="51"/></then><else pos:line="798" pos:column="51">: <expr><name pos:line="798" pos:column="53">NULL<pos:position pos:line="798" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="798" pos:column="59">cmd<pos:position pos:line="798" pos:column="62"/></name><operator pos:line="798" pos:column="62">-&gt;<pos:position pos:line="798" pos:column="67"/></operator><name pos:line="798" pos:column="64">errmsg<pos:position pos:line="798" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="798" pos:column="72">NULL<pos:position pos:line="798" pos:column="76"/></name></expr></argument>)<pos:position pos:line="798" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="798" pos:column="78"/></return></block></then></if>

        <return pos:line="800" pos:column="9">return <expr><call><name><name pos:line="800" pos:column="16">cmd<pos:position pos:line="800" pos:column="19"/></name><operator pos:line="800" pos:column="19">-&gt;<pos:position pos:line="800" pos:column="24"/></operator><name pos:line="800" pos:column="21">AP_TAKE2<pos:position pos:line="800" pos:column="29"/></name></name><argument_list pos:line="800" pos:column="29">(<argument><expr><name pos:line="800" pos:column="30">parms<pos:position pos:line="800" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="800" pos:column="37">mconfig<pos:position pos:line="800" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="800" pos:column="46">w<pos:position pos:line="800" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="800" pos:column="49">w2<pos:position pos:line="800" pos:column="51"/></name></expr></argument>)<pos:position pos:line="800" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="800" pos:column="53"/></return>

    <case pos:line="802" pos:column="5">case <expr><name pos:line="802" pos:column="10">TAKE12<pos:position pos:line="802" pos:column="16"/></name></expr>:<pos:position pos:line="802" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="803" pos:column="9">w<pos:position pos:line="803" pos:column="10"/></name> <operator pos:line="803" pos:column="11">=<pos:position pos:line="803" pos:column="12"/></operator> <call><name pos:line="803" pos:column="13">ap_getword_conf<pos:position pos:line="803" pos:column="28"/></name><argument_list pos:line="803" pos:column="28">(<argument><expr><name><name pos:line="803" pos:column="29">parms<pos:position pos:line="803" pos:column="34"/></name><operator pos:line="803" pos:column="34">-&gt;<pos:position pos:line="803" pos:column="39"/></operator><name pos:line="803" pos:column="36">pool<pos:position pos:line="803" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="803" pos:column="42">&amp;<pos:position pos:line="803" pos:column="47"/></operator><name pos:line="803" pos:column="43">args<pos:position pos:line="803" pos:column="47"/></name></expr></argument>)<pos:position pos:line="803" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="803" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="804" pos:column="9">w2<pos:position pos:line="804" pos:column="11"/></name> <operator pos:line="804" pos:column="12">=<pos:position pos:line="804" pos:column="13"/></operator> <call><name pos:line="804" pos:column="14">ap_getword_conf<pos:position pos:line="804" pos:column="29"/></name><argument_list pos:line="804" pos:column="29">(<argument><expr><name><name pos:line="804" pos:column="30">parms<pos:position pos:line="804" pos:column="35"/></name><operator pos:line="804" pos:column="35">-&gt;<pos:position pos:line="804" pos:column="40"/></operator><name pos:line="804" pos:column="37">pool<pos:position pos:line="804" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="804" pos:column="43">&amp;<pos:position pos:line="804" pos:column="48"/></operator><name pos:line="804" pos:column="44">args<pos:position pos:line="804" pos:column="48"/></name></expr></argument>)<pos:position pos:line="804" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="804" pos:column="50"/></expr_stmt>

        <if pos:line="806" pos:column="9">if <condition pos:line="806" pos:column="12">(<expr><operator pos:line="806" pos:column="13">*<pos:position pos:line="806" pos:column="14"/></operator><name pos:line="806" pos:column="14">w<pos:position pos:line="806" pos:column="15"/></name> <operator pos:line="806" pos:column="16">==<pos:position pos:line="806" pos:column="18"/></operator> <literal type="char" pos:line="806" pos:column="19">'\0'<pos:position pos:line="806" pos:column="23"/></literal> <operator pos:line="806" pos:column="24">||<pos:position pos:line="806" pos:column="26"/></operator> <operator pos:line="806" pos:column="27">*<pos:position pos:line="806" pos:column="28"/></operator><name pos:line="806" pos:column="28">args<pos:position pos:line="806" pos:column="32"/></name> <operator pos:line="806" pos:column="33">!=<pos:position pos:line="806" pos:column="35"/></operator> <literal type="number" pos:line="806" pos:column="36">0<pos:position pos:line="806" pos:column="37"/></literal></expr>)<pos:position pos:line="806" pos:column="38"/></condition><then pos:line="806" pos:column="38">
            <block type="pseudo"><return pos:line="807" pos:column="13">return <expr><call><name pos:line="807" pos:column="20">apr_pstrcat<pos:position pos:line="807" pos:column="31"/></name><argument_list pos:line="807" pos:column="31">(<argument><expr><name><name pos:line="807" pos:column="32">parms<pos:position pos:line="807" pos:column="37"/></name><operator pos:line="807" pos:column="37">-&gt;<pos:position pos:line="807" pos:column="42"/></operator><name pos:line="807" pos:column="39">pool<pos:position pos:line="807" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="807" pos:column="45">cmd<pos:position pos:line="807" pos:column="48"/></name><operator pos:line="807" pos:column="48">-&gt;<pos:position pos:line="807" pos:column="53"/></operator><name pos:line="807" pos:column="50">name<pos:position pos:line="807" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="807" pos:column="56">" takes 1-2 arguments"<pos:position pos:line="807" pos:column="78"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="808" pos:column="32">cmd<pos:position pos:line="808" pos:column="35"/></name><operator pos:line="808" pos:column="35">-&gt;<pos:position pos:line="808" pos:column="40"/></operator><name pos:line="808" pos:column="37">errmsg<pos:position pos:line="808" pos:column="43"/></name></name></expr> ?<pos:position pos:line="808" pos:column="45"/></condition><then pos:line="808" pos:column="45"> <expr><literal type="string" pos:line="808" pos:column="46">", "<pos:position pos:line="808" pos:column="50"/></literal></expr> <pos:position pos:line="808" pos:column="51"/></then><else pos:line="808" pos:column="51">: <expr><name pos:line="808" pos:column="53">NULL<pos:position pos:line="808" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="808" pos:column="59">cmd<pos:position pos:line="808" pos:column="62"/></name><operator pos:line="808" pos:column="62">-&gt;<pos:position pos:line="808" pos:column="67"/></operator><name pos:line="808" pos:column="64">errmsg<pos:position pos:line="808" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="808" pos:column="72">NULL<pos:position pos:line="808" pos:column="76"/></name></expr></argument>)<pos:position pos:line="808" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="78"/></return></block></then></if>

        <return pos:line="810" pos:column="9">return <expr><call><name><name pos:line="810" pos:column="16">cmd<pos:position pos:line="810" pos:column="19"/></name><operator pos:line="810" pos:column="19">-&gt;<pos:position pos:line="810" pos:column="24"/></operator><name pos:line="810" pos:column="21">AP_TAKE2<pos:position pos:line="810" pos:column="29"/></name></name><argument_list pos:line="810" pos:column="29">(<argument><expr><name pos:line="810" pos:column="30">parms<pos:position pos:line="810" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="810" pos:column="37">mconfig<pos:position pos:line="810" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="810" pos:column="46">w<pos:position pos:line="810" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="810" pos:column="49">*<pos:position pos:line="810" pos:column="50"/></operator><name pos:line="810" pos:column="50">w2<pos:position pos:line="810" pos:column="52"/></name></expr> ?<pos:position pos:line="810" pos:column="54"/></condition><then pos:line="810" pos:column="54"> <expr><name pos:line="810" pos:column="55">w2<pos:position pos:line="810" pos:column="57"/></name></expr> <pos:position pos:line="810" pos:column="58"/></then><else pos:line="810" pos:column="58">: <expr><name pos:line="810" pos:column="60">NULL<pos:position pos:line="810" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="810" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="810" pos:column="66"/></return>

    <case pos:line="812" pos:column="5">case <expr><name pos:line="812" pos:column="10">TAKE3<pos:position pos:line="812" pos:column="15"/></name></expr>:<pos:position pos:line="812" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="813" pos:column="9">w<pos:position pos:line="813" pos:column="10"/></name> <operator pos:line="813" pos:column="11">=<pos:position pos:line="813" pos:column="12"/></operator> <call><name pos:line="813" pos:column="13">ap_getword_conf<pos:position pos:line="813" pos:column="28"/></name><argument_list pos:line="813" pos:column="28">(<argument><expr><name><name pos:line="813" pos:column="29">parms<pos:position pos:line="813" pos:column="34"/></name><operator pos:line="813" pos:column="34">-&gt;<pos:position pos:line="813" pos:column="39"/></operator><name pos:line="813" pos:column="36">pool<pos:position pos:line="813" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="813" pos:column="42">&amp;<pos:position pos:line="813" pos:column="47"/></operator><name pos:line="813" pos:column="43">args<pos:position pos:line="813" pos:column="47"/></name></expr></argument>)<pos:position pos:line="813" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="813" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="814" pos:column="9">w2<pos:position pos:line="814" pos:column="11"/></name> <operator pos:line="814" pos:column="12">=<pos:position pos:line="814" pos:column="13"/></operator> <call><name pos:line="814" pos:column="14">ap_getword_conf<pos:position pos:line="814" pos:column="29"/></name><argument_list pos:line="814" pos:column="29">(<argument><expr><name><name pos:line="814" pos:column="30">parms<pos:position pos:line="814" pos:column="35"/></name><operator pos:line="814" pos:column="35">-&gt;<pos:position pos:line="814" pos:column="40"/></operator><name pos:line="814" pos:column="37">pool<pos:position pos:line="814" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="814" pos:column="43">&amp;<pos:position pos:line="814" pos:column="48"/></operator><name pos:line="814" pos:column="44">args<pos:position pos:line="814" pos:column="48"/></name></expr></argument>)<pos:position pos:line="814" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="814" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="815" pos:column="9">w3<pos:position pos:line="815" pos:column="11"/></name> <operator pos:line="815" pos:column="12">=<pos:position pos:line="815" pos:column="13"/></operator> <call><name pos:line="815" pos:column="14">ap_getword_conf<pos:position pos:line="815" pos:column="29"/></name><argument_list pos:line="815" pos:column="29">(<argument><expr><name><name pos:line="815" pos:column="30">parms<pos:position pos:line="815" pos:column="35"/></name><operator pos:line="815" pos:column="35">-&gt;<pos:position pos:line="815" pos:column="40"/></operator><name pos:line="815" pos:column="37">pool<pos:position pos:line="815" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="815" pos:column="43">&amp;<pos:position pos:line="815" pos:column="48"/></operator><name pos:line="815" pos:column="44">args<pos:position pos:line="815" pos:column="48"/></name></expr></argument>)<pos:position pos:line="815" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="815" pos:column="50"/></expr_stmt>

        <if pos:line="817" pos:column="9">if <condition pos:line="817" pos:column="12">(<expr><operator pos:line="817" pos:column="13">*<pos:position pos:line="817" pos:column="14"/></operator><name pos:line="817" pos:column="14">w<pos:position pos:line="817" pos:column="15"/></name> <operator pos:line="817" pos:column="16">==<pos:position pos:line="817" pos:column="18"/></operator> <literal type="char" pos:line="817" pos:column="19">'\0'<pos:position pos:line="817" pos:column="23"/></literal> <operator pos:line="817" pos:column="24">||<pos:position pos:line="817" pos:column="26"/></operator> <operator pos:line="817" pos:column="27">*<pos:position pos:line="817" pos:column="28"/></operator><name pos:line="817" pos:column="28">w2<pos:position pos:line="817" pos:column="30"/></name> <operator pos:line="817" pos:column="31">==<pos:position pos:line="817" pos:column="33"/></operator> <literal type="char" pos:line="817" pos:column="34">'\0'<pos:position pos:line="817" pos:column="38"/></literal> <operator pos:line="817" pos:column="39">||<pos:position pos:line="817" pos:column="41"/></operator> <operator pos:line="817" pos:column="42">*<pos:position pos:line="817" pos:column="43"/></operator><name pos:line="817" pos:column="43">w3<pos:position pos:line="817" pos:column="45"/></name> <operator pos:line="817" pos:column="46">==<pos:position pos:line="817" pos:column="48"/></operator> <literal type="char" pos:line="817" pos:column="49">'\0'<pos:position pos:line="817" pos:column="53"/></literal> <operator pos:line="817" pos:column="54">||<pos:position pos:line="817" pos:column="56"/></operator> <operator pos:line="817" pos:column="57">*<pos:position pos:line="817" pos:column="58"/></operator><name pos:line="817" pos:column="58">args<pos:position pos:line="817" pos:column="62"/></name> <operator pos:line="817" pos:column="63">!=<pos:position pos:line="817" pos:column="65"/></operator> <literal type="number" pos:line="817" pos:column="66">0<pos:position pos:line="817" pos:column="67"/></literal></expr>)<pos:position pos:line="817" pos:column="68"/></condition><then pos:line="817" pos:column="68">
            <block type="pseudo"><return pos:line="818" pos:column="13">return <expr><call><name pos:line="818" pos:column="20">apr_pstrcat<pos:position pos:line="818" pos:column="31"/></name><argument_list pos:line="818" pos:column="31">(<argument><expr><name><name pos:line="818" pos:column="32">parms<pos:position pos:line="818" pos:column="37"/></name><operator pos:line="818" pos:column="37">-&gt;<pos:position pos:line="818" pos:column="42"/></operator><name pos:line="818" pos:column="39">pool<pos:position pos:line="818" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="818" pos:column="45">cmd<pos:position pos:line="818" pos:column="48"/></name><operator pos:line="818" pos:column="48">-&gt;<pos:position pos:line="818" pos:column="53"/></operator><name pos:line="818" pos:column="50">name<pos:position pos:line="818" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="818" pos:column="56">" takes three arguments"<pos:position pos:line="818" pos:column="80"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="819" pos:column="32">cmd<pos:position pos:line="819" pos:column="35"/></name><operator pos:line="819" pos:column="35">-&gt;<pos:position pos:line="819" pos:column="40"/></operator><name pos:line="819" pos:column="37">errmsg<pos:position pos:line="819" pos:column="43"/></name></name></expr> ?<pos:position pos:line="819" pos:column="45"/></condition><then pos:line="819" pos:column="45"> <expr><literal type="string" pos:line="819" pos:column="46">", "<pos:position pos:line="819" pos:column="50"/></literal></expr> <pos:position pos:line="819" pos:column="51"/></then><else pos:line="819" pos:column="51">: <expr><name pos:line="819" pos:column="53">NULL<pos:position pos:line="819" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="819" pos:column="59">cmd<pos:position pos:line="819" pos:column="62"/></name><operator pos:line="819" pos:column="62">-&gt;<pos:position pos:line="819" pos:column="67"/></operator><name pos:line="819" pos:column="64">errmsg<pos:position pos:line="819" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="819" pos:column="72">NULL<pos:position pos:line="819" pos:column="76"/></name></expr></argument>)<pos:position pos:line="819" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="819" pos:column="78"/></return></block></then></if>

        <return pos:line="821" pos:column="9">return <expr><call><name><name pos:line="821" pos:column="16">cmd<pos:position pos:line="821" pos:column="19"/></name><operator pos:line="821" pos:column="19">-&gt;<pos:position pos:line="821" pos:column="24"/></operator><name pos:line="821" pos:column="21">AP_TAKE3<pos:position pos:line="821" pos:column="29"/></name></name><argument_list pos:line="821" pos:column="29">(<argument><expr><name pos:line="821" pos:column="30">parms<pos:position pos:line="821" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="821" pos:column="37">mconfig<pos:position pos:line="821" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="821" pos:column="46">w<pos:position pos:line="821" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="821" pos:column="49">w2<pos:position pos:line="821" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="821" pos:column="53">w3<pos:position pos:line="821" pos:column="55"/></name></expr></argument>)<pos:position pos:line="821" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="821" pos:column="57"/></return>

    <case pos:line="823" pos:column="5">case <expr><name pos:line="823" pos:column="10">TAKE23<pos:position pos:line="823" pos:column="16"/></name></expr>:<pos:position pos:line="823" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="824" pos:column="9">w<pos:position pos:line="824" pos:column="10"/></name> <operator pos:line="824" pos:column="11">=<pos:position pos:line="824" pos:column="12"/></operator> <call><name pos:line="824" pos:column="13">ap_getword_conf<pos:position pos:line="824" pos:column="28"/></name><argument_list pos:line="824" pos:column="28">(<argument><expr><name><name pos:line="824" pos:column="29">parms<pos:position pos:line="824" pos:column="34"/></name><operator pos:line="824" pos:column="34">-&gt;<pos:position pos:line="824" pos:column="39"/></operator><name pos:line="824" pos:column="36">pool<pos:position pos:line="824" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="824" pos:column="42">&amp;<pos:position pos:line="824" pos:column="47"/></operator><name pos:line="824" pos:column="43">args<pos:position pos:line="824" pos:column="47"/></name></expr></argument>)<pos:position pos:line="824" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="824" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="825" pos:column="9">w2<pos:position pos:line="825" pos:column="11"/></name> <operator pos:line="825" pos:column="12">=<pos:position pos:line="825" pos:column="13"/></operator> <call><name pos:line="825" pos:column="14">ap_getword_conf<pos:position pos:line="825" pos:column="29"/></name><argument_list pos:line="825" pos:column="29">(<argument><expr><name><name pos:line="825" pos:column="30">parms<pos:position pos:line="825" pos:column="35"/></name><operator pos:line="825" pos:column="35">-&gt;<pos:position pos:line="825" pos:column="40"/></operator><name pos:line="825" pos:column="37">pool<pos:position pos:line="825" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="825" pos:column="43">&amp;<pos:position pos:line="825" pos:column="48"/></operator><name pos:line="825" pos:column="44">args<pos:position pos:line="825" pos:column="48"/></name></expr></argument>)<pos:position pos:line="825" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="825" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name pos:line="826" pos:column="9">w3<pos:position pos:line="826" pos:column="11"/></name> <operator pos:line="826" pos:column="12">=<pos:position pos:line="826" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="826" pos:column="14">*<pos:position pos:line="826" pos:column="15"/></operator><name pos:line="826" pos:column="15">args<pos:position pos:line="826" pos:column="19"/></name></expr> ?<pos:position pos:line="826" pos:column="21"/></condition><then pos:line="826" pos:column="21"> <expr><call><name pos:line="826" pos:column="22">ap_getword_conf<pos:position pos:line="826" pos:column="37"/></name><argument_list pos:line="826" pos:column="37">(<argument><expr><name><name pos:line="826" pos:column="38">parms<pos:position pos:line="826" pos:column="43"/></name><operator pos:line="826" pos:column="43">-&gt;<pos:position pos:line="826" pos:column="48"/></operator><name pos:line="826" pos:column="45">pool<pos:position pos:line="826" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="826" pos:column="51">&amp;<pos:position pos:line="826" pos:column="56"/></operator><name pos:line="826" pos:column="52">args<pos:position pos:line="826" pos:column="56"/></name></expr></argument>)<pos:position pos:line="826" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="826" pos:column="58"/></then><else pos:line="826" pos:column="58">: <expr><name pos:line="826" pos:column="60">NULL<pos:position pos:line="826" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="826" pos:column="65"/></expr_stmt>

        <if pos:line="828" pos:column="9">if <condition pos:line="828" pos:column="12">(<expr><operator pos:line="828" pos:column="13">*<pos:position pos:line="828" pos:column="14"/></operator><name pos:line="828" pos:column="14">w<pos:position pos:line="828" pos:column="15"/></name> <operator pos:line="828" pos:column="16">==<pos:position pos:line="828" pos:column="18"/></operator> <literal type="char" pos:line="828" pos:column="19">'\0'<pos:position pos:line="828" pos:column="23"/></literal> <operator pos:line="828" pos:column="24">||<pos:position pos:line="828" pos:column="26"/></operator> <operator pos:line="828" pos:column="27">*<pos:position pos:line="828" pos:column="28"/></operator><name pos:line="828" pos:column="28">w2<pos:position pos:line="828" pos:column="30"/></name> <operator pos:line="828" pos:column="31">==<pos:position pos:line="828" pos:column="33"/></operator> <literal type="char" pos:line="828" pos:column="34">'\0'<pos:position pos:line="828" pos:column="38"/></literal> <operator pos:line="828" pos:column="39">||<pos:position pos:line="828" pos:column="41"/></operator> <operator pos:line="828" pos:column="42">*<pos:position pos:line="828" pos:column="43"/></operator><name pos:line="828" pos:column="43">args<pos:position pos:line="828" pos:column="47"/></name> <operator pos:line="828" pos:column="48">!=<pos:position pos:line="828" pos:column="50"/></operator> <literal type="number" pos:line="828" pos:column="51">0<pos:position pos:line="828" pos:column="52"/></literal></expr>)<pos:position pos:line="828" pos:column="53"/></condition><then pos:line="828" pos:column="53">
            <block type="pseudo"><return pos:line="829" pos:column="13">return <expr><call><name pos:line="829" pos:column="20">apr_pstrcat<pos:position pos:line="829" pos:column="31"/></name><argument_list pos:line="829" pos:column="31">(<argument><expr><name><name pos:line="829" pos:column="32">parms<pos:position pos:line="829" pos:column="37"/></name><operator pos:line="829" pos:column="37">-&gt;<pos:position pos:line="829" pos:column="42"/></operator><name pos:line="829" pos:column="39">pool<pos:position pos:line="829" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="829" pos:column="45">cmd<pos:position pos:line="829" pos:column="48"/></name><operator pos:line="829" pos:column="48">-&gt;<pos:position pos:line="829" pos:column="53"/></operator><name pos:line="829" pos:column="50">name<pos:position pos:line="829" pos:column="54"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="830" pos:column="32">" takes two or three arguments"<pos:position pos:line="830" pos:column="63"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="831" pos:column="32">cmd<pos:position pos:line="831" pos:column="35"/></name><operator pos:line="831" pos:column="35">-&gt;<pos:position pos:line="831" pos:column="40"/></operator><name pos:line="831" pos:column="37">errmsg<pos:position pos:line="831" pos:column="43"/></name></name></expr> ?<pos:position pos:line="831" pos:column="45"/></condition><then pos:line="831" pos:column="45"> <expr><literal type="string" pos:line="831" pos:column="46">", "<pos:position pos:line="831" pos:column="50"/></literal></expr> <pos:position pos:line="831" pos:column="51"/></then><else pos:line="831" pos:column="51">: <expr><name pos:line="831" pos:column="53">NULL<pos:position pos:line="831" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="831" pos:column="59">cmd<pos:position pos:line="831" pos:column="62"/></name><operator pos:line="831" pos:column="62">-&gt;<pos:position pos:line="831" pos:column="67"/></operator><name pos:line="831" pos:column="64">errmsg<pos:position pos:line="831" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="831" pos:column="72">NULL<pos:position pos:line="831" pos:column="76"/></name></expr></argument>)<pos:position pos:line="831" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="831" pos:column="78"/></return></block></then></if>

        <return pos:line="833" pos:column="9">return <expr><call><name><name pos:line="833" pos:column="16">cmd<pos:position pos:line="833" pos:column="19"/></name><operator pos:line="833" pos:column="19">-&gt;<pos:position pos:line="833" pos:column="24"/></operator><name pos:line="833" pos:column="21">AP_TAKE3<pos:position pos:line="833" pos:column="29"/></name></name><argument_list pos:line="833" pos:column="29">(<argument><expr><name pos:line="833" pos:column="30">parms<pos:position pos:line="833" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="833" pos:column="37">mconfig<pos:position pos:line="833" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="833" pos:column="46">w<pos:position pos:line="833" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="833" pos:column="49">w2<pos:position pos:line="833" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="833" pos:column="53">w3<pos:position pos:line="833" pos:column="55"/></name></expr></argument>)<pos:position pos:line="833" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="833" pos:column="57"/></return>

    <case pos:line="835" pos:column="5">case <expr><name pos:line="835" pos:column="10">TAKE123<pos:position pos:line="835" pos:column="17"/></name></expr>:<pos:position pos:line="835" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="836" pos:column="9">w<pos:position pos:line="836" pos:column="10"/></name> <operator pos:line="836" pos:column="11">=<pos:position pos:line="836" pos:column="12"/></operator> <call><name pos:line="836" pos:column="13">ap_getword_conf<pos:position pos:line="836" pos:column="28"/></name><argument_list pos:line="836" pos:column="28">(<argument><expr><name><name pos:line="836" pos:column="29">parms<pos:position pos:line="836" pos:column="34"/></name><operator pos:line="836" pos:column="34">-&gt;<pos:position pos:line="836" pos:column="39"/></operator><name pos:line="836" pos:column="36">pool<pos:position pos:line="836" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="836" pos:column="42">&amp;<pos:position pos:line="836" pos:column="47"/></operator><name pos:line="836" pos:column="43">args<pos:position pos:line="836" pos:column="47"/></name></expr></argument>)<pos:position pos:line="836" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="836" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="837" pos:column="9">w2<pos:position pos:line="837" pos:column="11"/></name> <operator pos:line="837" pos:column="12">=<pos:position pos:line="837" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="837" pos:column="14">*<pos:position pos:line="837" pos:column="15"/></operator><name pos:line="837" pos:column="15">args<pos:position pos:line="837" pos:column="19"/></name></expr> ?<pos:position pos:line="837" pos:column="21"/></condition><then pos:line="837" pos:column="21"> <expr><call><name pos:line="837" pos:column="22">ap_getword_conf<pos:position pos:line="837" pos:column="37"/></name><argument_list pos:line="837" pos:column="37">(<argument><expr><name><name pos:line="837" pos:column="38">parms<pos:position pos:line="837" pos:column="43"/></name><operator pos:line="837" pos:column="43">-&gt;<pos:position pos:line="837" pos:column="48"/></operator><name pos:line="837" pos:column="45">pool<pos:position pos:line="837" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="837" pos:column="51">&amp;<pos:position pos:line="837" pos:column="56"/></operator><name pos:line="837" pos:column="52">args<pos:position pos:line="837" pos:column="56"/></name></expr></argument>)<pos:position pos:line="837" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="837" pos:column="58"/></then><else pos:line="837" pos:column="58">: <expr><name pos:line="837" pos:column="60">NULL<pos:position pos:line="837" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="837" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="838" pos:column="9">w3<pos:position pos:line="838" pos:column="11"/></name> <operator pos:line="838" pos:column="12">=<pos:position pos:line="838" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="838" pos:column="14">*<pos:position pos:line="838" pos:column="15"/></operator><name pos:line="838" pos:column="15">args<pos:position pos:line="838" pos:column="19"/></name></expr> ?<pos:position pos:line="838" pos:column="21"/></condition><then pos:line="838" pos:column="21"> <expr><call><name pos:line="838" pos:column="22">ap_getword_conf<pos:position pos:line="838" pos:column="37"/></name><argument_list pos:line="838" pos:column="37">(<argument><expr><name><name pos:line="838" pos:column="38">parms<pos:position pos:line="838" pos:column="43"/></name><operator pos:line="838" pos:column="43">-&gt;<pos:position pos:line="838" pos:column="48"/></operator><name pos:line="838" pos:column="45">pool<pos:position pos:line="838" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="838" pos:column="51">&amp;<pos:position pos:line="838" pos:column="56"/></operator><name pos:line="838" pos:column="52">args<pos:position pos:line="838" pos:column="56"/></name></expr></argument>)<pos:position pos:line="838" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="838" pos:column="58"/></then><else pos:line="838" pos:column="58">: <expr><name pos:line="838" pos:column="60">NULL<pos:position pos:line="838" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="838" pos:column="65"/></expr_stmt>

        <if pos:line="840" pos:column="9">if <condition pos:line="840" pos:column="12">(<expr><operator pos:line="840" pos:column="13">*<pos:position pos:line="840" pos:column="14"/></operator><name pos:line="840" pos:column="14">w<pos:position pos:line="840" pos:column="15"/></name> <operator pos:line="840" pos:column="16">==<pos:position pos:line="840" pos:column="18"/></operator> <literal type="char" pos:line="840" pos:column="19">'\0'<pos:position pos:line="840" pos:column="23"/></literal> <operator pos:line="840" pos:column="24">||<pos:position pos:line="840" pos:column="26"/></operator> <operator pos:line="840" pos:column="27">*<pos:position pos:line="840" pos:column="28"/></operator><name pos:line="840" pos:column="28">args<pos:position pos:line="840" pos:column="32"/></name> <operator pos:line="840" pos:column="33">!=<pos:position pos:line="840" pos:column="35"/></operator> <literal type="number" pos:line="840" pos:column="36">0<pos:position pos:line="840" pos:column="37"/></literal></expr>)<pos:position pos:line="840" pos:column="38"/></condition><then pos:line="840" pos:column="38">
            <block type="pseudo"><return pos:line="841" pos:column="13">return <expr><call><name pos:line="841" pos:column="20">apr_pstrcat<pos:position pos:line="841" pos:column="31"/></name><argument_list pos:line="841" pos:column="31">(<argument><expr><name><name pos:line="841" pos:column="32">parms<pos:position pos:line="841" pos:column="37"/></name><operator pos:line="841" pos:column="37">-&gt;<pos:position pos:line="841" pos:column="42"/></operator><name pos:line="841" pos:column="39">pool<pos:position pos:line="841" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="841" pos:column="45">cmd<pos:position pos:line="841" pos:column="48"/></name><operator pos:line="841" pos:column="48">-&gt;<pos:position pos:line="841" pos:column="53"/></operator><name pos:line="841" pos:column="50">name<pos:position pos:line="841" pos:column="54"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="842" pos:column="32">" takes one, two or three arguments"<pos:position pos:line="842" pos:column="68"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="843" pos:column="32">cmd<pos:position pos:line="843" pos:column="35"/></name><operator pos:line="843" pos:column="35">-&gt;<pos:position pos:line="843" pos:column="40"/></operator><name pos:line="843" pos:column="37">errmsg<pos:position pos:line="843" pos:column="43"/></name></name></expr> ?<pos:position pos:line="843" pos:column="45"/></condition><then pos:line="843" pos:column="45"> <expr><literal type="string" pos:line="843" pos:column="46">", "<pos:position pos:line="843" pos:column="50"/></literal></expr> <pos:position pos:line="843" pos:column="51"/></then><else pos:line="843" pos:column="51">: <expr><name pos:line="843" pos:column="53">NULL<pos:position pos:line="843" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="843" pos:column="59">cmd<pos:position pos:line="843" pos:column="62"/></name><operator pos:line="843" pos:column="62">-&gt;<pos:position pos:line="843" pos:column="67"/></operator><name pos:line="843" pos:column="64">errmsg<pos:position pos:line="843" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="843" pos:column="72">NULL<pos:position pos:line="843" pos:column="76"/></name></expr></argument>)<pos:position pos:line="843" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="843" pos:column="78"/></return></block></then></if>

        <return pos:line="845" pos:column="9">return <expr><call><name><name pos:line="845" pos:column="16">cmd<pos:position pos:line="845" pos:column="19"/></name><operator pos:line="845" pos:column="19">-&gt;<pos:position pos:line="845" pos:column="24"/></operator><name pos:line="845" pos:column="21">AP_TAKE3<pos:position pos:line="845" pos:column="29"/></name></name><argument_list pos:line="845" pos:column="29">(<argument><expr><name pos:line="845" pos:column="30">parms<pos:position pos:line="845" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="845" pos:column="37">mconfig<pos:position pos:line="845" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="845" pos:column="46">w<pos:position pos:line="845" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="845" pos:column="49">w2<pos:position pos:line="845" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="845" pos:column="53">w3<pos:position pos:line="845" pos:column="55"/></name></expr></argument>)<pos:position pos:line="845" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="845" pos:column="57"/></return>

    <case pos:line="847" pos:column="5">case <expr><name pos:line="847" pos:column="10">TAKE13<pos:position pos:line="847" pos:column="16"/></name></expr>:<pos:position pos:line="847" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="848" pos:column="9">w<pos:position pos:line="848" pos:column="10"/></name> <operator pos:line="848" pos:column="11">=<pos:position pos:line="848" pos:column="12"/></operator> <call><name pos:line="848" pos:column="13">ap_getword_conf<pos:position pos:line="848" pos:column="28"/></name><argument_list pos:line="848" pos:column="28">(<argument><expr><name><name pos:line="848" pos:column="29">parms<pos:position pos:line="848" pos:column="34"/></name><operator pos:line="848" pos:column="34">-&gt;<pos:position pos:line="848" pos:column="39"/></operator><name pos:line="848" pos:column="36">pool<pos:position pos:line="848" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="848" pos:column="42">&amp;<pos:position pos:line="848" pos:column="47"/></operator><name pos:line="848" pos:column="43">args<pos:position pos:line="848" pos:column="47"/></name></expr></argument>)<pos:position pos:line="848" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="848" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="849" pos:column="9">w2<pos:position pos:line="849" pos:column="11"/></name> <operator pos:line="849" pos:column="12">=<pos:position pos:line="849" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="849" pos:column="14">*<pos:position pos:line="849" pos:column="15"/></operator><name pos:line="849" pos:column="15">args<pos:position pos:line="849" pos:column="19"/></name></expr> ?<pos:position pos:line="849" pos:column="21"/></condition><then pos:line="849" pos:column="21"> <expr><call><name pos:line="849" pos:column="22">ap_getword_conf<pos:position pos:line="849" pos:column="37"/></name><argument_list pos:line="849" pos:column="37">(<argument><expr><name><name pos:line="849" pos:column="38">parms<pos:position pos:line="849" pos:column="43"/></name><operator pos:line="849" pos:column="43">-&gt;<pos:position pos:line="849" pos:column="48"/></operator><name pos:line="849" pos:column="45">pool<pos:position pos:line="849" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="849" pos:column="51">&amp;<pos:position pos:line="849" pos:column="56"/></operator><name pos:line="849" pos:column="52">args<pos:position pos:line="849" pos:column="56"/></name></expr></argument>)<pos:position pos:line="849" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="849" pos:column="58"/></then><else pos:line="849" pos:column="58">: <expr><name pos:line="849" pos:column="60">NULL<pos:position pos:line="849" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="849" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="850" pos:column="9">w3<pos:position pos:line="850" pos:column="11"/></name> <operator pos:line="850" pos:column="12">=<pos:position pos:line="850" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="850" pos:column="14">*<pos:position pos:line="850" pos:column="15"/></operator><name pos:line="850" pos:column="15">args<pos:position pos:line="850" pos:column="19"/></name></expr> ?<pos:position pos:line="850" pos:column="21"/></condition><then pos:line="850" pos:column="21"> <expr><call><name pos:line="850" pos:column="22">ap_getword_conf<pos:position pos:line="850" pos:column="37"/></name><argument_list pos:line="850" pos:column="37">(<argument><expr><name><name pos:line="850" pos:column="38">parms<pos:position pos:line="850" pos:column="43"/></name><operator pos:line="850" pos:column="43">-&gt;<pos:position pos:line="850" pos:column="48"/></operator><name pos:line="850" pos:column="45">pool<pos:position pos:line="850" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="850" pos:column="51">&amp;<pos:position pos:line="850" pos:column="56"/></operator><name pos:line="850" pos:column="52">args<pos:position pos:line="850" pos:column="56"/></name></expr></argument>)<pos:position pos:line="850" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="850" pos:column="58"/></then><else pos:line="850" pos:column="58">: <expr><name pos:line="850" pos:column="60">NULL<pos:position pos:line="850" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="850" pos:column="65"/></expr_stmt>

        <if pos:line="852" pos:column="9">if <condition pos:line="852" pos:column="12">(<expr><operator pos:line="852" pos:column="13">*<pos:position pos:line="852" pos:column="14"/></operator><name pos:line="852" pos:column="14">w<pos:position pos:line="852" pos:column="15"/></name> <operator pos:line="852" pos:column="16">==<pos:position pos:line="852" pos:column="18"/></operator> <literal type="char" pos:line="852" pos:column="19">'\0'<pos:position pos:line="852" pos:column="23"/></literal> <operator pos:line="852" pos:column="24">||<pos:position pos:line="852" pos:column="26"/></operator> <operator pos:line="852" pos:column="27">(<pos:position pos:line="852" pos:column="28"/></operator><name pos:line="852" pos:column="28">w2<pos:position pos:line="852" pos:column="30"/></name> <operator pos:line="852" pos:column="31">&amp;&amp;<pos:position pos:line="852" pos:column="41"/></operator> <operator pos:line="852" pos:column="34">*<pos:position pos:line="852" pos:column="35"/></operator><name pos:line="852" pos:column="35">w2<pos:position pos:line="852" pos:column="37"/></name> <operator pos:line="852" pos:column="38">&amp;&amp;<pos:position pos:line="852" pos:column="48"/></operator> <operator pos:line="852" pos:column="41">!<pos:position pos:line="852" pos:column="42"/></operator><name pos:line="852" pos:column="42">w3<pos:position pos:line="852" pos:column="44"/></name><operator pos:line="852" pos:column="44">)<pos:position pos:line="852" pos:column="45"/></operator> <operator pos:line="852" pos:column="46">||<pos:position pos:line="852" pos:column="48"/></operator> <operator pos:line="852" pos:column="49">*<pos:position pos:line="852" pos:column="50"/></operator><name pos:line="852" pos:column="50">args<pos:position pos:line="852" pos:column="54"/></name> <operator pos:line="852" pos:column="55">!=<pos:position pos:line="852" pos:column="57"/></operator> <literal type="number" pos:line="852" pos:column="58">0<pos:position pos:line="852" pos:column="59"/></literal></expr>)<pos:position pos:line="852" pos:column="60"/></condition><then pos:line="852" pos:column="60">
            <block type="pseudo"><return pos:line="853" pos:column="13">return <expr><call><name pos:line="853" pos:column="20">apr_pstrcat<pos:position pos:line="853" pos:column="31"/></name><argument_list pos:line="853" pos:column="31">(<argument><expr><name><name pos:line="853" pos:column="32">parms<pos:position pos:line="853" pos:column="37"/></name><operator pos:line="853" pos:column="37">-&gt;<pos:position pos:line="853" pos:column="42"/></operator><name pos:line="853" pos:column="39">pool<pos:position pos:line="853" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="853" pos:column="45">cmd<pos:position pos:line="853" pos:column="48"/></name><operator pos:line="853" pos:column="48">-&gt;<pos:position pos:line="853" pos:column="53"/></operator><name pos:line="853" pos:column="50">name<pos:position pos:line="853" pos:column="54"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="854" pos:column="32">" takes one or three arguments"<pos:position pos:line="854" pos:column="63"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="855" pos:column="32">cmd<pos:position pos:line="855" pos:column="35"/></name><operator pos:line="855" pos:column="35">-&gt;<pos:position pos:line="855" pos:column="40"/></operator><name pos:line="855" pos:column="37">errmsg<pos:position pos:line="855" pos:column="43"/></name></name></expr> ?<pos:position pos:line="855" pos:column="45"/></condition><then pos:line="855" pos:column="45"> <expr><literal type="string" pos:line="855" pos:column="46">", "<pos:position pos:line="855" pos:column="50"/></literal></expr> <pos:position pos:line="855" pos:column="51"/></then><else pos:line="855" pos:column="51">: <expr><name pos:line="855" pos:column="53">NULL<pos:position pos:line="855" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="855" pos:column="59">cmd<pos:position pos:line="855" pos:column="62"/></name><operator pos:line="855" pos:column="62">-&gt;<pos:position pos:line="855" pos:column="67"/></operator><name pos:line="855" pos:column="64">errmsg<pos:position pos:line="855" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="855" pos:column="72">NULL<pos:position pos:line="855" pos:column="76"/></name></expr></argument>)<pos:position pos:line="855" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="855" pos:column="78"/></return></block></then></if>

        <return pos:line="857" pos:column="9">return <expr><call><name><name pos:line="857" pos:column="16">cmd<pos:position pos:line="857" pos:column="19"/></name><operator pos:line="857" pos:column="19">-&gt;<pos:position pos:line="857" pos:column="24"/></operator><name pos:line="857" pos:column="21">AP_TAKE3<pos:position pos:line="857" pos:column="29"/></name></name><argument_list pos:line="857" pos:column="29">(<argument><expr><name pos:line="857" pos:column="30">parms<pos:position pos:line="857" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="857" pos:column="37">mconfig<pos:position pos:line="857" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="857" pos:column="46">w<pos:position pos:line="857" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="857" pos:column="49">w2<pos:position pos:line="857" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="857" pos:column="53">w3<pos:position pos:line="857" pos:column="55"/></name></expr></argument>)<pos:position pos:line="857" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="857" pos:column="57"/></return>

    <case pos:line="859" pos:column="5">case <expr><name pos:line="859" pos:column="10">ITERATE<pos:position pos:line="859" pos:column="17"/></name></expr>:<pos:position pos:line="859" pos:column="18"/></case>
        <while pos:line="860" pos:column="9">while <condition pos:line="860" pos:column="15">(<expr><operator pos:line="860" pos:column="16">*<pos:position pos:line="860" pos:column="17"/></operator><operator pos:line="860" pos:column="17">(<pos:position pos:line="860" pos:column="18"/></operator><name pos:line="860" pos:column="18">w<pos:position pos:line="860" pos:column="19"/></name> <operator pos:line="860" pos:column="20">=<pos:position pos:line="860" pos:column="21"/></operator> <call><name pos:line="860" pos:column="22">ap_getword_conf<pos:position pos:line="860" pos:column="37"/></name><argument_list pos:line="860" pos:column="37">(<argument><expr><name><name pos:line="860" pos:column="38">parms<pos:position pos:line="860" pos:column="43"/></name><operator pos:line="860" pos:column="43">-&gt;<pos:position pos:line="860" pos:column="48"/></operator><name pos:line="860" pos:column="45">pool<pos:position pos:line="860" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="860" pos:column="51">&amp;<pos:position pos:line="860" pos:column="56"/></operator><name pos:line="860" pos:column="52">args<pos:position pos:line="860" pos:column="56"/></name></expr></argument>)<pos:position pos:line="860" pos:column="57"/></argument_list></call><operator pos:line="860" pos:column="57">)<pos:position pos:line="860" pos:column="58"/></operator> <operator pos:line="860" pos:column="59">!=<pos:position pos:line="860" pos:column="61"/></operator> <literal type="char" pos:line="860" pos:column="62">'\0'<pos:position pos:line="860" pos:column="66"/></literal></expr>)<pos:position pos:line="860" pos:column="67"/></condition> <block pos:line="860" pos:column="68">{

            <expr_stmt><expr><name pos:line="862" pos:column="13">errmsg<pos:position pos:line="862" pos:column="19"/></name> <operator pos:line="862" pos:column="20">=<pos:position pos:line="862" pos:column="21"/></operator> <call><name><name pos:line="862" pos:column="22">cmd<pos:position pos:line="862" pos:column="25"/></name><operator pos:line="862" pos:column="25">-&gt;<pos:position pos:line="862" pos:column="30"/></operator><name pos:line="862" pos:column="27">AP_TAKE1<pos:position pos:line="862" pos:column="35"/></name></name><argument_list pos:line="862" pos:column="35">(<argument><expr><name pos:line="862" pos:column="36">parms<pos:position pos:line="862" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="862" pos:column="43">mconfig<pos:position pos:line="862" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="862" pos:column="52">w<pos:position pos:line="862" pos:column="53"/></name></expr></argument>)<pos:position pos:line="862" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="862" pos:column="55"/></expr_stmt>

            <if pos:line="864" pos:column="13">if <condition pos:line="864" pos:column="16">(<expr><name pos:line="864" pos:column="17">errmsg<pos:position pos:line="864" pos:column="23"/></name> <operator pos:line="864" pos:column="24">&amp;&amp;<pos:position pos:line="864" pos:column="34"/></operator> <call><name pos:line="864" pos:column="27">strcmp<pos:position pos:line="864" pos:column="33"/></name><argument_list pos:line="864" pos:column="33">(<argument><expr><name pos:line="864" pos:column="34">errmsg<pos:position pos:line="864" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="864" pos:column="42">DECLINE_CMD<pos:position pos:line="864" pos:column="53"/></name></expr></argument>)<pos:position pos:line="864" pos:column="54"/></argument_list></call> <operator pos:line="864" pos:column="55">!=<pos:position pos:line="864" pos:column="57"/></operator> <literal type="number" pos:line="864" pos:column="58">0<pos:position pos:line="864" pos:column="59"/></literal></expr>)<pos:position pos:line="864" pos:column="60"/></condition><then pos:line="864" pos:column="60">
                <block type="pseudo"><return pos:line="865" pos:column="17">return <expr><name pos:line="865" pos:column="24">errmsg<pos:position pos:line="865" pos:column="30"/></name></expr>;<pos:position pos:line="865" pos:column="31"/></return></block></then></if>
        }<pos:position pos:line="866" pos:column="10"/></block></while>

        <return pos:line="868" pos:column="9">return <expr><name pos:line="868" pos:column="16">errmsg<pos:position pos:line="868" pos:column="22"/></name></expr>;<pos:position pos:line="868" pos:column="23"/></return>

    <case pos:line="870" pos:column="5">case <expr><name pos:line="870" pos:column="10">ITERATE2<pos:position pos:line="870" pos:column="18"/></name></expr>:<pos:position pos:line="870" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="871" pos:column="9">w<pos:position pos:line="871" pos:column="10"/></name> <operator pos:line="871" pos:column="11">=<pos:position pos:line="871" pos:column="12"/></operator> <call><name pos:line="871" pos:column="13">ap_getword_conf<pos:position pos:line="871" pos:column="28"/></name><argument_list pos:line="871" pos:column="28">(<argument><expr><name><name pos:line="871" pos:column="29">parms<pos:position pos:line="871" pos:column="34"/></name><operator pos:line="871" pos:column="34">-&gt;<pos:position pos:line="871" pos:column="39"/></operator><name pos:line="871" pos:column="36">pool<pos:position pos:line="871" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="871" pos:column="42">&amp;<pos:position pos:line="871" pos:column="47"/></operator><name pos:line="871" pos:column="43">args<pos:position pos:line="871" pos:column="47"/></name></expr></argument>)<pos:position pos:line="871" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="871" pos:column="49"/></expr_stmt>

        <if pos:line="873" pos:column="9">if <condition pos:line="873" pos:column="12">(<expr><operator pos:line="873" pos:column="13">*<pos:position pos:line="873" pos:column="14"/></operator><name pos:line="873" pos:column="14">w<pos:position pos:line="873" pos:column="15"/></name> <operator pos:line="873" pos:column="16">==<pos:position pos:line="873" pos:column="18"/></operator> <literal type="char" pos:line="873" pos:column="19">'\0'<pos:position pos:line="873" pos:column="23"/></literal> <operator pos:line="873" pos:column="24">||<pos:position pos:line="873" pos:column="26"/></operator> <operator pos:line="873" pos:column="27">*<pos:position pos:line="873" pos:column="28"/></operator><name pos:line="873" pos:column="28">args<pos:position pos:line="873" pos:column="32"/></name> <operator pos:line="873" pos:column="33">==<pos:position pos:line="873" pos:column="35"/></operator> <literal type="number" pos:line="873" pos:column="36">0<pos:position pos:line="873" pos:column="37"/></literal></expr>)<pos:position pos:line="873" pos:column="38"/></condition><then pos:line="873" pos:column="38">
            <block type="pseudo"><return pos:line="874" pos:column="13">return <expr><call><name pos:line="874" pos:column="20">apr_pstrcat<pos:position pos:line="874" pos:column="31"/></name><argument_list pos:line="874" pos:column="31">(<argument><expr><name><name pos:line="874" pos:column="32">parms<pos:position pos:line="874" pos:column="37"/></name><operator pos:line="874" pos:column="37">-&gt;<pos:position pos:line="874" pos:column="42"/></operator><name pos:line="874" pos:column="39">pool<pos:position pos:line="874" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="874" pos:column="45">cmd<pos:position pos:line="874" pos:column="48"/></name><operator pos:line="874" pos:column="48">-&gt;<pos:position pos:line="874" pos:column="53"/></operator><name pos:line="874" pos:column="50">name<pos:position pos:line="874" pos:column="54"/></name></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="875" pos:column="32">" requires at least two arguments"<pos:position pos:line="875" pos:column="66"/></literal></expr></argument>,
                               <argument><expr><ternary><condition><expr><name><name pos:line="876" pos:column="32">cmd<pos:position pos:line="876" pos:column="35"/></name><operator pos:line="876" pos:column="35">-&gt;<pos:position pos:line="876" pos:column="40"/></operator><name pos:line="876" pos:column="37">errmsg<pos:position pos:line="876" pos:column="43"/></name></name></expr> ?<pos:position pos:line="876" pos:column="45"/></condition><then pos:line="876" pos:column="45"> <expr><literal type="string" pos:line="876" pos:column="46">", "<pos:position pos:line="876" pos:column="50"/></literal></expr> <pos:position pos:line="876" pos:column="51"/></then><else pos:line="876" pos:column="51">: <expr><name pos:line="876" pos:column="53">NULL<pos:position pos:line="876" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="876" pos:column="59">cmd<pos:position pos:line="876" pos:column="62"/></name><operator pos:line="876" pos:column="62">-&gt;<pos:position pos:line="876" pos:column="67"/></operator><name pos:line="876" pos:column="64">errmsg<pos:position pos:line="876" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="876" pos:column="72">NULL<pos:position pos:line="876" pos:column="76"/></name></expr></argument>)<pos:position pos:line="876" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="876" pos:column="78"/></return></block></then></if>

        <while pos:line="878" pos:column="9">while <condition pos:line="878" pos:column="15">(<expr><operator pos:line="878" pos:column="16">*<pos:position pos:line="878" pos:column="17"/></operator><operator pos:line="878" pos:column="17">(<pos:position pos:line="878" pos:column="18"/></operator><name pos:line="878" pos:column="18">w2<pos:position pos:line="878" pos:column="20"/></name> <operator pos:line="878" pos:column="21">=<pos:position pos:line="878" pos:column="22"/></operator> <call><name pos:line="878" pos:column="23">ap_getword_conf<pos:position pos:line="878" pos:column="38"/></name><argument_list pos:line="878" pos:column="38">(<argument><expr><name><name pos:line="878" pos:column="39">parms<pos:position pos:line="878" pos:column="44"/></name><operator pos:line="878" pos:column="44">-&gt;<pos:position pos:line="878" pos:column="49"/></operator><name pos:line="878" pos:column="46">pool<pos:position pos:line="878" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="878" pos:column="52">&amp;<pos:position pos:line="878" pos:column="57"/></operator><name pos:line="878" pos:column="53">args<pos:position pos:line="878" pos:column="57"/></name></expr></argument>)<pos:position pos:line="878" pos:column="58"/></argument_list></call><operator pos:line="878" pos:column="58">)<pos:position pos:line="878" pos:column="59"/></operator> <operator pos:line="878" pos:column="60">!=<pos:position pos:line="878" pos:column="62"/></operator> <literal type="char" pos:line="878" pos:column="63">'\0'<pos:position pos:line="878" pos:column="67"/></literal></expr>)<pos:position pos:line="878" pos:column="68"/></condition> <block pos:line="878" pos:column="69">{

            <expr_stmt><expr><name pos:line="880" pos:column="13">errmsg<pos:position pos:line="880" pos:column="19"/></name> <operator pos:line="880" pos:column="20">=<pos:position pos:line="880" pos:column="21"/></operator> <call><name><name pos:line="880" pos:column="22">cmd<pos:position pos:line="880" pos:column="25"/></name><operator pos:line="880" pos:column="25">-&gt;<pos:position pos:line="880" pos:column="30"/></operator><name pos:line="880" pos:column="27">AP_TAKE2<pos:position pos:line="880" pos:column="35"/></name></name><argument_list pos:line="880" pos:column="35">(<argument><expr><name pos:line="880" pos:column="36">parms<pos:position pos:line="880" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="880" pos:column="43">mconfig<pos:position pos:line="880" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="880" pos:column="52">w<pos:position pos:line="880" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="880" pos:column="55">w2<pos:position pos:line="880" pos:column="57"/></name></expr></argument>)<pos:position pos:line="880" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="880" pos:column="59"/></expr_stmt>

            <if pos:line="882" pos:column="13">if <condition pos:line="882" pos:column="16">(<expr><name pos:line="882" pos:column="17">errmsg<pos:position pos:line="882" pos:column="23"/></name> <operator pos:line="882" pos:column="24">&amp;&amp;<pos:position pos:line="882" pos:column="34"/></operator> <call><name pos:line="882" pos:column="27">strcmp<pos:position pos:line="882" pos:column="33"/></name><argument_list pos:line="882" pos:column="33">(<argument><expr><name pos:line="882" pos:column="34">errmsg<pos:position pos:line="882" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="882" pos:column="42">DECLINE_CMD<pos:position pos:line="882" pos:column="53"/></name></expr></argument>)<pos:position pos:line="882" pos:column="54"/></argument_list></call> <operator pos:line="882" pos:column="55">!=<pos:position pos:line="882" pos:column="57"/></operator> <literal type="number" pos:line="882" pos:column="58">0<pos:position pos:line="882" pos:column="59"/></literal></expr>)<pos:position pos:line="882" pos:column="60"/></condition><then pos:line="882" pos:column="60">
                <block type="pseudo"><return pos:line="883" pos:column="17">return <expr><name pos:line="883" pos:column="24">errmsg<pos:position pos:line="883" pos:column="30"/></name></expr>;<pos:position pos:line="883" pos:column="31"/></return></block></then></if>
        }<pos:position pos:line="884" pos:column="10"/></block></while>

        <return pos:line="886" pos:column="9">return <expr><name pos:line="886" pos:column="16">errmsg<pos:position pos:line="886" pos:column="22"/></name></expr>;<pos:position pos:line="886" pos:column="23"/></return>

    <case pos:line="888" pos:column="5">case <expr><name pos:line="888" pos:column="10">FLAG<pos:position pos:line="888" pos:column="14"/></name></expr>:<pos:position pos:line="888" pos:column="15"/></case>
        <expr_stmt><expr><name pos:line="889" pos:column="9">w<pos:position pos:line="889" pos:column="10"/></name> <operator pos:line="889" pos:column="11">=<pos:position pos:line="889" pos:column="12"/></operator> <call><name pos:line="889" pos:column="13">ap_getword_conf<pos:position pos:line="889" pos:column="28"/></name><argument_list pos:line="889" pos:column="28">(<argument><expr><name><name pos:line="889" pos:column="29">parms<pos:position pos:line="889" pos:column="34"/></name><operator pos:line="889" pos:column="34">-&gt;<pos:position pos:line="889" pos:column="39"/></operator><name pos:line="889" pos:column="36">pool<pos:position pos:line="889" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="889" pos:column="42">&amp;<pos:position pos:line="889" pos:column="47"/></operator><name pos:line="889" pos:column="43">args<pos:position pos:line="889" pos:column="47"/></name></expr></argument>)<pos:position pos:line="889" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="889" pos:column="49"/></expr_stmt>

        <if pos:line="891" pos:column="9">if <condition pos:line="891" pos:column="12">(<expr><operator pos:line="891" pos:column="13">*<pos:position pos:line="891" pos:column="14"/></operator><name pos:line="891" pos:column="14">w<pos:position pos:line="891" pos:column="15"/></name> <operator pos:line="891" pos:column="16">==<pos:position pos:line="891" pos:column="18"/></operator> <literal type="char" pos:line="891" pos:column="19">'\0'<pos:position pos:line="891" pos:column="23"/></literal> <operator pos:line="891" pos:column="24">||<pos:position pos:line="891" pos:column="26"/></operator> <operator pos:line="891" pos:column="27">(<pos:position pos:line="891" pos:column="28"/></operator><call><name pos:line="891" pos:column="28">strcasecmp<pos:position pos:line="891" pos:column="38"/></name><argument_list pos:line="891" pos:column="38">(<argument><expr><name pos:line="891" pos:column="39">w<pos:position pos:line="891" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="891" pos:column="42">"on"<pos:position pos:line="891" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="891" pos:column="47"/></argument_list></call> <operator pos:line="891" pos:column="48">&amp;&amp;<pos:position pos:line="891" pos:column="58"/></operator> <call><name pos:line="891" pos:column="51">strcasecmp<pos:position pos:line="891" pos:column="61"/></name><argument_list pos:line="891" pos:column="61">(<argument><expr><name pos:line="891" pos:column="62">w<pos:position pos:line="891" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="891" pos:column="65">"off"<pos:position pos:line="891" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="891" pos:column="71"/></argument_list></call><operator pos:line="891" pos:column="71">)<pos:position pos:line="891" pos:column="72"/></operator></expr>)<pos:position pos:line="891" pos:column="73"/></condition><then pos:line="891" pos:column="73">
            <block type="pseudo"><return pos:line="892" pos:column="13">return <expr><call><name pos:line="892" pos:column="20">apr_pstrcat<pos:position pos:line="892" pos:column="31"/></name><argument_list pos:line="892" pos:column="31">(<argument><expr><name><name pos:line="892" pos:column="32">parms<pos:position pos:line="892" pos:column="37"/></name><operator pos:line="892" pos:column="37">-&gt;<pos:position pos:line="892" pos:column="42"/></operator><name pos:line="892" pos:column="39">pool<pos:position pos:line="892" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="892" pos:column="45">cmd<pos:position pos:line="892" pos:column="48"/></name><operator pos:line="892" pos:column="48">-&gt;<pos:position pos:line="892" pos:column="53"/></operator><name pos:line="892" pos:column="50">name<pos:position pos:line="892" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="892" pos:column="56">" must be On or Off"<pos:position pos:line="892" pos:column="76"/></literal></expr></argument>,
                               <argument><expr><name pos:line="893" pos:column="32">NULL<pos:position pos:line="893" pos:column="36"/></name></expr></argument>)<pos:position pos:line="893" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="893" pos:column="38"/></return></block></then></if>

        <return pos:line="895" pos:column="9">return <expr><call><name><name pos:line="895" pos:column="16">cmd<pos:position pos:line="895" pos:column="19"/></name><operator pos:line="895" pos:column="19">-&gt;<pos:position pos:line="895" pos:column="24"/></operator><name pos:line="895" pos:column="21">AP_FLAG<pos:position pos:line="895" pos:column="28"/></name></name><argument_list pos:line="895" pos:column="28">(<argument><expr><name pos:line="895" pos:column="29">parms<pos:position pos:line="895" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="895" pos:column="36">mconfig<pos:position pos:line="895" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="895" pos:column="45">strcasecmp<pos:position pos:line="895" pos:column="55"/></name><argument_list pos:line="895" pos:column="55">(<argument><expr><name pos:line="895" pos:column="56">w<pos:position pos:line="895" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="895" pos:column="59">"off"<pos:position pos:line="895" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="895" pos:column="65"/></argument_list></call> <operator pos:line="895" pos:column="66">!=<pos:position pos:line="895" pos:column="68"/></operator> <literal type="number" pos:line="895" pos:column="69">0<pos:position pos:line="895" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="895" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="895" pos:column="72"/></return>

    <default pos:line="897" pos:column="5">default:<pos:position pos:line="897" pos:column="13"/></default>
        <return pos:line="898" pos:column="9">return <expr><call><name pos:line="898" pos:column="16">apr_pstrcat<pos:position pos:line="898" pos:column="27"/></name><argument_list pos:line="898" pos:column="27">(<argument><expr><name><name pos:line="898" pos:column="28">parms<pos:position pos:line="898" pos:column="33"/></name><operator pos:line="898" pos:column="33">-&gt;<pos:position pos:line="898" pos:column="38"/></operator><name pos:line="898" pos:column="35">pool<pos:position pos:line="898" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="898" pos:column="41">cmd<pos:position pos:line="898" pos:column="44"/></name><operator pos:line="898" pos:column="44">-&gt;<pos:position pos:line="898" pos:column="49"/></operator><name pos:line="898" pos:column="46">name<pos:position pos:line="898" pos:column="50"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="899" pos:column="28">" is improperly configured internally (server bug)"<pos:position pos:line="899" pos:column="79"/></literal></expr></argument>,
                           <argument><expr><name pos:line="900" pos:column="28">NULL<pos:position pos:line="900" pos:column="32"/></name></expr></argument>)<pos:position pos:line="900" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="900" pos:column="34"/></return>
    }<pos:position pos:line="901" pos:column="6"/></block></switch>
}<pos:position pos:line="902" pos:column="2"/></block></function>

<macro><name pos:line="904" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="904" pos:column="16"/></name><argument_list pos:line="904" pos:column="16">(<argument pos:line="904" pos:column="17">const command_rec *<pos:position pos:line="904" pos:column="36"/></argument>)<pos:position pos:line="904" pos:column="37"/></argument_list></macro> <macro><name pos:line="904" pos:column="38">ap_find_command<pos:position pos:line="904" pos:column="53"/></name><argument_list pos:line="904" pos:column="53">(<argument pos:line="904" pos:column="54">const char *name<pos:position pos:line="904" pos:column="70"/></argument>,
                                                     <argument pos:line="905" pos:column="54">const command_rec *cmds<pos:position pos:line="905" pos:column="77"/></argument>)<pos:position pos:line="905" pos:column="78"/></argument_list></macro>
<block pos:line="906" pos:column="1">{
    <while pos:line="907" pos:column="5">while <condition pos:line="907" pos:column="11">(<expr><name><name pos:line="907" pos:column="12">cmds<pos:position pos:line="907" pos:column="16"/></name><operator pos:line="907" pos:column="16">-&gt;<pos:position pos:line="907" pos:column="21"/></operator><name pos:line="907" pos:column="18">name<pos:position pos:line="907" pos:column="22"/></name></name></expr>)<pos:position pos:line="907" pos:column="23"/></condition> <block pos:line="907" pos:column="24">{
        <if pos:line="908" pos:column="9">if <condition pos:line="908" pos:column="12">(<expr><operator pos:line="908" pos:column="13">!<pos:position pos:line="908" pos:column="14"/></operator><call><name pos:line="908" pos:column="14">strcasecmp<pos:position pos:line="908" pos:column="24"/></name><argument_list pos:line="908" pos:column="24">(<argument><expr><name pos:line="908" pos:column="25">name<pos:position pos:line="908" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="908" pos:column="31">cmds<pos:position pos:line="908" pos:column="35"/></name><operator pos:line="908" pos:column="35">-&gt;<pos:position pos:line="908" pos:column="40"/></operator><name pos:line="908" pos:column="37">name<pos:position pos:line="908" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="908" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="908" pos:column="43"/></condition><then pos:line="908" pos:column="43">
            <block type="pseudo"><return pos:line="909" pos:column="13">return <expr><name pos:line="909" pos:column="20">cmds<pos:position pos:line="909" pos:column="24"/></name></expr>;<pos:position pos:line="909" pos:column="25"/></return></block></then></if>

        <expr_stmt><expr><operator pos:line="911" pos:column="9">++<pos:position pos:line="911" pos:column="11"/></operator><name pos:line="911" pos:column="11">cmds<pos:position pos:line="911" pos:column="15"/></name></expr>;<pos:position pos:line="911" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="912" pos:column="6"/></block></while>

    <return pos:line="914" pos:column="5">return <expr><name pos:line="914" pos:column="12">NULL<pos:position pos:line="914" pos:column="16"/></name></expr>;<pos:position pos:line="914" pos:column="17"/></return>
}<pos:position pos:line="915" pos:column="2"/></block>

<macro><name pos:line="917" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="917" pos:column="16"/></name><argument_list pos:line="917" pos:column="16">(<argument pos:line="917" pos:column="17">const command_rec *<pos:position pos:line="917" pos:column="36"/></argument>)<pos:position pos:line="917" pos:column="37"/></argument_list></macro> <macro><name pos:line="917" pos:column="38">ap_find_command_in_modules<pos:position pos:line="917" pos:column="64"/></name><argument_list pos:line="917" pos:column="64">(
                                          <argument pos:line="918" pos:column="43">const char *cmd_name<pos:position pos:line="918" pos:column="63"/></argument>, <argument pos:line="918" pos:column="65">module **mod<pos:position pos:line="918" pos:column="77"/></argument>)<pos:position pos:line="918" pos:column="78"/></argument_list></macro>
<block pos:line="919" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="920" pos:column="5">const<pos:position pos:line="920" pos:column="10"/></specifier> <name pos:line="920" pos:column="11">command_rec<pos:position pos:line="920" pos:column="22"/></name> <modifier pos:line="920" pos:column="23">*<pos:position pos:line="920" pos:column="24"/></modifier></type><name pos:line="920" pos:column="24">cmdp<pos:position pos:line="920" pos:column="28"/></name></decl>;<pos:position pos:line="920" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="921" pos:column="5">module<pos:position pos:line="921" pos:column="11"/></name> <modifier pos:line="921" pos:column="12">*<pos:position pos:line="921" pos:column="13"/></modifier></type><name pos:line="921" pos:column="13">modp<pos:position pos:line="921" pos:column="17"/></name></decl>;<pos:position pos:line="921" pos:column="18"/></decl_stmt>

    <for pos:line="923" pos:column="5">for <control pos:line="923" pos:column="9">(<init><expr><name pos:line="923" pos:column="10">modp<pos:position pos:line="923" pos:column="14"/></name> <operator pos:line="923" pos:column="15">=<pos:position pos:line="923" pos:column="16"/></operator> <operator pos:line="923" pos:column="17">*<pos:position pos:line="923" pos:column="18"/></operator><name pos:line="923" pos:column="18">mod<pos:position pos:line="923" pos:column="21"/></name></expr>;<pos:position pos:line="923" pos:column="22"/></init> <condition><expr><name pos:line="923" pos:column="23">modp<pos:position pos:line="923" pos:column="27"/></name></expr>;<pos:position pos:line="923" pos:column="28"/></condition> <incr><expr><name pos:line="923" pos:column="29">modp<pos:position pos:line="923" pos:column="33"/></name> <operator pos:line="923" pos:column="34">=<pos:position pos:line="923" pos:column="35"/></operator> <name><name pos:line="923" pos:column="36">modp<pos:position pos:line="923" pos:column="40"/></name><operator pos:line="923" pos:column="40">-&gt;<pos:position pos:line="923" pos:column="45"/></operator><name pos:line="923" pos:column="42">next<pos:position pos:line="923" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="923" pos:column="47"/></control> <block pos:line="923" pos:column="48">{
        <if pos:line="924" pos:column="9">if <condition pos:line="924" pos:column="12">(<expr><name><name pos:line="924" pos:column="13">modp<pos:position pos:line="924" pos:column="17"/></name><operator pos:line="924" pos:column="17">-&gt;<pos:position pos:line="924" pos:column="22"/></operator><name pos:line="924" pos:column="19">cmds<pos:position pos:line="924" pos:column="23"/></name></name> <operator pos:line="924" pos:column="24">&amp;&amp;<pos:position pos:line="924" pos:column="34"/></operator> <operator pos:line="924" pos:column="27">(<pos:position pos:line="924" pos:column="28"/></operator><name pos:line="924" pos:column="28">cmdp<pos:position pos:line="924" pos:column="32"/></name> <operator pos:line="924" pos:column="33">=<pos:position pos:line="924" pos:column="34"/></operator> <call><name pos:line="924" pos:column="35">ap_find_command<pos:position pos:line="924" pos:column="50"/></name><argument_list pos:line="924" pos:column="50">(<argument><expr><name pos:line="924" pos:column="51">cmd_name<pos:position pos:line="924" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="924" pos:column="61">modp<pos:position pos:line="924" pos:column="65"/></name><operator pos:line="924" pos:column="65">-&gt;<pos:position pos:line="924" pos:column="70"/></operator><name pos:line="924" pos:column="67">cmds<pos:position pos:line="924" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="924" pos:column="72"/></argument_list></call><operator pos:line="924" pos:column="72">)<pos:position pos:line="924" pos:column="73"/></operator></expr>)<pos:position pos:line="924" pos:column="74"/></condition><then pos:line="924" pos:column="74"> <block pos:line="924" pos:column="75">{
            <expr_stmt><expr><operator pos:line="925" pos:column="13">*<pos:position pos:line="925" pos:column="14"/></operator><name pos:line="925" pos:column="14">mod<pos:position pos:line="925" pos:column="17"/></name> <operator pos:line="925" pos:column="18">=<pos:position pos:line="925" pos:column="19"/></operator> <name pos:line="925" pos:column="20">modp<pos:position pos:line="925" pos:column="24"/></name></expr>;<pos:position pos:line="925" pos:column="25"/></expr_stmt>
            <return pos:line="926" pos:column="13">return <expr><name pos:line="926" pos:column="20">cmdp<pos:position pos:line="926" pos:column="24"/></name></expr>;<pos:position pos:line="926" pos:column="25"/></return>
        }<pos:position pos:line="927" pos:column="10"/></block></then></if>
    }<pos:position pos:line="928" pos:column="6"/></block></for>

    <return pos:line="930" pos:column="5">return <expr><name pos:line="930" pos:column="12">NULL<pos:position pos:line="930" pos:column="16"/></name></expr>;<pos:position pos:line="930" pos:column="17"/></return>
}<pos:position pos:line="931" pos:column="2"/></block>

<macro><name pos:line="933" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="933" pos:column="16"/></name><argument_list pos:line="933" pos:column="16">(<argument pos:line="933" pos:column="17">void *<pos:position pos:line="933" pos:column="23"/></argument>)<pos:position pos:line="933" pos:column="24"/></argument_list></macro> <macro><name pos:line="933" pos:column="25">ap_set_config_vectors<pos:position pos:line="933" pos:column="46"/></name><argument_list pos:line="933" pos:column="46">(<argument pos:line="933" pos:column="47">server_rec *server<pos:position pos:line="933" pos:column="65"/></argument>,
                                              <argument pos:line="934" pos:column="47">ap_conf_vector_t *section_vector<pos:position pos:line="934" pos:column="79"/></argument>,
                                              <argument pos:line="935" pos:column="47">const char *section<pos:position pos:line="935" pos:column="66"/></argument>,
                                              <argument pos:line="936" pos:column="47">module *mod<pos:position pos:line="936" pos:column="58"/></argument>, <argument pos:line="936" pos:column="60">apr_pool_t *pconf<pos:position pos:line="936" pos:column="77"/></argument>)<pos:position pos:line="936" pos:column="78"/></argument_list></macro>
<block pos:line="937" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="938" pos:column="5">void<pos:position pos:line="938" pos:column="9"/></name> <modifier pos:line="938" pos:column="10">*<pos:position pos:line="938" pos:column="11"/></modifier></type><name pos:line="938" pos:column="11">section_config<pos:position pos:line="938" pos:column="25"/></name> <init pos:line="938" pos:column="26">= <expr><call><name pos:line="938" pos:column="28">ap_get_module_config<pos:position pos:line="938" pos:column="48"/></name><argument_list pos:line="938" pos:column="48">(<argument><expr><name pos:line="938" pos:column="49">section_vector<pos:position pos:line="938" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="938" pos:column="65">mod<pos:position pos:line="938" pos:column="68"/></name></expr></argument>)<pos:position pos:line="938" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="938" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="939" pos:column="5">void<pos:position pos:line="939" pos:column="9"/></name> <modifier pos:line="939" pos:column="10">*<pos:position pos:line="939" pos:column="11"/></modifier></type><name pos:line="939" pos:column="11">server_config<pos:position pos:line="939" pos:column="24"/></name> <init pos:line="939" pos:column="25">= <expr><call><name pos:line="939" pos:column="27">ap_get_module_config<pos:position pos:line="939" pos:column="47"/></name><argument_list pos:line="939" pos:column="47">(<argument><expr><name><name pos:line="939" pos:column="48">server<pos:position pos:line="939" pos:column="54"/></name><operator pos:line="939" pos:column="54">-&gt;<pos:position pos:line="939" pos:column="59"/></operator><name pos:line="939" pos:column="56">module_config<pos:position pos:line="939" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="939" pos:column="71">mod<pos:position pos:line="939" pos:column="74"/></name></expr></argument>)<pos:position pos:line="939" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="939" pos:column="76"/></decl_stmt>

    <if pos:line="941" pos:column="5">if <condition pos:line="941" pos:column="8">(<expr><operator pos:line="941" pos:column="9">!<pos:position pos:line="941" pos:column="10"/></operator><name pos:line="941" pos:column="10">section_config<pos:position pos:line="941" pos:column="24"/></name> <operator pos:line="941" pos:column="25">&amp;&amp;<pos:position pos:line="941" pos:column="35"/></operator> <name><name pos:line="941" pos:column="28">mod<pos:position pos:line="941" pos:column="31"/></name><operator pos:line="941" pos:column="31">-&gt;<pos:position pos:line="941" pos:column="36"/></operator><name pos:line="941" pos:column="33">create_dir_config<pos:position pos:line="941" pos:column="50"/></name></name></expr>)<pos:position pos:line="941" pos:column="51"/></condition><then pos:line="941" pos:column="51"> <block pos:line="941" pos:column="52">{
        <comment type="block" pos:line="942" pos:column="9">/* ### need to fix the create_dir_config functions' prototype... */</comment>
        <expr_stmt><expr><name pos:line="943" pos:column="9">section_config<pos:position pos:line="943" pos:column="23"/></name> <operator pos:line="943" pos:column="24">=<pos:position pos:line="943" pos:column="25"/></operator> <call pos:line="943" pos:column="26">(<modifier pos:line="943" pos:column="27">*<pos:position pos:line="943" pos:column="28"/></modifier><name><name pos:line="943" pos:column="28">mod<pos:position pos:line="943" pos:column="31"/></name><operator pos:line="943" pos:column="31">-&gt;<pos:position pos:line="943" pos:column="36"/></operator><name pos:line="943" pos:column="33">create_dir_config<pos:position pos:line="943" pos:column="50"/></name></name>)<argument_list pos:line="943" pos:column="51">(<argument><expr><name pos:line="943" pos:column="52">pconf<pos:position pos:line="943" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="943" pos:column="59">(<pos:position pos:line="943" pos:column="60"/></operator><name pos:line="943" pos:column="60">char<pos:position pos:line="943" pos:column="64"/></name> <operator pos:line="943" pos:column="65">*<pos:position pos:line="943" pos:column="66"/></operator><operator pos:line="943" pos:column="66">)<pos:position pos:line="943" pos:column="67"/></operator><name pos:line="943" pos:column="67">section<pos:position pos:line="943" pos:column="74"/></name></expr></argument>)<pos:position pos:line="943" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="943" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="944" pos:column="9">ap_set_module_config<pos:position pos:line="944" pos:column="29"/></name><argument_list pos:line="944" pos:column="29">(<argument><expr><name pos:line="944" pos:column="30">section_vector<pos:position pos:line="944" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="944" pos:column="46">mod<pos:position pos:line="944" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="944" pos:column="51">section_config<pos:position pos:line="944" pos:column="65"/></name></expr></argument>)<pos:position pos:line="944" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="944" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="945" pos:column="6"/></block></then></if>

    <if pos:line="947" pos:column="5">if <condition pos:line="947" pos:column="8">(<expr><operator pos:line="947" pos:column="9">!<pos:position pos:line="947" pos:column="10"/></operator><name pos:line="947" pos:column="10">server_config<pos:position pos:line="947" pos:column="23"/></name> <operator pos:line="947" pos:column="24">&amp;&amp;<pos:position pos:line="947" pos:column="34"/></operator> <name><name pos:line="947" pos:column="27">mod<pos:position pos:line="947" pos:column="30"/></name><operator pos:line="947" pos:column="30">-&gt;<pos:position pos:line="947" pos:column="35"/></operator><name pos:line="947" pos:column="32">create_server_config<pos:position pos:line="947" pos:column="52"/></name></name></expr>)<pos:position pos:line="947" pos:column="53"/></condition><then pos:line="947" pos:column="53"> <block pos:line="947" pos:column="54">{
        <expr_stmt><expr><name pos:line="948" pos:column="9">server_config<pos:position pos:line="948" pos:column="22"/></name> <operator pos:line="948" pos:column="23">=<pos:position pos:line="948" pos:column="24"/></operator> <call pos:line="948" pos:column="25">(<modifier pos:line="948" pos:column="26">*<pos:position pos:line="948" pos:column="27"/></modifier><name><name pos:line="948" pos:column="27">mod<pos:position pos:line="948" pos:column="30"/></name><operator pos:line="948" pos:column="30">-&gt;<pos:position pos:line="948" pos:column="35"/></operator><name pos:line="948" pos:column="32">create_server_config<pos:position pos:line="948" pos:column="52"/></name></name>)<argument_list pos:line="948" pos:column="53">(<argument><expr><name pos:line="948" pos:column="54">pconf<pos:position pos:line="948" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="948" pos:column="61">server<pos:position pos:line="948" pos:column="67"/></name></expr></argument>)<pos:position pos:line="948" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="948" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="949" pos:column="9">ap_set_module_config<pos:position pos:line="949" pos:column="29"/></name><argument_list pos:line="949" pos:column="29">(<argument><expr><name><name pos:line="949" pos:column="30">server<pos:position pos:line="949" pos:column="36"/></name><operator pos:line="949" pos:column="36">-&gt;<pos:position pos:line="949" pos:column="41"/></operator><name pos:line="949" pos:column="38">module_config<pos:position pos:line="949" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="949" pos:column="53">mod<pos:position pos:line="949" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="949" pos:column="58">server_config<pos:position pos:line="949" pos:column="71"/></name></expr></argument>)<pos:position pos:line="949" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="949" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="950" pos:column="6"/></block></then></if>

    <return pos:line="952" pos:column="5">return <expr><name pos:line="952" pos:column="12">section_config<pos:position pos:line="952" pos:column="26"/></name></expr>;<pos:position pos:line="952" pos:column="27"/></return>
}<pos:position pos:line="953" pos:column="2"/></block>

<function_decl><specifier pos:line="955" pos:column="1">static<pos:position pos:line="955" pos:column="7"/></specifier> <type><specifier pos:line="955" pos:column="8">const<pos:position pos:line="955" pos:column="13"/></specifier> <name pos:line="955" pos:column="14">char<pos:position pos:line="955" pos:column="18"/></name> <modifier pos:line="955" pos:column="19">*<pos:position pos:line="955" pos:column="20"/></modifier></type><name pos:line="955" pos:column="20">execute_now<pos:position pos:line="955" pos:column="31"/></name><parameter_list pos:line="955" pos:column="31">(<parameter><decl><type><name pos:line="955" pos:column="32">char<pos:position pos:line="955" pos:column="36"/></name> <modifier pos:line="955" pos:column="37">*<pos:position pos:line="955" pos:column="38"/></modifier></type><name pos:line="955" pos:column="38">cmd_line<pos:position pos:line="955" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="955" pos:column="48">const<pos:position pos:line="955" pos:column="53"/></specifier> <name pos:line="955" pos:column="54">char<pos:position pos:line="955" pos:column="58"/></name> <modifier pos:line="955" pos:column="59">*<pos:position pos:line="955" pos:column="60"/></modifier></type><name pos:line="955" pos:column="60">args<pos:position pos:line="955" pos:column="64"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="956" pos:column="32">cmd_parms<pos:position pos:line="956" pos:column="41"/></name> <modifier pos:line="956" pos:column="42">*<pos:position pos:line="956" pos:column="43"/></modifier></type><name pos:line="956" pos:column="43">parms<pos:position pos:line="956" pos:column="48"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="957" pos:column="32">apr_pool_t<pos:position pos:line="957" pos:column="42"/></name> <modifier pos:line="957" pos:column="43">*<pos:position pos:line="957" pos:column="44"/></modifier></type><name pos:line="957" pos:column="44">p<pos:position pos:line="957" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="957" pos:column="47">apr_pool_t<pos:position pos:line="957" pos:column="57"/></name> <modifier pos:line="957" pos:column="58">*<pos:position pos:line="957" pos:column="59"/></modifier></type><name pos:line="957" pos:column="59">ptemp<pos:position pos:line="957" pos:column="64"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="958" pos:column="32">ap_directive_t<pos:position pos:line="958" pos:column="46"/></name> <modifier pos:line="958" pos:column="47">*<pos:position pos:line="958" pos:column="48"/></modifier><modifier pos:line="958" pos:column="48">*<pos:position pos:line="958" pos:column="49"/></modifier></type><name pos:line="958" pos:column="49">sub_tree<pos:position pos:line="958" pos:column="57"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="959" pos:column="32">ap_directive_t<pos:position pos:line="959" pos:column="46"/></name> <modifier pos:line="959" pos:column="47">*<pos:position pos:line="959" pos:column="48"/></modifier></type><name pos:line="959" pos:column="48">parent<pos:position pos:line="959" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="959" pos:column="55"/></parameter_list>;<pos:position pos:line="959" pos:column="56"/></function_decl>

<function><specifier pos:line="961" pos:column="1">static<pos:position pos:line="961" pos:column="7"/></specifier> <type><specifier pos:line="961" pos:column="8">const<pos:position pos:line="961" pos:column="13"/></specifier> <name pos:line="961" pos:column="14">char<pos:position pos:line="961" pos:column="18"/></name> <modifier pos:line="961" pos:column="19">*<pos:position pos:line="961" pos:column="20"/></modifier></type><name pos:line="961" pos:column="20">ap_build_config_sub<pos:position pos:line="961" pos:column="39"/></name><parameter_list pos:line="961" pos:column="39">(<parameter><decl><type><name pos:line="961" pos:column="40">apr_pool_t<pos:position pos:line="961" pos:column="50"/></name> <modifier pos:line="961" pos:column="51">*<pos:position pos:line="961" pos:column="52"/></modifier></type><name pos:line="961" pos:column="52">p<pos:position pos:line="961" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="961" pos:column="55">apr_pool_t<pos:position pos:line="961" pos:column="65"/></name> <modifier pos:line="961" pos:column="66">*<pos:position pos:line="961" pos:column="67"/></modifier></type><name pos:line="961" pos:column="67">temp_pool<pos:position pos:line="961" pos:column="76"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="962" pos:column="40">const<pos:position pos:line="962" pos:column="45"/></specifier> <name pos:line="962" pos:column="46">char<pos:position pos:line="962" pos:column="50"/></name> <modifier pos:line="962" pos:column="51">*<pos:position pos:line="962" pos:column="52"/></modifier></type><name pos:line="962" pos:column="52">l<pos:position pos:line="962" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="962" pos:column="55">cmd_parms<pos:position pos:line="962" pos:column="64"/></name> <modifier pos:line="962" pos:column="65">*<pos:position pos:line="962" pos:column="66"/></modifier></type><name pos:line="962" pos:column="66">parms<pos:position pos:line="962" pos:column="71"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="963" pos:column="40">ap_directive_t<pos:position pos:line="963" pos:column="54"/></name> <modifier pos:line="963" pos:column="55">*<pos:position pos:line="963" pos:column="56"/></modifier><modifier pos:line="963" pos:column="56">*<pos:position pos:line="963" pos:column="57"/></modifier></type><name pos:line="963" pos:column="57">current<pos:position pos:line="963" pos:column="64"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="964" pos:column="40">ap_directive_t<pos:position pos:line="964" pos:column="54"/></name> <modifier pos:line="964" pos:column="55">*<pos:position pos:line="964" pos:column="56"/></modifier><modifier pos:line="964" pos:column="56">*<pos:position pos:line="964" pos:column="57"/></modifier></type><name pos:line="964" pos:column="57">curr_parent<pos:position pos:line="964" pos:column="68"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="965" pos:column="40">ap_directive_t<pos:position pos:line="965" pos:column="54"/></name> <modifier pos:line="965" pos:column="55">*<pos:position pos:line="965" pos:column="56"/></modifier><modifier pos:line="965" pos:column="56">*<pos:position pos:line="965" pos:column="57"/></modifier></type><name pos:line="965" pos:column="57">conftree<pos:position pos:line="965" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="965" pos:column="66"/></parameter_list>
<block pos:line="966" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="967" pos:column="5">const<pos:position pos:line="967" pos:column="10"/></specifier> <name pos:line="967" pos:column="11">char<pos:position pos:line="967" pos:column="15"/></name> <modifier pos:line="967" pos:column="16">*<pos:position pos:line="967" pos:column="17"/></modifier></type><name pos:line="967" pos:column="17">retval<pos:position pos:line="967" pos:column="23"/></name> <init pos:line="967" pos:column="24">= <expr><name pos:line="967" pos:column="26">NULL<pos:position pos:line="967" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="967" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="968" pos:column="5">const<pos:position pos:line="968" pos:column="10"/></specifier> <name pos:line="968" pos:column="11">char<pos:position pos:line="968" pos:column="15"/></name> <modifier pos:line="968" pos:column="16">*<pos:position pos:line="968" pos:column="17"/></modifier></type><name pos:line="968" pos:column="17">args<pos:position pos:line="968" pos:column="21"/></name></decl>;<pos:position pos:line="968" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="969" pos:column="5">char<pos:position pos:line="969" pos:column="9"/></name> <modifier pos:line="969" pos:column="10">*<pos:position pos:line="969" pos:column="11"/></modifier></type><name pos:line="969" pos:column="11">cmd_name<pos:position pos:line="969" pos:column="19"/></name></decl>;<pos:position pos:line="969" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="970" pos:column="5">ap_directive_t<pos:position pos:line="970" pos:column="19"/></name> <modifier pos:line="970" pos:column="20">*<pos:position pos:line="970" pos:column="21"/></modifier></type><name pos:line="970" pos:column="21">newdir<pos:position pos:line="970" pos:column="27"/></name></decl>;<pos:position pos:line="970" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="971" pos:column="5">module<pos:position pos:line="971" pos:column="11"/></name> <modifier pos:line="971" pos:column="12">*<pos:position pos:line="971" pos:column="13"/></modifier></type><name pos:line="971" pos:column="13">mod<pos:position pos:line="971" pos:column="16"/></name> <init pos:line="971" pos:column="17">= <expr><name pos:line="971" pos:column="19">ap_top_module<pos:position pos:line="971" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="971" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="972" pos:column="5">const<pos:position pos:line="972" pos:column="10"/></specifier> <name pos:line="972" pos:column="11">command_rec<pos:position pos:line="972" pos:column="22"/></name> <modifier pos:line="972" pos:column="23">*<pos:position pos:line="972" pos:column="24"/></modifier></type><name pos:line="972" pos:column="24">cmd<pos:position pos:line="972" pos:column="27"/></name></decl>;<pos:position pos:line="972" pos:column="28"/></decl_stmt>

    <if pos:line="974" pos:column="5">if <condition pos:line="974" pos:column="8">(<expr><operator pos:line="974" pos:column="9">*<pos:position pos:line="974" pos:column="10"/></operator><name pos:line="974" pos:column="10">l<pos:position pos:line="974" pos:column="11"/></name> <operator pos:line="974" pos:column="12">==<pos:position pos:line="974" pos:column="14"/></operator> <literal type="char" pos:line="974" pos:column="15">'#'<pos:position pos:line="974" pos:column="18"/></literal> <operator pos:line="974" pos:column="19">||<pos:position pos:line="974" pos:column="21"/></operator> <operator pos:line="974" pos:column="22">*<pos:position pos:line="974" pos:column="23"/></operator><name pos:line="974" pos:column="23">l<pos:position pos:line="974" pos:column="24"/></name> <operator pos:line="974" pos:column="25">==<pos:position pos:line="974" pos:column="27"/></operator> <literal type="char" pos:line="974" pos:column="28">'\0'<pos:position pos:line="974" pos:column="32"/></literal></expr>)<pos:position pos:line="974" pos:column="33"/></condition><then pos:line="974" pos:column="33">
        <block type="pseudo"><return pos:line="975" pos:column="9">return <expr><name pos:line="975" pos:column="16">NULL<pos:position pos:line="975" pos:column="20"/></name></expr>;<pos:position pos:line="975" pos:column="21"/></return></block></then></if>

<cpp:if pos:line="977" pos:column="1">#<cpp:directive pos:line="977" pos:column="2">if<pos:position pos:line="977" pos:column="4"/></cpp:directive> <expr><name pos:line="977" pos:column="5">RESOLVE_ENV_PER_TOKEN<pos:position pos:line="977" pos:column="26"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="978" pos:column="5">args<pos:position pos:line="978" pos:column="9"/></name> <operator pos:line="978" pos:column="10">=<pos:position pos:line="978" pos:column="11"/></operator> <name pos:line="978" pos:column="12">l<pos:position pos:line="978" pos:column="13"/></name></expr>;<pos:position pos:line="978" pos:column="14"/></expr_stmt>
<cpp:else pos:line="979" pos:column="1">#<cpp:directive pos:line="979" pos:column="2">else<pos:position pos:line="979" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="980" pos:column="5">args<pos:position pos:line="980" pos:column="9"/></name> <operator pos:line="980" pos:column="10">=<pos:position pos:line="980" pos:column="11"/></operator> <call><name pos:line="980" pos:column="12">ap_resolve_env<pos:position pos:line="980" pos:column="26"/></name><argument_list pos:line="980" pos:column="26">(<argument><expr><name pos:line="980" pos:column="27">temp_pool<pos:position pos:line="980" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="980" pos:column="38">l<pos:position pos:line="980" pos:column="39"/></name></expr></argument>)<pos:position pos:line="980" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="980" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="981" pos:column="1">#<cpp:directive pos:line="981" pos:column="2">endif<pos:position pos:line="981" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="983" pos:column="5">cmd_name<pos:position pos:line="983" pos:column="13"/></name> <operator pos:line="983" pos:column="14">=<pos:position pos:line="983" pos:column="15"/></operator> <call><name pos:line="983" pos:column="16">ap_getword_conf<pos:position pos:line="983" pos:column="31"/></name><argument_list pos:line="983" pos:column="31">(<argument><expr><name pos:line="983" pos:column="32">p<pos:position pos:line="983" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="983" pos:column="35">&amp;<pos:position pos:line="983" pos:column="40"/></operator><name pos:line="983" pos:column="36">args<pos:position pos:line="983" pos:column="40"/></name></expr></argument>)<pos:position pos:line="983" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="983" pos:column="42"/></expr_stmt>
    <if pos:line="984" pos:column="5">if <condition pos:line="984" pos:column="8">(<expr><operator pos:line="984" pos:column="9">*<pos:position pos:line="984" pos:column="10"/></operator><name pos:line="984" pos:column="10">cmd_name<pos:position pos:line="984" pos:column="18"/></name> <operator pos:line="984" pos:column="19">==<pos:position pos:line="984" pos:column="21"/></operator> <literal type="char" pos:line="984" pos:column="22">'\0'<pos:position pos:line="984" pos:column="26"/></literal></expr>)<pos:position pos:line="984" pos:column="27"/></condition><then pos:line="984" pos:column="27"> <block pos:line="984" pos:column="28">{
        <comment type="block" pos:line="985" pos:column="9">/* Note: this branch should not occur. An empty line should have
         * triggered the exit further above.
         */</comment>
        <return pos:line="988" pos:column="9">return <expr><name pos:line="988" pos:column="16">NULL<pos:position pos:line="988" pos:column="20"/></name></expr>;<pos:position pos:line="988" pos:column="21"/></return>
    }<pos:position pos:line="989" pos:column="6"/></block></then></if>

    <if pos:line="991" pos:column="5">if <condition pos:line="991" pos:column="8">(<expr><name><name pos:line="991" pos:column="9">cmd_name<pos:position pos:line="991" pos:column="17"/></name><index pos:line="991" pos:column="17">[<expr><literal type="number" pos:line="991" pos:column="18">1<pos:position pos:line="991" pos:column="19"/></literal></expr>]<pos:position pos:line="991" pos:column="20"/></index></name> <operator pos:line="991" pos:column="21">!=<pos:position pos:line="991" pos:column="23"/></operator> <literal type="char" pos:line="991" pos:column="24">'/'<pos:position pos:line="991" pos:column="27"/></literal></expr>)<pos:position pos:line="991" pos:column="28"/></condition><then pos:line="991" pos:column="28"> <block pos:line="991" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="992" pos:column="9">char<pos:position pos:line="992" pos:column="13"/></name> <modifier pos:line="992" pos:column="14">*<pos:position pos:line="992" pos:column="15"/></modifier></type><name pos:line="992" pos:column="15">lastc<pos:position pos:line="992" pos:column="20"/></name> <init pos:line="992" pos:column="21">= <expr><name pos:line="992" pos:column="23">cmd_name<pos:position pos:line="992" pos:column="31"/></name> <operator pos:line="992" pos:column="32">+<pos:position pos:line="992" pos:column="33"/></operator> <call><name pos:line="992" pos:column="34">strlen<pos:position pos:line="992" pos:column="40"/></name><argument_list pos:line="992" pos:column="40">(<argument><expr><name pos:line="992" pos:column="41">cmd_name<pos:position pos:line="992" pos:column="49"/></name></expr></argument>)<pos:position pos:line="992" pos:column="50"/></argument_list></call> <operator pos:line="992" pos:column="51">-<pos:position pos:line="992" pos:column="52"/></operator> <literal type="number" pos:line="992" pos:column="53">1<pos:position pos:line="992" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="992" pos:column="55"/></decl_stmt>
        <if pos:line="993" pos:column="9">if <condition pos:line="993" pos:column="12">(<expr><operator pos:line="993" pos:column="13">*<pos:position pos:line="993" pos:column="14"/></operator><name pos:line="993" pos:column="14">lastc<pos:position pos:line="993" pos:column="19"/></name> <operator pos:line="993" pos:column="20">==<pos:position pos:line="993" pos:column="22"/></operator> <literal type="char" pos:line="993" pos:column="23">'&gt;'<pos:position pos:line="993" pos:column="29"/></literal></expr>)<pos:position pos:line="993" pos:column="27"/></condition><then pos:line="993" pos:column="27"> <block pos:line="993" pos:column="28">{
            <expr_stmt><expr><operator pos:line="994" pos:column="13">*<pos:position pos:line="994" pos:column="14"/></operator><name pos:line="994" pos:column="14">lastc<pos:position pos:line="994" pos:column="19"/></name> <operator pos:line="994" pos:column="20">=<pos:position pos:line="994" pos:column="21"/></operator> <literal type="char" pos:line="994" pos:column="22">'\0'<pos:position pos:line="994" pos:column="26"/></literal></expr> ;<pos:position pos:line="994" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="995" pos:column="10"/></block></then></if>
        <if pos:line="996" pos:column="9">if <condition pos:line="996" pos:column="12">(<expr><name><name pos:line="996" pos:column="13">cmd_name<pos:position pos:line="996" pos:column="21"/></name><index pos:line="996" pos:column="21">[<expr><literal type="number" pos:line="996" pos:column="22">0<pos:position pos:line="996" pos:column="23"/></literal></expr>]<pos:position pos:line="996" pos:column="24"/></index></name> <operator pos:line="996" pos:column="25">==<pos:position pos:line="996" pos:column="27"/></operator> <literal type="char" pos:line="996" pos:column="28">'&lt;'<pos:position pos:line="996" pos:column="34"/></literal> <operator pos:line="996" pos:column="32">&amp;&amp;<pos:position pos:line="996" pos:column="42"/></operator> <operator pos:line="996" pos:column="35">*<pos:position pos:line="996" pos:column="36"/></operator><name pos:line="996" pos:column="36">args<pos:position pos:line="996" pos:column="40"/></name> <operator pos:line="996" pos:column="41">==<pos:position pos:line="996" pos:column="43"/></operator> <literal type="char" pos:line="996" pos:column="44">'\0'<pos:position pos:line="996" pos:column="48"/></literal></expr>)<pos:position pos:line="996" pos:column="49"/></condition><then pos:line="996" pos:column="49"> <block pos:line="996" pos:column="50">{
            <expr_stmt><expr><name pos:line="997" pos:column="13">args<pos:position pos:line="997" pos:column="17"/></name> <operator pos:line="997" pos:column="18">=<pos:position pos:line="997" pos:column="19"/></operator> <literal type="string" pos:line="997" pos:column="20">"&gt;"<pos:position pos:line="997" pos:column="26"/></literal></expr>;<pos:position pos:line="997" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="998" pos:column="10"/></block></then></if>
    }<pos:position pos:line="999" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="1001" pos:column="5">newdir<pos:position pos:line="1001" pos:column="11"/></name> <operator pos:line="1001" pos:column="12">=<pos:position pos:line="1001" pos:column="13"/></operator> <call><name pos:line="1001" pos:column="14">apr_pcalloc<pos:position pos:line="1001" pos:column="25"/></name><argument_list pos:line="1001" pos:column="25">(<argument><expr><name pos:line="1001" pos:column="26">p<pos:position pos:line="1001" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="1001" pos:column="29">sizeof<argument_list pos:line="1001" pos:column="35">(<argument><expr><name pos:line="1001" pos:column="36">ap_directive_t<pos:position pos:line="1001" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1001" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1001" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1001" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1002" pos:column="5">newdir<pos:position pos:line="1002" pos:column="11"/></name><operator pos:line="1002" pos:column="11">-&gt;<pos:position pos:line="1002" pos:column="16"/></operator><name pos:line="1002" pos:column="13">filename<pos:position pos:line="1002" pos:column="21"/></name></name> <operator pos:line="1002" pos:column="22">=<pos:position pos:line="1002" pos:column="23"/></operator> <name><name pos:line="1002" pos:column="24">parms<pos:position pos:line="1002" pos:column="29"/></name><operator pos:line="1002" pos:column="29">-&gt;<pos:position pos:line="1002" pos:column="34"/></operator><name pos:line="1002" pos:column="31">config_file<pos:position pos:line="1002" pos:column="42"/></name><operator pos:line="1002" pos:column="42">-&gt;<pos:position pos:line="1002" pos:column="47"/></operator><name pos:line="1002" pos:column="44">name<pos:position pos:line="1002" pos:column="48"/></name></name></expr>;<pos:position pos:line="1002" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1003" pos:column="5">newdir<pos:position pos:line="1003" pos:column="11"/></name><operator pos:line="1003" pos:column="11">-&gt;<pos:position pos:line="1003" pos:column="16"/></operator><name pos:line="1003" pos:column="13">line_num<pos:position pos:line="1003" pos:column="21"/></name></name> <operator pos:line="1003" pos:column="22">=<pos:position pos:line="1003" pos:column="23"/></operator> <name><name pos:line="1003" pos:column="24">parms<pos:position pos:line="1003" pos:column="29"/></name><operator pos:line="1003" pos:column="29">-&gt;<pos:position pos:line="1003" pos:column="34"/></operator><name pos:line="1003" pos:column="31">config_file<pos:position pos:line="1003" pos:column="42"/></name><operator pos:line="1003" pos:column="42">-&gt;<pos:position pos:line="1003" pos:column="47"/></operator><name pos:line="1003" pos:column="44">line_number<pos:position pos:line="1003" pos:column="55"/></name></name></expr>;<pos:position pos:line="1003" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1004" pos:column="5">newdir<pos:position pos:line="1004" pos:column="11"/></name><operator pos:line="1004" pos:column="11">-&gt;<pos:position pos:line="1004" pos:column="16"/></operator><name pos:line="1004" pos:column="13">directive<pos:position pos:line="1004" pos:column="22"/></name></name> <operator pos:line="1004" pos:column="23">=<pos:position pos:line="1004" pos:column="24"/></operator> <name pos:line="1004" pos:column="25">cmd_name<pos:position pos:line="1004" pos:column="33"/></name></expr>;<pos:position pos:line="1004" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1005" pos:column="5">newdir<pos:position pos:line="1005" pos:column="11"/></name><operator pos:line="1005" pos:column="11">-&gt;<pos:position pos:line="1005" pos:column="16"/></operator><name pos:line="1005" pos:column="13">args<pos:position pos:line="1005" pos:column="17"/></name></name> <operator pos:line="1005" pos:column="18">=<pos:position pos:line="1005" pos:column="19"/></operator> <call><name pos:line="1005" pos:column="20">apr_pstrdup<pos:position pos:line="1005" pos:column="31"/></name><argument_list pos:line="1005" pos:column="31">(<argument><expr><name pos:line="1005" pos:column="32">p<pos:position pos:line="1005" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1005" pos:column="35">args<pos:position pos:line="1005" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1005" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1005" pos:column="41"/></expr_stmt>

    <if pos:line="1007" pos:column="5">if <condition pos:line="1007" pos:column="8">(<expr><operator pos:line="1007" pos:column="9">(<pos:position pos:line="1007" pos:column="10"/></operator><name pos:line="1007" pos:column="10">cmd<pos:position pos:line="1007" pos:column="13"/></name> <operator pos:line="1007" pos:column="14">=<pos:position pos:line="1007" pos:column="15"/></operator> <call><name pos:line="1007" pos:column="16">ap_find_command_in_modules<pos:position pos:line="1007" pos:column="42"/></name><argument_list pos:line="1007" pos:column="42">(<argument><expr><name pos:line="1007" pos:column="43">cmd_name<pos:position pos:line="1007" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="1007" pos:column="53">&amp;<pos:position pos:line="1007" pos:column="58"/></operator><name pos:line="1007" pos:column="54">mod<pos:position pos:line="1007" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1007" pos:column="58"/></argument_list></call><operator pos:line="1007" pos:column="58">)<pos:position pos:line="1007" pos:column="59"/></operator> <operator pos:line="1007" pos:column="60">!=<pos:position pos:line="1007" pos:column="62"/></operator> <name pos:line="1007" pos:column="63">NULL<pos:position pos:line="1007" pos:column="67"/></name></expr>)<pos:position pos:line="1007" pos:column="68"/></condition><then pos:line="1007" pos:column="68"> <block pos:line="1007" pos:column="69">{
        <if pos:line="1008" pos:column="9">if <condition pos:line="1008" pos:column="12">(<expr><name><name pos:line="1008" pos:column="13">cmd<pos:position pos:line="1008" pos:column="16"/></name><operator pos:line="1008" pos:column="16">-&gt;<pos:position pos:line="1008" pos:column="21"/></operator><name pos:line="1008" pos:column="18">req_override<pos:position pos:line="1008" pos:column="30"/></name></name> <operator pos:line="1008" pos:column="31">&amp;<pos:position pos:line="1008" pos:column="36"/></operator> <name pos:line="1008" pos:column="33">EXEC_ON_READ<pos:position pos:line="1008" pos:column="45"/></name></expr>)<pos:position pos:line="1008" pos:column="46"/></condition><then pos:line="1008" pos:column="46"> <block pos:line="1008" pos:column="47">{
            <decl_stmt><decl><type><name pos:line="1009" pos:column="13">ap_directive_t<pos:position pos:line="1009" pos:column="27"/></name> <modifier pos:line="1009" pos:column="28">*<pos:position pos:line="1009" pos:column="29"/></modifier></type><name pos:line="1009" pos:column="29">sub_tree<pos:position pos:line="1009" pos:column="37"/></name> <init pos:line="1009" pos:column="38">= <expr><name pos:line="1009" pos:column="40">NULL<pos:position pos:line="1009" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="1009" pos:column="45"/></decl_stmt>

            <expr_stmt><expr><name><name pos:line="1011" pos:column="13">parms<pos:position pos:line="1011" pos:column="18"/></name><operator pos:line="1011" pos:column="18">-&gt;<pos:position pos:line="1011" pos:column="23"/></operator><name pos:line="1011" pos:column="20">err_directive<pos:position pos:line="1011" pos:column="33"/></name></name> <operator pos:line="1011" pos:column="34">=<pos:position pos:line="1011" pos:column="35"/></operator> <name pos:line="1011" pos:column="36">newdir<pos:position pos:line="1011" pos:column="42"/></name></expr>;<pos:position pos:line="1011" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1012" pos:column="13">retval<pos:position pos:line="1012" pos:column="19"/></name> <operator pos:line="1012" pos:column="20">=<pos:position pos:line="1012" pos:column="21"/></operator> <call><name pos:line="1012" pos:column="22">execute_now<pos:position pos:line="1012" pos:column="33"/></name><argument_list pos:line="1012" pos:column="33">(<argument><expr><name pos:line="1012" pos:column="34">cmd_name<pos:position pos:line="1012" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1012" pos:column="44">args<pos:position pos:line="1012" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="1012" pos:column="50">parms<pos:position pos:line="1012" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1012" pos:column="57">p<pos:position pos:line="1012" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1012" pos:column="60">temp_pool<pos:position pos:line="1012" pos:column="69"/></name></expr></argument>,
                                 <argument><expr><operator pos:line="1013" pos:column="34">&amp;<pos:position pos:line="1013" pos:column="39"/></operator><name pos:line="1013" pos:column="35">sub_tree<pos:position pos:line="1013" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="1013" pos:column="45">*<pos:position pos:line="1013" pos:column="46"/></operator><name pos:line="1013" pos:column="46">curr_parent<pos:position pos:line="1013" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1013" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1013" pos:column="59"/></expr_stmt>
            <if pos:line="1014" pos:column="13">if <condition pos:line="1014" pos:column="16">(<expr><operator pos:line="1014" pos:column="17">*<pos:position pos:line="1014" pos:column="18"/></operator><name pos:line="1014" pos:column="18">current<pos:position pos:line="1014" pos:column="25"/></name></expr>)<pos:position pos:line="1014" pos:column="26"/></condition><then pos:line="1014" pos:column="26"> <block pos:line="1014" pos:column="27">{
                <expr_stmt><expr><name><operator pos:line="1015" pos:column="17">(<pos:position pos:line="1015" pos:column="18"/></operator><operator pos:line="1015" pos:column="18">*<pos:position pos:line="1015" pos:column="19"/></operator><name pos:line="1015" pos:column="19">current<pos:position pos:line="1015" pos:column="26"/></name><operator pos:line="1015" pos:column="26">)<pos:position pos:line="1015" pos:column="27"/></operator><operator pos:line="1015" pos:column="27">-&gt;<pos:position pos:line="1015" pos:column="32"/></operator><name pos:line="1015" pos:column="29">next<pos:position pos:line="1015" pos:column="33"/></name></name> <operator pos:line="1015" pos:column="34">=<pos:position pos:line="1015" pos:column="35"/></operator> <name pos:line="1015" pos:column="36">sub_tree<pos:position pos:line="1015" pos:column="44"/></name></expr>;<pos:position pos:line="1015" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="1016" pos:column="14"/></block></then>
            <else pos:line="1017" pos:column="13">else <block pos:line="1017" pos:column="18">{
                <expr_stmt><expr><operator pos:line="1018" pos:column="17">*<pos:position pos:line="1018" pos:column="18"/></operator><name pos:line="1018" pos:column="18">current<pos:position pos:line="1018" pos:column="25"/></name> <operator pos:line="1018" pos:column="26">=<pos:position pos:line="1018" pos:column="27"/></operator> <name pos:line="1018" pos:column="28">sub_tree<pos:position pos:line="1018" pos:column="36"/></name></expr>;<pos:position pos:line="1018" pos:column="37"/></expr_stmt>
                <if pos:line="1019" pos:column="17">if <condition pos:line="1019" pos:column="20">(<expr><operator pos:line="1019" pos:column="21">*<pos:position pos:line="1019" pos:column="22"/></operator><name pos:line="1019" pos:column="22">curr_parent<pos:position pos:line="1019" pos:column="33"/></name></expr>)<pos:position pos:line="1019" pos:column="34"/></condition><then pos:line="1019" pos:column="34"> <block pos:line="1019" pos:column="35">{
                    <expr_stmt><expr><name><operator pos:line="1020" pos:column="21">(<pos:position pos:line="1020" pos:column="22"/></operator><operator pos:line="1020" pos:column="22">*<pos:position pos:line="1020" pos:column="23"/></operator><name pos:line="1020" pos:column="23">curr_parent<pos:position pos:line="1020" pos:column="34"/></name><operator pos:line="1020" pos:column="34">)<pos:position pos:line="1020" pos:column="35"/></operator><operator pos:line="1020" pos:column="35">-&gt;<pos:position pos:line="1020" pos:column="40"/></operator><name pos:line="1020" pos:column="37">first_child<pos:position pos:line="1020" pos:column="48"/></name></name> <operator pos:line="1020" pos:column="49">=<pos:position pos:line="1020" pos:column="50"/></operator> <operator pos:line="1020" pos:column="51">(<pos:position pos:line="1020" pos:column="52"/></operator><operator pos:line="1020" pos:column="52">*<pos:position pos:line="1020" pos:column="53"/></operator><name pos:line="1020" pos:column="53">current<pos:position pos:line="1020" pos:column="60"/></name><operator pos:line="1020" pos:column="60">)<pos:position pos:line="1020" pos:column="61"/></operator></expr>;<pos:position pos:line="1020" pos:column="62"/></expr_stmt>
                }<pos:position pos:line="1021" pos:column="18"/></block></then></if>
                <if pos:line="1022" pos:column="17">if <condition pos:line="1022" pos:column="20">(<expr><operator pos:line="1022" pos:column="21">*<pos:position pos:line="1022" pos:column="22"/></operator><name pos:line="1022" pos:column="22">current<pos:position pos:line="1022" pos:column="29"/></name></expr>)<pos:position pos:line="1022" pos:column="30"/></condition><then pos:line="1022" pos:column="30"> <block pos:line="1022" pos:column="31">{
                    <expr_stmt><expr><name><operator pos:line="1023" pos:column="21">(<pos:position pos:line="1023" pos:column="22"/></operator><operator pos:line="1023" pos:column="22">*<pos:position pos:line="1023" pos:column="23"/></operator><name pos:line="1023" pos:column="23">current<pos:position pos:line="1023" pos:column="30"/></name><operator pos:line="1023" pos:column="30">)<pos:position pos:line="1023" pos:column="31"/></operator><operator pos:line="1023" pos:column="31">-&gt;<pos:position pos:line="1023" pos:column="36"/></operator><name pos:line="1023" pos:column="33">parent<pos:position pos:line="1023" pos:column="39"/></name></name> <operator pos:line="1023" pos:column="40">=<pos:position pos:line="1023" pos:column="41"/></operator> <operator pos:line="1023" pos:column="42">(<pos:position pos:line="1023" pos:column="43"/></operator><operator pos:line="1023" pos:column="43">*<pos:position pos:line="1023" pos:column="44"/></operator><name pos:line="1023" pos:column="44">curr_parent<pos:position pos:line="1023" pos:column="55"/></name><operator pos:line="1023" pos:column="55">)<pos:position pos:line="1023" pos:column="56"/></operator></expr>;<pos:position pos:line="1023" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="1024" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1025" pos:column="14"/></block></else></if>
            <if pos:line="1026" pos:column="13">if <condition pos:line="1026" pos:column="16">(<expr><operator pos:line="1026" pos:column="17">*<pos:position pos:line="1026" pos:column="18"/></operator><name pos:line="1026" pos:column="18">current<pos:position pos:line="1026" pos:column="25"/></name></expr>)<pos:position pos:line="1026" pos:column="26"/></condition><then pos:line="1026" pos:column="26"> <block pos:line="1026" pos:column="27">{
                <if pos:line="1027" pos:column="17">if <condition pos:line="1027" pos:column="20">(<expr><operator pos:line="1027" pos:column="21">!<pos:position pos:line="1027" pos:column="22"/></operator><operator pos:line="1027" pos:column="22">*<pos:position pos:line="1027" pos:column="23"/></operator><name pos:line="1027" pos:column="23">conftree<pos:position pos:line="1027" pos:column="31"/></name></expr>)<pos:position pos:line="1027" pos:column="32"/></condition><then pos:line="1027" pos:column="32"> <block pos:line="1027" pos:column="33">{
                    <comment type="block" pos:line="1028" pos:column="21">/* Before walking *current to the end of the list,
                     * set the head to *current.
                     */</comment>
                    <expr_stmt><expr><operator pos:line="1031" pos:column="21">*<pos:position pos:line="1031" pos:column="22"/></operator><name pos:line="1031" pos:column="22">conftree<pos:position pos:line="1031" pos:column="30"/></name> <operator pos:line="1031" pos:column="31">=<pos:position pos:line="1031" pos:column="32"/></operator> <operator pos:line="1031" pos:column="33">*<pos:position pos:line="1031" pos:column="34"/></operator><name pos:line="1031" pos:column="34">current<pos:position pos:line="1031" pos:column="41"/></name></expr>;<pos:position pos:line="1031" pos:column="42"/></expr_stmt>
                }<pos:position pos:line="1032" pos:column="18"/></block></then></if>
                <while pos:line="1033" pos:column="17">while <condition pos:line="1033" pos:column="23">(<expr><name><operator pos:line="1033" pos:column="24">(<pos:position pos:line="1033" pos:column="25"/></operator><operator pos:line="1033" pos:column="25">*<pos:position pos:line="1033" pos:column="26"/></operator><name pos:line="1033" pos:column="26">current<pos:position pos:line="1033" pos:column="33"/></name><operator pos:line="1033" pos:column="33">)<pos:position pos:line="1033" pos:column="34"/></operator><operator pos:line="1033" pos:column="34">-&gt;<pos:position pos:line="1033" pos:column="39"/></operator><name pos:line="1033" pos:column="36">next<pos:position pos:line="1033" pos:column="40"/></name></name> <operator pos:line="1033" pos:column="41">!=<pos:position pos:line="1033" pos:column="43"/></operator> <name pos:line="1033" pos:column="44">NULL<pos:position pos:line="1033" pos:column="48"/></name></expr>)<pos:position pos:line="1033" pos:column="49"/></condition> <block pos:line="1033" pos:column="50">{
                    <expr_stmt><expr><operator pos:line="1034" pos:column="21">(<pos:position pos:line="1034" pos:column="22"/></operator><operator pos:line="1034" pos:column="22">*<pos:position pos:line="1034" pos:column="23"/></operator><name pos:line="1034" pos:column="23">current<pos:position pos:line="1034" pos:column="30"/></name><operator pos:line="1034" pos:column="30">)<pos:position pos:line="1034" pos:column="31"/></operator> <operator pos:line="1034" pos:column="32">=<pos:position pos:line="1034" pos:column="33"/></operator> <name><operator pos:line="1034" pos:column="34">(<pos:position pos:line="1034" pos:column="35"/></operator><operator pos:line="1034" pos:column="35">*<pos:position pos:line="1034" pos:column="36"/></operator><name pos:line="1034" pos:column="36">current<pos:position pos:line="1034" pos:column="43"/></name><operator pos:line="1034" pos:column="43">)<pos:position pos:line="1034" pos:column="44"/></operator><operator pos:line="1034" pos:column="44">-&gt;<pos:position pos:line="1034" pos:column="49"/></operator><name pos:line="1034" pos:column="46">next<pos:position pos:line="1034" pos:column="50"/></name></name></expr>;<pos:position pos:line="1034" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><name><operator pos:line="1035" pos:column="21">(<pos:position pos:line="1035" pos:column="22"/></operator><operator pos:line="1035" pos:column="22">*<pos:position pos:line="1035" pos:column="23"/></operator><name pos:line="1035" pos:column="23">current<pos:position pos:line="1035" pos:column="30"/></name><operator pos:line="1035" pos:column="30">)<pos:position pos:line="1035" pos:column="31"/></operator><operator pos:line="1035" pos:column="31">-&gt;<pos:position pos:line="1035" pos:column="36"/></operator><name pos:line="1035" pos:column="33">parent<pos:position pos:line="1035" pos:column="39"/></name></name> <operator pos:line="1035" pos:column="40">=<pos:position pos:line="1035" pos:column="41"/></operator> <operator pos:line="1035" pos:column="42">(<pos:position pos:line="1035" pos:column="43"/></operator><operator pos:line="1035" pos:column="43">*<pos:position pos:line="1035" pos:column="44"/></operator><name pos:line="1035" pos:column="44">curr_parent<pos:position pos:line="1035" pos:column="55"/></name><operator pos:line="1035" pos:column="55">)<pos:position pos:line="1035" pos:column="56"/></operator></expr>;<pos:position pos:line="1035" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="1036" pos:column="18"/></block></while>
            }<pos:position pos:line="1037" pos:column="14"/></block></then></if>
            <return pos:line="1038" pos:column="13">return <expr><name pos:line="1038" pos:column="20">retval<pos:position pos:line="1038" pos:column="26"/></name></expr>;<pos:position pos:line="1038" pos:column="27"/></return>
        }<pos:position pos:line="1039" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1040" pos:column="6"/></block></then></if>

    <if pos:line="1042" pos:column="5">if <condition pos:line="1042" pos:column="8">(<expr><name><name pos:line="1042" pos:column="9">cmd_name<pos:position pos:line="1042" pos:column="17"/></name><index pos:line="1042" pos:column="17">[<expr><literal type="number" pos:line="1042" pos:column="18">0<pos:position pos:line="1042" pos:column="19"/></literal></expr>]<pos:position pos:line="1042" pos:column="20"/></index></name> <operator pos:line="1042" pos:column="21">==<pos:position pos:line="1042" pos:column="23"/></operator> <literal type="char" pos:line="1042" pos:column="24">'&lt;'<pos:position pos:line="1042" pos:column="30"/></literal></expr>)<pos:position pos:line="1042" pos:column="28"/></condition><then pos:line="1042" pos:column="28"> <block pos:line="1042" pos:column="29">{
        <if pos:line="1043" pos:column="9">if <condition pos:line="1043" pos:column="12">(<expr><name><name pos:line="1043" pos:column="13">cmd_name<pos:position pos:line="1043" pos:column="21"/></name><index pos:line="1043" pos:column="21">[<expr><literal type="number" pos:line="1043" pos:column="22">1<pos:position pos:line="1043" pos:column="23"/></literal></expr>]<pos:position pos:line="1043" pos:column="24"/></index></name> <operator pos:line="1043" pos:column="25">!=<pos:position pos:line="1043" pos:column="27"/></operator> <literal type="char" pos:line="1043" pos:column="28">'/'<pos:position pos:line="1043" pos:column="31"/></literal></expr>)<pos:position pos:line="1043" pos:column="32"/></condition><then pos:line="1043" pos:column="32"> <block pos:line="1043" pos:column="33">{
            <expr_stmt><expr><operator pos:line="1044" pos:column="13">(<pos:position pos:line="1044" pos:column="14"/></operator><operator pos:line="1044" pos:column="14">*<pos:position pos:line="1044" pos:column="15"/></operator><name pos:line="1044" pos:column="15">current<pos:position pos:line="1044" pos:column="22"/></name><operator pos:line="1044" pos:column="22">)<pos:position pos:line="1044" pos:column="23"/></operator> <operator pos:line="1044" pos:column="24">=<pos:position pos:line="1044" pos:column="25"/></operator> <call><name pos:line="1044" pos:column="26">ap_add_node<pos:position pos:line="1044" pos:column="37"/></name><argument_list pos:line="1044" pos:column="37">(<argument><expr><name pos:line="1044" pos:column="38">curr_parent<pos:position pos:line="1044" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="1044" pos:column="51">*<pos:position pos:line="1044" pos:column="52"/></operator><name pos:line="1044" pos:column="52">current<pos:position pos:line="1044" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="1044" pos:column="61">newdir<pos:position pos:line="1044" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1044" pos:column="69">1<pos:position pos:line="1044" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="1044" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1044" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="1045" pos:column="10"/></block></then>
        <elseif pos:line="1046" pos:column="9">else <if pos:line="1046" pos:column="14">if <condition pos:line="1046" pos:column="17">(<expr><operator pos:line="1046" pos:column="18">*<pos:position pos:line="1046" pos:column="19"/></operator><name pos:line="1046" pos:column="19">curr_parent<pos:position pos:line="1046" pos:column="30"/></name> <operator pos:line="1046" pos:column="31">==<pos:position pos:line="1046" pos:column="33"/></operator> <name pos:line="1046" pos:column="34">NULL<pos:position pos:line="1046" pos:column="38"/></name></expr>)<pos:position pos:line="1046" pos:column="39"/></condition><then pos:line="1046" pos:column="39"> <block pos:line="1046" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="1047" pos:column="13">parms<pos:position pos:line="1047" pos:column="18"/></name><operator pos:line="1047" pos:column="18">-&gt;<pos:position pos:line="1047" pos:column="23"/></operator><name pos:line="1047" pos:column="20">err_directive<pos:position pos:line="1047" pos:column="33"/></name></name> <operator pos:line="1047" pos:column="34">=<pos:position pos:line="1047" pos:column="35"/></operator> <name pos:line="1047" pos:column="36">newdir<pos:position pos:line="1047" pos:column="42"/></name></expr>;<pos:position pos:line="1047" pos:column="43"/></expr_stmt>
            <return pos:line="1048" pos:column="13">return <expr><call><name pos:line="1048" pos:column="20">apr_pstrcat<pos:position pos:line="1048" pos:column="31"/></name><argument_list pos:line="1048" pos:column="31">(<argument><expr><name pos:line="1048" pos:column="32">p<pos:position pos:line="1048" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1048" pos:column="35">cmd_name<pos:position pos:line="1048" pos:column="43"/></name></expr></argument>,
                               <argument><expr><literal type="string" pos:line="1049" pos:column="32">" without matching &lt;"<pos:position pos:line="1049" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="1049" pos:column="55">cmd_name<pos:position pos:line="1049" pos:column="63"/></name> <operator pos:line="1049" pos:column="64">+<pos:position pos:line="1049" pos:column="65"/></operator> <literal type="number" pos:line="1049" pos:column="66">2<pos:position pos:line="1049" pos:column="67"/></literal></expr></argument>,
                               <argument><expr><literal type="string" pos:line="1050" pos:column="32">" section"<pos:position pos:line="1050" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="1050" pos:column="44">NULL<pos:position pos:line="1050" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1050" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1050" pos:column="50"/></return>
        }<pos:position pos:line="1051" pos:column="10"/></block></then></if></elseif>
        <else pos:line="1052" pos:column="9">else <block pos:line="1052" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="1053" pos:column="13">char<pos:position pos:line="1053" pos:column="17"/></name> <modifier pos:line="1053" pos:column="18">*<pos:position pos:line="1053" pos:column="19"/></modifier></type><name pos:line="1053" pos:column="19">bracket<pos:position pos:line="1053" pos:column="26"/></name> <init pos:line="1053" pos:column="27">= <expr><name pos:line="1053" pos:column="29">cmd_name<pos:position pos:line="1053" pos:column="37"/></name> <operator pos:line="1053" pos:column="38">+<pos:position pos:line="1053" pos:column="39"/></operator> <call><name pos:line="1053" pos:column="40">strlen<pos:position pos:line="1053" pos:column="46"/></name><argument_list pos:line="1053" pos:column="46">(<argument><expr><name pos:line="1053" pos:column="47">cmd_name<pos:position pos:line="1053" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1053" pos:column="56"/></argument_list></call> <operator pos:line="1053" pos:column="57">-<pos:position pos:line="1053" pos:column="58"/></operator> <literal type="number" pos:line="1053" pos:column="59">1<pos:position pos:line="1053" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="1053" pos:column="61"/></decl_stmt>

            <if pos:line="1055" pos:column="13">if <condition pos:line="1055" pos:column="16">(<expr><operator pos:line="1055" pos:column="17">*<pos:position pos:line="1055" pos:column="18"/></operator><name pos:line="1055" pos:column="18">bracket<pos:position pos:line="1055" pos:column="25"/></name> <operator pos:line="1055" pos:column="26">!=<pos:position pos:line="1055" pos:column="28"/></operator> <literal type="char" pos:line="1055" pos:column="29">'&gt;'<pos:position pos:line="1055" pos:column="35"/></literal></expr>)<pos:position pos:line="1055" pos:column="33"/></condition><then pos:line="1055" pos:column="33"> <block pos:line="1055" pos:column="34">{
                <expr_stmt><expr><name><name pos:line="1056" pos:column="17">parms<pos:position pos:line="1056" pos:column="22"/></name><operator pos:line="1056" pos:column="22">-&gt;<pos:position pos:line="1056" pos:column="27"/></operator><name pos:line="1056" pos:column="24">err_directive<pos:position pos:line="1056" pos:column="37"/></name></name> <operator pos:line="1056" pos:column="38">=<pos:position pos:line="1056" pos:column="39"/></operator> <name pos:line="1056" pos:column="40">newdir<pos:position pos:line="1056" pos:column="46"/></name></expr>;<pos:position pos:line="1056" pos:column="47"/></expr_stmt>
                <return pos:line="1057" pos:column="17">return <expr><call><name pos:line="1057" pos:column="24">apr_pstrcat<pos:position pos:line="1057" pos:column="35"/></name><argument_list pos:line="1057" pos:column="35">(<argument><expr><name pos:line="1057" pos:column="36">p<pos:position pos:line="1057" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1057" pos:column="39">cmd_name<pos:position pos:line="1057" pos:column="47"/></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="1058" pos:column="36">"&gt; directive missing closing '&gt;'"<pos:position pos:line="1058" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="1058" pos:column="71">NULL<pos:position pos:line="1058" pos:column="75"/></name></expr></argument>)<pos:position pos:line="1058" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1058" pos:column="77"/></return>
            }<pos:position pos:line="1059" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="1061" pos:column="13">*<pos:position pos:line="1061" pos:column="14"/></operator><name pos:line="1061" pos:column="14">bracket<pos:position pos:line="1061" pos:column="21"/></name> <operator pos:line="1061" pos:column="22">=<pos:position pos:line="1061" pos:column="23"/></operator> <literal type="char" pos:line="1061" pos:column="24">'\0'<pos:position pos:line="1061" pos:column="28"/></literal></expr>;<pos:position pos:line="1061" pos:column="29"/></expr_stmt>

            <if pos:line="1063" pos:column="13">if <condition pos:line="1063" pos:column="16">(<expr><call><name pos:line="1063" pos:column="17">strcasecmp<pos:position pos:line="1063" pos:column="27"/></name><argument_list pos:line="1063" pos:column="27">(<argument><expr><name pos:line="1063" pos:column="28">cmd_name<pos:position pos:line="1063" pos:column="36"/></name> <operator pos:line="1063" pos:column="37">+<pos:position pos:line="1063" pos:column="38"/></operator> <literal type="number" pos:line="1063" pos:column="39">2<pos:position pos:line="1063" pos:column="40"/></literal></expr></argument>,
                           <argument><expr><name><operator pos:line="1064" pos:column="28">(<pos:position pos:line="1064" pos:column="29"/></operator><operator pos:line="1064" pos:column="29">*<pos:position pos:line="1064" pos:column="30"/></operator><name pos:line="1064" pos:column="30">curr_parent<pos:position pos:line="1064" pos:column="41"/></name><operator pos:line="1064" pos:column="41">)<pos:position pos:line="1064" pos:column="42"/></operator><operator pos:line="1064" pos:column="42">-&gt;<pos:position pos:line="1064" pos:column="47"/></operator><name pos:line="1064" pos:column="44">directive<pos:position pos:line="1064" pos:column="53"/></name></name> <operator pos:line="1064" pos:column="54">+<pos:position pos:line="1064" pos:column="55"/></operator> <literal type="number" pos:line="1064" pos:column="56">1<pos:position pos:line="1064" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="1064" pos:column="58"/></argument_list></call> <operator pos:line="1064" pos:column="59">!=<pos:position pos:line="1064" pos:column="61"/></operator> <literal type="number" pos:line="1064" pos:column="62">0<pos:position pos:line="1064" pos:column="63"/></literal></expr>)<pos:position pos:line="1064" pos:column="64"/></condition><then pos:line="1064" pos:column="64"> <block pos:line="1064" pos:column="65">{
                <expr_stmt><expr><name><name pos:line="1065" pos:column="17">parms<pos:position pos:line="1065" pos:column="22"/></name><operator pos:line="1065" pos:column="22">-&gt;<pos:position pos:line="1065" pos:column="27"/></operator><name pos:line="1065" pos:column="24">err_directive<pos:position pos:line="1065" pos:column="37"/></name></name> <operator pos:line="1065" pos:column="38">=<pos:position pos:line="1065" pos:column="39"/></operator> <name pos:line="1065" pos:column="40">newdir<pos:position pos:line="1065" pos:column="46"/></name></expr>;<pos:position pos:line="1065" pos:column="47"/></expr_stmt>
                <return pos:line="1066" pos:column="17">return <expr><call><name pos:line="1066" pos:column="24">apr_pstrcat<pos:position pos:line="1066" pos:column="35"/></name><argument_list pos:line="1066" pos:column="35">(<argument><expr><name pos:line="1066" pos:column="36">p<pos:position pos:line="1066" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1066" pos:column="39">"Expected &lt;/"<pos:position pos:line="1066" pos:column="55"/></literal></expr></argument>,
                                   <argument><expr><name><operator pos:line="1067" pos:column="36">(<pos:position pos:line="1067" pos:column="37"/></operator><operator pos:line="1067" pos:column="37">*<pos:position pos:line="1067" pos:column="38"/></operator><name pos:line="1067" pos:column="38">curr_parent<pos:position pos:line="1067" pos:column="49"/></name><operator pos:line="1067" pos:column="49">)<pos:position pos:line="1067" pos:column="50"/></operator><operator pos:line="1067" pos:column="50">-&gt;<pos:position pos:line="1067" pos:column="55"/></operator><name pos:line="1067" pos:column="52">directive<pos:position pos:line="1067" pos:column="61"/></name></name> <operator pos:line="1067" pos:column="62">+<pos:position pos:line="1067" pos:column="63"/></operator> <literal type="number" pos:line="1067" pos:column="64">1<pos:position pos:line="1067" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1067" pos:column="67">"&gt; but saw "<pos:position pos:line="1067" pos:column="82"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="1068" pos:column="36">cmd_name<pos:position pos:line="1068" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1068" pos:column="46">"&gt;"<pos:position pos:line="1068" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="1068" pos:column="51">NULL<pos:position pos:line="1068" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1068" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1068" pos:column="57"/></return>
            }<pos:position pos:line="1069" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="1071" pos:column="13">*<pos:position pos:line="1071" pos:column="14"/></operator><name pos:line="1071" pos:column="14">bracket<pos:position pos:line="1071" pos:column="21"/></name> <operator pos:line="1071" pos:column="22">=<pos:position pos:line="1071" pos:column="23"/></operator> <literal type="char" pos:line="1071" pos:column="24">'&gt;'<pos:position pos:line="1071" pos:column="30"/></literal></expr>;<pos:position pos:line="1071" pos:column="28"/></expr_stmt>

            <comment type="block" pos:line="1073" pos:column="13">/* done with this section; move up a level */</comment>
            <expr_stmt><expr><operator pos:line="1074" pos:column="13">*<pos:position pos:line="1074" pos:column="14"/></operator><name pos:line="1074" pos:column="14">current<pos:position pos:line="1074" pos:column="21"/></name> <operator pos:line="1074" pos:column="22">=<pos:position pos:line="1074" pos:column="23"/></operator> <operator pos:line="1074" pos:column="24">*<pos:position pos:line="1074" pos:column="25"/></operator><name pos:line="1074" pos:column="25">curr_parent<pos:position pos:line="1074" pos:column="36"/></name></expr>;<pos:position pos:line="1074" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="1075" pos:column="13">*<pos:position pos:line="1075" pos:column="14"/></operator><name pos:line="1075" pos:column="14">curr_parent<pos:position pos:line="1075" pos:column="25"/></name> <operator pos:line="1075" pos:column="26">=<pos:position pos:line="1075" pos:column="27"/></operator> <name><operator pos:line="1075" pos:column="28">(<pos:position pos:line="1075" pos:column="29"/></operator><operator pos:line="1075" pos:column="29">*<pos:position pos:line="1075" pos:column="30"/></operator><name pos:line="1075" pos:column="30">current<pos:position pos:line="1075" pos:column="37"/></name><operator pos:line="1075" pos:column="37">)<pos:position pos:line="1075" pos:column="38"/></operator><operator pos:line="1075" pos:column="38">-&gt;<pos:position pos:line="1075" pos:column="43"/></operator><name pos:line="1075" pos:column="40">parent<pos:position pos:line="1075" pos:column="46"/></name></name></expr>;<pos:position pos:line="1075" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="1076" pos:column="10"/></block></else></if>
    }<pos:position pos:line="1077" pos:column="6"/></block></then>
    <else pos:line="1078" pos:column="5">else <block pos:line="1078" pos:column="10">{
        <expr_stmt><expr><operator pos:line="1079" pos:column="9">*<pos:position pos:line="1079" pos:column="10"/></operator><name pos:line="1079" pos:column="10">current<pos:position pos:line="1079" pos:column="17"/></name> <operator pos:line="1079" pos:column="18">=<pos:position pos:line="1079" pos:column="19"/></operator> <call><name pos:line="1079" pos:column="20">ap_add_node<pos:position pos:line="1079" pos:column="31"/></name><argument_list pos:line="1079" pos:column="31">(<argument><expr><name pos:line="1079" pos:column="32">curr_parent<pos:position pos:line="1079" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="1079" pos:column="45">*<pos:position pos:line="1079" pos:column="46"/></operator><name pos:line="1079" pos:column="46">current<pos:position pos:line="1079" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1079" pos:column="55">newdir<pos:position pos:line="1079" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1079" pos:column="63">0<pos:position pos:line="1079" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="1079" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1079" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="1080" pos:column="6"/></block></else></if>

    <return pos:line="1082" pos:column="5">return <expr><name pos:line="1082" pos:column="12">retval<pos:position pos:line="1082" pos:column="18"/></name></expr>;<pos:position pos:line="1082" pos:column="19"/></return>
}<pos:position pos:line="1083" pos:column="2"/></block></function>

<macro><name pos:line="1085" pos:column="1">AP_DECLARE<pos:position pos:line="1085" pos:column="11"/></name><argument_list pos:line="1085" pos:column="11">(<argument pos:line="1085" pos:column="12">const char *<pos:position pos:line="1085" pos:column="24"/></argument>)<pos:position pos:line="1085" pos:column="25"/></argument_list></macro> <macro><name pos:line="1085" pos:column="26">ap_build_cont_config<pos:position pos:line="1085" pos:column="46"/></name><argument_list pos:line="1085" pos:column="46">(<argument pos:line="1085" pos:column="47">apr_pool_t *p<pos:position pos:line="1085" pos:column="60"/></argument>,
                                              <argument pos:line="1086" pos:column="47">apr_pool_t *temp_pool<pos:position pos:line="1086" pos:column="68"/></argument>,
                                              <argument pos:line="1087" pos:column="47">cmd_parms *parms<pos:position pos:line="1087" pos:column="63"/></argument>,
                                              <argument pos:line="1088" pos:column="47">ap_directive_t **current<pos:position pos:line="1088" pos:column="71"/></argument>,
                                              <argument pos:line="1089" pos:column="47">ap_directive_t **curr_parent<pos:position pos:line="1089" pos:column="75"/></argument>,
                                              <argument pos:line="1090" pos:column="47">char *orig_directive<pos:position pos:line="1090" pos:column="67"/></argument>)<pos:position pos:line="1090" pos:column="68"/></argument_list></macro>
<block pos:line="1091" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1092" pos:column="5">char<pos:position pos:line="1092" pos:column="9"/></name> <modifier pos:line="1092" pos:column="10">*<pos:position pos:line="1092" pos:column="11"/></modifier></type><name pos:line="1092" pos:column="11">l<pos:position pos:line="1092" pos:column="12"/></name></decl>;<pos:position pos:line="1092" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1093" pos:column="5">char<pos:position pos:line="1093" pos:column="9"/></name> <modifier pos:line="1093" pos:column="10">*<pos:position pos:line="1093" pos:column="11"/></modifier></type><name pos:line="1093" pos:column="11">bracket<pos:position pos:line="1093" pos:column="18"/></name></decl>;<pos:position pos:line="1093" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1094" pos:column="5">const<pos:position pos:line="1094" pos:column="10"/></specifier> <name pos:line="1094" pos:column="11">char<pos:position pos:line="1094" pos:column="15"/></name> <modifier pos:line="1094" pos:column="16">*<pos:position pos:line="1094" pos:column="17"/></modifier></type><name pos:line="1094" pos:column="17">retval<pos:position pos:line="1094" pos:column="23"/></name></decl>;<pos:position pos:line="1094" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1095" pos:column="5">ap_directive_t<pos:position pos:line="1095" pos:column="19"/></name> <modifier pos:line="1095" pos:column="20">*<pos:position pos:line="1095" pos:column="21"/></modifier></type><name pos:line="1095" pos:column="21">sub_tree<pos:position pos:line="1095" pos:column="29"/></name> <init pos:line="1095" pos:column="30">= <expr><name pos:line="1095" pos:column="32">NULL<pos:position pos:line="1095" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="1095" pos:column="37"/></decl_stmt>

    <comment type="block" pos:line="1097" pos:column="5">/* Since this function can be called recursively, allocate
     * the temporary 8k string buffer from the temp_pool rather
     * than the stack to avoid over-running a fixed length stack.
     */</comment>
    <expr_stmt><expr><name pos:line="1101" pos:column="5">l<pos:position pos:line="1101" pos:column="6"/></name> <operator pos:line="1101" pos:column="7">=<pos:position pos:line="1101" pos:column="8"/></operator> <call><name pos:line="1101" pos:column="9">apr_palloc<pos:position pos:line="1101" pos:column="19"/></name><argument_list pos:line="1101" pos:column="19">(<argument><expr><name pos:line="1101" pos:column="20">temp_pool<pos:position pos:line="1101" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1101" pos:column="31">MAX_STRING_LEN<pos:position pos:line="1101" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1101" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1101" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1103" pos:column="5">bracket<pos:position pos:line="1103" pos:column="12"/></name> <operator pos:line="1103" pos:column="13">=<pos:position pos:line="1103" pos:column="14"/></operator> <call><name pos:line="1103" pos:column="15">apr_pstrcat<pos:position pos:line="1103" pos:column="26"/></name><argument_list pos:line="1103" pos:column="26">(<argument><expr><name pos:line="1103" pos:column="27">p<pos:position pos:line="1103" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1103" pos:column="30">orig_directive<pos:position pos:line="1103" pos:column="44"/></name> <operator pos:line="1103" pos:column="45">+<pos:position pos:line="1103" pos:column="46"/></operator> <literal type="number" pos:line="1103" pos:column="47">1<pos:position pos:line="1103" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1103" pos:column="50">"&gt;"<pos:position pos:line="1103" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="1103" pos:column="55">NULL<pos:position pos:line="1103" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1103" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1103" pos:column="61"/></expr_stmt>
    <while pos:line="1104" pos:column="5">while <condition pos:line="1104" pos:column="11">(<expr><operator pos:line="1104" pos:column="12">!<pos:position pos:line="1104" pos:column="13"/></operator><operator pos:line="1104" pos:column="13">(<pos:position pos:line="1104" pos:column="14"/></operator><call><name pos:line="1104" pos:column="14">ap_cfg_getline<pos:position pos:line="1104" pos:column="28"/></name><argument_list pos:line="1104" pos:column="28">(<argument><expr><name pos:line="1104" pos:column="29">l<pos:position pos:line="1104" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1104" pos:column="32">MAX_STRING_LEN<pos:position pos:line="1104" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="1104" pos:column="48">parms<pos:position pos:line="1104" pos:column="53"/></name><operator pos:line="1104" pos:column="53">-&gt;<pos:position pos:line="1104" pos:column="58"/></operator><name pos:line="1104" pos:column="55">config_file<pos:position pos:line="1104" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="1104" pos:column="67"/></argument_list></call><operator pos:line="1104" pos:column="67">)<pos:position pos:line="1104" pos:column="68"/></operator></expr>)<pos:position pos:line="1104" pos:column="69"/></condition> <block pos:line="1104" pos:column="70">{
        <if pos:line="1105" pos:column="9">if <condition pos:line="1105" pos:column="12">(<expr><operator pos:line="1105" pos:column="13">!<pos:position pos:line="1105" pos:column="14"/></operator><call><name pos:line="1105" pos:column="14">memcmp<pos:position pos:line="1105" pos:column="20"/></name><argument_list pos:line="1105" pos:column="20">(<argument><expr><name pos:line="1105" pos:column="21">l<pos:position pos:line="1105" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1105" pos:column="24">"&lt;/"<pos:position pos:line="1105" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1105" pos:column="30">2<pos:position pos:line="1105" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="1105" pos:column="32"/></argument_list></call>
            <operator pos:line="1106" pos:column="13">&amp;&amp;<pos:position pos:line="1106" pos:column="23"/></operator> <operator pos:line="1106" pos:column="16">(<pos:position pos:line="1106" pos:column="17"/></operator><call><name pos:line="1106" pos:column="17">strcasecmp<pos:position pos:line="1106" pos:column="27"/></name><argument_list pos:line="1106" pos:column="27">(<argument><expr><name pos:line="1106" pos:column="28">l<pos:position pos:line="1106" pos:column="29"/></name> <operator pos:line="1106" pos:column="30">+<pos:position pos:line="1106" pos:column="31"/></operator> <literal type="number" pos:line="1106" pos:column="32">2<pos:position pos:line="1106" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="1106" pos:column="35">bracket<pos:position pos:line="1106" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1106" pos:column="43"/></argument_list></call> <operator pos:line="1106" pos:column="44">==<pos:position pos:line="1106" pos:column="46"/></operator> <literal type="number" pos:line="1106" pos:column="47">0<pos:position pos:line="1106" pos:column="48"/></literal><operator pos:line="1106" pos:column="48">)<pos:position pos:line="1106" pos:column="49"/></operator>
            <operator pos:line="1107" pos:column="13">&amp;&amp;<pos:position pos:line="1107" pos:column="23"/></operator> <operator pos:line="1107" pos:column="16">(<pos:position pos:line="1107" pos:column="17"/></operator><operator pos:line="1107" pos:column="17">*<pos:position pos:line="1107" pos:column="18"/></operator><name pos:line="1107" pos:column="18">curr_parent<pos:position pos:line="1107" pos:column="29"/></name> <operator pos:line="1107" pos:column="30">==<pos:position pos:line="1107" pos:column="32"/></operator> <name pos:line="1107" pos:column="33">NULL<pos:position pos:line="1107" pos:column="37"/></name><operator pos:line="1107" pos:column="37">)<pos:position pos:line="1107" pos:column="38"/></operator></expr>)<pos:position pos:line="1107" pos:column="39"/></condition><then pos:line="1107" pos:column="39"> <block pos:line="1107" pos:column="40">{
            <break pos:line="1108" pos:column="13">break;<pos:position pos:line="1108" pos:column="19"/></break>
        }<pos:position pos:line="1109" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="1110" pos:column="9">retval<pos:position pos:line="1110" pos:column="15"/></name> <operator pos:line="1110" pos:column="16">=<pos:position pos:line="1110" pos:column="17"/></operator> <call><name pos:line="1110" pos:column="18">ap_build_config_sub<pos:position pos:line="1110" pos:column="37"/></name><argument_list pos:line="1110" pos:column="37">(<argument><expr><name pos:line="1110" pos:column="38">p<pos:position pos:line="1110" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1110" pos:column="41">temp_pool<pos:position pos:line="1110" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1110" pos:column="52">l<pos:position pos:line="1110" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1110" pos:column="55">parms<pos:position pos:line="1110" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1110" pos:column="62">current<pos:position pos:line="1110" pos:column="69"/></name></expr></argument>,
                                     <argument><expr><name pos:line="1111" pos:column="38">curr_parent<pos:position pos:line="1111" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="1111" pos:column="51">&amp;<pos:position pos:line="1111" pos:column="56"/></operator><name pos:line="1111" pos:column="52">sub_tree<pos:position pos:line="1111" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1111" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1111" pos:column="62"/></expr_stmt>
        <if pos:line="1112" pos:column="9">if <condition pos:line="1112" pos:column="12">(<expr><name pos:line="1112" pos:column="13">retval<pos:position pos:line="1112" pos:column="19"/></name> <operator pos:line="1112" pos:column="20">!=<pos:position pos:line="1112" pos:column="22"/></operator> <name pos:line="1112" pos:column="23">NULL<pos:position pos:line="1112" pos:column="27"/></name></expr>)<pos:position pos:line="1112" pos:column="28"/></condition><then pos:line="1112" pos:column="28">
            <block type="pseudo"><return pos:line="1113" pos:column="13">return <expr><name pos:line="1113" pos:column="20">retval<pos:position pos:line="1113" pos:column="26"/></name></expr>;<pos:position pos:line="1113" pos:column="27"/></return></block></then></if>

        <if pos:line="1115" pos:column="9">if <condition pos:line="1115" pos:column="12">(<expr><name pos:line="1115" pos:column="13">sub_tree<pos:position pos:line="1115" pos:column="21"/></name> <operator pos:line="1115" pos:column="22">==<pos:position pos:line="1115" pos:column="24"/></operator> <name pos:line="1115" pos:column="25">NULL<pos:position pos:line="1115" pos:column="29"/></name></expr>)<pos:position pos:line="1115" pos:column="30"/></condition><then pos:line="1115" pos:column="30"> <block pos:line="1115" pos:column="31">{
            <expr_stmt><expr><name pos:line="1116" pos:column="13">sub_tree<pos:position pos:line="1116" pos:column="21"/></name> <operator pos:line="1116" pos:column="22">=<pos:position pos:line="1116" pos:column="23"/></operator> <operator pos:line="1116" pos:column="24">*<pos:position pos:line="1116" pos:column="25"/></operator><name pos:line="1116" pos:column="25">curr_parent<pos:position pos:line="1116" pos:column="36"/></name></expr>;<pos:position pos:line="1116" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="1117" pos:column="10"/></block></then></if>

        <if pos:line="1119" pos:column="9">if <condition pos:line="1119" pos:column="12">(<expr><name pos:line="1119" pos:column="13">sub_tree<pos:position pos:line="1119" pos:column="21"/></name> <operator pos:line="1119" pos:column="22">==<pos:position pos:line="1119" pos:column="24"/></operator> <name pos:line="1119" pos:column="25">NULL<pos:position pos:line="1119" pos:column="29"/></name></expr>)<pos:position pos:line="1119" pos:column="30"/></condition><then pos:line="1119" pos:column="30"> <block pos:line="1119" pos:column="31">{
            <expr_stmt><expr><name pos:line="1120" pos:column="13">sub_tree<pos:position pos:line="1120" pos:column="21"/></name> <operator pos:line="1120" pos:column="22">=<pos:position pos:line="1120" pos:column="23"/></operator> <operator pos:line="1120" pos:column="24">*<pos:position pos:line="1120" pos:column="25"/></operator><name pos:line="1120" pos:column="25">current<pos:position pos:line="1120" pos:column="32"/></name></expr>;<pos:position pos:line="1120" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="1121" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1122" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="1124" pos:column="5">*<pos:position pos:line="1124" pos:column="6"/></operator><name pos:line="1124" pos:column="6">current<pos:position pos:line="1124" pos:column="13"/></name> <operator pos:line="1124" pos:column="14">=<pos:position pos:line="1124" pos:column="15"/></operator> <name pos:line="1124" pos:column="16">sub_tree<pos:position pos:line="1124" pos:column="24"/></name></expr>;<pos:position pos:line="1124" pos:column="25"/></expr_stmt>
    <return pos:line="1125" pos:column="5">return <expr><name pos:line="1125" pos:column="12">NULL<pos:position pos:line="1125" pos:column="16"/></name></expr>;<pos:position pos:line="1125" pos:column="17"/></return>
}<pos:position pos:line="1126" pos:column="2"/></block>

<function><specifier pos:line="1128" pos:column="1">static<pos:position pos:line="1128" pos:column="7"/></specifier> <type><specifier pos:line="1128" pos:column="8">const<pos:position pos:line="1128" pos:column="13"/></specifier> <name pos:line="1128" pos:column="14">char<pos:position pos:line="1128" pos:column="18"/></name> <modifier pos:line="1128" pos:column="19">*<pos:position pos:line="1128" pos:column="20"/></modifier></type><name pos:line="1128" pos:column="20">ap_walk_config_sub<pos:position pos:line="1128" pos:column="38"/></name><parameter_list pos:line="1128" pos:column="38">(<parameter><decl><type><specifier pos:line="1128" pos:column="39">const<pos:position pos:line="1128" pos:column="44"/></specifier> <name pos:line="1128" pos:column="45">ap_directive_t<pos:position pos:line="1128" pos:column="59"/></name> <modifier pos:line="1128" pos:column="60">*<pos:position pos:line="1128" pos:column="61"/></modifier></type><name pos:line="1128" pos:column="61">current<pos:position pos:line="1128" pos:column="68"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="1129" pos:column="39">cmd_parms<pos:position pos:line="1129" pos:column="48"/></name> <modifier pos:line="1129" pos:column="49">*<pos:position pos:line="1129" pos:column="50"/></modifier></type><name pos:line="1129" pos:column="50">parms<pos:position pos:line="1129" pos:column="55"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="1130" pos:column="39">ap_conf_vector_t<pos:position pos:line="1130" pos:column="55"/></name> <modifier pos:line="1130" pos:column="56">*<pos:position pos:line="1130" pos:column="57"/></modifier></type><name pos:line="1130" pos:column="57">section_vector<pos:position pos:line="1130" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1130" pos:column="72"/></parameter_list>
<block pos:line="1131" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="1132" pos:column="5">const<pos:position pos:line="1132" pos:column="10"/></specifier> <name pos:line="1132" pos:column="11">command_rec<pos:position pos:line="1132" pos:column="22"/></name> <modifier pos:line="1132" pos:column="23">*<pos:position pos:line="1132" pos:column="24"/></modifier></type><name pos:line="1132" pos:column="24">cmd<pos:position pos:line="1132" pos:column="27"/></name></decl>;<pos:position pos:line="1132" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1133" pos:column="5">ap_mod_list<pos:position pos:line="1133" pos:column="16"/></name> <modifier pos:line="1133" pos:column="17">*<pos:position pos:line="1133" pos:column="18"/></modifier></type><name pos:line="1133" pos:column="18">ml<pos:position pos:line="1133" pos:column="20"/></name></decl>;<pos:position pos:line="1133" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1134" pos:column="5">char<pos:position pos:line="1134" pos:column="9"/></name> <modifier pos:line="1134" pos:column="10">*<pos:position pos:line="1134" pos:column="11"/></modifier></type><name pos:line="1134" pos:column="11">dir<pos:position pos:line="1134" pos:column="14"/></name> <init pos:line="1134" pos:column="15">= <expr><call><name pos:line="1134" pos:column="17">apr_pstrdup<pos:position pos:line="1134" pos:column="28"/></name><argument_list pos:line="1134" pos:column="28">(<argument><expr><name><name pos:line="1134" pos:column="29">parms<pos:position pos:line="1134" pos:column="34"/></name><operator pos:line="1134" pos:column="34">-&gt;<pos:position pos:line="1134" pos:column="39"/></operator><name pos:line="1134" pos:column="36">pool<pos:position pos:line="1134" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1134" pos:column="42">current<pos:position pos:line="1134" pos:column="49"/></name><operator pos:line="1134" pos:column="49">-&gt;<pos:position pos:line="1134" pos:column="54"/></operator><name pos:line="1134" pos:column="51">directive<pos:position pos:line="1134" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="1134" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1134" pos:column="62"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="1136" pos:column="5">ap_str_tolower<pos:position pos:line="1136" pos:column="19"/></name><argument_list pos:line="1136" pos:column="19">(<argument><expr><name pos:line="1136" pos:column="20">dir<pos:position pos:line="1136" pos:column="23"/></name></expr></argument>)<pos:position pos:line="1136" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="1136" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1138" pos:column="5">ml<pos:position pos:line="1138" pos:column="7"/></name> <operator pos:line="1138" pos:column="8">=<pos:position pos:line="1138" pos:column="9"/></operator> <call><name pos:line="1138" pos:column="10">apr_hash_get<pos:position pos:line="1138" pos:column="22"/></name><argument_list pos:line="1138" pos:column="22">(<argument><expr><name pos:line="1138" pos:column="23">ap_config_hash<pos:position pos:line="1138" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1138" pos:column="39">dir<pos:position pos:line="1138" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1138" pos:column="44">APR_HASH_KEY_STRING<pos:position pos:line="1138" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1138" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1138" pos:column="65"/></expr_stmt>

    <if pos:line="1140" pos:column="5">if <condition pos:line="1140" pos:column="8">(<expr><name pos:line="1140" pos:column="9">ml<pos:position pos:line="1140" pos:column="11"/></name> <operator pos:line="1140" pos:column="12">==<pos:position pos:line="1140" pos:column="14"/></operator> <name pos:line="1140" pos:column="15">NULL<pos:position pos:line="1140" pos:column="19"/></name></expr>)<pos:position pos:line="1140" pos:column="20"/></condition><then pos:line="1140" pos:column="20"> <block pos:line="1140" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="1141" pos:column="9">parms<pos:position pos:line="1141" pos:column="14"/></name><operator pos:line="1141" pos:column="14">-&gt;<pos:position pos:line="1141" pos:column="19"/></operator><name pos:line="1141" pos:column="16">err_directive<pos:position pos:line="1141" pos:column="29"/></name></name> <operator pos:line="1141" pos:column="30">=<pos:position pos:line="1141" pos:column="31"/></operator> <name pos:line="1141" pos:column="32">current<pos:position pos:line="1141" pos:column="39"/></name></expr>;<pos:position pos:line="1141" pos:column="40"/></expr_stmt>
        <return pos:line="1142" pos:column="9">return <expr><call><name pos:line="1142" pos:column="16">apr_pstrcat<pos:position pos:line="1142" pos:column="27"/></name><argument_list pos:line="1142" pos:column="27">(<argument><expr><name><name pos:line="1142" pos:column="28">parms<pos:position pos:line="1142" pos:column="33"/></name><operator pos:line="1142" pos:column="33">-&gt;<pos:position pos:line="1142" pos:column="38"/></operator><name pos:line="1142" pos:column="35">pool<pos:position pos:line="1142" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1142" pos:column="41">"Invalid command '"<pos:position pos:line="1142" pos:column="60"/></literal></expr></argument>,
                           <argument><expr><name><name pos:line="1143" pos:column="28">current<pos:position pos:line="1143" pos:column="35"/></name><operator pos:line="1143" pos:column="35">-&gt;<pos:position pos:line="1143" pos:column="40"/></operator><name pos:line="1143" pos:column="37">directive<pos:position pos:line="1143" pos:column="46"/></name></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="1144" pos:column="28">"', perhaps misspelled or defined by a module "<pos:position pos:line="1144" pos:column="75"/></literal>
                           <literal type="string" pos:line="1145" pos:column="28">"not included in the server configuration"<pos:position pos:line="1145" pos:column="70"/></literal></expr></argument>,
                           <argument><expr><name pos:line="1146" pos:column="28">NULL<pos:position pos:line="1146" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1146" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1146" pos:column="34"/></return>
    }<pos:position pos:line="1147" pos:column="6"/></block></then></if>

    <for pos:line="1149" pos:column="5">for <control pos:line="1149" pos:column="9">( <init pos:line="1149" pos:column="11">;<pos:position pos:line="1149" pos:column="12"/></init> <condition><expr><name pos:line="1149" pos:column="13">ml<pos:position pos:line="1149" pos:column="15"/></name> <operator pos:line="1149" pos:column="16">!=<pos:position pos:line="1149" pos:column="18"/></operator> <name pos:line="1149" pos:column="19">NULL<pos:position pos:line="1149" pos:column="23"/></name></expr>;<pos:position pos:line="1149" pos:column="24"/></condition> <incr><expr><name pos:line="1149" pos:column="25">ml<pos:position pos:line="1149" pos:column="27"/></name> <operator pos:line="1149" pos:column="28">=<pos:position pos:line="1149" pos:column="29"/></operator> <name><name pos:line="1149" pos:column="30">ml<pos:position pos:line="1149" pos:column="32"/></name><operator pos:line="1149" pos:column="32">-&gt;<pos:position pos:line="1149" pos:column="37"/></operator><name pos:line="1149" pos:column="34">next<pos:position pos:line="1149" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="1149" pos:column="39"/></control> <block pos:line="1149" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="1150" pos:column="9">void<pos:position pos:line="1150" pos:column="13"/></name> <modifier pos:line="1150" pos:column="14">*<pos:position pos:line="1150" pos:column="15"/></modifier></type><name pos:line="1150" pos:column="15">dir_config<pos:position pos:line="1150" pos:column="25"/></name> <init pos:line="1150" pos:column="26">= <expr><call><name pos:line="1150" pos:column="28">ap_set_config_vectors<pos:position pos:line="1150" pos:column="49"/></name><argument_list pos:line="1150" pos:column="49">(<argument><expr><name><name pos:line="1150" pos:column="50">parms<pos:position pos:line="1150" pos:column="55"/></name><operator pos:line="1150" pos:column="55">-&gt;<pos:position pos:line="1150" pos:column="60"/></operator><name pos:line="1150" pos:column="57">server<pos:position pos:line="1150" pos:column="63"/></name></name></expr></argument>,
                                                 <argument><expr><name pos:line="1151" pos:column="50">section_vector<pos:position pos:line="1151" pos:column="64"/></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="1152" pos:column="50">parms<pos:position pos:line="1152" pos:column="55"/></name><operator pos:line="1152" pos:column="55">-&gt;<pos:position pos:line="1152" pos:column="60"/></operator><name pos:line="1152" pos:column="57">path<pos:position pos:line="1152" pos:column="61"/></name></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="1153" pos:column="50">ml<pos:position pos:line="1153" pos:column="52"/></name><operator pos:line="1153" pos:column="52">-&gt;<pos:position pos:line="1153" pos:column="57"/></operator><name pos:line="1153" pos:column="54">m<pos:position pos:line="1153" pos:column="55"/></name></name></expr></argument>,
                                                 <argument><expr><name><name pos:line="1154" pos:column="50">parms<pos:position pos:line="1154" pos:column="55"/></name><operator pos:line="1154" pos:column="55">-&gt;<pos:position pos:line="1154" pos:column="60"/></operator><name pos:line="1154" pos:column="57">pool<pos:position pos:line="1154" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="1154" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1154" pos:column="63"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="1155" pos:column="9">const<pos:position pos:line="1155" pos:column="14"/></specifier> <name pos:line="1155" pos:column="15">char<pos:position pos:line="1155" pos:column="19"/></name> <modifier pos:line="1155" pos:column="20">*<pos:position pos:line="1155" pos:column="21"/></modifier></type><name pos:line="1155" pos:column="21">retval<pos:position pos:line="1155" pos:column="27"/></name></decl>;<pos:position pos:line="1155" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><name pos:line="1156" pos:column="9">cmd<pos:position pos:line="1156" pos:column="12"/></name> <operator pos:line="1156" pos:column="13">=<pos:position pos:line="1156" pos:column="14"/></operator> <name><name pos:line="1156" pos:column="15">ml<pos:position pos:line="1156" pos:column="17"/></name><operator pos:line="1156" pos:column="17">-&gt;<pos:position pos:line="1156" pos:column="22"/></operator><name pos:line="1156" pos:column="19">cmd<pos:position pos:line="1156" pos:column="22"/></name></name></expr>;<pos:position pos:line="1156" pos:column="23"/></expr_stmt>

        <comment type="block" pos:line="1158" pos:column="9">/* Once was enough? */</comment>
        <if pos:line="1159" pos:column="9">if <condition pos:line="1159" pos:column="12">(<expr><name><name pos:line="1159" pos:column="13">cmd<pos:position pos:line="1159" pos:column="16"/></name><operator pos:line="1159" pos:column="16">-&gt;<pos:position pos:line="1159" pos:column="21"/></operator><name pos:line="1159" pos:column="18">req_override<pos:position pos:line="1159" pos:column="30"/></name></name> <operator pos:line="1159" pos:column="31">&amp;<pos:position pos:line="1159" pos:column="36"/></operator> <name pos:line="1159" pos:column="33">EXEC_ON_READ<pos:position pos:line="1159" pos:column="45"/></name></expr>)<pos:position pos:line="1159" pos:column="46"/></condition><then pos:line="1159" pos:column="46"> <block pos:line="1159" pos:column="47">{
            <continue pos:line="1160" pos:column="13">continue;<pos:position pos:line="1160" pos:column="22"/></continue>
        }<pos:position pos:line="1161" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="1163" pos:column="9">retval<pos:position pos:line="1163" pos:column="15"/></name> <operator pos:line="1163" pos:column="16">=<pos:position pos:line="1163" pos:column="17"/></operator> <call><name pos:line="1163" pos:column="18">invoke_cmd<pos:position pos:line="1163" pos:column="28"/></name><argument_list pos:line="1163" pos:column="28">(<argument><expr><name pos:line="1163" pos:column="29">cmd<pos:position pos:line="1163" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1163" pos:column="34">parms<pos:position pos:line="1163" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1163" pos:column="41">dir_config<pos:position pos:line="1163" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="1163" pos:column="53">current<pos:position pos:line="1163" pos:column="60"/></name><operator pos:line="1163" pos:column="60">-&gt;<pos:position pos:line="1163" pos:column="65"/></operator><name pos:line="1163" pos:column="62">args<pos:position pos:line="1163" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="1163" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="1163" pos:column="68"/></expr_stmt>

        <if pos:line="1165" pos:column="9">if <condition pos:line="1165" pos:column="12">(<expr><name pos:line="1165" pos:column="13">retval<pos:position pos:line="1165" pos:column="19"/></name> <operator pos:line="1165" pos:column="20">!=<pos:position pos:line="1165" pos:column="22"/></operator> <name pos:line="1165" pos:column="23">NULL<pos:position pos:line="1165" pos:column="27"/></name> <operator pos:line="1165" pos:column="28">&amp;&amp;<pos:position pos:line="1165" pos:column="38"/></operator> <call><name pos:line="1165" pos:column="31">strcmp<pos:position pos:line="1165" pos:column="37"/></name><argument_list pos:line="1165" pos:column="37">(<argument><expr><name pos:line="1165" pos:column="38">retval<pos:position pos:line="1165" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1165" pos:column="46">DECLINE_CMD<pos:position pos:line="1165" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1165" pos:column="58"/></argument_list></call> <operator pos:line="1165" pos:column="59">!=<pos:position pos:line="1165" pos:column="61"/></operator> <literal type="number" pos:line="1165" pos:column="62">0<pos:position pos:line="1165" pos:column="63"/></literal></expr>)<pos:position pos:line="1165" pos:column="64"/></condition><then pos:line="1165" pos:column="64"> <block pos:line="1165" pos:column="65">{
            <comment type="block" pos:line="1166" pos:column="13">/* If the directive in error has already been set, don't
             * replace it.  Otherwise, an error inside a container
             * will be reported as occuring on the first line of the
             * container.
             */</comment>
            <if pos:line="1171" pos:column="13">if <condition pos:line="1171" pos:column="16">(<expr><operator pos:line="1171" pos:column="17">!<pos:position pos:line="1171" pos:column="18"/></operator><name><name pos:line="1171" pos:column="18">parms<pos:position pos:line="1171" pos:column="23"/></name><operator pos:line="1171" pos:column="23">-&gt;<pos:position pos:line="1171" pos:column="28"/></operator><name pos:line="1171" pos:column="25">err_directive<pos:position pos:line="1171" pos:column="38"/></name></name></expr>)<pos:position pos:line="1171" pos:column="39"/></condition><then pos:line="1171" pos:column="39"> <block pos:line="1171" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="1172" pos:column="17">parms<pos:position pos:line="1172" pos:column="22"/></name><operator pos:line="1172" pos:column="22">-&gt;<pos:position pos:line="1172" pos:column="27"/></operator><name pos:line="1172" pos:column="24">err_directive<pos:position pos:line="1172" pos:column="37"/></name></name> <operator pos:line="1172" pos:column="38">=<pos:position pos:line="1172" pos:column="39"/></operator> <name pos:line="1172" pos:column="40">current<pos:position pos:line="1172" pos:column="47"/></name></expr>;<pos:position pos:line="1172" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="1173" pos:column="14"/></block></then></if>
            <return pos:line="1174" pos:column="13">return <expr><name pos:line="1174" pos:column="20">retval<pos:position pos:line="1174" pos:column="26"/></name></expr>;<pos:position pos:line="1174" pos:column="27"/></return>
        }<pos:position pos:line="1175" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1176" pos:column="6"/></block></for>

    <return pos:line="1178" pos:column="5">return <expr><name pos:line="1178" pos:column="12">NULL<pos:position pos:line="1178" pos:column="16"/></name></expr>;<pos:position pos:line="1178" pos:column="17"/></return>
}<pos:position pos:line="1179" pos:column="2"/></block></function>

<macro><name pos:line="1181" pos:column="1">AP_DECLARE<pos:position pos:line="1181" pos:column="11"/></name><argument_list pos:line="1181" pos:column="11">(<argument pos:line="1181" pos:column="12">const char *<pos:position pos:line="1181" pos:column="24"/></argument>)<pos:position pos:line="1181" pos:column="25"/></argument_list></macro> <macro><name pos:line="1181" pos:column="26">ap_walk_config<pos:position pos:line="1181" pos:column="40"/></name><argument_list pos:line="1181" pos:column="40">(<argument pos:line="1181" pos:column="41">ap_directive_t *current<pos:position pos:line="1181" pos:column="64"/></argument>,
                                        <argument pos:line="1182" pos:column="41">cmd_parms *parms<pos:position pos:line="1182" pos:column="57"/></argument>,
                                        <argument pos:line="1183" pos:column="41">ap_conf_vector_t *section_vector<pos:position pos:line="1183" pos:column="73"/></argument>)<pos:position pos:line="1183" pos:column="74"/></argument_list></macro>
<block pos:line="1184" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1185" pos:column="5">ap_conf_vector_t<pos:position pos:line="1185" pos:column="21"/></name> <modifier pos:line="1185" pos:column="22">*<pos:position pos:line="1185" pos:column="23"/></modifier></type><name pos:line="1185" pos:column="23">oldconfig<pos:position pos:line="1185" pos:column="32"/></name> <init pos:line="1185" pos:column="33">= <expr><name><name pos:line="1185" pos:column="35">parms<pos:position pos:line="1185" pos:column="40"/></name><operator pos:line="1185" pos:column="40">-&gt;<pos:position pos:line="1185" pos:column="45"/></operator><name pos:line="1185" pos:column="42">context<pos:position pos:line="1185" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="1185" pos:column="50"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="1187" pos:column="5">parms<pos:position pos:line="1187" pos:column="10"/></name><operator pos:line="1187" pos:column="10">-&gt;<pos:position pos:line="1187" pos:column="15"/></operator><name pos:line="1187" pos:column="12">context<pos:position pos:line="1187" pos:column="19"/></name></name> <operator pos:line="1187" pos:column="20">=<pos:position pos:line="1187" pos:column="21"/></operator> <name pos:line="1187" pos:column="22">section_vector<pos:position pos:line="1187" pos:column="36"/></name></expr>;<pos:position pos:line="1187" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="1189" pos:column="5">/* scan through all directives, executing each one */</comment>
    <for pos:line="1190" pos:column="5">for <control pos:line="1190" pos:column="9">(<init pos:line="1190" pos:column="10">;<pos:position pos:line="1190" pos:column="11"/></init> <condition><expr><name pos:line="1190" pos:column="12">current<pos:position pos:line="1190" pos:column="19"/></name> <operator pos:line="1190" pos:column="20">!=<pos:position pos:line="1190" pos:column="22"/></operator> <name pos:line="1190" pos:column="23">NULL<pos:position pos:line="1190" pos:column="27"/></name></expr>;<pos:position pos:line="1190" pos:column="28"/></condition> <incr><expr><name pos:line="1190" pos:column="29">current<pos:position pos:line="1190" pos:column="36"/></name> <operator pos:line="1190" pos:column="37">=<pos:position pos:line="1190" pos:column="38"/></operator> <name><name pos:line="1190" pos:column="39">current<pos:position pos:line="1190" pos:column="46"/></name><operator pos:line="1190" pos:column="46">-&gt;<pos:position pos:line="1190" pos:column="51"/></operator><name pos:line="1190" pos:column="48">next<pos:position pos:line="1190" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="1190" pos:column="53"/></control> <block pos:line="1190" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="1191" pos:column="9">const<pos:position pos:line="1191" pos:column="14"/></specifier> <name pos:line="1191" pos:column="15">char<pos:position pos:line="1191" pos:column="19"/></name> <modifier pos:line="1191" pos:column="20">*<pos:position pos:line="1191" pos:column="21"/></modifier></type><name pos:line="1191" pos:column="21">errmsg<pos:position pos:line="1191" pos:column="27"/></name></decl>;<pos:position pos:line="1191" pos:column="28"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="1193" pos:column="9">parms<pos:position pos:line="1193" pos:column="14"/></name><operator pos:line="1193" pos:column="14">-&gt;<pos:position pos:line="1193" pos:column="19"/></operator><name pos:line="1193" pos:column="16">directive<pos:position pos:line="1193" pos:column="25"/></name></name> <operator pos:line="1193" pos:column="26">=<pos:position pos:line="1193" pos:column="27"/></operator> <name pos:line="1193" pos:column="28">current<pos:position pos:line="1193" pos:column="35"/></name></expr>;<pos:position pos:line="1193" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="1195" pos:column="9">/* actually parse the command and execute the correct function */</comment>
        <expr_stmt><expr><name pos:line="1196" pos:column="9">errmsg<pos:position pos:line="1196" pos:column="15"/></name> <operator pos:line="1196" pos:column="16">=<pos:position pos:line="1196" pos:column="17"/></operator> <call><name pos:line="1196" pos:column="18">ap_walk_config_sub<pos:position pos:line="1196" pos:column="36"/></name><argument_list pos:line="1196" pos:column="36">(<argument><expr><name pos:line="1196" pos:column="37">current<pos:position pos:line="1196" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1196" pos:column="46">parms<pos:position pos:line="1196" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1196" pos:column="53">section_vector<pos:position pos:line="1196" pos:column="67"/></name></expr></argument>)<pos:position pos:line="1196" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1196" pos:column="69"/></expr_stmt>
        <if pos:line="1197" pos:column="9">if <condition pos:line="1197" pos:column="12">(<expr><name pos:line="1197" pos:column="13">errmsg<pos:position pos:line="1197" pos:column="19"/></name> <operator pos:line="1197" pos:column="20">!=<pos:position pos:line="1197" pos:column="22"/></operator> <name pos:line="1197" pos:column="23">NULL<pos:position pos:line="1197" pos:column="27"/></name></expr>)<pos:position pos:line="1197" pos:column="28"/></condition><then pos:line="1197" pos:column="28"> <block pos:line="1197" pos:column="29">{
            <comment type="block" pos:line="1198" pos:column="13">/* restore the context (just in case) */</comment>
            <expr_stmt><expr><name><name pos:line="1199" pos:column="13">parms<pos:position pos:line="1199" pos:column="18"/></name><operator pos:line="1199" pos:column="18">-&gt;<pos:position pos:line="1199" pos:column="23"/></operator><name pos:line="1199" pos:column="20">context<pos:position pos:line="1199" pos:column="27"/></name></name> <operator pos:line="1199" pos:column="28">=<pos:position pos:line="1199" pos:column="29"/></operator> <name pos:line="1199" pos:column="30">oldconfig<pos:position pos:line="1199" pos:column="39"/></name></expr>;<pos:position pos:line="1199" pos:column="40"/></expr_stmt>
            <return pos:line="1200" pos:column="13">return <expr><name pos:line="1200" pos:column="20">errmsg<pos:position pos:line="1200" pos:column="26"/></name></expr>;<pos:position pos:line="1200" pos:column="27"/></return>
        }<pos:position pos:line="1201" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1202" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="1204" pos:column="5">parms<pos:position pos:line="1204" pos:column="10"/></name><operator pos:line="1204" pos:column="10">-&gt;<pos:position pos:line="1204" pos:column="15"/></operator><name pos:line="1204" pos:column="12">context<pos:position pos:line="1204" pos:column="19"/></name></name> <operator pos:line="1204" pos:column="20">=<pos:position pos:line="1204" pos:column="21"/></operator> <name pos:line="1204" pos:column="22">oldconfig<pos:position pos:line="1204" pos:column="31"/></name></expr>;<pos:position pos:line="1204" pos:column="32"/></expr_stmt>
    <return pos:line="1205" pos:column="5">return <expr><name pos:line="1205" pos:column="12">NULL<pos:position pos:line="1205" pos:column="16"/></name></expr>;<pos:position pos:line="1205" pos:column="17"/></return>
}<pos:position pos:line="1206" pos:column="2"/></block>

<macro><name pos:line="1208" pos:column="1">AP_DECLARE<pos:position pos:line="1208" pos:column="11"/></name><argument_list pos:line="1208" pos:column="11">(<argument pos:line="1208" pos:column="12">const char *<pos:position pos:line="1208" pos:column="24"/></argument>)<pos:position pos:line="1208" pos:column="25"/></argument_list></macro> <macro><name pos:line="1208" pos:column="26">ap_build_config<pos:position pos:line="1208" pos:column="41"/></name><argument_list pos:line="1208" pos:column="41">(<argument pos:line="1208" pos:column="42">cmd_parms *parms<pos:position pos:line="1208" pos:column="58"/></argument>,
                                         <argument pos:line="1209" pos:column="42">apr_pool_t *p<pos:position pos:line="1209" pos:column="55"/></argument>, <argument pos:line="1209" pos:column="57">apr_pool_t *temp_pool<pos:position pos:line="1209" pos:column="78"/></argument>,
                                         <argument pos:line="1210" pos:column="42">ap_directive_t **conftree<pos:position pos:line="1210" pos:column="67"/></argument>)<pos:position pos:line="1210" pos:column="68"/></argument_list></macro>
<block pos:line="1211" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1212" pos:column="5">ap_directive_t<pos:position pos:line="1212" pos:column="19"/></name> <modifier pos:line="1212" pos:column="20">*<pos:position pos:line="1212" pos:column="21"/></modifier></type><name pos:line="1212" pos:column="21">current<pos:position pos:line="1212" pos:column="28"/></name> <init pos:line="1212" pos:column="29">= <expr><operator pos:line="1212" pos:column="31">*<pos:position pos:line="1212" pos:column="32"/></operator><name pos:line="1212" pos:column="32">conftree<pos:position pos:line="1212" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="1212" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1213" pos:column="5">ap_directive_t<pos:position pos:line="1213" pos:column="19"/></name> <modifier pos:line="1213" pos:column="20">*<pos:position pos:line="1213" pos:column="21"/></modifier></type><name pos:line="1213" pos:column="21">curr_parent<pos:position pos:line="1213" pos:column="32"/></name> <init pos:line="1213" pos:column="33">= <expr><name pos:line="1213" pos:column="35">NULL<pos:position pos:line="1213" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="1213" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1214" pos:column="5">char<pos:position pos:line="1214" pos:column="9"/></name> <modifier pos:line="1214" pos:column="10">*<pos:position pos:line="1214" pos:column="11"/></modifier></type><name pos:line="1214" pos:column="11">l<pos:position pos:line="1214" pos:column="12"/></name> <init pos:line="1214" pos:column="13">= <expr><call><name pos:line="1214" pos:column="15">apr_palloc<pos:position pos:line="1214" pos:column="25"/></name> <argument_list pos:line="1214" pos:column="26">(<argument><expr><name pos:line="1214" pos:column="27">temp_pool<pos:position pos:line="1214" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1214" pos:column="38">MAX_STRING_LEN<pos:position pos:line="1214" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1214" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1214" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1215" pos:column="5">const<pos:position pos:line="1215" pos:column="10"/></specifier> <name pos:line="1215" pos:column="11">char<pos:position pos:line="1215" pos:column="15"/></name> <modifier pos:line="1215" pos:column="16">*<pos:position pos:line="1215" pos:column="17"/></modifier></type><name pos:line="1215" pos:column="17">errmsg<pos:position pos:line="1215" pos:column="23"/></name></decl>;<pos:position pos:line="1215" pos:column="24"/></decl_stmt>

    <if pos:line="1217" pos:column="5">if <condition pos:line="1217" pos:column="8">(<expr><name pos:line="1217" pos:column="9">current<pos:position pos:line="1217" pos:column="16"/></name> <operator pos:line="1217" pos:column="17">!=<pos:position pos:line="1217" pos:column="19"/></operator> <name pos:line="1217" pos:column="20">NULL<pos:position pos:line="1217" pos:column="24"/></name></expr>)<pos:position pos:line="1217" pos:column="25"/></condition><then pos:line="1217" pos:column="25"> <block pos:line="1217" pos:column="26">{
        <while pos:line="1218" pos:column="9">while <condition pos:line="1218" pos:column="15">(<expr><name><name pos:line="1218" pos:column="16">current<pos:position pos:line="1218" pos:column="23"/></name><operator pos:line="1218" pos:column="23">-&gt;<pos:position pos:line="1218" pos:column="28"/></operator><name pos:line="1218" pos:column="25">next<pos:position pos:line="1218" pos:column="29"/></name></name></expr>)<pos:position pos:line="1218" pos:column="30"/></condition> <block pos:line="1218" pos:column="31">{
            <expr_stmt><expr><name pos:line="1219" pos:column="13">current<pos:position pos:line="1219" pos:column="20"/></name> <operator pos:line="1219" pos:column="21">=<pos:position pos:line="1219" pos:column="22"/></operator> <name><name pos:line="1219" pos:column="23">current<pos:position pos:line="1219" pos:column="30"/></name><operator pos:line="1219" pos:column="30">-&gt;<pos:position pos:line="1219" pos:column="35"/></operator><name pos:line="1219" pos:column="32">next<pos:position pos:line="1219" pos:column="36"/></name></name></expr>;<pos:position pos:line="1219" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="1220" pos:column="10"/></block></while>
    }<pos:position pos:line="1221" pos:column="6"/></block></then></if>

    <while pos:line="1223" pos:column="5">while <condition pos:line="1223" pos:column="11">(<expr><operator pos:line="1223" pos:column="12">!<pos:position pos:line="1223" pos:column="13"/></operator><operator pos:line="1223" pos:column="13">(<pos:position pos:line="1223" pos:column="14"/></operator><call><name pos:line="1223" pos:column="14">ap_cfg_getline<pos:position pos:line="1223" pos:column="28"/></name><argument_list pos:line="1223" pos:column="28">(<argument><expr><name pos:line="1223" pos:column="29">l<pos:position pos:line="1223" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1223" pos:column="32">MAX_STRING_LEN<pos:position pos:line="1223" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="1223" pos:column="48">parms<pos:position pos:line="1223" pos:column="53"/></name><operator pos:line="1223" pos:column="53">-&gt;<pos:position pos:line="1223" pos:column="58"/></operator><name pos:line="1223" pos:column="55">config_file<pos:position pos:line="1223" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="1223" pos:column="67"/></argument_list></call><operator pos:line="1223" pos:column="67">)<pos:position pos:line="1223" pos:column="68"/></operator></expr>)<pos:position pos:line="1223" pos:column="69"/></condition> <block pos:line="1223" pos:column="70">{
        <expr_stmt><expr><name pos:line="1224" pos:column="9">errmsg<pos:position pos:line="1224" pos:column="15"/></name> <operator pos:line="1224" pos:column="16">=<pos:position pos:line="1224" pos:column="17"/></operator> <call><name pos:line="1224" pos:column="18">ap_build_config_sub<pos:position pos:line="1224" pos:column="37"/></name><argument_list pos:line="1224" pos:column="37">(<argument><expr><name pos:line="1224" pos:column="38">p<pos:position pos:line="1224" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1224" pos:column="41">temp_pool<pos:position pos:line="1224" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1224" pos:column="52">l<pos:position pos:line="1224" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1224" pos:column="55">parms<pos:position pos:line="1224" pos:column="60"/></name></expr></argument>,
                                     <argument><expr><operator pos:line="1225" pos:column="38">&amp;<pos:position pos:line="1225" pos:column="43"/></operator><name pos:line="1225" pos:column="39">current<pos:position pos:line="1225" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="1225" pos:column="48">&amp;<pos:position pos:line="1225" pos:column="53"/></operator><name pos:line="1225" pos:column="49">curr_parent<pos:position pos:line="1225" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1225" pos:column="62">conftree<pos:position pos:line="1225" pos:column="70"/></name></expr></argument>)<pos:position pos:line="1225" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="1225" pos:column="72"/></expr_stmt>
        <if pos:line="1226" pos:column="9">if <condition pos:line="1226" pos:column="12">(<expr><name pos:line="1226" pos:column="13">errmsg<pos:position pos:line="1226" pos:column="19"/></name> <operator pos:line="1226" pos:column="20">!=<pos:position pos:line="1226" pos:column="22"/></operator> <name pos:line="1226" pos:column="23">NULL<pos:position pos:line="1226" pos:column="27"/></name></expr>)<pos:position pos:line="1226" pos:column="28"/></condition><then pos:line="1226" pos:column="28">
            <block type="pseudo"><return pos:line="1227" pos:column="13">return <expr><name pos:line="1227" pos:column="20">errmsg<pos:position pos:line="1227" pos:column="26"/></name></expr>;<pos:position pos:line="1227" pos:column="27"/></return></block></then></if>

        <if pos:line="1229" pos:column="9">if <condition pos:line="1229" pos:column="12">(<expr><operator pos:line="1229" pos:column="13">*<pos:position pos:line="1229" pos:column="14"/></operator><name pos:line="1229" pos:column="14">conftree<pos:position pos:line="1229" pos:column="22"/></name> <operator pos:line="1229" pos:column="23">==<pos:position pos:line="1229" pos:column="25"/></operator> <name pos:line="1229" pos:column="26">NULL<pos:position pos:line="1229" pos:column="30"/></name> <operator pos:line="1229" pos:column="31">&amp;&amp;<pos:position pos:line="1229" pos:column="41"/></operator> <name pos:line="1229" pos:column="34">curr_parent<pos:position pos:line="1229" pos:column="45"/></name> <operator pos:line="1229" pos:column="46">!=<pos:position pos:line="1229" pos:column="48"/></operator> <name pos:line="1229" pos:column="49">NULL<pos:position pos:line="1229" pos:column="53"/></name></expr>)<pos:position pos:line="1229" pos:column="54"/></condition><then pos:line="1229" pos:column="54"> <block pos:line="1229" pos:column="55">{
            <expr_stmt><expr><operator pos:line="1230" pos:column="13">*<pos:position pos:line="1230" pos:column="14"/></operator><name pos:line="1230" pos:column="14">conftree<pos:position pos:line="1230" pos:column="22"/></name> <operator pos:line="1230" pos:column="23">=<pos:position pos:line="1230" pos:column="24"/></operator> <name pos:line="1230" pos:column="25">curr_parent<pos:position pos:line="1230" pos:column="36"/></name></expr>;<pos:position pos:line="1230" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="1231" pos:column="10"/></block></then></if>

        <if pos:line="1233" pos:column="9">if <condition pos:line="1233" pos:column="12">(<expr><operator pos:line="1233" pos:column="13">*<pos:position pos:line="1233" pos:column="14"/></operator><name pos:line="1233" pos:column="14">conftree<pos:position pos:line="1233" pos:column="22"/></name> <operator pos:line="1233" pos:column="23">==<pos:position pos:line="1233" pos:column="25"/></operator> <name pos:line="1233" pos:column="26">NULL<pos:position pos:line="1233" pos:column="30"/></name> <operator pos:line="1233" pos:column="31">&amp;&amp;<pos:position pos:line="1233" pos:column="41"/></operator> <name pos:line="1233" pos:column="34">current<pos:position pos:line="1233" pos:column="41"/></name> <operator pos:line="1233" pos:column="42">!=<pos:position pos:line="1233" pos:column="44"/></operator> <name pos:line="1233" pos:column="45">NULL<pos:position pos:line="1233" pos:column="49"/></name></expr>)<pos:position pos:line="1233" pos:column="50"/></condition><then pos:line="1233" pos:column="50"> <block pos:line="1233" pos:column="51">{
            <expr_stmt><expr><operator pos:line="1234" pos:column="13">*<pos:position pos:line="1234" pos:column="14"/></operator><name pos:line="1234" pos:column="14">conftree<pos:position pos:line="1234" pos:column="22"/></name> <operator pos:line="1234" pos:column="23">=<pos:position pos:line="1234" pos:column="24"/></operator> <name pos:line="1234" pos:column="25">current<pos:position pos:line="1234" pos:column="32"/></name></expr>;<pos:position pos:line="1234" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="1235" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1236" pos:column="6"/></block></while>

    <if pos:line="1238" pos:column="5">if <condition pos:line="1238" pos:column="8">(<expr><name pos:line="1238" pos:column="9">curr_parent<pos:position pos:line="1238" pos:column="20"/></name> <operator pos:line="1238" pos:column="21">!=<pos:position pos:line="1238" pos:column="23"/></operator> <name pos:line="1238" pos:column="24">NULL<pos:position pos:line="1238" pos:column="28"/></name></expr>)<pos:position pos:line="1238" pos:column="29"/></condition><then pos:line="1238" pos:column="29"> <block pos:line="1238" pos:column="30">{
        <expr_stmt><expr><name pos:line="1239" pos:column="9">errmsg<pos:position pos:line="1239" pos:column="15"/></name> <operator pos:line="1239" pos:column="16">=<pos:position pos:line="1239" pos:column="17"/></operator> <literal type="string" pos:line="1239" pos:column="18">""<pos:position pos:line="1239" pos:column="20"/></literal></expr>;<pos:position pos:line="1239" pos:column="21"/></expr_stmt>

        <while pos:line="1241" pos:column="9">while <condition pos:line="1241" pos:column="15">(<expr><name pos:line="1241" pos:column="16">curr_parent<pos:position pos:line="1241" pos:column="27"/></name> <operator pos:line="1241" pos:column="28">!=<pos:position pos:line="1241" pos:column="30"/></operator> <name pos:line="1241" pos:column="31">NULL<pos:position pos:line="1241" pos:column="35"/></name></expr>)<pos:position pos:line="1241" pos:column="36"/></condition> <block pos:line="1241" pos:column="37">{
            <expr_stmt><expr><name pos:line="1242" pos:column="13">errmsg<pos:position pos:line="1242" pos:column="19"/></name> <operator pos:line="1242" pos:column="20">=<pos:position pos:line="1242" pos:column="21"/></operator> <call><name pos:line="1242" pos:column="22">apr_psprintf<pos:position pos:line="1242" pos:column="34"/></name><argument_list pos:line="1242" pos:column="34">(<argument><expr><name pos:line="1242" pos:column="35">p<pos:position pos:line="1242" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1242" pos:column="38">"%s%s%s:%u: %s&gt; was not closed."<pos:position pos:line="1242" pos:column="73"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="1243" pos:column="35">errmsg<pos:position pos:line="1243" pos:column="41"/></name></expr></argument>,
                                  <argument><expr><ternary><condition><expr><operator pos:line="1244" pos:column="35">*<pos:position pos:line="1244" pos:column="36"/></operator><name pos:line="1244" pos:column="36">errmsg<pos:position pos:line="1244" pos:column="42"/></name> <operator pos:line="1244" pos:column="43">==<pos:position pos:line="1244" pos:column="45"/></operator> <literal type="char" pos:line="1244" pos:column="46">'\0'<pos:position pos:line="1244" pos:column="50"/></literal></expr> ?<pos:position pos:line="1244" pos:column="52"/></condition><then pos:line="1244" pos:column="52"> <expr><literal type="string" pos:line="1244" pos:column="53">""<pos:position pos:line="1244" pos:column="55"/></literal></expr> <pos:position pos:line="1244" pos:column="56"/></then><else pos:line="1244" pos:column="56">: <expr><name pos:line="1244" pos:column="58">APR_EOL_STR<pos:position pos:line="1244" pos:column="69"/></name></expr></else></ternary></expr></argument>,
                                  <argument><expr><name><name pos:line="1245" pos:column="35">curr_parent<pos:position pos:line="1245" pos:column="46"/></name><operator pos:line="1245" pos:column="46">-&gt;<pos:position pos:line="1245" pos:column="51"/></operator><name pos:line="1245" pos:column="48">filename<pos:position pos:line="1245" pos:column="56"/></name></name></expr></argument>,
                                  <argument><expr><name><name pos:line="1246" pos:column="35">curr_parent<pos:position pos:line="1246" pos:column="46"/></name><operator pos:line="1246" pos:column="46">-&gt;<pos:position pos:line="1246" pos:column="51"/></operator><name pos:line="1246" pos:column="48">line_num<pos:position pos:line="1246" pos:column="56"/></name></name></expr></argument>,
                                  <argument><expr><name><name pos:line="1247" pos:column="35">curr_parent<pos:position pos:line="1247" pos:column="46"/></name><operator pos:line="1247" pos:column="46">-&gt;<pos:position pos:line="1247" pos:column="51"/></operator><name pos:line="1247" pos:column="48">directive<pos:position pos:line="1247" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="1247" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1247" pos:column="59"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="1249" pos:column="13">parms<pos:position pos:line="1249" pos:column="18"/></name><operator pos:line="1249" pos:column="18">-&gt;<pos:position pos:line="1249" pos:column="23"/></operator><name pos:line="1249" pos:column="20">err_directive<pos:position pos:line="1249" pos:column="33"/></name></name> <operator pos:line="1249" pos:column="34">=<pos:position pos:line="1249" pos:column="35"/></operator> <name pos:line="1249" pos:column="36">curr_parent<pos:position pos:line="1249" pos:column="47"/></name></expr>;<pos:position pos:line="1249" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1250" pos:column="13">curr_parent<pos:position pos:line="1250" pos:column="24"/></name> <operator pos:line="1250" pos:column="25">=<pos:position pos:line="1250" pos:column="26"/></operator> <name><name pos:line="1250" pos:column="27">curr_parent<pos:position pos:line="1250" pos:column="38"/></name><operator pos:line="1250" pos:column="38">-&gt;<pos:position pos:line="1250" pos:column="43"/></operator><name pos:line="1250" pos:column="40">parent<pos:position pos:line="1250" pos:column="46"/></name></name></expr>;<pos:position pos:line="1250" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="1251" pos:column="10"/></block></while>

        <return pos:line="1253" pos:column="9">return <expr><name pos:line="1253" pos:column="16">errmsg<pos:position pos:line="1253" pos:column="22"/></name></expr>;<pos:position pos:line="1253" pos:column="23"/></return>
    }<pos:position pos:line="1254" pos:column="6"/></block></then></if>

    <return pos:line="1256" pos:column="5">return <expr><name pos:line="1256" pos:column="12">NULL<pos:position pos:line="1256" pos:column="16"/></name></expr>;<pos:position pos:line="1256" pos:column="17"/></return>
}<pos:position pos:line="1257" pos:column="2"/></block>

<comment type="block" pos:line="1259" pos:column="1">/*
 * Generic command functions...
 */</comment>

<macro><name pos:line="1263" pos:column="1">AP_DECLARE_NONSTD<pos:position pos:line="1263" pos:column="18"/></name><argument_list pos:line="1263" pos:column="18">(<argument pos:line="1263" pos:column="19">const char *<pos:position pos:line="1263" pos:column="31"/></argument>)<pos:position pos:line="1263" pos:column="32"/></argument_list></macro> <macro><name pos:line="1263" pos:column="33">ap_set_string_slot<pos:position pos:line="1263" pos:column="51"/></name><argument_list pos:line="1263" pos:column="51">(<argument pos:line="1263" pos:column="52">cmd_parms *cmd<pos:position pos:line="1263" pos:column="66"/></argument>,
                                                   <argument pos:line="1264" pos:column="52">void *struct_ptr<pos:position pos:line="1264" pos:column="68"/></argument>,
                                                   <argument pos:line="1265" pos:column="52">const char *arg<pos:position pos:line="1265" pos:column="67"/></argument>)<pos:position pos:line="1265" pos:column="68"/></argument_list></macro>
<block pos:line="1266" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1267" pos:column="5">int<pos:position pos:line="1267" pos:column="8"/></name></type> <name pos:line="1267" pos:column="9">offset<pos:position pos:line="1267" pos:column="15"/></name> <init pos:line="1267" pos:column="16">= <expr><operator pos:line="1267" pos:column="18">(<pos:position pos:line="1267" pos:column="19"/></operator><name pos:line="1267" pos:column="19">int<pos:position pos:line="1267" pos:column="22"/></name><operator pos:line="1267" pos:column="22">)<pos:position pos:line="1267" pos:column="23"/></operator><operator pos:line="1267" pos:column="23">(<pos:position pos:line="1267" pos:column="24"/></operator><name pos:line="1267" pos:column="24">long<pos:position pos:line="1267" pos:column="28"/></name><operator pos:line="1267" pos:column="28">)<pos:position pos:line="1267" pos:column="29"/></operator><name><name pos:line="1267" pos:column="29">cmd<pos:position pos:line="1267" pos:column="32"/></name><operator pos:line="1267" pos:column="32">-&gt;<pos:position pos:line="1267" pos:column="37"/></operator><name pos:line="1267" pos:column="34">info<pos:position pos:line="1267" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="1267" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="1269" pos:column="5">*<pos:position pos:line="1269" pos:column="6"/></operator><operator pos:line="1269" pos:column="6">(<pos:position pos:line="1269" pos:column="7"/></operator><specifier pos:line="1269" pos:column="7">const<pos:position pos:line="1269" pos:column="12"/></specifier> <name pos:line="1269" pos:column="13">char<pos:position pos:line="1269" pos:column="17"/></name> <operator pos:line="1269" pos:column="18">*<pos:position pos:line="1269" pos:column="19"/></operator><operator pos:line="1269" pos:column="19">*<pos:position pos:line="1269" pos:column="20"/></operator><operator pos:line="1269" pos:column="20">)<pos:position pos:line="1269" pos:column="21"/></operator><operator pos:line="1269" pos:column="21">(<pos:position pos:line="1269" pos:column="22"/></operator><operator pos:line="1269" pos:column="22">(<pos:position pos:line="1269" pos:column="23"/></operator><name pos:line="1269" pos:column="23">char<pos:position pos:line="1269" pos:column="27"/></name> <operator pos:line="1269" pos:column="28">*<pos:position pos:line="1269" pos:column="29"/></operator><operator pos:line="1269" pos:column="29">)<pos:position pos:line="1269" pos:column="30"/></operator><name pos:line="1269" pos:column="30">struct_ptr<pos:position pos:line="1269" pos:column="40"/></name> <operator pos:line="1269" pos:column="41">+<pos:position pos:line="1269" pos:column="42"/></operator> <name pos:line="1269" pos:column="43">offset<pos:position pos:line="1269" pos:column="49"/></name><operator pos:line="1269" pos:column="49">)<pos:position pos:line="1269" pos:column="50"/></operator> <operator pos:line="1269" pos:column="51">=<pos:position pos:line="1269" pos:column="52"/></operator> <name pos:line="1269" pos:column="53">arg<pos:position pos:line="1269" pos:column="56"/></name></expr>;<pos:position pos:line="1269" pos:column="57"/></expr_stmt>

    <return pos:line="1271" pos:column="5">return <expr><name pos:line="1271" pos:column="12">NULL<pos:position pos:line="1271" pos:column="16"/></name></expr>;<pos:position pos:line="1271" pos:column="17"/></return>
}<pos:position pos:line="1272" pos:column="2"/></block>

<macro><name pos:line="1274" pos:column="1">AP_DECLARE_NONSTD<pos:position pos:line="1274" pos:column="18"/></name><argument_list pos:line="1274" pos:column="18">(<argument pos:line="1274" pos:column="19">const char *<pos:position pos:line="1274" pos:column="31"/></argument>)<pos:position pos:line="1274" pos:column="32"/></argument_list></macro> <macro><name pos:line="1274" pos:column="33">ap_set_int_slot<pos:position pos:line="1274" pos:column="48"/></name><argument_list pos:line="1274" pos:column="48">(<argument pos:line="1274" pos:column="49">cmd_parms *cmd<pos:position pos:line="1274" pos:column="63"/></argument>,
                                                <argument pos:line="1275" pos:column="49">void *struct_ptr<pos:position pos:line="1275" pos:column="65"/></argument>,
                                                <argument pos:line="1276" pos:column="49">const char *arg<pos:position pos:line="1276" pos:column="64"/></argument>)<pos:position pos:line="1276" pos:column="65"/></argument_list></macro>
<block pos:line="1277" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1278" pos:column="5">char<pos:position pos:line="1278" pos:column="9"/></name> <modifier pos:line="1278" pos:column="10">*<pos:position pos:line="1278" pos:column="11"/></modifier></type><name pos:line="1278" pos:column="11">endptr<pos:position pos:line="1278" pos:column="17"/></name></decl>;<pos:position pos:line="1278" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1279" pos:column="5">char<pos:position pos:line="1279" pos:column="9"/></name> <modifier pos:line="1279" pos:column="10">*<pos:position pos:line="1279" pos:column="11"/></modifier></type><name pos:line="1279" pos:column="11">error_str<pos:position pos:line="1279" pos:column="20"/></name> <init pos:line="1279" pos:column="21">= <expr><name pos:line="1279" pos:column="23">NULL<pos:position pos:line="1279" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="1279" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1280" pos:column="5">int<pos:position pos:line="1280" pos:column="8"/></name></type> <name pos:line="1280" pos:column="9">offset<pos:position pos:line="1280" pos:column="15"/></name> <init pos:line="1280" pos:column="16">= <expr><operator pos:line="1280" pos:column="18">(<pos:position pos:line="1280" pos:column="19"/></operator><name pos:line="1280" pos:column="19">int<pos:position pos:line="1280" pos:column="22"/></name><operator pos:line="1280" pos:column="22">)<pos:position pos:line="1280" pos:column="23"/></operator><operator pos:line="1280" pos:column="23">(<pos:position pos:line="1280" pos:column="24"/></operator><name pos:line="1280" pos:column="24">long<pos:position pos:line="1280" pos:column="28"/></name><operator pos:line="1280" pos:column="28">)<pos:position pos:line="1280" pos:column="29"/></operator><name><name pos:line="1280" pos:column="29">cmd<pos:position pos:line="1280" pos:column="32"/></name><operator pos:line="1280" pos:column="32">-&gt;<pos:position pos:line="1280" pos:column="37"/></operator><name pos:line="1280" pos:column="34">info<pos:position pos:line="1280" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="1280" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="1282" pos:column="5">*<pos:position pos:line="1282" pos:column="6"/></operator><operator pos:line="1282" pos:column="6">(<pos:position pos:line="1282" pos:column="7"/></operator><name pos:line="1282" pos:column="7">int<pos:position pos:line="1282" pos:column="10"/></name> <operator pos:line="1282" pos:column="11">*<pos:position pos:line="1282" pos:column="12"/></operator><operator pos:line="1282" pos:column="12">)<pos:position pos:line="1282" pos:column="13"/></operator><operator pos:line="1282" pos:column="13">(<pos:position pos:line="1282" pos:column="14"/></operator><operator pos:line="1282" pos:column="14">(<pos:position pos:line="1282" pos:column="15"/></operator><name pos:line="1282" pos:column="15">char<pos:position pos:line="1282" pos:column="19"/></name><operator pos:line="1282" pos:column="19">*<pos:position pos:line="1282" pos:column="20"/></operator><operator pos:line="1282" pos:column="20">)<pos:position pos:line="1282" pos:column="21"/></operator><name pos:line="1282" pos:column="21">struct_ptr<pos:position pos:line="1282" pos:column="31"/></name> <operator pos:line="1282" pos:column="32">+<pos:position pos:line="1282" pos:column="33"/></operator> <name pos:line="1282" pos:column="34">offset<pos:position pos:line="1282" pos:column="40"/></name><operator pos:line="1282" pos:column="40">)<pos:position pos:line="1282" pos:column="41"/></operator> <operator pos:line="1282" pos:column="42">=<pos:position pos:line="1282" pos:column="43"/></operator> <call><name pos:line="1282" pos:column="44">strtol<pos:position pos:line="1282" pos:column="50"/></name><argument_list pos:line="1282" pos:column="50">(<argument><expr><name pos:line="1282" pos:column="51">arg<pos:position pos:line="1282" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="1282" pos:column="56">&amp;<pos:position pos:line="1282" pos:column="61"/></operator><name pos:line="1282" pos:column="57">endptr<pos:position pos:line="1282" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1282" pos:column="65">10<pos:position pos:line="1282" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1282" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1282" pos:column="69"/></expr_stmt>

    <if pos:line="1284" pos:column="5">if <condition pos:line="1284" pos:column="8">(<expr><operator pos:line="1284" pos:column="9">(<pos:position pos:line="1284" pos:column="10"/></operator><operator pos:line="1284" pos:column="10">*<pos:position pos:line="1284" pos:column="11"/></operator><name pos:line="1284" pos:column="11">arg<pos:position pos:line="1284" pos:column="14"/></name> <operator pos:line="1284" pos:column="15">==<pos:position pos:line="1284" pos:column="17"/></operator> <literal type="char" pos:line="1284" pos:column="18">'\0'<pos:position pos:line="1284" pos:column="22"/></literal><operator pos:line="1284" pos:column="22">)<pos:position pos:line="1284" pos:column="23"/></operator> <operator pos:line="1284" pos:column="24">||<pos:position pos:line="1284" pos:column="26"/></operator> <operator pos:line="1284" pos:column="27">(<pos:position pos:line="1284" pos:column="28"/></operator><operator pos:line="1284" pos:column="28">*<pos:position pos:line="1284" pos:column="29"/></operator><name pos:line="1284" pos:column="29">endptr<pos:position pos:line="1284" pos:column="35"/></name> <operator pos:line="1284" pos:column="36">!=<pos:position pos:line="1284" pos:column="38"/></operator> <literal type="char" pos:line="1284" pos:column="39">'\0'<pos:position pos:line="1284" pos:column="43"/></literal><operator pos:line="1284" pos:column="43">)<pos:position pos:line="1284" pos:column="44"/></operator></expr>)<pos:position pos:line="1284" pos:column="45"/></condition><then pos:line="1284" pos:column="45"> <block pos:line="1284" pos:column="46">{
        <expr_stmt><expr><name pos:line="1285" pos:column="9">error_str<pos:position pos:line="1285" pos:column="18"/></name> <operator pos:line="1285" pos:column="19">=<pos:position pos:line="1285" pos:column="20"/></operator> <call><name pos:line="1285" pos:column="21">apr_psprintf<pos:position pos:line="1285" pos:column="33"/></name><argument_list pos:line="1285" pos:column="33">(<argument><expr><name><name pos:line="1285" pos:column="34">cmd<pos:position pos:line="1285" pos:column="37"/></name><operator pos:line="1285" pos:column="37">-&gt;<pos:position pos:line="1285" pos:column="42"/></operator><name pos:line="1285" pos:column="39">pool<pos:position pos:line="1285" pos:column="43"/></name></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="1286" pos:column="22">"Invalid value for directive %s, expected integer"<pos:position pos:line="1286" pos:column="72"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="1287" pos:column="22">cmd<pos:position pos:line="1287" pos:column="25"/></name><operator pos:line="1287" pos:column="25">-&gt;<pos:position pos:line="1287" pos:column="30"/></operator><name pos:line="1287" pos:column="27">directive<pos:position pos:line="1287" pos:column="36"/></name><operator pos:line="1287" pos:column="36">-&gt;<pos:position pos:line="1287" pos:column="41"/></operator><name pos:line="1287" pos:column="38">directive<pos:position pos:line="1287" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="1287" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1287" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="1288" pos:column="6"/></block></then></if>

    <return pos:line="1290" pos:column="5">return <expr><name pos:line="1290" pos:column="12">error_str<pos:position pos:line="1290" pos:column="21"/></name></expr>;<pos:position pos:line="1290" pos:column="22"/></return>
}<pos:position pos:line="1291" pos:column="2"/></block>

<macro><name pos:line="1293" pos:column="1">AP_DECLARE_NONSTD<pos:position pos:line="1293" pos:column="18"/></name><argument_list pos:line="1293" pos:column="18">(<argument pos:line="1293" pos:column="19">const char *<pos:position pos:line="1293" pos:column="31"/></argument>)<pos:position pos:line="1293" pos:column="32"/></argument_list></macro> <macro><name pos:line="1293" pos:column="33">ap_set_string_slot_lower<pos:position pos:line="1293" pos:column="57"/></name><argument_list pos:line="1293" pos:column="57">(<argument pos:line="1293" pos:column="58">cmd_parms *cmd<pos:position pos:line="1293" pos:column="72"/></argument>,
                                                         <argument pos:line="1294" pos:column="58">void *struct_ptr<pos:position pos:line="1294" pos:column="74"/></argument>,
                                                         <argument pos:line="1295" pos:column="58">const char *arg_<pos:position pos:line="1295" pos:column="74"/></argument>)<pos:position pos:line="1295" pos:column="75"/></argument_list></macro>
<block pos:line="1296" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1297" pos:column="5">char<pos:position pos:line="1297" pos:column="9"/></name> <modifier pos:line="1297" pos:column="10">*<pos:position pos:line="1297" pos:column="11"/></modifier></type><name pos:line="1297" pos:column="11">arg<pos:position pos:line="1297" pos:column="14"/></name> <init pos:line="1297" pos:column="15">= <expr><call><name pos:line="1297" pos:column="17">apr_pstrdup<pos:position pos:line="1297" pos:column="28"/></name><argument_list pos:line="1297" pos:column="28">(<argument><expr><name><name pos:line="1297" pos:column="29">cmd<pos:position pos:line="1297" pos:column="32"/></name><operator pos:line="1297" pos:column="32">-&gt;<pos:position pos:line="1297" pos:column="37"/></operator><name pos:line="1297" pos:column="34">pool<pos:position pos:line="1297" pos:column="38"/></name></name></expr></argument>,<argument><expr><name pos:line="1297" pos:column="39">arg_<pos:position pos:line="1297" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1297" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1297" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1298" pos:column="5">int<pos:position pos:line="1298" pos:column="8"/></name></type> <name pos:line="1298" pos:column="9">offset<pos:position pos:line="1298" pos:column="15"/></name> <init pos:line="1298" pos:column="16">= <expr><operator pos:line="1298" pos:column="18">(<pos:position pos:line="1298" pos:column="19"/></operator><name pos:line="1298" pos:column="19">int<pos:position pos:line="1298" pos:column="22"/></name><operator pos:line="1298" pos:column="22">)<pos:position pos:line="1298" pos:column="23"/></operator><operator pos:line="1298" pos:column="23">(<pos:position pos:line="1298" pos:column="24"/></operator><name pos:line="1298" pos:column="24">long<pos:position pos:line="1298" pos:column="28"/></name><operator pos:line="1298" pos:column="28">)<pos:position pos:line="1298" pos:column="29"/></operator><name><name pos:line="1298" pos:column="29">cmd<pos:position pos:line="1298" pos:column="32"/></name><operator pos:line="1298" pos:column="32">-&gt;<pos:position pos:line="1298" pos:column="37"/></operator><name pos:line="1298" pos:column="34">info<pos:position pos:line="1298" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="1298" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="1300" pos:column="5">ap_str_tolower<pos:position pos:line="1300" pos:column="19"/></name><argument_list pos:line="1300" pos:column="19">(<argument><expr><name pos:line="1300" pos:column="20">arg<pos:position pos:line="1300" pos:column="23"/></name></expr></argument>)<pos:position pos:line="1300" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="1300" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="1301" pos:column="5">*<pos:position pos:line="1301" pos:column="6"/></operator><operator pos:line="1301" pos:column="6">(<pos:position pos:line="1301" pos:column="7"/></operator><name pos:line="1301" pos:column="7">char<pos:position pos:line="1301" pos:column="11"/></name> <operator pos:line="1301" pos:column="12">*<pos:position pos:line="1301" pos:column="13"/></operator><operator pos:line="1301" pos:column="13">*<pos:position pos:line="1301" pos:column="14"/></operator><operator pos:line="1301" pos:column="14">)<pos:position pos:line="1301" pos:column="15"/></operator><operator pos:line="1301" pos:column="15">(<pos:position pos:line="1301" pos:column="16"/></operator><operator pos:line="1301" pos:column="16">(<pos:position pos:line="1301" pos:column="17"/></operator><name pos:line="1301" pos:column="17">char<pos:position pos:line="1301" pos:column="21"/></name> <operator pos:line="1301" pos:column="22">*<pos:position pos:line="1301" pos:column="23"/></operator><operator pos:line="1301" pos:column="23">)<pos:position pos:line="1301" pos:column="24"/></operator><name pos:line="1301" pos:column="24">struct_ptr<pos:position pos:line="1301" pos:column="34"/></name> <operator pos:line="1301" pos:column="35">+<pos:position pos:line="1301" pos:column="36"/></operator> <name pos:line="1301" pos:column="37">offset<pos:position pos:line="1301" pos:column="43"/></name><operator pos:line="1301" pos:column="43">)<pos:position pos:line="1301" pos:column="44"/></operator> <operator pos:line="1301" pos:column="45">=<pos:position pos:line="1301" pos:column="46"/></operator> <name pos:line="1301" pos:column="47">arg<pos:position pos:line="1301" pos:column="50"/></name></expr>;<pos:position pos:line="1301" pos:column="51"/></expr_stmt>

    <return pos:line="1303" pos:column="5">return <expr><name pos:line="1303" pos:column="12">NULL<pos:position pos:line="1303" pos:column="16"/></name></expr>;<pos:position pos:line="1303" pos:column="17"/></return>
}<pos:position pos:line="1304" pos:column="2"/></block>

<macro><name pos:line="1306" pos:column="1">AP_DECLARE_NONSTD<pos:position pos:line="1306" pos:column="18"/></name><argument_list pos:line="1306" pos:column="18">(<argument pos:line="1306" pos:column="19">const char *<pos:position pos:line="1306" pos:column="31"/></argument>)<pos:position pos:line="1306" pos:column="32"/></argument_list></macro> <macro><name pos:line="1306" pos:column="33">ap_set_flag_slot<pos:position pos:line="1306" pos:column="49"/></name><argument_list pos:line="1306" pos:column="49">(<argument pos:line="1306" pos:column="50">cmd_parms *cmd<pos:position pos:line="1306" pos:column="64"/></argument>,
                                                 <argument pos:line="1307" pos:column="50">void *struct_ptr_v<pos:position pos:line="1307" pos:column="68"/></argument>, <argument pos:line="1307" pos:column="70">int arg<pos:position pos:line="1307" pos:column="77"/></argument>)<pos:position pos:line="1307" pos:column="78"/></argument_list></macro>
<block pos:line="1308" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1309" pos:column="5">int<pos:position pos:line="1309" pos:column="8"/></name></type> <name pos:line="1309" pos:column="9">offset<pos:position pos:line="1309" pos:column="15"/></name> <init pos:line="1309" pos:column="16">= <expr><operator pos:line="1309" pos:column="18">(<pos:position pos:line="1309" pos:column="19"/></operator><name pos:line="1309" pos:column="19">int<pos:position pos:line="1309" pos:column="22"/></name><operator pos:line="1309" pos:column="22">)<pos:position pos:line="1309" pos:column="23"/></operator><operator pos:line="1309" pos:column="23">(<pos:position pos:line="1309" pos:column="24"/></operator><name pos:line="1309" pos:column="24">long<pos:position pos:line="1309" pos:column="28"/></name><operator pos:line="1309" pos:column="28">)<pos:position pos:line="1309" pos:column="29"/></operator><name><name pos:line="1309" pos:column="29">cmd<pos:position pos:line="1309" pos:column="32"/></name><operator pos:line="1309" pos:column="32">-&gt;<pos:position pos:line="1309" pos:column="37"/></operator><name pos:line="1309" pos:column="34">info<pos:position pos:line="1309" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="1309" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1310" pos:column="5">char<pos:position pos:line="1310" pos:column="9"/></name> <modifier pos:line="1310" pos:column="10">*<pos:position pos:line="1310" pos:column="11"/></modifier></type><name pos:line="1310" pos:column="11">struct_ptr<pos:position pos:line="1310" pos:column="21"/></name> <init pos:line="1310" pos:column="22">= <expr><operator pos:line="1310" pos:column="24">(<pos:position pos:line="1310" pos:column="25"/></operator><name pos:line="1310" pos:column="25">char<pos:position pos:line="1310" pos:column="29"/></name> <operator pos:line="1310" pos:column="30">*<pos:position pos:line="1310" pos:column="31"/></operator><operator pos:line="1310" pos:column="31">)<pos:position pos:line="1310" pos:column="32"/></operator><name pos:line="1310" pos:column="32">struct_ptr_v<pos:position pos:line="1310" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="1310" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="1312" pos:column="5">*<pos:position pos:line="1312" pos:column="6"/></operator><operator pos:line="1312" pos:column="6">(<pos:position pos:line="1312" pos:column="7"/></operator><name pos:line="1312" pos:column="7">int<pos:position pos:line="1312" pos:column="10"/></name> <operator pos:line="1312" pos:column="11">*<pos:position pos:line="1312" pos:column="12"/></operator><operator pos:line="1312" pos:column="12">)<pos:position pos:line="1312" pos:column="13"/></operator><operator pos:line="1312" pos:column="13">(<pos:position pos:line="1312" pos:column="14"/></operator><name pos:line="1312" pos:column="14">struct_ptr<pos:position pos:line="1312" pos:column="24"/></name> <operator pos:line="1312" pos:column="25">+<pos:position pos:line="1312" pos:column="26"/></operator> <name pos:line="1312" pos:column="27">offset<pos:position pos:line="1312" pos:column="33"/></name><operator pos:line="1312" pos:column="33">)<pos:position pos:line="1312" pos:column="34"/></operator> <operator pos:line="1312" pos:column="35">=<pos:position pos:line="1312" pos:column="36"/></operator> <ternary><condition><expr><name pos:line="1312" pos:column="37">arg<pos:position pos:line="1312" pos:column="40"/></name></expr> ?<pos:position pos:line="1312" pos:column="42"/></condition><then pos:line="1312" pos:column="42"> <expr><literal type="number" pos:line="1312" pos:column="43">1<pos:position pos:line="1312" pos:column="44"/></literal></expr> <pos:position pos:line="1312" pos:column="45"/></then><else pos:line="1312" pos:column="45">: <expr><literal type="number" pos:line="1312" pos:column="47">0<pos:position pos:line="1312" pos:column="48"/></literal></expr></else></ternary></expr>;<pos:position pos:line="1312" pos:column="49"/></expr_stmt>

    <return pos:line="1314" pos:column="5">return <expr><name pos:line="1314" pos:column="12">NULL<pos:position pos:line="1314" pos:column="16"/></name></expr>;<pos:position pos:line="1314" pos:column="17"/></return>
}<pos:position pos:line="1315" pos:column="2"/></block>

<macro><name pos:line="1317" pos:column="1">AP_DECLARE_NONSTD<pos:position pos:line="1317" pos:column="18"/></name><argument_list pos:line="1317" pos:column="18">(<argument pos:line="1317" pos:column="19">const char *<pos:position pos:line="1317" pos:column="31"/></argument>)<pos:position pos:line="1317" pos:column="32"/></argument_list></macro> <macro><name pos:line="1317" pos:column="33">ap_set_file_slot<pos:position pos:line="1317" pos:column="49"/></name><argument_list pos:line="1317" pos:column="49">(<argument pos:line="1317" pos:column="50">cmd_parms *cmd<pos:position pos:line="1317" pos:column="64"/></argument>, <argument pos:line="1317" pos:column="66">void *struct_ptr<pos:position pos:line="1317" pos:column="82"/></argument>,
                                                 <argument pos:line="1318" pos:column="50">const char *arg<pos:position pos:line="1318" pos:column="65"/></argument>)<pos:position pos:line="1318" pos:column="66"/></argument_list></macro>
<block pos:line="1319" pos:column="1">{
    <comment type="block" pos:line="1320" pos:column="5">/* Prepend server_root to relative arg.
     * This allows most args to be independent of server_root,
     * so the server can be moved or mirrored with less pain.
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="1324" pos:column="5">const<pos:position pos:line="1324" pos:column="10"/></specifier> <name pos:line="1324" pos:column="11">char<pos:position pos:line="1324" pos:column="15"/></name> <modifier pos:line="1324" pos:column="16">*<pos:position pos:line="1324" pos:column="17"/></modifier></type><name pos:line="1324" pos:column="17">path<pos:position pos:line="1324" pos:column="21"/></name></decl>;<pos:position pos:line="1324" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1325" pos:column="5">int<pos:position pos:line="1325" pos:column="8"/></name></type> <name pos:line="1325" pos:column="9">offset<pos:position pos:line="1325" pos:column="15"/></name> <init pos:line="1325" pos:column="16">= <expr><operator pos:line="1325" pos:column="18">(<pos:position pos:line="1325" pos:column="19"/></operator><name pos:line="1325" pos:column="19">int<pos:position pos:line="1325" pos:column="22"/></name><operator pos:line="1325" pos:column="22">)<pos:position pos:line="1325" pos:column="23"/></operator><operator pos:line="1325" pos:column="23">(<pos:position pos:line="1325" pos:column="24"/></operator><name pos:line="1325" pos:column="24">long<pos:position pos:line="1325" pos:column="28"/></name><operator pos:line="1325" pos:column="28">)<pos:position pos:line="1325" pos:column="29"/></operator><name><name pos:line="1325" pos:column="29">cmd<pos:position pos:line="1325" pos:column="32"/></name><operator pos:line="1325" pos:column="32">-&gt;<pos:position pos:line="1325" pos:column="37"/></operator><name pos:line="1325" pos:column="34">info<pos:position pos:line="1325" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="1325" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><name pos:line="1327" pos:column="5">path<pos:position pos:line="1327" pos:column="9"/></name> <operator pos:line="1327" pos:column="10">=<pos:position pos:line="1327" pos:column="11"/></operator> <call><name pos:line="1327" pos:column="12">ap_server_root_relative<pos:position pos:line="1327" pos:column="35"/></name><argument_list pos:line="1327" pos:column="35">(<argument><expr><name><name pos:line="1327" pos:column="36">cmd<pos:position pos:line="1327" pos:column="39"/></name><operator pos:line="1327" pos:column="39">-&gt;<pos:position pos:line="1327" pos:column="44"/></operator><name pos:line="1327" pos:column="41">pool<pos:position pos:line="1327" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="1327" pos:column="47">arg<pos:position pos:line="1327" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1327" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1327" pos:column="52"/></expr_stmt>

    <if pos:line="1329" pos:column="5">if <condition pos:line="1329" pos:column="8">(<expr><operator pos:line="1329" pos:column="9">!<pos:position pos:line="1329" pos:column="10"/></operator><name pos:line="1329" pos:column="10">path<pos:position pos:line="1329" pos:column="14"/></name></expr>)<pos:position pos:line="1329" pos:column="15"/></condition><then pos:line="1329" pos:column="15"> <block pos:line="1329" pos:column="16">{
        <return pos:line="1330" pos:column="9">return <expr><call><name pos:line="1330" pos:column="16">apr_pstrcat<pos:position pos:line="1330" pos:column="27"/></name><argument_list pos:line="1330" pos:column="27">(<argument><expr><name><name pos:line="1330" pos:column="28">cmd<pos:position pos:line="1330" pos:column="31"/></name><operator pos:line="1330" pos:column="31">-&gt;<pos:position pos:line="1330" pos:column="36"/></operator><name pos:line="1330" pos:column="33">pool<pos:position pos:line="1330" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1330" pos:column="39">"Invalid file path "<pos:position pos:line="1330" pos:column="59"/></literal></expr></argument>,
                           <argument><expr><name pos:line="1331" pos:column="28">arg<pos:position pos:line="1331" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1331" pos:column="33">NULL<pos:position pos:line="1331" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1331" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="1331" pos:column="39"/></return>
    }<pos:position pos:line="1332" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="1334" pos:column="5">*<pos:position pos:line="1334" pos:column="6"/></operator><operator pos:line="1334" pos:column="6">(<pos:position pos:line="1334" pos:column="7"/></operator><specifier pos:line="1334" pos:column="7">const<pos:position pos:line="1334" pos:column="12"/></specifier> <name pos:line="1334" pos:column="13">char<pos:position pos:line="1334" pos:column="17"/></name> <operator pos:line="1334" pos:column="18">*<pos:position pos:line="1334" pos:column="19"/></operator><operator pos:line="1334" pos:column="19">*<pos:position pos:line="1334" pos:column="20"/></operator><operator pos:line="1334" pos:column="20">)<pos:position pos:line="1334" pos:column="21"/></operator> <operator pos:line="1334" pos:column="22">(<pos:position pos:line="1334" pos:column="23"/></operator><operator pos:line="1334" pos:column="23">(<pos:position pos:line="1334" pos:column="24"/></operator><name pos:line="1334" pos:column="24">char<pos:position pos:line="1334" pos:column="28"/></name><operator pos:line="1334" pos:column="28">*<pos:position pos:line="1334" pos:column="29"/></operator><operator pos:line="1334" pos:column="29">)<pos:position pos:line="1334" pos:column="30"/></operator><name pos:line="1334" pos:column="30">struct_ptr<pos:position pos:line="1334" pos:column="40"/></name> <operator pos:line="1334" pos:column="41">+<pos:position pos:line="1334" pos:column="42"/></operator> <name pos:line="1334" pos:column="43">offset<pos:position pos:line="1334" pos:column="49"/></name><operator pos:line="1334" pos:column="49">)<pos:position pos:line="1334" pos:column="50"/></operator> <operator pos:line="1334" pos:column="51">=<pos:position pos:line="1334" pos:column="52"/></operator> <name pos:line="1334" pos:column="53">path<pos:position pos:line="1334" pos:column="57"/></name></expr>;<pos:position pos:line="1334" pos:column="58"/></expr_stmt>

    <return pos:line="1336" pos:column="5">return <expr><name pos:line="1336" pos:column="12">NULL<pos:position pos:line="1336" pos:column="16"/></name></expr>;<pos:position pos:line="1336" pos:column="17"/></return>
}<pos:position pos:line="1337" pos:column="2"/></block>

<macro><name pos:line="1339" pos:column="1">AP_DECLARE_NONSTD<pos:position pos:line="1339" pos:column="18"/></name><argument_list pos:line="1339" pos:column="18">(<argument pos:line="1339" pos:column="19">const char *<pos:position pos:line="1339" pos:column="31"/></argument>)<pos:position pos:line="1339" pos:column="32"/></argument_list></macro> <macro><name pos:line="1339" pos:column="33">ap_set_deprecated<pos:position pos:line="1339" pos:column="50"/></name><argument_list pos:line="1339" pos:column="50">(<argument pos:line="1339" pos:column="51">cmd_parms *cmd<pos:position pos:line="1339" pos:column="65"/></argument>,
                                                  <argument pos:line="1340" pos:column="51">void *struct_ptr<pos:position pos:line="1340" pos:column="67"/></argument>,
                                                  <argument pos:line="1341" pos:column="51">const char *arg<pos:position pos:line="1341" pos:column="66"/></argument>)<pos:position pos:line="1341" pos:column="67"/></argument_list></macro>
<block pos:line="1342" pos:column="1">{
    <return pos:line="1343" pos:column="5">return <expr><name><name pos:line="1343" pos:column="12">cmd<pos:position pos:line="1343" pos:column="15"/></name><operator pos:line="1343" pos:column="15">-&gt;<pos:position pos:line="1343" pos:column="20"/></operator><name pos:line="1343" pos:column="17">cmd<pos:position pos:line="1343" pos:column="20"/></name><operator pos:line="1343" pos:column="20">-&gt;<pos:position pos:line="1343" pos:column="25"/></operator><name pos:line="1343" pos:column="22">errmsg<pos:position pos:line="1343" pos:column="28"/></name></name></expr>;<pos:position pos:line="1343" pos:column="29"/></return>
}<pos:position pos:line="1344" pos:column="2"/></block>

<comment type="block" pos:line="1346" pos:column="1">/*****************************************************************
 *
 * Reading whole config files...
 */</comment>

<decl_stmt><decl><specifier pos:line="1351" pos:column="1">static<pos:position pos:line="1351" pos:column="7"/></specifier> <type><name pos:line="1351" pos:column="8">cmd_parms<pos:position pos:line="1351" pos:column="17"/></name></type> <name pos:line="1351" pos:column="18">default_parms<pos:position pos:line="1351" pos:column="31"/></name> <init pos:line="1351" pos:column="32">=
<expr><block pos:line="1352" pos:column="1">{<expr><name pos:line="1352" pos:column="2">NULL<pos:position pos:line="1352" pos:column="6"/></name></expr>, <expr><literal type="number" pos:line="1352" pos:column="8">0<pos:position pos:line="1352" pos:column="9"/></literal></expr>, <expr><operator pos:line="1352" pos:column="11">-<pos:position pos:line="1352" pos:column="12"/></operator><literal type="number" pos:line="1352" pos:column="12">1<pos:position pos:line="1352" pos:column="13"/></literal></expr>, <expr><name pos:line="1352" pos:column="15">NULL<pos:position pos:line="1352" pos:column="19"/></name></expr>, <expr><name pos:line="1352" pos:column="21">NULL<pos:position pos:line="1352" pos:column="25"/></name></expr>, <expr><name pos:line="1352" pos:column="27">NULL<pos:position pos:line="1352" pos:column="31"/></name></expr>, <expr><name pos:line="1352" pos:column="33">NULL<pos:position pos:line="1352" pos:column="37"/></name></expr>, <expr><name pos:line="1352" pos:column="39">NULL<pos:position pos:line="1352" pos:column="43"/></name></expr>, <expr><name pos:line="1352" pos:column="45">NULL<pos:position pos:line="1352" pos:column="49"/></name></expr>, <expr><name pos:line="1352" pos:column="51">NULL<pos:position pos:line="1352" pos:column="55"/></name></expr>, <expr><name pos:line="1352" pos:column="57">NULL<pos:position pos:line="1352" pos:column="61"/></name></expr>, <expr><name pos:line="1352" pos:column="63">NULL<pos:position pos:line="1352" pos:column="67"/></name></expr>}<pos:position pos:line="1352" pos:column="68"/></block></expr></init></decl>;<pos:position pos:line="1352" pos:column="69"/></decl_stmt>

<macro><name pos:line="1354" pos:column="1">AP_DECLARE<pos:position pos:line="1354" pos:column="11"/></name><argument_list pos:line="1354" pos:column="11">(<argument pos:line="1354" pos:column="12">char *<pos:position pos:line="1354" pos:column="18"/></argument>)<pos:position pos:line="1354" pos:column="19"/></argument_list></macro> <macro><name pos:line="1354" pos:column="20">ap_server_root_relative<pos:position pos:line="1354" pos:column="43"/></name><argument_list pos:line="1354" pos:column="43">(<argument pos:line="1354" pos:column="44">apr_pool_t *p<pos:position pos:line="1354" pos:column="57"/></argument>, <argument pos:line="1354" pos:column="59">const char *file<pos:position pos:line="1354" pos:column="75"/></argument>)<pos:position pos:line="1354" pos:column="76"/></argument_list></macro>
<block pos:line="1355" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1356" pos:column="5">char<pos:position pos:line="1356" pos:column="9"/></name> <modifier pos:line="1356" pos:column="10">*<pos:position pos:line="1356" pos:column="11"/></modifier></type><name pos:line="1356" pos:column="11">newpath<pos:position pos:line="1356" pos:column="18"/></name> <init pos:line="1356" pos:column="19">= <expr><name pos:line="1356" pos:column="21">NULL<pos:position pos:line="1356" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="1356" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1357" pos:column="5">apr_status_t<pos:position pos:line="1357" pos:column="17"/></name></type> <name pos:line="1357" pos:column="18">rv<pos:position pos:line="1357" pos:column="20"/></name></decl>;<pos:position pos:line="1357" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><name pos:line="1358" pos:column="5">rv<pos:position pos:line="1358" pos:column="7"/></name> <operator pos:line="1358" pos:column="8">=<pos:position pos:line="1358" pos:column="9"/></operator> <call><name pos:line="1358" pos:column="10">apr_filepath_merge<pos:position pos:line="1358" pos:column="28"/></name><argument_list pos:line="1358" pos:column="28">(<argument><expr><operator pos:line="1358" pos:column="29">&amp;<pos:position pos:line="1358" pos:column="34"/></operator><name pos:line="1358" pos:column="30">newpath<pos:position pos:line="1358" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1358" pos:column="39">ap_server_root<pos:position pos:line="1358" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1358" pos:column="55">file<pos:position pos:line="1358" pos:column="59"/></name></expr></argument>,
                            <argument><expr><name pos:line="1359" pos:column="29">APR_FILEPATH_TRUENAME<pos:position pos:line="1359" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1359" pos:column="52">p<pos:position pos:line="1359" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1359" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="1359" pos:column="55"/></expr_stmt>
    <if pos:line="1360" pos:column="5">if <condition pos:line="1360" pos:column="8">(<expr><name pos:line="1360" pos:column="9">newpath<pos:position pos:line="1360" pos:column="16"/></name> <operator pos:line="1360" pos:column="17">&amp;&amp;<pos:position pos:line="1360" pos:column="27"/></operator> <operator pos:line="1360" pos:column="20">(<pos:position pos:line="1360" pos:column="21"/></operator><name pos:line="1360" pos:column="21">rv<pos:position pos:line="1360" pos:column="23"/></name> <operator pos:line="1360" pos:column="24">==<pos:position pos:line="1360" pos:column="26"/></operator> <name pos:line="1360" pos:column="27">APR_SUCCESS<pos:position pos:line="1360" pos:column="38"/></name> <operator pos:line="1360" pos:column="39">||<pos:position pos:line="1360" pos:column="41"/></operator> <call><name pos:line="1360" pos:column="42">APR_STATUS_IS_EPATHWILD<pos:position pos:line="1360" pos:column="65"/></name><argument_list pos:line="1360" pos:column="65">(<argument><expr><name pos:line="1360" pos:column="66">rv<pos:position pos:line="1360" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1360" pos:column="69"/></argument_list></call>
                                      <operator pos:line="1361" pos:column="39">||<pos:position pos:line="1361" pos:column="41"/></operator> <call><name pos:line="1361" pos:column="42">APR_STATUS_IS_ENOENT<pos:position pos:line="1361" pos:column="62"/></name><argument_list pos:line="1361" pos:column="62">(<argument><expr><name pos:line="1361" pos:column="63">rv<pos:position pos:line="1361" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1361" pos:column="66"/></argument_list></call>
                                      <operator pos:line="1362" pos:column="39">||<pos:position pos:line="1362" pos:column="41"/></operator> <call><name pos:line="1362" pos:column="42">APR_STATUS_IS_ENOTDIR<pos:position pos:line="1362" pos:column="63"/></name><argument_list pos:line="1362" pos:column="63">(<argument><expr><name pos:line="1362" pos:column="64">rv<pos:position pos:line="1362" pos:column="66"/></name></expr></argument>)<pos:position pos:line="1362" pos:column="67"/></argument_list></call><operator pos:line="1362" pos:column="67">)<pos:position pos:line="1362" pos:column="68"/></operator></expr>)<pos:position pos:line="1362" pos:column="69"/></condition><then pos:line="1362" pos:column="69"> <block pos:line="1362" pos:column="70">{
        <return pos:line="1363" pos:column="9">return <expr><name pos:line="1363" pos:column="16">newpath<pos:position pos:line="1363" pos:column="23"/></name></expr>;<pos:position pos:line="1363" pos:column="24"/></return>
    }<pos:position pos:line="1364" pos:column="6"/></block></then>
    <else pos:line="1365" pos:column="5">else <block pos:line="1365" pos:column="10">{
        <return pos:line="1366" pos:column="9">return <expr><name pos:line="1366" pos:column="16">NULL<pos:position pos:line="1366" pos:column="20"/></name></expr>;<pos:position pos:line="1366" pos:column="21"/></return>
    }<pos:position pos:line="1367" pos:column="6"/></block></else></if>
}<pos:position pos:line="1368" pos:column="2"/></block>

<macro><name pos:line="1370" pos:column="1">AP_DECLARE<pos:position pos:line="1370" pos:column="11"/></name><argument_list pos:line="1370" pos:column="11">(<argument pos:line="1370" pos:column="12">const char *<pos:position pos:line="1370" pos:column="24"/></argument>)<pos:position pos:line="1370" pos:column="25"/></argument_list></macro> <macro><name pos:line="1370" pos:column="26">ap_soak_end_container<pos:position pos:line="1370" pos:column="47"/></name><argument_list pos:line="1370" pos:column="47">(<argument pos:line="1370" pos:column="48">cmd_parms *cmd<pos:position pos:line="1370" pos:column="62"/></argument>, <argument pos:line="1370" pos:column="64">char *directive<pos:position pos:line="1370" pos:column="79"/></argument>)<pos:position pos:line="1370" pos:column="80"/></argument_list></macro>
<block pos:line="1371" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1372" pos:column="5">char<pos:position pos:line="1372" pos:column="9"/></name></type> <name><name pos:line="1372" pos:column="10">l<pos:position pos:line="1372" pos:column="11"/></name><index pos:line="1372" pos:column="11">[<expr><name pos:line="1372" pos:column="12">MAX_STRING_LEN<pos:position pos:line="1372" pos:column="26"/></name></expr>]<pos:position pos:line="1372" pos:column="27"/></index></name></decl>;<pos:position pos:line="1372" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1373" pos:column="5">const<pos:position pos:line="1373" pos:column="10"/></specifier> <name pos:line="1373" pos:column="11">char<pos:position pos:line="1373" pos:column="15"/></name> <modifier pos:line="1373" pos:column="16">*<pos:position pos:line="1373" pos:column="17"/></modifier></type><name pos:line="1373" pos:column="17">args<pos:position pos:line="1373" pos:column="21"/></name></decl>;<pos:position pos:line="1373" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1374" pos:column="5">char<pos:position pos:line="1374" pos:column="9"/></name> <modifier pos:line="1374" pos:column="10">*<pos:position pos:line="1374" pos:column="11"/></modifier></type><name pos:line="1374" pos:column="11">cmd_name<pos:position pos:line="1374" pos:column="19"/></name></decl>;<pos:position pos:line="1374" pos:column="20"/></decl_stmt>

    <while pos:line="1376" pos:column="5">while<condition pos:line="1376" pos:column="10">(<expr><operator pos:line="1376" pos:column="11">!<pos:position pos:line="1376" pos:column="12"/></operator><operator pos:line="1376" pos:column="12">(<pos:position pos:line="1376" pos:column="13"/></operator><call><name pos:line="1376" pos:column="13">ap_cfg_getline<pos:position pos:line="1376" pos:column="27"/></name><argument_list pos:line="1376" pos:column="27">(<argument><expr><name pos:line="1376" pos:column="28">l<pos:position pos:line="1376" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1376" pos:column="31">MAX_STRING_LEN<pos:position pos:line="1376" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="1376" pos:column="47">cmd<pos:position pos:line="1376" pos:column="50"/></name><operator pos:line="1376" pos:column="50">-&gt;<pos:position pos:line="1376" pos:column="55"/></operator><name pos:line="1376" pos:column="52">config_file<pos:position pos:line="1376" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="1376" pos:column="64"/></argument_list></call><operator pos:line="1376" pos:column="64">)<pos:position pos:line="1376" pos:column="65"/></operator></expr>)<pos:position pos:line="1376" pos:column="66"/></condition> <block pos:line="1376" pos:column="67">{
<cpp:if pos:line="1377" pos:column="1">#<cpp:directive pos:line="1377" pos:column="2">if<pos:position pos:line="1377" pos:column="4"/></cpp:directive> <expr><name pos:line="1377" pos:column="5">RESOLVE_ENV_PER_TOKEN<pos:position pos:line="1377" pos:column="26"/></name></expr></cpp:if>
        <expr_stmt><expr><name pos:line="1378" pos:column="9">args<pos:position pos:line="1378" pos:column="13"/></name> <operator pos:line="1378" pos:column="14">=<pos:position pos:line="1378" pos:column="15"/></operator> <name pos:line="1378" pos:column="16">l<pos:position pos:line="1378" pos:column="17"/></name></expr>;<pos:position pos:line="1378" pos:column="18"/></expr_stmt>
<cpp:else pos:line="1379" pos:column="1">#<cpp:directive pos:line="1379" pos:column="2">else<pos:position pos:line="1379" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="1380" pos:column="9">args<pos:position pos:line="1380" pos:column="13"/></name> <operator pos:line="1380" pos:column="14">=<pos:position pos:line="1380" pos:column="15"/></operator> <call><name pos:line="1380" pos:column="16">ap_resolve_env<pos:position pos:line="1380" pos:column="30"/></name><argument_list pos:line="1380" pos:column="30">(<argument><expr><name><name pos:line="1380" pos:column="31">cmd<pos:position pos:line="1380" pos:column="34"/></name><operator pos:line="1380" pos:column="34">-&gt;<pos:position pos:line="1380" pos:column="39"/></operator><name pos:line="1380" pos:column="36">temp_pool<pos:position pos:line="1380" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="1380" pos:column="47">l<pos:position pos:line="1380" pos:column="48"/></name></expr></argument>)<pos:position pos:line="1380" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="1380" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="1381" pos:column="1">#<cpp:directive pos:line="1381" pos:column="2">endif<pos:position pos:line="1381" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="1383" pos:column="9">cmd_name<pos:position pos:line="1383" pos:column="17"/></name> <operator pos:line="1383" pos:column="18">=<pos:position pos:line="1383" pos:column="19"/></operator> <call><name pos:line="1383" pos:column="20">ap_getword_conf<pos:position pos:line="1383" pos:column="35"/></name><argument_list pos:line="1383" pos:column="35">(<argument><expr><name><name pos:line="1383" pos:column="36">cmd<pos:position pos:line="1383" pos:column="39"/></name><operator pos:line="1383" pos:column="39">-&gt;<pos:position pos:line="1383" pos:column="44"/></operator><name pos:line="1383" pos:column="41">pool<pos:position pos:line="1383" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="1383" pos:column="47">&amp;<pos:position pos:line="1383" pos:column="52"/></operator><name pos:line="1383" pos:column="48">args<pos:position pos:line="1383" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1383" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1383" pos:column="54"/></expr_stmt>
        <if pos:line="1384" pos:column="9">if <condition pos:line="1384" pos:column="12">(<expr><name><name pos:line="1384" pos:column="13">cmd_name<pos:position pos:line="1384" pos:column="21"/></name><index pos:line="1384" pos:column="21">[<expr><literal type="number" pos:line="1384" pos:column="22">0<pos:position pos:line="1384" pos:column="23"/></literal></expr>]<pos:position pos:line="1384" pos:column="24"/></index></name> <operator pos:line="1384" pos:column="25">==<pos:position pos:line="1384" pos:column="27"/></operator> <literal type="char" pos:line="1384" pos:column="28">'&lt;'<pos:position pos:line="1384" pos:column="34"/></literal></expr>)<pos:position pos:line="1384" pos:column="32"/></condition><then pos:line="1384" pos:column="32"> <block pos:line="1384" pos:column="33">{
            <if pos:line="1385" pos:column="13">if <condition pos:line="1385" pos:column="16">(<expr><name><name pos:line="1385" pos:column="17">cmd_name<pos:position pos:line="1385" pos:column="25"/></name><index pos:line="1385" pos:column="25">[<expr><literal type="number" pos:line="1385" pos:column="26">1<pos:position pos:line="1385" pos:column="27"/></literal></expr>]<pos:position pos:line="1385" pos:column="28"/></index></name> <operator pos:line="1385" pos:column="29">==<pos:position pos:line="1385" pos:column="31"/></operator> <literal type="char" pos:line="1385" pos:column="32">'/'<pos:position pos:line="1385" pos:column="35"/></literal></expr>)<pos:position pos:line="1385" pos:column="36"/></condition><then pos:line="1385" pos:column="36"> <block pos:line="1385" pos:column="37">{
                <expr_stmt><expr><name><name pos:line="1386" pos:column="17">cmd_name<pos:position pos:line="1386" pos:column="25"/></name><index pos:line="1386" pos:column="25">[<expr><call><name pos:line="1386" pos:column="26">strlen<pos:position pos:line="1386" pos:column="32"/></name><argument_list pos:line="1386" pos:column="32">(<argument><expr><name pos:line="1386" pos:column="33">cmd_name<pos:position pos:line="1386" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1386" pos:column="42"/></argument_list></call> <operator pos:line="1386" pos:column="43">-<pos:position pos:line="1386" pos:column="44"/></operator> <literal type="number" pos:line="1386" pos:column="45">1<pos:position pos:line="1386" pos:column="46"/></literal></expr>]<pos:position pos:line="1386" pos:column="47"/></index></name> <operator pos:line="1386" pos:column="48">=<pos:position pos:line="1386" pos:column="49"/></operator> <literal type="char" pos:line="1386" pos:column="50">'\0'<pos:position pos:line="1386" pos:column="54"/></literal></expr>;<pos:position pos:line="1386" pos:column="55"/></expr_stmt>

                <if pos:line="1388" pos:column="17">if <condition pos:line="1388" pos:column="20">(<expr><call><name pos:line="1388" pos:column="21">strcasecmp<pos:position pos:line="1388" pos:column="31"/></name><argument_list pos:line="1388" pos:column="31">(<argument><expr><name pos:line="1388" pos:column="32">cmd_name<pos:position pos:line="1388" pos:column="40"/></name> <operator pos:line="1388" pos:column="41">+<pos:position pos:line="1388" pos:column="42"/></operator> <literal type="number" pos:line="1388" pos:column="43">2<pos:position pos:line="1388" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="1388" pos:column="46">directive<pos:position pos:line="1388" pos:column="55"/></name> <operator pos:line="1388" pos:column="56">+<pos:position pos:line="1388" pos:column="57"/></operator> <literal type="number" pos:line="1388" pos:column="58">1<pos:position pos:line="1388" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="1388" pos:column="60"/></argument_list></call> <operator pos:line="1388" pos:column="61">!=<pos:position pos:line="1388" pos:column="63"/></operator> <literal type="number" pos:line="1388" pos:column="64">0<pos:position pos:line="1388" pos:column="65"/></literal></expr>)<pos:position pos:line="1388" pos:column="66"/></condition><then pos:line="1388" pos:column="66"> <block pos:line="1388" pos:column="67">{
                    <return pos:line="1389" pos:column="21">return <expr><call><name pos:line="1389" pos:column="28">apr_pstrcat<pos:position pos:line="1389" pos:column="39"/></name><argument_list pos:line="1389" pos:column="39">(<argument><expr><name><name pos:line="1389" pos:column="40">cmd<pos:position pos:line="1389" pos:column="43"/></name><operator pos:line="1389" pos:column="43">-&gt;<pos:position pos:line="1389" pos:column="48"/></operator><name pos:line="1389" pos:column="45">pool<pos:position pos:line="1389" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1389" pos:column="51">"Expected &lt;/"<pos:position pos:line="1389" pos:column="67"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="1390" pos:column="40">directive<pos:position pos:line="1390" pos:column="49"/></name> <operator pos:line="1390" pos:column="50">+<pos:position pos:line="1390" pos:column="51"/></operator> <literal type="number" pos:line="1390" pos:column="52">1<pos:position pos:line="1390" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1390" pos:column="55">"&gt; but saw "<pos:position pos:line="1390" pos:column="70"/></literal></expr></argument>,
                                       <argument><expr><name pos:line="1391" pos:column="40">cmd_name<pos:position pos:line="1391" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1391" pos:column="50">"&gt;"<pos:position pos:line="1391" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="1391" pos:column="55">NULL<pos:position pos:line="1391" pos:column="59"/></name></expr></argument>)<pos:position pos:line="1391" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1391" pos:column="61"/></return>
                }<pos:position pos:line="1392" pos:column="18"/></block></then></if>

                <return pos:line="1394" pos:column="17">return <expr><name pos:line="1394" pos:column="24">NULL<pos:position pos:line="1394" pos:column="28"/></name></expr>;<pos:position pos:line="1394" pos:column="29"/></return> <comment type="block" pos:line="1394" pos:column="30">/* found end of container */</comment>
            }<pos:position pos:line="1395" pos:column="14"/></block></then>
            <else pos:line="1396" pos:column="13">else <block pos:line="1396" pos:column="18">{
                <decl_stmt><decl><type><specifier pos:line="1397" pos:column="17">const<pos:position pos:line="1397" pos:column="22"/></specifier> <name pos:line="1397" pos:column="23">char<pos:position pos:line="1397" pos:column="27"/></name> <modifier pos:line="1397" pos:column="28">*<pos:position pos:line="1397" pos:column="29"/></modifier></type><name pos:line="1397" pos:column="29">msg<pos:position pos:line="1397" pos:column="32"/></name></decl>;<pos:position pos:line="1397" pos:column="33"/></decl_stmt>

                <if pos:line="1399" pos:column="17">if <condition pos:line="1399" pos:column="20">(<expr><operator pos:line="1399" pos:column="21">*<pos:position pos:line="1399" pos:column="22"/></operator><name pos:line="1399" pos:column="22">args<pos:position pos:line="1399" pos:column="26"/></name> <operator pos:line="1399" pos:column="27">==<pos:position pos:line="1399" pos:column="29"/></operator> <literal type="char" pos:line="1399" pos:column="30">'\0'<pos:position pos:line="1399" pos:column="34"/></literal> <operator pos:line="1399" pos:column="35">&amp;&amp;<pos:position pos:line="1399" pos:column="45"/></operator> <name><name pos:line="1399" pos:column="38">cmd_name<pos:position pos:line="1399" pos:column="46"/></name><index pos:line="1399" pos:column="46">[<expr><call><name pos:line="1399" pos:column="47">strlen<pos:position pos:line="1399" pos:column="53"/></name><argument_list pos:line="1399" pos:column="53">(<argument><expr><name pos:line="1399" pos:column="54">cmd_name<pos:position pos:line="1399" pos:column="62"/></name></expr></argument>)<pos:position pos:line="1399" pos:column="63"/></argument_list></call> <operator pos:line="1399" pos:column="64">-<pos:position pos:line="1399" pos:column="65"/></operator> <literal type="number" pos:line="1399" pos:column="66">1<pos:position pos:line="1399" pos:column="67"/></literal></expr>]<pos:position pos:line="1399" pos:column="68"/></index></name> <operator pos:line="1399" pos:column="69">==<pos:position pos:line="1399" pos:column="71"/></operator> <literal type="char" pos:line="1399" pos:column="72">'&gt;'<pos:position pos:line="1399" pos:column="78"/></literal></expr>)<pos:position pos:line="1399" pos:column="76"/></condition><then pos:line="1399" pos:column="76"> <block pos:line="1399" pos:column="77">{
                    <expr_stmt><expr><name><name pos:line="1400" pos:column="21">cmd_name<pos:position pos:line="1400" pos:column="29"/></name><index pos:line="1400" pos:column="29">[<expr><call><name pos:line="1400" pos:column="30">strlen<pos:position pos:line="1400" pos:column="36"/></name><argument_list pos:line="1400" pos:column="36">(<argument><expr><name pos:line="1400" pos:column="37">cmd_name<pos:position pos:line="1400" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1400" pos:column="46"/></argument_list></call> <operator pos:line="1400" pos:column="47">-<pos:position pos:line="1400" pos:column="48"/></operator> <literal type="number" pos:line="1400" pos:column="49">1<pos:position pos:line="1400" pos:column="50"/></literal></expr>]<pos:position pos:line="1400" pos:column="51"/></index></name> <operator pos:line="1400" pos:column="52">=<pos:position pos:line="1400" pos:column="53"/></operator> <literal type="char" pos:line="1400" pos:column="54">'\0'<pos:position pos:line="1400" pos:column="58"/></literal></expr>;<pos:position pos:line="1400" pos:column="59"/></expr_stmt>
                }<pos:position pos:line="1401" pos:column="18"/></block></then></if>

                <if pos:line="1403" pos:column="17">if <condition pos:line="1403" pos:column="20">(<expr><operator pos:line="1403" pos:column="21">(<pos:position pos:line="1403" pos:column="22"/></operator><name pos:line="1403" pos:column="22">msg<pos:position pos:line="1403" pos:column="25"/></name> <operator pos:line="1403" pos:column="26">=<pos:position pos:line="1403" pos:column="27"/></operator> <call><name pos:line="1403" pos:column="28">ap_soak_end_container<pos:position pos:line="1403" pos:column="49"/></name><argument_list pos:line="1403" pos:column="49">(<argument><expr><name pos:line="1403" pos:column="50">cmd<pos:position pos:line="1403" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1403" pos:column="55">cmd_name<pos:position pos:line="1403" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1403" pos:column="64"/></argument_list></call><operator pos:line="1403" pos:column="64">)<pos:position pos:line="1403" pos:column="65"/></operator> <operator pos:line="1403" pos:column="66">!=<pos:position pos:line="1403" pos:column="68"/></operator> <name pos:line="1403" pos:column="69">NULL<pos:position pos:line="1403" pos:column="73"/></name></expr>)<pos:position pos:line="1403" pos:column="74"/></condition><then pos:line="1403" pos:column="74"> <block pos:line="1403" pos:column="75">{
                    <return pos:line="1404" pos:column="21">return <expr><name pos:line="1404" pos:column="28">msg<pos:position pos:line="1404" pos:column="31"/></name></expr>;<pos:position pos:line="1404" pos:column="32"/></return>
                }<pos:position pos:line="1405" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1406" pos:column="14"/></block></else></if>
        }<pos:position pos:line="1407" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1408" pos:column="6"/></block></while>

    <return pos:line="1410" pos:column="5">return <expr><call><name pos:line="1410" pos:column="12">apr_pstrcat<pos:position pos:line="1410" pos:column="23"/></name><argument_list pos:line="1410" pos:column="23">(<argument><expr><name><name pos:line="1410" pos:column="24">cmd<pos:position pos:line="1410" pos:column="27"/></name><operator pos:line="1410" pos:column="27">-&gt;<pos:position pos:line="1410" pos:column="32"/></operator><name pos:line="1410" pos:column="29">pool<pos:position pos:line="1410" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1410" pos:column="35">"Expected &lt;/"<pos:position pos:line="1410" pos:column="51"/></literal></expr></argument>,
                       <argument><expr><name pos:line="1411" pos:column="24">directive<pos:position pos:line="1411" pos:column="33"/></name> <operator pos:line="1411" pos:column="34">+<pos:position pos:line="1411" pos:column="35"/></operator> <literal type="number" pos:line="1411" pos:column="36">1<pos:position pos:line="1411" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="1411" pos:column="39">"&gt; before end of configuration"<pos:position pos:line="1411" pos:column="73"/></literal></expr></argument>,
                       <argument><expr><name pos:line="1412" pos:column="24">NULL<pos:position pos:line="1412" pos:column="28"/></name></expr></argument>)<pos:position pos:line="1412" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="1412" pos:column="30"/></return>
}<pos:position pos:line="1413" pos:column="2"/></block>

<function><specifier pos:line="1415" pos:column="1">static<pos:position pos:line="1415" pos:column="7"/></specifier> <type><specifier pos:line="1415" pos:column="8">const<pos:position pos:line="1415" pos:column="13"/></specifier> <name pos:line="1415" pos:column="14">char<pos:position pos:line="1415" pos:column="18"/></name> <modifier pos:line="1415" pos:column="19">*<pos:position pos:line="1415" pos:column="20"/></modifier></type><name pos:line="1415" pos:column="20">execute_now<pos:position pos:line="1415" pos:column="31"/></name><parameter_list pos:line="1415" pos:column="31">(<parameter><decl><type><name pos:line="1415" pos:column="32">char<pos:position pos:line="1415" pos:column="36"/></name> <modifier pos:line="1415" pos:column="37">*<pos:position pos:line="1415" pos:column="38"/></modifier></type><name pos:line="1415" pos:column="38">cmd_line<pos:position pos:line="1415" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1415" pos:column="48">const<pos:position pos:line="1415" pos:column="53"/></specifier> <name pos:line="1415" pos:column="54">char<pos:position pos:line="1415" pos:column="58"/></name> <modifier pos:line="1415" pos:column="59">*<pos:position pos:line="1415" pos:column="60"/></modifier></type><name pos:line="1415" pos:column="60">args<pos:position pos:line="1415" pos:column="64"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="1416" pos:column="32">cmd_parms<pos:position pos:line="1416" pos:column="41"/></name> <modifier pos:line="1416" pos:column="42">*<pos:position pos:line="1416" pos:column="43"/></modifier></type><name pos:line="1416" pos:column="43">parms<pos:position pos:line="1416" pos:column="48"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="1417" pos:column="32">apr_pool_t<pos:position pos:line="1417" pos:column="42"/></name> <modifier pos:line="1417" pos:column="43">*<pos:position pos:line="1417" pos:column="44"/></modifier></type><name pos:line="1417" pos:column="44">p<pos:position pos:line="1417" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1417" pos:column="47">apr_pool_t<pos:position pos:line="1417" pos:column="57"/></name> <modifier pos:line="1417" pos:column="58">*<pos:position pos:line="1417" pos:column="59"/></modifier></type><name pos:line="1417" pos:column="59">ptemp<pos:position pos:line="1417" pos:column="64"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="1418" pos:column="32">ap_directive_t<pos:position pos:line="1418" pos:column="46"/></name> <modifier pos:line="1418" pos:column="47">*<pos:position pos:line="1418" pos:column="48"/></modifier><modifier pos:line="1418" pos:column="48">*<pos:position pos:line="1418" pos:column="49"/></modifier></type><name pos:line="1418" pos:column="49">sub_tree<pos:position pos:line="1418" pos:column="57"/></name></decl></parameter>,
                               <parameter><decl><type><name pos:line="1419" pos:column="32">ap_directive_t<pos:position pos:line="1419" pos:column="46"/></name> <modifier pos:line="1419" pos:column="47">*<pos:position pos:line="1419" pos:column="48"/></modifier></type><name pos:line="1419" pos:column="48">parent<pos:position pos:line="1419" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1419" pos:column="55"/></parameter_list>
<block pos:line="1420" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="1421" pos:column="5">const<pos:position pos:line="1421" pos:column="10"/></specifier> <name pos:line="1421" pos:column="11">command_rec<pos:position pos:line="1421" pos:column="22"/></name> <modifier pos:line="1421" pos:column="23">*<pos:position pos:line="1421" pos:column="24"/></modifier></type><name pos:line="1421" pos:column="24">cmd<pos:position pos:line="1421" pos:column="27"/></name></decl>;<pos:position pos:line="1421" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1422" pos:column="5">ap_mod_list<pos:position pos:line="1422" pos:column="16"/></name> <modifier pos:line="1422" pos:column="17">*<pos:position pos:line="1422" pos:column="18"/></modifier></type><name pos:line="1422" pos:column="18">ml<pos:position pos:line="1422" pos:column="20"/></name></decl>;<pos:position pos:line="1422" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1423" pos:column="5">char<pos:position pos:line="1423" pos:column="9"/></name> <modifier pos:line="1423" pos:column="10">*<pos:position pos:line="1423" pos:column="11"/></modifier></type><name pos:line="1423" pos:column="11">dir<pos:position pos:line="1423" pos:column="14"/></name> <init pos:line="1423" pos:column="15">= <expr><call><name pos:line="1423" pos:column="17">apr_pstrdup<pos:position pos:line="1423" pos:column="28"/></name><argument_list pos:line="1423" pos:column="28">(<argument><expr><name><name pos:line="1423" pos:column="29">parms<pos:position pos:line="1423" pos:column="34"/></name><operator pos:line="1423" pos:column="34">-&gt;<pos:position pos:line="1423" pos:column="39"/></operator><name pos:line="1423" pos:column="36">pool<pos:position pos:line="1423" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="1423" pos:column="42">cmd_line<pos:position pos:line="1423" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1423" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1423" pos:column="52"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="1425" pos:column="5">ap_str_tolower<pos:position pos:line="1425" pos:column="19"/></name><argument_list pos:line="1425" pos:column="19">(<argument><expr><name pos:line="1425" pos:column="20">dir<pos:position pos:line="1425" pos:column="23"/></name></expr></argument>)<pos:position pos:line="1425" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="1425" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1427" pos:column="5">ml<pos:position pos:line="1427" pos:column="7"/></name> <operator pos:line="1427" pos:column="8">=<pos:position pos:line="1427" pos:column="9"/></operator> <call><name pos:line="1427" pos:column="10">apr_hash_get<pos:position pos:line="1427" pos:column="22"/></name><argument_list pos:line="1427" pos:column="22">(<argument><expr><name pos:line="1427" pos:column="23">ap_config_hash<pos:position pos:line="1427" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1427" pos:column="39">dir<pos:position pos:line="1427" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="1427" pos:column="44">APR_HASH_KEY_STRING<pos:position pos:line="1427" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1427" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="1427" pos:column="65"/></expr_stmt>

    <if pos:line="1429" pos:column="5">if <condition pos:line="1429" pos:column="8">(<expr><name pos:line="1429" pos:column="9">ml<pos:position pos:line="1429" pos:column="11"/></name> <operator pos:line="1429" pos:column="12">==<pos:position pos:line="1429" pos:column="14"/></operator> <name pos:line="1429" pos:column="15">NULL<pos:position pos:line="1429" pos:column="19"/></name></expr>)<pos:position pos:line="1429" pos:column="20"/></condition><then pos:line="1429" pos:column="20"> <block pos:line="1429" pos:column="21">{
        <return pos:line="1430" pos:column="9">return <expr><call><name pos:line="1430" pos:column="16">apr_pstrcat<pos:position pos:line="1430" pos:column="27"/></name><argument_list pos:line="1430" pos:column="27">(<argument><expr><name><name pos:line="1430" pos:column="28">parms<pos:position pos:line="1430" pos:column="33"/></name><operator pos:line="1430" pos:column="33">-&gt;<pos:position pos:line="1430" pos:column="38"/></operator><name pos:line="1430" pos:column="35">pool<pos:position pos:line="1430" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1430" pos:column="41">"Invalid command '"<pos:position pos:line="1430" pos:column="60"/></literal></expr></argument>,
                           <argument><expr><name pos:line="1431" pos:column="28">cmd_line<pos:position pos:line="1431" pos:column="36"/></name></expr></argument>,
                           <argument><expr><literal type="string" pos:line="1432" pos:column="28">"', perhaps misspelled or defined by a module "<pos:position pos:line="1432" pos:column="75"/></literal>
                           <literal type="string" pos:line="1433" pos:column="28">"not included in the server configuration"<pos:position pos:line="1433" pos:column="70"/></literal></expr></argument>,
                           <argument><expr><name pos:line="1434" pos:column="28">NULL<pos:position pos:line="1434" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1434" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1434" pos:column="34"/></return>
    }<pos:position pos:line="1435" pos:column="6"/></block></then></if>

    <for pos:line="1437" pos:column="5">for <control pos:line="1437" pos:column="9">( <init pos:line="1437" pos:column="11">;<pos:position pos:line="1437" pos:column="12"/></init> <condition><expr><name pos:line="1437" pos:column="13">ml<pos:position pos:line="1437" pos:column="15"/></name> <operator pos:line="1437" pos:column="16">!=<pos:position pos:line="1437" pos:column="18"/></operator> <name pos:line="1437" pos:column="19">NULL<pos:position pos:line="1437" pos:column="23"/></name></expr>;<pos:position pos:line="1437" pos:column="24"/></condition> <incr><expr><name pos:line="1437" pos:column="25">ml<pos:position pos:line="1437" pos:column="27"/></name> <operator pos:line="1437" pos:column="28">=<pos:position pos:line="1437" pos:column="29"/></operator> <name><name pos:line="1437" pos:column="30">ml<pos:position pos:line="1437" pos:column="32"/></name><operator pos:line="1437" pos:column="32">-&gt;<pos:position pos:line="1437" pos:column="37"/></operator><name pos:line="1437" pos:column="34">next<pos:position pos:line="1437" pos:column="38"/></name></name></expr></incr>)<pos:position pos:line="1437" pos:column="39"/></control> <block pos:line="1437" pos:column="40">{
        <decl_stmt><decl><type><specifier pos:line="1438" pos:column="9">const<pos:position pos:line="1438" pos:column="14"/></specifier> <name pos:line="1438" pos:column="15">char<pos:position pos:line="1438" pos:column="19"/></name> <modifier pos:line="1438" pos:column="20">*<pos:position pos:line="1438" pos:column="21"/></modifier></type><name pos:line="1438" pos:column="21">retval<pos:position pos:line="1438" pos:column="27"/></name></decl>;<pos:position pos:line="1438" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><name pos:line="1439" pos:column="9">cmd<pos:position pos:line="1439" pos:column="12"/></name> <operator pos:line="1439" pos:column="13">=<pos:position pos:line="1439" pos:column="14"/></operator> <name><name pos:line="1439" pos:column="15">ml<pos:position pos:line="1439" pos:column="17"/></name><operator pos:line="1439" pos:column="17">-&gt;<pos:position pos:line="1439" pos:column="22"/></operator><name pos:line="1439" pos:column="19">cmd<pos:position pos:line="1439" pos:column="22"/></name></name></expr>;<pos:position pos:line="1439" pos:column="23"/></expr_stmt>

        <expr_stmt><expr><name pos:line="1441" pos:column="9">retval<pos:position pos:line="1441" pos:column="15"/></name> <operator pos:line="1441" pos:column="16">=<pos:position pos:line="1441" pos:column="17"/></operator> <call><name pos:line="1441" pos:column="18">invoke_cmd<pos:position pos:line="1441" pos:column="28"/></name><argument_list pos:line="1441" pos:column="28">(<argument><expr><name pos:line="1441" pos:column="29">cmd<pos:position pos:line="1441" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1441" pos:column="34">parms<pos:position pos:line="1441" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1441" pos:column="41">sub_tree<pos:position pos:line="1441" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1441" pos:column="51">args<pos:position pos:line="1441" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1441" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1441" pos:column="57"/></expr_stmt>

        <if pos:line="1443" pos:column="9">if <condition pos:line="1443" pos:column="12">(<expr><name pos:line="1443" pos:column="13">retval<pos:position pos:line="1443" pos:column="19"/></name> <operator pos:line="1443" pos:column="20">!=<pos:position pos:line="1443" pos:column="22"/></operator> <name pos:line="1443" pos:column="23">NULL<pos:position pos:line="1443" pos:column="27"/></name></expr>)<pos:position pos:line="1443" pos:column="28"/></condition><then pos:line="1443" pos:column="28"> <block pos:line="1443" pos:column="29">{
            <return pos:line="1444" pos:column="13">return <expr><name pos:line="1444" pos:column="20">retval<pos:position pos:line="1444" pos:column="26"/></name></expr>;<pos:position pos:line="1444" pos:column="27"/></return>
        }<pos:position pos:line="1445" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1446" pos:column="6"/></block></for>

    <return pos:line="1448" pos:column="5">return <expr><name pos:line="1448" pos:column="12">NULL<pos:position pos:line="1448" pos:column="16"/></name></expr>;<pos:position pos:line="1448" pos:column="17"/></return>
}<pos:position pos:line="1449" pos:column="2"/></block></function>

<comment type="block" pos:line="1451" pos:column="1">/* This structure and the following functions are needed for the
 * table-based config file reading. They are passed to the
 * cfg_open_custom() routine.
 */</comment>

<comment type="block" pos:line="1456" pos:column="1">/* Structure to be passed to cfg_open_custom(): it contains an
 * index which is incremented from 0 to nelts on each call to
 * cfg_getline() (which in turn calls arr_elts_getstr())
 * and an apr_array_header_t pointer for the string array.
 */</comment>
<typedef pos:line="1461" pos:column="1">typedef <type><struct pos:line="1461" pos:column="9">struct <block pos:line="1461" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="1462" pos:column="5">apr_array_header_t<pos:position pos:line="1462" pos:column="23"/></name> <modifier pos:line="1462" pos:column="24">*<pos:position pos:line="1462" pos:column="25"/></modifier></type><name pos:line="1462" pos:column="25">array<pos:position pos:line="1462" pos:column="30"/></name></decl>;<pos:position pos:line="1462" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1463" pos:column="5">int<pos:position pos:line="1463" pos:column="8"/></name></type> <name pos:line="1463" pos:column="9">curr_idx<pos:position pos:line="1463" pos:column="17"/></name></decl>;<pos:position pos:line="1463" pos:column="18"/></decl_stmt>
}<pos:position pos:line="1464" pos:column="2"/></block></struct></type> <name pos:line="1464" pos:column="3">arr_elts_param_t<pos:position pos:line="1464" pos:column="19"/></name>;<pos:position pos:line="1464" pos:column="20"/></typedef>


<comment type="block" pos:line="1467" pos:column="1">/* arr_elts_getstr() returns the next line from the string array. */</comment>
<function><specifier pos:line="1468" pos:column="1">static<pos:position pos:line="1468" pos:column="7"/></specifier> <type><name pos:line="1468" pos:column="8">void<pos:position pos:line="1468" pos:column="12"/></name> <modifier pos:line="1468" pos:column="13">*<pos:position pos:line="1468" pos:column="14"/></modifier></type><name pos:line="1468" pos:column="14">arr_elts_getstr<pos:position pos:line="1468" pos:column="29"/></name><parameter_list pos:line="1468" pos:column="29">(<parameter><decl><type><name pos:line="1468" pos:column="30">void<pos:position pos:line="1468" pos:column="34"/></name> <modifier pos:line="1468" pos:column="35">*<pos:position pos:line="1468" pos:column="36"/></modifier></type><name pos:line="1468" pos:column="36">buf<pos:position pos:line="1468" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1468" pos:column="41">size_t<pos:position pos:line="1468" pos:column="47"/></name></type> <name pos:line="1468" pos:column="48">bufsiz<pos:position pos:line="1468" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1468" pos:column="56">void<pos:position pos:line="1468" pos:column="60"/></name> <modifier pos:line="1468" pos:column="61">*<pos:position pos:line="1468" pos:column="62"/></modifier></type><name pos:line="1468" pos:column="62">param<pos:position pos:line="1468" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1468" pos:column="68"/></parameter_list>
<block pos:line="1469" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1470" pos:column="5">arr_elts_param_t<pos:position pos:line="1470" pos:column="21"/></name> <modifier pos:line="1470" pos:column="22">*<pos:position pos:line="1470" pos:column="23"/></modifier></type><name pos:line="1470" pos:column="23">arr_param<pos:position pos:line="1470" pos:column="32"/></name> <init pos:line="1470" pos:column="33">= <expr><operator pos:line="1470" pos:column="35">(<pos:position pos:line="1470" pos:column="36"/></operator><name pos:line="1470" pos:column="36">arr_elts_param_t<pos:position pos:line="1470" pos:column="52"/></name> <operator pos:line="1470" pos:column="53">*<pos:position pos:line="1470" pos:column="54"/></operator><operator pos:line="1470" pos:column="54">)<pos:position pos:line="1470" pos:column="55"/></operator><name pos:line="1470" pos:column="55">param<pos:position pos:line="1470" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="1470" pos:column="61"/></decl_stmt>

    <comment type="block" pos:line="1472" pos:column="5">/* End of array reached? */</comment>
    <if pos:line="1473" pos:column="5">if <condition pos:line="1473" pos:column="8">(<expr><operator pos:line="1473" pos:column="9">++<pos:position pos:line="1473" pos:column="11"/></operator><name><name pos:line="1473" pos:column="11">arr_param<pos:position pos:line="1473" pos:column="20"/></name><operator pos:line="1473" pos:column="20">-&gt;<pos:position pos:line="1473" pos:column="25"/></operator><name pos:line="1473" pos:column="22">curr_idx<pos:position pos:line="1473" pos:column="30"/></name></name> <operator pos:line="1473" pos:column="31">&gt;<pos:position pos:line="1473" pos:column="35"/></operator> <name><name pos:line="1473" pos:column="33">arr_param<pos:position pos:line="1473" pos:column="42"/></name><operator pos:line="1473" pos:column="42">-&gt;<pos:position pos:line="1473" pos:column="47"/></operator><name pos:line="1473" pos:column="44">array<pos:position pos:line="1473" pos:column="49"/></name><operator pos:line="1473" pos:column="49">-&gt;<pos:position pos:line="1473" pos:column="54"/></operator><name pos:line="1473" pos:column="51">nelts<pos:position pos:line="1473" pos:column="56"/></name></name></expr>)<pos:position pos:line="1473" pos:column="57"/></condition><then pos:line="1473" pos:column="57">
        <block type="pseudo"><return pos:line="1474" pos:column="9">return <expr><name pos:line="1474" pos:column="16">NULL<pos:position pos:line="1474" pos:column="20"/></name></expr>;<pos:position pos:line="1474" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="1476" pos:column="5">/* return the line */</comment>
    <expr_stmt><expr><call><name pos:line="1477" pos:column="5">apr_cpystrn<pos:position pos:line="1477" pos:column="16"/></name><argument_list pos:line="1477" pos:column="16">(<argument><expr><name pos:line="1477" pos:column="17">buf<pos:position pos:line="1477" pos:column="20"/></name></expr></argument>,
                <argument><expr><operator pos:line="1478" pos:column="17">(<pos:position pos:line="1478" pos:column="18"/></operator><operator pos:line="1478" pos:column="18">(<pos:position pos:line="1478" pos:column="19"/></operator><name pos:line="1478" pos:column="19">char<pos:position pos:line="1478" pos:column="23"/></name> <operator pos:line="1478" pos:column="24">*<pos:position pos:line="1478" pos:column="25"/></operator><operator pos:line="1478" pos:column="25">*<pos:position pos:line="1478" pos:column="26"/></operator><operator pos:line="1478" pos:column="26">)<pos:position pos:line="1478" pos:column="27"/></operator><name><name pos:line="1478" pos:column="27">arr_param<pos:position pos:line="1478" pos:column="36"/></name><operator pos:line="1478" pos:column="36">-&gt;<pos:position pos:line="1478" pos:column="41"/></operator><name pos:line="1478" pos:column="38">array<pos:position pos:line="1478" pos:column="43"/></name><operator pos:line="1478" pos:column="43">-&gt;<pos:position pos:line="1478" pos:column="48"/></operator><name pos:line="1478" pos:column="45">elts<pos:position pos:line="1478" pos:column="49"/></name></name><operator pos:line="1478" pos:column="49">)<pos:position pos:line="1478" pos:column="50"/></operator><index pos:line="1478" pos:column="50">[<expr><name><name pos:line="1478" pos:column="51">arr_param<pos:position pos:line="1478" pos:column="60"/></name><operator pos:line="1478" pos:column="60">-&gt;<pos:position pos:line="1478" pos:column="65"/></operator><name pos:line="1478" pos:column="62">curr_idx<pos:position pos:line="1478" pos:column="70"/></name></name> <operator pos:line="1478" pos:column="71">-<pos:position pos:line="1478" pos:column="72"/></operator> <literal type="number" pos:line="1478" pos:column="73">1<pos:position pos:line="1478" pos:column="74"/></literal></expr>]<pos:position pos:line="1478" pos:column="75"/></index></expr></argument>,
                <argument><expr><name pos:line="1479" pos:column="17">bufsiz<pos:position pos:line="1479" pos:column="23"/></name></expr></argument>)<pos:position pos:line="1479" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="1479" pos:column="25"/></expr_stmt>

    <return pos:line="1481" pos:column="5">return <expr><name pos:line="1481" pos:column="12">buf<pos:position pos:line="1481" pos:column="15"/></name></expr>;<pos:position pos:line="1481" pos:column="16"/></return>
}<pos:position pos:line="1482" pos:column="2"/></block></function>


<comment type="block" pos:line="1485" pos:column="1">/* arr_elts_close(): dummy close routine (makes sure no more lines can be read) */</comment>
<function><specifier pos:line="1486" pos:column="1">static<pos:position pos:line="1486" pos:column="7"/></specifier> <type><name pos:line="1486" pos:column="8">int<pos:position pos:line="1486" pos:column="11"/></name></type> <name pos:line="1486" pos:column="12">arr_elts_close<pos:position pos:line="1486" pos:column="26"/></name><parameter_list pos:line="1486" pos:column="26">(<parameter><decl><type><name pos:line="1486" pos:column="27">void<pos:position pos:line="1486" pos:column="31"/></name> <modifier pos:line="1486" pos:column="32">*<pos:position pos:line="1486" pos:column="33"/></modifier></type><name pos:line="1486" pos:column="33">param<pos:position pos:line="1486" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1486" pos:column="39"/></parameter_list>
<block pos:line="1487" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1488" pos:column="5">arr_elts_param_t<pos:position pos:line="1488" pos:column="21"/></name> <modifier pos:line="1488" pos:column="22">*<pos:position pos:line="1488" pos:column="23"/></modifier></type><name pos:line="1488" pos:column="23">arr_param<pos:position pos:line="1488" pos:column="32"/></name> <init pos:line="1488" pos:column="33">= <expr><operator pos:line="1488" pos:column="35">(<pos:position pos:line="1488" pos:column="36"/></operator><name pos:line="1488" pos:column="36">arr_elts_param_t<pos:position pos:line="1488" pos:column="52"/></name> <operator pos:line="1488" pos:column="53">*<pos:position pos:line="1488" pos:column="54"/></operator><operator pos:line="1488" pos:column="54">)<pos:position pos:line="1488" pos:column="55"/></operator><name pos:line="1488" pos:column="55">param<pos:position pos:line="1488" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="1488" pos:column="61"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="1490" pos:column="5">arr_param<pos:position pos:line="1490" pos:column="14"/></name><operator pos:line="1490" pos:column="14">-&gt;<pos:position pos:line="1490" pos:column="19"/></operator><name pos:line="1490" pos:column="16">curr_idx<pos:position pos:line="1490" pos:column="24"/></name></name> <operator pos:line="1490" pos:column="25">=<pos:position pos:line="1490" pos:column="26"/></operator> <name><name pos:line="1490" pos:column="27">arr_param<pos:position pos:line="1490" pos:column="36"/></name><operator pos:line="1490" pos:column="36">-&gt;<pos:position pos:line="1490" pos:column="41"/></operator><name pos:line="1490" pos:column="38">array<pos:position pos:line="1490" pos:column="43"/></name><operator pos:line="1490" pos:column="43">-&gt;<pos:position pos:line="1490" pos:column="48"/></operator><name pos:line="1490" pos:column="45">nelts<pos:position pos:line="1490" pos:column="50"/></name></name></expr>;<pos:position pos:line="1490" pos:column="51"/></expr_stmt>

    <return pos:line="1492" pos:column="5">return <expr><literal type="number" pos:line="1492" pos:column="12">0<pos:position pos:line="1492" pos:column="13"/></literal></expr>;<pos:position pos:line="1492" pos:column="14"/></return>
}<pos:position pos:line="1493" pos:column="2"/></block></function>

<function><specifier pos:line="1495" pos:column="1">static<pos:position pos:line="1495" pos:column="7"/></specifier> <type><specifier pos:line="1495" pos:column="8">const<pos:position pos:line="1495" pos:column="13"/></specifier> <name pos:line="1495" pos:column="14">char<pos:position pos:line="1495" pos:column="18"/></name> <modifier pos:line="1495" pos:column="19">*<pos:position pos:line="1495" pos:column="20"/></modifier></type><name pos:line="1495" pos:column="20">process_command_config<pos:position pos:line="1495" pos:column="42"/></name><parameter_list pos:line="1495" pos:column="42">(<parameter><decl><type><name pos:line="1495" pos:column="43">server_rec<pos:position pos:line="1495" pos:column="53"/></name> <modifier pos:line="1495" pos:column="54">*<pos:position pos:line="1495" pos:column="55"/></modifier></type><name pos:line="1495" pos:column="55">s<pos:position pos:line="1495" pos:column="56"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="1496" pos:column="43">apr_array_header_t<pos:position pos:line="1496" pos:column="61"/></name> <modifier pos:line="1496" pos:column="62">*<pos:position pos:line="1496" pos:column="63"/></modifier></type><name pos:line="1496" pos:column="63">arr<pos:position pos:line="1496" pos:column="66"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="1497" pos:column="43">ap_directive_t<pos:position pos:line="1497" pos:column="57"/></name> <modifier pos:line="1497" pos:column="58">*<pos:position pos:line="1497" pos:column="59"/></modifier><modifier pos:line="1497" pos:column="59">*<pos:position pos:line="1497" pos:column="60"/></modifier></type><name pos:line="1497" pos:column="60">conftree<pos:position pos:line="1497" pos:column="68"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="1498" pos:column="43">apr_pool_t<pos:position pos:line="1498" pos:column="53"/></name> <modifier pos:line="1498" pos:column="54">*<pos:position pos:line="1498" pos:column="55"/></modifier></type><name pos:line="1498" pos:column="55">p<pos:position pos:line="1498" pos:column="56"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="1499" pos:column="43">apr_pool_t<pos:position pos:line="1499" pos:column="53"/></name> <modifier pos:line="1499" pos:column="54">*<pos:position pos:line="1499" pos:column="55"/></modifier></type><name pos:line="1499" pos:column="55">ptemp<pos:position pos:line="1499" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1499" pos:column="61"/></parameter_list>
<block pos:line="1500" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="1501" pos:column="5">const<pos:position pos:line="1501" pos:column="10"/></specifier> <name pos:line="1501" pos:column="11">char<pos:position pos:line="1501" pos:column="15"/></name> <modifier pos:line="1501" pos:column="16">*<pos:position pos:line="1501" pos:column="17"/></modifier></type><name pos:line="1501" pos:column="17">errmsg<pos:position pos:line="1501" pos:column="23"/></name></decl>;<pos:position pos:line="1501" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1502" pos:column="5">cmd_parms<pos:position pos:line="1502" pos:column="14"/></name></type> <name pos:line="1502" pos:column="15">parms<pos:position pos:line="1502" pos:column="20"/></name></decl>;<pos:position pos:line="1502" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1503" pos:column="5">arr_elts_param_t<pos:position pos:line="1503" pos:column="21"/></name></type> <name pos:line="1503" pos:column="22">arr_parms<pos:position pos:line="1503" pos:column="31"/></name></decl>;<pos:position pos:line="1503" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="1505" pos:column="5">arr_parms<pos:position pos:line="1505" pos:column="14"/></name><operator pos:line="1505" pos:column="14">.<pos:position pos:line="1505" pos:column="15"/></operator><name pos:line="1505" pos:column="15">curr_idx<pos:position pos:line="1505" pos:column="23"/></name></name> <operator pos:line="1505" pos:column="24">=<pos:position pos:line="1505" pos:column="25"/></operator> <literal type="number" pos:line="1505" pos:column="26">0<pos:position pos:line="1505" pos:column="27"/></literal></expr>;<pos:position pos:line="1505" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1506" pos:column="5">arr_parms<pos:position pos:line="1506" pos:column="14"/></name><operator pos:line="1506" pos:column="14">.<pos:position pos:line="1506" pos:column="15"/></operator><name pos:line="1506" pos:column="15">array<pos:position pos:line="1506" pos:column="20"/></name></name> <operator pos:line="1506" pos:column="21">=<pos:position pos:line="1506" pos:column="22"/></operator> <name pos:line="1506" pos:column="23">arr<pos:position pos:line="1506" pos:column="26"/></name></expr>;<pos:position pos:line="1506" pos:column="27"/></expr_stmt>

    <if pos:line="1508" pos:column="5">if <condition pos:line="1508" pos:column="8">(<expr><name pos:line="1508" pos:column="9">ap_config_hash<pos:position pos:line="1508" pos:column="23"/></name> <operator pos:line="1508" pos:column="24">==<pos:position pos:line="1508" pos:column="26"/></operator> <name pos:line="1508" pos:column="27">NULL<pos:position pos:line="1508" pos:column="31"/></name></expr>)<pos:position pos:line="1508" pos:column="32"/></condition><then pos:line="1508" pos:column="32"> <block pos:line="1508" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="1509" pos:column="9">rebuild_conf_hash<pos:position pos:line="1509" pos:column="26"/></name><argument_list pos:line="1509" pos:column="26">(<argument><expr><name><name pos:line="1509" pos:column="27">s<pos:position pos:line="1509" pos:column="28"/></name><operator pos:line="1509" pos:column="28">-&gt;<pos:position pos:line="1509" pos:column="33"/></operator><name pos:line="1509" pos:column="30">process<pos:position pos:line="1509" pos:column="37"/></name><operator pos:line="1509" pos:column="37">-&gt;<pos:position pos:line="1509" pos:column="42"/></operator><name pos:line="1509" pos:column="39">pconf<pos:position pos:line="1509" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="1509" pos:column="46">1<pos:position pos:line="1509" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="1509" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1509" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="1510" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="1512" pos:column="5">parms<pos:position pos:line="1512" pos:column="10"/></name> <operator pos:line="1512" pos:column="11">=<pos:position pos:line="1512" pos:column="12"/></operator> <name pos:line="1512" pos:column="13">default_parms<pos:position pos:line="1512" pos:column="26"/></name></expr>;<pos:position pos:line="1512" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1513" pos:column="5">parms<pos:position pos:line="1513" pos:column="10"/></name><operator pos:line="1513" pos:column="10">.<pos:position pos:line="1513" pos:column="11"/></operator><name pos:line="1513" pos:column="11">pool<pos:position pos:line="1513" pos:column="15"/></name></name> <operator pos:line="1513" pos:column="16">=<pos:position pos:line="1513" pos:column="17"/></operator> <name pos:line="1513" pos:column="18">p<pos:position pos:line="1513" pos:column="19"/></name></expr>;<pos:position pos:line="1513" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1514" pos:column="5">parms<pos:position pos:line="1514" pos:column="10"/></name><operator pos:line="1514" pos:column="10">.<pos:position pos:line="1514" pos:column="11"/></operator><name pos:line="1514" pos:column="11">temp_pool<pos:position pos:line="1514" pos:column="20"/></name></name> <operator pos:line="1514" pos:column="21">=<pos:position pos:line="1514" pos:column="22"/></operator> <name pos:line="1514" pos:column="23">ptemp<pos:position pos:line="1514" pos:column="28"/></name></expr>;<pos:position pos:line="1514" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1515" pos:column="5">parms<pos:position pos:line="1515" pos:column="10"/></name><operator pos:line="1515" pos:column="10">.<pos:position pos:line="1515" pos:column="11"/></operator><name pos:line="1515" pos:column="11">server<pos:position pos:line="1515" pos:column="17"/></name></name> <operator pos:line="1515" pos:column="18">=<pos:position pos:line="1515" pos:column="19"/></operator> <name pos:line="1515" pos:column="20">s<pos:position pos:line="1515" pos:column="21"/></name></expr>;<pos:position pos:line="1515" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1516" pos:column="5">parms<pos:position pos:line="1516" pos:column="10"/></name><operator pos:line="1516" pos:column="10">.<pos:position pos:line="1516" pos:column="11"/></operator><name pos:line="1516" pos:column="11">override<pos:position pos:line="1516" pos:column="19"/></name></name> <operator pos:line="1516" pos:column="20">=<pos:position pos:line="1516" pos:column="21"/></operator> <operator pos:line="1516" pos:column="22">(<pos:position pos:line="1516" pos:column="23"/></operator><name pos:line="1516" pos:column="23">RSRC_CONF<pos:position pos:line="1516" pos:column="32"/></name> <operator pos:line="1516" pos:column="33">|<pos:position pos:line="1516" pos:column="34"/></operator> <name pos:line="1516" pos:column="35">OR_ALL<pos:position pos:line="1516" pos:column="41"/></name><operator pos:line="1516" pos:column="41">)<pos:position pos:line="1516" pos:column="42"/></operator> <operator pos:line="1516" pos:column="43">&amp;<pos:position pos:line="1516" pos:column="48"/></operator> <operator pos:line="1516" pos:column="45">~<pos:position pos:line="1516" pos:column="46"/></operator><operator pos:line="1516" pos:column="46">(<pos:position pos:line="1516" pos:column="47"/></operator><name pos:line="1516" pos:column="47">OR_AUTHCFG<pos:position pos:line="1516" pos:column="57"/></name> <operator pos:line="1516" pos:column="58">|<pos:position pos:line="1516" pos:column="59"/></operator> <name pos:line="1516" pos:column="60">OR_LIMIT<pos:position pos:line="1516" pos:column="68"/></name><operator pos:line="1516" pos:column="68">)<pos:position pos:line="1516" pos:column="69"/></operator></expr>;<pos:position pos:line="1516" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1517" pos:column="5">parms<pos:position pos:line="1517" pos:column="10"/></name><operator pos:line="1517" pos:column="10">.<pos:position pos:line="1517" pos:column="11"/></operator><name pos:line="1517" pos:column="11">override_opts<pos:position pos:line="1517" pos:column="24"/></name></name> <operator pos:line="1517" pos:column="25">=<pos:position pos:line="1517" pos:column="26"/></operator> <name pos:line="1517" pos:column="27">OPT_ALL<pos:position pos:line="1517" pos:column="34"/></name> <operator pos:line="1517" pos:column="35">|<pos:position pos:line="1517" pos:column="36"/></operator> <name pos:line="1517" pos:column="37">OPT_SYM_OWNER<pos:position pos:line="1517" pos:column="50"/></name> <operator pos:line="1517" pos:column="51">|<pos:position pos:line="1517" pos:column="52"/></operator> <name pos:line="1517" pos:column="53">OPT_MULTI<pos:position pos:line="1517" pos:column="62"/></name></expr>;<pos:position pos:line="1517" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="1519" pos:column="5">parms<pos:position pos:line="1519" pos:column="10"/></name><operator pos:line="1519" pos:column="10">.<pos:position pos:line="1519" pos:column="11"/></operator><name pos:line="1519" pos:column="11">config_file<pos:position pos:line="1519" pos:column="22"/></name></name> <operator pos:line="1519" pos:column="23">=<pos:position pos:line="1519" pos:column="24"/></operator> <call><name pos:line="1519" pos:column="25">ap_pcfg_open_custom<pos:position pos:line="1519" pos:column="44"/></name><argument_list pos:line="1519" pos:column="44">(<argument><expr><name pos:line="1519" pos:column="45">p<pos:position pos:line="1519" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1519" pos:column="48">"-c/-C directives"<pos:position pos:line="1519" pos:column="66"/></literal></expr></argument>,
                                            <argument><expr><operator pos:line="1520" pos:column="45">&amp;<pos:position pos:line="1520" pos:column="50"/></operator><name pos:line="1520" pos:column="46">arr_parms<pos:position pos:line="1520" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1520" pos:column="57">NULL<pos:position pos:line="1520" pos:column="61"/></name></expr></argument>,
                                            <argument><expr><name pos:line="1521" pos:column="45">arr_elts_getstr<pos:position pos:line="1521" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1521" pos:column="62">arr_elts_close<pos:position pos:line="1521" pos:column="76"/></name></expr></argument>)<pos:position pos:line="1521" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1521" pos:column="78"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1523" pos:column="5">errmsg<pos:position pos:line="1523" pos:column="11"/></name> <operator pos:line="1523" pos:column="12">=<pos:position pos:line="1523" pos:column="13"/></operator> <call><name pos:line="1523" pos:column="14">ap_build_config<pos:position pos:line="1523" pos:column="29"/></name><argument_list pos:line="1523" pos:column="29">(<argument><expr><operator pos:line="1523" pos:column="30">&amp;<pos:position pos:line="1523" pos:column="35"/></operator><name pos:line="1523" pos:column="31">parms<pos:position pos:line="1523" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1523" pos:column="38">p<pos:position pos:line="1523" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1523" pos:column="41">ptemp<pos:position pos:line="1523" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1523" pos:column="48">conftree<pos:position pos:line="1523" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1523" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1523" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1524" pos:column="5">ap_cfg_closefile<pos:position pos:line="1524" pos:column="21"/></name><argument_list pos:line="1524" pos:column="21">(<argument><expr><name><name pos:line="1524" pos:column="22">parms<pos:position pos:line="1524" pos:column="27"/></name><operator pos:line="1524" pos:column="27">.<pos:position pos:line="1524" pos:column="28"/></operator><name pos:line="1524" pos:column="28">config_file<pos:position pos:line="1524" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="1524" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1524" pos:column="41"/></expr_stmt>

    <if pos:line="1526" pos:column="5">if <condition pos:line="1526" pos:column="8">(<expr><name pos:line="1526" pos:column="9">errmsg<pos:position pos:line="1526" pos:column="15"/></name></expr>)<pos:position pos:line="1526" pos:column="16"/></condition><then pos:line="1526" pos:column="16"> <block pos:line="1526" pos:column="17">{
        <return pos:line="1527" pos:column="9">return <expr><call><name pos:line="1527" pos:column="16">apr_pstrcat<pos:position pos:line="1527" pos:column="27"/></name><argument_list pos:line="1527" pos:column="27">(<argument><expr><name pos:line="1527" pos:column="28">p<pos:position pos:line="1527" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1527" pos:column="31">"Syntax error in -C/-c directive: "<pos:position pos:line="1527" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="1527" pos:column="68">errmsg<pos:position pos:line="1527" pos:column="74"/></name></expr></argument>,
                           <argument><expr><name pos:line="1528" pos:column="28">NULL<pos:position pos:line="1528" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1528" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1528" pos:column="34"/></return>
    }<pos:position pos:line="1529" pos:column="6"/></block></then></if>

    <return pos:line="1531" pos:column="5">return <expr><name pos:line="1531" pos:column="12">NULL<pos:position pos:line="1531" pos:column="16"/></name></expr>;<pos:position pos:line="1531" pos:column="17"/></return>
}<pos:position pos:line="1532" pos:column="2"/></block></function>

<typedef pos:line="1534" pos:column="1">typedef <type><struct pos:line="1534" pos:column="9">struct <block pos:line="1534" pos:column="16">{
    <decl_stmt><decl><type><name pos:line="1535" pos:column="5">char<pos:position pos:line="1535" pos:column="9"/></name> <modifier pos:line="1535" pos:column="10">*<pos:position pos:line="1535" pos:column="11"/></modifier></type><name pos:line="1535" pos:column="11">fname<pos:position pos:line="1535" pos:column="16"/></name></decl>;<pos:position pos:line="1535" pos:column="17"/></decl_stmt>
}<pos:position pos:line="1536" pos:column="2"/></block></struct></type> <name pos:line="1536" pos:column="3">fnames<pos:position pos:line="1536" pos:column="9"/></name>;<pos:position pos:line="1536" pos:column="10"/></typedef>

<function><specifier pos:line="1538" pos:column="1">static<pos:position pos:line="1538" pos:column="7"/></specifier> <type><name pos:line="1538" pos:column="8">int<pos:position pos:line="1538" pos:column="11"/></name></type> <name pos:line="1538" pos:column="12">fname_alphasort<pos:position pos:line="1538" pos:column="27"/></name><parameter_list pos:line="1538" pos:column="27">(<parameter><decl><type><specifier pos:line="1538" pos:column="28">const<pos:position pos:line="1538" pos:column="33"/></specifier> <name pos:line="1538" pos:column="34">void<pos:position pos:line="1538" pos:column="38"/></name> <modifier pos:line="1538" pos:column="39">*<pos:position pos:line="1538" pos:column="40"/></modifier></type><name pos:line="1538" pos:column="40">fn1<pos:position pos:line="1538" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1538" pos:column="45">const<pos:position pos:line="1538" pos:column="50"/></specifier> <name pos:line="1538" pos:column="51">void<pos:position pos:line="1538" pos:column="55"/></name> <modifier pos:line="1538" pos:column="56">*<pos:position pos:line="1538" pos:column="57"/></modifier></type><name pos:line="1538" pos:column="57">fn2<pos:position pos:line="1538" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1538" pos:column="61"/></parameter_list>
<block pos:line="1539" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="1540" pos:column="5">const<pos:position pos:line="1540" pos:column="10"/></specifier> <name pos:line="1540" pos:column="11">fnames<pos:position pos:line="1540" pos:column="17"/></name> <modifier pos:line="1540" pos:column="18">*<pos:position pos:line="1540" pos:column="19"/></modifier></type><name pos:line="1540" pos:column="19">f1<pos:position pos:line="1540" pos:column="21"/></name> <init pos:line="1540" pos:column="22">= <expr><name pos:line="1540" pos:column="24">fn1<pos:position pos:line="1540" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="1540" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1541" pos:column="5">const<pos:position pos:line="1541" pos:column="10"/></specifier> <name pos:line="1541" pos:column="11">fnames<pos:position pos:line="1541" pos:column="17"/></name> <modifier pos:line="1541" pos:column="18">*<pos:position pos:line="1541" pos:column="19"/></modifier></type><name pos:line="1541" pos:column="19">f2<pos:position pos:line="1541" pos:column="21"/></name> <init pos:line="1541" pos:column="22">= <expr><name pos:line="1541" pos:column="24">fn2<pos:position pos:line="1541" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="1541" pos:column="28"/></decl_stmt>

    <return pos:line="1543" pos:column="5">return <expr><call><name pos:line="1543" pos:column="12">strcmp<pos:position pos:line="1543" pos:column="18"/></name><argument_list pos:line="1543" pos:column="18">(<argument><expr><name><name pos:line="1543" pos:column="19">f1<pos:position pos:line="1543" pos:column="21"/></name><operator pos:line="1543" pos:column="21">-&gt;<pos:position pos:line="1543" pos:column="26"/></operator><name pos:line="1543" pos:column="23">fname<pos:position pos:line="1543" pos:column="28"/></name></name></expr></argument>,<argument><expr><name><name pos:line="1543" pos:column="29">f2<pos:position pos:line="1543" pos:column="31"/></name><operator pos:line="1543" pos:column="31">-&gt;<pos:position pos:line="1543" pos:column="36"/></operator><name pos:line="1543" pos:column="33">fname<pos:position pos:line="1543" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="1543" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="1543" pos:column="40"/></return>
}<pos:position pos:line="1544" pos:column="2"/></block></function>

<function><specifier pos:line="1546" pos:column="1">static<pos:position pos:line="1546" pos:column="7"/></specifier> <type><specifier pos:line="1546" pos:column="8">const<pos:position pos:line="1546" pos:column="13"/></specifier> <name pos:line="1546" pos:column="14">char<pos:position pos:line="1546" pos:column="18"/></name> <modifier pos:line="1546" pos:column="19">*<pos:position pos:line="1546" pos:column="20"/></modifier></type><name pos:line="1546" pos:column="20">process_resource_config_nofnmatch<pos:position pos:line="1546" pos:column="53"/></name><parameter_list pos:line="1546" pos:column="53">(<parameter><decl><type><name pos:line="1546" pos:column="54">server_rec<pos:position pos:line="1546" pos:column="64"/></name> <modifier pos:line="1546" pos:column="65">*<pos:position pos:line="1546" pos:column="66"/></modifier></type><name pos:line="1546" pos:column="66">s<pos:position pos:line="1546" pos:column="67"/></name></decl></parameter>,
                                                     <parameter><decl><type><specifier pos:line="1547" pos:column="54">const<pos:position pos:line="1547" pos:column="59"/></specifier> <name pos:line="1547" pos:column="60">char<pos:position pos:line="1547" pos:column="64"/></name> <modifier pos:line="1547" pos:column="65">*<pos:position pos:line="1547" pos:column="66"/></modifier></type><name pos:line="1547" pos:column="66">fname<pos:position pos:line="1547" pos:column="71"/></name></decl></parameter>,
                                                     <parameter><decl><type><name pos:line="1548" pos:column="54">ap_directive_t<pos:position pos:line="1548" pos:column="68"/></name> <modifier pos:line="1548" pos:column="69">*<pos:position pos:line="1548" pos:column="70"/></modifier><modifier pos:line="1548" pos:column="70">*<pos:position pos:line="1548" pos:column="71"/></modifier></type><name pos:line="1548" pos:column="71">conftree<pos:position pos:line="1548" pos:column="79"/></name></decl></parameter>,
                                                     <parameter><decl><type><name pos:line="1549" pos:column="54">apr_pool_t<pos:position pos:line="1549" pos:column="64"/></name> <modifier pos:line="1549" pos:column="65">*<pos:position pos:line="1549" pos:column="66"/></modifier></type><name pos:line="1549" pos:column="66">p<pos:position pos:line="1549" pos:column="67"/></name></decl></parameter>,
                                                     <parameter><decl><type><name pos:line="1550" pos:column="54">apr_pool_t<pos:position pos:line="1550" pos:column="64"/></name> <modifier pos:line="1550" pos:column="65">*<pos:position pos:line="1550" pos:column="66"/></modifier></type><name pos:line="1550" pos:column="66">ptemp<pos:position pos:line="1550" pos:column="71"/></name></decl></parameter>,
                                                     <parameter><decl><type><name pos:line="1551" pos:column="54">unsigned<pos:position pos:line="1551" pos:column="62"/></name></type> <name pos:line="1551" pos:column="63">depth<pos:position pos:line="1551" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1551" pos:column="69"/></parameter_list>
<block pos:line="1552" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1553" pos:column="5">cmd_parms<pos:position pos:line="1553" pos:column="14"/></name></type> <name pos:line="1553" pos:column="15">parms<pos:position pos:line="1553" pos:column="20"/></name></decl>;<pos:position pos:line="1553" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1554" pos:column="5">ap_configfile_t<pos:position pos:line="1554" pos:column="20"/></name> <modifier pos:line="1554" pos:column="21">*<pos:position pos:line="1554" pos:column="22"/></modifier></type><name pos:line="1554" pos:column="22">cfp<pos:position pos:line="1554" pos:column="25"/></name></decl>;<pos:position pos:line="1554" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1555" pos:column="5">const<pos:position pos:line="1555" pos:column="10"/></specifier> <name pos:line="1555" pos:column="11">char<pos:position pos:line="1555" pos:column="15"/></name> <modifier pos:line="1555" pos:column="16">*<pos:position pos:line="1555" pos:column="17"/></modifier></type><name pos:line="1555" pos:column="17">error<pos:position pos:line="1555" pos:column="22"/></name></decl>;<pos:position pos:line="1555" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1556" pos:column="5">apr_status_t<pos:position pos:line="1556" pos:column="17"/></name></type> <name pos:line="1556" pos:column="18">rv<pos:position pos:line="1556" pos:column="20"/></name></decl>;<pos:position pos:line="1556" pos:column="21"/></decl_stmt>

    <if pos:line="1558" pos:column="5">if <condition pos:line="1558" pos:column="8">(<expr><call><name pos:line="1558" pos:column="9">ap_is_directory<pos:position pos:line="1558" pos:column="24"/></name><argument_list pos:line="1558" pos:column="24">(<argument><expr><name pos:line="1558" pos:column="25">p<pos:position pos:line="1558" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1558" pos:column="28">fname<pos:position pos:line="1558" pos:column="33"/></name></expr></argument>)<pos:position pos:line="1558" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="1558" pos:column="35"/></condition><then pos:line="1558" pos:column="35"> <block pos:line="1558" pos:column="36">{
        <decl_stmt><decl><type><name pos:line="1559" pos:column="9">apr_dir_t<pos:position pos:line="1559" pos:column="18"/></name> <modifier pos:line="1559" pos:column="19">*<pos:position pos:line="1559" pos:column="20"/></modifier></type><name pos:line="1559" pos:column="20">dirp<pos:position pos:line="1559" pos:column="24"/></name></decl>;<pos:position pos:line="1559" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1560" pos:column="9">apr_finfo_t<pos:position pos:line="1560" pos:column="20"/></name></type> <name pos:line="1560" pos:column="21">dirent<pos:position pos:line="1560" pos:column="27"/></name></decl>;<pos:position pos:line="1560" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1561" pos:column="9">int<pos:position pos:line="1561" pos:column="12"/></name></type> <name pos:line="1561" pos:column="13">current<pos:position pos:line="1561" pos:column="20"/></name></decl>;<pos:position pos:line="1561" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1562" pos:column="9">apr_array_header_t<pos:position pos:line="1562" pos:column="27"/></name> <modifier pos:line="1562" pos:column="28">*<pos:position pos:line="1562" pos:column="29"/></modifier></type><name pos:line="1562" pos:column="29">candidates<pos:position pos:line="1562" pos:column="39"/></name> <init pos:line="1562" pos:column="40">= <expr><name pos:line="1562" pos:column="42">NULL<pos:position pos:line="1562" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="1562" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1563" pos:column="9">fnames<pos:position pos:line="1563" pos:column="15"/></name> <modifier pos:line="1563" pos:column="16">*<pos:position pos:line="1563" pos:column="17"/></modifier></type><name pos:line="1563" pos:column="17">fnew<pos:position pos:line="1563" pos:column="21"/></name></decl>;<pos:position pos:line="1563" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1564" pos:column="9">char<pos:position pos:line="1564" pos:column="13"/></name> <modifier pos:line="1564" pos:column="14">*<pos:position pos:line="1564" pos:column="15"/></modifier></type><name pos:line="1564" pos:column="15">path<pos:position pos:line="1564" pos:column="19"/></name> <init pos:line="1564" pos:column="20">= <expr><call><name pos:line="1564" pos:column="22">apr_pstrdup<pos:position pos:line="1564" pos:column="33"/></name><argument_list pos:line="1564" pos:column="33">(<argument><expr><name pos:line="1564" pos:column="34">p<pos:position pos:line="1564" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1564" pos:column="37">fname<pos:position pos:line="1564" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1564" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1564" pos:column="44"/></decl_stmt>

        <if pos:line="1566" pos:column="9">if <condition pos:line="1566" pos:column="12">(<expr><operator pos:line="1566" pos:column="13">++<pos:position pos:line="1566" pos:column="15"/></operator><name pos:line="1566" pos:column="15">depth<pos:position pos:line="1566" pos:column="20"/></name> <operator pos:line="1566" pos:column="21">&gt;<pos:position pos:line="1566" pos:column="25"/></operator> <name pos:line="1566" pos:column="23">AP_MAX_INCLUDE_DIR_DEPTH<pos:position pos:line="1566" pos:column="47"/></name></expr>)<pos:position pos:line="1566" pos:column="48"/></condition><then pos:line="1566" pos:column="48"> <block pos:line="1566" pos:column="49">{
            <return pos:line="1567" pos:column="13">return <expr><call><name pos:line="1567" pos:column="20">apr_psprintf<pos:position pos:line="1567" pos:column="32"/></name><argument_list pos:line="1567" pos:column="32">(<argument><expr><name pos:line="1567" pos:column="33">p<pos:position pos:line="1567" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1567" pos:column="36">"Directory %s exceeds the maximum include "<pos:position pos:line="1567" pos:column="79"/></literal>
                                <literal type="string" pos:line="1568" pos:column="33">"directory nesting level of %u. You have "<pos:position pos:line="1568" pos:column="75"/></literal>
                                <literal type="string" pos:line="1569" pos:column="33">"probably a recursion somewhere."<pos:position pos:line="1569" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="1569" pos:column="68">path<pos:position pos:line="1569" pos:column="72"/></name></expr></argument>,
                                <argument><expr><name pos:line="1570" pos:column="33">AP_MAX_INCLUDE_DIR_DEPTH<pos:position pos:line="1570" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1570" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1570" pos:column="59"/></return>
        }<pos:position pos:line="1571" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="1573" pos:column="9">/*
         * first course of business is to grok all the directory
         * entries here and store 'em away. Recall we need full pathnames
         * for this.
         */</comment>
        <expr_stmt><expr><name pos:line="1578" pos:column="9">rv<pos:position pos:line="1578" pos:column="11"/></name> <operator pos:line="1578" pos:column="12">=<pos:position pos:line="1578" pos:column="13"/></operator> <call><name pos:line="1578" pos:column="14">apr_dir_open<pos:position pos:line="1578" pos:column="26"/></name><argument_list pos:line="1578" pos:column="26">(<argument><expr><operator pos:line="1578" pos:column="27">&amp;<pos:position pos:line="1578" pos:column="32"/></operator><name pos:line="1578" pos:column="28">dirp<pos:position pos:line="1578" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1578" pos:column="34">path<pos:position pos:line="1578" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1578" pos:column="40">p<pos:position pos:line="1578" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1578" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1578" pos:column="43"/></expr_stmt>
        <if pos:line="1579" pos:column="9">if <condition pos:line="1579" pos:column="12">(<expr><name pos:line="1579" pos:column="13">rv<pos:position pos:line="1579" pos:column="15"/></name> <operator pos:line="1579" pos:column="16">!=<pos:position pos:line="1579" pos:column="18"/></operator> <name pos:line="1579" pos:column="19">APR_SUCCESS<pos:position pos:line="1579" pos:column="30"/></name></expr>)<pos:position pos:line="1579" pos:column="31"/></condition><then pos:line="1579" pos:column="31"> <block pos:line="1579" pos:column="32">{
            <decl_stmt><decl><type><name pos:line="1580" pos:column="13">char<pos:position pos:line="1580" pos:column="17"/></name></type> <name><name pos:line="1580" pos:column="18">errmsg<pos:position pos:line="1580" pos:column="24"/></name><index pos:line="1580" pos:column="24">[<expr><literal type="number" pos:line="1580" pos:column="25">120<pos:position pos:line="1580" pos:column="28"/></literal></expr>]<pos:position pos:line="1580" pos:column="29"/></index></name></decl>;<pos:position pos:line="1580" pos:column="30"/></decl_stmt>
            <return pos:line="1581" pos:column="13">return <expr><call><name pos:line="1581" pos:column="20">apr_psprintf<pos:position pos:line="1581" pos:column="32"/></name><argument_list pos:line="1581" pos:column="32">(<argument><expr><name pos:line="1581" pos:column="33">p<pos:position pos:line="1581" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1581" pos:column="36">"Could not open config directory %s: %s"<pos:position pos:line="1581" pos:column="76"/></literal></expr></argument>,
                                <argument><expr><name pos:line="1582" pos:column="33">path<pos:position pos:line="1582" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="1582" pos:column="39">apr_strerror<pos:position pos:line="1582" pos:column="51"/></name><argument_list pos:line="1582" pos:column="51">(<argument><expr><name pos:line="1582" pos:column="52">rv<pos:position pos:line="1582" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1582" pos:column="56">errmsg<pos:position pos:line="1582" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="1582" pos:column="64">sizeof <name pos:line="1582" pos:column="71">errmsg<pos:position pos:line="1582" pos:column="77"/></name></sizeof></expr></argument>)<pos:position pos:line="1582" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="1582" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1582" pos:column="80"/></return>
        }<pos:position pos:line="1583" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="1585" pos:column="9">candidates<pos:position pos:line="1585" pos:column="19"/></name> <operator pos:line="1585" pos:column="20">=<pos:position pos:line="1585" pos:column="21"/></operator> <call><name pos:line="1585" pos:column="22">apr_array_make<pos:position pos:line="1585" pos:column="36"/></name><argument_list pos:line="1585" pos:column="36">(<argument><expr><name pos:line="1585" pos:column="37">p<pos:position pos:line="1585" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1585" pos:column="40">1<pos:position pos:line="1585" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="1585" pos:column="43">sizeof<argument_list pos:line="1585" pos:column="49">(<argument><expr><name pos:line="1585" pos:column="50">fnames<pos:position pos:line="1585" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1585" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1585" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1585" pos:column="59"/></expr_stmt>
        <while pos:line="1586" pos:column="9">while <condition pos:line="1586" pos:column="15">(<expr><call><name pos:line="1586" pos:column="16">apr_dir_read<pos:position pos:line="1586" pos:column="28"/></name><argument_list pos:line="1586" pos:column="28">(<argument><expr><operator pos:line="1586" pos:column="29">&amp;<pos:position pos:line="1586" pos:column="34"/></operator><name pos:line="1586" pos:column="30">dirent<pos:position pos:line="1586" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1586" pos:column="38">APR_FINFO_DIRENT<pos:position pos:line="1586" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1586" pos:column="56">dirp<pos:position pos:line="1586" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1586" pos:column="61"/></argument_list></call> <operator pos:line="1586" pos:column="62">==<pos:position pos:line="1586" pos:column="64"/></operator> <name pos:line="1586" pos:column="65">APR_SUCCESS<pos:position pos:line="1586" pos:column="76"/></name></expr>)<pos:position pos:line="1586" pos:column="77"/></condition> <block pos:line="1586" pos:column="78">{
            <comment type="block" pos:line="1587" pos:column="13">/* strip out '.' and '..' */</comment>
            <if pos:line="1588" pos:column="13">if <condition pos:line="1588" pos:column="16">(<expr><call><name pos:line="1588" pos:column="17">strcmp<pos:position pos:line="1588" pos:column="23"/></name><argument_list pos:line="1588" pos:column="23">(<argument><expr><name><name pos:line="1588" pos:column="24">dirent<pos:position pos:line="1588" pos:column="30"/></name><operator pos:line="1588" pos:column="30">.<pos:position pos:line="1588" pos:column="31"/></operator><name pos:line="1588" pos:column="31">name<pos:position pos:line="1588" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1588" pos:column="37">"."<pos:position pos:line="1588" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="1588" pos:column="41"/></argument_list></call>
                <operator pos:line="1589" pos:column="17">&amp;&amp;<pos:position pos:line="1589" pos:column="27"/></operator> <call><name pos:line="1589" pos:column="20">strcmp<pos:position pos:line="1589" pos:column="26"/></name><argument_list pos:line="1589" pos:column="26">(<argument><expr><name><name pos:line="1589" pos:column="27">dirent<pos:position pos:line="1589" pos:column="33"/></name><operator pos:line="1589" pos:column="33">.<pos:position pos:line="1589" pos:column="34"/></operator><name pos:line="1589" pos:column="34">name<pos:position pos:line="1589" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1589" pos:column="40">".."<pos:position pos:line="1589" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="1589" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="1589" pos:column="46"/></condition><then pos:line="1589" pos:column="46"> <block pos:line="1589" pos:column="47">{
                <expr_stmt><expr><name pos:line="1590" pos:column="17">fnew<pos:position pos:line="1590" pos:column="21"/></name> <operator pos:line="1590" pos:column="22">=<pos:position pos:line="1590" pos:column="23"/></operator> <operator pos:line="1590" pos:column="24">(<pos:position pos:line="1590" pos:column="25"/></operator><name pos:line="1590" pos:column="25">fnames<pos:position pos:line="1590" pos:column="31"/></name> <operator pos:line="1590" pos:column="32">*<pos:position pos:line="1590" pos:column="33"/></operator><operator pos:line="1590" pos:column="33">)<pos:position pos:line="1590" pos:column="34"/></operator> <call><name pos:line="1590" pos:column="35">apr_array_push<pos:position pos:line="1590" pos:column="49"/></name><argument_list pos:line="1590" pos:column="49">(<argument><expr><name pos:line="1590" pos:column="50">candidates<pos:position pos:line="1590" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1590" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1590" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="1591" pos:column="17">fnew<pos:position pos:line="1591" pos:column="21"/></name><operator pos:line="1591" pos:column="21">-&gt;<pos:position pos:line="1591" pos:column="26"/></operator><name pos:line="1591" pos:column="23">fname<pos:position pos:line="1591" pos:column="28"/></name></name> <operator pos:line="1591" pos:column="29">=<pos:position pos:line="1591" pos:column="30"/></operator> <call><name pos:line="1591" pos:column="31">ap_make_full_path<pos:position pos:line="1591" pos:column="48"/></name><argument_list pos:line="1591" pos:column="48">(<argument><expr><name pos:line="1591" pos:column="49">p<pos:position pos:line="1591" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1591" pos:column="52">path<pos:position pos:line="1591" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="1591" pos:column="58">dirent<pos:position pos:line="1591" pos:column="64"/></name><operator pos:line="1591" pos:column="64">.<pos:position pos:line="1591" pos:column="65"/></operator><name pos:line="1591" pos:column="65">name<pos:position pos:line="1591" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="1591" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1591" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="1592" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1593" pos:column="10"/></block></while>

        <expr_stmt><expr><call><name pos:line="1595" pos:column="9">apr_dir_close<pos:position pos:line="1595" pos:column="22"/></name><argument_list pos:line="1595" pos:column="22">(<argument><expr><name pos:line="1595" pos:column="23">dirp<pos:position pos:line="1595" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1595" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1595" pos:column="29"/></expr_stmt>
        <if pos:line="1596" pos:column="9">if <condition pos:line="1596" pos:column="12">(<expr><name><name pos:line="1596" pos:column="13">candidates<pos:position pos:line="1596" pos:column="23"/></name><operator pos:line="1596" pos:column="23">-&gt;<pos:position pos:line="1596" pos:column="28"/></operator><name pos:line="1596" pos:column="25">nelts<pos:position pos:line="1596" pos:column="30"/></name></name> <operator pos:line="1596" pos:column="31">!=<pos:position pos:line="1596" pos:column="33"/></operator> <literal type="number" pos:line="1596" pos:column="34">0<pos:position pos:line="1596" pos:column="35"/></literal></expr>)<pos:position pos:line="1596" pos:column="36"/></condition><then pos:line="1596" pos:column="36"> <block pos:line="1596" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="1597" pos:column="13">qsort<pos:position pos:line="1597" pos:column="18"/></name><argument_list pos:line="1597" pos:column="18">(<argument><expr><operator pos:line="1597" pos:column="19">(<pos:position pos:line="1597" pos:column="20"/></operator><name pos:line="1597" pos:column="20">void<pos:position pos:line="1597" pos:column="24"/></name> <operator pos:line="1597" pos:column="25">*<pos:position pos:line="1597" pos:column="26"/></operator><operator pos:line="1597" pos:column="26">)<pos:position pos:line="1597" pos:column="27"/></operator> <name><name pos:line="1597" pos:column="28">candidates<pos:position pos:line="1597" pos:column="38"/></name><operator pos:line="1597" pos:column="38">-&gt;<pos:position pos:line="1597" pos:column="43"/></operator><name pos:line="1597" pos:column="40">elts<pos:position pos:line="1597" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1597" pos:column="46">candidates<pos:position pos:line="1597" pos:column="56"/></name><operator pos:line="1597" pos:column="56">-&gt;<pos:position pos:line="1597" pos:column="61"/></operator><name pos:line="1597" pos:column="58">nelts<pos:position pos:line="1597" pos:column="63"/></name></name></expr></argument>,
                  <argument><expr><sizeof pos:line="1598" pos:column="19">sizeof<argument_list pos:line="1598" pos:column="25">(<argument><expr><name pos:line="1598" pos:column="26">fnames<pos:position pos:line="1598" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1598" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="1598" pos:column="35">fname_alphasort<pos:position pos:line="1598" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1598" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1598" pos:column="52"/></expr_stmt>

            <comment type="block" pos:line="1600" pos:column="13">/*
             * Now recurse these... we handle errors and subdirectories
             * via the recursion, which is nice
             */</comment>
            <for pos:line="1604" pos:column="13">for <control pos:line="1604" pos:column="17">(<init><expr><name pos:line="1604" pos:column="18">current<pos:position pos:line="1604" pos:column="25"/></name> <operator pos:line="1604" pos:column="26">=<pos:position pos:line="1604" pos:column="27"/></operator> <literal type="number" pos:line="1604" pos:column="28">0<pos:position pos:line="1604" pos:column="29"/></literal></expr>;<pos:position pos:line="1604" pos:column="30"/></init> <condition><expr><name pos:line="1604" pos:column="31">current<pos:position pos:line="1604" pos:column="38"/></name> <operator pos:line="1604" pos:column="39">&lt;<pos:position pos:line="1604" pos:column="43"/></operator> <name><name pos:line="1604" pos:column="41">candidates<pos:position pos:line="1604" pos:column="51"/></name><operator pos:line="1604" pos:column="51">-&gt;<pos:position pos:line="1604" pos:column="56"/></operator><name pos:line="1604" pos:column="53">nelts<pos:position pos:line="1604" pos:column="58"/></name></name></expr>;<pos:position pos:line="1604" pos:column="59"/></condition> <incr><expr><operator pos:line="1604" pos:column="60">++<pos:position pos:line="1604" pos:column="62"/></operator><name pos:line="1604" pos:column="62">current<pos:position pos:line="1604" pos:column="69"/></name></expr></incr>)<pos:position pos:line="1604" pos:column="70"/></control> <block pos:line="1604" pos:column="71">{
                <expr_stmt><expr><name pos:line="1605" pos:column="17">fnew<pos:position pos:line="1605" pos:column="21"/></name> <operator pos:line="1605" pos:column="22">=<pos:position pos:line="1605" pos:column="23"/></operator> <operator pos:line="1605" pos:column="24">&amp;<pos:position pos:line="1605" pos:column="29"/></operator><operator pos:line="1605" pos:column="25">(<pos:position pos:line="1605" pos:column="26"/></operator><operator pos:line="1605" pos:column="26">(<pos:position pos:line="1605" pos:column="27"/></operator><name pos:line="1605" pos:column="27">fnames<pos:position pos:line="1605" pos:column="33"/></name> <operator pos:line="1605" pos:column="34">*<pos:position pos:line="1605" pos:column="35"/></operator><operator pos:line="1605" pos:column="35">)<pos:position pos:line="1605" pos:column="36"/></operator> <name><name pos:line="1605" pos:column="37">candidates<pos:position pos:line="1605" pos:column="47"/></name><operator pos:line="1605" pos:column="47">-&gt;<pos:position pos:line="1605" pos:column="52"/></operator><name pos:line="1605" pos:column="49">elts<pos:position pos:line="1605" pos:column="53"/></name></name><operator pos:line="1605" pos:column="53">)<pos:position pos:line="1605" pos:column="54"/></operator><index pos:line="1605" pos:column="54">[<expr><name pos:line="1605" pos:column="55">current<pos:position pos:line="1605" pos:column="62"/></name></expr>]<pos:position pos:line="1605" pos:column="63"/></index></expr>;<pos:position pos:line="1605" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name pos:line="1606" pos:column="17">error<pos:position pos:line="1606" pos:column="22"/></name> <operator pos:line="1606" pos:column="23">=<pos:position pos:line="1606" pos:column="24"/></operator> <call><name pos:line="1606" pos:column="25">process_resource_config_nofnmatch<pos:position pos:line="1606" pos:column="58"/></name><argument_list pos:line="1606" pos:column="58">(<argument><expr><name pos:line="1606" pos:column="59">s<pos:position pos:line="1606" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="1606" pos:column="62">fnew<pos:position pos:line="1606" pos:column="66"/></name><operator pos:line="1606" pos:column="66">-&gt;<pos:position pos:line="1606" pos:column="71"/></operator><name pos:line="1606" pos:column="68">fname<pos:position pos:line="1606" pos:column="73"/></name></name></expr></argument>,
                                                          <argument><expr><name pos:line="1607" pos:column="59">conftree<pos:position pos:line="1607" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="1607" pos:column="69">p<pos:position pos:line="1607" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="1607" pos:column="72">ptemp<pos:position pos:line="1607" pos:column="77"/></name></expr></argument>,
                                                          <argument><expr><name pos:line="1608" pos:column="59">depth<pos:position pos:line="1608" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1608" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="1608" pos:column="66"/></expr_stmt>
                <if pos:line="1609" pos:column="17">if <condition pos:line="1609" pos:column="20">(<expr><name pos:line="1609" pos:column="21">error<pos:position pos:line="1609" pos:column="26"/></name></expr>)<pos:position pos:line="1609" pos:column="27"/></condition><then pos:line="1609" pos:column="27"> <block pos:line="1609" pos:column="28">{
                    <return pos:line="1610" pos:column="21">return <expr><name pos:line="1610" pos:column="28">error<pos:position pos:line="1610" pos:column="33"/></name></expr>;<pos:position pos:line="1610" pos:column="34"/></return>
                }<pos:position pos:line="1611" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1612" pos:column="14"/></block></for>
        }<pos:position pos:line="1613" pos:column="10"/></block></then></if>

        <return pos:line="1615" pos:column="9">return <expr><name pos:line="1615" pos:column="16">NULL<pos:position pos:line="1615" pos:column="20"/></name></expr>;<pos:position pos:line="1615" pos:column="21"/></return>
    }<pos:position pos:line="1616" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="1618" pos:column="5">/* GCC's initialization extensions are soooo nice here... */</comment>
    <expr_stmt><expr><name pos:line="1619" pos:column="5">parms<pos:position pos:line="1619" pos:column="10"/></name> <operator pos:line="1619" pos:column="11">=<pos:position pos:line="1619" pos:column="12"/></operator> <name pos:line="1619" pos:column="13">default_parms<pos:position pos:line="1619" pos:column="26"/></name></expr>;<pos:position pos:line="1619" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1620" pos:column="5">parms<pos:position pos:line="1620" pos:column="10"/></name><operator pos:line="1620" pos:column="10">.<pos:position pos:line="1620" pos:column="11"/></operator><name pos:line="1620" pos:column="11">pool<pos:position pos:line="1620" pos:column="15"/></name></name> <operator pos:line="1620" pos:column="16">=<pos:position pos:line="1620" pos:column="17"/></operator> <name pos:line="1620" pos:column="18">p<pos:position pos:line="1620" pos:column="19"/></name></expr>;<pos:position pos:line="1620" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1621" pos:column="5">parms<pos:position pos:line="1621" pos:column="10"/></name><operator pos:line="1621" pos:column="10">.<pos:position pos:line="1621" pos:column="11"/></operator><name pos:line="1621" pos:column="11">temp_pool<pos:position pos:line="1621" pos:column="20"/></name></name> <operator pos:line="1621" pos:column="21">=<pos:position pos:line="1621" pos:column="22"/></operator> <name pos:line="1621" pos:column="23">ptemp<pos:position pos:line="1621" pos:column="28"/></name></expr>;<pos:position pos:line="1621" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1622" pos:column="5">parms<pos:position pos:line="1622" pos:column="10"/></name><operator pos:line="1622" pos:column="10">.<pos:position pos:line="1622" pos:column="11"/></operator><name pos:line="1622" pos:column="11">server<pos:position pos:line="1622" pos:column="17"/></name></name> <operator pos:line="1622" pos:column="18">=<pos:position pos:line="1622" pos:column="19"/></operator> <name pos:line="1622" pos:column="20">s<pos:position pos:line="1622" pos:column="21"/></name></expr>;<pos:position pos:line="1622" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1623" pos:column="5">parms<pos:position pos:line="1623" pos:column="10"/></name><operator pos:line="1623" pos:column="10">.<pos:position pos:line="1623" pos:column="11"/></operator><name pos:line="1623" pos:column="11">override<pos:position pos:line="1623" pos:column="19"/></name></name> <operator pos:line="1623" pos:column="20">=<pos:position pos:line="1623" pos:column="21"/></operator> <operator pos:line="1623" pos:column="22">(<pos:position pos:line="1623" pos:column="23"/></operator><name pos:line="1623" pos:column="23">RSRC_CONF<pos:position pos:line="1623" pos:column="32"/></name> <operator pos:line="1623" pos:column="33">|<pos:position pos:line="1623" pos:column="34"/></operator> <name pos:line="1623" pos:column="35">OR_ALL<pos:position pos:line="1623" pos:column="41"/></name><operator pos:line="1623" pos:column="41">)<pos:position pos:line="1623" pos:column="42"/></operator> <operator pos:line="1623" pos:column="43">&amp;<pos:position pos:line="1623" pos:column="48"/></operator> <operator pos:line="1623" pos:column="45">~<pos:position pos:line="1623" pos:column="46"/></operator><operator pos:line="1623" pos:column="46">(<pos:position pos:line="1623" pos:column="47"/></operator><name pos:line="1623" pos:column="47">OR_AUTHCFG<pos:position pos:line="1623" pos:column="57"/></name> <operator pos:line="1623" pos:column="58">|<pos:position pos:line="1623" pos:column="59"/></operator> <name pos:line="1623" pos:column="60">OR_LIMIT<pos:position pos:line="1623" pos:column="68"/></name><operator pos:line="1623" pos:column="68">)<pos:position pos:line="1623" pos:column="69"/></operator></expr>;<pos:position pos:line="1623" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1624" pos:column="5">parms<pos:position pos:line="1624" pos:column="10"/></name><operator pos:line="1624" pos:column="10">.<pos:position pos:line="1624" pos:column="11"/></operator><name pos:line="1624" pos:column="11">override_opts<pos:position pos:line="1624" pos:column="24"/></name></name> <operator pos:line="1624" pos:column="25">=<pos:position pos:line="1624" pos:column="26"/></operator> <name pos:line="1624" pos:column="27">OPT_ALL<pos:position pos:line="1624" pos:column="34"/></name> <operator pos:line="1624" pos:column="35">|<pos:position pos:line="1624" pos:column="36"/></operator> <name pos:line="1624" pos:column="37">OPT_SYM_OWNER<pos:position pos:line="1624" pos:column="50"/></name> <operator pos:line="1624" pos:column="51">|<pos:position pos:line="1624" pos:column="52"/></operator> <name pos:line="1624" pos:column="53">OPT_MULTI<pos:position pos:line="1624" pos:column="62"/></name></expr>;<pos:position pos:line="1624" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1626" pos:column="5">rv<pos:position pos:line="1626" pos:column="7"/></name> <operator pos:line="1626" pos:column="8">=<pos:position pos:line="1626" pos:column="9"/></operator> <call><name pos:line="1626" pos:column="10">ap_pcfg_openfile<pos:position pos:line="1626" pos:column="26"/></name><argument_list pos:line="1626" pos:column="26">(<argument><expr><operator pos:line="1626" pos:column="27">&amp;<pos:position pos:line="1626" pos:column="32"/></operator><name pos:line="1626" pos:column="28">cfp<pos:position pos:line="1626" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1626" pos:column="33">p<pos:position pos:line="1626" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1626" pos:column="36">fname<pos:position pos:line="1626" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1626" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1626" pos:column="43"/></expr_stmt>
    <if pos:line="1627" pos:column="5">if <condition pos:line="1627" pos:column="8">(<expr><name pos:line="1627" pos:column="9">rv<pos:position pos:line="1627" pos:column="11"/></name> <operator pos:line="1627" pos:column="12">!=<pos:position pos:line="1627" pos:column="14"/></operator> <name pos:line="1627" pos:column="15">APR_SUCCESS<pos:position pos:line="1627" pos:column="26"/></name></expr>)<pos:position pos:line="1627" pos:column="27"/></condition><then pos:line="1627" pos:column="27"> <block pos:line="1627" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="1628" pos:column="9">char<pos:position pos:line="1628" pos:column="13"/></name></type> <name><name pos:line="1628" pos:column="14">errmsg<pos:position pos:line="1628" pos:column="20"/></name><index pos:line="1628" pos:column="20">[<expr><literal type="number" pos:line="1628" pos:column="21">120<pos:position pos:line="1628" pos:column="24"/></literal></expr>]<pos:position pos:line="1628" pos:column="25"/></index></name></decl>;<pos:position pos:line="1628" pos:column="26"/></decl_stmt>
        <return pos:line="1629" pos:column="9">return <expr><call><name pos:line="1629" pos:column="16">apr_psprintf<pos:position pos:line="1629" pos:column="28"/></name><argument_list pos:line="1629" pos:column="28">(<argument><expr><name pos:line="1629" pos:column="29">p<pos:position pos:line="1629" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1629" pos:column="32">"Could not open configuration file %s: %s"<pos:position pos:line="1629" pos:column="74"/></literal></expr></argument>,
                            <argument><expr><name pos:line="1630" pos:column="29">fname<pos:position pos:line="1630" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="1630" pos:column="36">apr_strerror<pos:position pos:line="1630" pos:column="48"/></name><argument_list pos:line="1630" pos:column="48">(<argument><expr><name pos:line="1630" pos:column="49">rv<pos:position pos:line="1630" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1630" pos:column="53">errmsg<pos:position pos:line="1630" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="1630" pos:column="61">sizeof <name pos:line="1630" pos:column="68">errmsg<pos:position pos:line="1630" pos:column="74"/></name></sizeof></expr></argument>)<pos:position pos:line="1630" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="1630" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="1630" pos:column="77"/></return>
    }<pos:position pos:line="1631" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="1633" pos:column="5">parms<pos:position pos:line="1633" pos:column="10"/></name><operator pos:line="1633" pos:column="10">.<pos:position pos:line="1633" pos:column="11"/></operator><name pos:line="1633" pos:column="11">config_file<pos:position pos:line="1633" pos:column="22"/></name></name> <operator pos:line="1633" pos:column="23">=<pos:position pos:line="1633" pos:column="24"/></operator> <name pos:line="1633" pos:column="25">cfp<pos:position pos:line="1633" pos:column="28"/></name></expr>;<pos:position pos:line="1633" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="1634" pos:column="5">error<pos:position pos:line="1634" pos:column="10"/></name> <operator pos:line="1634" pos:column="11">=<pos:position pos:line="1634" pos:column="12"/></operator> <call><name pos:line="1634" pos:column="13">ap_build_config<pos:position pos:line="1634" pos:column="28"/></name><argument_list pos:line="1634" pos:column="28">(<argument><expr><operator pos:line="1634" pos:column="29">&amp;<pos:position pos:line="1634" pos:column="34"/></operator><name pos:line="1634" pos:column="30">parms<pos:position pos:line="1634" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1634" pos:column="37">p<pos:position pos:line="1634" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1634" pos:column="40">ptemp<pos:position pos:line="1634" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1634" pos:column="47">conftree<pos:position pos:line="1634" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1634" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1634" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1635" pos:column="5">ap_cfg_closefile<pos:position pos:line="1635" pos:column="21"/></name><argument_list pos:line="1635" pos:column="21">(<argument><expr><name pos:line="1635" pos:column="22">cfp<pos:position pos:line="1635" pos:column="25"/></name></expr></argument>)<pos:position pos:line="1635" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="1635" pos:column="27"/></expr_stmt>

    <if pos:line="1637" pos:column="5">if <condition pos:line="1637" pos:column="8">(<expr><name pos:line="1637" pos:column="9">error<pos:position pos:line="1637" pos:column="14"/></name></expr>)<pos:position pos:line="1637" pos:column="15"/></condition><then pos:line="1637" pos:column="15"> <block pos:line="1637" pos:column="16">{
        <return pos:line="1638" pos:column="9">return <expr><call><name pos:line="1638" pos:column="16">apr_psprintf<pos:position pos:line="1638" pos:column="28"/></name><argument_list pos:line="1638" pos:column="28">(<argument><expr><name pos:line="1638" pos:column="29">p<pos:position pos:line="1638" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1638" pos:column="32">"Syntax error on line %d of %s: %s"<pos:position pos:line="1638" pos:column="67"/></literal></expr></argument>,
                            <argument><expr><name><name pos:line="1639" pos:column="29">parms<pos:position pos:line="1639" pos:column="34"/></name><operator pos:line="1639" pos:column="34">.<pos:position pos:line="1639" pos:column="35"/></operator><name pos:line="1639" pos:column="35">err_directive<pos:position pos:line="1639" pos:column="48"/></name><operator pos:line="1639" pos:column="48">-&gt;<pos:position pos:line="1639" pos:column="53"/></operator><name pos:line="1639" pos:column="50">line_num<pos:position pos:line="1639" pos:column="58"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="1640" pos:column="29">parms<pos:position pos:line="1640" pos:column="34"/></name><operator pos:line="1640" pos:column="34">.<pos:position pos:line="1640" pos:column="35"/></operator><name pos:line="1640" pos:column="35">err_directive<pos:position pos:line="1640" pos:column="48"/></name><operator pos:line="1640" pos:column="48">-&gt;<pos:position pos:line="1640" pos:column="53"/></operator><name pos:line="1640" pos:column="50">filename<pos:position pos:line="1640" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="1640" pos:column="60">error<pos:position pos:line="1640" pos:column="65"/></name></expr></argument>)<pos:position pos:line="1640" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1640" pos:column="67"/></return>
    }<pos:position pos:line="1641" pos:column="6"/></block></then></if>

    <return pos:line="1643" pos:column="5">return <expr><name pos:line="1643" pos:column="12">NULL<pos:position pos:line="1643" pos:column="16"/></name></expr>;<pos:position pos:line="1643" pos:column="17"/></return>
}<pos:position pos:line="1644" pos:column="2"/></block></function>

<macro><name pos:line="1646" pos:column="1">AP_DECLARE<pos:position pos:line="1646" pos:column="11"/></name><argument_list pos:line="1646" pos:column="11">(<argument pos:line="1646" pos:column="12">const char *<pos:position pos:line="1646" pos:column="24"/></argument>)<pos:position pos:line="1646" pos:column="25"/></argument_list></macro> <macro><name pos:line="1646" pos:column="26">ap_process_resource_config<pos:position pos:line="1646" pos:column="52"/></name><argument_list pos:line="1646" pos:column="52">(<argument pos:line="1646" pos:column="53">server_rec *s<pos:position pos:line="1646" pos:column="66"/></argument>,
                                                    <argument pos:line="1647" pos:column="53">const char *fname<pos:position pos:line="1647" pos:column="70"/></argument>,
                                                    <argument pos:line="1648" pos:column="53">ap_directive_t **conftree<pos:position pos:line="1648" pos:column="78"/></argument>,
                                                    <argument pos:line="1649" pos:column="53">apr_pool_t *p<pos:position pos:line="1649" pos:column="66"/></argument>,
                                                    <argument pos:line="1650" pos:column="53">apr_pool_t *ptemp<pos:position pos:line="1650" pos:column="70"/></argument>)<pos:position pos:line="1650" pos:column="71"/></argument_list></macro>
<block pos:line="1651" pos:column="1">{
    <comment type="block" pos:line="1652" pos:column="5">/* XXX: lstat() won't work on the wildcard pattern...
     */</comment>

    <comment type="block" pos:line="1655" pos:column="5">/* don't require conf/httpd.conf if we have a -C or -c switch */</comment>
    <if pos:line="1656" pos:column="5">if <condition pos:line="1656" pos:column="8">(<expr><operator pos:line="1656" pos:column="9">(<pos:position pos:line="1656" pos:column="10"/></operator><name><name pos:line="1656" pos:column="10">ap_server_pre_read_config<pos:position pos:line="1656" pos:column="35"/></name><operator pos:line="1656" pos:column="35">-&gt;<pos:position pos:line="1656" pos:column="40"/></operator><name pos:line="1656" pos:column="37">nelts<pos:position pos:line="1656" pos:column="42"/></name></name>
        <operator pos:line="1657" pos:column="9">||<pos:position pos:line="1657" pos:column="11"/></operator> <name><name pos:line="1657" pos:column="12">ap_server_post_read_config<pos:position pos:line="1657" pos:column="38"/></name><operator pos:line="1657" pos:column="38">-&gt;<pos:position pos:line="1657" pos:column="43"/></operator><name pos:line="1657" pos:column="40">nelts<pos:position pos:line="1657" pos:column="45"/></name></name><operator pos:line="1657" pos:column="45">)<pos:position pos:line="1657" pos:column="46"/></operator>
        <operator pos:line="1658" pos:column="9">&amp;&amp;<pos:position pos:line="1658" pos:column="19"/></operator> <operator pos:line="1658" pos:column="12">!<pos:position pos:line="1658" pos:column="13"/></operator><operator pos:line="1658" pos:column="13">(<pos:position pos:line="1658" pos:column="14"/></operator><call><name pos:line="1658" pos:column="14">strcmp<pos:position pos:line="1658" pos:column="20"/></name><argument_list pos:line="1658" pos:column="20">(<argument><expr><name pos:line="1658" pos:column="21">fname<pos:position pos:line="1658" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="1658" pos:column="28">ap_server_root_relative<pos:position pos:line="1658" pos:column="51"/></name><argument_list pos:line="1658" pos:column="51">(<argument><expr><name pos:line="1658" pos:column="52">p<pos:position pos:line="1658" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1658" pos:column="55">SERVER_CONFIG_FILE<pos:position pos:line="1658" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1658" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="1658" pos:column="75"/></argument_list></call><operator pos:line="1658" pos:column="75">)<pos:position pos:line="1658" pos:column="76"/></operator></expr>)<pos:position pos:line="1658" pos:column="77"/></condition><then pos:line="1658" pos:column="77"> <block pos:line="1658" pos:column="78">{
        <decl_stmt><decl><type><name pos:line="1659" pos:column="9">apr_finfo_t<pos:position pos:line="1659" pos:column="20"/></name></type> <name pos:line="1659" pos:column="21">finfo<pos:position pos:line="1659" pos:column="26"/></name></decl>;<pos:position pos:line="1659" pos:column="27"/></decl_stmt>

        <if pos:line="1661" pos:column="9">if <condition pos:line="1661" pos:column="12">(<expr><call><name pos:line="1661" pos:column="13">apr_stat<pos:position pos:line="1661" pos:column="21"/></name><argument_list pos:line="1661" pos:column="21">(<argument><expr><operator pos:line="1661" pos:column="22">&amp;<pos:position pos:line="1661" pos:column="27"/></operator><name pos:line="1661" pos:column="23">finfo<pos:position pos:line="1661" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1661" pos:column="30">fname<pos:position pos:line="1661" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1661" pos:column="37">APR_FINFO_LINK<pos:position pos:line="1661" pos:column="51"/></name> <operator pos:line="1661" pos:column="52">|<pos:position pos:line="1661" pos:column="53"/></operator> <name pos:line="1661" pos:column="54">APR_FINFO_TYPE<pos:position pos:line="1661" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="1661" pos:column="70">p<pos:position pos:line="1661" pos:column="71"/></name></expr></argument>)<pos:position pos:line="1661" pos:column="72"/></argument_list></call> <operator pos:line="1661" pos:column="73">!=<pos:position pos:line="1661" pos:column="75"/></operator> <name pos:line="1661" pos:column="76">APR_SUCCESS<pos:position pos:line="1661" pos:column="87"/></name></expr>)<pos:position pos:line="1661" pos:column="88"/></condition><then pos:line="1661" pos:column="88">
            <block type="pseudo"><return pos:line="1662" pos:column="13">return <expr><name pos:line="1662" pos:column="20">NULL<pos:position pos:line="1662" pos:column="24"/></name></expr>;<pos:position pos:line="1662" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="1663" pos:column="6"/></block></then></if>

    <if pos:line="1665" pos:column="5">if <condition pos:line="1665" pos:column="8">(<expr><operator pos:line="1665" pos:column="9">!<pos:position pos:line="1665" pos:column="10"/></operator><call><name pos:line="1665" pos:column="10">apr_fnmatch_test<pos:position pos:line="1665" pos:column="26"/></name><argument_list pos:line="1665" pos:column="26">(<argument><expr><name pos:line="1665" pos:column="27">fname<pos:position pos:line="1665" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1665" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="1665" pos:column="34"/></condition><then pos:line="1665" pos:column="34"> <block pos:line="1665" pos:column="35">{
        <return pos:line="1666" pos:column="9">return <expr><call><name pos:line="1666" pos:column="16">process_resource_config_nofnmatch<pos:position pos:line="1666" pos:column="49"/></name><argument_list pos:line="1666" pos:column="49">(<argument><expr><name pos:line="1666" pos:column="50">s<pos:position pos:line="1666" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="53">fname<pos:position pos:line="1666" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="60">conftree<pos:position pos:line="1666" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="70">p<pos:position pos:line="1666" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="1666" pos:column="73">ptemp<pos:position pos:line="1666" pos:column="78"/></name></expr></argument>,
                                                 <argument><expr><literal type="number" pos:line="1667" pos:column="50">0<pos:position pos:line="1667" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="1667" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1667" pos:column="53"/></return>
    }<pos:position pos:line="1668" pos:column="6"/></block></then>
    <else pos:line="1669" pos:column="5">else <block pos:line="1669" pos:column="10">{
        <decl_stmt><decl><type><name pos:line="1670" pos:column="9">apr_dir_t<pos:position pos:line="1670" pos:column="18"/></name> <modifier pos:line="1670" pos:column="19">*<pos:position pos:line="1670" pos:column="20"/></modifier></type><name pos:line="1670" pos:column="20">dirp<pos:position pos:line="1670" pos:column="24"/></name></decl>;<pos:position pos:line="1670" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1671" pos:column="9">apr_finfo_t<pos:position pos:line="1671" pos:column="20"/></name></type> <name pos:line="1671" pos:column="21">dirent<pos:position pos:line="1671" pos:column="27"/></name></decl>;<pos:position pos:line="1671" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1672" pos:column="9">int<pos:position pos:line="1672" pos:column="12"/></name></type> <name pos:line="1672" pos:column="13">current<pos:position pos:line="1672" pos:column="20"/></name></decl>;<pos:position pos:line="1672" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1673" pos:column="9">apr_array_header_t<pos:position pos:line="1673" pos:column="27"/></name> <modifier pos:line="1673" pos:column="28">*<pos:position pos:line="1673" pos:column="29"/></modifier></type><name pos:line="1673" pos:column="29">candidates<pos:position pos:line="1673" pos:column="39"/></name> <init pos:line="1673" pos:column="40">= <expr><name pos:line="1673" pos:column="42">NULL<pos:position pos:line="1673" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="1673" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1674" pos:column="9">fnames<pos:position pos:line="1674" pos:column="15"/></name> <modifier pos:line="1674" pos:column="16">*<pos:position pos:line="1674" pos:column="17"/></modifier></type><name pos:line="1674" pos:column="17">fnew<pos:position pos:line="1674" pos:column="21"/></name></decl>;<pos:position pos:line="1674" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1675" pos:column="9">apr_status_t<pos:position pos:line="1675" pos:column="21"/></name></type> <name pos:line="1675" pos:column="22">rv<pos:position pos:line="1675" pos:column="24"/></name></decl>;<pos:position pos:line="1675" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="1676" pos:column="9">char<pos:position pos:line="1676" pos:column="13"/></name> <modifier pos:line="1676" pos:column="14">*<pos:position pos:line="1676" pos:column="15"/></modifier></type><name pos:line="1676" pos:column="15">path<pos:position pos:line="1676" pos:column="19"/></name> <init pos:line="1676" pos:column="20">= <expr><call><name pos:line="1676" pos:column="22">apr_pstrdup<pos:position pos:line="1676" pos:column="33"/></name><argument_list pos:line="1676" pos:column="33">(<argument><expr><name pos:line="1676" pos:column="34">p<pos:position pos:line="1676" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1676" pos:column="37">fname<pos:position pos:line="1676" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1676" pos:column="43"/></argument_list></call></expr></init></decl>, <modifier pos:line="1676" pos:column="45">*<pos:position pos:line="1676" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="1676" pos:column="46">pattern<pos:position pos:line="1676" pos:column="53"/></name> <init pos:line="1676" pos:column="54">= <expr><name pos:line="1676" pos:column="56">NULL<pos:position pos:line="1676" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="1676" pos:column="61"/></decl_stmt>

        <expr_stmt><expr><name pos:line="1678" pos:column="9">pattern<pos:position pos:line="1678" pos:column="16"/></name> <operator pos:line="1678" pos:column="17">=<pos:position pos:line="1678" pos:column="18"/></operator> <call><name pos:line="1678" pos:column="19">ap_strrchr<pos:position pos:line="1678" pos:column="29"/></name><argument_list pos:line="1678" pos:column="29">(<argument><expr><name pos:line="1678" pos:column="30">path<pos:position pos:line="1678" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="1678" pos:column="36">'/'<pos:position pos:line="1678" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="1678" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1678" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="1680" pos:column="9">AP_DEBUG_ASSERT<pos:position pos:line="1680" pos:column="24"/></name><argument_list pos:line="1680" pos:column="24">(<argument><expr><name pos:line="1680" pos:column="25">pattern<pos:position pos:line="1680" pos:column="32"/></name> <operator pos:line="1680" pos:column="33">!=<pos:position pos:line="1680" pos:column="35"/></operator> <name pos:line="1680" pos:column="36">NULL<pos:position pos:line="1680" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1680" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1680" pos:column="42"/></expr_stmt> <comment type="block" pos:line="1680" pos:column="43">/* path must be absolute. */</comment>

        <expr_stmt><expr><operator pos:line="1682" pos:column="9">*<pos:position pos:line="1682" pos:column="10"/></operator><name pos:line="1682" pos:column="10">pattern<pos:position pos:line="1682" pos:column="17"/></name><operator pos:line="1682" pos:column="17">++<pos:position pos:line="1682" pos:column="19"/></operator> <operator pos:line="1682" pos:column="20">=<pos:position pos:line="1682" pos:column="21"/></operator> <literal type="char" pos:line="1682" pos:column="22">'\0'<pos:position pos:line="1682" pos:column="26"/></literal></expr>;<pos:position pos:line="1682" pos:column="27"/></expr_stmt>

        <if pos:line="1684" pos:column="9">if <condition pos:line="1684" pos:column="12">(<expr><call><name pos:line="1684" pos:column="13">apr_fnmatch_test<pos:position pos:line="1684" pos:column="29"/></name><argument_list pos:line="1684" pos:column="29">(<argument><expr><name pos:line="1684" pos:column="30">path<pos:position pos:line="1684" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1684" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="1684" pos:column="36"/></condition><then pos:line="1684" pos:column="36"> <block pos:line="1684" pos:column="37">{
            <return pos:line="1685" pos:column="13">return <expr><call><name pos:line="1685" pos:column="20">apr_pstrcat<pos:position pos:line="1685" pos:column="31"/></name><argument_list pos:line="1685" pos:column="31">(<argument><expr><name pos:line="1685" pos:column="32">p<pos:position pos:line="1685" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1685" pos:column="35">"Wildcard patterns not allowed in Include "<pos:position pos:line="1685" pos:column="78"/></literal></expr></argument>,
                               <argument><expr><name pos:line="1686" pos:column="32">fname<pos:position pos:line="1686" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1686" pos:column="39">NULL<pos:position pos:line="1686" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1686" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="1686" pos:column="45"/></return>
        }<pos:position pos:line="1687" pos:column="10"/></block></then></if>

        <if pos:line="1689" pos:column="9">if <condition pos:line="1689" pos:column="12">(<expr><operator pos:line="1689" pos:column="13">!<pos:position pos:line="1689" pos:column="14"/></operator><call><name pos:line="1689" pos:column="14">ap_is_directory<pos:position pos:line="1689" pos:column="29"/></name><argument_list pos:line="1689" pos:column="29">(<argument><expr><name pos:line="1689" pos:column="30">p<pos:position pos:line="1689" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1689" pos:column="33">path<pos:position pos:line="1689" pos:column="37"/></name></expr></argument>)<pos:position pos:line="1689" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="1689" pos:column="39"/></condition><then><block pos:line="1689" pos:column="39">{
            <return pos:line="1690" pos:column="13">return <expr><call><name pos:line="1690" pos:column="20">apr_pstrcat<pos:position pos:line="1690" pos:column="31"/></name><argument_list pos:line="1690" pos:column="31">(<argument><expr><name pos:line="1690" pos:column="32">p<pos:position pos:line="1690" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1690" pos:column="35">"Include directory '"<pos:position pos:line="1690" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="1690" pos:column="58">path<pos:position pos:line="1690" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1690" pos:column="64">"' not found"<pos:position pos:line="1690" pos:column="77"/></literal></expr></argument>,
                               <argument><expr><name pos:line="1691" pos:column="32">NULL<pos:position pos:line="1691" pos:column="36"/></name></expr></argument>)<pos:position pos:line="1691" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="1691" pos:column="38"/></return>
        }<pos:position pos:line="1692" pos:column="10"/></block></then></if>

        <if pos:line="1694" pos:column="9">if <condition pos:line="1694" pos:column="12">(<expr><operator pos:line="1694" pos:column="13">!<pos:position pos:line="1694" pos:column="14"/></operator><call><name pos:line="1694" pos:column="14">apr_fnmatch_test<pos:position pos:line="1694" pos:column="30"/></name><argument_list pos:line="1694" pos:column="30">(<argument><expr><name pos:line="1694" pos:column="31">pattern<pos:position pos:line="1694" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1694" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="1694" pos:column="40"/></condition><then pos:line="1694" pos:column="40"> <block pos:line="1694" pos:column="41">{
            <return pos:line="1695" pos:column="13">return <expr><call><name pos:line="1695" pos:column="20">apr_pstrcat<pos:position pos:line="1695" pos:column="31"/></name><argument_list pos:line="1695" pos:column="31">(<argument><expr><name pos:line="1695" pos:column="32">p<pos:position pos:line="1695" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1695" pos:column="35">"Must include a wildcard pattern for "<pos:position pos:line="1695" pos:column="73"/></literal>
                               <literal type="string" pos:line="1696" pos:column="32">"Include "<pos:position pos:line="1696" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="1696" pos:column="44">fname<pos:position pos:line="1696" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1696" pos:column="51">NULL<pos:position pos:line="1696" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1696" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1696" pos:column="57"/></return>
        }<pos:position pos:line="1697" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="1699" pos:column="9">/*
         * first course of business is to grok all the directory
         * entries here and store 'em away. Recall we need full pathnames
         * for this.
         */</comment>
        <expr_stmt><expr><name pos:line="1704" pos:column="9">rv<pos:position pos:line="1704" pos:column="11"/></name> <operator pos:line="1704" pos:column="12">=<pos:position pos:line="1704" pos:column="13"/></operator> <call><name pos:line="1704" pos:column="14">apr_dir_open<pos:position pos:line="1704" pos:column="26"/></name><argument_list pos:line="1704" pos:column="26">(<argument><expr><operator pos:line="1704" pos:column="27">&amp;<pos:position pos:line="1704" pos:column="32"/></operator><name pos:line="1704" pos:column="28">dirp<pos:position pos:line="1704" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1704" pos:column="34">path<pos:position pos:line="1704" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1704" pos:column="40">p<pos:position pos:line="1704" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1704" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="1704" pos:column="43"/></expr_stmt>
        <if pos:line="1705" pos:column="9">if <condition pos:line="1705" pos:column="12">(<expr><name pos:line="1705" pos:column="13">rv<pos:position pos:line="1705" pos:column="15"/></name> <operator pos:line="1705" pos:column="16">!=<pos:position pos:line="1705" pos:column="18"/></operator> <name pos:line="1705" pos:column="19">APR_SUCCESS<pos:position pos:line="1705" pos:column="30"/></name></expr>)<pos:position pos:line="1705" pos:column="31"/></condition><then pos:line="1705" pos:column="31"> <block pos:line="1705" pos:column="32">{
            <decl_stmt><decl><type><name pos:line="1706" pos:column="13">char<pos:position pos:line="1706" pos:column="17"/></name></type> <name><name pos:line="1706" pos:column="18">errmsg<pos:position pos:line="1706" pos:column="24"/></name><index pos:line="1706" pos:column="24">[<expr><literal type="number" pos:line="1706" pos:column="25">120<pos:position pos:line="1706" pos:column="28"/></literal></expr>]<pos:position pos:line="1706" pos:column="29"/></index></name></decl>;<pos:position pos:line="1706" pos:column="30"/></decl_stmt>
            <return pos:line="1707" pos:column="13">return <expr><call><name pos:line="1707" pos:column="20">apr_psprintf<pos:position pos:line="1707" pos:column="32"/></name><argument_list pos:line="1707" pos:column="32">(<argument><expr><name pos:line="1707" pos:column="33">p<pos:position pos:line="1707" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="1707" pos:column="36">"Could not open config directory %s: %s"<pos:position pos:line="1707" pos:column="76"/></literal></expr></argument>,
                                <argument><expr><name pos:line="1708" pos:column="33">path<pos:position pos:line="1708" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="1708" pos:column="39">apr_strerror<pos:position pos:line="1708" pos:column="51"/></name><argument_list pos:line="1708" pos:column="51">(<argument><expr><name pos:line="1708" pos:column="52">rv<pos:position pos:line="1708" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1708" pos:column="56">errmsg<pos:position pos:line="1708" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="1708" pos:column="64">sizeof <name pos:line="1708" pos:column="71">errmsg<pos:position pos:line="1708" pos:column="77"/></name></sizeof></expr></argument>)<pos:position pos:line="1708" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="1708" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="1708" pos:column="80"/></return>
        }<pos:position pos:line="1709" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="1711" pos:column="9">candidates<pos:position pos:line="1711" pos:column="19"/></name> <operator pos:line="1711" pos:column="20">=<pos:position pos:line="1711" pos:column="21"/></operator> <call><name pos:line="1711" pos:column="22">apr_array_make<pos:position pos:line="1711" pos:column="36"/></name><argument_list pos:line="1711" pos:column="36">(<argument><expr><name pos:line="1711" pos:column="37">p<pos:position pos:line="1711" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1711" pos:column="40">1<pos:position pos:line="1711" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="1711" pos:column="43">sizeof<argument_list pos:line="1711" pos:column="49">(<argument><expr><name pos:line="1711" pos:column="50">fnames<pos:position pos:line="1711" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1711" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1711" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1711" pos:column="59"/></expr_stmt>
        <while pos:line="1712" pos:column="9">while <condition pos:line="1712" pos:column="15">(<expr><call><name pos:line="1712" pos:column="16">apr_dir_read<pos:position pos:line="1712" pos:column="28"/></name><argument_list pos:line="1712" pos:column="28">(<argument><expr><operator pos:line="1712" pos:column="29">&amp;<pos:position pos:line="1712" pos:column="34"/></operator><name pos:line="1712" pos:column="30">dirent<pos:position pos:line="1712" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1712" pos:column="38">APR_FINFO_DIRENT<pos:position pos:line="1712" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="1712" pos:column="56">dirp<pos:position pos:line="1712" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1712" pos:column="61"/></argument_list></call> <operator pos:line="1712" pos:column="62">==<pos:position pos:line="1712" pos:column="64"/></operator> <name pos:line="1712" pos:column="65">APR_SUCCESS<pos:position pos:line="1712" pos:column="76"/></name></expr>)<pos:position pos:line="1712" pos:column="77"/></condition> <block pos:line="1712" pos:column="78">{
            <comment type="block" pos:line="1713" pos:column="13">/* strip out '.' and '..' */</comment>
            <if pos:line="1714" pos:column="13">if <condition pos:line="1714" pos:column="16">(<expr><call><name pos:line="1714" pos:column="17">strcmp<pos:position pos:line="1714" pos:column="23"/></name><argument_list pos:line="1714" pos:column="23">(<argument><expr><name><name pos:line="1714" pos:column="24">dirent<pos:position pos:line="1714" pos:column="30"/></name><operator pos:line="1714" pos:column="30">.<pos:position pos:line="1714" pos:column="31"/></operator><name pos:line="1714" pos:column="31">name<pos:position pos:line="1714" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1714" pos:column="37">"."<pos:position pos:line="1714" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="1714" pos:column="41"/></argument_list></call>
                <operator pos:line="1715" pos:column="17">&amp;&amp;<pos:position pos:line="1715" pos:column="27"/></operator> <call><name pos:line="1715" pos:column="20">strcmp<pos:position pos:line="1715" pos:column="26"/></name><argument_list pos:line="1715" pos:column="26">(<argument><expr><name><name pos:line="1715" pos:column="27">dirent<pos:position pos:line="1715" pos:column="33"/></name><operator pos:line="1715" pos:column="33">.<pos:position pos:line="1715" pos:column="34"/></operator><name pos:line="1715" pos:column="34">name<pos:position pos:line="1715" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1715" pos:column="40">".."<pos:position pos:line="1715" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="1715" pos:column="45"/></argument_list></call>
                <operator pos:line="1716" pos:column="17">&amp;&amp;<pos:position pos:line="1716" pos:column="27"/></operator> <operator pos:line="1716" pos:column="20">(<pos:position pos:line="1716" pos:column="21"/></operator><call><name pos:line="1716" pos:column="21">apr_fnmatch<pos:position pos:line="1716" pos:column="32"/></name><argument_list pos:line="1716" pos:column="32">(<argument><expr><name pos:line="1716" pos:column="33">pattern<pos:position pos:line="1716" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="1716" pos:column="42">dirent<pos:position pos:line="1716" pos:column="48"/></name><operator pos:line="1716" pos:column="48">.<pos:position pos:line="1716" pos:column="49"/></operator><name pos:line="1716" pos:column="49">name<pos:position pos:line="1716" pos:column="53"/></name></name></expr></argument>,
                                <argument><expr><name pos:line="1717" pos:column="33">APR_FNM_PERIOD<pos:position pos:line="1717" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1717" pos:column="48"/></argument_list></call> <operator pos:line="1717" pos:column="49">==<pos:position pos:line="1717" pos:column="51"/></operator> <name pos:line="1717" pos:column="52">APR_SUCCESS<pos:position pos:line="1717" pos:column="63"/></name><operator pos:line="1717" pos:column="63">)<pos:position pos:line="1717" pos:column="64"/></operator></expr>)<pos:position pos:line="1717" pos:column="65"/></condition><then pos:line="1717" pos:column="65"> <block pos:line="1717" pos:column="66">{
                <expr_stmt><expr><name pos:line="1718" pos:column="17">fnew<pos:position pos:line="1718" pos:column="21"/></name> <operator pos:line="1718" pos:column="22">=<pos:position pos:line="1718" pos:column="23"/></operator> <operator pos:line="1718" pos:column="24">(<pos:position pos:line="1718" pos:column="25"/></operator><name pos:line="1718" pos:column="25">fnames<pos:position pos:line="1718" pos:column="31"/></name> <operator pos:line="1718" pos:column="32">*<pos:position pos:line="1718" pos:column="33"/></operator><operator pos:line="1718" pos:column="33">)<pos:position pos:line="1718" pos:column="34"/></operator> <call><name pos:line="1718" pos:column="35">apr_array_push<pos:position pos:line="1718" pos:column="49"/></name><argument_list pos:line="1718" pos:column="49">(<argument><expr><name pos:line="1718" pos:column="50">candidates<pos:position pos:line="1718" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1718" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="1718" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="1719" pos:column="17">fnew<pos:position pos:line="1719" pos:column="21"/></name><operator pos:line="1719" pos:column="21">-&gt;<pos:position pos:line="1719" pos:column="26"/></operator><name pos:line="1719" pos:column="23">fname<pos:position pos:line="1719" pos:column="28"/></name></name> <operator pos:line="1719" pos:column="29">=<pos:position pos:line="1719" pos:column="30"/></operator> <call><name pos:line="1719" pos:column="31">ap_make_full_path<pos:position pos:line="1719" pos:column="48"/></name><argument_list pos:line="1719" pos:column="48">(<argument><expr><name pos:line="1719" pos:column="49">p<pos:position pos:line="1719" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1719" pos:column="52">path<pos:position pos:line="1719" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="1719" pos:column="58">dirent<pos:position pos:line="1719" pos:column="64"/></name><operator pos:line="1719" pos:column="64">.<pos:position pos:line="1719" pos:column="65"/></operator><name pos:line="1719" pos:column="65">name<pos:position pos:line="1719" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="1719" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="1719" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="1720" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1721" pos:column="10"/></block></while>

        <expr_stmt><expr><call><name pos:line="1723" pos:column="9">apr_dir_close<pos:position pos:line="1723" pos:column="22"/></name><argument_list pos:line="1723" pos:column="22">(<argument><expr><name pos:line="1723" pos:column="23">dirp<pos:position pos:line="1723" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1723" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1723" pos:column="29"/></expr_stmt>
        <if pos:line="1724" pos:column="9">if <condition pos:line="1724" pos:column="12">(<expr><name><name pos:line="1724" pos:column="13">candidates<pos:position pos:line="1724" pos:column="23"/></name><operator pos:line="1724" pos:column="23">-&gt;<pos:position pos:line="1724" pos:column="28"/></operator><name pos:line="1724" pos:column="25">nelts<pos:position pos:line="1724" pos:column="30"/></name></name> <operator pos:line="1724" pos:column="31">!=<pos:position pos:line="1724" pos:column="33"/></operator> <literal type="number" pos:line="1724" pos:column="34">0<pos:position pos:line="1724" pos:column="35"/></literal></expr>)<pos:position pos:line="1724" pos:column="36"/></condition><then pos:line="1724" pos:column="36"> <block pos:line="1724" pos:column="37">{
            <decl_stmt><decl><type><specifier pos:line="1725" pos:column="13">const<pos:position pos:line="1725" pos:column="18"/></specifier> <name pos:line="1725" pos:column="19">char<pos:position pos:line="1725" pos:column="23"/></name> <modifier pos:line="1725" pos:column="24">*<pos:position pos:line="1725" pos:column="25"/></modifier></type><name pos:line="1725" pos:column="25">error<pos:position pos:line="1725" pos:column="30"/></name></decl>;<pos:position pos:line="1725" pos:column="31"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="1727" pos:column="13">qsort<pos:position pos:line="1727" pos:column="18"/></name><argument_list pos:line="1727" pos:column="18">(<argument><expr><operator pos:line="1727" pos:column="19">(<pos:position pos:line="1727" pos:column="20"/></operator><name pos:line="1727" pos:column="20">void<pos:position pos:line="1727" pos:column="24"/></name> <operator pos:line="1727" pos:column="25">*<pos:position pos:line="1727" pos:column="26"/></operator><operator pos:line="1727" pos:column="26">)<pos:position pos:line="1727" pos:column="27"/></operator> <name><name pos:line="1727" pos:column="28">candidates<pos:position pos:line="1727" pos:column="38"/></name><operator pos:line="1727" pos:column="38">-&gt;<pos:position pos:line="1727" pos:column="43"/></operator><name pos:line="1727" pos:column="40">elts<pos:position pos:line="1727" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1727" pos:column="46">candidates<pos:position pos:line="1727" pos:column="56"/></name><operator pos:line="1727" pos:column="56">-&gt;<pos:position pos:line="1727" pos:column="61"/></operator><name pos:line="1727" pos:column="58">nelts<pos:position pos:line="1727" pos:column="63"/></name></name></expr></argument>,
                  <argument><expr><sizeof pos:line="1728" pos:column="19">sizeof<argument_list pos:line="1728" pos:column="25">(<argument><expr><name pos:line="1728" pos:column="26">fnames<pos:position pos:line="1728" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1728" pos:column="33"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="1728" pos:column="35">fname_alphasort<pos:position pos:line="1728" pos:column="50"/></name></expr></argument>)<pos:position pos:line="1728" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1728" pos:column="52"/></expr_stmt>

            <comment type="block" pos:line="1730" pos:column="13">/*
             * Now recurse these... we handle errors and subdirectories
             * via the recursion, which is nice
             */</comment>
            <for pos:line="1734" pos:column="13">for <control pos:line="1734" pos:column="17">(<init><expr><name pos:line="1734" pos:column="18">current<pos:position pos:line="1734" pos:column="25"/></name> <operator pos:line="1734" pos:column="26">=<pos:position pos:line="1734" pos:column="27"/></operator> <literal type="number" pos:line="1734" pos:column="28">0<pos:position pos:line="1734" pos:column="29"/></literal></expr>;<pos:position pos:line="1734" pos:column="30"/></init> <condition><expr><name pos:line="1734" pos:column="31">current<pos:position pos:line="1734" pos:column="38"/></name> <operator pos:line="1734" pos:column="39">&lt;<pos:position pos:line="1734" pos:column="43"/></operator> <name><name pos:line="1734" pos:column="41">candidates<pos:position pos:line="1734" pos:column="51"/></name><operator pos:line="1734" pos:column="51">-&gt;<pos:position pos:line="1734" pos:column="56"/></operator><name pos:line="1734" pos:column="53">nelts<pos:position pos:line="1734" pos:column="58"/></name></name></expr>;<pos:position pos:line="1734" pos:column="59"/></condition> <incr><expr><operator pos:line="1734" pos:column="60">++<pos:position pos:line="1734" pos:column="62"/></operator><name pos:line="1734" pos:column="62">current<pos:position pos:line="1734" pos:column="69"/></name></expr></incr>)<pos:position pos:line="1734" pos:column="70"/></control> <block pos:line="1734" pos:column="71">{
                <expr_stmt><expr><name pos:line="1735" pos:column="17">fnew<pos:position pos:line="1735" pos:column="21"/></name> <operator pos:line="1735" pos:column="22">=<pos:position pos:line="1735" pos:column="23"/></operator> <operator pos:line="1735" pos:column="24">&amp;<pos:position pos:line="1735" pos:column="29"/></operator><operator pos:line="1735" pos:column="25">(<pos:position pos:line="1735" pos:column="26"/></operator><operator pos:line="1735" pos:column="26">(<pos:position pos:line="1735" pos:column="27"/></operator><name pos:line="1735" pos:column="27">fnames<pos:position pos:line="1735" pos:column="33"/></name> <operator pos:line="1735" pos:column="34">*<pos:position pos:line="1735" pos:column="35"/></operator><operator pos:line="1735" pos:column="35">)<pos:position pos:line="1735" pos:column="36"/></operator> <name><name pos:line="1735" pos:column="37">candidates<pos:position pos:line="1735" pos:column="47"/></name><operator pos:line="1735" pos:column="47">-&gt;<pos:position pos:line="1735" pos:column="52"/></operator><name pos:line="1735" pos:column="49">elts<pos:position pos:line="1735" pos:column="53"/></name></name><operator pos:line="1735" pos:column="53">)<pos:position pos:line="1735" pos:column="54"/></operator><index pos:line="1735" pos:column="54">[<expr><name pos:line="1735" pos:column="55">current<pos:position pos:line="1735" pos:column="62"/></name></expr>]<pos:position pos:line="1735" pos:column="63"/></index></expr>;<pos:position pos:line="1735" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name pos:line="1736" pos:column="17">error<pos:position pos:line="1736" pos:column="22"/></name> <operator pos:line="1736" pos:column="23">=<pos:position pos:line="1736" pos:column="24"/></operator> <call><name pos:line="1736" pos:column="25">process_resource_config_nofnmatch<pos:position pos:line="1736" pos:column="58"/></name><argument_list pos:line="1736" pos:column="58">(<argument><expr><name pos:line="1736" pos:column="59">s<pos:position pos:line="1736" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="1736" pos:column="62">fnew<pos:position pos:line="1736" pos:column="66"/></name><operator pos:line="1736" pos:column="66">-&gt;<pos:position pos:line="1736" pos:column="71"/></operator><name pos:line="1736" pos:column="68">fname<pos:position pos:line="1736" pos:column="73"/></name></name></expr></argument>,
                                                          <argument><expr><name pos:line="1737" pos:column="59">conftree<pos:position pos:line="1737" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="1737" pos:column="69">p<pos:position pos:line="1737" pos:column="70"/></name></expr></argument>,
                                                          <argument><expr><name pos:line="1738" pos:column="59">ptemp<pos:position pos:line="1738" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1738" pos:column="66">0<pos:position pos:line="1738" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="1738" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="1738" pos:column="69"/></expr_stmt>
                <if pos:line="1739" pos:column="17">if <condition pos:line="1739" pos:column="20">(<expr><name pos:line="1739" pos:column="21">error<pos:position pos:line="1739" pos:column="26"/></name></expr>)<pos:position pos:line="1739" pos:column="27"/></condition><then pos:line="1739" pos:column="27"> <block pos:line="1739" pos:column="28">{
                    <return pos:line="1740" pos:column="21">return <expr><name pos:line="1740" pos:column="28">error<pos:position pos:line="1740" pos:column="33"/></name></expr>;<pos:position pos:line="1740" pos:column="34"/></return>
                }<pos:position pos:line="1741" pos:column="18"/></block></then></if>
            }<pos:position pos:line="1742" pos:column="14"/></block></for>
        }<pos:position pos:line="1743" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1744" pos:column="6"/></block></else></if>

    <return pos:line="1746" pos:column="5">return <expr><name pos:line="1746" pos:column="12">NULL<pos:position pos:line="1746" pos:column="16"/></name></expr>;<pos:position pos:line="1746" pos:column="17"/></return>
}<pos:position pos:line="1747" pos:column="2"/></block>

<macro><name pos:line="1749" pos:column="1">AP_DECLARE<pos:position pos:line="1749" pos:column="11"/></name><argument_list pos:line="1749" pos:column="11">(<argument pos:line="1749" pos:column="12">int<pos:position pos:line="1749" pos:column="15"/></argument>)<pos:position pos:line="1749" pos:column="16"/></argument_list></macro> <macro><name pos:line="1749" pos:column="17">ap_process_config_tree<pos:position pos:line="1749" pos:column="39"/></name><argument_list pos:line="1749" pos:column="39">(<argument pos:line="1749" pos:column="40">server_rec *s<pos:position pos:line="1749" pos:column="53"/></argument>,
                                       <argument pos:line="1750" pos:column="40">ap_directive_t *conftree<pos:position pos:line="1750" pos:column="64"/></argument>,
                                       <argument pos:line="1751" pos:column="40">apr_pool_t *p<pos:position pos:line="1751" pos:column="53"/></argument>,
                                       <argument pos:line="1752" pos:column="40">apr_pool_t *ptemp<pos:position pos:line="1752" pos:column="57"/></argument>)<pos:position pos:line="1752" pos:column="58"/></argument_list></macro>
<block pos:line="1753" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="1754" pos:column="5">const<pos:position pos:line="1754" pos:column="10"/></specifier> <name pos:line="1754" pos:column="11">char<pos:position pos:line="1754" pos:column="15"/></name> <modifier pos:line="1754" pos:column="16">*<pos:position pos:line="1754" pos:column="17"/></modifier></type><name pos:line="1754" pos:column="17">errmsg<pos:position pos:line="1754" pos:column="23"/></name></decl>;<pos:position pos:line="1754" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1755" pos:column="5">cmd_parms<pos:position pos:line="1755" pos:column="14"/></name></type> <name pos:line="1755" pos:column="15">parms<pos:position pos:line="1755" pos:column="20"/></name></decl>;<pos:position pos:line="1755" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="1757" pos:column="5">parms<pos:position pos:line="1757" pos:column="10"/></name> <operator pos:line="1757" pos:column="11">=<pos:position pos:line="1757" pos:column="12"/></operator> <name pos:line="1757" pos:column="13">default_parms<pos:position pos:line="1757" pos:column="26"/></name></expr>;<pos:position pos:line="1757" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1758" pos:column="5">parms<pos:position pos:line="1758" pos:column="10"/></name><operator pos:line="1758" pos:column="10">.<pos:position pos:line="1758" pos:column="11"/></operator><name pos:line="1758" pos:column="11">pool<pos:position pos:line="1758" pos:column="15"/></name></name> <operator pos:line="1758" pos:column="16">=<pos:position pos:line="1758" pos:column="17"/></operator> <name pos:line="1758" pos:column="18">p<pos:position pos:line="1758" pos:column="19"/></name></expr>;<pos:position pos:line="1758" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1759" pos:column="5">parms<pos:position pos:line="1759" pos:column="10"/></name><operator pos:line="1759" pos:column="10">.<pos:position pos:line="1759" pos:column="11"/></operator><name pos:line="1759" pos:column="11">temp_pool<pos:position pos:line="1759" pos:column="20"/></name></name> <operator pos:line="1759" pos:column="21">=<pos:position pos:line="1759" pos:column="22"/></operator> <name pos:line="1759" pos:column="23">ptemp<pos:position pos:line="1759" pos:column="28"/></name></expr>;<pos:position pos:line="1759" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1760" pos:column="5">parms<pos:position pos:line="1760" pos:column="10"/></name><operator pos:line="1760" pos:column="10">.<pos:position pos:line="1760" pos:column="11"/></operator><name pos:line="1760" pos:column="11">server<pos:position pos:line="1760" pos:column="17"/></name></name> <operator pos:line="1760" pos:column="18">=<pos:position pos:line="1760" pos:column="19"/></operator> <name pos:line="1760" pos:column="20">s<pos:position pos:line="1760" pos:column="21"/></name></expr>;<pos:position pos:line="1760" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1761" pos:column="5">parms<pos:position pos:line="1761" pos:column="10"/></name><operator pos:line="1761" pos:column="10">.<pos:position pos:line="1761" pos:column="11"/></operator><name pos:line="1761" pos:column="11">override<pos:position pos:line="1761" pos:column="19"/></name></name> <operator pos:line="1761" pos:column="20">=<pos:position pos:line="1761" pos:column="21"/></operator> <operator pos:line="1761" pos:column="22">(<pos:position pos:line="1761" pos:column="23"/></operator><name pos:line="1761" pos:column="23">RSRC_CONF<pos:position pos:line="1761" pos:column="32"/></name> <operator pos:line="1761" pos:column="33">|<pos:position pos:line="1761" pos:column="34"/></operator> <name pos:line="1761" pos:column="35">OR_ALL<pos:position pos:line="1761" pos:column="41"/></name><operator pos:line="1761" pos:column="41">)<pos:position pos:line="1761" pos:column="42"/></operator> <operator pos:line="1761" pos:column="43">&amp;<pos:position pos:line="1761" pos:column="48"/></operator> <operator pos:line="1761" pos:column="45">~<pos:position pos:line="1761" pos:column="46"/></operator><operator pos:line="1761" pos:column="46">(<pos:position pos:line="1761" pos:column="47"/></operator><name pos:line="1761" pos:column="47">OR_AUTHCFG<pos:position pos:line="1761" pos:column="57"/></name> <operator pos:line="1761" pos:column="58">|<pos:position pos:line="1761" pos:column="59"/></operator> <name pos:line="1761" pos:column="60">OR_LIMIT<pos:position pos:line="1761" pos:column="68"/></name><operator pos:line="1761" pos:column="68">)<pos:position pos:line="1761" pos:column="69"/></operator></expr>;<pos:position pos:line="1761" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1762" pos:column="5">parms<pos:position pos:line="1762" pos:column="10"/></name><operator pos:line="1762" pos:column="10">.<pos:position pos:line="1762" pos:column="11"/></operator><name pos:line="1762" pos:column="11">override_opts<pos:position pos:line="1762" pos:column="24"/></name></name> <operator pos:line="1762" pos:column="25">=<pos:position pos:line="1762" pos:column="26"/></operator> <name pos:line="1762" pos:column="27">OPT_ALL<pos:position pos:line="1762" pos:column="34"/></name> <operator pos:line="1762" pos:column="35">|<pos:position pos:line="1762" pos:column="36"/></operator> <name pos:line="1762" pos:column="37">OPT_SYM_OWNER<pos:position pos:line="1762" pos:column="50"/></name> <operator pos:line="1762" pos:column="51">|<pos:position pos:line="1762" pos:column="52"/></operator> <name pos:line="1762" pos:column="53">OPT_MULTI<pos:position pos:line="1762" pos:column="62"/></name></expr>;<pos:position pos:line="1762" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1763" pos:column="5">parms<pos:position pos:line="1763" pos:column="10"/></name><operator pos:line="1763" pos:column="10">.<pos:position pos:line="1763" pos:column="11"/></operator><name pos:line="1763" pos:column="11">limited<pos:position pos:line="1763" pos:column="18"/></name></name> <operator pos:line="1763" pos:column="19">=<pos:position pos:line="1763" pos:column="20"/></operator> <operator pos:line="1763" pos:column="21">-<pos:position pos:line="1763" pos:column="22"/></operator><literal type="number" pos:line="1763" pos:column="22">1<pos:position pos:line="1763" pos:column="23"/></literal></expr>;<pos:position pos:line="1763" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="1765" pos:column="5">errmsg<pos:position pos:line="1765" pos:column="11"/></name> <operator pos:line="1765" pos:column="12">=<pos:position pos:line="1765" pos:column="13"/></operator> <call><name pos:line="1765" pos:column="14">ap_walk_config<pos:position pos:line="1765" pos:column="28"/></name><argument_list pos:line="1765" pos:column="28">(<argument><expr><name pos:line="1765" pos:column="29">conftree<pos:position pos:line="1765" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="1765" pos:column="39">&amp;<pos:position pos:line="1765" pos:column="44"/></operator><name pos:line="1765" pos:column="40">parms<pos:position pos:line="1765" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="1765" pos:column="47">s<pos:position pos:line="1765" pos:column="48"/></name><operator pos:line="1765" pos:column="48">-&gt;<pos:position pos:line="1765" pos:column="53"/></operator><name pos:line="1765" pos:column="50">lookup_defaults<pos:position pos:line="1765" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="1765" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="1765" pos:column="67"/></expr_stmt>
    <if pos:line="1766" pos:column="5">if <condition pos:line="1766" pos:column="8">(<expr><name pos:line="1766" pos:column="9">errmsg<pos:position pos:line="1766" pos:column="15"/></name></expr>)<pos:position pos:line="1766" pos:column="16"/></condition><then pos:line="1766" pos:column="16"> <block pos:line="1766" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="1767" pos:column="9">ap_log_perror<pos:position pos:line="1767" pos:column="22"/></name><argument_list pos:line="1767" pos:column="22">(<argument><expr><name pos:line="1767" pos:column="23">APLOG_MARK<pos:position pos:line="1767" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1767" pos:column="35">APLOG_STARTUP<pos:position pos:line="1767" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1767" pos:column="50">0<pos:position pos:line="1767" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="1767" pos:column="53">p<pos:position pos:line="1767" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="1768" pos:column="22">"Syntax error on line %d of %s:"<pos:position pos:line="1768" pos:column="54"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="1769" pos:column="22">parms<pos:position pos:line="1769" pos:column="27"/></name><operator pos:line="1769" pos:column="27">.<pos:position pos:line="1769" pos:column="28"/></operator><name pos:line="1769" pos:column="28">err_directive<pos:position pos:line="1769" pos:column="41"/></name><operator pos:line="1769" pos:column="41">-&gt;<pos:position pos:line="1769" pos:column="46"/></operator><name pos:line="1769" pos:column="43">line_num<pos:position pos:line="1769" pos:column="51"/></name></name></expr></argument>,
                     <argument><expr><name><name pos:line="1770" pos:column="22">parms<pos:position pos:line="1770" pos:column="27"/></name><operator pos:line="1770" pos:column="27">.<pos:position pos:line="1770" pos:column="28"/></operator><name pos:line="1770" pos:column="28">err_directive<pos:position pos:line="1770" pos:column="41"/></name><operator pos:line="1770" pos:column="41">-&gt;<pos:position pos:line="1770" pos:column="46"/></operator><name pos:line="1770" pos:column="43">filename<pos:position pos:line="1770" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="1770" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1770" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="1771" pos:column="9">ap_log_perror<pos:position pos:line="1771" pos:column="22"/></name><argument_list pos:line="1771" pos:column="22">(<argument><expr><name pos:line="1771" pos:column="23">APLOG_MARK<pos:position pos:line="1771" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1771" pos:column="35">APLOG_STARTUP<pos:position pos:line="1771" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1771" pos:column="50">0<pos:position pos:line="1771" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="1771" pos:column="53">p<pos:position pos:line="1771" pos:column="54"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="1772" pos:column="22">"%s"<pos:position pos:line="1772" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="1772" pos:column="28">errmsg<pos:position pos:line="1772" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1772" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="1772" pos:column="36"/></expr_stmt>
        <return pos:line="1773" pos:column="9">return <expr><name pos:line="1773" pos:column="16">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="1773" pos:column="42"/></name></expr>;<pos:position pos:line="1773" pos:column="43"/></return>
    }<pos:position pos:line="1774" pos:column="6"/></block></then></if>

    <return pos:line="1776" pos:column="5">return <expr><name pos:line="1776" pos:column="12">OK<pos:position pos:line="1776" pos:column="14"/></name></expr>;<pos:position pos:line="1776" pos:column="15"/></return>
}<pos:position pos:line="1777" pos:column="2"/></block>

<macro><name pos:line="1779" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="1779" pos:column="16"/></name><argument_list pos:line="1779" pos:column="16">(<argument pos:line="1779" pos:column="17">int<pos:position pos:line="1779" pos:column="20"/></argument>)<pos:position pos:line="1779" pos:column="21"/></argument_list></macro> <macro><name pos:line="1779" pos:column="22">ap_parse_htaccess<pos:position pos:line="1779" pos:column="39"/></name><argument_list pos:line="1779" pos:column="39">(<argument pos:line="1779" pos:column="40">ap_conf_vector_t **result<pos:position pos:line="1779" pos:column="65"/></argument>,
                                       <argument pos:line="1780" pos:column="40">request_rec *r<pos:position pos:line="1780" pos:column="54"/></argument>, <argument pos:line="1780" pos:column="56">int override<pos:position pos:line="1780" pos:column="68"/></argument>,
                                       <argument pos:line="1781" pos:column="40">int override_opts<pos:position pos:line="1781" pos:column="57"/></argument>,
                                       <argument pos:line="1782" pos:column="40">const char *d<pos:position pos:line="1782" pos:column="53"/></argument>, <argument pos:line="1782" pos:column="55">const char *access_name<pos:position pos:line="1782" pos:column="78"/></argument>)<pos:position pos:line="1782" pos:column="79"/></argument_list></macro>
<block pos:line="1783" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1784" pos:column="5">ap_configfile_t<pos:position pos:line="1784" pos:column="20"/></name> <modifier pos:line="1784" pos:column="21">*<pos:position pos:line="1784" pos:column="22"/></modifier></type><name pos:line="1784" pos:column="22">f<pos:position pos:line="1784" pos:column="23"/></name> <init pos:line="1784" pos:column="24">= <expr><name pos:line="1784" pos:column="26">NULL<pos:position pos:line="1784" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="1784" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1785" pos:column="5">cmd_parms<pos:position pos:line="1785" pos:column="14"/></name></type> <name pos:line="1785" pos:column="15">parms<pos:position pos:line="1785" pos:column="20"/></name></decl>;<pos:position pos:line="1785" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1786" pos:column="5">char<pos:position pos:line="1786" pos:column="9"/></name> <modifier pos:line="1786" pos:column="10">*<pos:position pos:line="1786" pos:column="11"/></modifier></type><name pos:line="1786" pos:column="11">filename<pos:position pos:line="1786" pos:column="19"/></name> <init pos:line="1786" pos:column="20">= <expr><name pos:line="1786" pos:column="22">NULL<pos:position pos:line="1786" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="1786" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="1787" pos:column="5">const<pos:position pos:line="1787" pos:column="10"/></specifier> <name><name pos:line="1787" pos:column="11">struct<pos:position pos:line="1787" pos:column="17"/></name> <name pos:line="1787" pos:column="18">htaccess_result<pos:position pos:line="1787" pos:column="33"/></name></name> <modifier pos:line="1787" pos:column="34">*<pos:position pos:line="1787" pos:column="35"/></modifier></type><name pos:line="1787" pos:column="35">cache<pos:position pos:line="1787" pos:column="40"/></name></decl>;<pos:position pos:line="1787" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="1788" pos:column="5">struct<pos:position pos:line="1788" pos:column="11"/></name> <name pos:line="1788" pos:column="12">htaccess_result<pos:position pos:line="1788" pos:column="27"/></name></name> <modifier pos:line="1788" pos:column="28">*<pos:position pos:line="1788" pos:column="29"/></modifier></type><name pos:line="1788" pos:column="29">new<pos:position pos:line="1788" pos:column="32"/></name></decl>;<pos:position pos:line="1788" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1789" pos:column="5">ap_conf_vector_t<pos:position pos:line="1789" pos:column="21"/></name> <modifier pos:line="1789" pos:column="22">*<pos:position pos:line="1789" pos:column="23"/></modifier></type><name pos:line="1789" pos:column="23">dc<pos:position pos:line="1789" pos:column="25"/></name> <init pos:line="1789" pos:column="26">= <expr><name pos:line="1789" pos:column="28">NULL<pos:position pos:line="1789" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="1789" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1790" pos:column="5">apr_status_t<pos:position pos:line="1790" pos:column="17"/></name></type> <name pos:line="1790" pos:column="18">status<pos:position pos:line="1790" pos:column="24"/></name></decl>;<pos:position pos:line="1790" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="1792" pos:column="5">/* firstly, search cache */</comment>
    <for pos:line="1793" pos:column="5">for <control pos:line="1793" pos:column="9">(<init><expr><name pos:line="1793" pos:column="10">cache<pos:position pos:line="1793" pos:column="15"/></name> <operator pos:line="1793" pos:column="16">=<pos:position pos:line="1793" pos:column="17"/></operator> <name><name pos:line="1793" pos:column="18">r<pos:position pos:line="1793" pos:column="19"/></name><operator pos:line="1793" pos:column="19">-&gt;<pos:position pos:line="1793" pos:column="24"/></operator><name pos:line="1793" pos:column="21">htaccess<pos:position pos:line="1793" pos:column="29"/></name></name></expr>;<pos:position pos:line="1793" pos:column="30"/></init> <condition><expr><name pos:line="1793" pos:column="31">cache<pos:position pos:line="1793" pos:column="36"/></name> <operator pos:line="1793" pos:column="37">!=<pos:position pos:line="1793" pos:column="39"/></operator> <name pos:line="1793" pos:column="40">NULL<pos:position pos:line="1793" pos:column="44"/></name></expr>;<pos:position pos:line="1793" pos:column="45"/></condition> <incr><expr><name pos:line="1793" pos:column="46">cache<pos:position pos:line="1793" pos:column="51"/></name> <operator pos:line="1793" pos:column="52">=<pos:position pos:line="1793" pos:column="53"/></operator> <name><name pos:line="1793" pos:column="54">cache<pos:position pos:line="1793" pos:column="59"/></name><operator pos:line="1793" pos:column="59">-&gt;<pos:position pos:line="1793" pos:column="64"/></operator><name pos:line="1793" pos:column="61">next<pos:position pos:line="1793" pos:column="65"/></name></name></expr></incr>)<pos:position pos:line="1793" pos:column="66"/></control> <block pos:line="1793" pos:column="67">{
        <if pos:line="1794" pos:column="9">if <condition pos:line="1794" pos:column="12">(<expr><name><name pos:line="1794" pos:column="13">cache<pos:position pos:line="1794" pos:column="18"/></name><operator pos:line="1794" pos:column="18">-&gt;<pos:position pos:line="1794" pos:column="23"/></operator><name pos:line="1794" pos:column="20">override<pos:position pos:line="1794" pos:column="28"/></name></name> <operator pos:line="1794" pos:column="29">==<pos:position pos:line="1794" pos:column="31"/></operator> <name pos:line="1794" pos:column="32">override<pos:position pos:line="1794" pos:column="40"/></name> <operator pos:line="1794" pos:column="41">&amp;&amp;<pos:position pos:line="1794" pos:column="51"/></operator> <call><name pos:line="1794" pos:column="44">strcmp<pos:position pos:line="1794" pos:column="50"/></name><argument_list pos:line="1794" pos:column="50">(<argument><expr><name><name pos:line="1794" pos:column="51">cache<pos:position pos:line="1794" pos:column="56"/></name><operator pos:line="1794" pos:column="56">-&gt;<pos:position pos:line="1794" pos:column="61"/></operator><name pos:line="1794" pos:column="58">dir<pos:position pos:line="1794" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="1794" pos:column="63">d<pos:position pos:line="1794" pos:column="64"/></name></expr></argument>)<pos:position pos:line="1794" pos:column="65"/></argument_list></call> <operator pos:line="1794" pos:column="66">==<pos:position pos:line="1794" pos:column="68"/></operator> <literal type="number" pos:line="1794" pos:column="69">0<pos:position pos:line="1794" pos:column="70"/></literal></expr>)<pos:position pos:line="1794" pos:column="71"/></condition><then pos:line="1794" pos:column="71"> <block pos:line="1794" pos:column="72">{
            <expr_stmt><expr><operator pos:line="1795" pos:column="13">*<pos:position pos:line="1795" pos:column="14"/></operator><name pos:line="1795" pos:column="14">result<pos:position pos:line="1795" pos:column="20"/></name> <operator pos:line="1795" pos:column="21">=<pos:position pos:line="1795" pos:column="22"/></operator> <name><name pos:line="1795" pos:column="23">cache<pos:position pos:line="1795" pos:column="28"/></name><operator pos:line="1795" pos:column="28">-&gt;<pos:position pos:line="1795" pos:column="33"/></operator><name pos:line="1795" pos:column="30">htaccess<pos:position pos:line="1795" pos:column="38"/></name></name></expr>;<pos:position pos:line="1795" pos:column="39"/></expr_stmt>
            <return pos:line="1796" pos:column="13">return <expr><name pos:line="1796" pos:column="20">OK<pos:position pos:line="1796" pos:column="22"/></name></expr>;<pos:position pos:line="1796" pos:column="23"/></return>
        }<pos:position pos:line="1797" pos:column="10"/></block></then></if>
    }<pos:position pos:line="1798" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="1800" pos:column="5">parms<pos:position pos:line="1800" pos:column="10"/></name> <operator pos:line="1800" pos:column="11">=<pos:position pos:line="1800" pos:column="12"/></operator> <name pos:line="1800" pos:column="13">default_parms<pos:position pos:line="1800" pos:column="26"/></name></expr>;<pos:position pos:line="1800" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1801" pos:column="5">parms<pos:position pos:line="1801" pos:column="10"/></name><operator pos:line="1801" pos:column="10">.<pos:position pos:line="1801" pos:column="11"/></operator><name pos:line="1801" pos:column="11">override<pos:position pos:line="1801" pos:column="19"/></name></name> <operator pos:line="1801" pos:column="20">=<pos:position pos:line="1801" pos:column="21"/></operator> <name pos:line="1801" pos:column="22">override<pos:position pos:line="1801" pos:column="30"/></name></expr>;<pos:position pos:line="1801" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1802" pos:column="5">parms<pos:position pos:line="1802" pos:column="10"/></name><operator pos:line="1802" pos:column="10">.<pos:position pos:line="1802" pos:column="11"/></operator><name pos:line="1802" pos:column="11">override_opts<pos:position pos:line="1802" pos:column="24"/></name></name> <operator pos:line="1802" pos:column="25">=<pos:position pos:line="1802" pos:column="26"/></operator> <name pos:line="1802" pos:column="27">override_opts<pos:position pos:line="1802" pos:column="40"/></name></expr>;<pos:position pos:line="1802" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1803" pos:column="5">parms<pos:position pos:line="1803" pos:column="10"/></name><operator pos:line="1803" pos:column="10">.<pos:position pos:line="1803" pos:column="11"/></operator><name pos:line="1803" pos:column="11">pool<pos:position pos:line="1803" pos:column="15"/></name></name> <operator pos:line="1803" pos:column="16">=<pos:position pos:line="1803" pos:column="17"/></operator> <name><name pos:line="1803" pos:column="18">r<pos:position pos:line="1803" pos:column="19"/></name><operator pos:line="1803" pos:column="19">-&gt;<pos:position pos:line="1803" pos:column="24"/></operator><name pos:line="1803" pos:column="21">pool<pos:position pos:line="1803" pos:column="25"/></name></name></expr>;<pos:position pos:line="1803" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1804" pos:column="5">parms<pos:position pos:line="1804" pos:column="10"/></name><operator pos:line="1804" pos:column="10">.<pos:position pos:line="1804" pos:column="11"/></operator><name pos:line="1804" pos:column="11">temp_pool<pos:position pos:line="1804" pos:column="20"/></name></name> <operator pos:line="1804" pos:column="21">=<pos:position pos:line="1804" pos:column="22"/></operator> <name><name pos:line="1804" pos:column="23">r<pos:position pos:line="1804" pos:column="24"/></name><operator pos:line="1804" pos:column="24">-&gt;<pos:position pos:line="1804" pos:column="29"/></operator><name pos:line="1804" pos:column="26">pool<pos:position pos:line="1804" pos:column="30"/></name></name></expr>;<pos:position pos:line="1804" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1805" pos:column="5">parms<pos:position pos:line="1805" pos:column="10"/></name><operator pos:line="1805" pos:column="10">.<pos:position pos:line="1805" pos:column="11"/></operator><name pos:line="1805" pos:column="11">server<pos:position pos:line="1805" pos:column="17"/></name></name> <operator pos:line="1805" pos:column="18">=<pos:position pos:line="1805" pos:column="19"/></operator> <name><name pos:line="1805" pos:column="20">r<pos:position pos:line="1805" pos:column="21"/></name><operator pos:line="1805" pos:column="21">-&gt;<pos:position pos:line="1805" pos:column="26"/></operator><name pos:line="1805" pos:column="23">server<pos:position pos:line="1805" pos:column="29"/></name></name></expr>;<pos:position pos:line="1805" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1806" pos:column="5">parms<pos:position pos:line="1806" pos:column="10"/></name><operator pos:line="1806" pos:column="10">.<pos:position pos:line="1806" pos:column="11"/></operator><name pos:line="1806" pos:column="11">path<pos:position pos:line="1806" pos:column="15"/></name></name> <operator pos:line="1806" pos:column="16">=<pos:position pos:line="1806" pos:column="17"/></operator> <call><name pos:line="1806" pos:column="18">apr_pstrdup<pos:position pos:line="1806" pos:column="29"/></name><argument_list pos:line="1806" pos:column="29">(<argument><expr><name><name pos:line="1806" pos:column="30">r<pos:position pos:line="1806" pos:column="31"/></name><operator pos:line="1806" pos:column="31">-&gt;<pos:position pos:line="1806" pos:column="36"/></operator><name pos:line="1806" pos:column="33">pool<pos:position pos:line="1806" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="1806" pos:column="39">d<pos:position pos:line="1806" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1806" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="1806" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="1808" pos:column="5">/* loop through the access names and find the first one */</comment>
    <while pos:line="1809" pos:column="5">while <condition pos:line="1809" pos:column="11">(<expr><name><name pos:line="1809" pos:column="12">access_name<pos:position pos:line="1809" pos:column="23"/></name><index pos:line="1809" pos:column="23">[<expr><literal type="number" pos:line="1809" pos:column="24">0<pos:position pos:line="1809" pos:column="25"/></literal></expr>]<pos:position pos:line="1809" pos:column="26"/></index></name></expr>)<pos:position pos:line="1809" pos:column="27"/></condition> <block pos:line="1809" pos:column="28">{
        <comment type="block" pos:line="1810" pos:column="9">/* AFAICT; there is no use of the actual 'filename' against
         * any canonicalization, so we will simply take the given
         * name, ignoring case sensitivity and aliases
         */</comment>
        <expr_stmt><expr><name pos:line="1814" pos:column="9">filename<pos:position pos:line="1814" pos:column="17"/></name> <operator pos:line="1814" pos:column="18">=<pos:position pos:line="1814" pos:column="19"/></operator> <call><name pos:line="1814" pos:column="20">ap_make_full_path<pos:position pos:line="1814" pos:column="37"/></name><argument_list pos:line="1814" pos:column="37">(<argument><expr><name><name pos:line="1814" pos:column="38">r<pos:position pos:line="1814" pos:column="39"/></name><operator pos:line="1814" pos:column="39">-&gt;<pos:position pos:line="1814" pos:column="44"/></operator><name pos:line="1814" pos:column="41">pool<pos:position pos:line="1814" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="1814" pos:column="47">d<pos:position pos:line="1814" pos:column="48"/></name></expr></argument>,
                                     <argument><expr><call><name pos:line="1815" pos:column="38">ap_getword_conf<pos:position pos:line="1815" pos:column="53"/></name><argument_list pos:line="1815" pos:column="53">(<argument><expr><name><name pos:line="1815" pos:column="54">r<pos:position pos:line="1815" pos:column="55"/></name><operator pos:line="1815" pos:column="55">-&gt;<pos:position pos:line="1815" pos:column="60"/></operator><name pos:line="1815" pos:column="57">pool<pos:position pos:line="1815" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="1815" pos:column="63">&amp;<pos:position pos:line="1815" pos:column="68"/></operator><name pos:line="1815" pos:column="64">access_name<pos:position pos:line="1815" pos:column="75"/></name></expr></argument>)<pos:position pos:line="1815" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="1815" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="1815" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><name pos:line="1816" pos:column="9">status<pos:position pos:line="1816" pos:column="15"/></name> <operator pos:line="1816" pos:column="16">=<pos:position pos:line="1816" pos:column="17"/></operator> <call><name pos:line="1816" pos:column="18">ap_pcfg_openfile<pos:position pos:line="1816" pos:column="34"/></name><argument_list pos:line="1816" pos:column="34">(<argument><expr><operator pos:line="1816" pos:column="35">&amp;<pos:position pos:line="1816" pos:column="40"/></operator><name pos:line="1816" pos:column="36">f<pos:position pos:line="1816" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="1816" pos:column="39">r<pos:position pos:line="1816" pos:column="40"/></name><operator pos:line="1816" pos:column="40">-&gt;<pos:position pos:line="1816" pos:column="45"/></operator><name pos:line="1816" pos:column="42">pool<pos:position pos:line="1816" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="1816" pos:column="48">filename<pos:position pos:line="1816" pos:column="56"/></name></expr></argument>)<pos:position pos:line="1816" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="1816" pos:column="58"/></expr_stmt>

        <if pos:line="1818" pos:column="9">if <condition pos:line="1818" pos:column="12">(<expr><name pos:line="1818" pos:column="13">status<pos:position pos:line="1818" pos:column="19"/></name> <operator pos:line="1818" pos:column="20">==<pos:position pos:line="1818" pos:column="22"/></operator> <name pos:line="1818" pos:column="23">APR_SUCCESS<pos:position pos:line="1818" pos:column="34"/></name></expr>)<pos:position pos:line="1818" pos:column="35"/></condition><then pos:line="1818" pos:column="35"> <block pos:line="1818" pos:column="36">{
            <decl_stmt><decl><type><specifier pos:line="1819" pos:column="13">const<pos:position pos:line="1819" pos:column="18"/></specifier> <name pos:line="1819" pos:column="19">char<pos:position pos:line="1819" pos:column="23"/></name> <modifier pos:line="1819" pos:column="24">*<pos:position pos:line="1819" pos:column="25"/></modifier></type><name pos:line="1819" pos:column="25">errmsg<pos:position pos:line="1819" pos:column="31"/></name></decl>;<pos:position pos:line="1819" pos:column="32"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="1820" pos:column="13">ap_directive_t<pos:position pos:line="1820" pos:column="27"/></name> <modifier pos:line="1820" pos:column="28">*<pos:position pos:line="1820" pos:column="29"/></modifier></type><name pos:line="1820" pos:column="29">temptree<pos:position pos:line="1820" pos:column="37"/></name> <init pos:line="1820" pos:column="38">= <expr><name pos:line="1820" pos:column="40">NULL<pos:position pos:line="1820" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="1820" pos:column="45"/></decl_stmt>

            <expr_stmt><expr><name pos:line="1822" pos:column="13">dc<pos:position pos:line="1822" pos:column="15"/></name> <operator pos:line="1822" pos:column="16">=<pos:position pos:line="1822" pos:column="17"/></operator> <call><name pos:line="1822" pos:column="18">ap_create_per_dir_config<pos:position pos:line="1822" pos:column="42"/></name><argument_list pos:line="1822" pos:column="42">(<argument><expr><name><name pos:line="1822" pos:column="43">r<pos:position pos:line="1822" pos:column="44"/></name><operator pos:line="1822" pos:column="44">-&gt;<pos:position pos:line="1822" pos:column="49"/></operator><name pos:line="1822" pos:column="46">pool<pos:position pos:line="1822" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="1822" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="1822" pos:column="52"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="1824" pos:column="13">parms<pos:position pos:line="1824" pos:column="18"/></name><operator pos:line="1824" pos:column="18">.<pos:position pos:line="1824" pos:column="19"/></operator><name pos:line="1824" pos:column="19">config_file<pos:position pos:line="1824" pos:column="30"/></name></name> <operator pos:line="1824" pos:column="31">=<pos:position pos:line="1824" pos:column="32"/></operator> <name pos:line="1824" pos:column="33">f<pos:position pos:line="1824" pos:column="34"/></name></expr>;<pos:position pos:line="1824" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="1825" pos:column="13">errmsg<pos:position pos:line="1825" pos:column="19"/></name> <operator pos:line="1825" pos:column="20">=<pos:position pos:line="1825" pos:column="21"/></operator> <call><name pos:line="1825" pos:column="22">ap_build_config<pos:position pos:line="1825" pos:column="37"/></name><argument_list pos:line="1825" pos:column="37">(<argument><expr><operator pos:line="1825" pos:column="38">&amp;<pos:position pos:line="1825" pos:column="43"/></operator><name pos:line="1825" pos:column="39">parms<pos:position pos:line="1825" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="1825" pos:column="46">r<pos:position pos:line="1825" pos:column="47"/></name><operator pos:line="1825" pos:column="47">-&gt;<pos:position pos:line="1825" pos:column="52"/></operator><name pos:line="1825" pos:column="49">pool<pos:position pos:line="1825" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="1825" pos:column="55">r<pos:position pos:line="1825" pos:column="56"/></name><operator pos:line="1825" pos:column="56">-&gt;<pos:position pos:line="1825" pos:column="61"/></operator><name pos:line="1825" pos:column="58">pool<pos:position pos:line="1825" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="1825" pos:column="64">&amp;<pos:position pos:line="1825" pos:column="69"/></operator><name pos:line="1825" pos:column="65">temptree<pos:position pos:line="1825" pos:column="73"/></name></expr></argument>)<pos:position pos:line="1825" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="1825" pos:column="75"/></expr_stmt>
            <if pos:line="1826" pos:column="13">if <condition pos:line="1826" pos:column="16">(<expr><name pos:line="1826" pos:column="17">errmsg<pos:position pos:line="1826" pos:column="23"/></name> <operator pos:line="1826" pos:column="24">==<pos:position pos:line="1826" pos:column="26"/></operator> <name pos:line="1826" pos:column="27">NULL<pos:position pos:line="1826" pos:column="31"/></name></expr>)<pos:position pos:line="1826" pos:column="32"/></condition><then pos:line="1826" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><name pos:line="1827" pos:column="17">errmsg<pos:position pos:line="1827" pos:column="23"/></name> <operator pos:line="1827" pos:column="24">=<pos:position pos:line="1827" pos:column="25"/></operator> <call><name pos:line="1827" pos:column="26">ap_walk_config<pos:position pos:line="1827" pos:column="40"/></name><argument_list pos:line="1827" pos:column="40">(<argument><expr><name pos:line="1827" pos:column="41">temptree<pos:position pos:line="1827" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="1827" pos:column="51">&amp;<pos:position pos:line="1827" pos:column="56"/></operator><name pos:line="1827" pos:column="52">parms<pos:position pos:line="1827" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="1827" pos:column="59">dc<pos:position pos:line="1827" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1827" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1827" pos:column="63"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="1829" pos:column="13">ap_cfg_closefile<pos:position pos:line="1829" pos:column="29"/></name><argument_list pos:line="1829" pos:column="29">(<argument><expr><name pos:line="1829" pos:column="30">f<pos:position pos:line="1829" pos:column="31"/></name></expr></argument>)<pos:position pos:line="1829" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="1829" pos:column="33"/></expr_stmt>

            <if pos:line="1831" pos:column="13">if <condition pos:line="1831" pos:column="16">(<expr><name pos:line="1831" pos:column="17">errmsg<pos:position pos:line="1831" pos:column="23"/></name></expr>)<pos:position pos:line="1831" pos:column="24"/></condition><then pos:line="1831" pos:column="24"> <block pos:line="1831" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="1832" pos:column="17">ap_log_rerror<pos:position pos:line="1832" pos:column="30"/></name><argument_list pos:line="1832" pos:column="30">(<argument><expr><name pos:line="1832" pos:column="31">APLOG_MARK<pos:position pos:line="1832" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1832" pos:column="43">APLOG_ALERT<pos:position pos:line="1832" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1832" pos:column="56">0<pos:position pos:line="1832" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="1832" pos:column="59">r<pos:position pos:line="1832" pos:column="60"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="1833" pos:column="31">"%s: %s"<pos:position pos:line="1833" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="1833" pos:column="41">filename<pos:position pos:line="1833" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="1833" pos:column="51">errmsg<pos:position pos:line="1833" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1833" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1833" pos:column="59"/></expr_stmt>
                <return pos:line="1834" pos:column="17">return <expr><name pos:line="1834" pos:column="24">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="1834" pos:column="50"/></name></expr>;<pos:position pos:line="1834" pos:column="51"/></return>
            }<pos:position pos:line="1835" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="1837" pos:column="13">*<pos:position pos:line="1837" pos:column="14"/></operator><name pos:line="1837" pos:column="14">result<pos:position pos:line="1837" pos:column="20"/></name> <operator pos:line="1837" pos:column="21">=<pos:position pos:line="1837" pos:column="22"/></operator> <name pos:line="1837" pos:column="23">dc<pos:position pos:line="1837" pos:column="25"/></name></expr>;<pos:position pos:line="1837" pos:column="26"/></expr_stmt>
            <break pos:line="1838" pos:column="13">break;<pos:position pos:line="1838" pos:column="19"/></break>
        }<pos:position pos:line="1839" pos:column="10"/></block></then>
        <else pos:line="1840" pos:column="9">else <block pos:line="1840" pos:column="14">{
            <if pos:line="1841" pos:column="13">if <condition pos:line="1841" pos:column="16">(<expr><operator pos:line="1841" pos:column="17">!<pos:position pos:line="1841" pos:column="18"/></operator><call><name pos:line="1841" pos:column="18">APR_STATUS_IS_ENOENT<pos:position pos:line="1841" pos:column="38"/></name><argument_list pos:line="1841" pos:column="38">(<argument><expr><name pos:line="1841" pos:column="39">status<pos:position pos:line="1841" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1841" pos:column="46"/></argument_list></call>
                <operator pos:line="1842" pos:column="17">&amp;&amp;<pos:position pos:line="1842" pos:column="27"/></operator> <operator pos:line="1842" pos:column="20">!<pos:position pos:line="1842" pos:column="21"/></operator><call><name pos:line="1842" pos:column="21">APR_STATUS_IS_ENOTDIR<pos:position pos:line="1842" pos:column="42"/></name><argument_list pos:line="1842" pos:column="42">(<argument><expr><name pos:line="1842" pos:column="43">status<pos:position pos:line="1842" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1842" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="1842" pos:column="51"/></condition><then pos:line="1842" pos:column="51"> <block pos:line="1842" pos:column="52">{
                <expr_stmt><expr><call><name pos:line="1843" pos:column="17">ap_log_rerror<pos:position pos:line="1843" pos:column="30"/></name><argument_list pos:line="1843" pos:column="30">(<argument><expr><name pos:line="1843" pos:column="31">APLOG_MARK<pos:position pos:line="1843" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1843" pos:column="43">APLOG_CRIT<pos:position pos:line="1843" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="1843" pos:column="55">status<pos:position pos:line="1843" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="1843" pos:column="63">r<pos:position pos:line="1843" pos:column="64"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="1844" pos:column="31">"%s pcfg_openfile: unable to check htaccess file, "<pos:position pos:line="1844" pos:column="82"/></literal>
                              <literal type="string" pos:line="1845" pos:column="31">"ensure it is readable"<pos:position pos:line="1845" pos:column="54"/></literal></expr></argument>,
                              <argument><expr><name pos:line="1846" pos:column="31">filename<pos:position pos:line="1846" pos:column="39"/></name></expr></argument>)<pos:position pos:line="1846" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="1846" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="1847" pos:column="17">apr_table_setn<pos:position pos:line="1847" pos:column="31"/></name><argument_list pos:line="1847" pos:column="31">(<argument><expr><name><name pos:line="1847" pos:column="32">r<pos:position pos:line="1847" pos:column="33"/></name><operator pos:line="1847" pos:column="33">-&gt;<pos:position pos:line="1847" pos:column="38"/></operator><name pos:line="1847" pos:column="35">notes<pos:position pos:line="1847" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="1847" pos:column="42">"error-notes"<pos:position pos:line="1847" pos:column="55"/></literal></expr></argument>,
                               <argument><expr><literal type="string" pos:line="1848" pos:column="32">"Server unable to read htaccess file, denying "<pos:position pos:line="1848" pos:column="79"/></literal>
                               <literal type="string" pos:line="1849" pos:column="32">"access to be safe"<pos:position pos:line="1849" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="1849" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1849" pos:column="53"/></expr_stmt>
                <return pos:line="1850" pos:column="17">return <expr><name pos:line="1850" pos:column="24">HTTP_FORBIDDEN<pos:position pos:line="1850" pos:column="38"/></name></expr>;<pos:position pos:line="1850" pos:column="39"/></return>
            }<pos:position pos:line="1851" pos:column="14"/></block></then></if>
        }<pos:position pos:line="1852" pos:column="10"/></block></else></if>
    }<pos:position pos:line="1853" pos:column="6"/></block></while>

    <comment type="block" pos:line="1855" pos:column="5">/* cache it */</comment>
    <expr_stmt><expr><name pos:line="1856" pos:column="5">new<pos:position pos:line="1856" pos:column="8"/></name> <operator pos:line="1856" pos:column="9">=<pos:position pos:line="1856" pos:column="10"/></operator> <call><name pos:line="1856" pos:column="11">apr_palloc<pos:position pos:line="1856" pos:column="21"/></name><argument_list pos:line="1856" pos:column="21">(<argument><expr><name><name pos:line="1856" pos:column="22">r<pos:position pos:line="1856" pos:column="23"/></name><operator pos:line="1856" pos:column="23">-&gt;<pos:position pos:line="1856" pos:column="28"/></operator><name pos:line="1856" pos:column="25">pool<pos:position pos:line="1856" pos:column="29"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="1856" pos:column="31">sizeof<argument_list pos:line="1856" pos:column="37">(<argument><expr pos:line="1856" pos:column="38">struct <name pos:line="1856" pos:column="45">htaccess_result<pos:position pos:line="1856" pos:column="60"/></name></expr></argument>)<pos:position pos:line="1856" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1856" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="1856" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1857" pos:column="5">new<pos:position pos:line="1857" pos:column="8"/></name><operator pos:line="1857" pos:column="8">-&gt;<pos:position pos:line="1857" pos:column="13"/></operator><name pos:line="1857" pos:column="10">dir<pos:position pos:line="1857" pos:column="13"/></name></name> <operator pos:line="1857" pos:column="14">=<pos:position pos:line="1857" pos:column="15"/></operator> <name><name pos:line="1857" pos:column="16">parms<pos:position pos:line="1857" pos:column="21"/></name><operator pos:line="1857" pos:column="21">.<pos:position pos:line="1857" pos:column="22"/></operator><name pos:line="1857" pos:column="22">path<pos:position pos:line="1857" pos:column="26"/></name></name></expr>;<pos:position pos:line="1857" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1858" pos:column="5">new<pos:position pos:line="1858" pos:column="8"/></name><operator pos:line="1858" pos:column="8">-&gt;<pos:position pos:line="1858" pos:column="13"/></operator><name pos:line="1858" pos:column="10">override<pos:position pos:line="1858" pos:column="18"/></name></name> <operator pos:line="1858" pos:column="19">=<pos:position pos:line="1858" pos:column="20"/></operator> <name pos:line="1858" pos:column="21">override<pos:position pos:line="1858" pos:column="29"/></name></expr>;<pos:position pos:line="1858" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1859" pos:column="5">new<pos:position pos:line="1859" pos:column="8"/></name><operator pos:line="1859" pos:column="8">-&gt;<pos:position pos:line="1859" pos:column="13"/></operator><name pos:line="1859" pos:column="10">override_opts<pos:position pos:line="1859" pos:column="23"/></name></name> <operator pos:line="1859" pos:column="24">=<pos:position pos:line="1859" pos:column="25"/></operator> <name pos:line="1859" pos:column="26">override_opts<pos:position pos:line="1859" pos:column="39"/></name></expr>;<pos:position pos:line="1859" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1860" pos:column="5">new<pos:position pos:line="1860" pos:column="8"/></name><operator pos:line="1860" pos:column="8">-&gt;<pos:position pos:line="1860" pos:column="13"/></operator><name pos:line="1860" pos:column="10">htaccess<pos:position pos:line="1860" pos:column="18"/></name></name> <operator pos:line="1860" pos:column="19">=<pos:position pos:line="1860" pos:column="20"/></operator> <name pos:line="1860" pos:column="21">dc<pos:position pos:line="1860" pos:column="23"/></name></expr>;<pos:position pos:line="1860" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="1862" pos:column="5">/* add to head of list */</comment>
    <expr_stmt><expr><name><name pos:line="1863" pos:column="5">new<pos:position pos:line="1863" pos:column="8"/></name><operator pos:line="1863" pos:column="8">-&gt;<pos:position pos:line="1863" pos:column="13"/></operator><name pos:line="1863" pos:column="10">next<pos:position pos:line="1863" pos:column="14"/></name></name> <operator pos:line="1863" pos:column="15">=<pos:position pos:line="1863" pos:column="16"/></operator> <name><name pos:line="1863" pos:column="17">r<pos:position pos:line="1863" pos:column="18"/></name><operator pos:line="1863" pos:column="18">-&gt;<pos:position pos:line="1863" pos:column="23"/></operator><name pos:line="1863" pos:column="20">htaccess<pos:position pos:line="1863" pos:column="28"/></name></name></expr>;<pos:position pos:line="1863" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1864" pos:column="5">r<pos:position pos:line="1864" pos:column="6"/></name><operator pos:line="1864" pos:column="6">-&gt;<pos:position pos:line="1864" pos:column="11"/></operator><name pos:line="1864" pos:column="8">htaccess<pos:position pos:line="1864" pos:column="16"/></name></name> <operator pos:line="1864" pos:column="17">=<pos:position pos:line="1864" pos:column="18"/></operator> <name pos:line="1864" pos:column="19">new<pos:position pos:line="1864" pos:column="22"/></name></expr>;<pos:position pos:line="1864" pos:column="23"/></expr_stmt>

    <return pos:line="1866" pos:column="5">return <expr><name pos:line="1866" pos:column="12">OK<pos:position pos:line="1866" pos:column="14"/></name></expr>;<pos:position pos:line="1866" pos:column="15"/></return>
}<pos:position pos:line="1867" pos:column="2"/></block>

<macro><name pos:line="1869" pos:column="1">AP_CORE_DECLARE<pos:position pos:line="1869" pos:column="16"/></name><argument_list pos:line="1869" pos:column="16">(<argument pos:line="1869" pos:column="17">const char *<pos:position pos:line="1869" pos:column="29"/></argument>)<pos:position pos:line="1869" pos:column="30"/></argument_list></macro> <macro><name pos:line="1869" pos:column="31">ap_init_virtual_host<pos:position pos:line="1869" pos:column="51"/></name><argument_list pos:line="1869" pos:column="51">(<argument pos:line="1869" pos:column="52">apr_pool_t *p<pos:position pos:line="1869" pos:column="65"/></argument>,
                                                   <argument pos:line="1870" pos:column="52">const char *hostname<pos:position pos:line="1870" pos:column="72"/></argument>,
                                                   <argument pos:line="1871" pos:column="52">server_rec *main_server<pos:position pos:line="1871" pos:column="75"/></argument>,
                                                   <argument pos:line="1872" pos:column="52">server_rec **ps<pos:position pos:line="1872" pos:column="67"/></argument>)<pos:position pos:line="1872" pos:column="68"/></argument_list></macro>
<block pos:line="1873" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1874" pos:column="5">server_rec<pos:position pos:line="1874" pos:column="15"/></name> <modifier pos:line="1874" pos:column="16">*<pos:position pos:line="1874" pos:column="17"/></modifier></type><name pos:line="1874" pos:column="17">s<pos:position pos:line="1874" pos:column="18"/></name> <init pos:line="1874" pos:column="19">= <expr><operator pos:line="1874" pos:column="21">(<pos:position pos:line="1874" pos:column="22"/></operator><name pos:line="1874" pos:column="22">server_rec<pos:position pos:line="1874" pos:column="32"/></name> <operator pos:line="1874" pos:column="33">*<pos:position pos:line="1874" pos:column="34"/></operator><operator pos:line="1874" pos:column="34">)<pos:position pos:line="1874" pos:column="35"/></operator> <call><name pos:line="1874" pos:column="36">apr_pcalloc<pos:position pos:line="1874" pos:column="47"/></name><argument_list pos:line="1874" pos:column="47">(<argument><expr><name pos:line="1874" pos:column="48">p<pos:position pos:line="1874" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="1874" pos:column="51">sizeof<argument_list pos:line="1874" pos:column="57">(<argument><expr><name pos:line="1874" pos:column="58">server_rec<pos:position pos:line="1874" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1874" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1874" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1874" pos:column="71"/></decl_stmt>

    <comment type="block" pos:line="1876" pos:column="5">/* TODO: this crap belongs in http_core */</comment>
    <expr_stmt><expr><name><name pos:line="1877" pos:column="5">s<pos:position pos:line="1877" pos:column="6"/></name><operator pos:line="1877" pos:column="6">-&gt;<pos:position pos:line="1877" pos:column="11"/></operator><name pos:line="1877" pos:column="8">process<pos:position pos:line="1877" pos:column="15"/></name></name> <operator pos:line="1877" pos:column="16">=<pos:position pos:line="1877" pos:column="17"/></operator> <name><name pos:line="1877" pos:column="18">main_server<pos:position pos:line="1877" pos:column="29"/></name><operator pos:line="1877" pos:column="29">-&gt;<pos:position pos:line="1877" pos:column="34"/></operator><name pos:line="1877" pos:column="31">process<pos:position pos:line="1877" pos:column="38"/></name></name></expr>;<pos:position pos:line="1877" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1878" pos:column="5">s<pos:position pos:line="1878" pos:column="6"/></name><operator pos:line="1878" pos:column="6">-&gt;<pos:position pos:line="1878" pos:column="11"/></operator><name pos:line="1878" pos:column="8">server_admin<pos:position pos:line="1878" pos:column="20"/></name></name> <operator pos:line="1878" pos:column="21">=<pos:position pos:line="1878" pos:column="22"/></operator> <name pos:line="1878" pos:column="23">NULL<pos:position pos:line="1878" pos:column="27"/></name></expr>;<pos:position pos:line="1878" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1879" pos:column="5">s<pos:position pos:line="1879" pos:column="6"/></name><operator pos:line="1879" pos:column="6">-&gt;<pos:position pos:line="1879" pos:column="11"/></operator><name pos:line="1879" pos:column="8">server_hostname<pos:position pos:line="1879" pos:column="23"/></name></name> <operator pos:line="1879" pos:column="24">=<pos:position pos:line="1879" pos:column="25"/></operator> <name pos:line="1879" pos:column="26">NULL<pos:position pos:line="1879" pos:column="30"/></name></expr>;<pos:position pos:line="1879" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1880" pos:column="5">s<pos:position pos:line="1880" pos:column="6"/></name><operator pos:line="1880" pos:column="6">-&gt;<pos:position pos:line="1880" pos:column="11"/></operator><name pos:line="1880" pos:column="8">server_scheme<pos:position pos:line="1880" pos:column="21"/></name></name> <operator pos:line="1880" pos:column="22">=<pos:position pos:line="1880" pos:column="23"/></operator> <name pos:line="1880" pos:column="24">NULL<pos:position pos:line="1880" pos:column="28"/></name></expr>;<pos:position pos:line="1880" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1881" pos:column="5">s<pos:position pos:line="1881" pos:column="6"/></name><operator pos:line="1881" pos:column="6">-&gt;<pos:position pos:line="1881" pos:column="11"/></operator><name pos:line="1881" pos:column="8">error_fname<pos:position pos:line="1881" pos:column="19"/></name></name> <operator pos:line="1881" pos:column="20">=<pos:position pos:line="1881" pos:column="21"/></operator> <name pos:line="1881" pos:column="22">NULL<pos:position pos:line="1881" pos:column="26"/></name></expr>;<pos:position pos:line="1881" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1882" pos:column="5">s<pos:position pos:line="1882" pos:column="6"/></name><operator pos:line="1882" pos:column="6">-&gt;<pos:position pos:line="1882" pos:column="11"/></operator><name pos:line="1882" pos:column="8">timeout<pos:position pos:line="1882" pos:column="15"/></name></name> <operator pos:line="1882" pos:column="16">=<pos:position pos:line="1882" pos:column="17"/></operator> <literal type="number" pos:line="1882" pos:column="18">0<pos:position pos:line="1882" pos:column="19"/></literal></expr>;<pos:position pos:line="1882" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1883" pos:column="5">s<pos:position pos:line="1883" pos:column="6"/></name><operator pos:line="1883" pos:column="6">-&gt;<pos:position pos:line="1883" pos:column="11"/></operator><name pos:line="1883" pos:column="8">keep_alive_timeout<pos:position pos:line="1883" pos:column="26"/></name></name> <operator pos:line="1883" pos:column="27">=<pos:position pos:line="1883" pos:column="28"/></operator> <literal type="number" pos:line="1883" pos:column="29">0<pos:position pos:line="1883" pos:column="30"/></literal></expr>;<pos:position pos:line="1883" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1884" pos:column="5">s<pos:position pos:line="1884" pos:column="6"/></name><operator pos:line="1884" pos:column="6">-&gt;<pos:position pos:line="1884" pos:column="11"/></operator><name pos:line="1884" pos:column="8">keep_alive<pos:position pos:line="1884" pos:column="18"/></name></name> <operator pos:line="1884" pos:column="19">=<pos:position pos:line="1884" pos:column="20"/></operator> <operator pos:line="1884" pos:column="21">-<pos:position pos:line="1884" pos:column="22"/></operator><literal type="number" pos:line="1884" pos:column="22">1<pos:position pos:line="1884" pos:column="23"/></literal></expr>;<pos:position pos:line="1884" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1885" pos:column="5">s<pos:position pos:line="1885" pos:column="6"/></name><operator pos:line="1885" pos:column="6">-&gt;<pos:position pos:line="1885" pos:column="11"/></operator><name pos:line="1885" pos:column="8">keep_alive_max<pos:position pos:line="1885" pos:column="22"/></name></name> <operator pos:line="1885" pos:column="23">=<pos:position pos:line="1885" pos:column="24"/></operator> <operator pos:line="1885" pos:column="25">-<pos:position pos:line="1885" pos:column="26"/></operator><literal type="number" pos:line="1885" pos:column="26">1<pos:position pos:line="1885" pos:column="27"/></literal></expr>;<pos:position pos:line="1885" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1886" pos:column="5">s<pos:position pos:line="1886" pos:column="6"/></name><operator pos:line="1886" pos:column="6">-&gt;<pos:position pos:line="1886" pos:column="11"/></operator><name pos:line="1886" pos:column="8">error_log<pos:position pos:line="1886" pos:column="17"/></name></name> <operator pos:line="1886" pos:column="18">=<pos:position pos:line="1886" pos:column="19"/></operator> <name><name pos:line="1886" pos:column="20">main_server<pos:position pos:line="1886" pos:column="31"/></name><operator pos:line="1886" pos:column="31">-&gt;<pos:position pos:line="1886" pos:column="36"/></operator><name pos:line="1886" pos:column="33">error_log<pos:position pos:line="1886" pos:column="42"/></name></name></expr>;<pos:position pos:line="1886" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1887" pos:column="5">s<pos:position pos:line="1887" pos:column="6"/></name><operator pos:line="1887" pos:column="6">-&gt;<pos:position pos:line="1887" pos:column="11"/></operator><name pos:line="1887" pos:column="8">loglevel<pos:position pos:line="1887" pos:column="16"/></name></name> <operator pos:line="1887" pos:column="17">=<pos:position pos:line="1887" pos:column="18"/></operator> <name><name pos:line="1887" pos:column="19">main_server<pos:position pos:line="1887" pos:column="30"/></name><operator pos:line="1887" pos:column="30">-&gt;<pos:position pos:line="1887" pos:column="35"/></operator><name pos:line="1887" pos:column="32">loglevel<pos:position pos:line="1887" pos:column="40"/></name></name></expr>;<pos:position pos:line="1887" pos:column="41"/></expr_stmt>
    <comment type="block" pos:line="1888" pos:column="5">/* useful default, otherwise we get a port of 0 on redirects */</comment>
    <expr_stmt><expr><name><name pos:line="1889" pos:column="5">s<pos:position pos:line="1889" pos:column="6"/></name><operator pos:line="1889" pos:column="6">-&gt;<pos:position pos:line="1889" pos:column="11"/></operator><name pos:line="1889" pos:column="8">port<pos:position pos:line="1889" pos:column="12"/></name></name> <operator pos:line="1889" pos:column="13">=<pos:position pos:line="1889" pos:column="14"/></operator> <name><name pos:line="1889" pos:column="15">main_server<pos:position pos:line="1889" pos:column="26"/></name><operator pos:line="1889" pos:column="26">-&gt;<pos:position pos:line="1889" pos:column="31"/></operator><name pos:line="1889" pos:column="28">port<pos:position pos:line="1889" pos:column="32"/></name></name></expr>;<pos:position pos:line="1889" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1890" pos:column="5">s<pos:position pos:line="1890" pos:column="6"/></name><operator pos:line="1890" pos:column="6">-&gt;<pos:position pos:line="1890" pos:column="11"/></operator><name pos:line="1890" pos:column="8">next<pos:position pos:line="1890" pos:column="12"/></name></name> <operator pos:line="1890" pos:column="13">=<pos:position pos:line="1890" pos:column="14"/></operator> <name pos:line="1890" pos:column="15">NULL<pos:position pos:line="1890" pos:column="19"/></name></expr>;<pos:position pos:line="1890" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="1892" pos:column="5">s<pos:position pos:line="1892" pos:column="6"/></name><operator pos:line="1892" pos:column="6">-&gt;<pos:position pos:line="1892" pos:column="11"/></operator><name pos:line="1892" pos:column="8">is_virtual<pos:position pos:line="1892" pos:column="18"/></name></name> <operator pos:line="1892" pos:column="19">=<pos:position pos:line="1892" pos:column="20"/></operator> <literal type="number" pos:line="1892" pos:column="21">1<pos:position pos:line="1892" pos:column="22"/></literal></expr>;<pos:position pos:line="1892" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1893" pos:column="5">s<pos:position pos:line="1893" pos:column="6"/></name><operator pos:line="1893" pos:column="6">-&gt;<pos:position pos:line="1893" pos:column="11"/></operator><name pos:line="1893" pos:column="8">names<pos:position pos:line="1893" pos:column="13"/></name></name> <operator pos:line="1893" pos:column="14">=<pos:position pos:line="1893" pos:column="15"/></operator> <call><name pos:line="1893" pos:column="16">apr_array_make<pos:position pos:line="1893" pos:column="30"/></name><argument_list pos:line="1893" pos:column="30">(<argument><expr><name pos:line="1893" pos:column="31">p<pos:position pos:line="1893" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1893" pos:column="34">4<pos:position pos:line="1893" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="1893" pos:column="37">sizeof<argument_list pos:line="1893" pos:column="43">(<argument><expr><name pos:line="1893" pos:column="44">char<pos:position pos:line="1893" pos:column="48"/></name> <operator pos:line="1893" pos:column="49">*<pos:position pos:line="1893" pos:column="50"/></operator><operator pos:line="1893" pos:column="50">*<pos:position pos:line="1893" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="1893" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1893" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1893" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1894" pos:column="5">s<pos:position pos:line="1894" pos:column="6"/></name><operator pos:line="1894" pos:column="6">-&gt;<pos:position pos:line="1894" pos:column="11"/></operator><name pos:line="1894" pos:column="8">wild_names<pos:position pos:line="1894" pos:column="18"/></name></name> <operator pos:line="1894" pos:column="19">=<pos:position pos:line="1894" pos:column="20"/></operator> <call><name pos:line="1894" pos:column="21">apr_array_make<pos:position pos:line="1894" pos:column="35"/></name><argument_list pos:line="1894" pos:column="35">(<argument><expr><name pos:line="1894" pos:column="36">p<pos:position pos:line="1894" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1894" pos:column="39">4<pos:position pos:line="1894" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="1894" pos:column="42">sizeof<argument_list pos:line="1894" pos:column="48">(<argument><expr><name pos:line="1894" pos:column="49">char<pos:position pos:line="1894" pos:column="53"/></name> <operator pos:line="1894" pos:column="54">*<pos:position pos:line="1894" pos:column="55"/></operator><operator pos:line="1894" pos:column="55">*<pos:position pos:line="1894" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="1894" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1894" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1894" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="1896" pos:column="5">s<pos:position pos:line="1896" pos:column="6"/></name><operator pos:line="1896" pos:column="6">-&gt;<pos:position pos:line="1896" pos:column="11"/></operator><name pos:line="1896" pos:column="8">module_config<pos:position pos:line="1896" pos:column="21"/></name></name> <operator pos:line="1896" pos:column="22">=<pos:position pos:line="1896" pos:column="23"/></operator> <call><name pos:line="1896" pos:column="24">create_empty_config<pos:position pos:line="1896" pos:column="43"/></name><argument_list pos:line="1896" pos:column="43">(<argument><expr><name pos:line="1896" pos:column="44">p<pos:position pos:line="1896" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1896" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="1896" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1897" pos:column="5">s<pos:position pos:line="1897" pos:column="6"/></name><operator pos:line="1897" pos:column="6">-&gt;<pos:position pos:line="1897" pos:column="11"/></operator><name pos:line="1897" pos:column="8">lookup_defaults<pos:position pos:line="1897" pos:column="23"/></name></name> <operator pos:line="1897" pos:column="24">=<pos:position pos:line="1897" pos:column="25"/></operator> <call><name pos:line="1897" pos:column="26">ap_create_per_dir_config<pos:position pos:line="1897" pos:column="50"/></name><argument_list pos:line="1897" pos:column="50">(<argument><expr><name pos:line="1897" pos:column="51">p<pos:position pos:line="1897" pos:column="52"/></name></expr></argument>)<pos:position pos:line="1897" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="1897" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="1899" pos:column="5">s<pos:position pos:line="1899" pos:column="6"/></name><operator pos:line="1899" pos:column="6">-&gt;<pos:position pos:line="1899" pos:column="11"/></operator><name pos:line="1899" pos:column="8">limit_req_line<pos:position pos:line="1899" pos:column="22"/></name></name> <operator pos:line="1899" pos:column="23">=<pos:position pos:line="1899" pos:column="24"/></operator> <name><name pos:line="1899" pos:column="25">main_server<pos:position pos:line="1899" pos:column="36"/></name><operator pos:line="1899" pos:column="36">-&gt;<pos:position pos:line="1899" pos:column="41"/></operator><name pos:line="1899" pos:column="38">limit_req_line<pos:position pos:line="1899" pos:column="52"/></name></name></expr>;<pos:position pos:line="1899" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1900" pos:column="5">s<pos:position pos:line="1900" pos:column="6"/></name><operator pos:line="1900" pos:column="6">-&gt;<pos:position pos:line="1900" pos:column="11"/></operator><name pos:line="1900" pos:column="8">limit_req_fieldsize<pos:position pos:line="1900" pos:column="27"/></name></name> <operator pos:line="1900" pos:column="28">=<pos:position pos:line="1900" pos:column="29"/></operator> <name><name pos:line="1900" pos:column="30">main_server<pos:position pos:line="1900" pos:column="41"/></name><operator pos:line="1900" pos:column="41">-&gt;<pos:position pos:line="1900" pos:column="46"/></operator><name pos:line="1900" pos:column="43">limit_req_fieldsize<pos:position pos:line="1900" pos:column="62"/></name></name></expr>;<pos:position pos:line="1900" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1901" pos:column="5">s<pos:position pos:line="1901" pos:column="6"/></name><operator pos:line="1901" pos:column="6">-&gt;<pos:position pos:line="1901" pos:column="11"/></operator><name pos:line="1901" pos:column="8">limit_req_fields<pos:position pos:line="1901" pos:column="24"/></name></name> <operator pos:line="1901" pos:column="25">=<pos:position pos:line="1901" pos:column="26"/></operator> <name><name pos:line="1901" pos:column="27">main_server<pos:position pos:line="1901" pos:column="38"/></name><operator pos:line="1901" pos:column="38">-&gt;<pos:position pos:line="1901" pos:column="43"/></operator><name pos:line="1901" pos:column="40">limit_req_fields<pos:position pos:line="1901" pos:column="56"/></name></name></expr>;<pos:position pos:line="1901" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="1903" pos:column="5">*<pos:position pos:line="1903" pos:column="6"/></operator><name pos:line="1903" pos:column="6">ps<pos:position pos:line="1903" pos:column="8"/></name> <operator pos:line="1903" pos:column="9">=<pos:position pos:line="1903" pos:column="10"/></operator> <name pos:line="1903" pos:column="11">s<pos:position pos:line="1903" pos:column="12"/></name></expr>;<pos:position pos:line="1903" pos:column="13"/></expr_stmt>

    <return pos:line="1905" pos:column="5">return <expr><call><name pos:line="1905" pos:column="12">ap_parse_vhost_addrs<pos:position pos:line="1905" pos:column="32"/></name><argument_list pos:line="1905" pos:column="32">(<argument><expr><name pos:line="1905" pos:column="33">p<pos:position pos:line="1905" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1905" pos:column="36">hostname<pos:position pos:line="1905" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="1905" pos:column="46">s<pos:position pos:line="1905" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1905" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1905" pos:column="49"/></return>
}<pos:position pos:line="1906" pos:column="2"/></block>


<macro><name pos:line="1909" pos:column="1">AP_DECLARE<pos:position pos:line="1909" pos:column="11"/></name><argument_list pos:line="1909" pos:column="11">(<argument pos:line="1909" pos:column="12">void<pos:position pos:line="1909" pos:column="16"/></argument>)<pos:position pos:line="1909" pos:column="17"/></argument_list></macro> <macro><name pos:line="1909" pos:column="18">ap_fixup_virtual_hosts<pos:position pos:line="1909" pos:column="40"/></name><argument_list pos:line="1909" pos:column="40">(<argument pos:line="1909" pos:column="41">apr_pool_t *p<pos:position pos:line="1909" pos:column="54"/></argument>, <argument pos:line="1909" pos:column="56">server_rec *main_server<pos:position pos:line="1909" pos:column="79"/></argument>)<pos:position pos:line="1909" pos:column="80"/></argument_list></macro>
<block pos:line="1910" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1911" pos:column="5">server_rec<pos:position pos:line="1911" pos:column="15"/></name> <modifier pos:line="1911" pos:column="16">*<pos:position pos:line="1911" pos:column="17"/></modifier></type><name pos:line="1911" pos:column="17">virt<pos:position pos:line="1911" pos:column="21"/></name></decl>;<pos:position pos:line="1911" pos:column="22"/></decl_stmt>

    <for pos:line="1913" pos:column="5">for <control pos:line="1913" pos:column="9">(<init><expr><name pos:line="1913" pos:column="10">virt<pos:position pos:line="1913" pos:column="14"/></name> <operator pos:line="1913" pos:column="15">=<pos:position pos:line="1913" pos:column="16"/></operator> <name><name pos:line="1913" pos:column="17">main_server<pos:position pos:line="1913" pos:column="28"/></name><operator pos:line="1913" pos:column="28">-&gt;<pos:position pos:line="1913" pos:column="33"/></operator><name pos:line="1913" pos:column="30">next<pos:position pos:line="1913" pos:column="34"/></name></name></expr>;<pos:position pos:line="1913" pos:column="35"/></init> <condition><expr><name pos:line="1913" pos:column="36">virt<pos:position pos:line="1913" pos:column="40"/></name></expr>;<pos:position pos:line="1913" pos:column="41"/></condition> <incr><expr><name pos:line="1913" pos:column="42">virt<pos:position pos:line="1913" pos:column="46"/></name> <operator pos:line="1913" pos:column="47">=<pos:position pos:line="1913" pos:column="48"/></operator> <name><name pos:line="1913" pos:column="49">virt<pos:position pos:line="1913" pos:column="53"/></name><operator pos:line="1913" pos:column="53">-&gt;<pos:position pos:line="1913" pos:column="58"/></operator><name pos:line="1913" pos:column="55">next<pos:position pos:line="1913" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="1913" pos:column="60"/></control> <block pos:line="1913" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="1914" pos:column="9">merge_server_configs<pos:position pos:line="1914" pos:column="29"/></name><argument_list pos:line="1914" pos:column="29">(<argument><expr><name pos:line="1914" pos:column="30">p<pos:position pos:line="1914" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="1914" pos:column="33">main_server<pos:position pos:line="1914" pos:column="44"/></name><operator pos:line="1914" pos:column="44">-&gt;<pos:position pos:line="1914" pos:column="49"/></operator><name pos:line="1914" pos:column="46">module_config<pos:position pos:line="1914" pos:column="59"/></name></name></expr></argument>,
                             <argument><expr><name><name pos:line="1915" pos:column="30">virt<pos:position pos:line="1915" pos:column="34"/></name><operator pos:line="1915" pos:column="34">-&gt;<pos:position pos:line="1915" pos:column="39"/></operator><name pos:line="1915" pos:column="36">module_config<pos:position pos:line="1915" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="1915" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1915" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="1917" pos:column="9">virt<pos:position pos:line="1917" pos:column="13"/></name><operator pos:line="1917" pos:column="13">-&gt;<pos:position pos:line="1917" pos:column="18"/></operator><name pos:line="1917" pos:column="15">lookup_defaults<pos:position pos:line="1917" pos:column="30"/></name></name> <operator pos:line="1917" pos:column="31">=<pos:position pos:line="1917" pos:column="32"/></operator>
            <call><name pos:line="1918" pos:column="13">ap_merge_per_dir_configs<pos:position pos:line="1918" pos:column="37"/></name><argument_list pos:line="1918" pos:column="37">(<argument><expr><name pos:line="1918" pos:column="38">p<pos:position pos:line="1918" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="1918" pos:column="41">main_server<pos:position pos:line="1918" pos:column="52"/></name><operator pos:line="1918" pos:column="52">-&gt;<pos:position pos:line="1918" pos:column="57"/></operator><name pos:line="1918" pos:column="54">lookup_defaults<pos:position pos:line="1918" pos:column="69"/></name></name></expr></argument>,
                                     <argument><expr><name><name pos:line="1919" pos:column="38">virt<pos:position pos:line="1919" pos:column="42"/></name><operator pos:line="1919" pos:column="42">-&gt;<pos:position pos:line="1919" pos:column="47"/></operator><name pos:line="1919" pos:column="44">lookup_defaults<pos:position pos:line="1919" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="1919" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="1919" pos:column="61"/></expr_stmt>

        <if pos:line="1921" pos:column="9">if <condition pos:line="1921" pos:column="12">(<expr><name><name pos:line="1921" pos:column="13">virt<pos:position pos:line="1921" pos:column="17"/></name><operator pos:line="1921" pos:column="17">-&gt;<pos:position pos:line="1921" pos:column="22"/></operator><name pos:line="1921" pos:column="19">server_admin<pos:position pos:line="1921" pos:column="31"/></name></name> <operator pos:line="1921" pos:column="32">==<pos:position pos:line="1921" pos:column="34"/></operator> <name pos:line="1921" pos:column="35">NULL<pos:position pos:line="1921" pos:column="39"/></name></expr>)<pos:position pos:line="1921" pos:column="40"/></condition><then pos:line="1921" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="1922" pos:column="13">virt<pos:position pos:line="1922" pos:column="17"/></name><operator pos:line="1922" pos:column="17">-&gt;<pos:position pos:line="1922" pos:column="22"/></operator><name pos:line="1922" pos:column="19">server_admin<pos:position pos:line="1922" pos:column="31"/></name></name> <operator pos:line="1922" pos:column="32">=<pos:position pos:line="1922" pos:column="33"/></operator> <name><name pos:line="1922" pos:column="34">main_server<pos:position pos:line="1922" pos:column="45"/></name><operator pos:line="1922" pos:column="45">-&gt;<pos:position pos:line="1922" pos:column="50"/></operator><name pos:line="1922" pos:column="47">server_admin<pos:position pos:line="1922" pos:column="59"/></name></name></expr>;<pos:position pos:line="1922" pos:column="60"/></expr_stmt></block></then></if>

        <if pos:line="1924" pos:column="9">if <condition pos:line="1924" pos:column="12">(<expr><name><name pos:line="1924" pos:column="13">virt<pos:position pos:line="1924" pos:column="17"/></name><operator pos:line="1924" pos:column="17">-&gt;<pos:position pos:line="1924" pos:column="22"/></operator><name pos:line="1924" pos:column="19">timeout<pos:position pos:line="1924" pos:column="26"/></name></name> <operator pos:line="1924" pos:column="27">==<pos:position pos:line="1924" pos:column="29"/></operator> <literal type="number" pos:line="1924" pos:column="30">0<pos:position pos:line="1924" pos:column="31"/></literal></expr>)<pos:position pos:line="1924" pos:column="32"/></condition><then pos:line="1924" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="1925" pos:column="13">virt<pos:position pos:line="1925" pos:column="17"/></name><operator pos:line="1925" pos:column="17">-&gt;<pos:position pos:line="1925" pos:column="22"/></operator><name pos:line="1925" pos:column="19">timeout<pos:position pos:line="1925" pos:column="26"/></name></name> <operator pos:line="1925" pos:column="27">=<pos:position pos:line="1925" pos:column="28"/></operator> <name><name pos:line="1925" pos:column="29">main_server<pos:position pos:line="1925" pos:column="40"/></name><operator pos:line="1925" pos:column="40">-&gt;<pos:position pos:line="1925" pos:column="45"/></operator><name pos:line="1925" pos:column="42">timeout<pos:position pos:line="1925" pos:column="49"/></name></name></expr>;<pos:position pos:line="1925" pos:column="50"/></expr_stmt></block></then></if>

        <if pos:line="1927" pos:column="9">if <condition pos:line="1927" pos:column="12">(<expr><name><name pos:line="1927" pos:column="13">virt<pos:position pos:line="1927" pos:column="17"/></name><operator pos:line="1927" pos:column="17">-&gt;<pos:position pos:line="1927" pos:column="22"/></operator><name pos:line="1927" pos:column="19">keep_alive_timeout<pos:position pos:line="1927" pos:column="37"/></name></name> <operator pos:line="1927" pos:column="38">==<pos:position pos:line="1927" pos:column="40"/></operator> <literal type="number" pos:line="1927" pos:column="41">0<pos:position pos:line="1927" pos:column="42"/></literal></expr>)<pos:position pos:line="1927" pos:column="43"/></condition><then pos:line="1927" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="1928" pos:column="13">virt<pos:position pos:line="1928" pos:column="17"/></name><operator pos:line="1928" pos:column="17">-&gt;<pos:position pos:line="1928" pos:column="22"/></operator><name pos:line="1928" pos:column="19">keep_alive_timeout<pos:position pos:line="1928" pos:column="37"/></name></name> <operator pos:line="1928" pos:column="38">=<pos:position pos:line="1928" pos:column="39"/></operator> <name><name pos:line="1928" pos:column="40">main_server<pos:position pos:line="1928" pos:column="51"/></name><operator pos:line="1928" pos:column="51">-&gt;<pos:position pos:line="1928" pos:column="56"/></operator><name pos:line="1928" pos:column="53">keep_alive_timeout<pos:position pos:line="1928" pos:column="71"/></name></name></expr>;<pos:position pos:line="1928" pos:column="72"/></expr_stmt></block></then></if>

        <if pos:line="1930" pos:column="9">if <condition pos:line="1930" pos:column="12">(<expr><name><name pos:line="1930" pos:column="13">virt<pos:position pos:line="1930" pos:column="17"/></name><operator pos:line="1930" pos:column="17">-&gt;<pos:position pos:line="1930" pos:column="22"/></operator><name pos:line="1930" pos:column="19">keep_alive<pos:position pos:line="1930" pos:column="29"/></name></name> <operator pos:line="1930" pos:column="30">==<pos:position pos:line="1930" pos:column="32"/></operator> <operator pos:line="1930" pos:column="33">-<pos:position pos:line="1930" pos:column="34"/></operator><literal type="number" pos:line="1930" pos:column="34">1<pos:position pos:line="1930" pos:column="35"/></literal></expr>)<pos:position pos:line="1930" pos:column="36"/></condition><then pos:line="1930" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="1931" pos:column="13">virt<pos:position pos:line="1931" pos:column="17"/></name><operator pos:line="1931" pos:column="17">-&gt;<pos:position pos:line="1931" pos:column="22"/></operator><name pos:line="1931" pos:column="19">keep_alive<pos:position pos:line="1931" pos:column="29"/></name></name> <operator pos:line="1931" pos:column="30">=<pos:position pos:line="1931" pos:column="31"/></operator> <name><name pos:line="1931" pos:column="32">main_server<pos:position pos:line="1931" pos:column="43"/></name><operator pos:line="1931" pos:column="43">-&gt;<pos:position pos:line="1931" pos:column="48"/></operator><name pos:line="1931" pos:column="45">keep_alive<pos:position pos:line="1931" pos:column="55"/></name></name></expr>;<pos:position pos:line="1931" pos:column="56"/></expr_stmt></block></then></if>

        <if pos:line="1933" pos:column="9">if <condition pos:line="1933" pos:column="12">(<expr><name><name pos:line="1933" pos:column="13">virt<pos:position pos:line="1933" pos:column="17"/></name><operator pos:line="1933" pos:column="17">-&gt;<pos:position pos:line="1933" pos:column="22"/></operator><name pos:line="1933" pos:column="19">keep_alive_max<pos:position pos:line="1933" pos:column="33"/></name></name> <operator pos:line="1933" pos:column="34">==<pos:position pos:line="1933" pos:column="36"/></operator> <operator pos:line="1933" pos:column="37">-<pos:position pos:line="1933" pos:column="38"/></operator><literal type="number" pos:line="1933" pos:column="38">1<pos:position pos:line="1933" pos:column="39"/></literal></expr>)<pos:position pos:line="1933" pos:column="40"/></condition><then pos:line="1933" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="1934" pos:column="13">virt<pos:position pos:line="1934" pos:column="17"/></name><operator pos:line="1934" pos:column="17">-&gt;<pos:position pos:line="1934" pos:column="22"/></operator><name pos:line="1934" pos:column="19">keep_alive_max<pos:position pos:line="1934" pos:column="33"/></name></name> <operator pos:line="1934" pos:column="34">=<pos:position pos:line="1934" pos:column="35"/></operator> <name><name pos:line="1934" pos:column="36">main_server<pos:position pos:line="1934" pos:column="47"/></name><operator pos:line="1934" pos:column="47">-&gt;<pos:position pos:line="1934" pos:column="52"/></operator><name pos:line="1934" pos:column="49">keep_alive_max<pos:position pos:line="1934" pos:column="63"/></name></name></expr>;<pos:position pos:line="1934" pos:column="64"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="1936" pos:column="9">/* XXX: this is really something that should be dealt with by a
         * post-config api phase
         */</comment>
        <expr_stmt><expr><call><name pos:line="1939" pos:column="9">ap_core_reorder_directories<pos:position pos:line="1939" pos:column="36"/></name><argument_list pos:line="1939" pos:column="36">(<argument><expr><name pos:line="1939" pos:column="37">p<pos:position pos:line="1939" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1939" pos:column="40">virt<pos:position pos:line="1939" pos:column="44"/></name></expr></argument>)<pos:position pos:line="1939" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="1939" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="1940" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="1942" pos:column="5">ap_core_reorder_directories<pos:position pos:line="1942" pos:column="32"/></name><argument_list pos:line="1942" pos:column="32">(<argument><expr><name pos:line="1942" pos:column="33">p<pos:position pos:line="1942" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="1942" pos:column="36">main_server<pos:position pos:line="1942" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1942" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="1942" pos:column="49"/></expr_stmt>
}<pos:position pos:line="1943" pos:column="2"/></block>

<comment type="block" pos:line="1945" pos:column="1">/*****************************************************************
 *
 * Getting *everything* configured...
 */</comment>

<function><specifier pos:line="1950" pos:column="1">static<pos:position pos:line="1950" pos:column="7"/></specifier> <type><name pos:line="1950" pos:column="8">void<pos:position pos:line="1950" pos:column="12"/></name></type> <name pos:line="1950" pos:column="13">init_config_globals<pos:position pos:line="1950" pos:column="32"/></name><parameter_list pos:line="1950" pos:column="32">(<parameter><decl><type><name pos:line="1950" pos:column="33">apr_pool_t<pos:position pos:line="1950" pos:column="43"/></name> <modifier pos:line="1950" pos:column="44">*<pos:position pos:line="1950" pos:column="45"/></modifier></type><name pos:line="1950" pos:column="45">p<pos:position pos:line="1950" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1950" pos:column="47"/></parameter_list>
<block pos:line="1951" pos:column="1">{
    <comment type="block" pos:line="1952" pos:column="5">/* Global virtual host hash bucket pointers.  Init to null. */</comment>
    <expr_stmt><expr><call><name pos:line="1953" pos:column="5">ap_init_vhost_config<pos:position pos:line="1953" pos:column="25"/></name><argument_list pos:line="1953" pos:column="25">(<argument><expr><name pos:line="1953" pos:column="26">p<pos:position pos:line="1953" pos:column="27"/></name></expr></argument>)<pos:position pos:line="1953" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="1953" pos:column="29"/></expr_stmt>
}<pos:position pos:line="1954" pos:column="2"/></block></function>

<function><specifier pos:line="1956" pos:column="1">static<pos:position pos:line="1956" pos:column="7"/></specifier> <type><name pos:line="1956" pos:column="8">server_rec<pos:position pos:line="1956" pos:column="18"/></name> <modifier pos:line="1956" pos:column="19">*<pos:position pos:line="1956" pos:column="20"/></modifier></type><name pos:line="1956" pos:column="20">init_server_config<pos:position pos:line="1956" pos:column="38"/></name><parameter_list pos:line="1956" pos:column="38">(<parameter><decl><type><name pos:line="1956" pos:column="39">process_rec<pos:position pos:line="1956" pos:column="50"/></name> <modifier pos:line="1956" pos:column="51">*<pos:position pos:line="1956" pos:column="52"/></modifier></type><name pos:line="1956" pos:column="52">process<pos:position pos:line="1956" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1956" pos:column="61">apr_pool_t<pos:position pos:line="1956" pos:column="71"/></name> <modifier pos:line="1956" pos:column="72">*<pos:position pos:line="1956" pos:column="73"/></modifier></type><name pos:line="1956" pos:column="73">p<pos:position pos:line="1956" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1956" pos:column="75"/></parameter_list>
<block pos:line="1957" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="1958" pos:column="5">apr_status_t<pos:position pos:line="1958" pos:column="17"/></name></type> <name pos:line="1958" pos:column="18">rv<pos:position pos:line="1958" pos:column="20"/></name></decl>;<pos:position pos:line="1958" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="1959" pos:column="5">server_rec<pos:position pos:line="1959" pos:column="15"/></name> <modifier pos:line="1959" pos:column="16">*<pos:position pos:line="1959" pos:column="17"/></modifier></type><name pos:line="1959" pos:column="17">s<pos:position pos:line="1959" pos:column="18"/></name> <init pos:line="1959" pos:column="19">= <expr><operator pos:line="1959" pos:column="21">(<pos:position pos:line="1959" pos:column="22"/></operator><name pos:line="1959" pos:column="22">server_rec<pos:position pos:line="1959" pos:column="32"/></name> <operator pos:line="1959" pos:column="33">*<pos:position pos:line="1959" pos:column="34"/></operator><operator pos:line="1959" pos:column="34">)<pos:position pos:line="1959" pos:column="35"/></operator> <call><name pos:line="1959" pos:column="36">apr_pcalloc<pos:position pos:line="1959" pos:column="47"/></name><argument_list pos:line="1959" pos:column="47">(<argument><expr><name pos:line="1959" pos:column="48">p<pos:position pos:line="1959" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="1959" pos:column="51">sizeof<argument_list pos:line="1959" pos:column="57">(<argument><expr><name pos:line="1959" pos:column="58">server_rec<pos:position pos:line="1959" pos:column="68"/></name></expr></argument>)<pos:position pos:line="1959" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1959" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="1959" pos:column="71"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="1961" pos:column="5">apr_file_open_stderr<pos:position pos:line="1961" pos:column="25"/></name><argument_list pos:line="1961" pos:column="25">(<argument><expr><operator pos:line="1961" pos:column="26">&amp;<pos:position pos:line="1961" pos:column="31"/></operator><name><name pos:line="1961" pos:column="27">s<pos:position pos:line="1961" pos:column="28"/></name><operator pos:line="1961" pos:column="28">-&gt;<pos:position pos:line="1961" pos:column="33"/></operator><name pos:line="1961" pos:column="30">error_log<pos:position pos:line="1961" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="1961" pos:column="41">p<pos:position pos:line="1961" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1961" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="1961" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1962" pos:column="5">s<pos:position pos:line="1962" pos:column="6"/></name><operator pos:line="1962" pos:column="6">-&gt;<pos:position pos:line="1962" pos:column="11"/></operator><name pos:line="1962" pos:column="8">process<pos:position pos:line="1962" pos:column="15"/></name></name> <operator pos:line="1962" pos:column="16">=<pos:position pos:line="1962" pos:column="17"/></operator> <name pos:line="1962" pos:column="18">process<pos:position pos:line="1962" pos:column="25"/></name></expr>;<pos:position pos:line="1962" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1963" pos:column="5">s<pos:position pos:line="1963" pos:column="6"/></name><operator pos:line="1963" pos:column="6">-&gt;<pos:position pos:line="1963" pos:column="11"/></operator><name pos:line="1963" pos:column="8">port<pos:position pos:line="1963" pos:column="12"/></name></name> <operator pos:line="1963" pos:column="13">=<pos:position pos:line="1963" pos:column="14"/></operator> <literal type="number" pos:line="1963" pos:column="15">0<pos:position pos:line="1963" pos:column="16"/></literal></expr>;<pos:position pos:line="1963" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1964" pos:column="5">s<pos:position pos:line="1964" pos:column="6"/></name><operator pos:line="1964" pos:column="6">-&gt;<pos:position pos:line="1964" pos:column="11"/></operator><name pos:line="1964" pos:column="8">server_admin<pos:position pos:line="1964" pos:column="20"/></name></name> <operator pos:line="1964" pos:column="21">=<pos:position pos:line="1964" pos:column="22"/></operator> <name pos:line="1964" pos:column="23">DEFAULT_ADMIN<pos:position pos:line="1964" pos:column="36"/></name></expr>;<pos:position pos:line="1964" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1965" pos:column="5">s<pos:position pos:line="1965" pos:column="6"/></name><operator pos:line="1965" pos:column="6">-&gt;<pos:position pos:line="1965" pos:column="11"/></operator><name pos:line="1965" pos:column="8">server_hostname<pos:position pos:line="1965" pos:column="23"/></name></name> <operator pos:line="1965" pos:column="24">=<pos:position pos:line="1965" pos:column="25"/></operator> <name pos:line="1965" pos:column="26">NULL<pos:position pos:line="1965" pos:column="30"/></name></expr>;<pos:position pos:line="1965" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1966" pos:column="5">s<pos:position pos:line="1966" pos:column="6"/></name><operator pos:line="1966" pos:column="6">-&gt;<pos:position pos:line="1966" pos:column="11"/></operator><name pos:line="1966" pos:column="8">server_scheme<pos:position pos:line="1966" pos:column="21"/></name></name> <operator pos:line="1966" pos:column="22">=<pos:position pos:line="1966" pos:column="23"/></operator> <name pos:line="1966" pos:column="24">NULL<pos:position pos:line="1966" pos:column="28"/></name></expr>;<pos:position pos:line="1966" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1967" pos:column="5">s<pos:position pos:line="1967" pos:column="6"/></name><operator pos:line="1967" pos:column="6">-&gt;<pos:position pos:line="1967" pos:column="11"/></operator><name pos:line="1967" pos:column="8">error_fname<pos:position pos:line="1967" pos:column="19"/></name></name> <operator pos:line="1967" pos:column="20">=<pos:position pos:line="1967" pos:column="21"/></operator> <name pos:line="1967" pos:column="22">DEFAULT_ERRORLOG<pos:position pos:line="1967" pos:column="38"/></name></expr>;<pos:position pos:line="1967" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1968" pos:column="5">s<pos:position pos:line="1968" pos:column="6"/></name><operator pos:line="1968" pos:column="6">-&gt;<pos:position pos:line="1968" pos:column="11"/></operator><name pos:line="1968" pos:column="8">loglevel<pos:position pos:line="1968" pos:column="16"/></name></name> <operator pos:line="1968" pos:column="17">=<pos:position pos:line="1968" pos:column="18"/></operator> <name pos:line="1968" pos:column="19">DEFAULT_LOGLEVEL<pos:position pos:line="1968" pos:column="35"/></name></expr>;<pos:position pos:line="1968" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1969" pos:column="5">s<pos:position pos:line="1969" pos:column="6"/></name><operator pos:line="1969" pos:column="6">-&gt;<pos:position pos:line="1969" pos:column="11"/></operator><name pos:line="1969" pos:column="8">limit_req_line<pos:position pos:line="1969" pos:column="22"/></name></name> <operator pos:line="1969" pos:column="23">=<pos:position pos:line="1969" pos:column="24"/></operator> <name pos:line="1969" pos:column="25">DEFAULT_LIMIT_REQUEST_LINE<pos:position pos:line="1969" pos:column="51"/></name></expr>;<pos:position pos:line="1969" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1970" pos:column="5">s<pos:position pos:line="1970" pos:column="6"/></name><operator pos:line="1970" pos:column="6">-&gt;<pos:position pos:line="1970" pos:column="11"/></operator><name pos:line="1970" pos:column="8">limit_req_fieldsize<pos:position pos:line="1970" pos:column="27"/></name></name> <operator pos:line="1970" pos:column="28">=<pos:position pos:line="1970" pos:column="29"/></operator> <name pos:line="1970" pos:column="30">DEFAULT_LIMIT_REQUEST_FIELDSIZE<pos:position pos:line="1970" pos:column="61"/></name></expr>;<pos:position pos:line="1970" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1971" pos:column="5">s<pos:position pos:line="1971" pos:column="6"/></name><operator pos:line="1971" pos:column="6">-&gt;<pos:position pos:line="1971" pos:column="11"/></operator><name pos:line="1971" pos:column="8">limit_req_fields<pos:position pos:line="1971" pos:column="24"/></name></name> <operator pos:line="1971" pos:column="25">=<pos:position pos:line="1971" pos:column="26"/></operator> <name pos:line="1971" pos:column="27">DEFAULT_LIMIT_REQUEST_FIELDS<pos:position pos:line="1971" pos:column="55"/></name></expr>;<pos:position pos:line="1971" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1972" pos:column="5">s<pos:position pos:line="1972" pos:column="6"/></name><operator pos:line="1972" pos:column="6">-&gt;<pos:position pos:line="1972" pos:column="11"/></operator><name pos:line="1972" pos:column="8">timeout<pos:position pos:line="1972" pos:column="15"/></name></name> <operator pos:line="1972" pos:column="16">=<pos:position pos:line="1972" pos:column="17"/></operator> <call><name pos:line="1972" pos:column="18">apr_time_from_sec<pos:position pos:line="1972" pos:column="35"/></name><argument_list pos:line="1972" pos:column="35">(<argument><expr><name pos:line="1972" pos:column="36">DEFAULT_TIMEOUT<pos:position pos:line="1972" pos:column="51"/></name></expr></argument>)<pos:position pos:line="1972" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="1972" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1973" pos:column="5">s<pos:position pos:line="1973" pos:column="6"/></name><operator pos:line="1973" pos:column="6">-&gt;<pos:position pos:line="1973" pos:column="11"/></operator><name pos:line="1973" pos:column="8">keep_alive_timeout<pos:position pos:line="1973" pos:column="26"/></name></name> <operator pos:line="1973" pos:column="27">=<pos:position pos:line="1973" pos:column="28"/></operator> <call><name pos:line="1973" pos:column="29">apr_time_from_sec<pos:position pos:line="1973" pos:column="46"/></name><argument_list pos:line="1973" pos:column="46">(<argument><expr><name pos:line="1973" pos:column="47">DEFAULT_KEEPALIVE_TIMEOUT<pos:position pos:line="1973" pos:column="72"/></name></expr></argument>)<pos:position pos:line="1973" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="1973" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1974" pos:column="5">s<pos:position pos:line="1974" pos:column="6"/></name><operator pos:line="1974" pos:column="6">-&gt;<pos:position pos:line="1974" pos:column="11"/></operator><name pos:line="1974" pos:column="8">keep_alive_max<pos:position pos:line="1974" pos:column="22"/></name></name> <operator pos:line="1974" pos:column="23">=<pos:position pos:line="1974" pos:column="24"/></operator> <name pos:line="1974" pos:column="25">DEFAULT_KEEPALIVE<pos:position pos:line="1974" pos:column="42"/></name></expr>;<pos:position pos:line="1974" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1975" pos:column="5">s<pos:position pos:line="1975" pos:column="6"/></name><operator pos:line="1975" pos:column="6">-&gt;<pos:position pos:line="1975" pos:column="11"/></operator><name pos:line="1975" pos:column="8">keep_alive<pos:position pos:line="1975" pos:column="18"/></name></name> <operator pos:line="1975" pos:column="19">=<pos:position pos:line="1975" pos:column="20"/></operator> <literal type="number" pos:line="1975" pos:column="21">1<pos:position pos:line="1975" pos:column="22"/></literal></expr>;<pos:position pos:line="1975" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1976" pos:column="5">s<pos:position pos:line="1976" pos:column="6"/></name><operator pos:line="1976" pos:column="6">-&gt;<pos:position pos:line="1976" pos:column="11"/></operator><name pos:line="1976" pos:column="8">next<pos:position pos:line="1976" pos:column="12"/></name></name> <operator pos:line="1976" pos:column="13">=<pos:position pos:line="1976" pos:column="14"/></operator> <name pos:line="1976" pos:column="15">NULL<pos:position pos:line="1976" pos:column="19"/></name></expr>;<pos:position pos:line="1976" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1977" pos:column="5">s<pos:position pos:line="1977" pos:column="6"/></name><operator pos:line="1977" pos:column="6">-&gt;<pos:position pos:line="1977" pos:column="11"/></operator><name pos:line="1977" pos:column="8">addrs<pos:position pos:line="1977" pos:column="13"/></name></name> <operator pos:line="1977" pos:column="14">=<pos:position pos:line="1977" pos:column="15"/></operator> <call><name pos:line="1977" pos:column="16">apr_pcalloc<pos:position pos:line="1977" pos:column="27"/></name><argument_list pos:line="1977" pos:column="27">(<argument><expr><name pos:line="1977" pos:column="28">p<pos:position pos:line="1977" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="1977" pos:column="31">sizeof<argument_list pos:line="1977" pos:column="37">(<argument><expr><name pos:line="1977" pos:column="38">server_addr_rec<pos:position pos:line="1977" pos:column="53"/></name></expr></argument>)<pos:position pos:line="1977" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="1977" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="1977" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="1979" pos:column="5">/* NOT virtual host; don't match any real network interface */</comment>
    <expr_stmt><expr><name pos:line="1980" pos:column="5">rv<pos:position pos:line="1980" pos:column="7"/></name> <operator pos:line="1980" pos:column="8">=<pos:position pos:line="1980" pos:column="9"/></operator> <call><name pos:line="1980" pos:column="10">apr_sockaddr_info_get<pos:position pos:line="1980" pos:column="31"/></name><argument_list pos:line="1980" pos:column="31">(<argument><expr><operator pos:line="1980" pos:column="32">&amp;<pos:position pos:line="1980" pos:column="37"/></operator><name><name pos:line="1980" pos:column="33">s<pos:position pos:line="1980" pos:column="34"/></name><operator pos:line="1980" pos:column="34">-&gt;<pos:position pos:line="1980" pos:column="39"/></operator><name pos:line="1980" pos:column="36">addrs<pos:position pos:line="1980" pos:column="41"/></name><operator pos:line="1980" pos:column="41">-&gt;<pos:position pos:line="1980" pos:column="46"/></operator><name pos:line="1980" pos:column="43">host_addr<pos:position pos:line="1980" pos:column="52"/></name></name></expr></argument>,
                               <argument><expr><name pos:line="1981" pos:column="32">NULL<pos:position pos:line="1981" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="1981" pos:column="38">APR_INET<pos:position pos:line="1981" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="1981" pos:column="48">0<pos:position pos:line="1981" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="1981" pos:column="51">0<pos:position pos:line="1981" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="1981" pos:column="54">p<pos:position pos:line="1981" pos:column="55"/></name></expr></argument>)<pos:position pos:line="1981" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="1981" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="1982" pos:column="5">ap_assert<pos:position pos:line="1982" pos:column="14"/></name><argument_list pos:line="1982" pos:column="14">(<argument><expr><name pos:line="1982" pos:column="15">rv<pos:position pos:line="1982" pos:column="17"/></name> <operator pos:line="1982" pos:column="18">==<pos:position pos:line="1982" pos:column="20"/></operator> <name pos:line="1982" pos:column="21">APR_SUCCESS<pos:position pos:line="1982" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1982" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="1982" pos:column="34"/></expr_stmt> <comment type="block" pos:line="1982" pos:column="35">/* otherwise: bug or no storage */</comment>

    <expr_stmt><expr><name><name pos:line="1984" pos:column="5">s<pos:position pos:line="1984" pos:column="6"/></name><operator pos:line="1984" pos:column="6">-&gt;<pos:position pos:line="1984" pos:column="11"/></operator><name pos:line="1984" pos:column="8">addrs<pos:position pos:line="1984" pos:column="13"/></name><operator pos:line="1984" pos:column="13">-&gt;<pos:position pos:line="1984" pos:column="18"/></operator><name pos:line="1984" pos:column="15">host_port<pos:position pos:line="1984" pos:column="24"/></name></name> <operator pos:line="1984" pos:column="25">=<pos:position pos:line="1984" pos:column="26"/></operator> <literal type="number" pos:line="1984" pos:column="27">0<pos:position pos:line="1984" pos:column="28"/></literal></expr>;<pos:position pos:line="1984" pos:column="29"/></expr_stmt> <comment type="block" pos:line="1984" pos:column="30">/* matches any port */</comment>
    <expr_stmt><expr><name><name pos:line="1985" pos:column="5">s<pos:position pos:line="1985" pos:column="6"/></name><operator pos:line="1985" pos:column="6">-&gt;<pos:position pos:line="1985" pos:column="11"/></operator><name pos:line="1985" pos:column="8">addrs<pos:position pos:line="1985" pos:column="13"/></name><operator pos:line="1985" pos:column="13">-&gt;<pos:position pos:line="1985" pos:column="18"/></operator><name pos:line="1985" pos:column="15">virthost<pos:position pos:line="1985" pos:column="23"/></name></name> <operator pos:line="1985" pos:column="24">=<pos:position pos:line="1985" pos:column="25"/></operator> <literal type="string" pos:line="1985" pos:column="26">""<pos:position pos:line="1985" pos:column="28"/></literal></expr>;<pos:position pos:line="1985" pos:column="29"/></expr_stmt> <comment type="block" pos:line="1985" pos:column="30">/* must be non-NULL */</comment>
    <expr_stmt><expr><name><name pos:line="1986" pos:column="5">s<pos:position pos:line="1986" pos:column="6"/></name><operator pos:line="1986" pos:column="6">-&gt;<pos:position pos:line="1986" pos:column="11"/></operator><name pos:line="1986" pos:column="8">names<pos:position pos:line="1986" pos:column="13"/></name></name> <operator pos:line="1986" pos:column="14">=<pos:position pos:line="1986" pos:column="15"/></operator> <name><name pos:line="1986" pos:column="16">s<pos:position pos:line="1986" pos:column="17"/></name><operator pos:line="1986" pos:column="17">-&gt;<pos:position pos:line="1986" pos:column="22"/></operator><name pos:line="1986" pos:column="19">wild_names<pos:position pos:line="1986" pos:column="29"/></name></name> <operator pos:line="1986" pos:column="30">=<pos:position pos:line="1986" pos:column="31"/></operator> <name pos:line="1986" pos:column="32">NULL<pos:position pos:line="1986" pos:column="36"/></name></expr>;<pos:position pos:line="1986" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="1988" pos:column="5">s<pos:position pos:line="1988" pos:column="6"/></name><operator pos:line="1988" pos:column="6">-&gt;<pos:position pos:line="1988" pos:column="11"/></operator><name pos:line="1988" pos:column="8">module_config<pos:position pos:line="1988" pos:column="21"/></name></name> <operator pos:line="1988" pos:column="22">=<pos:position pos:line="1988" pos:column="23"/></operator> <call><name pos:line="1988" pos:column="24">create_server_config<pos:position pos:line="1988" pos:column="44"/></name><argument_list pos:line="1988" pos:column="44">(<argument><expr><name pos:line="1988" pos:column="45">p<pos:position pos:line="1988" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="1988" pos:column="48">s<pos:position pos:line="1988" pos:column="49"/></name></expr></argument>)<pos:position pos:line="1988" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="1988" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="1989" pos:column="5">s<pos:position pos:line="1989" pos:column="6"/></name><operator pos:line="1989" pos:column="6">-&gt;<pos:position pos:line="1989" pos:column="11"/></operator><name pos:line="1989" pos:column="8">lookup_defaults<pos:position pos:line="1989" pos:column="23"/></name></name> <operator pos:line="1989" pos:column="24">=<pos:position pos:line="1989" pos:column="25"/></operator> <call><name pos:line="1989" pos:column="26">create_default_per_dir_config<pos:position pos:line="1989" pos:column="55"/></name><argument_list pos:line="1989" pos:column="55">(<argument><expr><name pos:line="1989" pos:column="56">p<pos:position pos:line="1989" pos:column="57"/></name></expr></argument>)<pos:position pos:line="1989" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="1989" pos:column="59"/></expr_stmt>

    <return pos:line="1991" pos:column="5">return <expr><name pos:line="1991" pos:column="12">s<pos:position pos:line="1991" pos:column="13"/></name></expr>;<pos:position pos:line="1991" pos:column="14"/></return>
}<pos:position pos:line="1992" pos:column="2"/></block></function>


<macro><name pos:line="1995" pos:column="1">AP_DECLARE<pos:position pos:line="1995" pos:column="11"/></name><argument_list pos:line="1995" pos:column="11">(<argument pos:line="1995" pos:column="12">server_rec*<pos:position pos:line="1995" pos:column="23"/></argument>)<pos:position pos:line="1995" pos:column="24"/></argument_list></macro> <macro><name pos:line="1995" pos:column="25">ap_read_config<pos:position pos:line="1995" pos:column="39"/></name><argument_list pos:line="1995" pos:column="39">(<argument pos:line="1995" pos:column="40">process_rec *process<pos:position pos:line="1995" pos:column="60"/></argument>, <argument pos:line="1995" pos:column="62">apr_pool_t *ptemp<pos:position pos:line="1995" pos:column="79"/></argument>,
                                       <argument pos:line="1996" pos:column="40">const char *filename<pos:position pos:line="1996" pos:column="60"/></argument>,
                                       <argument pos:line="1997" pos:column="40">ap_directive_t **conftree<pos:position pos:line="1997" pos:column="65"/></argument>)<pos:position pos:line="1997" pos:column="66"/></argument_list></macro>
<block pos:line="1998" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="1999" pos:column="5">const<pos:position pos:line="1999" pos:column="10"/></specifier> <name pos:line="1999" pos:column="11">char<pos:position pos:line="1999" pos:column="15"/></name> <modifier pos:line="1999" pos:column="16">*<pos:position pos:line="1999" pos:column="17"/></modifier></type><name pos:line="1999" pos:column="17">confname<pos:position pos:line="1999" pos:column="25"/></name></decl>, <modifier pos:line="1999" pos:column="27">*<pos:position pos:line="1999" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="1999" pos:column="28">error<pos:position pos:line="1999" pos:column="33"/></name></decl>;<pos:position pos:line="1999" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="2000" pos:column="5">apr_pool_t<pos:position pos:line="2000" pos:column="15"/></name> <modifier pos:line="2000" pos:column="16">*<pos:position pos:line="2000" pos:column="17"/></modifier></type><name pos:line="2000" pos:column="17">p<pos:position pos:line="2000" pos:column="18"/></name> <init pos:line="2000" pos:column="19">= <expr><name><name pos:line="2000" pos:column="21">process<pos:position pos:line="2000" pos:column="28"/></name><operator pos:line="2000" pos:column="28">-&gt;<pos:position pos:line="2000" pos:column="33"/></operator><name pos:line="2000" pos:column="30">pconf<pos:position pos:line="2000" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="2000" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="2001" pos:column="5">server_rec<pos:position pos:line="2001" pos:column="15"/></name> <modifier pos:line="2001" pos:column="16">*<pos:position pos:line="2001" pos:column="17"/></modifier></type><name pos:line="2001" pos:column="17">s<pos:position pos:line="2001" pos:column="18"/></name> <init pos:line="2001" pos:column="19">= <expr><call><name pos:line="2001" pos:column="21">init_server_config<pos:position pos:line="2001" pos:column="39"/></name><argument_list pos:line="2001" pos:column="39">(<argument><expr><name pos:line="2001" pos:column="40">process<pos:position pos:line="2001" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="2001" pos:column="49">p<pos:position pos:line="2001" pos:column="50"/></name></expr></argument>)<pos:position pos:line="2001" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2001" pos:column="52"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="2003" pos:column="5">init_config_globals<pos:position pos:line="2003" pos:column="24"/></name><argument_list pos:line="2003" pos:column="24">(<argument><expr><name pos:line="2003" pos:column="25">p<pos:position pos:line="2003" pos:column="26"/></name></expr></argument>)<pos:position pos:line="2003" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="2003" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="2005" pos:column="5">/* All server-wide config files now have the SAME syntax... */</comment>
    <expr_stmt><expr><name pos:line="2006" pos:column="5">error<pos:position pos:line="2006" pos:column="10"/></name> <operator pos:line="2006" pos:column="11">=<pos:position pos:line="2006" pos:column="12"/></operator> <call><name pos:line="2006" pos:column="13">process_command_config<pos:position pos:line="2006" pos:column="35"/></name><argument_list pos:line="2006" pos:column="35">(<argument><expr><name pos:line="2006" pos:column="36">s<pos:position pos:line="2006" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2006" pos:column="39">ap_server_pre_read_config<pos:position pos:line="2006" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="2006" pos:column="66">conftree<pos:position pos:line="2006" pos:column="74"/></name></expr></argument>,
                                   <argument><expr><name pos:line="2007" pos:column="36">p<pos:position pos:line="2007" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2007" pos:column="39">ptemp<pos:position pos:line="2007" pos:column="44"/></name></expr></argument>)<pos:position pos:line="2007" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="2007" pos:column="46"/></expr_stmt>
    <if pos:line="2008" pos:column="5">if <condition pos:line="2008" pos:column="8">(<expr><name pos:line="2008" pos:column="9">error<pos:position pos:line="2008" pos:column="14"/></name></expr>)<pos:position pos:line="2008" pos:column="15"/></condition><then pos:line="2008" pos:column="15"> <block pos:line="2008" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="2009" pos:column="9">ap_log_error<pos:position pos:line="2009" pos:column="21"/></name><argument_list pos:line="2009" pos:column="21">(<argument><expr><name pos:line="2009" pos:column="22">APLOG_MARK<pos:position pos:line="2009" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="2009" pos:column="34">APLOG_STARTUP<pos:position pos:line="2009" pos:column="47"/></name><operator pos:line="2009" pos:column="47">|<pos:position pos:line="2009" pos:column="48"/></operator><name pos:line="2009" pos:column="48">APLOG_CRIT<pos:position pos:line="2009" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2009" pos:column="60">0<pos:position pos:line="2009" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="2009" pos:column="63">NULL<pos:position pos:line="2009" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2009" pos:column="69">"%s: %s"<pos:position pos:line="2009" pos:column="77"/></literal></expr></argument>,
                     <argument><expr><name pos:line="2010" pos:column="22">ap_server_argv0<pos:position pos:line="2010" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2010" pos:column="39">error<pos:position pos:line="2010" pos:column="44"/></name></expr></argument>)<pos:position pos:line="2010" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="2010" pos:column="46"/></expr_stmt>
        <return pos:line="2011" pos:column="9">return <expr><name pos:line="2011" pos:column="16">NULL<pos:position pos:line="2011" pos:column="20"/></name></expr>;<pos:position pos:line="2011" pos:column="21"/></return>
    }<pos:position pos:line="2012" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="2014" pos:column="5">/* process_command_config may change the ServerRoot so
     * compute this config file name afterwards.
     */</comment>
    <expr_stmt><expr><name pos:line="2017" pos:column="5">confname<pos:position pos:line="2017" pos:column="13"/></name> <operator pos:line="2017" pos:column="14">=<pos:position pos:line="2017" pos:column="15"/></operator> <call><name pos:line="2017" pos:column="16">ap_server_root_relative<pos:position pos:line="2017" pos:column="39"/></name><argument_list pos:line="2017" pos:column="39">(<argument><expr><name pos:line="2017" pos:column="40">p<pos:position pos:line="2017" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="2017" pos:column="43">filename<pos:position pos:line="2017" pos:column="51"/></name></expr></argument>)<pos:position pos:line="2017" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="2017" pos:column="53"/></expr_stmt>

    <if pos:line="2019" pos:column="5">if <condition pos:line="2019" pos:column="8">(<expr><operator pos:line="2019" pos:column="9">!<pos:position pos:line="2019" pos:column="10"/></operator><name pos:line="2019" pos:column="10">confname<pos:position pos:line="2019" pos:column="18"/></name></expr>)<pos:position pos:line="2019" pos:column="19"/></condition><then pos:line="2019" pos:column="19"> <block pos:line="2019" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="2020" pos:column="9">ap_log_error<pos:position pos:line="2020" pos:column="21"/></name><argument_list pos:line="2020" pos:column="21">(<argument><expr><name pos:line="2020" pos:column="22">APLOG_MARK<pos:position pos:line="2020" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="2020" pos:column="34">APLOG_STARTUP<pos:position pos:line="2020" pos:column="47"/></name><operator pos:line="2020" pos:column="47">|<pos:position pos:line="2020" pos:column="48"/></operator><name pos:line="2020" pos:column="48">APLOG_CRIT<pos:position pos:line="2020" pos:column="58"/></name></expr></argument>,
                     <argument><expr><name pos:line="2021" pos:column="22">APR_EBADPATH<pos:position pos:line="2021" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="2021" pos:column="36">NULL<pos:position pos:line="2021" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2021" pos:column="42">"Invalid config file path %s"<pos:position pos:line="2021" pos:column="71"/></literal></expr></argument>,
                     <argument><expr><name pos:line="2022" pos:column="22">filename<pos:position pos:line="2022" pos:column="30"/></name></expr></argument>)<pos:position pos:line="2022" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="2022" pos:column="32"/></expr_stmt>
        <return pos:line="2023" pos:column="9">return <expr><name pos:line="2023" pos:column="16">NULL<pos:position pos:line="2023" pos:column="20"/></name></expr>;<pos:position pos:line="2023" pos:column="21"/></return>
    }<pos:position pos:line="2024" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="2026" pos:column="5">error<pos:position pos:line="2026" pos:column="10"/></name> <operator pos:line="2026" pos:column="11">=<pos:position pos:line="2026" pos:column="12"/></operator> <call><name pos:line="2026" pos:column="13">ap_process_resource_config<pos:position pos:line="2026" pos:column="39"/></name><argument_list pos:line="2026" pos:column="39">(<argument><expr><name pos:line="2026" pos:column="40">s<pos:position pos:line="2026" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="2026" pos:column="43">confname<pos:position pos:line="2026" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="2026" pos:column="53">conftree<pos:position pos:line="2026" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="2026" pos:column="63">p<pos:position pos:line="2026" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="2026" pos:column="66">ptemp<pos:position pos:line="2026" pos:column="71"/></name></expr></argument>)<pos:position pos:line="2026" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="2026" pos:column="73"/></expr_stmt>
    <if pos:line="2027" pos:column="5">if <condition pos:line="2027" pos:column="8">(<expr><name pos:line="2027" pos:column="9">error<pos:position pos:line="2027" pos:column="14"/></name></expr>)<pos:position pos:line="2027" pos:column="15"/></condition><then pos:line="2027" pos:column="15"> <block pos:line="2027" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="2028" pos:column="9">ap_log_error<pos:position pos:line="2028" pos:column="21"/></name><argument_list pos:line="2028" pos:column="21">(<argument><expr><name pos:line="2028" pos:column="22">APLOG_MARK<pos:position pos:line="2028" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="2028" pos:column="34">APLOG_STARTUP<pos:position pos:line="2028" pos:column="47"/></name><operator pos:line="2028" pos:column="47">|<pos:position pos:line="2028" pos:column="48"/></operator><name pos:line="2028" pos:column="48">APLOG_CRIT<pos:position pos:line="2028" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2028" pos:column="60">0<pos:position pos:line="2028" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="2028" pos:column="63">NULL<pos:position pos:line="2028" pos:column="67"/></name></expr></argument>,
                     <argument><expr><literal type="string" pos:line="2029" pos:column="22">"%s: %s"<pos:position pos:line="2029" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="2029" pos:column="32">ap_server_argv0<pos:position pos:line="2029" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="2029" pos:column="49">error<pos:position pos:line="2029" pos:column="54"/></name></expr></argument>)<pos:position pos:line="2029" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="2029" pos:column="56"/></expr_stmt>
        <return pos:line="2030" pos:column="9">return <expr><name pos:line="2030" pos:column="16">NULL<pos:position pos:line="2030" pos:column="20"/></name></expr>;<pos:position pos:line="2030" pos:column="21"/></return>
    }<pos:position pos:line="2031" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="2033" pos:column="5">error<pos:position pos:line="2033" pos:column="10"/></name> <operator pos:line="2033" pos:column="11">=<pos:position pos:line="2033" pos:column="12"/></operator> <call><name pos:line="2033" pos:column="13">process_command_config<pos:position pos:line="2033" pos:column="35"/></name><argument_list pos:line="2033" pos:column="35">(<argument><expr><name pos:line="2033" pos:column="36">s<pos:position pos:line="2033" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2033" pos:column="39">ap_server_post_read_config<pos:position pos:line="2033" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="2033" pos:column="67">conftree<pos:position pos:line="2033" pos:column="75"/></name></expr></argument>,
                                   <argument><expr><name pos:line="2034" pos:column="36">p<pos:position pos:line="2034" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2034" pos:column="39">ptemp<pos:position pos:line="2034" pos:column="44"/></name></expr></argument>)<pos:position pos:line="2034" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="2034" pos:column="46"/></expr_stmt>

    <if pos:line="2036" pos:column="5">if <condition pos:line="2036" pos:column="8">(<expr><name pos:line="2036" pos:column="9">error<pos:position pos:line="2036" pos:column="14"/></name></expr>)<pos:position pos:line="2036" pos:column="15"/></condition><then pos:line="2036" pos:column="15"> <block pos:line="2036" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="2037" pos:column="9">ap_log_error<pos:position pos:line="2037" pos:column="21"/></name><argument_list pos:line="2037" pos:column="21">(<argument><expr><name pos:line="2037" pos:column="22">APLOG_MARK<pos:position pos:line="2037" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="2037" pos:column="34">APLOG_STARTUP<pos:position pos:line="2037" pos:column="47"/></name><operator pos:line="2037" pos:column="47">|<pos:position pos:line="2037" pos:column="48"/></operator><name pos:line="2037" pos:column="48">APLOG_CRIT<pos:position pos:line="2037" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="2037" pos:column="60">0<pos:position pos:line="2037" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="2037" pos:column="63">NULL<pos:position pos:line="2037" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2037" pos:column="69">"%s: %s"<pos:position pos:line="2037" pos:column="77"/></literal></expr></argument>,
                     <argument><expr><name pos:line="2038" pos:column="22">ap_server_argv0<pos:position pos:line="2038" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2038" pos:column="39">error<pos:position pos:line="2038" pos:column="44"/></name></expr></argument>)<pos:position pos:line="2038" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="2038" pos:column="46"/></expr_stmt>
        <return pos:line="2039" pos:column="9">return <expr><name pos:line="2039" pos:column="16">NULL<pos:position pos:line="2039" pos:column="20"/></name></expr>;<pos:position pos:line="2039" pos:column="21"/></return>
    }<pos:position pos:line="2040" pos:column="6"/></block></then></if>

    <return pos:line="2042" pos:column="5">return <expr><name pos:line="2042" pos:column="12">s<pos:position pos:line="2042" pos:column="13"/></name></expr>;<pos:position pos:line="2042" pos:column="14"/></return>
}<pos:position pos:line="2043" pos:column="2"/></block>

<macro><name pos:line="2045" pos:column="1">AP_DECLARE<pos:position pos:line="2045" pos:column="11"/></name><argument_list pos:line="2045" pos:column="11">(<argument pos:line="2045" pos:column="12">void<pos:position pos:line="2045" pos:column="16"/></argument>)<pos:position pos:line="2045" pos:column="17"/></argument_list></macro> <macro><name pos:line="2045" pos:column="18">ap_single_module_configure<pos:position pos:line="2045" pos:column="44"/></name><argument_list pos:line="2045" pos:column="44">(<argument pos:line="2045" pos:column="45">apr_pool_t *p<pos:position pos:line="2045" pos:column="58"/></argument>, <argument pos:line="2045" pos:column="60">server_rec *s<pos:position pos:line="2045" pos:column="73"/></argument>,
                                            <argument pos:line="2046" pos:column="45">module *m<pos:position pos:line="2046" pos:column="54"/></argument>)<pos:position pos:line="2046" pos:column="55"/></argument_list></macro>
<block pos:line="2047" pos:column="1">{
    <if pos:line="2048" pos:column="5">if <condition pos:line="2048" pos:column="8">(<expr><name><name pos:line="2048" pos:column="9">m<pos:position pos:line="2048" pos:column="10"/></name><operator pos:line="2048" pos:column="10">-&gt;<pos:position pos:line="2048" pos:column="15"/></operator><name pos:line="2048" pos:column="12">create_server_config<pos:position pos:line="2048" pos:column="32"/></name></name></expr>)<pos:position pos:line="2048" pos:column="33"/></condition><then pos:line="2048" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="2049" pos:column="9">ap_set_module_config<pos:position pos:line="2049" pos:column="29"/></name><argument_list pos:line="2049" pos:column="29">(<argument><expr><name><name pos:line="2049" pos:column="30">s<pos:position pos:line="2049" pos:column="31"/></name><operator pos:line="2049" pos:column="31">-&gt;<pos:position pos:line="2049" pos:column="36"/></operator><name pos:line="2049" pos:column="33">module_config<pos:position pos:line="2049" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="2049" pos:column="48">m<pos:position pos:line="2049" pos:column="49"/></name></expr></argument>,
                             <argument><expr><call pos:line="2050" pos:column="30">(<modifier pos:line="2050" pos:column="31">*<pos:position pos:line="2050" pos:column="32"/></modifier><name><name pos:line="2050" pos:column="32">m<pos:position pos:line="2050" pos:column="33"/></name><operator pos:line="2050" pos:column="33">-&gt;<pos:position pos:line="2050" pos:column="38"/></operator><name pos:line="2050" pos:column="35">create_server_config<pos:position pos:line="2050" pos:column="55"/></name></name>)<argument_list pos:line="2050" pos:column="56">(<argument><expr><name pos:line="2050" pos:column="57">p<pos:position pos:line="2050" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="2050" pos:column="60">s<pos:position pos:line="2050" pos:column="61"/></name></expr></argument>)<pos:position pos:line="2050" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="2050" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="2050" pos:column="64"/></expr_stmt></block></then></if>

    <if pos:line="2052" pos:column="5">if <condition pos:line="2052" pos:column="8">(<expr><name><name pos:line="2052" pos:column="9">m<pos:position pos:line="2052" pos:column="10"/></name><operator pos:line="2052" pos:column="10">-&gt;<pos:position pos:line="2052" pos:column="15"/></operator><name pos:line="2052" pos:column="12">create_dir_config<pos:position pos:line="2052" pos:column="29"/></name></name></expr>)<pos:position pos:line="2052" pos:column="30"/></condition><then pos:line="2052" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="2053" pos:column="9">ap_set_module_config<pos:position pos:line="2053" pos:column="29"/></name><argument_list pos:line="2053" pos:column="29">(<argument><expr><name><name pos:line="2053" pos:column="30">s<pos:position pos:line="2053" pos:column="31"/></name><operator pos:line="2053" pos:column="31">-&gt;<pos:position pos:line="2053" pos:column="36"/></operator><name pos:line="2053" pos:column="33">lookup_defaults<pos:position pos:line="2053" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="2053" pos:column="50">m<pos:position pos:line="2053" pos:column="51"/></name></expr></argument>,
                             <argument><expr><call pos:line="2054" pos:column="30">(<modifier pos:line="2054" pos:column="31">*<pos:position pos:line="2054" pos:column="32"/></modifier><name><name pos:line="2054" pos:column="32">m<pos:position pos:line="2054" pos:column="33"/></name><operator pos:line="2054" pos:column="33">-&gt;<pos:position pos:line="2054" pos:column="38"/></operator><name pos:line="2054" pos:column="35">create_dir_config<pos:position pos:line="2054" pos:column="52"/></name></name>)<argument_list pos:line="2054" pos:column="53">(<argument><expr><name pos:line="2054" pos:column="54">p<pos:position pos:line="2054" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="2054" pos:column="57">NULL<pos:position pos:line="2054" pos:column="61"/></name></expr></argument>)<pos:position pos:line="2054" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="2054" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="2054" pos:column="64"/></expr_stmt></block></then></if>
}<pos:position pos:line="2055" pos:column="2"/></block>

<macro><name pos:line="2057" pos:column="1">AP_DECLARE<pos:position pos:line="2057" pos:column="11"/></name><argument_list pos:line="2057" pos:column="11">(<argument pos:line="2057" pos:column="12">void<pos:position pos:line="2057" pos:column="16"/></argument>)<pos:position pos:line="2057" pos:column="17"/></argument_list></macro> <macro><name pos:line="2057" pos:column="18">ap_run_rewrite_args<pos:position pos:line="2057" pos:column="37"/></name><argument_list pos:line="2057" pos:column="37">(<argument pos:line="2057" pos:column="38">process_rec *process<pos:position pos:line="2057" pos:column="58"/></argument>)<pos:position pos:line="2057" pos:column="59"/></argument_list></macro>
<block pos:line="2058" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2059" pos:column="5">module<pos:position pos:line="2059" pos:column="11"/></name> <modifier pos:line="2059" pos:column="12">*<pos:position pos:line="2059" pos:column="13"/></modifier></type><name pos:line="2059" pos:column="13">m<pos:position pos:line="2059" pos:column="14"/></name></decl>;<pos:position pos:line="2059" pos:column="15"/></decl_stmt>

    <for pos:line="2061" pos:column="5">for <control pos:line="2061" pos:column="9">(<init><expr><name pos:line="2061" pos:column="10">m<pos:position pos:line="2061" pos:column="11"/></name> <operator pos:line="2061" pos:column="12">=<pos:position pos:line="2061" pos:column="13"/></operator> <name pos:line="2061" pos:column="14">ap_top_module<pos:position pos:line="2061" pos:column="27"/></name></expr>;<pos:position pos:line="2061" pos:column="28"/></init> <condition><expr><name pos:line="2061" pos:column="29">m<pos:position pos:line="2061" pos:column="30"/></name></expr>;<pos:position pos:line="2061" pos:column="31"/></condition> <incr><expr><name pos:line="2061" pos:column="32">m<pos:position pos:line="2061" pos:column="33"/></name> <operator pos:line="2061" pos:column="34">=<pos:position pos:line="2061" pos:column="35"/></operator> <name><name pos:line="2061" pos:column="36">m<pos:position pos:line="2061" pos:column="37"/></name><operator pos:line="2061" pos:column="37">-&gt;<pos:position pos:line="2061" pos:column="42"/></operator><name pos:line="2061" pos:column="39">next<pos:position pos:line="2061" pos:column="43"/></name></name></expr></incr>)<pos:position pos:line="2061" pos:column="44"/></control> <block pos:line="2061" pos:column="45">{
        <if pos:line="2062" pos:column="9">if <condition pos:line="2062" pos:column="12">(<expr><name><name pos:line="2062" pos:column="13">m<pos:position pos:line="2062" pos:column="14"/></name><operator pos:line="2062" pos:column="14">-&gt;<pos:position pos:line="2062" pos:column="19"/></operator><name pos:line="2062" pos:column="16">rewrite_args<pos:position pos:line="2062" pos:column="28"/></name></name></expr>)<pos:position pos:line="2062" pos:column="29"/></condition><then pos:line="2062" pos:column="29"> <block pos:line="2062" pos:column="30">{
            <expr_stmt><expr><call pos:line="2063" pos:column="13">(<modifier pos:line="2063" pos:column="14">*<pos:position pos:line="2063" pos:column="15"/></modifier><name><name pos:line="2063" pos:column="15">m<pos:position pos:line="2063" pos:column="16"/></name><operator pos:line="2063" pos:column="16">-&gt;<pos:position pos:line="2063" pos:column="21"/></operator><name pos:line="2063" pos:column="18">rewrite_args<pos:position pos:line="2063" pos:column="30"/></name></name>)<argument_list pos:line="2063" pos:column="31">(<argument><expr><name pos:line="2063" pos:column="32">process<pos:position pos:line="2063" pos:column="39"/></name></expr></argument>)<pos:position pos:line="2063" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="2063" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="2064" pos:column="10"/></block></then></if>
    }<pos:position pos:line="2065" pos:column="6"/></block></for>
}<pos:position pos:line="2066" pos:column="2"/></block>

<comment type="block" pos:line="2068" pos:column="1">/********************************************************************
 * Configuration directives are restricted in terms of where they may
 * appear in the main configuration files and/or .htaccess files according
 * to the bitmask req_override in the command_rec structure.
 * If any of the overrides set in req_override are also allowed in the
 * context in which the command is read, then the command is allowed.
 * The context is determined as follows:
 *
 *    inside *.conf --&gt; override = (RSRC_CONF|OR_ALL)&amp;~(OR_AUTHCFG|OR_LIMIT);
 *    within &lt;Directory&gt; or &lt;Location&gt; --&gt; override = OR_ALL|ACCESS_CONF;
 *    within .htaccess --&gt; override = AllowOverride for current directory;
 *
 * the result is, well, a rather confusing set of possibilities for when
 * a particular directive is allowed to be used.  This procedure prints
 * in English where the given (pc) directive can be used.
 */</comment>
<function><specifier pos:line="2084" pos:column="1">static<pos:position pos:line="2084" pos:column="7"/></specifier> <type><name pos:line="2084" pos:column="8">void<pos:position pos:line="2084" pos:column="12"/></name></type> <name pos:line="2084" pos:column="13">show_overrides<pos:position pos:line="2084" pos:column="27"/></name><parameter_list pos:line="2084" pos:column="27">(<parameter><decl><type><specifier pos:line="2084" pos:column="28">const<pos:position pos:line="2084" pos:column="33"/></specifier> <name pos:line="2084" pos:column="34">command_rec<pos:position pos:line="2084" pos:column="45"/></name> <modifier pos:line="2084" pos:column="46">*<pos:position pos:line="2084" pos:column="47"/></modifier></type><name pos:line="2084" pos:column="47">pc<pos:position pos:line="2084" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2084" pos:column="51">module<pos:position pos:line="2084" pos:column="57"/></name> <modifier pos:line="2084" pos:column="58">*<pos:position pos:line="2084" pos:column="59"/></modifier></type><name pos:line="2084" pos:column="59">pm<pos:position pos:line="2084" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2084" pos:column="62"/></parameter_list>
<block pos:line="2085" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2086" pos:column="5">int<pos:position pos:line="2086" pos:column="8"/></name></type> <name pos:line="2086" pos:column="9">n<pos:position pos:line="2086" pos:column="10"/></name> <init pos:line="2086" pos:column="11">= <expr><literal type="number" pos:line="2086" pos:column="13">0<pos:position pos:line="2086" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="2086" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="2088" pos:column="5">printf<pos:position pos:line="2088" pos:column="11"/></name><argument_list pos:line="2088" pos:column="11">(<argument><expr><literal type="string" pos:line="2088" pos:column="12">"\tAllowed in *.conf "<pos:position pos:line="2088" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2088" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2088" pos:column="36"/></expr_stmt>
    <if pos:line="2089" pos:column="5">if <condition pos:line="2089" pos:column="8">(<expr><operator pos:line="2089" pos:column="9">(<pos:position pos:line="2089" pos:column="10"/></operator><name><name pos:line="2089" pos:column="10">pc<pos:position pos:line="2089" pos:column="12"/></name><operator pos:line="2089" pos:column="12">-&gt;<pos:position pos:line="2089" pos:column="17"/></operator><name pos:line="2089" pos:column="14">req_override<pos:position pos:line="2089" pos:column="26"/></name></name> <operator pos:line="2089" pos:column="27">&amp;<pos:position pos:line="2089" pos:column="32"/></operator> <operator pos:line="2089" pos:column="29">(<pos:position pos:line="2089" pos:column="30"/></operator><name pos:line="2089" pos:column="30">OR_OPTIONS<pos:position pos:line="2089" pos:column="40"/></name> <operator pos:line="2089" pos:column="41">|<pos:position pos:line="2089" pos:column="42"/></operator> <name pos:line="2089" pos:column="43">OR_FILEINFO<pos:position pos:line="2089" pos:column="54"/></name> <operator pos:line="2089" pos:column="55">|<pos:position pos:line="2089" pos:column="56"/></operator> <name pos:line="2089" pos:column="57">OR_INDEXES<pos:position pos:line="2089" pos:column="67"/></name><operator pos:line="2089" pos:column="67">)<pos:position pos:line="2089" pos:column="68"/></operator><operator pos:line="2089" pos:column="68">)<pos:position pos:line="2089" pos:column="69"/></operator>
        <operator pos:line="2090" pos:column="9">||<pos:position pos:line="2090" pos:column="11"/></operator> <operator pos:line="2090" pos:column="12">(<pos:position pos:line="2090" pos:column="13"/></operator><operator pos:line="2090" pos:column="13">(<pos:position pos:line="2090" pos:column="14"/></operator><name><name pos:line="2090" pos:column="14">pc<pos:position pos:line="2090" pos:column="16"/></name><operator pos:line="2090" pos:column="16">-&gt;<pos:position pos:line="2090" pos:column="21"/></operator><name pos:line="2090" pos:column="18">req_override<pos:position pos:line="2090" pos:column="30"/></name></name> <operator pos:line="2090" pos:column="31">&amp;<pos:position pos:line="2090" pos:column="36"/></operator> <name pos:line="2090" pos:column="33">RSRC_CONF<pos:position pos:line="2090" pos:column="42"/></name><operator pos:line="2090" pos:column="42">)<pos:position pos:line="2090" pos:column="43"/></operator>
        <operator pos:line="2091" pos:column="9">&amp;&amp;<pos:position pos:line="2091" pos:column="19"/></operator> <operator pos:line="2091" pos:column="12">(<pos:position pos:line="2091" pos:column="13"/></operator><operator pos:line="2091" pos:column="13">(<pos:position pos:line="2091" pos:column="14"/></operator><name><name pos:line="2091" pos:column="14">pc<pos:position pos:line="2091" pos:column="16"/></name><operator pos:line="2091" pos:column="16">-&gt;<pos:position pos:line="2091" pos:column="21"/></operator><name pos:line="2091" pos:column="18">req_override<pos:position pos:line="2091" pos:column="30"/></name></name> <operator pos:line="2091" pos:column="31">&amp;<pos:position pos:line="2091" pos:column="36"/></operator> <operator pos:line="2091" pos:column="33">(<pos:position pos:line="2091" pos:column="34"/></operator><name pos:line="2091" pos:column="34">ACCESS_CONF<pos:position pos:line="2091" pos:column="45"/></name> <operator pos:line="2091" pos:column="46">|<pos:position pos:line="2091" pos:column="47"/></operator> <name pos:line="2091" pos:column="48">OR_AUTHCFG<pos:position pos:line="2091" pos:column="58"/></name> <operator pos:line="2091" pos:column="59">|<pos:position pos:line="2091" pos:column="60"/></operator> <name pos:line="2091" pos:column="61">OR_LIMIT<pos:position pos:line="2091" pos:column="69"/></name><operator pos:line="2091" pos:column="69">)<pos:position pos:line="2091" pos:column="70"/></operator><operator pos:line="2091" pos:column="70">)<pos:position pos:line="2091" pos:column="71"/></operator><operator pos:line="2091" pos:column="71">)<pos:position pos:line="2091" pos:column="72"/></operator><operator pos:line="2091" pos:column="72">)<pos:position pos:line="2091" pos:column="73"/></operator></expr>)<pos:position pos:line="2091" pos:column="74"/></condition><then pos:line="2091" pos:column="74"> <block pos:line="2091" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="2092" pos:column="9">printf<pos:position pos:line="2092" pos:column="15"/></name><argument_list pos:line="2092" pos:column="15">(<argument><expr><literal type="string" pos:line="2092" pos:column="16">"anywhere"<pos:position pos:line="2092" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="2092" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="2092" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="2093" pos:column="6"/></block></then>
    <elseif pos:line="2094" pos:column="5">else <if pos:line="2094" pos:column="10">if <condition pos:line="2094" pos:column="13">(<expr><name><name pos:line="2094" pos:column="14">pc<pos:position pos:line="2094" pos:column="16"/></name><operator pos:line="2094" pos:column="16">-&gt;<pos:position pos:line="2094" pos:column="21"/></operator><name pos:line="2094" pos:column="18">req_override<pos:position pos:line="2094" pos:column="30"/></name></name> <operator pos:line="2094" pos:column="31">&amp;<pos:position pos:line="2094" pos:column="36"/></operator> <name pos:line="2094" pos:column="33">RSRC_CONF<pos:position pos:line="2094" pos:column="42"/></name></expr>)<pos:position pos:line="2094" pos:column="43"/></condition><then pos:line="2094" pos:column="43"> <block pos:line="2094" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="2095" pos:column="9">printf<pos:position pos:line="2095" pos:column="15"/></name><argument_list pos:line="2095" pos:column="15">(<argument><expr><literal type="string" pos:line="2095" pos:column="16">"only outside &lt;Directory&gt;, &lt;Files&gt; or &lt;Location&gt;"<pos:position pos:line="2095" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="2095" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="2095" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="2096" pos:column="6"/></block></then></if></elseif>
    <else pos:line="2097" pos:column="5">else <block pos:line="2097" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="2098" pos:column="9">printf<pos:position pos:line="2098" pos:column="15"/></name><argument_list pos:line="2098" pos:column="15">(<argument><expr><literal type="string" pos:line="2098" pos:column="16">"only inside &lt;Directory&gt;, &lt;Files&gt; or &lt;Location&gt;"<pos:position pos:line="2098" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="2098" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="2098" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="2099" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="2101" pos:column="5">/* Warn if the directive is allowed inside &lt;Directory&gt; or .htaccess
     * but module doesn't support per-dir configuration
     */</comment>
    <if pos:line="2104" pos:column="5">if <condition pos:line="2104" pos:column="8">(<expr><operator pos:line="2104" pos:column="9">(<pos:position pos:line="2104" pos:column="10"/></operator><name><name pos:line="2104" pos:column="10">pc<pos:position pos:line="2104" pos:column="12"/></name><operator pos:line="2104" pos:column="12">-&gt;<pos:position pos:line="2104" pos:column="17"/></operator><name pos:line="2104" pos:column="14">req_override<pos:position pos:line="2104" pos:column="26"/></name></name> <operator pos:line="2104" pos:column="27">&amp;<pos:position pos:line="2104" pos:column="32"/></operator> <operator pos:line="2104" pos:column="29">(<pos:position pos:line="2104" pos:column="30"/></operator><name pos:line="2104" pos:column="30">OR_ALL<pos:position pos:line="2104" pos:column="36"/></name> <operator pos:line="2104" pos:column="37">|<pos:position pos:line="2104" pos:column="38"/></operator> <name pos:line="2104" pos:column="39">ACCESS_CONF<pos:position pos:line="2104" pos:column="50"/></name><operator pos:line="2104" pos:column="50">)<pos:position pos:line="2104" pos:column="51"/></operator><operator pos:line="2104" pos:column="51">)<pos:position pos:line="2104" pos:column="52"/></operator> <operator pos:line="2104" pos:column="53">&amp;&amp;<pos:position pos:line="2104" pos:column="63"/></operator> <operator pos:line="2104" pos:column="56">!<pos:position pos:line="2104" pos:column="57"/></operator><name><name pos:line="2104" pos:column="57">pm<pos:position pos:line="2104" pos:column="59"/></name><operator pos:line="2104" pos:column="59">-&gt;<pos:position pos:line="2104" pos:column="64"/></operator><name pos:line="2104" pos:column="61">create_dir_config<pos:position pos:line="2104" pos:column="78"/></name></name></expr>)<pos:position pos:line="2104" pos:column="79"/></condition><then pos:line="2104" pos:column="79">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="2105" pos:column="9">printf<pos:position pos:line="2105" pos:column="15"/></name><argument_list pos:line="2105" pos:column="15">(<argument><expr><literal type="string" pos:line="2105" pos:column="16">" [no per-dir config]"<pos:position pos:line="2105" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="2105" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="2105" pos:column="40"/></expr_stmt></block></then></if>

    <if pos:line="2107" pos:column="5">if <condition pos:line="2107" pos:column="8">(<expr><name><name pos:line="2107" pos:column="9">pc<pos:position pos:line="2107" pos:column="11"/></name><operator pos:line="2107" pos:column="11">-&gt;<pos:position pos:line="2107" pos:column="16"/></operator><name pos:line="2107" pos:column="13">req_override<pos:position pos:line="2107" pos:column="25"/></name></name> <operator pos:line="2107" pos:column="26">&amp;<pos:position pos:line="2107" pos:column="31"/></operator> <name pos:line="2107" pos:column="28">OR_ALL<pos:position pos:line="2107" pos:column="34"/></name></expr>)<pos:position pos:line="2107" pos:column="35"/></condition><then pos:line="2107" pos:column="35"> <block pos:line="2107" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="2108" pos:column="9">printf<pos:position pos:line="2108" pos:column="15"/></name><argument_list pos:line="2108" pos:column="15">(<argument><expr><literal type="string" pos:line="2108" pos:column="16">" and in .htaccess\n\twhen AllowOverride"<pos:position pos:line="2108" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="2108" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="2108" pos:column="59"/></expr_stmt>

        <if pos:line="2110" pos:column="9">if <condition pos:line="2110" pos:column="12">(<expr><operator pos:line="2110" pos:column="13">(<pos:position pos:line="2110" pos:column="14"/></operator><name><name pos:line="2110" pos:column="14">pc<pos:position pos:line="2110" pos:column="16"/></name><operator pos:line="2110" pos:column="16">-&gt;<pos:position pos:line="2110" pos:column="21"/></operator><name pos:line="2110" pos:column="18">req_override<pos:position pos:line="2110" pos:column="30"/></name></name> <operator pos:line="2110" pos:column="31">&amp;<pos:position pos:line="2110" pos:column="36"/></operator> <name pos:line="2110" pos:column="33">OR_ALL<pos:position pos:line="2110" pos:column="39"/></name><operator pos:line="2110" pos:column="39">)<pos:position pos:line="2110" pos:column="40"/></operator> <operator pos:line="2110" pos:column="41">==<pos:position pos:line="2110" pos:column="43"/></operator> <name pos:line="2110" pos:column="44">OR_ALL<pos:position pos:line="2110" pos:column="50"/></name></expr>)<pos:position pos:line="2110" pos:column="51"/></condition><then pos:line="2110" pos:column="51"> <block pos:line="2110" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="2111" pos:column="13">printf<pos:position pos:line="2111" pos:column="19"/></name><argument_list pos:line="2111" pos:column="19">(<argument><expr><literal type="string" pos:line="2111" pos:column="20">" isn't None"<pos:position pos:line="2111" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="2111" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="2111" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="2112" pos:column="10"/></block></then>
        <else pos:line="2113" pos:column="9">else <block pos:line="2113" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="2114" pos:column="13">printf<pos:position pos:line="2114" pos:column="19"/></name><argument_list pos:line="2114" pos:column="19">(<argument><expr><literal type="string" pos:line="2114" pos:column="20">" includes "<pos:position pos:line="2114" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="2114" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="2114" pos:column="34"/></expr_stmt>

            <if pos:line="2116" pos:column="13">if <condition pos:line="2116" pos:column="16">(<expr><name><name pos:line="2116" pos:column="17">pc<pos:position pos:line="2116" pos:column="19"/></name><operator pos:line="2116" pos:column="19">-&gt;<pos:position pos:line="2116" pos:column="24"/></operator><name pos:line="2116" pos:column="21">req_override<pos:position pos:line="2116" pos:column="33"/></name></name> <operator pos:line="2116" pos:column="34">&amp;<pos:position pos:line="2116" pos:column="39"/></operator> <name pos:line="2116" pos:column="36">OR_AUTHCFG<pos:position pos:line="2116" pos:column="46"/></name></expr>)<pos:position pos:line="2116" pos:column="47"/></condition><then pos:line="2116" pos:column="47"> <block pos:line="2116" pos:column="48">{
                <if pos:line="2117" pos:column="17">if <condition pos:line="2117" pos:column="20">(<expr><name pos:line="2117" pos:column="21">n<pos:position pos:line="2117" pos:column="22"/></name><operator pos:line="2117" pos:column="22">++<pos:position pos:line="2117" pos:column="24"/></operator></expr>)<pos:position pos:line="2117" pos:column="25"/></condition><then pos:line="2117" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="2118" pos:column="21">printf<pos:position pos:line="2118" pos:column="27"/></name><argument_list pos:line="2118" pos:column="27">(<argument><expr><literal type="string" pos:line="2118" pos:column="28">" or "<pos:position pos:line="2118" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2118" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2118" pos:column="36"/></expr_stmt></block></then></if>

                <expr_stmt><expr><call><name pos:line="2120" pos:column="17">printf<pos:position pos:line="2120" pos:column="23"/></name><argument_list pos:line="2120" pos:column="23">(<argument><expr><literal type="string" pos:line="2120" pos:column="24">"AuthConfig"<pos:position pos:line="2120" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="2120" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2120" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="2121" pos:column="14"/></block></then></if>

            <if pos:line="2123" pos:column="13">if <condition pos:line="2123" pos:column="16">(<expr><name><name pos:line="2123" pos:column="17">pc<pos:position pos:line="2123" pos:column="19"/></name><operator pos:line="2123" pos:column="19">-&gt;<pos:position pos:line="2123" pos:column="24"/></operator><name pos:line="2123" pos:column="21">req_override<pos:position pos:line="2123" pos:column="33"/></name></name> <operator pos:line="2123" pos:column="34">&amp;<pos:position pos:line="2123" pos:column="39"/></operator> <name pos:line="2123" pos:column="36">OR_LIMIT<pos:position pos:line="2123" pos:column="44"/></name></expr>)<pos:position pos:line="2123" pos:column="45"/></condition><then pos:line="2123" pos:column="45"> <block pos:line="2123" pos:column="46">{
                <if pos:line="2124" pos:column="17">if <condition pos:line="2124" pos:column="20">(<expr><name pos:line="2124" pos:column="21">n<pos:position pos:line="2124" pos:column="22"/></name><operator pos:line="2124" pos:column="22">++<pos:position pos:line="2124" pos:column="24"/></operator></expr>)<pos:position pos:line="2124" pos:column="25"/></condition><then pos:line="2124" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="2125" pos:column="21">printf<pos:position pos:line="2125" pos:column="27"/></name><argument_list pos:line="2125" pos:column="27">(<argument><expr><literal type="string" pos:line="2125" pos:column="28">" or "<pos:position pos:line="2125" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2125" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2125" pos:column="36"/></expr_stmt></block></then></if>

                <expr_stmt><expr><call><name pos:line="2127" pos:column="17">printf<pos:position pos:line="2127" pos:column="23"/></name><argument_list pos:line="2127" pos:column="23">(<argument><expr><literal type="string" pos:line="2127" pos:column="24">"Limit"<pos:position pos:line="2127" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="2127" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="2127" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="2128" pos:column="14"/></block></then></if>

            <if pos:line="2130" pos:column="13">if <condition pos:line="2130" pos:column="16">(<expr><name><name pos:line="2130" pos:column="17">pc<pos:position pos:line="2130" pos:column="19"/></name><operator pos:line="2130" pos:column="19">-&gt;<pos:position pos:line="2130" pos:column="24"/></operator><name pos:line="2130" pos:column="21">req_override<pos:position pos:line="2130" pos:column="33"/></name></name> <operator pos:line="2130" pos:column="34">&amp;<pos:position pos:line="2130" pos:column="39"/></operator> <name pos:line="2130" pos:column="36">OR_OPTIONS<pos:position pos:line="2130" pos:column="46"/></name></expr>)<pos:position pos:line="2130" pos:column="47"/></condition><then pos:line="2130" pos:column="47"> <block pos:line="2130" pos:column="48">{
                <if pos:line="2131" pos:column="17">if <condition pos:line="2131" pos:column="20">(<expr><name pos:line="2131" pos:column="21">n<pos:position pos:line="2131" pos:column="22"/></name><operator pos:line="2131" pos:column="22">++<pos:position pos:line="2131" pos:column="24"/></operator></expr>)<pos:position pos:line="2131" pos:column="25"/></condition><then pos:line="2131" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="2132" pos:column="21">printf<pos:position pos:line="2132" pos:column="27"/></name><argument_list pos:line="2132" pos:column="27">(<argument><expr><literal type="string" pos:line="2132" pos:column="28">" or "<pos:position pos:line="2132" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2132" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2132" pos:column="36"/></expr_stmt></block></then></if>

                <expr_stmt><expr><call><name pos:line="2134" pos:column="17">printf<pos:position pos:line="2134" pos:column="23"/></name><argument_list pos:line="2134" pos:column="23">(<argument><expr><literal type="string" pos:line="2134" pos:column="24">"Options"<pos:position pos:line="2134" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="2134" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="2134" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="2135" pos:column="14"/></block></then></if>

            <if pos:line="2137" pos:column="13">if <condition pos:line="2137" pos:column="16">(<expr><name><name pos:line="2137" pos:column="17">pc<pos:position pos:line="2137" pos:column="19"/></name><operator pos:line="2137" pos:column="19">-&gt;<pos:position pos:line="2137" pos:column="24"/></operator><name pos:line="2137" pos:column="21">req_override<pos:position pos:line="2137" pos:column="33"/></name></name> <operator pos:line="2137" pos:column="34">&amp;<pos:position pos:line="2137" pos:column="39"/></operator> <name pos:line="2137" pos:column="36">OR_FILEINFO<pos:position pos:line="2137" pos:column="47"/></name></expr>)<pos:position pos:line="2137" pos:column="48"/></condition><then pos:line="2137" pos:column="48"> <block pos:line="2137" pos:column="49">{
                <if pos:line="2138" pos:column="17">if <condition pos:line="2138" pos:column="20">(<expr><name pos:line="2138" pos:column="21">n<pos:position pos:line="2138" pos:column="22"/></name><operator pos:line="2138" pos:column="22">++<pos:position pos:line="2138" pos:column="24"/></operator></expr>)<pos:position pos:line="2138" pos:column="25"/></condition><then pos:line="2138" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="2139" pos:column="21">printf<pos:position pos:line="2139" pos:column="27"/></name><argument_list pos:line="2139" pos:column="27">(<argument><expr><literal type="string" pos:line="2139" pos:column="28">" or "<pos:position pos:line="2139" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2139" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2139" pos:column="36"/></expr_stmt></block></then></if>

                <expr_stmt><expr><call><name pos:line="2141" pos:column="17">printf<pos:position pos:line="2141" pos:column="23"/></name><argument_list pos:line="2141" pos:column="23">(<argument><expr><literal type="string" pos:line="2141" pos:column="24">"FileInfo"<pos:position pos:line="2141" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2141" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2141" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="2142" pos:column="14"/></block></then></if>

            <if pos:line="2144" pos:column="13">if <condition pos:line="2144" pos:column="16">(<expr><name><name pos:line="2144" pos:column="17">pc<pos:position pos:line="2144" pos:column="19"/></name><operator pos:line="2144" pos:column="19">-&gt;<pos:position pos:line="2144" pos:column="24"/></operator><name pos:line="2144" pos:column="21">req_override<pos:position pos:line="2144" pos:column="33"/></name></name> <operator pos:line="2144" pos:column="34">&amp;<pos:position pos:line="2144" pos:column="39"/></operator> <name pos:line="2144" pos:column="36">OR_INDEXES<pos:position pos:line="2144" pos:column="46"/></name></expr>)<pos:position pos:line="2144" pos:column="47"/></condition><then pos:line="2144" pos:column="47"> <block pos:line="2144" pos:column="48">{
                <if pos:line="2145" pos:column="17">if <condition pos:line="2145" pos:column="20">(<expr><name pos:line="2145" pos:column="21">n<pos:position pos:line="2145" pos:column="22"/></name><operator pos:line="2145" pos:column="22">++<pos:position pos:line="2145" pos:column="24"/></operator></expr>)<pos:position pos:line="2145" pos:column="25"/></condition><then pos:line="2145" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="2146" pos:column="21">printf<pos:position pos:line="2146" pos:column="27"/></name><argument_list pos:line="2146" pos:column="27">(<argument><expr><literal type="string" pos:line="2146" pos:column="28">" or "<pos:position pos:line="2146" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="2146" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2146" pos:column="36"/></expr_stmt></block></then></if>

                <expr_stmt><expr><call><name pos:line="2148" pos:column="17">printf<pos:position pos:line="2148" pos:column="23"/></name><argument_list pos:line="2148" pos:column="23">(<argument><expr><literal type="string" pos:line="2148" pos:column="24">"Indexes"<pos:position pos:line="2148" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="2148" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="2148" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="2149" pos:column="14"/></block></then></if>
        }<pos:position pos:line="2150" pos:column="10"/></block></else></if>
    }<pos:position pos:line="2151" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="2153" pos:column="5">printf<pos:position pos:line="2153" pos:column="11"/></name><argument_list pos:line="2153" pos:column="11">(<argument><expr><literal type="string" pos:line="2153" pos:column="12">"\n"<pos:position pos:line="2153" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="2153" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="2153" pos:column="18"/></expr_stmt>
}<pos:position pos:line="2154" pos:column="2"/></block></function>

<comment type="block" pos:line="2156" pos:column="1">/* Show the preloaded configuration directives, the help string explaining
 * the directive arguments, in what module they are handled, and in
 * what parts of the configuration they are allowed.  Used for httpd -L.
 */</comment>
<macro><name pos:line="2160" pos:column="1">AP_DECLARE<pos:position pos:line="2160" pos:column="11"/></name><argument_list pos:line="2160" pos:column="11">(<argument pos:line="2160" pos:column="12">void<pos:position pos:line="2160" pos:column="16"/></argument>)<pos:position pos:line="2160" pos:column="17"/></argument_list></macro> <macro><name pos:line="2160" pos:column="18">ap_show_directives<pos:position pos:line="2160" pos:column="36"/></name><argument_list pos:line="2160" pos:column="36">(<argument pos:line="2160" pos:column="37">void<pos:position pos:line="2160" pos:column="41"/></argument>)<pos:position pos:line="2160" pos:column="42"/></argument_list></macro>
<block pos:line="2161" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="2162" pos:column="5">const<pos:position pos:line="2162" pos:column="10"/></specifier> <name pos:line="2162" pos:column="11">command_rec<pos:position pos:line="2162" pos:column="22"/></name> <modifier pos:line="2162" pos:column="23">*<pos:position pos:line="2162" pos:column="24"/></modifier></type><name pos:line="2162" pos:column="24">pc<pos:position pos:line="2162" pos:column="26"/></name></decl>;<pos:position pos:line="2162" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="2163" pos:column="5">int<pos:position pos:line="2163" pos:column="8"/></name></type> <name pos:line="2163" pos:column="9">n<pos:position pos:line="2163" pos:column="10"/></name></decl>;<pos:position pos:line="2163" pos:column="11"/></decl_stmt>

    <for pos:line="2165" pos:column="5">for <control pos:line="2165" pos:column="9">(<init><expr><name pos:line="2165" pos:column="10">n<pos:position pos:line="2165" pos:column="11"/></name> <operator pos:line="2165" pos:column="12">=<pos:position pos:line="2165" pos:column="13"/></operator> <literal type="number" pos:line="2165" pos:column="14">0<pos:position pos:line="2165" pos:column="15"/></literal></expr>;<pos:position pos:line="2165" pos:column="16"/></init> <condition><expr><name><name pos:line="2165" pos:column="17">ap_loaded_modules<pos:position pos:line="2165" pos:column="34"/></name><index pos:line="2165" pos:column="34">[<expr><name pos:line="2165" pos:column="35">n<pos:position pos:line="2165" pos:column="36"/></name></expr>]<pos:position pos:line="2165" pos:column="37"/></index></name></expr>;<pos:position pos:line="2165" pos:column="38"/></condition> <incr><expr><operator pos:line="2165" pos:column="39">++<pos:position pos:line="2165" pos:column="41"/></operator><name pos:line="2165" pos:column="41">n<pos:position pos:line="2165" pos:column="42"/></name></expr></incr>)<pos:position pos:line="2165" pos:column="43"/></control> <block pos:line="2165" pos:column="44">{
        <for pos:line="2166" pos:column="9">for <control pos:line="2166" pos:column="13">(<init><expr><name pos:line="2166" pos:column="14">pc<pos:position pos:line="2166" pos:column="16"/></name> <operator pos:line="2166" pos:column="17">=<pos:position pos:line="2166" pos:column="18"/></operator> <name><name pos:line="2166" pos:column="19">ap_loaded_modules<pos:position pos:line="2166" pos:column="36"/></name><index pos:line="2166" pos:column="36">[<expr><name pos:line="2166" pos:column="37">n<pos:position pos:line="2166" pos:column="38"/></name></expr>]<pos:position pos:line="2166" pos:column="39"/></index></name><operator pos:line="2166" pos:column="39">-&gt;<pos:position pos:line="2166" pos:column="44"/></operator><name pos:line="2166" pos:column="41">cmds<pos:position pos:line="2166" pos:column="45"/></name></expr>;<pos:position pos:line="2166" pos:column="46"/></init> <condition><expr><name pos:line="2166" pos:column="47">pc<pos:position pos:line="2166" pos:column="49"/></name> <operator pos:line="2166" pos:column="50">&amp;&amp;<pos:position pos:line="2166" pos:column="60"/></operator> <name><name pos:line="2166" pos:column="53">pc<pos:position pos:line="2166" pos:column="55"/></name><operator pos:line="2166" pos:column="55">-&gt;<pos:position pos:line="2166" pos:column="60"/></operator><name pos:line="2166" pos:column="57">name<pos:position pos:line="2166" pos:column="61"/></name></name></expr>;<pos:position pos:line="2166" pos:column="62"/></condition> <incr><expr><operator pos:line="2166" pos:column="63">++<pos:position pos:line="2166" pos:column="65"/></operator><name pos:line="2166" pos:column="65">pc<pos:position pos:line="2166" pos:column="67"/></name></expr></incr>)<pos:position pos:line="2166" pos:column="68"/></control> <block pos:line="2166" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="2167" pos:column="13">printf<pos:position pos:line="2167" pos:column="19"/></name><argument_list pos:line="2167" pos:column="19">(<argument><expr><literal type="string" pos:line="2167" pos:column="20">"%s (%s)\n"<pos:position pos:line="2167" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="2167" pos:column="33">pc<pos:position pos:line="2167" pos:column="35"/></name><operator pos:line="2167" pos:column="35">-&gt;<pos:position pos:line="2167" pos:column="40"/></operator><name pos:line="2167" pos:column="37">name<pos:position pos:line="2167" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="2167" pos:column="43">ap_loaded_modules<pos:position pos:line="2167" pos:column="60"/></name><index pos:line="2167" pos:column="60">[<expr><name pos:line="2167" pos:column="61">n<pos:position pos:line="2167" pos:column="62"/></name></expr>]<pos:position pos:line="2167" pos:column="63"/></index></name><operator pos:line="2167" pos:column="63">-&gt;<pos:position pos:line="2167" pos:column="68"/></operator><name pos:line="2167" pos:column="65">name<pos:position pos:line="2167" pos:column="69"/></name></expr></argument>)<pos:position pos:line="2167" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="2167" pos:column="71"/></expr_stmt>

            <if pos:line="2169" pos:column="13">if <condition pos:line="2169" pos:column="16">(<expr><name><name pos:line="2169" pos:column="17">pc<pos:position pos:line="2169" pos:column="19"/></name><operator pos:line="2169" pos:column="19">-&gt;<pos:position pos:line="2169" pos:column="24"/></operator><name pos:line="2169" pos:column="21">errmsg<pos:position pos:line="2169" pos:column="27"/></name></name></expr>)<pos:position pos:line="2169" pos:column="28"/></condition><then pos:line="2169" pos:column="28">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="2170" pos:column="17">printf<pos:position pos:line="2170" pos:column="23"/></name><argument_list pos:line="2170" pos:column="23">(<argument><expr><literal type="string" pos:line="2170" pos:column="24">"\t%s\n"<pos:position pos:line="2170" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="2170" pos:column="34">pc<pos:position pos:line="2170" pos:column="36"/></name><operator pos:line="2170" pos:column="36">-&gt;<pos:position pos:line="2170" pos:column="41"/></operator><name pos:line="2170" pos:column="38">errmsg<pos:position pos:line="2170" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="2170" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="2170" pos:column="46"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="2172" pos:column="13">show_overrides<pos:position pos:line="2172" pos:column="27"/></name><argument_list pos:line="2172" pos:column="27">(<argument><expr><name pos:line="2172" pos:column="28">pc<pos:position pos:line="2172" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="2172" pos:column="32">ap_loaded_modules<pos:position pos:line="2172" pos:column="49"/></name><index pos:line="2172" pos:column="49">[<expr><name pos:line="2172" pos:column="50">n<pos:position pos:line="2172" pos:column="51"/></name></expr>]<pos:position pos:line="2172" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="2172" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="2172" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="2173" pos:column="10"/></block></for>
    }<pos:position pos:line="2174" pos:column="6"/></block></for>
}<pos:position pos:line="2175" pos:column="2"/></block>

<comment type="block" pos:line="2177" pos:column="1">/* Show the preloaded module names.  Used for httpd -l. */</comment>
<macro><name pos:line="2178" pos:column="1">AP_DECLARE<pos:position pos:line="2178" pos:column="11"/></name><argument_list pos:line="2178" pos:column="11">(<argument pos:line="2178" pos:column="12">void<pos:position pos:line="2178" pos:column="16"/></argument>)<pos:position pos:line="2178" pos:column="17"/></argument_list></macro> <macro><name pos:line="2178" pos:column="18">ap_show_modules<pos:position pos:line="2178" pos:column="33"/></name><argument_list pos:line="2178" pos:column="33">(<argument pos:line="2178" pos:column="34">void<pos:position pos:line="2178" pos:column="38"/></argument>)<pos:position pos:line="2178" pos:column="39"/></argument_list></macro>
<block pos:line="2179" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2180" pos:column="5">int<pos:position pos:line="2180" pos:column="8"/></name></type> <name pos:line="2180" pos:column="9">n<pos:position pos:line="2180" pos:column="10"/></name></decl>;<pos:position pos:line="2180" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="2182" pos:column="5">printf<pos:position pos:line="2182" pos:column="11"/></name><argument_list pos:line="2182" pos:column="11">(<argument><expr><literal type="string" pos:line="2182" pos:column="12">"Compiled in modules:\n"<pos:position pos:line="2182" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="2182" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="2182" pos:column="38"/></expr_stmt>
    <for pos:line="2183" pos:column="5">for <control pos:line="2183" pos:column="9">(<init><expr><name pos:line="2183" pos:column="10">n<pos:position pos:line="2183" pos:column="11"/></name> <operator pos:line="2183" pos:column="12">=<pos:position pos:line="2183" pos:column="13"/></operator> <literal type="number" pos:line="2183" pos:column="14">0<pos:position pos:line="2183" pos:column="15"/></literal></expr>;<pos:position pos:line="2183" pos:column="16"/></init> <condition><expr><name><name pos:line="2183" pos:column="17">ap_loaded_modules<pos:position pos:line="2183" pos:column="34"/></name><index pos:line="2183" pos:column="34">[<expr><name pos:line="2183" pos:column="35">n<pos:position pos:line="2183" pos:column="36"/></name></expr>]<pos:position pos:line="2183" pos:column="37"/></index></name></expr>;<pos:position pos:line="2183" pos:column="38"/></condition> <incr><expr><operator pos:line="2183" pos:column="39">++<pos:position pos:line="2183" pos:column="41"/></operator><name pos:line="2183" pos:column="41">n<pos:position pos:line="2183" pos:column="42"/></name></expr></incr>)<pos:position pos:line="2183" pos:column="43"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="2184" pos:column="9">printf<pos:position pos:line="2184" pos:column="15"/></name><argument_list pos:line="2184" pos:column="15">(<argument><expr><literal type="string" pos:line="2184" pos:column="16">"  %s\n"<pos:position pos:line="2184" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="2184" pos:column="26">ap_loaded_modules<pos:position pos:line="2184" pos:column="43"/></name><index pos:line="2184" pos:column="43">[<expr><name pos:line="2184" pos:column="44">n<pos:position pos:line="2184" pos:column="45"/></name></expr>]<pos:position pos:line="2184" pos:column="46"/></index></name><operator pos:line="2184" pos:column="46">-&gt;<pos:position pos:line="2184" pos:column="51"/></operator><name pos:line="2184" pos:column="48">name<pos:position pos:line="2184" pos:column="52"/></name></expr></argument>)<pos:position pos:line="2184" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="2184" pos:column="54"/></expr_stmt></block></for>
}<pos:position pos:line="2185" pos:column="2"/></block>

<macro><name pos:line="2187" pos:column="1">AP_DECLARE<pos:position pos:line="2187" pos:column="11"/></name><argument_list pos:line="2187" pos:column="11">(<argument pos:line="2187" pos:column="12">const char *<pos:position pos:line="2187" pos:column="24"/></argument>)<pos:position pos:line="2187" pos:column="25"/></argument_list></macro> <macro><name pos:line="2187" pos:column="26">ap_show_mpm<pos:position pos:line="2187" pos:column="37"/></name><argument_list pos:line="2187" pos:column="37">(<argument pos:line="2187" pos:column="38">void<pos:position pos:line="2187" pos:column="42"/></argument>)<pos:position pos:line="2187" pos:column="43"/></argument_list></macro>
<block pos:line="2188" pos:column="1">{
    <return pos:line="2189" pos:column="5">return <expr><name pos:line="2189" pos:column="12">MPM_NAME<pos:position pos:line="2189" pos:column="20"/></name></expr>;<pos:position pos:line="2189" pos:column="21"/></return>
}<pos:position pos:line="2190" pos:column="2"/></block>
</unit>

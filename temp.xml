<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/git/repos/git-2.14.2/contrib/examples/builtin-fetch--tool.c" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include<pos:position pos:line="1" pos:column="9"/></cpp:directive> <cpp:file pos:line="1" pos:column="10">"builtin.h"<pos:position pos:line="1" pos:column="21"/></cpp:file></cpp:include>
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include<pos:position pos:line="2" pos:column="9"/></cpp:directive> <cpp:file pos:line="2" pos:column="10">"cache.h"<pos:position pos:line="2" pos:column="19"/></cpp:file></cpp:include>
<cpp:include pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">include<pos:position pos:line="3" pos:column="9"/></cpp:directive> <cpp:file pos:line="3" pos:column="10">"refs.h"<pos:position pos:line="3" pos:column="18"/></cpp:file></cpp:include>
<cpp:include pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">include<pos:position pos:line="4" pos:column="9"/></cpp:directive> <cpp:file pos:line="4" pos:column="10">"commit.h"<pos:position pos:line="4" pos:column="20"/></cpp:file></cpp:include>
<cpp:include pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">include<pos:position pos:line="5" pos:column="9"/></cpp:directive> <cpp:file pos:line="5" pos:column="10">"sigchain.h"<pos:position pos:line="5" pos:column="22"/></cpp:file></cpp:include>

<function><specifier pos:line="7" pos:column="1">static<pos:position pos:line="7" pos:column="7"/></specifier> <type><name pos:line="7" pos:column="8">char<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">get_stdin<pos:position pos:line="7" pos:column="23"/></name><parameter_list pos:line="7" pos:column="23">(<parameter><decl><type><name pos:line="7" pos:column="24">void<pos:position pos:line="7" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="7" pos:column="29"/></parameter_list>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">strbuf<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">buf<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">STRBUF_INIT<pos:position pos:line="9" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">strbuf_read<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><operator pos:line="10" pos:column="25">&amp;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="26">buf<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="34">1024<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call> <operator pos:line="10" pos:column="40">&lt;<pos:position pos:line="10" pos:column="44"/></operator> <literal type="number" pos:line="10" pos:column="42">0<pos:position pos:line="10" pos:column="43"/></literal></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <block pos:line="10" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">die_errno<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><literal type="string" pos:line="11" pos:column="27">"error reading standard input"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">strbuf_detach<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><operator pos:line="13" pos:column="30">&amp;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="31">buf<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">NULL<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function>

<function><specifier pos:line="16" pos:column="1">static<pos:position pos:line="16" pos:column="7"/></specifier> <type><name pos:line="16" pos:column="8">void<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">show_new<pos:position pos:line="16" pos:column="21"/></name><parameter_list pos:line="16" pos:column="21">(<parameter><decl><type><name><name pos:line="16" pos:column="22">enum<pos:position pos:line="16" pos:column="26"/></name> <name pos:line="16" pos:column="27">object_type<pos:position pos:line="16" pos:column="38"/></name></name></type> <name pos:line="16" pos:column="39">type<pos:position pos:line="16" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="16" pos:column="45">unsigned<pos:position pos:line="16" pos:column="53"/></name> <name pos:line="16" pos:column="54">char<pos:position pos:line="16" pos:column="58"/></name> <modifier pos:line="16" pos:column="59">*<pos:position pos:line="16" pos:column="60"/></modifier></type><name pos:line="16" pos:column="60">sha1_new<pos:position pos:line="16" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="16" pos:column="69"/></parameter_list>
<block pos:line="17" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">fprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">stderr<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"  %s: %s\n"<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="39">typename<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">type<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr></argument>,
		<argument><expr><call><name pos:line="19" pos:column="17">find_unique_abbrev<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">sha1_new<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">DEFAULT_ABBREV<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function>

<function><specifier pos:line="22" pos:column="1">static<pos:position pos:line="22" pos:column="7"/></specifier> <type><name pos:line="22" pos:column="8">int<pos:position pos:line="22" pos:column="11"/></name></type> <name pos:line="22" pos:column="12">update_ref_env<pos:position pos:line="22" pos:column="26"/></name><parameter_list pos:line="22" pos:column="26">(<parameter><decl><type><specifier pos:line="22" pos:column="27">const<pos:position pos:line="22" pos:column="32"/></specifier> <name pos:line="22" pos:column="33">char<pos:position pos:line="22" pos:column="37"/></name> <modifier pos:line="22" pos:column="38">*<pos:position pos:line="22" pos:column="39"/></modifier></type><name pos:line="22" pos:column="39">action<pos:position pos:line="22" pos:column="45"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="23" pos:column="23">const<pos:position pos:line="23" pos:column="28"/></specifier> <name pos:line="23" pos:column="29">char<pos:position pos:line="23" pos:column="33"/></name> <modifier pos:line="23" pos:column="34">*<pos:position pos:line="23" pos:column="35"/></modifier></type><name pos:line="23" pos:column="35">refname<pos:position pos:line="23" pos:column="42"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="24" pos:column="23">unsigned<pos:position pos:line="24" pos:column="31"/></name> <name pos:line="24" pos:column="32">char<pos:position pos:line="24" pos:column="36"/></name> <modifier pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></modifier></type><name pos:line="24" pos:column="38">sha1<pos:position pos:line="24" pos:column="42"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="25" pos:column="23">unsigned<pos:position pos:line="25" pos:column="31"/></name> <name pos:line="25" pos:column="32">char<pos:position pos:line="25" pos:column="36"/></name> <modifier pos:line="25" pos:column="37">*<pos:position pos:line="25" pos:column="38"/></modifier></type><name pos:line="25" pos:column="38">oldval<pos:position pos:line="25" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="25" pos:column="45"/></parameter_list>
<block pos:line="26" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name></type> <name><name pos:line="27" pos:column="14">msg<pos:position pos:line="27" pos:column="17"/></name><index pos:line="27" pos:column="17">[<expr><literal type="number" pos:line="27" pos:column="18">1024<pos:position pos:line="27" pos:column="22"/></literal></expr>]<pos:position pos:line="27" pos:column="23"/></index></name></decl>;<pos:position pos:line="27" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="28" pos:column="9">const<pos:position pos:line="28" pos:column="14"/></specifier> <name pos:line="28" pos:column="15">char<pos:position pos:line="28" pos:column="19"/></name> <modifier pos:line="28" pos:column="20">*<pos:position pos:line="28" pos:column="21"/></modifier></type><name pos:line="28" pos:column="21">rla<pos:position pos:line="28" pos:column="24"/></name> <init pos:line="28" pos:column="25">= <expr><call><name pos:line="28" pos:column="27">getenv<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><literal type="string" pos:line="28" pos:column="34">"GIT_REFLOG_ACTION"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="55"/></decl_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">rla<pos:position pos:line="30" pos:column="17"/></name></expr>)<pos:position pos:line="30" pos:column="18"/></condition><then pos:line="30" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">rla<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="string" pos:line="31" pos:column="23">"(reflog update)"<pos:position pos:line="31" pos:column="40"/></literal></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">snprintf<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">msg<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="27">sizeof<argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">msg<pos:position pos:line="32" pos:column="37"/></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="40">"%s: %s"<pos:position pos:line="32" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">rla<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">action<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call> <operator pos:line="32" pos:column="63">&gt;=<pos:position pos:line="32" pos:column="68"/></operator> <sizeof pos:line="32" pos:column="66">sizeof<argument_list pos:line="32" pos:column="72">(<argument><expr><name pos:line="32" pos:column="73">msg<pos:position pos:line="32" pos:column="76"/></name></expr></argument>)<pos:position pos:line="32" pos:column="77"/></argument_list></sizeof></expr>)<pos:position pos:line="32" pos:column="78"/></condition><then pos:line="32" pos:column="78">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">warning<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"reflog message too long: %.*s..."<pos:position pos:line="33" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="61">50<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">msg<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt></block></then></if>
	<return pos:line="34" pos:column="9">return <expr><call><name pos:line="34" pos:column="16">update_ref<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">msg<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">refname<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">sha1<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="47">oldval<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="55">0<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>,
			  <argument><expr><name pos:line="35" pos:column="27">UPDATE_REFS_QUIET_ON_ERR<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function>

<function><specifier pos:line="38" pos:column="1">static<pos:position pos:line="38" pos:column="7"/></specifier> <type><name pos:line="38" pos:column="8">int<pos:position pos:line="38" pos:column="11"/></name></type> <name pos:line="38" pos:column="12">update_local_ref<pos:position pos:line="38" pos:column="28"/></name><parameter_list pos:line="38" pos:column="28">(<parameter><decl><type><specifier pos:line="38" pos:column="29">const<pos:position pos:line="38" pos:column="34"/></specifier> <name pos:line="38" pos:column="35">char<pos:position pos:line="38" pos:column="39"/></name> <modifier pos:line="38" pos:column="40">*<pos:position pos:line="38" pos:column="41"/></modifier></type><name pos:line="38" pos:column="41">name<pos:position pos:line="38" pos:column="45"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="39" pos:column="29">const<pos:position pos:line="39" pos:column="34"/></specifier> <name pos:line="39" pos:column="35">char<pos:position pos:line="39" pos:column="39"/></name> <modifier pos:line="39" pos:column="40">*<pos:position pos:line="39" pos:column="41"/></modifier></type><name pos:line="39" pos:column="41">new_head<pos:position pos:line="39" pos:column="49"/></name></decl></parameter>,
			    <parameter><decl><type><specifier pos:line="40" pos:column="29">const<pos:position pos:line="40" pos:column="34"/></specifier> <name pos:line="40" pos:column="35">char<pos:position pos:line="40" pos:column="39"/></name> <modifier pos:line="40" pos:column="40">*<pos:position pos:line="40" pos:column="41"/></modifier></type><name pos:line="40" pos:column="41">note<pos:position pos:line="40" pos:column="45"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="41" pos:column="29">int<pos:position pos:line="41" pos:column="32"/></name></type> <name pos:line="41" pos:column="33">verbose<pos:position pos:line="41" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="41" pos:column="42">int<pos:position pos:line="41" pos:column="45"/></name></type> <name pos:line="41" pos:column="46">force<pos:position pos:line="41" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="41" pos:column="52"/></parameter_list>
<block pos:line="42" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="43" pos:column="9">unsigned<pos:position pos:line="43" pos:column="17"/></name> <name pos:line="43" pos:column="18">char<pos:position pos:line="43" pos:column="22"/></name></type> <name><name pos:line="43" pos:column="23">sha1_old<pos:position pos:line="43" pos:column="31"/></name><index pos:line="43" pos:column="31">[<expr><literal type="number" pos:line="43" pos:column="32">20<pos:position pos:line="43" pos:column="34"/></literal></expr>]<pos:position pos:line="43" pos:column="35"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="43" pos:column="37">sha1_new<pos:position pos:line="43" pos:column="45"/></name><index pos:line="43" pos:column="45">[<expr><literal type="number" pos:line="43" pos:column="46">20<pos:position pos:line="43" pos:column="48"/></literal></expr>]<pos:position pos:line="43" pos:column="49"/></index></name></decl>;<pos:position pos:line="43" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="44" pos:column="9">char<pos:position pos:line="44" pos:column="13"/></name></type> <name><name pos:line="44" pos:column="14">oldh<pos:position pos:line="44" pos:column="18"/></name><index pos:line="44" pos:column="18">[<expr><literal type="number" pos:line="44" pos:column="19">41<pos:position pos:line="44" pos:column="21"/></literal></expr>]<pos:position pos:line="44" pos:column="22"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="44" pos:column="24">newh<pos:position pos:line="44" pos:column="28"/></name><index pos:line="44" pos:column="28">[<expr><literal type="number" pos:line="44" pos:column="29">41<pos:position pos:line="44" pos:column="31"/></literal></expr>]<pos:position pos:line="44" pos:column="32"/></index></name></decl>;<pos:position pos:line="44" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="45" pos:column="9">struct<pos:position pos:line="45" pos:column="15"/></name> <name pos:line="45" pos:column="16">commit<pos:position pos:line="45" pos:column="22"/></name></name> <modifier pos:line="45" pos:column="23">*<pos:position pos:line="45" pos:column="24"/></modifier></type><name pos:line="45" pos:column="24">current<pos:position pos:line="45" pos:column="31"/></name></decl>, <modifier pos:line="45" pos:column="33">*<pos:position pos:line="45" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="45" pos:column="34">updated<pos:position pos:line="45" pos:column="41"/></name></decl>;<pos:position pos:line="45" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="46" pos:column="9">enum<pos:position pos:line="46" pos:column="13"/></name> <name pos:line="46" pos:column="14">object_type<pos:position pos:line="46" pos:column="25"/></name></name></type> <name pos:line="46" pos:column="26">type<pos:position pos:line="46" pos:column="30"/></name></decl>;<pos:position pos:line="46" pos:column="31"/></decl_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">get_sha1_hex<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">new_head<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">sha1_new<pos:position pos:line="48" pos:column="44"/></name></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="46"/></condition><then pos:line="48" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">die<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><literal type="string" pos:line="49" pos:column="21">"malformed object name %s"<pos:position pos:line="49" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">new_head<pos:position pos:line="49" pos:column="57"/></name></expr></argument>)<pos:position pos:line="49" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="51" pos:column="9">type<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">=<pos:position pos:line="51" pos:column="15"/></operator> <call><name pos:line="51" pos:column="16">sha1_object_info<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">sha1_new<pos:position pos:line="51" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="43">NULL<pos:position pos:line="51" pos:column="47"/></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">type<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">&lt;<pos:position pos:line="52" pos:column="22"/></operator> <literal type="number" pos:line="52" pos:column="20">0<pos:position pos:line="52" pos:column="21"/></literal></expr>)<pos:position pos:line="52" pos:column="22"/></condition><then pos:line="52" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="17">die<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><literal type="string" pos:line="53" pos:column="21">"object %s not found"<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">new_head<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">!<pos:position pos:line="55" pos:column="14"/></operator><operator pos:line="55" pos:column="14">*<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">name<pos:position pos:line="55" pos:column="19"/></name></expr>)<pos:position pos:line="55" pos:column="20"/></condition><then pos:line="55" pos:column="20"> <block pos:line="55" pos:column="21">{
		<comment type="block" pos:line="56" pos:column="17">/* Not storing */</comment>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">verbose<pos:position pos:line="57" pos:column="28"/></name></expr>)<pos:position pos:line="57" pos:column="29"/></condition><then pos:line="57" pos:column="29"> <block pos:line="57" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">fprintf<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">stderr<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="41">"* fetched %s\n"<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="59">note<pos:position pos:line="58" pos:column="63"/></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">show_new<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">type<pos:position pos:line="59" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="40">sha1_new<pos:position pos:line="59" pos:column="48"/></name></expr></argument>)<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>
		<return pos:line="61" pos:column="17">return <expr><literal type="number" pos:line="61" pos:column="24">0<pos:position pos:line="61" pos:column="25"/></literal></expr>;<pos:position pos:line="61" pos:column="26"/></return>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><call><name pos:line="64" pos:column="13">get_sha1<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">name<pos:position pos:line="64" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="28">sha1_old<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="38"/></condition><then pos:line="64" pos:column="38"> <block pos:line="64" pos:column="39">{
		<decl_stmt><decl><type><specifier pos:line="65" pos:column="17">const<pos:position pos:line="65" pos:column="22"/></specifier> <name pos:line="65" pos:column="23">char<pos:position pos:line="65" pos:column="27"/></name> <modifier pos:line="65" pos:column="28">*<pos:position pos:line="65" pos:column="29"/></modifier></type><name pos:line="65" pos:column="29">msg<pos:position pos:line="65" pos:column="32"/></name></decl>;<pos:position pos:line="65" pos:column="33"/></decl_stmt>
	<label><name pos:line="66" pos:column="9">just_store<pos:position pos:line="66" pos:column="19"/></name>:<pos:position pos:line="66" pos:column="20"/></label>
		<comment type="block" pos:line="67" pos:column="17">/* new ref */</comment>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">!<pos:position pos:line="68" pos:column="22"/></operator><call><name pos:line="68" pos:column="22">strncmp<pos:position pos:line="68" pos:column="29"/></name><argument_list pos:line="68" pos:column="29">(<argument><expr><name pos:line="68" pos:column="30">name<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="36">"refs/tags/"<pos:position pos:line="68" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="50">10<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="54"/></condition><then pos:line="68" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="25">msg<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <literal type="string" pos:line="69" pos:column="31">"storing tag"<pos:position pos:line="69" pos:column="44"/></literal></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="70" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="25">msg<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <literal type="string" pos:line="71" pos:column="31">"storing head"<pos:position pos:line="71" pos:column="45"/></literal></expr>;<pos:position pos:line="71" pos:column="46"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">fprintf<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">stderr<pos:position pos:line="72" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="33">"* %s: storing %s\n"<pos:position pos:line="72" pos:column="53"/></literal></expr></argument>,
			<argument><expr><name pos:line="73" pos:column="25">name<pos:position pos:line="73" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="31">note<pos:position pos:line="73" pos:column="35"/></name></expr></argument>)<pos:position pos:line="73" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">show_new<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><name pos:line="74" pos:column="26">type<pos:position pos:line="74" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="32">sha1_new<pos:position pos:line="74" pos:column="40"/></name></expr></argument>)<pos:position pos:line="74" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt>
		<return pos:line="75" pos:column="17">return <expr><call><name pos:line="75" pos:column="24">update_ref_env<pos:position pos:line="75" pos:column="38"/></name><argument_list pos:line="75" pos:column="38">(<argument><expr><name pos:line="75" pos:column="39">msg<pos:position pos:line="75" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="44">name<pos:position pos:line="75" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="50">sha1_new<pos:position pos:line="75" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="60">NULL<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="66"/></return>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">!<pos:position pos:line="78" pos:column="14"/></operator><call><name pos:line="78" pos:column="14">hashcmp<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name pos:line="78" pos:column="22">sha1_old<pos:position pos:line="78" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="32">sha1_new<pos:position pos:line="78" pos:column="40"/></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="42"/></condition><then pos:line="78" pos:column="42"> <block pos:line="78" pos:column="43">{
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">verbose<pos:position pos:line="79" pos:column="28"/></name></expr>)<pos:position pos:line="79" pos:column="29"/></condition><then pos:line="79" pos:column="29"> <block pos:line="79" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="80" pos:column="25">fprintf<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">stderr<pos:position pos:line="80" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="41">"* %s: same as %s\n"<pos:position pos:line="80" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="63">name<pos:position pos:line="80" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="69">note<pos:position pos:line="80" pos:column="73"/></name></expr></argument>)<pos:position pos:line="80" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="81" pos:column="25">show_new<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">type<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="40">sha1_new<pos:position pos:line="81" pos:column="48"/></name></expr></argument>)<pos:position pos:line="81" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
		<return pos:line="83" pos:column="17">return <expr><literal type="number" pos:line="83" pos:column="24">0<pos:position pos:line="83" pos:column="25"/></literal></expr>;<pos:position pos:line="83" pos:column="26"/></return>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>

	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">!<pos:position pos:line="86" pos:column="14"/></operator><call><name pos:line="86" pos:column="14">strncmp<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><name pos:line="86" pos:column="22">name<pos:position pos:line="86" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="28">"refs/tags/"<pos:position pos:line="86" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="42">10<pos:position pos:line="86" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="46"/></condition><then pos:line="86" pos:column="46"> <block pos:line="86" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">fprintf<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><name pos:line="87" pos:column="25">stderr<pos:position pos:line="87" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="33">"* %s: updating with %s\n"<pos:position pos:line="87" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="61">name<pos:position pos:line="87" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="67">note<pos:position pos:line="87" pos:column="71"/></name></expr></argument>)<pos:position pos:line="87" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="88" pos:column="17">show_new<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">type<pos:position pos:line="88" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="32">sha1_new<pos:position pos:line="88" pos:column="40"/></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt>
		<return pos:line="89" pos:column="17">return <expr><call><name pos:line="89" pos:column="24">update_ref_env<pos:position pos:line="89" pos:column="38"/></name><argument_list pos:line="89" pos:column="38">(<argument><expr><literal type="string" pos:line="89" pos:column="39">"updating tag"<pos:position pos:line="89" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="55">name<pos:position pos:line="89" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="61">sha1_new<pos:position pos:line="89" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="71">NULL<pos:position pos:line="89" pos:column="75"/></name></expr></argument>)<pos:position pos:line="89" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="77"/></return>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="92" pos:column="9">current<pos:position pos:line="92" pos:column="16"/></name> <operator pos:line="92" pos:column="17">=<pos:position pos:line="92" pos:column="18"/></operator> <call><name pos:line="92" pos:column="19">lookup_commit_reference<pos:position pos:line="92" pos:column="42"/></name><argument_list pos:line="92" pos:column="42">(<argument><expr><name pos:line="92" pos:column="43">sha1_old<pos:position pos:line="92" pos:column="51"/></name></expr></argument>)<pos:position pos:line="92" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="93" pos:column="9">updated<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <call><name pos:line="93" pos:column="19">lookup_commit_reference<pos:position pos:line="93" pos:column="42"/></name><argument_list pos:line="93" pos:column="42">(<argument><expr><name pos:line="93" pos:column="43">sha1_new<pos:position pos:line="93" pos:column="51"/></name></expr></argument>)<pos:position pos:line="93" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="53"/></expr_stmt>
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><operator pos:line="94" pos:column="13">!<pos:position pos:line="94" pos:column="14"/></operator><name pos:line="94" pos:column="14">current<pos:position pos:line="94" pos:column="21"/></name> <operator pos:line="94" pos:column="22">||<pos:position pos:line="94" pos:column="24"/></operator> <operator pos:line="94" pos:column="25">!<pos:position pos:line="94" pos:column="26"/></operator><name pos:line="94" pos:column="26">updated<pos:position pos:line="94" pos:column="33"/></name></expr>)<pos:position pos:line="94" pos:column="34"/></condition><then pos:line="94" pos:column="34">
		<block type="pseudo"><goto pos:line="95" pos:column="17">goto <name pos:line="95" pos:column="22">just_store<pos:position pos:line="95" pos:column="32"/></name>;<pos:position pos:line="95" pos:column="33"/></goto></block></then></if>

	<expr_stmt><expr><call><name pos:line="97" pos:column="9">strcpy<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">(<argument><expr><name pos:line="97" pos:column="16">oldh<pos:position pos:line="97" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="97" pos:column="22">find_unique_abbrev<pos:position pos:line="97" pos:column="40"/></name><argument_list pos:line="97" pos:column="40">(<argument><expr><name><name pos:line="97" pos:column="41">current<pos:position pos:line="97" pos:column="48"/></name><operator pos:line="97" pos:column="48">-&gt;<pos:position pos:line="97" pos:column="53"/></operator><name pos:line="97" pos:column="50">object<pos:position pos:line="97" pos:column="56"/></name><operator pos:line="97" pos:column="56">.<pos:position pos:line="97" pos:column="57"/></operator><name pos:line="97" pos:column="57">sha1<pos:position pos:line="97" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="63">DEFAULT_ABBREV<pos:position pos:line="97" pos:column="77"/></name></expr></argument>)<pos:position pos:line="97" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="80"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">strcpy<pos:position pos:line="98" pos:column="15"/></name><argument_list pos:line="98" pos:column="15">(<argument><expr><name pos:line="98" pos:column="16">newh<pos:position pos:line="98" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="98" pos:column="22">find_unique_abbrev<pos:position pos:line="98" pos:column="40"/></name><argument_list pos:line="98" pos:column="40">(<argument><expr><name pos:line="98" pos:column="41">sha1_new<pos:position pos:line="98" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="51">DEFAULT_ABBREV<pos:position pos:line="98" pos:column="65"/></name></expr></argument>)<pos:position pos:line="98" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="68"/></expr_stmt>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><call><name pos:line="100" pos:column="13">in_merge_bases<pos:position pos:line="100" pos:column="27"/></name><argument_list pos:line="100" pos:column="27">(<argument><expr><name pos:line="100" pos:column="28">current<pos:position pos:line="100" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="37">updated<pos:position pos:line="100" pos:column="44"/></name></expr></argument>)<pos:position pos:line="100" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="46"/></condition><then pos:line="100" pos:column="46"> <block pos:line="100" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="101" pos:column="17">fprintf<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><name pos:line="101" pos:column="25">stderr<pos:position pos:line="101" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="33">"* %s: fast-forward to %s\n"<pos:position pos:line="101" pos:column="61"/></literal></expr></argument>,
			<argument><expr><name pos:line="102" pos:column="25">name<pos:position pos:line="102" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="31">note<pos:position pos:line="102" pos:column="35"/></name></expr></argument>)<pos:position pos:line="102" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">fprintf<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><name pos:line="103" pos:column="25">stderr<pos:position pos:line="103" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="33">"  old..new: %s..%s\n"<pos:position pos:line="103" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="57">oldh<pos:position pos:line="103" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="63">newh<pos:position pos:line="103" pos:column="67"/></name></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="69"/></expr_stmt>
		<return pos:line="104" pos:column="17">return <expr><call><name pos:line="104" pos:column="24">update_ref_env<pos:position pos:line="104" pos:column="38"/></name><argument_list pos:line="104" pos:column="38">(<argument><expr><literal type="string" pos:line="104" pos:column="39">"fast-forward"<pos:position pos:line="104" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="55">name<pos:position pos:line="104" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="61">sha1_new<pos:position pos:line="104" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="71">sha1_old<pos:position pos:line="104" pos:column="79"/></name></expr></argument>)<pos:position pos:line="104" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="81"/></return>
	}<pos:position pos:line="105" pos:column="10"/></block></then></if>
	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><operator pos:line="106" pos:column="13">!<pos:position pos:line="106" pos:column="14"/></operator><name pos:line="106" pos:column="14">force<pos:position pos:line="106" pos:column="19"/></name></expr>)<pos:position pos:line="106" pos:column="20"/></condition><then pos:line="106" pos:column="20"> <block pos:line="106" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="107" pos:column="17">fprintf<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">stderr<pos:position pos:line="107" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="108" pos:column="25">"* %s: not updating to non-fast-forward %s\n"<pos:position pos:line="108" pos:column="70"/></literal></expr></argument>,
			<argument><expr><name pos:line="109" pos:column="25">name<pos:position pos:line="109" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="31">note<pos:position pos:line="109" pos:column="35"/></name></expr></argument>)<pos:position pos:line="109" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="110" pos:column="17">fprintf<pos:position pos:line="110" pos:column="24"/></name><argument_list pos:line="110" pos:column="24">(<argument><expr><name pos:line="110" pos:column="25">stderr<pos:position pos:line="110" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="111" pos:column="25">"  old...new: %s...%s\n"<pos:position pos:line="111" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="51">oldh<pos:position pos:line="111" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="57">newh<pos:position pos:line="111" pos:column="61"/></name></expr></argument>)<pos:position pos:line="111" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="63"/></expr_stmt>
		<return pos:line="112" pos:column="17">return <expr><literal type="number" pos:line="112" pos:column="24">1<pos:position pos:line="112" pos:column="25"/></literal></expr>;<pos:position pos:line="112" pos:column="26"/></return>
	}<pos:position pos:line="113" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="114" pos:column="9">fprintf<pos:position pos:line="114" pos:column="16"/></name><argument_list pos:line="114" pos:column="16">(<argument><expr><name pos:line="114" pos:column="17">stderr<pos:position pos:line="114" pos:column="23"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="115" pos:column="17">"* %s: forcing update to non-fast-forward %s\n"<pos:position pos:line="115" pos:column="64"/></literal></expr></argument>,
		<argument><expr><name pos:line="116" pos:column="17">name<pos:position pos:line="116" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="23">note<pos:position pos:line="116" pos:column="27"/></name></expr></argument>)<pos:position pos:line="116" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="117" pos:column="9">fprintf<pos:position pos:line="117" pos:column="16"/></name><argument_list pos:line="117" pos:column="16">(<argument><expr><name pos:line="117" pos:column="17">stderr<pos:position pos:line="117" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="25">"  old...new: %s...%s\n"<pos:position pos:line="117" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="51">oldh<pos:position pos:line="117" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="57">newh<pos:position pos:line="117" pos:column="61"/></name></expr></argument>)<pos:position pos:line="117" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="63"/></expr_stmt>
	<return pos:line="118" pos:column="9">return <expr><call><name pos:line="118" pos:column="16">update_ref_env<pos:position pos:line="118" pos:column="30"/></name><argument_list pos:line="118" pos:column="30">(<argument><expr><literal type="string" pos:line="118" pos:column="31">"forced-update"<pos:position pos:line="118" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="48">name<pos:position pos:line="118" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="54">sha1_new<pos:position pos:line="118" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="64">sha1_old<pos:position pos:line="118" pos:column="72"/></name></expr></argument>)<pos:position pos:line="118" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="74"/></return>
}<pos:position pos:line="119" pos:column="2"/></block></function>

<function><specifier pos:line="121" pos:column="1">static<pos:position pos:line="121" pos:column="7"/></specifier> <type><name pos:line="121" pos:column="8">int<pos:position pos:line="121" pos:column="11"/></name></type> <name pos:line="121" pos:column="12">append_fetch_head<pos:position pos:line="121" pos:column="29"/></name><parameter_list pos:line="121" pos:column="29">(<parameter><decl><type><name pos:line="121" pos:column="30">FILE<pos:position pos:line="121" pos:column="34"/></name> <modifier pos:line="121" pos:column="35">*<pos:position pos:line="121" pos:column="36"/></modifier></type><name pos:line="121" pos:column="36">fp<pos:position pos:line="121" pos:column="38"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="122" pos:column="30">const<pos:position pos:line="122" pos:column="35"/></specifier> <name pos:line="122" pos:column="36">char<pos:position pos:line="122" pos:column="40"/></name> <modifier pos:line="122" pos:column="41">*<pos:position pos:line="122" pos:column="42"/></modifier></type><name pos:line="122" pos:column="42">head<pos:position pos:line="122" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="122" pos:column="48">const<pos:position pos:line="122" pos:column="53"/></specifier> <name pos:line="122" pos:column="54">char<pos:position pos:line="122" pos:column="58"/></name> <modifier pos:line="122" pos:column="59">*<pos:position pos:line="122" pos:column="60"/></modifier></type><name pos:line="122" pos:column="60">remote<pos:position pos:line="122" pos:column="66"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="123" pos:column="30">const<pos:position pos:line="123" pos:column="35"/></specifier> <name pos:line="123" pos:column="36">char<pos:position pos:line="123" pos:column="40"/></name> <modifier pos:line="123" pos:column="41">*<pos:position pos:line="123" pos:column="42"/></modifier></type><name pos:line="123" pos:column="42">remote_name<pos:position pos:line="123" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="123" pos:column="55">const<pos:position pos:line="123" pos:column="60"/></specifier> <name pos:line="123" pos:column="61">char<pos:position pos:line="123" pos:column="65"/></name> <modifier pos:line="123" pos:column="66">*<pos:position pos:line="123" pos:column="67"/></modifier></type><name pos:line="123" pos:column="67">remote_nick<pos:position pos:line="123" pos:column="78"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="124" pos:column="30">const<pos:position pos:line="124" pos:column="35"/></specifier> <name pos:line="124" pos:column="36">char<pos:position pos:line="124" pos:column="40"/></name> <modifier pos:line="124" pos:column="41">*<pos:position pos:line="124" pos:column="42"/></modifier></type><name pos:line="124" pos:column="42">local_name<pos:position pos:line="124" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="124" pos:column="54">int<pos:position pos:line="124" pos:column="57"/></name></type> <name pos:line="124" pos:column="58">not_for_merge<pos:position pos:line="124" pos:column="71"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="125" pos:column="30">int<pos:position pos:line="125" pos:column="33"/></name></type> <name pos:line="125" pos:column="34">verbose<pos:position pos:line="125" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="125" pos:column="43">int<pos:position pos:line="125" pos:column="46"/></name></type> <name pos:line="125" pos:column="47">force<pos:position pos:line="125" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="125" pos:column="53"/></parameter_list>
<block pos:line="126" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="127" pos:column="9">struct<pos:position pos:line="127" pos:column="15"/></name> <name pos:line="127" pos:column="16">commit<pos:position pos:line="127" pos:column="22"/></name></name> <modifier pos:line="127" pos:column="23">*<pos:position pos:line="127" pos:column="24"/></modifier></type><name pos:line="127" pos:column="24">commit<pos:position pos:line="127" pos:column="30"/></name></decl>;<pos:position pos:line="127" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="128" pos:column="9">int<pos:position pos:line="128" pos:column="12"/></name></type> <name pos:line="128" pos:column="13">remote_len<pos:position pos:line="128" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="128" pos:column="25">i<pos:position pos:line="128" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="128" pos:column="28">note_len<pos:position pos:line="128" pos:column="36"/></name></decl>;<pos:position pos:line="128" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="129" pos:column="9">unsigned<pos:position pos:line="129" pos:column="17"/></name> <name pos:line="129" pos:column="18">char<pos:position pos:line="129" pos:column="22"/></name></type> <name><name pos:line="129" pos:column="23">sha1<pos:position pos:line="129" pos:column="27"/></name><index pos:line="129" pos:column="27">[<expr><literal type="number" pos:line="129" pos:column="28">20<pos:position pos:line="129" pos:column="30"/></literal></expr>]<pos:position pos:line="129" pos:column="31"/></index></name></decl>;<pos:position pos:line="129" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="130" pos:column="9">char<pos:position pos:line="130" pos:column="13"/></name></type> <name><name pos:line="130" pos:column="14">note<pos:position pos:line="130" pos:column="18"/></name><index pos:line="130" pos:column="18">[<expr><literal type="number" pos:line="130" pos:column="19">1024<pos:position pos:line="130" pos:column="23"/></literal></expr>]<pos:position pos:line="130" pos:column="24"/></index></name></decl>;<pos:position pos:line="130" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="131" pos:column="9">const<pos:position pos:line="131" pos:column="14"/></specifier> <name pos:line="131" pos:column="15">char<pos:position pos:line="131" pos:column="19"/></name> <modifier pos:line="131" pos:column="20">*<pos:position pos:line="131" pos:column="21"/></modifier></type><name pos:line="131" pos:column="21">what<pos:position pos:line="131" pos:column="25"/></name></decl>, <modifier pos:line="131" pos:column="27">*<pos:position pos:line="131" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="131" pos:column="28">kind<pos:position pos:line="131" pos:column="32"/></name></decl>;<pos:position pos:line="131" pos:column="33"/></decl_stmt>

	<if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><call><name pos:line="133" pos:column="13">get_sha1<pos:position pos:line="133" pos:column="21"/></name><argument_list pos:line="133" pos:column="21">(<argument><expr><name pos:line="133" pos:column="22">head<pos:position pos:line="133" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="28">sha1<pos:position pos:line="133" pos:column="32"/></name></expr></argument>)<pos:position pos:line="133" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="34"/></condition><then pos:line="133" pos:column="34">
		<block type="pseudo"><return pos:line="134" pos:column="17">return <expr><call><name pos:line="134" pos:column="24">error<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><literal type="string" pos:line="134" pos:column="30">"Not a valid object name: %s"<pos:position pos:line="134" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="61">head<pos:position pos:line="134" pos:column="65"/></name></expr></argument>)<pos:position pos:line="134" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="67"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="135" pos:column="9">commit<pos:position pos:line="135" pos:column="15"/></name> <operator pos:line="135" pos:column="16">=<pos:position pos:line="135" pos:column="17"/></operator> <call><name pos:line="135" pos:column="18">lookup_commit_reference_gently<pos:position pos:line="135" pos:column="48"/></name><argument_list pos:line="135" pos:column="48">(<argument><expr><name pos:line="135" pos:column="49">sha1<pos:position pos:line="135" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="55">1<pos:position pos:line="135" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="58"/></expr_stmt>
	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><operator pos:line="136" pos:column="13">!<pos:position pos:line="136" pos:column="14"/></operator><name pos:line="136" pos:column="14">commit<pos:position pos:line="136" pos:column="20"/></name></expr>)<pos:position pos:line="136" pos:column="21"/></condition><then pos:line="136" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="17">not_for_merge<pos:position pos:line="137" pos:column="30"/></name> <operator pos:line="137" pos:column="31">=<pos:position pos:line="137" pos:column="32"/></operator> <literal type="number" pos:line="137" pos:column="33">1<pos:position pos:line="137" pos:column="34"/></literal></expr>;<pos:position pos:line="137" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><operator pos:line="139" pos:column="13">!<pos:position pos:line="139" pos:column="14"/></operator><call><name pos:line="139" pos:column="14">strcmp<pos:position pos:line="139" pos:column="20"/></name><argument_list pos:line="139" pos:column="20">(<argument><expr><name pos:line="139" pos:column="21">remote_name<pos:position pos:line="139" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="34">"HEAD"<pos:position pos:line="139" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="42"/></condition><then pos:line="139" pos:column="42"> <block pos:line="139" pos:column="43">{
		<expr_stmt><expr><name pos:line="140" pos:column="17">kind<pos:position pos:line="140" pos:column="21"/></name> <operator pos:line="140" pos:column="22">=<pos:position pos:line="140" pos:column="23"/></operator> <literal type="string" pos:line="140" pos:column="24">""<pos:position pos:line="140" pos:column="26"/></literal></expr>;<pos:position pos:line="140" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="141" pos:column="17">what<pos:position pos:line="141" pos:column="21"/></name> <operator pos:line="141" pos:column="22">=<pos:position pos:line="141" pos:column="23"/></operator> <literal type="string" pos:line="141" pos:column="24">""<pos:position pos:line="141" pos:column="26"/></literal></expr>;<pos:position pos:line="141" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="142" pos:column="10"/></block></then>
	<elseif pos:line="143" pos:column="9">else <if pos:line="143" pos:column="14">if <condition pos:line="143" pos:column="17">(<expr><operator pos:line="143" pos:column="18">!<pos:position pos:line="143" pos:column="19"/></operator><call><name pos:line="143" pos:column="19">strncmp<pos:position pos:line="143" pos:column="26"/></name><argument_list pos:line="143" pos:column="26">(<argument><expr><name pos:line="143" pos:column="27">remote_name<pos:position pos:line="143" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="40">"refs/heads/"<pos:position pos:line="143" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="55">11<pos:position pos:line="143" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="59"/></condition><then pos:line="143" pos:column="59"> <block pos:line="143" pos:column="60">{
		<expr_stmt><expr><name pos:line="144" pos:column="17">kind<pos:position pos:line="144" pos:column="21"/></name> <operator pos:line="144" pos:column="22">=<pos:position pos:line="144" pos:column="23"/></operator> <literal type="string" pos:line="144" pos:column="24">"branch"<pos:position pos:line="144" pos:column="32"/></literal></expr>;<pos:position pos:line="144" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="145" pos:column="17">what<pos:position pos:line="145" pos:column="21"/></name> <operator pos:line="145" pos:column="22">=<pos:position pos:line="145" pos:column="23"/></operator> <name pos:line="145" pos:column="24">remote_name<pos:position pos:line="145" pos:column="35"/></name> <operator pos:line="145" pos:column="36">+<pos:position pos:line="145" pos:column="37"/></operator> <literal type="number" pos:line="145" pos:column="38">11<pos:position pos:line="145" pos:column="40"/></literal></expr>;<pos:position pos:line="145" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="146" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="147" pos:column="9">else <if pos:line="147" pos:column="14">if <condition pos:line="147" pos:column="17">(<expr><operator pos:line="147" pos:column="18">!<pos:position pos:line="147" pos:column="19"/></operator><call><name pos:line="147" pos:column="19">strncmp<pos:position pos:line="147" pos:column="26"/></name><argument_list pos:line="147" pos:column="26">(<argument><expr><name pos:line="147" pos:column="27">remote_name<pos:position pos:line="147" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="40">"refs/tags/"<pos:position pos:line="147" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="54">10<pos:position pos:line="147" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="58"/></condition><then pos:line="147" pos:column="58"> <block pos:line="147" pos:column="59">{
		<expr_stmt><expr><name pos:line="148" pos:column="17">kind<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <literal type="string" pos:line="148" pos:column="24">"tag"<pos:position pos:line="148" pos:column="29"/></literal></expr>;<pos:position pos:line="148" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="149" pos:column="17">what<pos:position pos:line="149" pos:column="21"/></name> <operator pos:line="149" pos:column="22">=<pos:position pos:line="149" pos:column="23"/></operator> <name pos:line="149" pos:column="24">remote_name<pos:position pos:line="149" pos:column="35"/></name> <operator pos:line="149" pos:column="36">+<pos:position pos:line="149" pos:column="37"/></operator> <literal type="number" pos:line="149" pos:column="38">10<pos:position pos:line="149" pos:column="40"/></literal></expr>;<pos:position pos:line="149" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="150" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="151" pos:column="9">else <if pos:line="151" pos:column="14">if <condition pos:line="151" pos:column="17">(<expr><operator pos:line="151" pos:column="18">!<pos:position pos:line="151" pos:column="19"/></operator><call><name pos:line="151" pos:column="19">strncmp<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><name pos:line="151" pos:column="27">remote_name<pos:position pos:line="151" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="40">"refs/remotes/"<pos:position pos:line="151" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="57">13<pos:position pos:line="151" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="61"/></condition><then pos:line="151" pos:column="61"> <block pos:line="151" pos:column="62">{
		<expr_stmt><expr><name pos:line="152" pos:column="17">kind<pos:position pos:line="152" pos:column="21"/></name> <operator pos:line="152" pos:column="22">=<pos:position pos:line="152" pos:column="23"/></operator> <literal type="string" pos:line="152" pos:column="24">"remote-tracking branch"<pos:position pos:line="152" pos:column="48"/></literal></expr>;<pos:position pos:line="152" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="153" pos:column="17">what<pos:position pos:line="153" pos:column="21"/></name> <operator pos:line="153" pos:column="22">=<pos:position pos:line="153" pos:column="23"/></operator> <name pos:line="153" pos:column="24">remote_name<pos:position pos:line="153" pos:column="35"/></name> <operator pos:line="153" pos:column="36">+<pos:position pos:line="153" pos:column="37"/></operator> <literal type="number" pos:line="153" pos:column="38">13<pos:position pos:line="153" pos:column="40"/></literal></expr>;<pos:position pos:line="153" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="154" pos:column="10"/></block></then></if></elseif>
	<else pos:line="155" pos:column="9">else <block pos:line="155" pos:column="14">{
		<expr_stmt><expr><name pos:line="156" pos:column="17">kind<pos:position pos:line="156" pos:column="21"/></name> <operator pos:line="156" pos:column="22">=<pos:position pos:line="156" pos:column="23"/></operator> <literal type="string" pos:line="156" pos:column="24">""<pos:position pos:line="156" pos:column="26"/></literal></expr>;<pos:position pos:line="156" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="157" pos:column="17">what<pos:position pos:line="157" pos:column="21"/></name> <operator pos:line="157" pos:column="22">=<pos:position pos:line="157" pos:column="23"/></operator> <name pos:line="157" pos:column="24">remote_name<pos:position pos:line="157" pos:column="35"/></name></expr>;<pos:position pos:line="157" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="158" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="160" pos:column="9">remote_len<pos:position pos:line="160" pos:column="19"/></name> <operator pos:line="160" pos:column="20">=<pos:position pos:line="160" pos:column="21"/></operator> <call><name pos:line="160" pos:column="22">strlen<pos:position pos:line="160" pos:column="28"/></name><argument_list pos:line="160" pos:column="28">(<argument><expr><name pos:line="160" pos:column="29">remote<pos:position pos:line="160" pos:column="35"/></name></expr></argument>)<pos:position pos:line="160" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="37"/></expr_stmt>
	<for pos:line="161" pos:column="9">for <control pos:line="161" pos:column="13">(<init><expr><name pos:line="161" pos:column="14">i<pos:position pos:line="161" pos:column="15"/></name> <operator pos:line="161" pos:column="16">=<pos:position pos:line="161" pos:column="17"/></operator> <name pos:line="161" pos:column="18">remote_len<pos:position pos:line="161" pos:column="28"/></name> <operator pos:line="161" pos:column="29">-<pos:position pos:line="161" pos:column="30"/></operator> <literal type="number" pos:line="161" pos:column="31">1<pos:position pos:line="161" pos:column="32"/></literal></expr>;<pos:position pos:line="161" pos:column="33"/></init> <condition><expr><name><name pos:line="161" pos:column="34">remote<pos:position pos:line="161" pos:column="40"/></name><index pos:line="161" pos:column="40">[<expr><name pos:line="161" pos:column="41">i<pos:position pos:line="161" pos:column="42"/></name></expr>]<pos:position pos:line="161" pos:column="43"/></index></name> <operator pos:line="161" pos:column="44">==<pos:position pos:line="161" pos:column="46"/></operator> <literal type="char" pos:line="161" pos:column="47">'/'<pos:position pos:line="161" pos:column="50"/></literal> <operator pos:line="161" pos:column="51">&amp;&amp;<pos:position pos:line="161" pos:column="61"/></operator> <literal type="number" pos:line="161" pos:column="54">0<pos:position pos:line="161" pos:column="55"/></literal> <operator pos:line="161" pos:column="56">&lt;=<pos:position pos:line="161" pos:column="61"/></operator> <name pos:line="161" pos:column="59">i<pos:position pos:line="161" pos:column="60"/></name></expr>;<pos:position pos:line="161" pos:column="61"/></condition> <incr><expr><name pos:line="161" pos:column="62">i<pos:position pos:line="161" pos:column="63"/></name><operator pos:line="161" pos:column="63">--<pos:position pos:line="161" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="161" pos:column="66"/></control>
		<block type="pseudo"><empty_stmt pos:line="162" pos:column="17">;<pos:position pos:line="162" pos:column="18"/></empty_stmt></block></for>
	<expr_stmt><expr><name pos:line="163" pos:column="9">remote_len<pos:position pos:line="163" pos:column="19"/></name> <operator pos:line="163" pos:column="20">=<pos:position pos:line="163" pos:column="21"/></operator> <name pos:line="163" pos:column="22">i<pos:position pos:line="163" pos:column="23"/></name> <operator pos:line="163" pos:column="24">+<pos:position pos:line="163" pos:column="25"/></operator> <literal type="number" pos:line="163" pos:column="26">1<pos:position pos:line="163" pos:column="27"/></literal></expr>;<pos:position pos:line="163" pos:column="28"/></expr_stmt>
	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><literal type="number" pos:line="164" pos:column="13">4<pos:position pos:line="164" pos:column="14"/></literal> <operator pos:line="164" pos:column="15">&lt;<pos:position pos:line="164" pos:column="19"/></operator> <name pos:line="164" pos:column="17">i<pos:position pos:line="164" pos:column="18"/></name> <operator pos:line="164" pos:column="19">&amp;&amp;<pos:position pos:line="164" pos:column="29"/></operator> <operator pos:line="164" pos:column="22">!<pos:position pos:line="164" pos:column="23"/></operator><call><name pos:line="164" pos:column="23">strncmp<pos:position pos:line="164" pos:column="30"/></name><argument_list pos:line="164" pos:column="30">(<argument><expr><literal type="string" pos:line="164" pos:column="31">".git"<pos:position pos:line="164" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="164" pos:column="39">remote<pos:position pos:line="164" pos:column="45"/></name> <operator pos:line="164" pos:column="46">+<pos:position pos:line="164" pos:column="47"/></operator> <name pos:line="164" pos:column="48">i<pos:position pos:line="164" pos:column="49"/></name> <operator pos:line="164" pos:column="50">-<pos:position pos:line="164" pos:column="51"/></operator> <literal type="number" pos:line="164" pos:column="52">3<pos:position pos:line="164" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="164" pos:column="55">4<pos:position pos:line="164" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="164" pos:column="58"/></condition><then pos:line="164" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="17">remote_len<pos:position pos:line="165" pos:column="27"/></name> <operator pos:line="165" pos:column="28">=<pos:position pos:line="165" pos:column="29"/></operator> <name pos:line="165" pos:column="30">i<pos:position pos:line="165" pos:column="31"/></name> <operator pos:line="165" pos:column="32">-<pos:position pos:line="165" pos:column="33"/></operator> <literal type="number" pos:line="165" pos:column="34">3<pos:position pos:line="165" pos:column="35"/></literal></expr>;<pos:position pos:line="165" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="167" pos:column="9">note_len<pos:position pos:line="167" pos:column="17"/></name> <operator pos:line="167" pos:column="18">=<pos:position pos:line="167" pos:column="19"/></operator> <literal type="number" pos:line="167" pos:column="20">0<pos:position pos:line="167" pos:column="21"/></literal></expr>;<pos:position pos:line="167" pos:column="22"/></expr_stmt>
	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><operator pos:line="168" pos:column="13">*<pos:position pos:line="168" pos:column="14"/></operator><name pos:line="168" pos:column="14">what<pos:position pos:line="168" pos:column="18"/></name></expr>)<pos:position pos:line="168" pos:column="19"/></condition><then pos:line="168" pos:column="19"> <block pos:line="168" pos:column="20">{
		<if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><operator pos:line="169" pos:column="21">*<pos:position pos:line="169" pos:column="22"/></operator><name pos:line="169" pos:column="22">kind<pos:position pos:line="169" pos:column="26"/></name></expr>)<pos:position pos:line="169" pos:column="27"/></condition><then pos:line="169" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="170" pos:column="25">note_len<pos:position pos:line="170" pos:column="33"/></name> <operator pos:line="170" pos:column="34">+=<pos:position pos:line="170" pos:column="36"/></operator> <call><name pos:line="170" pos:column="37">sprintf<pos:position pos:line="170" pos:column="44"/></name><argument_list pos:line="170" pos:column="44">(<argument><expr><name pos:line="170" pos:column="45">note<pos:position pos:line="170" pos:column="49"/></name> <operator pos:line="170" pos:column="50">+<pos:position pos:line="170" pos:column="51"/></operator> <name pos:line="170" pos:column="52">note_len<pos:position pos:line="170" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="62">"%s "<pos:position pos:line="170" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="69">kind<pos:position pos:line="170" pos:column="73"/></name></expr></argument>)<pos:position pos:line="170" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="75"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="171" pos:column="17">note_len<pos:position pos:line="171" pos:column="25"/></name> <operator pos:line="171" pos:column="26">+=<pos:position pos:line="171" pos:column="28"/></operator> <call><name pos:line="171" pos:column="29">sprintf<pos:position pos:line="171" pos:column="36"/></name><argument_list pos:line="171" pos:column="36">(<argument><expr><name pos:line="171" pos:column="37">note<pos:position pos:line="171" pos:column="41"/></name> <operator pos:line="171" pos:column="42">+<pos:position pos:line="171" pos:column="43"/></operator> <name pos:line="171" pos:column="44">note_len<pos:position pos:line="171" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="54">"'%s' of "<pos:position pos:line="171" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="66">what<pos:position pos:line="171" pos:column="70"/></name></expr></argument>)<pos:position pos:line="171" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="172" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="173" pos:column="9">note_len<pos:position pos:line="173" pos:column="17"/></name> <operator pos:line="173" pos:column="18">+=<pos:position pos:line="173" pos:column="20"/></operator> <call><name pos:line="173" pos:column="21">sprintf<pos:position pos:line="173" pos:column="28"/></name><argument_list pos:line="173" pos:column="28">(<argument><expr><name pos:line="173" pos:column="29">note<pos:position pos:line="173" pos:column="33"/></name> <operator pos:line="173" pos:column="34">+<pos:position pos:line="173" pos:column="35"/></operator> <name pos:line="173" pos:column="36">note_len<pos:position pos:line="173" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="46">"%.*s"<pos:position pos:line="173" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="173" pos:column="54">remote_len<pos:position pos:line="173" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="66">remote<pos:position pos:line="173" pos:column="72"/></name></expr></argument>)<pos:position pos:line="173" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="174" pos:column="9">fprintf<pos:position pos:line="174" pos:column="16"/></name><argument_list pos:line="174" pos:column="16">(<argument><expr><name pos:line="174" pos:column="17">fp<pos:position pos:line="174" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="174" pos:column="21">"%s\t%s\t%s\n"<pos:position pos:line="174" pos:column="35"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="175" pos:column="17">sha1_to_hex<pos:position pos:line="175" pos:column="28"/></name><argument_list pos:line="175" pos:column="28">(<argument><expr><ternary><condition><expr><name pos:line="175" pos:column="29">commit<pos:position pos:line="175" pos:column="35"/></name></expr> ?<pos:position pos:line="175" pos:column="37"/></condition><then pos:line="175" pos:column="37"> <expr><name><name pos:line="175" pos:column="38">commit<pos:position pos:line="175" pos:column="44"/></name><operator pos:line="175" pos:column="44">-&gt;<pos:position pos:line="175" pos:column="49"/></operator><name pos:line="175" pos:column="46">object<pos:position pos:line="175" pos:column="52"/></name><operator pos:line="175" pos:column="52">.<pos:position pos:line="175" pos:column="53"/></operator><name pos:line="175" pos:column="53">sha1<pos:position pos:line="175" pos:column="57"/></name></name></expr> <pos:position pos:line="175" pos:column="58"/></then><else pos:line="175" pos:column="58">: <expr><name pos:line="175" pos:column="60">sha1<pos:position pos:line="175" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="175" pos:column="65"/></argument_list></call></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="176" pos:column="17">not_for_merge<pos:position pos:line="176" pos:column="30"/></name></expr> ?<pos:position pos:line="176" pos:column="32"/></condition><then pos:line="176" pos:column="32"> <expr><literal type="string" pos:line="176" pos:column="33">"not-for-merge"<pos:position pos:line="176" pos:column="48"/></literal></expr> <pos:position pos:line="176" pos:column="49"/></then><else pos:line="176" pos:column="49">: <expr><literal type="string" pos:line="176" pos:column="51">""<pos:position pos:line="176" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><name pos:line="177" pos:column="17">note<pos:position pos:line="177" pos:column="21"/></name></expr></argument>)<pos:position pos:line="177" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="23"/></expr_stmt>
	<return pos:line="178" pos:column="9">return <expr><call><name pos:line="178" pos:column="16">update_local_ref<pos:position pos:line="178" pos:column="32"/></name><argument_list pos:line="178" pos:column="32">(<argument><expr><name pos:line="178" pos:column="33">local_name<pos:position pos:line="178" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="45">head<pos:position pos:line="178" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="51">note<pos:position pos:line="178" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="57">verbose<pos:position pos:line="178" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="66">force<pos:position pos:line="178" pos:column="71"/></name></expr></argument>)<pos:position pos:line="178" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="73"/></return>
}<pos:position pos:line="179" pos:column="2"/></block></function>

<decl_stmt><decl><specifier pos:line="181" pos:column="1">static<pos:position pos:line="181" pos:column="7"/></specifier> <type><name pos:line="181" pos:column="8">char<pos:position pos:line="181" pos:column="12"/></name> <modifier pos:line="181" pos:column="13">*<pos:position pos:line="181" pos:column="14"/></modifier></type><name pos:line="181" pos:column="14">keep<pos:position pos:line="181" pos:column="18"/></name></decl>;<pos:position pos:line="181" pos:column="19"/></decl_stmt>
<function><specifier pos:line="182" pos:column="1">static<pos:position pos:line="182" pos:column="7"/></specifier> <type><name pos:line="182" pos:column="8">void<pos:position pos:line="182" pos:column="12"/></name></type> <name pos:line="182" pos:column="13">remove_keep<pos:position pos:line="182" pos:column="24"/></name><parameter_list pos:line="182" pos:column="24">(<parameter><decl><type><name pos:line="182" pos:column="25">void<pos:position pos:line="182" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="182" pos:column="30"/></parameter_list>
<block pos:line="183" pos:column="1">{
	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name pos:line="184" pos:column="13">keep<pos:position pos:line="184" pos:column="17"/></name> <operator pos:line="184" pos:column="18">&amp;&amp;<pos:position pos:line="184" pos:column="28"/></operator> <operator pos:line="184" pos:column="21">*<pos:position pos:line="184" pos:column="22"/></operator><name pos:line="184" pos:column="22">keep<pos:position pos:line="184" pos:column="26"/></name></expr>)<pos:position pos:line="184" pos:column="27"/></condition><then pos:line="184" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="17">unlink<pos:position pos:line="185" pos:column="23"/></name><argument_list pos:line="185" pos:column="23">(<argument><expr><name pos:line="185" pos:column="24">keep<pos:position pos:line="185" pos:column="28"/></name></expr></argument>)<pos:position pos:line="185" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="30"/></expr_stmt></block></then></if>
}<pos:position pos:line="186" pos:column="2"/></block></function>

<function><specifier pos:line="188" pos:column="1">static<pos:position pos:line="188" pos:column="7"/></specifier> <type><name pos:line="188" pos:column="8">void<pos:position pos:line="188" pos:column="12"/></name></type> <name pos:line="188" pos:column="13">remove_keep_on_signal<pos:position pos:line="188" pos:column="34"/></name><parameter_list pos:line="188" pos:column="34">(<parameter><decl><type><name pos:line="188" pos:column="35">int<pos:position pos:line="188" pos:column="38"/></name></type> <name pos:line="188" pos:column="39">signo<pos:position pos:line="188" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="188" pos:column="45"/></parameter_list>
<block pos:line="189" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="190" pos:column="9">remove_keep<pos:position pos:line="190" pos:column="20"/></name><argument_list pos:line="190" pos:column="20">()<pos:position pos:line="190" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="191" pos:column="9">sigchain_pop<pos:position pos:line="191" pos:column="21"/></name><argument_list pos:line="191" pos:column="21">(<argument><expr><name pos:line="191" pos:column="22">signo<pos:position pos:line="191" pos:column="27"/></name></expr></argument>)<pos:position pos:line="191" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="192" pos:column="9">raise<pos:position pos:line="192" pos:column="14"/></name><argument_list pos:line="192" pos:column="14">(<argument><expr><name pos:line="192" pos:column="15">signo<pos:position pos:line="192" pos:column="20"/></name></expr></argument>)<pos:position pos:line="192" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="22"/></expr_stmt>
}<pos:position pos:line="193" pos:column="2"/></block></function>

<function><specifier pos:line="195" pos:column="1">static<pos:position pos:line="195" pos:column="7"/></specifier> <type><name pos:line="195" pos:column="8">char<pos:position pos:line="195" pos:column="12"/></name> <modifier pos:line="195" pos:column="13">*<pos:position pos:line="195" pos:column="14"/></modifier></type><name pos:line="195" pos:column="14">find_local_name<pos:position pos:line="195" pos:column="29"/></name><parameter_list pos:line="195" pos:column="29">(<parameter><decl><type><specifier pos:line="195" pos:column="30">const<pos:position pos:line="195" pos:column="35"/></specifier> <name pos:line="195" pos:column="36">char<pos:position pos:line="195" pos:column="40"/></name> <modifier pos:line="195" pos:column="41">*<pos:position pos:line="195" pos:column="42"/></modifier></type><name pos:line="195" pos:column="42">remote_name<pos:position pos:line="195" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="195" pos:column="55">const<pos:position pos:line="195" pos:column="60"/></specifier> <name pos:line="195" pos:column="61">char<pos:position pos:line="195" pos:column="65"/></name> <modifier pos:line="195" pos:column="66">*<pos:position pos:line="195" pos:column="67"/></modifier></type><name pos:line="195" pos:column="67">refs<pos:position pos:line="195" pos:column="71"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="196" pos:column="30">int<pos:position pos:line="196" pos:column="33"/></name> <modifier pos:line="196" pos:column="34">*<pos:position pos:line="196" pos:column="35"/></modifier></type><name pos:line="196" pos:column="35">force_p<pos:position pos:line="196" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="196" pos:column="44">int<pos:position pos:line="196" pos:column="47"/></name> <modifier pos:line="196" pos:column="48">*<pos:position pos:line="196" pos:column="49"/></modifier></type><name pos:line="196" pos:column="49">not_for_merge_p<pos:position pos:line="196" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="196" pos:column="65"/></parameter_list>
<block pos:line="197" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="198" pos:column="9">const<pos:position pos:line="198" pos:column="14"/></specifier> <name pos:line="198" pos:column="15">char<pos:position pos:line="198" pos:column="19"/></name> <modifier pos:line="198" pos:column="20">*<pos:position pos:line="198" pos:column="21"/></modifier></type><name pos:line="198" pos:column="21">ref<pos:position pos:line="198" pos:column="24"/></name> <init pos:line="198" pos:column="25">= <expr><name pos:line="198" pos:column="27">refs<pos:position pos:line="198" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="198" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="199" pos:column="9">int<pos:position pos:line="199" pos:column="12"/></name></type> <name pos:line="199" pos:column="13">len<pos:position pos:line="199" pos:column="16"/></name> <init pos:line="199" pos:column="17">= <expr><call><name pos:line="199" pos:column="19">strlen<pos:position pos:line="199" pos:column="25"/></name><argument_list pos:line="199" pos:column="25">(<argument><expr><name pos:line="199" pos:column="26">remote_name<pos:position pos:line="199" pos:column="37"/></name></expr></argument>)<pos:position pos:line="199" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="199" pos:column="39"/></decl_stmt>

	<while pos:line="201" pos:column="9">while <condition pos:line="201" pos:column="15">(<expr><name pos:line="201" pos:column="16">ref<pos:position pos:line="201" pos:column="19"/></name></expr>)<pos:position pos:line="201" pos:column="20"/></condition> <block pos:line="201" pos:column="21">{
		<decl_stmt><decl><type><specifier pos:line="202" pos:column="17">const<pos:position pos:line="202" pos:column="22"/></specifier> <name pos:line="202" pos:column="23">char<pos:position pos:line="202" pos:column="27"/></name> <modifier pos:line="202" pos:column="28">*<pos:position pos:line="202" pos:column="29"/></modifier></type><name pos:line="202" pos:column="29">next<pos:position pos:line="202" pos:column="33"/></name></decl>;<pos:position pos:line="202" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="203" pos:column="17">int<pos:position pos:line="203" pos:column="20"/></name></type> <name pos:line="203" pos:column="21">single_force<pos:position pos:line="203" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="203" pos:column="35">not_for_merge<pos:position pos:line="203" pos:column="48"/></name></decl>;<pos:position pos:line="203" pos:column="49"/></decl_stmt>

		<while pos:line="205" pos:column="17">while <condition pos:line="205" pos:column="23">(<expr><operator pos:line="205" pos:column="24">*<pos:position pos:line="205" pos:column="25"/></operator><name pos:line="205" pos:column="25">ref<pos:position pos:line="205" pos:column="28"/></name> <operator pos:line="205" pos:column="29">==<pos:position pos:line="205" pos:column="31"/></operator> <literal type="char" pos:line="205" pos:column="32">'\n'<pos:position pos:line="205" pos:column="36"/></literal></expr>)<pos:position pos:line="205" pos:column="37"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="206" pos:column="25">ref<pos:position pos:line="206" pos:column="28"/></name><operator pos:line="206" pos:column="28">++<pos:position pos:line="206" pos:column="30"/></operator></expr>;<pos:position pos:line="206" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="207" pos:column="17">if <condition pos:line="207" pos:column="20">(<expr><operator pos:line="207" pos:column="21">!<pos:position pos:line="207" pos:column="22"/></operator><operator pos:line="207" pos:column="22">*<pos:position pos:line="207" pos:column="23"/></operator><name pos:line="207" pos:column="23">ref<pos:position pos:line="207" pos:column="26"/></name></expr>)<pos:position pos:line="207" pos:column="27"/></condition><then pos:line="207" pos:column="27">
			<block type="pseudo"><break pos:line="208" pos:column="25">break;<pos:position pos:line="208" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="209" pos:column="17">next<pos:position pos:line="209" pos:column="21"/></name> <operator pos:line="209" pos:column="22">=<pos:position pos:line="209" pos:column="23"/></operator> <call><name pos:line="209" pos:column="24">strchr<pos:position pos:line="209" pos:column="30"/></name><argument_list pos:line="209" pos:column="30">(<argument><expr><name pos:line="209" pos:column="31">ref<pos:position pos:line="209" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="209" pos:column="36">'\n'<pos:position pos:line="209" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="42"/></expr_stmt>

		<expr_stmt><expr><name pos:line="211" pos:column="17">single_force<pos:position pos:line="211" pos:column="29"/></name> <operator pos:line="211" pos:column="30">=<pos:position pos:line="211" pos:column="31"/></operator> <name pos:line="211" pos:column="32">not_for_merge<pos:position pos:line="211" pos:column="45"/></name> <operator pos:line="211" pos:column="46">=<pos:position pos:line="211" pos:column="47"/></operator> <literal type="number" pos:line="211" pos:column="48">0<pos:position pos:line="211" pos:column="49"/></literal></expr>;<pos:position pos:line="211" pos:column="50"/></expr_stmt>
		<if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><operator pos:line="212" pos:column="21">*<pos:position pos:line="212" pos:column="22"/></operator><name pos:line="212" pos:column="22">ref<pos:position pos:line="212" pos:column="25"/></name> <operator pos:line="212" pos:column="26">==<pos:position pos:line="212" pos:column="28"/></operator> <literal type="char" pos:line="212" pos:column="29">'+'<pos:position pos:line="212" pos:column="32"/></literal></expr>)<pos:position pos:line="212" pos:column="33"/></condition><then pos:line="212" pos:column="33"> <block pos:line="212" pos:column="34">{
			<expr_stmt><expr><name pos:line="213" pos:column="25">single_force<pos:position pos:line="213" pos:column="37"/></name> <operator pos:line="213" pos:column="38">=<pos:position pos:line="213" pos:column="39"/></operator> <literal type="number" pos:line="213" pos:column="40">1<pos:position pos:line="213" pos:column="41"/></literal></expr>;<pos:position pos:line="213" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="214" pos:column="25">ref<pos:position pos:line="214" pos:column="28"/></name><operator pos:line="214" pos:column="28">++<pos:position pos:line="214" pos:column="30"/></operator></expr>;<pos:position pos:line="214" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="215" pos:column="18"/></block></then></if>
		<if pos:line="216" pos:column="17">if <condition pos:line="216" pos:column="20">(<expr><operator pos:line="216" pos:column="21">*<pos:position pos:line="216" pos:column="22"/></operator><name pos:line="216" pos:column="22">ref<pos:position pos:line="216" pos:column="25"/></name> <operator pos:line="216" pos:column="26">==<pos:position pos:line="216" pos:column="28"/></operator> <literal type="char" pos:line="216" pos:column="29">'.'<pos:position pos:line="216" pos:column="32"/></literal></expr>)<pos:position pos:line="216" pos:column="33"/></condition><then pos:line="216" pos:column="33"> <block pos:line="216" pos:column="34">{
			<expr_stmt><expr><name pos:line="217" pos:column="25">not_for_merge<pos:position pos:line="217" pos:column="38"/></name> <operator pos:line="217" pos:column="39">=<pos:position pos:line="217" pos:column="40"/></operator> <literal type="number" pos:line="217" pos:column="41">1<pos:position pos:line="217" pos:column="42"/></literal></expr>;<pos:position pos:line="217" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="218" pos:column="25">ref<pos:position pos:line="218" pos:column="28"/></name><operator pos:line="218" pos:column="28">++<pos:position pos:line="218" pos:column="30"/></operator></expr>;<pos:position pos:line="218" pos:column="31"/></expr_stmt>
			<if pos:line="219" pos:column="25">if <condition pos:line="219" pos:column="28">(<expr><operator pos:line="219" pos:column="29">*<pos:position pos:line="219" pos:column="30"/></operator><name pos:line="219" pos:column="30">ref<pos:position pos:line="219" pos:column="33"/></name> <operator pos:line="219" pos:column="34">==<pos:position pos:line="219" pos:column="36"/></operator> <literal type="char" pos:line="219" pos:column="37">'+'<pos:position pos:line="219" pos:column="40"/></literal></expr>)<pos:position pos:line="219" pos:column="41"/></condition><then pos:line="219" pos:column="41"> <block pos:line="219" pos:column="42">{
				<expr_stmt><expr><name pos:line="220" pos:column="33">single_force<pos:position pos:line="220" pos:column="45"/></name> <operator pos:line="220" pos:column="46">=<pos:position pos:line="220" pos:column="47"/></operator> <literal type="number" pos:line="220" pos:column="48">1<pos:position pos:line="220" pos:column="49"/></literal></expr>;<pos:position pos:line="220" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="221" pos:column="33">ref<pos:position pos:line="221" pos:column="36"/></name><operator pos:line="221" pos:column="36">++<pos:position pos:line="221" pos:column="38"/></operator></expr>;<pos:position pos:line="221" pos:column="39"/></expr_stmt>
			}<pos:position pos:line="222" pos:column="26"/></block></then></if>
		}<pos:position pos:line="223" pos:column="18"/></block></then></if>
		<if pos:line="224" pos:column="17">if <condition pos:line="224" pos:column="20">(<expr><operator pos:line="224" pos:column="21">!<pos:position pos:line="224" pos:column="22"/></operator><call><name pos:line="224" pos:column="22">strncmp<pos:position pos:line="224" pos:column="29"/></name><argument_list pos:line="224" pos:column="29">(<argument><expr><name pos:line="224" pos:column="30">remote_name<pos:position pos:line="224" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="43">ref<pos:position pos:line="224" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="48">len<pos:position pos:line="224" pos:column="51"/></name></expr></argument>)<pos:position pos:line="224" pos:column="52"/></argument_list></call> <operator pos:line="224" pos:column="53">&amp;&amp;<pos:position pos:line="224" pos:column="63"/></operator> <name><name pos:line="224" pos:column="56">ref<pos:position pos:line="224" pos:column="59"/></name><index pos:line="224" pos:column="59">[<expr><name pos:line="224" pos:column="60">len<pos:position pos:line="224" pos:column="63"/></name></expr>]<pos:position pos:line="224" pos:column="64"/></index></name> <operator pos:line="224" pos:column="65">==<pos:position pos:line="224" pos:column="67"/></operator> <literal type="char" pos:line="224" pos:column="68">':'<pos:position pos:line="224" pos:column="71"/></literal></expr>)<pos:position pos:line="224" pos:column="72"/></condition><then pos:line="224" pos:column="72"> <block pos:line="224" pos:column="73">{
			<decl_stmt><decl><type><specifier pos:line="225" pos:column="25">const<pos:position pos:line="225" pos:column="30"/></specifier> <name pos:line="225" pos:column="31">char<pos:position pos:line="225" pos:column="35"/></name> <modifier pos:line="225" pos:column="36">*<pos:position pos:line="225" pos:column="37"/></modifier></type><name pos:line="225" pos:column="37">local_part<pos:position pos:line="225" pos:column="47"/></name> <init pos:line="225" pos:column="48">= <expr><name pos:line="225" pos:column="50">ref<pos:position pos:line="225" pos:column="53"/></name> <operator pos:line="225" pos:column="54">+<pos:position pos:line="225" pos:column="55"/></operator> <name pos:line="225" pos:column="56">len<pos:position pos:line="225" pos:column="59"/></name> <operator pos:line="225" pos:column="60">+<pos:position pos:line="225" pos:column="61"/></operator> <literal type="number" pos:line="225" pos:column="62">1<pos:position pos:line="225" pos:column="63"/></literal></expr></init></decl>;<pos:position pos:line="225" pos:column="64"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="226" pos:column="25">int<pos:position pos:line="226" pos:column="28"/></name></type> <name pos:line="226" pos:column="29">retlen<pos:position pos:line="226" pos:column="35"/></name></decl>;<pos:position pos:line="226" pos:column="36"/></decl_stmt>

			<if pos:line="228" pos:column="25">if <condition pos:line="228" pos:column="28">(<expr><operator pos:line="228" pos:column="29">!<pos:position pos:line="228" pos:column="30"/></operator><name pos:line="228" pos:column="30">next<pos:position pos:line="228" pos:column="34"/></name></expr>)<pos:position pos:line="228" pos:column="35"/></condition><then pos:line="228" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><name pos:line="229" pos:column="33">retlen<pos:position pos:line="229" pos:column="39"/></name> <operator pos:line="229" pos:column="40">=<pos:position pos:line="229" pos:column="41"/></operator> <call><name pos:line="229" pos:column="42">strlen<pos:position pos:line="229" pos:column="48"/></name><argument_list pos:line="229" pos:column="48">(<argument><expr><name pos:line="229" pos:column="49">local_part<pos:position pos:line="229" pos:column="59"/></name></expr></argument>)<pos:position pos:line="229" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="61"/></expr_stmt></block></then>
			<else pos:line="230" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="231" pos:column="33">retlen<pos:position pos:line="231" pos:column="39"/></name> <operator pos:line="231" pos:column="40">=<pos:position pos:line="231" pos:column="41"/></operator> <name pos:line="231" pos:column="42">next<pos:position pos:line="231" pos:column="46"/></name> <operator pos:line="231" pos:column="47">-<pos:position pos:line="231" pos:column="48"/></operator> <name pos:line="231" pos:column="49">local_part<pos:position pos:line="231" pos:column="59"/></name></expr>;<pos:position pos:line="231" pos:column="60"/></expr_stmt></block></else></if>
			<expr_stmt><expr><operator pos:line="232" pos:column="25">*<pos:position pos:line="232" pos:column="26"/></operator><name pos:line="232" pos:column="26">force_p<pos:position pos:line="232" pos:column="33"/></name> <operator pos:line="232" pos:column="34">=<pos:position pos:line="232" pos:column="35"/></operator> <name pos:line="232" pos:column="36">single_force<pos:position pos:line="232" pos:column="48"/></name></expr>;<pos:position pos:line="232" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="233" pos:column="25">*<pos:position pos:line="233" pos:column="26"/></operator><name pos:line="233" pos:column="26">not_for_merge_p<pos:position pos:line="233" pos:column="41"/></name> <operator pos:line="233" pos:column="42">=<pos:position pos:line="233" pos:column="43"/></operator> <name pos:line="233" pos:column="44">not_for_merge<pos:position pos:line="233" pos:column="57"/></name></expr>;<pos:position pos:line="233" pos:column="58"/></expr_stmt>
			<return pos:line="234" pos:column="25">return <expr><call><name pos:line="234" pos:column="32">xmemdupz<pos:position pos:line="234" pos:column="40"/></name><argument_list pos:line="234" pos:column="40">(<argument><expr><name pos:line="234" pos:column="41">local_part<pos:position pos:line="234" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="53">retlen<pos:position pos:line="234" pos:column="59"/></name></expr></argument>)<pos:position pos:line="234" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="61"/></return>
		}<pos:position pos:line="235" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="236" pos:column="17">ref<pos:position pos:line="236" pos:column="20"/></name> <operator pos:line="236" pos:column="21">=<pos:position pos:line="236" pos:column="22"/></operator> <name pos:line="236" pos:column="23">next<pos:position pos:line="236" pos:column="27"/></name></expr>;<pos:position pos:line="236" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="237" pos:column="10"/></block></while>
	<return pos:line="238" pos:column="9">return <expr><name pos:line="238" pos:column="16">NULL<pos:position pos:line="238" pos:column="20"/></name></expr>;<pos:position pos:line="238" pos:column="21"/></return>
}<pos:position pos:line="239" pos:column="2"/></block></function>

<function><specifier pos:line="241" pos:column="1">static<pos:position pos:line="241" pos:column="7"/></specifier> <type><name pos:line="241" pos:column="8">int<pos:position pos:line="241" pos:column="11"/></name></type> <name pos:line="241" pos:column="12">fetch_native_store<pos:position pos:line="241" pos:column="30"/></name><parameter_list pos:line="241" pos:column="30">(<parameter><decl><type><name pos:line="241" pos:column="31">FILE<pos:position pos:line="241" pos:column="35"/></name> <modifier pos:line="241" pos:column="36">*<pos:position pos:line="241" pos:column="37"/></modifier></type><name pos:line="241" pos:column="37">fp<pos:position pos:line="241" pos:column="39"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="242" pos:column="31">const<pos:position pos:line="242" pos:column="36"/></specifier> <name pos:line="242" pos:column="37">char<pos:position pos:line="242" pos:column="41"/></name> <modifier pos:line="242" pos:column="42">*<pos:position pos:line="242" pos:column="43"/></modifier></type><name pos:line="242" pos:column="43">remote<pos:position pos:line="242" pos:column="49"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="243" pos:column="31">const<pos:position pos:line="243" pos:column="36"/></specifier> <name pos:line="243" pos:column="37">char<pos:position pos:line="243" pos:column="41"/></name> <modifier pos:line="243" pos:column="42">*<pos:position pos:line="243" pos:column="43"/></modifier></type><name pos:line="243" pos:column="43">remote_nick<pos:position pos:line="243" pos:column="54"/></name></decl></parameter>,
			      <parameter><decl><type><specifier pos:line="244" pos:column="31">const<pos:position pos:line="244" pos:column="36"/></specifier> <name pos:line="244" pos:column="37">char<pos:position pos:line="244" pos:column="41"/></name> <modifier pos:line="244" pos:column="42">*<pos:position pos:line="244" pos:column="43"/></modifier></type><name pos:line="244" pos:column="43">refs<pos:position pos:line="244" pos:column="47"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="245" pos:column="31">int<pos:position pos:line="245" pos:column="34"/></name></type> <name pos:line="245" pos:column="35">verbose<pos:position pos:line="245" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="245" pos:column="44">int<pos:position pos:line="245" pos:column="47"/></name></type> <name pos:line="245" pos:column="48">force<pos:position pos:line="245" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="245" pos:column="54"/></parameter_list>
<block pos:line="246" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="247" pos:column="9">char<pos:position pos:line="247" pos:column="13"/></name></type> <name><name pos:line="247" pos:column="14">buffer<pos:position pos:line="247" pos:column="20"/></name><index pos:line="247" pos:column="20">[<expr><literal type="number" pos:line="247" pos:column="21">1024<pos:position pos:line="247" pos:column="25"/></literal></expr>]<pos:position pos:line="247" pos:column="26"/></index></name></decl>;<pos:position pos:line="247" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="248" pos:column="9">int<pos:position pos:line="248" pos:column="12"/></name></type> <name pos:line="248" pos:column="13">err<pos:position pos:line="248" pos:column="16"/></name> <init pos:line="248" pos:column="17">= <expr><literal type="number" pos:line="248" pos:column="19">0<pos:position pos:line="248" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="248" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="250" pos:column="9">sigchain_push_common<pos:position pos:line="250" pos:column="29"/></name><argument_list pos:line="250" pos:column="29">(<argument><expr><name pos:line="250" pos:column="30">remove_keep_on_signal<pos:position pos:line="250" pos:column="51"/></name></expr></argument>)<pos:position pos:line="250" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="251" pos:column="9">atexit<pos:position pos:line="251" pos:column="15"/></name><argument_list pos:line="251" pos:column="15">(<argument><expr><name pos:line="251" pos:column="16">remove_keep<pos:position pos:line="251" pos:column="27"/></name></expr></argument>)<pos:position pos:line="251" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="29"/></expr_stmt>

	<while pos:line="253" pos:column="9">while <condition pos:line="253" pos:column="15">(<expr><call><name pos:line="253" pos:column="16">fgets<pos:position pos:line="253" pos:column="21"/></name><argument_list pos:line="253" pos:column="21">(<argument><expr><name pos:line="253" pos:column="22">buffer<pos:position pos:line="253" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="253" pos:column="30">sizeof<argument_list pos:line="253" pos:column="36">(<argument><expr><name pos:line="253" pos:column="37">buffer<pos:position pos:line="253" pos:column="43"/></name></expr></argument>)<pos:position pos:line="253" pos:column="44"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="253" pos:column="46">stdin<pos:position pos:line="253" pos:column="51"/></name></expr></argument>)<pos:position pos:line="253" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="253" pos:column="53"/></condition> <block pos:line="253" pos:column="54">{
		<decl_stmt><decl><type><name pos:line="254" pos:column="17">int<pos:position pos:line="254" pos:column="20"/></name></type> <name pos:line="254" pos:column="21">len<pos:position pos:line="254" pos:column="24"/></name></decl>;<pos:position pos:line="254" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="255" pos:column="17">char<pos:position pos:line="255" pos:column="21"/></name> <modifier pos:line="255" pos:column="22">*<pos:position pos:line="255" pos:column="23"/></modifier></type><name pos:line="255" pos:column="23">cp<pos:position pos:line="255" pos:column="25"/></name></decl>;<pos:position pos:line="255" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="256" pos:column="17">char<pos:position pos:line="256" pos:column="21"/></name> <modifier pos:line="256" pos:column="22">*<pos:position pos:line="256" pos:column="23"/></modifier></type><name pos:line="256" pos:column="23">local_name<pos:position pos:line="256" pos:column="33"/></name></decl>;<pos:position pos:line="256" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="257" pos:column="17">int<pos:position pos:line="257" pos:column="20"/></name></type> <name pos:line="257" pos:column="21">single_force<pos:position pos:line="257" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="257" pos:column="35">not_for_merge<pos:position pos:line="257" pos:column="48"/></name></decl>;<pos:position pos:line="257" pos:column="49"/></decl_stmt>

		<for pos:line="259" pos:column="17">for <control pos:line="259" pos:column="21">(<init><expr><name pos:line="259" pos:column="22">cp<pos:position pos:line="259" pos:column="24"/></name> <operator pos:line="259" pos:column="25">=<pos:position pos:line="259" pos:column="26"/></operator> <name pos:line="259" pos:column="27">buffer<pos:position pos:line="259" pos:column="33"/></name></expr>;<pos:position pos:line="259" pos:column="34"/></init> <condition><expr><operator pos:line="259" pos:column="35">*<pos:position pos:line="259" pos:column="36"/></operator><name pos:line="259" pos:column="36">cp<pos:position pos:line="259" pos:column="38"/></name> <operator pos:line="259" pos:column="39">&amp;&amp;<pos:position pos:line="259" pos:column="49"/></operator> <operator pos:line="259" pos:column="42">!<pos:position pos:line="259" pos:column="43"/></operator><call><name pos:line="259" pos:column="43">isspace<pos:position pos:line="259" pos:column="50"/></name><argument_list pos:line="259" pos:column="50">(<argument><expr><operator pos:line="259" pos:column="51">*<pos:position pos:line="259" pos:column="52"/></operator><name pos:line="259" pos:column="52">cp<pos:position pos:line="259" pos:column="54"/></name></expr></argument>)<pos:position pos:line="259" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="56"/></condition> <incr><expr><name pos:line="259" pos:column="57">cp<pos:position pos:line="259" pos:column="59"/></name><operator pos:line="259" pos:column="59">++<pos:position pos:line="259" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="259" pos:column="62"/></control>
			<block type="pseudo"><empty_stmt pos:line="260" pos:column="25">;<pos:position pos:line="260" pos:column="26"/></empty_stmt></block></for>
		<if pos:line="261" pos:column="17">if <condition pos:line="261" pos:column="20">(<expr><operator pos:line="261" pos:column="21">*<pos:position pos:line="261" pos:column="22"/></operator><name pos:line="261" pos:column="22">cp<pos:position pos:line="261" pos:column="24"/></name></expr>)<pos:position pos:line="261" pos:column="25"/></condition><then pos:line="261" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="262" pos:column="25">*<pos:position pos:line="262" pos:column="26"/></operator><name pos:line="262" pos:column="26">cp<pos:position pos:line="262" pos:column="28"/></name><operator pos:line="262" pos:column="28">++<pos:position pos:line="262" pos:column="30"/></operator> <operator pos:line="262" pos:column="31">=<pos:position pos:line="262" pos:column="32"/></operator> <literal type="number" pos:line="262" pos:column="33">0<pos:position pos:line="262" pos:column="34"/></literal></expr>;<pos:position pos:line="262" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="263" pos:column="17">len<pos:position pos:line="263" pos:column="20"/></name> <operator pos:line="263" pos:column="21">=<pos:position pos:line="263" pos:column="22"/></operator> <call><name pos:line="263" pos:column="23">strlen<pos:position pos:line="263" pos:column="29"/></name><argument_list pos:line="263" pos:column="29">(<argument><expr><name pos:line="263" pos:column="30">cp<pos:position pos:line="263" pos:column="32"/></name></expr></argument>)<pos:position pos:line="263" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="34"/></expr_stmt>
		<if pos:line="264" pos:column="17">if <condition pos:line="264" pos:column="20">(<expr><name pos:line="264" pos:column="21">len<pos:position pos:line="264" pos:column="24"/></name> <operator pos:line="264" pos:column="25">&amp;&amp;<pos:position pos:line="264" pos:column="35"/></operator> <name><name pos:line="264" pos:column="28">cp<pos:position pos:line="264" pos:column="30"/></name><index pos:line="264" pos:column="30">[<expr><name pos:line="264" pos:column="31">len<pos:position pos:line="264" pos:column="34"/></name><operator pos:line="264" pos:column="34">-<pos:position pos:line="264" pos:column="35"/></operator><literal type="number" pos:line="264" pos:column="35">1<pos:position pos:line="264" pos:column="36"/></literal></expr>]<pos:position pos:line="264" pos:column="37"/></index></name> <operator pos:line="264" pos:column="38">==<pos:position pos:line="264" pos:column="40"/></operator> <literal type="char" pos:line="264" pos:column="41">'\n'<pos:position pos:line="264" pos:column="45"/></literal></expr>)<pos:position pos:line="264" pos:column="46"/></condition><then pos:line="264" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="265" pos:column="25">cp<pos:position pos:line="265" pos:column="27"/></name><index pos:line="265" pos:column="27">[<expr><operator pos:line="265" pos:column="28">--<pos:position pos:line="265" pos:column="30"/></operator><name pos:line="265" pos:column="30">len<pos:position pos:line="265" pos:column="33"/></name></expr>]<pos:position pos:line="265" pos:column="34"/></index></name> <operator pos:line="265" pos:column="35">=<pos:position pos:line="265" pos:column="36"/></operator> <literal type="number" pos:line="265" pos:column="37">0<pos:position pos:line="265" pos:column="38"/></literal></expr>;<pos:position pos:line="265" pos:column="39"/></expr_stmt></block></then></if>
		<if pos:line="266" pos:column="17">if <condition pos:line="266" pos:column="20">(<expr><operator pos:line="266" pos:column="21">!<pos:position pos:line="266" pos:column="22"/></operator><call><name pos:line="266" pos:column="22">strcmp<pos:position pos:line="266" pos:column="28"/></name><argument_list pos:line="266" pos:column="28">(<argument><expr><name pos:line="266" pos:column="29">buffer<pos:position pos:line="266" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="266" pos:column="37">"failed"<pos:position pos:line="266" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="266" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="266" pos:column="47"/></condition><then pos:line="266" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="267" pos:column="25">die<pos:position pos:line="267" pos:column="28"/></name><argument_list pos:line="267" pos:column="28">(<argument><expr><literal type="string" pos:line="267" pos:column="29">"Fetch failure: %s"<pos:position pos:line="267" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="267" pos:column="50">remote<pos:position pos:line="267" pos:column="56"/></name></expr></argument>)<pos:position pos:line="267" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="268" pos:column="17">if <condition pos:line="268" pos:column="20">(<expr><operator pos:line="268" pos:column="21">!<pos:position pos:line="268" pos:column="22"/></operator><call><name pos:line="268" pos:column="22">strcmp<pos:position pos:line="268" pos:column="28"/></name><argument_list pos:line="268" pos:column="28">(<argument><expr><name pos:line="268" pos:column="29">buffer<pos:position pos:line="268" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="37">"pack"<pos:position pos:line="268" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="268" pos:column="45"/></condition><then pos:line="268" pos:column="45">
			<block type="pseudo"><continue pos:line="269" pos:column="25">continue;<pos:position pos:line="269" pos:column="34"/></continue></block></then></if>
		<if pos:line="270" pos:column="17">if <condition pos:line="270" pos:column="20">(<expr><operator pos:line="270" pos:column="21">!<pos:position pos:line="270" pos:column="22"/></operator><call><name pos:line="270" pos:column="22">strcmp<pos:position pos:line="270" pos:column="28"/></name><argument_list pos:line="270" pos:column="28">(<argument><expr><name pos:line="270" pos:column="29">buffer<pos:position pos:line="270" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="37">"keep"<pos:position pos:line="270" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="270" pos:column="45"/></condition><then pos:line="270" pos:column="45"> <block pos:line="270" pos:column="46">{
			<decl_stmt><decl><type><name pos:line="271" pos:column="25">char<pos:position pos:line="271" pos:column="29"/></name> <modifier pos:line="271" pos:column="30">*<pos:position pos:line="271" pos:column="31"/></modifier></type><name pos:line="271" pos:column="31">od<pos:position pos:line="271" pos:column="33"/></name> <init pos:line="271" pos:column="34">= <expr><call><name pos:line="271" pos:column="36">get_object_directory<pos:position pos:line="271" pos:column="56"/></name><argument_list pos:line="271" pos:column="56">()<pos:position pos:line="271" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="271" pos:column="59"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="272" pos:column="25">int<pos:position pos:line="272" pos:column="28"/></name></type> <name pos:line="272" pos:column="29">len<pos:position pos:line="272" pos:column="32"/></name> <init pos:line="272" pos:column="33">= <expr><call><name pos:line="272" pos:column="35">strlen<pos:position pos:line="272" pos:column="41"/></name><argument_list pos:line="272" pos:column="41">(<argument><expr><name pos:line="272" pos:column="42">od<pos:position pos:line="272" pos:column="44"/></name></expr></argument>)<pos:position pos:line="272" pos:column="45"/></argument_list></call> <operator pos:line="272" pos:column="46">+<pos:position pos:line="272" pos:column="47"/></operator> <call><name pos:line="272" pos:column="48">strlen<pos:position pos:line="272" pos:column="54"/></name><argument_list pos:line="272" pos:column="54">(<argument><expr><name pos:line="272" pos:column="55">cp<pos:position pos:line="272" pos:column="57"/></name></expr></argument>)<pos:position pos:line="272" pos:column="58"/></argument_list></call> <operator pos:line="272" pos:column="59">+<pos:position pos:line="272" pos:column="60"/></operator> <literal type="number" pos:line="272" pos:column="61">50<pos:position pos:line="272" pos:column="63"/></literal></expr></init></decl>;<pos:position pos:line="272" pos:column="64"/></decl_stmt>
			<expr_stmt><expr><name pos:line="273" pos:column="25">keep<pos:position pos:line="273" pos:column="29"/></name> <operator pos:line="273" pos:column="30">=<pos:position pos:line="273" pos:column="31"/></operator> <call><name pos:line="273" pos:column="32">xmalloc<pos:position pos:line="273" pos:column="39"/></name><argument_list pos:line="273" pos:column="39">(<argument><expr><name pos:line="273" pos:column="40">len<pos:position pos:line="273" pos:column="43"/></name></expr></argument>)<pos:position pos:line="273" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="274" pos:column="25">sprintf<pos:position pos:line="274" pos:column="32"/></name><argument_list pos:line="274" pos:column="32">(<argument><expr><name pos:line="274" pos:column="33">keep<pos:position pos:line="274" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="39">"%s/pack/pack-%s.keep"<pos:position pos:line="274" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="274" pos:column="63">od<pos:position pos:line="274" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="67">cp<pos:position pos:line="274" pos:column="69"/></name></expr></argument>)<pos:position pos:line="274" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="71"/></expr_stmt>
			<continue pos:line="275" pos:column="25">continue;<pos:position pos:line="275" pos:column="34"/></continue>
		}<pos:position pos:line="276" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="278" pos:column="17">local_name<pos:position pos:line="278" pos:column="27"/></name> <operator pos:line="278" pos:column="28">=<pos:position pos:line="278" pos:column="29"/></operator> <call><name pos:line="278" pos:column="30">find_local_name<pos:position pos:line="278" pos:column="45"/></name><argument_list pos:line="278" pos:column="45">(<argument><expr><name pos:line="278" pos:column="46">cp<pos:position pos:line="278" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="50">refs<pos:position pos:line="278" pos:column="54"/></name></expr></argument>,
					     <argument><expr><operator pos:line="279" pos:column="46">&amp;<pos:position pos:line="279" pos:column="51"/></operator><name pos:line="279" pos:column="47">single_force<pos:position pos:line="279" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="279" pos:column="61">&amp;<pos:position pos:line="279" pos:column="66"/></operator><name pos:line="279" pos:column="62">not_for_merge<pos:position pos:line="279" pos:column="75"/></name></expr></argument>)<pos:position pos:line="279" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="77"/></expr_stmt>
		<if pos:line="280" pos:column="17">if <condition pos:line="280" pos:column="20">(<expr><operator pos:line="280" pos:column="21">!<pos:position pos:line="280" pos:column="22"/></operator><name pos:line="280" pos:column="22">local_name<pos:position pos:line="280" pos:column="32"/></name></expr>)<pos:position pos:line="280" pos:column="33"/></condition><then pos:line="280" pos:column="33">
			<block type="pseudo"><continue pos:line="281" pos:column="25">continue;<pos:position pos:line="281" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="282" pos:column="17">err<pos:position pos:line="282" pos:column="20"/></name> <operator pos:line="282" pos:column="21">|=<pos:position pos:line="282" pos:column="23"/></operator> <call><name pos:line="282" pos:column="24">append_fetch_head<pos:position pos:line="282" pos:column="41"/></name><argument_list pos:line="282" pos:column="41">(<argument><expr><name pos:line="282" pos:column="42">fp<pos:position pos:line="282" pos:column="44"/></name></expr></argument>,
					 <argument><expr><name pos:line="283" pos:column="42">buffer<pos:position pos:line="283" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="50">remote<pos:position pos:line="283" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="58">cp<pos:position pos:line="283" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="62">remote_nick<pos:position pos:line="283" pos:column="73"/></name></expr></argument>,
					 <argument><expr><name pos:line="284" pos:column="42">local_name<pos:position pos:line="284" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="54">not_for_merge<pos:position pos:line="284" pos:column="67"/></name></expr></argument>,
					 <argument><expr><name pos:line="285" pos:column="42">verbose<pos:position pos:line="285" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="51">force<pos:position pos:line="285" pos:column="56"/></name> <operator pos:line="285" pos:column="57">||<pos:position pos:line="285" pos:column="59"/></operator> <name pos:line="285" pos:column="60">single_force<pos:position pos:line="285" pos:column="72"/></name></expr></argument>)<pos:position pos:line="285" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="286" pos:column="10"/></block></while>
	<return pos:line="287" pos:column="9">return <expr><name pos:line="287" pos:column="16">err<pos:position pos:line="287" pos:column="19"/></name></expr>;<pos:position pos:line="287" pos:column="20"/></return>
}<pos:position pos:line="288" pos:column="2"/></block></function>

<function><specifier pos:line="290" pos:column="1">static<pos:position pos:line="290" pos:column="7"/></specifier> <type><name pos:line="290" pos:column="8">int<pos:position pos:line="290" pos:column="11"/></name></type> <name pos:line="290" pos:column="12">parse_reflist<pos:position pos:line="290" pos:column="25"/></name><parameter_list pos:line="290" pos:column="25">(<parameter><decl><type><specifier pos:line="290" pos:column="26">const<pos:position pos:line="290" pos:column="31"/></specifier> <name pos:line="290" pos:column="32">char<pos:position pos:line="290" pos:column="36"/></name> <modifier pos:line="290" pos:column="37">*<pos:position pos:line="290" pos:column="38"/></modifier></type><name pos:line="290" pos:column="38">reflist<pos:position pos:line="290" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="290" pos:column="46"/></parameter_list>
<block pos:line="291" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="292" pos:column="9">const<pos:position pos:line="292" pos:column="14"/></specifier> <name pos:line="292" pos:column="15">char<pos:position pos:line="292" pos:column="19"/></name> <modifier pos:line="292" pos:column="20">*<pos:position pos:line="292" pos:column="21"/></modifier></type><name pos:line="292" pos:column="21">ref<pos:position pos:line="292" pos:column="24"/></name></decl>;<pos:position pos:line="292" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="294" pos:column="9">printf<pos:position pos:line="294" pos:column="15"/></name><argument_list pos:line="294" pos:column="15">(<argument><expr><literal type="string" pos:line="294" pos:column="16">"refs='"<pos:position pos:line="294" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="26"/></expr_stmt>
	<for pos:line="295" pos:column="9">for <control pos:line="295" pos:column="13">(<init><expr><name pos:line="295" pos:column="14">ref<pos:position pos:line="295" pos:column="17"/></name> <operator pos:line="295" pos:column="18">=<pos:position pos:line="295" pos:column="19"/></operator> <name pos:line="295" pos:column="20">reflist<pos:position pos:line="295" pos:column="27"/></name></expr>;<pos:position pos:line="295" pos:column="28"/></init> <condition><expr><name pos:line="295" pos:column="29">ref<pos:position pos:line="295" pos:column="32"/></name></expr>;<pos:position pos:line="295" pos:column="33"/></condition> <incr/>)<pos:position pos:line="295" pos:column="35"/></control> <block pos:line="295" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="296" pos:column="17">const<pos:position pos:line="296" pos:column="22"/></specifier> <name pos:line="296" pos:column="23">char<pos:position pos:line="296" pos:column="27"/></name> <modifier pos:line="296" pos:column="28">*<pos:position pos:line="296" pos:column="29"/></modifier></type><name pos:line="296" pos:column="29">next<pos:position pos:line="296" pos:column="33"/></name></decl>;<pos:position pos:line="296" pos:column="34"/></decl_stmt>
		<while pos:line="297" pos:column="17">while <condition pos:line="297" pos:column="23">(<expr><operator pos:line="297" pos:column="24">*<pos:position pos:line="297" pos:column="25"/></operator><name pos:line="297" pos:column="25">ref<pos:position pos:line="297" pos:column="28"/></name> <operator pos:line="297" pos:column="29">&amp;&amp;<pos:position pos:line="297" pos:column="39"/></operator> <call><name pos:line="297" pos:column="32">isspace<pos:position pos:line="297" pos:column="39"/></name><argument_list pos:line="297" pos:column="39">(<argument><expr><operator pos:line="297" pos:column="40">*<pos:position pos:line="297" pos:column="41"/></operator><name pos:line="297" pos:column="41">ref<pos:position pos:line="297" pos:column="44"/></name></expr></argument>)<pos:position pos:line="297" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="297" pos:column="46"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="298" pos:column="25">ref<pos:position pos:line="298" pos:column="28"/></name><operator pos:line="298" pos:column="28">++<pos:position pos:line="298" pos:column="30"/></operator></expr>;<pos:position pos:line="298" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="299" pos:column="17">if <condition pos:line="299" pos:column="20">(<expr><operator pos:line="299" pos:column="21">!<pos:position pos:line="299" pos:column="22"/></operator><operator pos:line="299" pos:column="22">*<pos:position pos:line="299" pos:column="23"/></operator><name pos:line="299" pos:column="23">ref<pos:position pos:line="299" pos:column="26"/></name></expr>)<pos:position pos:line="299" pos:column="27"/></condition><then pos:line="299" pos:column="27">
			<block type="pseudo"><break pos:line="300" pos:column="25">break;<pos:position pos:line="300" pos:column="31"/></break></block></then></if>
		<for pos:line="301" pos:column="17">for <control pos:line="301" pos:column="21">(<init><expr><name pos:line="301" pos:column="22">next<pos:position pos:line="301" pos:column="26"/></name> <operator pos:line="301" pos:column="27">=<pos:position pos:line="301" pos:column="28"/></operator> <name pos:line="301" pos:column="29">ref<pos:position pos:line="301" pos:column="32"/></name></expr>;<pos:position pos:line="301" pos:column="33"/></init> <condition><expr><operator pos:line="301" pos:column="34">*<pos:position pos:line="301" pos:column="35"/></operator><name pos:line="301" pos:column="35">next<pos:position pos:line="301" pos:column="39"/></name> <operator pos:line="301" pos:column="40">&amp;&amp;<pos:position pos:line="301" pos:column="50"/></operator> <operator pos:line="301" pos:column="43">!<pos:position pos:line="301" pos:column="44"/></operator><call><name pos:line="301" pos:column="44">isspace<pos:position pos:line="301" pos:column="51"/></name><argument_list pos:line="301" pos:column="51">(<argument><expr><operator pos:line="301" pos:column="52">*<pos:position pos:line="301" pos:column="53"/></operator><name pos:line="301" pos:column="53">next<pos:position pos:line="301" pos:column="57"/></name></expr></argument>)<pos:position pos:line="301" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="59"/></condition> <incr><expr><name pos:line="301" pos:column="60">next<pos:position pos:line="301" pos:column="64"/></name><operator pos:line="301" pos:column="64">++<pos:position pos:line="301" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="301" pos:column="67"/></control>
			<block type="pseudo"><empty_stmt pos:line="302" pos:column="25">;<pos:position pos:line="302" pos:column="26"/></empty_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="303" pos:column="17">printf<pos:position pos:line="303" pos:column="23"/></name><argument_list pos:line="303" pos:column="23">(<argument><expr><literal type="string" pos:line="303" pos:column="24">"\n%.*s"<pos:position pos:line="303" pos:column="32"/></literal></expr></argument>, <argument><expr><call pos:line="303" pos:column="34">(<name pos:line="303" pos:column="35">int<pos:position pos:line="303" pos:column="38"/></name>)<argument_list pos:line="303" pos:column="39">(<argument><expr><name pos:line="303" pos:column="40">next<pos:position pos:line="303" pos:column="44"/></name> <operator pos:line="303" pos:column="45">-<pos:position pos:line="303" pos:column="46"/></operator> <name pos:line="303" pos:column="47">ref<pos:position pos:line="303" pos:column="50"/></name></expr></argument>)<pos:position pos:line="303" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="303" pos:column="53">ref<pos:position pos:line="303" pos:column="56"/></name></expr></argument>)<pos:position pos:line="303" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="304" pos:column="17">ref<pos:position pos:line="304" pos:column="20"/></name> <operator pos:line="304" pos:column="21">=<pos:position pos:line="304" pos:column="22"/></operator> <name pos:line="304" pos:column="23">next<pos:position pos:line="304" pos:column="27"/></name></expr>;<pos:position pos:line="304" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="305" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="306" pos:column="9">printf<pos:position pos:line="306" pos:column="15"/></name><argument_list pos:line="306" pos:column="15">(<argument><expr><literal type="string" pos:line="306" pos:column="16">"'\n"<pos:position pos:line="306" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="308" pos:column="9">printf<pos:position pos:line="308" pos:column="15"/></name><argument_list pos:line="308" pos:column="15">(<argument><expr><literal type="string" pos:line="308" pos:column="16">"rref='"<pos:position pos:line="308" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="308" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="26"/></expr_stmt>
	<for pos:line="309" pos:column="9">for <control pos:line="309" pos:column="13">(<init><expr><name pos:line="309" pos:column="14">ref<pos:position pos:line="309" pos:column="17"/></name> <operator pos:line="309" pos:column="18">=<pos:position pos:line="309" pos:column="19"/></operator> <name pos:line="309" pos:column="20">reflist<pos:position pos:line="309" pos:column="27"/></name></expr>;<pos:position pos:line="309" pos:column="28"/></init> <condition><expr><name pos:line="309" pos:column="29">ref<pos:position pos:line="309" pos:column="32"/></name></expr>;<pos:position pos:line="309" pos:column="33"/></condition> <incr/>)<pos:position pos:line="309" pos:column="35"/></control> <block pos:line="309" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="310" pos:column="17">const<pos:position pos:line="310" pos:column="22"/></specifier> <name pos:line="310" pos:column="23">char<pos:position pos:line="310" pos:column="27"/></name> <modifier pos:line="310" pos:column="28">*<pos:position pos:line="310" pos:column="29"/></modifier></type><name pos:line="310" pos:column="29">next<pos:position pos:line="310" pos:column="33"/></name></decl>, <modifier pos:line="310" pos:column="35">*<pos:position pos:line="310" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="310" pos:column="36">colon<pos:position pos:line="310" pos:column="41"/></name></decl>;<pos:position pos:line="310" pos:column="42"/></decl_stmt>
		<while pos:line="311" pos:column="17">while <condition pos:line="311" pos:column="23">(<expr><operator pos:line="311" pos:column="24">*<pos:position pos:line="311" pos:column="25"/></operator><name pos:line="311" pos:column="25">ref<pos:position pos:line="311" pos:column="28"/></name> <operator pos:line="311" pos:column="29">&amp;&amp;<pos:position pos:line="311" pos:column="39"/></operator> <call><name pos:line="311" pos:column="32">isspace<pos:position pos:line="311" pos:column="39"/></name><argument_list pos:line="311" pos:column="39">(<argument><expr><operator pos:line="311" pos:column="40">*<pos:position pos:line="311" pos:column="41"/></operator><name pos:line="311" pos:column="41">ref<pos:position pos:line="311" pos:column="44"/></name></expr></argument>)<pos:position pos:line="311" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="311" pos:column="46"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="312" pos:column="25">ref<pos:position pos:line="312" pos:column="28"/></name><operator pos:line="312" pos:column="28">++<pos:position pos:line="312" pos:column="30"/></operator></expr>;<pos:position pos:line="312" pos:column="31"/></expr_stmt></block></while>
		<if pos:line="313" pos:column="17">if <condition pos:line="313" pos:column="20">(<expr><operator pos:line="313" pos:column="21">!<pos:position pos:line="313" pos:column="22"/></operator><operator pos:line="313" pos:column="22">*<pos:position pos:line="313" pos:column="23"/></operator><name pos:line="313" pos:column="23">ref<pos:position pos:line="313" pos:column="26"/></name></expr>)<pos:position pos:line="313" pos:column="27"/></condition><then pos:line="313" pos:column="27">
			<block type="pseudo"><break pos:line="314" pos:column="25">break;<pos:position pos:line="314" pos:column="31"/></break></block></then></if>
		<for pos:line="315" pos:column="17">for <control pos:line="315" pos:column="21">(<init><expr><name pos:line="315" pos:column="22">next<pos:position pos:line="315" pos:column="26"/></name> <operator pos:line="315" pos:column="27">=<pos:position pos:line="315" pos:column="28"/></operator> <name pos:line="315" pos:column="29">ref<pos:position pos:line="315" pos:column="32"/></name></expr>;<pos:position pos:line="315" pos:column="33"/></init> <condition><expr><operator pos:line="315" pos:column="34">*<pos:position pos:line="315" pos:column="35"/></operator><name pos:line="315" pos:column="35">next<pos:position pos:line="315" pos:column="39"/></name> <operator pos:line="315" pos:column="40">&amp;&amp;<pos:position pos:line="315" pos:column="50"/></operator> <operator pos:line="315" pos:column="43">!<pos:position pos:line="315" pos:column="44"/></operator><call><name pos:line="315" pos:column="44">isspace<pos:position pos:line="315" pos:column="51"/></name><argument_list pos:line="315" pos:column="51">(<argument><expr><operator pos:line="315" pos:column="52">*<pos:position pos:line="315" pos:column="53"/></operator><name pos:line="315" pos:column="53">next<pos:position pos:line="315" pos:column="57"/></name></expr></argument>)<pos:position pos:line="315" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="59"/></condition> <incr><expr><name pos:line="315" pos:column="60">next<pos:position pos:line="315" pos:column="64"/></name><operator pos:line="315" pos:column="64">++<pos:position pos:line="315" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="315" pos:column="67"/></control>
			<block type="pseudo"><empty_stmt pos:line="316" pos:column="25">;<pos:position pos:line="316" pos:column="26"/></empty_stmt></block></for>
		<if pos:line="317" pos:column="17">if <condition pos:line="317" pos:column="20">(<expr><operator pos:line="317" pos:column="21">*<pos:position pos:line="317" pos:column="22"/></operator><name pos:line="317" pos:column="22">ref<pos:position pos:line="317" pos:column="25"/></name> <operator pos:line="317" pos:column="26">==<pos:position pos:line="317" pos:column="28"/></operator> <literal type="char" pos:line="317" pos:column="29">'.'<pos:position pos:line="317" pos:column="32"/></literal></expr>)<pos:position pos:line="317" pos:column="33"/></condition><then pos:line="317" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="318" pos:column="25">ref<pos:position pos:line="318" pos:column="28"/></name><operator pos:line="318" pos:column="28">++<pos:position pos:line="318" pos:column="30"/></operator></expr>;<pos:position pos:line="318" pos:column="31"/></expr_stmt></block></then></if>
		<if pos:line="319" pos:column="17">if <condition pos:line="319" pos:column="20">(<expr><operator pos:line="319" pos:column="21">*<pos:position pos:line="319" pos:column="22"/></operator><name pos:line="319" pos:column="22">ref<pos:position pos:line="319" pos:column="25"/></name> <operator pos:line="319" pos:column="26">==<pos:position pos:line="319" pos:column="28"/></operator> <literal type="char" pos:line="319" pos:column="29">'+'<pos:position pos:line="319" pos:column="32"/></literal></expr>)<pos:position pos:line="319" pos:column="33"/></condition><then pos:line="319" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="320" pos:column="25">ref<pos:position pos:line="320" pos:column="28"/></name><operator pos:line="320" pos:column="28">++<pos:position pos:line="320" pos:column="30"/></operator></expr>;<pos:position pos:line="320" pos:column="31"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="321" pos:column="17">colon<pos:position pos:line="321" pos:column="22"/></name> <operator pos:line="321" pos:column="23">=<pos:position pos:line="321" pos:column="24"/></operator> <call><name pos:line="321" pos:column="25">strchr<pos:position pos:line="321" pos:column="31"/></name><argument_list pos:line="321" pos:column="31">(<argument><expr><name pos:line="321" pos:column="32">ref<pos:position pos:line="321" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="321" pos:column="37">':'<pos:position pos:line="321" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="321" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="322" pos:column="17">putchar<pos:position pos:line="322" pos:column="24"/></name><argument_list pos:line="322" pos:column="24">(<argument><expr><literal type="char" pos:line="322" pos:column="25">'\n'<pos:position pos:line="322" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="323" pos:column="17">printf<pos:position pos:line="323" pos:column="23"/></name><argument_list pos:line="323" pos:column="23">(<argument><expr><literal type="string" pos:line="323" pos:column="24">"%.*s"<pos:position pos:line="323" pos:column="30"/></literal></expr></argument>, <argument><expr><call pos:line="323" pos:column="32">(<name pos:line="323" pos:column="33">int<pos:position pos:line="323" pos:column="36"/></name>)<argument_list pos:line="323" pos:column="37">(<argument><expr><operator pos:line="323" pos:column="38">(<pos:position pos:line="323" pos:column="39"/></operator><ternary><condition><expr><name pos:line="323" pos:column="39">colon<pos:position pos:line="323" pos:column="44"/></name></expr> ?<pos:position pos:line="323" pos:column="46"/></condition><then pos:line="323" pos:column="46"> <expr><name pos:line="323" pos:column="47">colon<pos:position pos:line="323" pos:column="52"/></name></expr> <pos:position pos:line="323" pos:column="53"/></then><else pos:line="323" pos:column="53">: <expr><name pos:line="323" pos:column="55">next<pos:position pos:line="323" pos:column="59"/></name></expr></else></ternary><operator pos:line="323" pos:column="59">)<pos:position pos:line="323" pos:column="60"/></operator> <operator pos:line="323" pos:column="61">-<pos:position pos:line="323" pos:column="62"/></operator> <name pos:line="323" pos:column="63">ref<pos:position pos:line="323" pos:column="66"/></name></expr></argument>)<pos:position pos:line="323" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="323" pos:column="69">ref<pos:position pos:line="323" pos:column="72"/></name></expr></argument>)<pos:position pos:line="323" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="324" pos:column="17">ref<pos:position pos:line="324" pos:column="20"/></name> <operator pos:line="324" pos:column="21">=<pos:position pos:line="324" pos:column="22"/></operator> <name pos:line="324" pos:column="23">next<pos:position pos:line="324" pos:column="27"/></name></expr>;<pos:position pos:line="324" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="325" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="326" pos:column="9">printf<pos:position pos:line="326" pos:column="15"/></name><argument_list pos:line="326" pos:column="15">(<argument><expr><literal type="string" pos:line="326" pos:column="16">"'\n"<pos:position pos:line="326" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="326" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="23"/></expr_stmt>
	<return pos:line="327" pos:column="9">return <expr><literal type="number" pos:line="327" pos:column="16">0<pos:position pos:line="327" pos:column="17"/></literal></expr>;<pos:position pos:line="327" pos:column="18"/></return>
}<pos:position pos:line="328" pos:column="2"/></block></function>

<function><specifier pos:line="330" pos:column="1">static<pos:position pos:line="330" pos:column="7"/></specifier> <type><name pos:line="330" pos:column="8">int<pos:position pos:line="330" pos:column="11"/></name></type> <name pos:line="330" pos:column="12">expand_refs_wildcard<pos:position pos:line="330" pos:column="32"/></name><parameter_list pos:line="330" pos:column="32">(<parameter><decl><type><specifier pos:line="330" pos:column="33">const<pos:position pos:line="330" pos:column="38"/></specifier> <name pos:line="330" pos:column="39">char<pos:position pos:line="330" pos:column="43"/></name> <modifier pos:line="330" pos:column="44">*<pos:position pos:line="330" pos:column="45"/></modifier></type><name pos:line="330" pos:column="45">ls_remote_result<pos:position pos:line="330" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="330" pos:column="63">int<pos:position pos:line="330" pos:column="66"/></name></type> <name pos:line="330" pos:column="67">numrefs<pos:position pos:line="330" pos:column="74"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="331" pos:column="33">const<pos:position pos:line="331" pos:column="38"/></specifier> <name pos:line="331" pos:column="39">char<pos:position pos:line="331" pos:column="43"/></name> <modifier pos:line="331" pos:column="44">*<pos:position pos:line="331" pos:column="45"/></modifier><modifier pos:line="331" pos:column="45">*<pos:position pos:line="331" pos:column="46"/></modifier></type><name pos:line="331" pos:column="46">refs<pos:position pos:line="331" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="331" pos:column="51"/></parameter_list>
<block pos:line="332" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="333" pos:column="9">int<pos:position pos:line="333" pos:column="12"/></name></type> <name pos:line="333" pos:column="13">i<pos:position pos:line="333" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="333" pos:column="16">matchlen<pos:position pos:line="333" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="333" pos:column="26">replacelen<pos:position pos:line="333" pos:column="36"/></name></decl>;<pos:position pos:line="333" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="334" pos:column="9">int<pos:position pos:line="334" pos:column="12"/></name></type> <name pos:line="334" pos:column="13">found_one<pos:position pos:line="334" pos:column="22"/></name> <init pos:line="334" pos:column="23">= <expr><literal type="number" pos:line="334" pos:column="25">0<pos:position pos:line="334" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="334" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="335" pos:column="9">const<pos:position pos:line="335" pos:column="14"/></specifier> <name pos:line="335" pos:column="15">char<pos:position pos:line="335" pos:column="19"/></name> <modifier pos:line="335" pos:column="20">*<pos:position pos:line="335" pos:column="21"/></modifier></type><name pos:line="335" pos:column="21">remote<pos:position pos:line="335" pos:column="27"/></name> <init pos:line="335" pos:column="28">= <expr><operator pos:line="335" pos:column="30">*<pos:position pos:line="335" pos:column="31"/></operator><name pos:line="335" pos:column="31">refs<pos:position pos:line="335" pos:column="35"/></name><operator pos:line="335" pos:column="35">++<pos:position pos:line="335" pos:column="37"/></operator></expr></init></decl>;<pos:position pos:line="335" pos:column="38"/></decl_stmt>
	<expr_stmt><expr><name pos:line="336" pos:column="9">numrefs<pos:position pos:line="336" pos:column="16"/></name><operator pos:line="336" pos:column="16">--<pos:position pos:line="336" pos:column="18"/></operator></expr>;<pos:position pos:line="336" pos:column="19"/></expr_stmt>

	<if pos:line="338" pos:column="9">if <condition pos:line="338" pos:column="12">(<expr><name pos:line="338" pos:column="13">numrefs<pos:position pos:line="338" pos:column="20"/></name> <operator pos:line="338" pos:column="21">==<pos:position pos:line="338" pos:column="23"/></operator> <literal type="number" pos:line="338" pos:column="24">0<pos:position pos:line="338" pos:column="25"/></literal></expr>)<pos:position pos:line="338" pos:column="26"/></condition><then pos:line="338" pos:column="26"> <block pos:line="338" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="339" pos:column="17">fprintf<pos:position pos:line="339" pos:column="24"/></name><argument_list pos:line="339" pos:column="24">(<argument><expr><name pos:line="339" pos:column="25">stderr<pos:position pos:line="339" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="33">"Nothing specified for fetching with remote.%s.fetch\n"<pos:position pos:line="339" pos:column="88"/></literal></expr></argument>,
			<argument><expr><name pos:line="340" pos:column="25">remote<pos:position pos:line="340" pos:column="31"/></name></expr></argument>)<pos:position pos:line="340" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="341" pos:column="17">printf<pos:position pos:line="341" pos:column="23"/></name><argument_list pos:line="341" pos:column="23">(<argument><expr><literal type="string" pos:line="341" pos:column="24">"empty\n"<pos:position pos:line="341" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="341" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="342" pos:column="10"/></block></then></if>

	<for pos:line="344" pos:column="9">for <control pos:line="344" pos:column="13">(<init><expr><name pos:line="344" pos:column="14">i<pos:position pos:line="344" pos:column="15"/></name> <operator pos:line="344" pos:column="16">=<pos:position pos:line="344" pos:column="17"/></operator> <literal type="number" pos:line="344" pos:column="18">0<pos:position pos:line="344" pos:column="19"/></literal></expr>;<pos:position pos:line="344" pos:column="20"/></init> <condition><expr><name pos:line="344" pos:column="21">i<pos:position pos:line="344" pos:column="22"/></name> <operator pos:line="344" pos:column="23">&lt;<pos:position pos:line="344" pos:column="27"/></operator> <name pos:line="344" pos:column="25">numrefs<pos:position pos:line="344" pos:column="32"/></name></expr>;<pos:position pos:line="344" pos:column="33"/></condition> <incr><expr><name pos:line="344" pos:column="34">i<pos:position pos:line="344" pos:column="35"/></name><operator pos:line="344" pos:column="35">++<pos:position pos:line="344" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="344" pos:column="38"/></control> <block pos:line="344" pos:column="39">{
		<decl_stmt><decl><type><specifier pos:line="345" pos:column="17">const<pos:position pos:line="345" pos:column="22"/></specifier> <name pos:line="345" pos:column="23">char<pos:position pos:line="345" pos:column="27"/></name> <modifier pos:line="345" pos:column="28">*<pos:position pos:line="345" pos:column="29"/></modifier></type><name pos:line="345" pos:column="29">ref<pos:position pos:line="345" pos:column="32"/></name> <init pos:line="345" pos:column="33">= <expr><name><name pos:line="345" pos:column="35">refs<pos:position pos:line="345" pos:column="39"/></name><index pos:line="345" pos:column="39">[<expr><name pos:line="345" pos:column="40">i<pos:position pos:line="345" pos:column="41"/></name></expr>]<pos:position pos:line="345" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="345" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="346" pos:column="17">const<pos:position pos:line="346" pos:column="22"/></specifier> <name pos:line="346" pos:column="23">char<pos:position pos:line="346" pos:column="27"/></name> <modifier pos:line="346" pos:column="28">*<pos:position pos:line="346" pos:column="29"/></modifier></type><name pos:line="346" pos:column="29">lref<pos:position pos:line="346" pos:column="33"/></name> <init pos:line="346" pos:column="34">= <expr><name pos:line="346" pos:column="36">ref<pos:position pos:line="346" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="346" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="347" pos:column="17">const<pos:position pos:line="347" pos:column="22"/></specifier> <name pos:line="347" pos:column="23">char<pos:position pos:line="347" pos:column="27"/></name> <modifier pos:line="347" pos:column="28">*<pos:position pos:line="347" pos:column="29"/></modifier></type><name pos:line="347" pos:column="29">colon<pos:position pos:line="347" pos:column="34"/></name></decl>;<pos:position pos:line="347" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="348" pos:column="17">const<pos:position pos:line="348" pos:column="22"/></specifier> <name pos:line="348" pos:column="23">char<pos:position pos:line="348" pos:column="27"/></name> <modifier pos:line="348" pos:column="28">*<pos:position pos:line="348" pos:column="29"/></modifier></type><name pos:line="348" pos:column="29">tail<pos:position pos:line="348" pos:column="33"/></name></decl>;<pos:position pos:line="348" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="349" pos:column="17">const<pos:position pos:line="349" pos:column="22"/></specifier> <name pos:line="349" pos:column="23">char<pos:position pos:line="349" pos:column="27"/></name> <modifier pos:line="349" pos:column="28">*<pos:position pos:line="349" pos:column="29"/></modifier></type><name pos:line="349" pos:column="29">ls<pos:position pos:line="349" pos:column="31"/></name></decl>;<pos:position pos:line="349" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="350" pos:column="17">const<pos:position pos:line="350" pos:column="22"/></specifier> <name pos:line="350" pos:column="23">char<pos:position pos:line="350" pos:column="27"/></name> <modifier pos:line="350" pos:column="28">*<pos:position pos:line="350" pos:column="29"/></modifier></type><name pos:line="350" pos:column="29">next<pos:position pos:line="350" pos:column="33"/></name></decl>;<pos:position pos:line="350" pos:column="34"/></decl_stmt>

		<if pos:line="352" pos:column="17">if <condition pos:line="352" pos:column="20">(<expr><operator pos:line="352" pos:column="21">*<pos:position pos:line="352" pos:column="22"/></operator><name pos:line="352" pos:column="22">lref<pos:position pos:line="352" pos:column="26"/></name> <operator pos:line="352" pos:column="27">==<pos:position pos:line="352" pos:column="29"/></operator> <literal type="char" pos:line="352" pos:column="30">'+'<pos:position pos:line="352" pos:column="33"/></literal></expr>)<pos:position pos:line="352" pos:column="34"/></condition><then pos:line="352" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="353" pos:column="25">lref<pos:position pos:line="353" pos:column="29"/></name><operator pos:line="353" pos:column="29">++<pos:position pos:line="353" pos:column="31"/></operator></expr>;<pos:position pos:line="353" pos:column="32"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="354" pos:column="17">colon<pos:position pos:line="354" pos:column="22"/></name> <operator pos:line="354" pos:column="23">=<pos:position pos:line="354" pos:column="24"/></operator> <call><name pos:line="354" pos:column="25">strchr<pos:position pos:line="354" pos:column="31"/></name><argument_list pos:line="354" pos:column="31">(<argument><expr><name pos:line="354" pos:column="32">lref<pos:position pos:line="354" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="354" pos:column="38">':'<pos:position pos:line="354" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="354" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="355" pos:column="17">tail<pos:position pos:line="355" pos:column="21"/></name> <operator pos:line="355" pos:column="22">=<pos:position pos:line="355" pos:column="23"/></operator> <name pos:line="355" pos:column="24">lref<pos:position pos:line="355" pos:column="28"/></name> <operator pos:line="355" pos:column="29">+<pos:position pos:line="355" pos:column="30"/></operator> <call><name pos:line="355" pos:column="31">strlen<pos:position pos:line="355" pos:column="37"/></name><argument_list pos:line="355" pos:column="37">(<argument><expr><name pos:line="355" pos:column="38">lref<pos:position pos:line="355" pos:column="42"/></name></expr></argument>)<pos:position pos:line="355" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="44"/></expr_stmt>
		<if pos:line="356" pos:column="17">if <condition pos:line="356" pos:column="20">(<expr><operator pos:line="356" pos:column="21">!<pos:position pos:line="356" pos:column="22"/></operator><operator pos:line="356" pos:column="22">(<pos:position pos:line="356" pos:column="23"/></operator><name pos:line="356" pos:column="23">colon<pos:position pos:line="356" pos:column="28"/></name> <operator pos:line="356" pos:column="29">&amp;&amp;<pos:position pos:line="356" pos:column="39"/></operator>
		      <literal type="number" pos:line="357" pos:column="23">2<pos:position pos:line="357" pos:column="24"/></literal> <operator pos:line="357" pos:column="25">&lt;<pos:position pos:line="357" pos:column="29"/></operator> <name pos:line="357" pos:column="27">colon<pos:position pos:line="357" pos:column="32"/></name> <operator pos:line="357" pos:column="33">-<pos:position pos:line="357" pos:column="34"/></operator> <name pos:line="357" pos:column="35">lref<pos:position pos:line="357" pos:column="39"/></name> <operator pos:line="357" pos:column="40">&amp;&amp;<pos:position pos:line="357" pos:column="50"/></operator>
		      <name><name pos:line="358" pos:column="23">colon<pos:position pos:line="358" pos:column="28"/></name><index pos:line="358" pos:column="28">[<expr><operator pos:line="358" pos:column="29">-<pos:position pos:line="358" pos:column="30"/></operator><literal type="number" pos:line="358" pos:column="30">1<pos:position pos:line="358" pos:column="31"/></literal></expr>]<pos:position pos:line="358" pos:column="32"/></index></name> <operator pos:line="358" pos:column="33">==<pos:position pos:line="358" pos:column="35"/></operator> <literal type="char" pos:line="358" pos:column="36">'*'<pos:position pos:line="358" pos:column="39"/></literal> <operator pos:line="358" pos:column="40">&amp;&amp;<pos:position pos:line="358" pos:column="50"/></operator>
		      <name><name pos:line="359" pos:column="23">colon<pos:position pos:line="359" pos:column="28"/></name><index pos:line="359" pos:column="28">[<expr><operator pos:line="359" pos:column="29">-<pos:position pos:line="359" pos:column="30"/></operator><literal type="number" pos:line="359" pos:column="30">2<pos:position pos:line="359" pos:column="31"/></literal></expr>]<pos:position pos:line="359" pos:column="32"/></index></name> <operator pos:line="359" pos:column="33">==<pos:position pos:line="359" pos:column="35"/></operator> <literal type="char" pos:line="359" pos:column="36">'/'<pos:position pos:line="359" pos:column="39"/></literal> <operator pos:line="359" pos:column="40">&amp;&amp;<pos:position pos:line="359" pos:column="50"/></operator>
		      <literal type="number" pos:line="360" pos:column="23">2<pos:position pos:line="360" pos:column="24"/></literal> <operator pos:line="360" pos:column="25">&lt;<pos:position pos:line="360" pos:column="29"/></operator> <name pos:line="360" pos:column="27">tail<pos:position pos:line="360" pos:column="31"/></name> <operator pos:line="360" pos:column="32">-<pos:position pos:line="360" pos:column="33"/></operator> <operator pos:line="360" pos:column="34">(<pos:position pos:line="360" pos:column="35"/></operator><name pos:line="360" pos:column="35">colon<pos:position pos:line="360" pos:column="40"/></name> <operator pos:line="360" pos:column="41">+<pos:position pos:line="360" pos:column="42"/></operator> <literal type="number" pos:line="360" pos:column="43">1<pos:position pos:line="360" pos:column="44"/></literal><operator pos:line="360" pos:column="44">)<pos:position pos:line="360" pos:column="45"/></operator> <operator pos:line="360" pos:column="46">&amp;&amp;<pos:position pos:line="360" pos:column="56"/></operator>
		      <name><name pos:line="361" pos:column="23">tail<pos:position pos:line="361" pos:column="27"/></name><index pos:line="361" pos:column="27">[<expr><operator pos:line="361" pos:column="28">-<pos:position pos:line="361" pos:column="29"/></operator><literal type="number" pos:line="361" pos:column="29">1<pos:position pos:line="361" pos:column="30"/></literal></expr>]<pos:position pos:line="361" pos:column="31"/></index></name> <operator pos:line="361" pos:column="32">==<pos:position pos:line="361" pos:column="34"/></operator> <literal type="char" pos:line="361" pos:column="35">'*'<pos:position pos:line="361" pos:column="38"/></literal> <operator pos:line="361" pos:column="39">&amp;&amp;<pos:position pos:line="361" pos:column="49"/></operator>
		      <name><name pos:line="362" pos:column="23">tail<pos:position pos:line="362" pos:column="27"/></name><index pos:line="362" pos:column="27">[<expr><operator pos:line="362" pos:column="28">-<pos:position pos:line="362" pos:column="29"/></operator><literal type="number" pos:line="362" pos:column="29">2<pos:position pos:line="362" pos:column="30"/></literal></expr>]<pos:position pos:line="362" pos:column="31"/></index></name> <operator pos:line="362" pos:column="32">==<pos:position pos:line="362" pos:column="34"/></operator> <literal type="char" pos:line="362" pos:column="35">'/'<pos:position pos:line="362" pos:column="38"/></literal><operator pos:line="362" pos:column="38">)<pos:position pos:line="362" pos:column="39"/></operator></expr>)<pos:position pos:line="362" pos:column="40"/></condition><then pos:line="362" pos:column="40"> <block pos:line="362" pos:column="41">{
			<comment type="block" pos:line="363" pos:column="25">/* not a glob */</comment>
			<if pos:line="364" pos:column="25">if <condition pos:line="364" pos:column="28">(<expr><operator pos:line="364" pos:column="29">!<pos:position pos:line="364" pos:column="30"/></operator><name pos:line="364" pos:column="30">found_one<pos:position pos:line="364" pos:column="39"/></name><operator pos:line="364" pos:column="39">++<pos:position pos:line="364" pos:column="41"/></operator></expr>)<pos:position pos:line="364" pos:column="42"/></condition><then pos:line="364" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="365" pos:column="33">printf<pos:position pos:line="365" pos:column="39"/></name><argument_list pos:line="365" pos:column="39">(<argument><expr><literal type="string" pos:line="365" pos:column="40">"explicit\n"<pos:position pos:line="365" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="365" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="54"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="366" pos:column="25">printf<pos:position pos:line="366" pos:column="31"/></name><argument_list pos:line="366" pos:column="31">(<argument><expr><literal type="string" pos:line="366" pos:column="32">"%s\n"<pos:position pos:line="366" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="366" pos:column="40">ref<pos:position pos:line="366" pos:column="43"/></name></expr></argument>)<pos:position pos:line="366" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="45"/></expr_stmt>
			<continue pos:line="367" pos:column="25">continue;<pos:position pos:line="367" pos:column="34"/></continue>
		}<pos:position pos:line="368" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="370" pos:column="17">/* glob */</comment>
		<if pos:line="371" pos:column="17">if <condition pos:line="371" pos:column="20">(<expr><operator pos:line="371" pos:column="21">!<pos:position pos:line="371" pos:column="22"/></operator><name pos:line="371" pos:column="22">found_one<pos:position pos:line="371" pos:column="31"/></name><operator pos:line="371" pos:column="31">++<pos:position pos:line="371" pos:column="33"/></operator></expr>)<pos:position pos:line="371" pos:column="34"/></condition><then pos:line="371" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="372" pos:column="25">printf<pos:position pos:line="372" pos:column="31"/></name><argument_list pos:line="372" pos:column="31">(<argument><expr><literal type="string" pos:line="372" pos:column="32">"glob\n"<pos:position pos:line="372" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="372" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="42"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="374" pos:column="17">/* lref to colon-2 is remote hierarchy name;
		 * colon+1 to tail-2 is local.
		 */</comment>
		<expr_stmt><expr><name pos:line="377" pos:column="17">matchlen<pos:position pos:line="377" pos:column="25"/></name> <operator pos:line="377" pos:column="26">=<pos:position pos:line="377" pos:column="27"/></operator> <operator pos:line="377" pos:column="28">(<pos:position pos:line="377" pos:column="29"/></operator><name pos:line="377" pos:column="29">colon<pos:position pos:line="377" pos:column="34"/></name><operator pos:line="377" pos:column="34">-<pos:position pos:line="377" pos:column="35"/></operator><literal type="number" pos:line="377" pos:column="35">1<pos:position pos:line="377" pos:column="36"/></literal><operator pos:line="377" pos:column="36">)<pos:position pos:line="377" pos:column="37"/></operator> <operator pos:line="377" pos:column="38">-<pos:position pos:line="377" pos:column="39"/></operator> <name pos:line="377" pos:column="40">lref<pos:position pos:line="377" pos:column="44"/></name></expr>;<pos:position pos:line="377" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="378" pos:column="17">replacelen<pos:position pos:line="378" pos:column="27"/></name> <operator pos:line="378" pos:column="28">=<pos:position pos:line="378" pos:column="29"/></operator> <operator pos:line="378" pos:column="30">(<pos:position pos:line="378" pos:column="31"/></operator><name pos:line="378" pos:column="31">tail<pos:position pos:line="378" pos:column="35"/></name><operator pos:line="378" pos:column="35">-<pos:position pos:line="378" pos:column="36"/></operator><literal type="number" pos:line="378" pos:column="36">1<pos:position pos:line="378" pos:column="37"/></literal><operator pos:line="378" pos:column="37">)<pos:position pos:line="378" pos:column="38"/></operator> <operator pos:line="378" pos:column="39">-<pos:position pos:line="378" pos:column="40"/></operator> <operator pos:line="378" pos:column="41">(<pos:position pos:line="378" pos:column="42"/></operator><name pos:line="378" pos:column="42">colon<pos:position pos:line="378" pos:column="47"/></name><operator pos:line="378" pos:column="47">+<pos:position pos:line="378" pos:column="48"/></operator><literal type="number" pos:line="378" pos:column="48">1<pos:position pos:line="378" pos:column="49"/></literal><operator pos:line="378" pos:column="49">)<pos:position pos:line="378" pos:column="50"/></operator></expr>;<pos:position pos:line="378" pos:column="51"/></expr_stmt>
		<for pos:line="379" pos:column="17">for <control pos:line="379" pos:column="21">(<init><expr><name pos:line="379" pos:column="22">ls<pos:position pos:line="379" pos:column="24"/></name> <operator pos:line="379" pos:column="25">=<pos:position pos:line="379" pos:column="26"/></operator> <name pos:line="379" pos:column="27">ls_remote_result<pos:position pos:line="379" pos:column="43"/></name></expr>;<pos:position pos:line="379" pos:column="44"/></init> <condition><expr><name pos:line="379" pos:column="45">ls<pos:position pos:line="379" pos:column="47"/></name></expr>;<pos:position pos:line="379" pos:column="48"/></condition> <incr><expr><name pos:line="379" pos:column="49">ls<pos:position pos:line="379" pos:column="51"/></name> <operator pos:line="379" pos:column="52">=<pos:position pos:line="379" pos:column="53"/></operator> <name pos:line="379" pos:column="54">next<pos:position pos:line="379" pos:column="58"/></name></expr></incr>)<pos:position pos:line="379" pos:column="59"/></control> <block pos:line="379" pos:column="60">{
			<decl_stmt><decl><type><specifier pos:line="380" pos:column="25">const<pos:position pos:line="380" pos:column="30"/></specifier> <name pos:line="380" pos:column="31">char<pos:position pos:line="380" pos:column="35"/></name> <modifier pos:line="380" pos:column="36">*<pos:position pos:line="380" pos:column="37"/></modifier></type><name pos:line="380" pos:column="37">eol<pos:position pos:line="380" pos:column="40"/></name></decl>;<pos:position pos:line="380" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="381" pos:column="25">unsigned<pos:position pos:line="381" pos:column="33"/></name> <name pos:line="381" pos:column="34">char<pos:position pos:line="381" pos:column="38"/></name></type> <name><name pos:line="381" pos:column="39">sha1<pos:position pos:line="381" pos:column="43"/></name><index pos:line="381" pos:column="43">[<expr><literal type="number" pos:line="381" pos:column="44">20<pos:position pos:line="381" pos:column="46"/></literal></expr>]<pos:position pos:line="381" pos:column="47"/></index></name></decl>;<pos:position pos:line="381" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="382" pos:column="25">int<pos:position pos:line="382" pos:column="28"/></name></type> <name pos:line="382" pos:column="29">namelen<pos:position pos:line="382" pos:column="36"/></name></decl>;<pos:position pos:line="382" pos:column="37"/></decl_stmt>

			<while pos:line="384" pos:column="25">while <condition pos:line="384" pos:column="31">(<expr><operator pos:line="384" pos:column="32">*<pos:position pos:line="384" pos:column="33"/></operator><name pos:line="384" pos:column="33">ls<pos:position pos:line="384" pos:column="35"/></name> <operator pos:line="384" pos:column="36">&amp;&amp;<pos:position pos:line="384" pos:column="46"/></operator> <call><name pos:line="384" pos:column="39">isspace<pos:position pos:line="384" pos:column="46"/></name><argument_list pos:line="384" pos:column="46">(<argument><expr><operator pos:line="384" pos:column="47">*<pos:position pos:line="384" pos:column="48"/></operator><name pos:line="384" pos:column="48">ls<pos:position pos:line="384" pos:column="50"/></name></expr></argument>)<pos:position pos:line="384" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="384" pos:column="52"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="385" pos:column="33">ls<pos:position pos:line="385" pos:column="35"/></name><operator pos:line="385" pos:column="35">++<pos:position pos:line="385" pos:column="37"/></operator></expr>;<pos:position pos:line="385" pos:column="38"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="386" pos:column="25">next<pos:position pos:line="386" pos:column="29"/></name> <operator pos:line="386" pos:column="30">=<pos:position pos:line="386" pos:column="31"/></operator> <call><name pos:line="386" pos:column="32">strchr<pos:position pos:line="386" pos:column="38"/></name><argument_list pos:line="386" pos:column="38">(<argument><expr><name pos:line="386" pos:column="39">ls<pos:position pos:line="386" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="386" pos:column="43">'\n'<pos:position pos:line="386" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="386" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="387" pos:column="25">eol<pos:position pos:line="387" pos:column="28"/></name> <operator pos:line="387" pos:column="29">=<pos:position pos:line="387" pos:column="30"/></operator> <ternary><condition><expr><operator pos:line="387" pos:column="31">!<pos:position pos:line="387" pos:column="32"/></operator><name pos:line="387" pos:column="32">next<pos:position pos:line="387" pos:column="36"/></name></expr> ?<pos:position pos:line="387" pos:column="38"/></condition><then pos:line="387" pos:column="38"> <expr><operator pos:line="387" pos:column="39">(<pos:position pos:line="387" pos:column="40"/></operator><name pos:line="387" pos:column="40">ls<pos:position pos:line="387" pos:column="42"/></name> <operator pos:line="387" pos:column="43">+<pos:position pos:line="387" pos:column="44"/></operator> <call><name pos:line="387" pos:column="45">strlen<pos:position pos:line="387" pos:column="51"/></name><argument_list pos:line="387" pos:column="51">(<argument><expr><name pos:line="387" pos:column="52">ls<pos:position pos:line="387" pos:column="54"/></name></expr></argument>)<pos:position pos:line="387" pos:column="55"/></argument_list></call><operator pos:line="387" pos:column="55">)<pos:position pos:line="387" pos:column="56"/></operator></expr> <pos:position pos:line="387" pos:column="57"/></then><else pos:line="387" pos:column="57">: <expr><name pos:line="387" pos:column="59">next<pos:position pos:line="387" pos:column="63"/></name></expr></else></ternary></expr>;<pos:position pos:line="387" pos:column="64"/></expr_stmt>
			<if pos:line="388" pos:column="25">if <condition pos:line="388" pos:column="28">(<expr><operator pos:line="388" pos:column="29">!<pos:position pos:line="388" pos:column="30"/></operator><call><name pos:line="388" pos:column="30">memcmp<pos:position pos:line="388" pos:column="36"/></name><argument_list pos:line="388" pos:column="36">(<argument><expr><literal type="string" pos:line="388" pos:column="37">"^{}"<pos:position pos:line="388" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="388" pos:column="44">eol<pos:position pos:line="388" pos:column="47"/></name><operator pos:line="388" pos:column="47">-<pos:position pos:line="388" pos:column="48"/></operator><literal type="number" pos:line="388" pos:column="48">3<pos:position pos:line="388" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="388" pos:column="51">3<pos:position pos:line="388" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="388" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="388" pos:column="54"/></condition><then pos:line="388" pos:column="54">
				<block type="pseudo"><continue pos:line="389" pos:column="33">continue;<pos:position pos:line="389" pos:column="42"/></continue></block></then></if>
			<if pos:line="390" pos:column="25">if <condition pos:line="390" pos:column="28">(<expr><name pos:line="390" pos:column="29">eol<pos:position pos:line="390" pos:column="32"/></name> <operator pos:line="390" pos:column="33">-<pos:position pos:line="390" pos:column="34"/></operator> <name pos:line="390" pos:column="35">ls<pos:position pos:line="390" pos:column="37"/></name> <operator pos:line="390" pos:column="38">&lt;<pos:position pos:line="390" pos:column="42"/></operator> <literal type="number" pos:line="390" pos:column="40">40<pos:position pos:line="390" pos:column="42"/></literal></expr>)<pos:position pos:line="390" pos:column="43"/></condition><then pos:line="390" pos:column="43">
				<block type="pseudo"><continue pos:line="391" pos:column="33">continue;<pos:position pos:line="391" pos:column="42"/></continue></block></then></if>
			<if pos:line="392" pos:column="25">if <condition pos:line="392" pos:column="28">(<expr><call><name pos:line="392" pos:column="29">get_sha1_hex<pos:position pos:line="392" pos:column="41"/></name><argument_list pos:line="392" pos:column="41">(<argument><expr><name pos:line="392" pos:column="42">ls<pos:position pos:line="392" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="392" pos:column="46">sha1<pos:position pos:line="392" pos:column="50"/></name></expr></argument>)<pos:position pos:line="392" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="392" pos:column="52"/></condition><then pos:line="392" pos:column="52">
				<block type="pseudo"><continue pos:line="393" pos:column="33">continue;<pos:position pos:line="393" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="394" pos:column="25">ls<pos:position pos:line="394" pos:column="27"/></name> <operator pos:line="394" pos:column="28">+=<pos:position pos:line="394" pos:column="30"/></operator> <literal type="number" pos:line="394" pos:column="31">40<pos:position pos:line="394" pos:column="33"/></literal></expr>;<pos:position pos:line="394" pos:column="34"/></expr_stmt>
			<while pos:line="395" pos:column="25">while <condition pos:line="395" pos:column="31">(<expr><name pos:line="395" pos:column="32">ls<pos:position pos:line="395" pos:column="34"/></name> <operator pos:line="395" pos:column="35">&lt;<pos:position pos:line="395" pos:column="39"/></operator> <name pos:line="395" pos:column="37">eol<pos:position pos:line="395" pos:column="40"/></name> <operator pos:line="395" pos:column="41">&amp;&amp;<pos:position pos:line="395" pos:column="51"/></operator> <call><name pos:line="395" pos:column="44">isspace<pos:position pos:line="395" pos:column="51"/></name><argument_list pos:line="395" pos:column="51">(<argument><expr><operator pos:line="395" pos:column="52">*<pos:position pos:line="395" pos:column="53"/></operator><name pos:line="395" pos:column="53">ls<pos:position pos:line="395" pos:column="55"/></name></expr></argument>)<pos:position pos:line="395" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="395" pos:column="57"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="396" pos:column="33">ls<pos:position pos:line="396" pos:column="35"/></name><operator pos:line="396" pos:column="35">++<pos:position pos:line="396" pos:column="37"/></operator></expr>;<pos:position pos:line="396" pos:column="38"/></expr_stmt></block></while>
			<comment type="block" pos:line="397" pos:column="25">/* ls to next (or eol) is the name.
			 * is it identical to lref to colon-2?
			 */</comment>
			<if pos:line="400" pos:column="25">if <condition pos:line="400" pos:column="28">(<expr><operator pos:line="400" pos:column="29">(<pos:position pos:line="400" pos:column="30"/></operator><name pos:line="400" pos:column="30">eol<pos:position pos:line="400" pos:column="33"/></name> <operator pos:line="400" pos:column="34">-<pos:position pos:line="400" pos:column="35"/></operator> <name pos:line="400" pos:column="36">ls<pos:position pos:line="400" pos:column="38"/></name><operator pos:line="400" pos:column="38">)<pos:position pos:line="400" pos:column="39"/></operator> <operator pos:line="400" pos:column="40">&lt;=<pos:position pos:line="400" pos:column="45"/></operator> <name pos:line="400" pos:column="43">matchlen<pos:position pos:line="400" pos:column="51"/></name> <operator pos:line="400" pos:column="52">||<pos:position pos:line="400" pos:column="54"/></operator>
			    <call><name pos:line="401" pos:column="29">strncmp<pos:position pos:line="401" pos:column="36"/></name><argument_list pos:line="401" pos:column="36">(<argument><expr><name pos:line="401" pos:column="37">ls<pos:position pos:line="401" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="41">lref<pos:position pos:line="401" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="47">matchlen<pos:position pos:line="401" pos:column="55"/></name></expr></argument>)<pos:position pos:line="401" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="401" pos:column="57"/></condition><then pos:line="401" pos:column="57">
				<block type="pseudo"><continue pos:line="402" pos:column="33">continue;<pos:position pos:line="402" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="404" pos:column="25">/* Yes, it is a match */</comment>
			<expr_stmt><expr><name pos:line="405" pos:column="25">namelen<pos:position pos:line="405" pos:column="32"/></name> <operator pos:line="405" pos:column="33">=<pos:position pos:line="405" pos:column="34"/></operator> <name pos:line="405" pos:column="35">eol<pos:position pos:line="405" pos:column="38"/></name> <operator pos:line="405" pos:column="39">-<pos:position pos:line="405" pos:column="40"/></operator> <name pos:line="405" pos:column="41">ls<pos:position pos:line="405" pos:column="43"/></name></expr>;<pos:position pos:line="405" pos:column="44"/></expr_stmt>
			<if pos:line="406" pos:column="25">if <condition pos:line="406" pos:column="28">(<expr><name pos:line="406" pos:column="29">lref<pos:position pos:line="406" pos:column="33"/></name> <operator pos:line="406" pos:column="34">!=<pos:position pos:line="406" pos:column="36"/></operator> <name pos:line="406" pos:column="37">ref<pos:position pos:line="406" pos:column="40"/></name></expr>)<pos:position pos:line="406" pos:column="41"/></condition><then pos:line="406" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="407" pos:column="33">putchar<pos:position pos:line="407" pos:column="40"/></name><argument_list pos:line="407" pos:column="40">(<argument><expr><literal type="char" pos:line="407" pos:column="41">'+'<pos:position pos:line="407" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="407" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="46"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="408" pos:column="25">printf<pos:position pos:line="408" pos:column="31"/></name><argument_list pos:line="408" pos:column="31">(<argument><expr><literal type="string" pos:line="408" pos:column="32">"%.*s:%.*s%.*s\n"<pos:position pos:line="408" pos:column="49"/></literal></expr></argument>,
			       <argument><expr><name pos:line="409" pos:column="32">namelen<pos:position pos:line="409" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="41">ls<pos:position pos:line="409" pos:column="43"/></name></expr></argument>,
			       <argument><expr><name pos:line="410" pos:column="32">replacelen<pos:position pos:line="410" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="410" pos:column="44">colon<pos:position pos:line="410" pos:column="49"/></name> <operator pos:line="410" pos:column="50">+<pos:position pos:line="410" pos:column="51"/></operator> <literal type="number" pos:line="410" pos:column="52">1<pos:position pos:line="410" pos:column="53"/></literal></expr></argument>,
			       <argument><expr><name pos:line="411" pos:column="32">namelen<pos:position pos:line="411" pos:column="39"/></name> <operator pos:line="411" pos:column="40">-<pos:position pos:line="411" pos:column="41"/></operator> <name pos:line="411" pos:column="42">matchlen<pos:position pos:line="411" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="411" pos:column="52">ls<pos:position pos:line="411" pos:column="54"/></name> <operator pos:line="411" pos:column="55">+<pos:position pos:line="411" pos:column="56"/></operator> <name pos:line="411" pos:column="57">matchlen<pos:position pos:line="411" pos:column="65"/></name></expr></argument>)<pos:position pos:line="411" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="412" pos:column="18"/></block></for>
	}<pos:position pos:line="413" pos:column="10"/></block></for>
	<return pos:line="414" pos:column="9">return <expr><literal type="number" pos:line="414" pos:column="16">0<pos:position pos:line="414" pos:column="17"/></literal></expr>;<pos:position pos:line="414" pos:column="18"/></return>
}<pos:position pos:line="415" pos:column="2"/></block></function>

<function><specifier pos:line="417" pos:column="1">static<pos:position pos:line="417" pos:column="7"/></specifier> <type><name pos:line="417" pos:column="8">int<pos:position pos:line="417" pos:column="11"/></name></type> <name pos:line="417" pos:column="12">pick_rref<pos:position pos:line="417" pos:column="21"/></name><parameter_list pos:line="417" pos:column="21">(<parameter><decl><type><name pos:line="417" pos:column="22">int<pos:position pos:line="417" pos:column="25"/></name></type> <name pos:line="417" pos:column="26">sha1_only<pos:position pos:line="417" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="417" pos:column="37">const<pos:position pos:line="417" pos:column="42"/></specifier> <name pos:line="417" pos:column="43">char<pos:position pos:line="417" pos:column="47"/></name> <modifier pos:line="417" pos:column="48">*<pos:position pos:line="417" pos:column="49"/></modifier></type><name pos:line="417" pos:column="49">rref<pos:position pos:line="417" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="417" pos:column="55">const<pos:position pos:line="417" pos:column="60"/></specifier> <name pos:line="417" pos:column="61">char<pos:position pos:line="417" pos:column="65"/></name> <modifier pos:line="417" pos:column="66">*<pos:position pos:line="417" pos:column="67"/></modifier></type><name pos:line="417" pos:column="67">ls_remote_result<pos:position pos:line="417" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="417" pos:column="84"/></parameter_list>
<block pos:line="418" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="419" pos:column="9">int<pos:position pos:line="419" pos:column="12"/></name></type> <name pos:line="419" pos:column="13">err<pos:position pos:line="419" pos:column="16"/></name> <init pos:line="419" pos:column="17">= <expr><literal type="number" pos:line="419" pos:column="19">0<pos:position pos:line="419" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="419" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="420" pos:column="9">int<pos:position pos:line="420" pos:column="12"/></name></type> <name pos:line="420" pos:column="13">lrr_count<pos:position pos:line="420" pos:column="22"/></name> <init pos:line="420" pos:column="23">= <expr><name pos:line="420" pos:column="25">lrr_count<pos:position pos:line="420" pos:column="34"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="420" pos:column="36">i<pos:position pos:line="420" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="420" pos:column="39">pass<pos:position pos:line="420" pos:column="43"/></name></decl>;<pos:position pos:line="420" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="421" pos:column="9">const<pos:position pos:line="421" pos:column="14"/></specifier> <name pos:line="421" pos:column="15">char<pos:position pos:line="421" pos:column="19"/></name> <modifier pos:line="421" pos:column="20">*<pos:position pos:line="421" pos:column="21"/></modifier></type><name pos:line="421" pos:column="21">cp<pos:position pos:line="421" pos:column="23"/></name></decl>;<pos:position pos:line="421" pos:column="24"/></decl_stmt>
	<struct pos:line="422" pos:column="9">struct <name pos:line="422" pos:column="16">lrr<pos:position pos:line="422" pos:column="19"/></name> <block pos:line="422" pos:column="20">{
		<decl_stmt><decl><type><specifier pos:line="423" pos:column="17">const<pos:position pos:line="423" pos:column="22"/></specifier> <name pos:line="423" pos:column="23">char<pos:position pos:line="423" pos:column="27"/></name> <modifier pos:line="423" pos:column="28">*<pos:position pos:line="423" pos:column="29"/></modifier></type><name pos:line="423" pos:column="29">line<pos:position pos:line="423" pos:column="33"/></name></decl>;<pos:position pos:line="423" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="424" pos:column="17">const<pos:position pos:line="424" pos:column="22"/></specifier> <name pos:line="424" pos:column="23">char<pos:position pos:line="424" pos:column="27"/></name> <modifier pos:line="424" pos:column="28">*<pos:position pos:line="424" pos:column="29"/></modifier></type><name pos:line="424" pos:column="29">name<pos:position pos:line="424" pos:column="33"/></name></decl>;<pos:position pos:line="424" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="425" pos:column="17">int<pos:position pos:line="425" pos:column="20"/></name></type> <name pos:line="425" pos:column="21">namelen<pos:position pos:line="425" pos:column="28"/></name></decl>;<pos:position pos:line="425" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="426" pos:column="17">int<pos:position pos:line="426" pos:column="20"/></name></type> <name pos:line="426" pos:column="21">shown<pos:position pos:line="426" pos:column="26"/></name></decl>;<pos:position pos:line="426" pos:column="27"/></decl_stmt>
	}<pos:position pos:line="427" pos:column="10"/></block> <decl><modifier pos:line="427" pos:column="11">*<pos:position pos:line="427" pos:column="12"/></modifier><name pos:line="427" pos:column="12">lrr_list<pos:position pos:line="427" pos:column="20"/></name> <init pos:line="427" pos:column="21">= <expr><name pos:line="427" pos:column="23">lrr_list<pos:position pos:line="427" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="427" pos:column="32"/></struct>

	<for pos:line="429" pos:column="9">for <control pos:line="429" pos:column="13">(<init><expr><name pos:line="429" pos:column="14">pass<pos:position pos:line="429" pos:column="18"/></name> <operator pos:line="429" pos:column="19">=<pos:position pos:line="429" pos:column="20"/></operator> <literal type="number" pos:line="429" pos:column="21">0<pos:position pos:line="429" pos:column="22"/></literal></expr>;<pos:position pos:line="429" pos:column="23"/></init> <condition><expr><name pos:line="429" pos:column="24">pass<pos:position pos:line="429" pos:column="28"/></name> <operator pos:line="429" pos:column="29">&lt;<pos:position pos:line="429" pos:column="33"/></operator> <literal type="number" pos:line="429" pos:column="31">2<pos:position pos:line="429" pos:column="32"/></literal></expr>;<pos:position pos:line="429" pos:column="33"/></condition> <incr><expr><name pos:line="429" pos:column="34">pass<pos:position pos:line="429" pos:column="38"/></name><operator pos:line="429" pos:column="38">++<pos:position pos:line="429" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="429" pos:column="41"/></control> <block pos:line="429" pos:column="42">{
		<comment type="block" pos:line="430" pos:column="17">/* pass 0 counts and allocates, pass 1 fills... */</comment>
		<expr_stmt><expr><name pos:line="431" pos:column="17">cp<pos:position pos:line="431" pos:column="19"/></name> <operator pos:line="431" pos:column="20">=<pos:position pos:line="431" pos:column="21"/></operator> <name pos:line="431" pos:column="22">ls_remote_result<pos:position pos:line="431" pos:column="38"/></name></expr>;<pos:position pos:line="431" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="432" pos:column="17">i<pos:position pos:line="432" pos:column="18"/></name> <operator pos:line="432" pos:column="19">=<pos:position pos:line="432" pos:column="20"/></operator> <literal type="number" pos:line="432" pos:column="21">0<pos:position pos:line="432" pos:column="22"/></literal></expr>;<pos:position pos:line="432" pos:column="23"/></expr_stmt>
		<while pos:line="433" pos:column="17">while <condition pos:line="433" pos:column="23">(<expr><literal type="number" pos:line="433" pos:column="24">1<pos:position pos:line="433" pos:column="25"/></literal></expr>)<pos:position pos:line="433" pos:column="26"/></condition> <block pos:line="433" pos:column="27">{
			<decl_stmt><decl><type><specifier pos:line="434" pos:column="25">const<pos:position pos:line="434" pos:column="30"/></specifier> <name pos:line="434" pos:column="31">char<pos:position pos:line="434" pos:column="35"/></name> <modifier pos:line="434" pos:column="36">*<pos:position pos:line="434" pos:column="37"/></modifier></type><name pos:line="434" pos:column="37">np<pos:position pos:line="434" pos:column="39"/></name></decl>;<pos:position pos:line="434" pos:column="40"/></decl_stmt>
			<while pos:line="435" pos:column="25">while <condition pos:line="435" pos:column="31">(<expr><operator pos:line="435" pos:column="32">*<pos:position pos:line="435" pos:column="33"/></operator><name pos:line="435" pos:column="33">cp<pos:position pos:line="435" pos:column="35"/></name> <operator pos:line="435" pos:column="36">&amp;&amp;<pos:position pos:line="435" pos:column="46"/></operator> <call><name pos:line="435" pos:column="39">isspace<pos:position pos:line="435" pos:column="46"/></name><argument_list pos:line="435" pos:column="46">(<argument><expr><operator pos:line="435" pos:column="47">*<pos:position pos:line="435" pos:column="48"/></operator><name pos:line="435" pos:column="48">cp<pos:position pos:line="435" pos:column="50"/></name></expr></argument>)<pos:position pos:line="435" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="435" pos:column="52"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="436" pos:column="33">cp<pos:position pos:line="436" pos:column="35"/></name><operator pos:line="436" pos:column="35">++<pos:position pos:line="436" pos:column="37"/></operator></expr>;<pos:position pos:line="436" pos:column="38"/></expr_stmt></block></while>
			<if pos:line="437" pos:column="25">if <condition pos:line="437" pos:column="28">(<expr><operator pos:line="437" pos:column="29">!<pos:position pos:line="437" pos:column="30"/></operator><operator pos:line="437" pos:column="30">*<pos:position pos:line="437" pos:column="31"/></operator><name pos:line="437" pos:column="31">cp<pos:position pos:line="437" pos:column="33"/></name></expr>)<pos:position pos:line="437" pos:column="34"/></condition><then pos:line="437" pos:column="34">
				<block type="pseudo"><break pos:line="438" pos:column="33">break;<pos:position pos:line="438" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="439" pos:column="25">np<pos:position pos:line="439" pos:column="27"/></name> <operator pos:line="439" pos:column="28">=<pos:position pos:line="439" pos:column="29"/></operator> <call><name pos:line="439" pos:column="30">strchrnul<pos:position pos:line="439" pos:column="39"/></name><argument_list pos:line="439" pos:column="39">(<argument><expr><name pos:line="439" pos:column="40">cp<pos:position pos:line="439" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="439" pos:column="44">'\n'<pos:position pos:line="439" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="50"/></expr_stmt>
			<if pos:line="440" pos:column="25">if <condition pos:line="440" pos:column="28">(<expr><name pos:line="440" pos:column="29">pass<pos:position pos:line="440" pos:column="33"/></name></expr>)<pos:position pos:line="440" pos:column="34"/></condition><then pos:line="440" pos:column="34"> <block pos:line="440" pos:column="35">{
				<expr_stmt><expr><name><name pos:line="441" pos:column="33">lrr_list<pos:position pos:line="441" pos:column="41"/></name><index pos:line="441" pos:column="41">[<expr><name pos:line="441" pos:column="42">i<pos:position pos:line="441" pos:column="43"/></name></expr>]<pos:position pos:line="441" pos:column="44"/></index></name><operator pos:line="441" pos:column="44">.<pos:position pos:line="441" pos:column="45"/></operator><name pos:line="441" pos:column="45">line<pos:position pos:line="441" pos:column="49"/></name> <operator pos:line="441" pos:column="50">=<pos:position pos:line="441" pos:column="51"/></operator> <name pos:line="441" pos:column="52">cp<pos:position pos:line="441" pos:column="54"/></name></expr>;<pos:position pos:line="441" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="442" pos:column="33">lrr_list<pos:position pos:line="442" pos:column="41"/></name><index pos:line="442" pos:column="41">[<expr><name pos:line="442" pos:column="42">i<pos:position pos:line="442" pos:column="43"/></name></expr>]<pos:position pos:line="442" pos:column="44"/></index></name><operator pos:line="442" pos:column="44">.<pos:position pos:line="442" pos:column="45"/></operator><name pos:line="442" pos:column="45">name<pos:position pos:line="442" pos:column="49"/></name> <operator pos:line="442" pos:column="50">=<pos:position pos:line="442" pos:column="51"/></operator> <name pos:line="442" pos:column="52">cp<pos:position pos:line="442" pos:column="54"/></name> <operator pos:line="442" pos:column="55">+<pos:position pos:line="442" pos:column="56"/></operator> <literal type="number" pos:line="442" pos:column="57">41<pos:position pos:line="442" pos:column="59"/></literal></expr>;<pos:position pos:line="442" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="443" pos:column="33">lrr_list<pos:position pos:line="443" pos:column="41"/></name><index pos:line="443" pos:column="41">[<expr><name pos:line="443" pos:column="42">i<pos:position pos:line="443" pos:column="43"/></name></expr>]<pos:position pos:line="443" pos:column="44"/></index></name><operator pos:line="443" pos:column="44">.<pos:position pos:line="443" pos:column="45"/></operator><name pos:line="443" pos:column="45">namelen<pos:position pos:line="443" pos:column="52"/></name> <operator pos:line="443" pos:column="53">=<pos:position pos:line="443" pos:column="54"/></operator> <name pos:line="443" pos:column="55">np<pos:position pos:line="443" pos:column="57"/></name> <operator pos:line="443" pos:column="58">-<pos:position pos:line="443" pos:column="59"/></operator> <operator pos:line="443" pos:column="60">(<pos:position pos:line="443" pos:column="61"/></operator><name pos:line="443" pos:column="61">cp<pos:position pos:line="443" pos:column="63"/></name> <operator pos:line="443" pos:column="64">+<pos:position pos:line="443" pos:column="65"/></operator> <literal type="number" pos:line="443" pos:column="66">41<pos:position pos:line="443" pos:column="68"/></literal><operator pos:line="443" pos:column="68">)<pos:position pos:line="443" pos:column="69"/></operator></expr>;<pos:position pos:line="443" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="444" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="445" pos:column="25">i<pos:position pos:line="445" pos:column="26"/></name><operator pos:line="445" pos:column="26">++<pos:position pos:line="445" pos:column="28"/></operator></expr>;<pos:position pos:line="445" pos:column="29"/></expr_stmt>
			<expr_stmt><expr><name pos:line="446" pos:column="25">cp<pos:position pos:line="446" pos:column="27"/></name> <operator pos:line="446" pos:column="28">=<pos:position pos:line="446" pos:column="29"/></operator> <name pos:line="446" pos:column="30">np<pos:position pos:line="446" pos:column="32"/></name></expr>;<pos:position pos:line="446" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="447" pos:column="18"/></block></while>
		<if pos:line="448" pos:column="17">if <condition pos:line="448" pos:column="20">(<expr><operator pos:line="448" pos:column="21">!<pos:position pos:line="448" pos:column="22"/></operator><name pos:line="448" pos:column="22">pass<pos:position pos:line="448" pos:column="26"/></name></expr>)<pos:position pos:line="448" pos:column="27"/></condition><then pos:line="448" pos:column="27"> <block pos:line="448" pos:column="28">{
			<expr_stmt><expr><name pos:line="449" pos:column="25">lrr_count<pos:position pos:line="449" pos:column="34"/></name> <operator pos:line="449" pos:column="35">=<pos:position pos:line="449" pos:column="36"/></operator> <name pos:line="449" pos:column="37">i<pos:position pos:line="449" pos:column="38"/></name></expr>;<pos:position pos:line="449" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="450" pos:column="25">lrr_list<pos:position pos:line="450" pos:column="33"/></name> <operator pos:line="450" pos:column="34">=<pos:position pos:line="450" pos:column="35"/></operator> <call><name pos:line="450" pos:column="36">xcalloc<pos:position pos:line="450" pos:column="43"/></name><argument_list pos:line="450" pos:column="43">(<argument><expr><name pos:line="450" pos:column="44">lrr_count<pos:position pos:line="450" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="450" pos:column="55">sizeof<argument_list pos:line="450" pos:column="61">(<argument><expr><operator pos:line="450" pos:column="62">*<pos:position pos:line="450" pos:column="63"/></operator><name pos:line="450" pos:column="63">lrr_list<pos:position pos:line="450" pos:column="71"/></name></expr></argument>)<pos:position pos:line="450" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="450" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="451" pos:column="18"/></block></then></if>
	}<pos:position pos:line="452" pos:column="10"/></block></for>

	<while pos:line="454" pos:column="9">while <condition pos:line="454" pos:column="15">(<expr><literal type="number" pos:line="454" pos:column="16">1<pos:position pos:line="454" pos:column="17"/></literal></expr>)<pos:position pos:line="454" pos:column="18"/></condition> <block pos:line="454" pos:column="19">{
		<decl_stmt><decl><type><specifier pos:line="455" pos:column="17">const<pos:position pos:line="455" pos:column="22"/></specifier> <name pos:line="455" pos:column="23">char<pos:position pos:line="455" pos:column="27"/></name> <modifier pos:line="455" pos:column="28">*<pos:position pos:line="455" pos:column="29"/></modifier></type><name pos:line="455" pos:column="29">next<pos:position pos:line="455" pos:column="33"/></name></decl>;<pos:position pos:line="455" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="456" pos:column="17">int<pos:position pos:line="456" pos:column="20"/></name></type> <name pos:line="456" pos:column="21">rreflen<pos:position pos:line="456" pos:column="28"/></name></decl>;<pos:position pos:line="456" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="457" pos:column="17">int<pos:position pos:line="457" pos:column="20"/></name></type> <name pos:line="457" pos:column="21">i<pos:position pos:line="457" pos:column="22"/></name></decl>;<pos:position pos:line="457" pos:column="23"/></decl_stmt>

		<while pos:line="459" pos:column="17">while <condition pos:line="459" pos:column="23">(<expr><operator pos:line="459" pos:column="24">*<pos:position pos:line="459" pos:column="25"/></operator><name pos:line="459" pos:column="25">rref<pos:position pos:line="459" pos:column="29"/></name> <operator pos:line="459" pos:column="30">&amp;&amp;<pos:position pos:line="459" pos:column="40"/></operator> <call><name pos:line="459" pos:column="33">isspace<pos:position pos:line="459" pos:column="40"/></name><argument_list pos:line="459" pos:column="40">(<argument><expr><operator pos:line="459" pos:column="41">*<pos:position pos:line="459" pos:column="42"/></operator><name pos:line="459" pos:column="42">rref<pos:position pos:line="459" pos:column="46"/></name></expr></argument>)<pos:position pos:line="459" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="459" pos:column="48"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="460" pos:column="25">rref<pos:position pos:line="460" pos:column="29"/></name><operator pos:line="460" pos:column="29">++<pos:position pos:line="460" pos:column="31"/></operator></expr>;<pos:position pos:line="460" pos:column="32"/></expr_stmt></block></while>
		<if pos:line="461" pos:column="17">if <condition pos:line="461" pos:column="20">(<expr><operator pos:line="461" pos:column="21">!<pos:position pos:line="461" pos:column="22"/></operator><operator pos:line="461" pos:column="22">*<pos:position pos:line="461" pos:column="23"/></operator><name pos:line="461" pos:column="23">rref<pos:position pos:line="461" pos:column="27"/></name></expr>)<pos:position pos:line="461" pos:column="28"/></condition><then pos:line="461" pos:column="28">
			<block type="pseudo"><break pos:line="462" pos:column="25">break;<pos:position pos:line="462" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="463" pos:column="17">next<pos:position pos:line="463" pos:column="21"/></name> <operator pos:line="463" pos:column="22">=<pos:position pos:line="463" pos:column="23"/></operator> <call><name pos:line="463" pos:column="24">strchrnul<pos:position pos:line="463" pos:column="33"/></name><argument_list pos:line="463" pos:column="33">(<argument><expr><name pos:line="463" pos:column="34">rref<pos:position pos:line="463" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="463" pos:column="40">'\n'<pos:position pos:line="463" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="463" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="463" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="464" pos:column="17">rreflen<pos:position pos:line="464" pos:column="24"/></name> <operator pos:line="464" pos:column="25">=<pos:position pos:line="464" pos:column="26"/></operator> <name pos:line="464" pos:column="27">next<pos:position pos:line="464" pos:column="31"/></name> <operator pos:line="464" pos:column="32">-<pos:position pos:line="464" pos:column="33"/></operator> <name pos:line="464" pos:column="34">rref<pos:position pos:line="464" pos:column="38"/></name></expr>;<pos:position pos:line="464" pos:column="39"/></expr_stmt>

		<for pos:line="466" pos:column="17">for <control pos:line="466" pos:column="21">(<init><expr><name pos:line="466" pos:column="22">i<pos:position pos:line="466" pos:column="23"/></name> <operator pos:line="466" pos:column="24">=<pos:position pos:line="466" pos:column="25"/></operator> <literal type="number" pos:line="466" pos:column="26">0<pos:position pos:line="466" pos:column="27"/></literal></expr>;<pos:position pos:line="466" pos:column="28"/></init> <condition><expr><name pos:line="466" pos:column="29">i<pos:position pos:line="466" pos:column="30"/></name> <operator pos:line="466" pos:column="31">&lt;<pos:position pos:line="466" pos:column="35"/></operator> <name pos:line="466" pos:column="33">lrr_count<pos:position pos:line="466" pos:column="42"/></name></expr>;<pos:position pos:line="466" pos:column="43"/></condition> <incr><expr><name pos:line="466" pos:column="44">i<pos:position pos:line="466" pos:column="45"/></name><operator pos:line="466" pos:column="45">++<pos:position pos:line="466" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="466" pos:column="48"/></control> <block pos:line="466" pos:column="49">{
			<decl_stmt><decl><type><name><name pos:line="467" pos:column="25">struct<pos:position pos:line="467" pos:column="31"/></name> <name pos:line="467" pos:column="32">lrr<pos:position pos:line="467" pos:column="35"/></name></name> <modifier pos:line="467" pos:column="36">*<pos:position pos:line="467" pos:column="37"/></modifier></type><name pos:line="467" pos:column="37">lrr<pos:position pos:line="467" pos:column="40"/></name> <init pos:line="467" pos:column="41">= <expr><operator pos:line="467" pos:column="43">&amp;<pos:position pos:line="467" pos:column="48"/></operator><operator pos:line="467" pos:column="44">(<pos:position pos:line="467" pos:column="45"/></operator><name><name pos:line="467" pos:column="45">lrr_list<pos:position pos:line="467" pos:column="53"/></name><index pos:line="467" pos:column="53">[<expr><name pos:line="467" pos:column="54">i<pos:position pos:line="467" pos:column="55"/></name></expr>]<pos:position pos:line="467" pos:column="56"/></index></name><operator pos:line="467" pos:column="56">)<pos:position pos:line="467" pos:column="57"/></operator></expr></init></decl>;<pos:position pos:line="467" pos:column="58"/></decl_stmt>

			<if pos:line="469" pos:column="25">if <condition pos:line="469" pos:column="28">(<expr><name pos:line="469" pos:column="29">rreflen<pos:position pos:line="469" pos:column="36"/></name> <operator pos:line="469" pos:column="37">==<pos:position pos:line="469" pos:column="39"/></operator> <name><name pos:line="469" pos:column="40">lrr<pos:position pos:line="469" pos:column="43"/></name><operator pos:line="469" pos:column="43">-&gt;<pos:position pos:line="469" pos:column="48"/></operator><name pos:line="469" pos:column="45">namelen<pos:position pos:line="469" pos:column="52"/></name></name> <operator pos:line="469" pos:column="53">&amp;&amp;<pos:position pos:line="469" pos:column="63"/></operator>
			    <operator pos:line="470" pos:column="29">!<pos:position pos:line="470" pos:column="30"/></operator><call><name pos:line="470" pos:column="30">memcmp<pos:position pos:line="470" pos:column="36"/></name><argument_list pos:line="470" pos:column="36">(<argument><expr><name><name pos:line="470" pos:column="37">lrr<pos:position pos:line="470" pos:column="40"/></name><operator pos:line="470" pos:column="40">-&gt;<pos:position pos:line="470" pos:column="45"/></operator><name pos:line="470" pos:column="42">name<pos:position pos:line="470" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="48">rref<pos:position pos:line="470" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="54">rreflen<pos:position pos:line="470" pos:column="61"/></name></expr></argument>)<pos:position pos:line="470" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="470" pos:column="63"/></condition><then pos:line="470" pos:column="63"> <block pos:line="470" pos:column="64">{
				<if pos:line="471" pos:column="33">if <condition pos:line="471" pos:column="36">(<expr><operator pos:line="471" pos:column="37">!<pos:position pos:line="471" pos:column="38"/></operator><name><name pos:line="471" pos:column="38">lrr<pos:position pos:line="471" pos:column="41"/></name><operator pos:line="471" pos:column="41">-&gt;<pos:position pos:line="471" pos:column="46"/></operator><name pos:line="471" pos:column="43">shown<pos:position pos:line="471" pos:column="48"/></name></name></expr>)<pos:position pos:line="471" pos:column="49"/></condition><then pos:line="471" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="472" pos:column="41">printf<pos:position pos:line="472" pos:column="47"/></name><argument_list pos:line="472" pos:column="47">(<argument><expr><literal type="string" pos:line="472" pos:column="48">"%.*s\n"<pos:position pos:line="472" pos:column="56"/></literal></expr></argument>,
					       <argument><expr><ternary><condition><expr><name pos:line="473" pos:column="48">sha1_only<pos:position pos:line="473" pos:column="57"/></name></expr> ?<pos:position pos:line="473" pos:column="59"/></condition><then pos:line="473" pos:column="59"> <expr><literal type="number" pos:line="473" pos:column="60">40<pos:position pos:line="473" pos:column="62"/></literal></expr> <pos:position pos:line="473" pos:column="63"/></then><else pos:line="473" pos:column="63">: <expr><name><name pos:line="473" pos:column="65">lrr<pos:position pos:line="473" pos:column="68"/></name><operator pos:line="473" pos:column="68">-&gt;<pos:position pos:line="473" pos:column="73"/></operator><name pos:line="473" pos:column="70">namelen<pos:position pos:line="473" pos:column="77"/></name></name> <operator pos:line="473" pos:column="78">+<pos:position pos:line="473" pos:column="79"/></operator> <literal type="number" pos:line="473" pos:column="80">41<pos:position pos:line="473" pos:column="82"/></literal></expr></else></ternary></expr></argument>,
					       <argument><expr><name><name pos:line="474" pos:column="48">lrr<pos:position pos:line="474" pos:column="51"/></name><operator pos:line="474" pos:column="51">-&gt;<pos:position pos:line="474" pos:column="56"/></operator><name pos:line="474" pos:column="53">line<pos:position pos:line="474" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="474" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="474" pos:column="59"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="475" pos:column="33">lrr<pos:position pos:line="475" pos:column="36"/></name><operator pos:line="475" pos:column="36">-&gt;<pos:position pos:line="475" pos:column="41"/></operator><name pos:line="475" pos:column="38">shown<pos:position pos:line="475" pos:column="43"/></name></name> <operator pos:line="475" pos:column="44">=<pos:position pos:line="475" pos:column="45"/></operator> <literal type="number" pos:line="475" pos:column="46">1<pos:position pos:line="475" pos:column="47"/></literal></expr>;<pos:position pos:line="475" pos:column="48"/></expr_stmt>
				<break pos:line="476" pos:column="33">break;<pos:position pos:line="476" pos:column="39"/></break>
			}<pos:position pos:line="477" pos:column="26"/></block></then></if>
		}<pos:position pos:line="478" pos:column="18"/></block></for>
		<if pos:line="479" pos:column="17">if <condition pos:line="479" pos:column="20">(<expr><name pos:line="479" pos:column="21">lrr_count<pos:position pos:line="479" pos:column="30"/></name> <operator pos:line="479" pos:column="31">&lt;=<pos:position pos:line="479" pos:column="36"/></operator> <name pos:line="479" pos:column="34">i<pos:position pos:line="479" pos:column="35"/></name></expr>)<pos:position pos:line="479" pos:column="36"/></condition><then pos:line="479" pos:column="36"> <block pos:line="479" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="480" pos:column="25">error<pos:position pos:line="480" pos:column="30"/></name><argument_list pos:line="480" pos:column="30">(<argument><expr><literal type="string" pos:line="480" pos:column="31">"pick-rref: %.*s not found"<pos:position pos:line="480" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="480" pos:column="60">rreflen<pos:position pos:line="480" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="480" pos:column="69">rref<pos:position pos:line="480" pos:column="73"/></name></expr></argument>)<pos:position pos:line="480" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name pos:line="481" pos:column="25">err<pos:position pos:line="481" pos:column="28"/></name> <operator pos:line="481" pos:column="29">=<pos:position pos:line="481" pos:column="30"/></operator> <literal type="number" pos:line="481" pos:column="31">1<pos:position pos:line="481" pos:column="32"/></literal></expr>;<pos:position pos:line="481" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="482" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="483" pos:column="17">rref<pos:position pos:line="483" pos:column="21"/></name> <operator pos:line="483" pos:column="22">=<pos:position pos:line="483" pos:column="23"/></operator> <name pos:line="483" pos:column="24">next<pos:position pos:line="483" pos:column="28"/></name></expr>;<pos:position pos:line="483" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="484" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="485" pos:column="9">free<pos:position pos:line="485" pos:column="13"/></name><argument_list pos:line="485" pos:column="13">(<argument><expr><name pos:line="485" pos:column="14">lrr_list<pos:position pos:line="485" pos:column="22"/></name></expr></argument>)<pos:position pos:line="485" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="485" pos:column="24"/></expr_stmt>
	<return pos:line="486" pos:column="9">return <expr><name pos:line="486" pos:column="16">err<pos:position pos:line="486" pos:column="19"/></name></expr>;<pos:position pos:line="486" pos:column="20"/></return>
}<pos:position pos:line="487" pos:column="2"/></block></function>

<function><type><name pos:line="489" pos:column="1">int<pos:position pos:line="489" pos:column="4"/></name></type> <name pos:line="489" pos:column="5">cmd_fetch__tool<pos:position pos:line="489" pos:column="20"/></name><parameter_list pos:line="489" pos:column="20">(<parameter><decl><type><name pos:line="489" pos:column="21">int<pos:position pos:line="489" pos:column="24"/></name></type> <name pos:line="489" pos:column="25">argc<pos:position pos:line="489" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="489" pos:column="31">const<pos:position pos:line="489" pos:column="36"/></specifier> <name pos:line="489" pos:column="37">char<pos:position pos:line="489" pos:column="41"/></name> <modifier pos:line="489" pos:column="42">*<pos:position pos:line="489" pos:column="43"/></modifier><modifier pos:line="489" pos:column="43">*<pos:position pos:line="489" pos:column="44"/></modifier></type><name pos:line="489" pos:column="44">argv<pos:position pos:line="489" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="489" pos:column="50">const<pos:position pos:line="489" pos:column="55"/></specifier> <name pos:line="489" pos:column="56">char<pos:position pos:line="489" pos:column="60"/></name> <modifier pos:line="489" pos:column="61">*<pos:position pos:line="489" pos:column="62"/></modifier></type><name pos:line="489" pos:column="62">prefix<pos:position pos:line="489" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="489" pos:column="69"/></parameter_list>
<block pos:line="490" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="491" pos:column="9">int<pos:position pos:line="491" pos:column="12"/></name></type> <name pos:line="491" pos:column="13">verbose<pos:position pos:line="491" pos:column="20"/></name> <init pos:line="491" pos:column="21">= <expr><literal type="number" pos:line="491" pos:column="23">0<pos:position pos:line="491" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="491" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="492" pos:column="9">int<pos:position pos:line="492" pos:column="12"/></name></type> <name pos:line="492" pos:column="13">force<pos:position pos:line="492" pos:column="18"/></name> <init pos:line="492" pos:column="19">= <expr><literal type="number" pos:line="492" pos:column="21">0<pos:position pos:line="492" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="492" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="493" pos:column="9">int<pos:position pos:line="493" pos:column="12"/></name></type> <name pos:line="493" pos:column="13">sopt<pos:position pos:line="493" pos:column="17"/></name> <init pos:line="493" pos:column="18">= <expr><literal type="number" pos:line="493" pos:column="20">0<pos:position pos:line="493" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="493" pos:column="22"/></decl_stmt>

	<while pos:line="495" pos:column="9">while <condition pos:line="495" pos:column="15">(<expr><literal type="number" pos:line="495" pos:column="16">1<pos:position pos:line="495" pos:column="17"/></literal> <operator pos:line="495" pos:column="18">&lt;<pos:position pos:line="495" pos:column="22"/></operator> <name pos:line="495" pos:column="20">argc<pos:position pos:line="495" pos:column="24"/></name></expr>)<pos:position pos:line="495" pos:column="25"/></condition> <block pos:line="495" pos:column="26">{
		<decl_stmt><decl><type><specifier pos:line="496" pos:column="17">const<pos:position pos:line="496" pos:column="22"/></specifier> <name pos:line="496" pos:column="23">char<pos:position pos:line="496" pos:column="27"/></name> <modifier pos:line="496" pos:column="28">*<pos:position pos:line="496" pos:column="29"/></modifier></type><name pos:line="496" pos:column="29">arg<pos:position pos:line="496" pos:column="32"/></name> <init pos:line="496" pos:column="33">= <expr><name><name pos:line="496" pos:column="35">argv<pos:position pos:line="496" pos:column="39"/></name><index pos:line="496" pos:column="39">[<expr><literal type="number" pos:line="496" pos:column="40">1<pos:position pos:line="496" pos:column="41"/></literal></expr>]<pos:position pos:line="496" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="496" pos:column="43"/></decl_stmt>
		<if pos:line="497" pos:column="17">if <condition pos:line="497" pos:column="20">(<expr><operator pos:line="497" pos:column="21">!<pos:position pos:line="497" pos:column="22"/></operator><call><name pos:line="497" pos:column="22">strcmp<pos:position pos:line="497" pos:column="28"/></name><argument_list pos:line="497" pos:column="28">(<argument><expr><literal type="string" pos:line="497" pos:column="29">"-v"<pos:position pos:line="497" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="497" pos:column="35">arg<pos:position pos:line="497" pos:column="38"/></name></expr></argument>)<pos:position pos:line="497" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="497" pos:column="40"/></condition><then pos:line="497" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name pos:line="498" pos:column="25">verbose<pos:position pos:line="498" pos:column="32"/></name> <operator pos:line="498" pos:column="33">=<pos:position pos:line="498" pos:column="34"/></operator> <literal type="number" pos:line="498" pos:column="35">1<pos:position pos:line="498" pos:column="36"/></literal></expr>;<pos:position pos:line="498" pos:column="37"/></expr_stmt></block></then>
		<elseif pos:line="499" pos:column="17">else <if pos:line="499" pos:column="22">if <condition pos:line="499" pos:column="25">(<expr><operator pos:line="499" pos:column="26">!<pos:position pos:line="499" pos:column="27"/></operator><call><name pos:line="499" pos:column="27">strcmp<pos:position pos:line="499" pos:column="33"/></name><argument_list pos:line="499" pos:column="33">(<argument><expr><literal type="string" pos:line="499" pos:column="34">"-f"<pos:position pos:line="499" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="499" pos:column="40">arg<pos:position pos:line="499" pos:column="43"/></name></expr></argument>)<pos:position pos:line="499" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="499" pos:column="45"/></condition><then pos:line="499" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name pos:line="500" pos:column="25">force<pos:position pos:line="500" pos:column="30"/></name> <operator pos:line="500" pos:column="31">=<pos:position pos:line="500" pos:column="32"/></operator> <literal type="number" pos:line="500" pos:column="33">1<pos:position pos:line="500" pos:column="34"/></literal></expr>;<pos:position pos:line="500" pos:column="35"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="501" pos:column="17">else <if pos:line="501" pos:column="22">if <condition pos:line="501" pos:column="25">(<expr><operator pos:line="501" pos:column="26">!<pos:position pos:line="501" pos:column="27"/></operator><call><name pos:line="501" pos:column="27">strcmp<pos:position pos:line="501" pos:column="33"/></name><argument_list pos:line="501" pos:column="33">(<argument><expr><literal type="string" pos:line="501" pos:column="34">"-s"<pos:position pos:line="501" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="501" pos:column="40">arg<pos:position pos:line="501" pos:column="43"/></name></expr></argument>)<pos:position pos:line="501" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="501" pos:column="45"/></condition><then pos:line="501" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name pos:line="502" pos:column="25">sopt<pos:position pos:line="502" pos:column="29"/></name> <operator pos:line="502" pos:column="30">=<pos:position pos:line="502" pos:column="31"/></operator> <literal type="number" pos:line="502" pos:column="32">1<pos:position pos:line="502" pos:column="33"/></literal></expr>;<pos:position pos:line="502" pos:column="34"/></expr_stmt></block></then></if></elseif>
		<else pos:line="503" pos:column="17">else
			<block type="pseudo"><break pos:line="504" pos:column="25">break;<pos:position pos:line="504" pos:column="31"/></break></block></else></if>
		<expr_stmt><expr><name pos:line="505" pos:column="17">argc<pos:position pos:line="505" pos:column="21"/></name><operator pos:line="505" pos:column="21">--<pos:position pos:line="505" pos:column="23"/></operator></expr>;<pos:position pos:line="505" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="506" pos:column="17">argv<pos:position pos:line="506" pos:column="21"/></name><operator pos:line="506" pos:column="21">++<pos:position pos:line="506" pos:column="23"/></operator></expr>;<pos:position pos:line="506" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="507" pos:column="10"/></block></while>

	<if pos:line="509" pos:column="9">if <condition pos:line="509" pos:column="12">(<expr><name pos:line="509" pos:column="13">argc<pos:position pos:line="509" pos:column="17"/></name> <operator pos:line="509" pos:column="18">&lt;=<pos:position pos:line="509" pos:column="23"/></operator> <literal type="number" pos:line="509" pos:column="21">1<pos:position pos:line="509" pos:column="22"/></literal></expr>)<pos:position pos:line="509" pos:column="23"/></condition><then pos:line="509" pos:column="23">
		<block type="pseudo"><return pos:line="510" pos:column="17">return <expr><call><name pos:line="510" pos:column="24">error<pos:position pos:line="510" pos:column="29"/></name><argument_list pos:line="510" pos:column="29">(<argument><expr><literal type="string" pos:line="510" pos:column="30">"Missing subcommand"<pos:position pos:line="510" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="510" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="510" pos:column="52"/></return></block></then></if>

	<if pos:line="512" pos:column="9">if <condition pos:line="512" pos:column="12">(<expr><operator pos:line="512" pos:column="13">!<pos:position pos:line="512" pos:column="14"/></operator><call><name pos:line="512" pos:column="14">strcmp<pos:position pos:line="512" pos:column="20"/></name><argument_list pos:line="512" pos:column="20">(<argument><expr><literal type="string" pos:line="512" pos:column="21">"append-fetch-head"<pos:position pos:line="512" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="512" pos:column="42">argv<pos:position pos:line="512" pos:column="46"/></name><index pos:line="512" pos:column="46">[<expr><literal type="number" pos:line="512" pos:column="47">1<pos:position pos:line="512" pos:column="48"/></literal></expr>]<pos:position pos:line="512" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="512" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="512" pos:column="51"/></condition><then pos:line="512" pos:column="51"> <block pos:line="512" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="513" pos:column="17">int<pos:position pos:line="513" pos:column="20"/></name></type> <name pos:line="513" pos:column="21">result<pos:position pos:line="513" pos:column="27"/></name></decl>;<pos:position pos:line="513" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="514" pos:column="17">FILE<pos:position pos:line="514" pos:column="21"/></name> <modifier pos:line="514" pos:column="22">*<pos:position pos:line="514" pos:column="23"/></modifier></type><name pos:line="514" pos:column="23">fp<pos:position pos:line="514" pos:column="25"/></name></decl>;<pos:position pos:line="514" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="515" pos:column="17">char<pos:position pos:line="515" pos:column="21"/></name> <modifier pos:line="515" pos:column="22">*<pos:position pos:line="515" pos:column="23"/></modifier></type><name pos:line="515" pos:column="23">filename<pos:position pos:line="515" pos:column="31"/></name></decl>;<pos:position pos:line="515" pos:column="32"/></decl_stmt>

		<if pos:line="517" pos:column="17">if <condition pos:line="517" pos:column="20">(<expr><name pos:line="517" pos:column="21">argc<pos:position pos:line="517" pos:column="25"/></name> <operator pos:line="517" pos:column="26">!=<pos:position pos:line="517" pos:column="28"/></operator> <literal type="number" pos:line="517" pos:column="29">8<pos:position pos:line="517" pos:column="30"/></literal></expr>)<pos:position pos:line="517" pos:column="31"/></condition><then pos:line="517" pos:column="31">
			<block type="pseudo"><return pos:line="518" pos:column="25">return <expr><call><name pos:line="518" pos:column="32">error<pos:position pos:line="518" pos:column="37"/></name><argument_list pos:line="518" pos:column="37">(<argument><expr><literal type="string" pos:line="518" pos:column="38">"append-fetch-head takes 6 args"<pos:position pos:line="518" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="518" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="518" pos:column="72"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="519" pos:column="17">filename<pos:position pos:line="519" pos:column="25"/></name> <operator pos:line="519" pos:column="26">=<pos:position pos:line="519" pos:column="27"/></operator> <call><name pos:line="519" pos:column="28">git_path_fetch_head<pos:position pos:line="519" pos:column="47"/></name><argument_list pos:line="519" pos:column="47">()<pos:position pos:line="519" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="519" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="520" pos:column="17">fp<pos:position pos:line="520" pos:column="19"/></name> <operator pos:line="520" pos:column="20">=<pos:position pos:line="520" pos:column="21"/></operator> <call><name pos:line="520" pos:column="22">fopen<pos:position pos:line="520" pos:column="27"/></name><argument_list pos:line="520" pos:column="27">(<argument><expr><name pos:line="520" pos:column="28">filename<pos:position pos:line="520" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="520" pos:column="38">"a"<pos:position pos:line="520" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="520" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="43"/></expr_stmt>
		<if pos:line="521" pos:column="17">if <condition pos:line="521" pos:column="20">(<expr><operator pos:line="521" pos:column="21">!<pos:position pos:line="521" pos:column="22"/></operator><name pos:line="521" pos:column="22">fp<pos:position pos:line="521" pos:column="24"/></name></expr>)<pos:position pos:line="521" pos:column="25"/></condition><then pos:line="521" pos:column="25">
			<block type="pseudo"><return pos:line="522" pos:column="25">return <expr><call><name pos:line="522" pos:column="32">error<pos:position pos:line="522" pos:column="37"/></name><argument_list pos:line="522" pos:column="37">(<argument><expr><literal type="string" pos:line="522" pos:column="38">"cannot open %s: %s"<pos:position pos:line="522" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="522" pos:column="60">filename<pos:position pos:line="522" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="522" pos:column="70">strerror<pos:position pos:line="522" pos:column="78"/></name><argument_list pos:line="522" pos:column="78">(<argument><expr><name pos:line="522" pos:column="79">errno<pos:position pos:line="522" pos:column="84"/></name></expr></argument>)<pos:position pos:line="522" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="522" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="87"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="523" pos:column="17">result<pos:position pos:line="523" pos:column="23"/></name> <operator pos:line="523" pos:column="24">=<pos:position pos:line="523" pos:column="25"/></operator> <call><name pos:line="523" pos:column="26">append_fetch_head<pos:position pos:line="523" pos:column="43"/></name><argument_list pos:line="523" pos:column="43">(<argument><expr><name pos:line="523" pos:column="44">fp<pos:position pos:line="523" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="523" pos:column="48">argv<pos:position pos:line="523" pos:column="52"/></name><index pos:line="523" pos:column="52">[<expr><literal type="number" pos:line="523" pos:column="53">2<pos:position pos:line="523" pos:column="54"/></literal></expr>]<pos:position pos:line="523" pos:column="55"/></index></name></expr></argument>, <argument><expr><name><name pos:line="523" pos:column="57">argv<pos:position pos:line="523" pos:column="61"/></name><index pos:line="523" pos:column="61">[<expr><literal type="number" pos:line="523" pos:column="62">3<pos:position pos:line="523" pos:column="63"/></literal></expr>]<pos:position pos:line="523" pos:column="64"/></index></name></expr></argument>,
					   <argument><expr><name><name pos:line="524" pos:column="44">argv<pos:position pos:line="524" pos:column="48"/></name><index pos:line="524" pos:column="48">[<expr><literal type="number" pos:line="524" pos:column="49">4<pos:position pos:line="524" pos:column="50"/></literal></expr>]<pos:position pos:line="524" pos:column="51"/></index></name></expr></argument>, <argument><expr><name><name pos:line="524" pos:column="53">argv<pos:position pos:line="524" pos:column="57"/></name><index pos:line="524" pos:column="57">[<expr><literal type="number" pos:line="524" pos:column="58">5<pos:position pos:line="524" pos:column="59"/></literal></expr>]<pos:position pos:line="524" pos:column="60"/></index></name></expr></argument>,
					   <argument><expr><name><name pos:line="525" pos:column="44">argv<pos:position pos:line="525" pos:column="48"/></name><index pos:line="525" pos:column="48">[<expr><literal type="number" pos:line="525" pos:column="49">6<pos:position pos:line="525" pos:column="50"/></literal></expr>]<pos:position pos:line="525" pos:column="51"/></index></name></expr></argument>, <argument><expr><operator pos:line="525" pos:column="53">!<pos:position pos:line="525" pos:column="54"/></operator><operator pos:line="525" pos:column="54">!<pos:position pos:line="525" pos:column="55"/></operator><name><name pos:line="525" pos:column="55">argv<pos:position pos:line="525" pos:column="59"/></name><index pos:line="525" pos:column="59">[<expr><literal type="number" pos:line="525" pos:column="60">7<pos:position pos:line="525" pos:column="61"/></literal></expr>]<pos:position pos:line="525" pos:column="62"/></index><index pos:line="525" pos:column="62">[<expr><literal type="number" pos:line="525" pos:column="63">0<pos:position pos:line="525" pos:column="64"/></literal></expr>]<pos:position pos:line="525" pos:column="65"/></index></name></expr></argument>,
					   <argument><expr><name pos:line="526" pos:column="44">verbose<pos:position pos:line="526" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="526" pos:column="53">force<pos:position pos:line="526" pos:column="58"/></name></expr></argument>)<pos:position pos:line="526" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="527" pos:column="17">fclose<pos:position pos:line="527" pos:column="23"/></name><argument_list pos:line="527" pos:column="23">(<argument><expr><name pos:line="527" pos:column="24">fp<pos:position pos:line="527" pos:column="26"/></name></expr></argument>)<pos:position pos:line="527" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="527" pos:column="28"/></expr_stmt>
		<return pos:line="528" pos:column="17">return <expr><name pos:line="528" pos:column="24">result<pos:position pos:line="528" pos:column="30"/></name></expr>;<pos:position pos:line="528" pos:column="31"/></return>
	}<pos:position pos:line="529" pos:column="10"/></block></then></if>
	<if pos:line="530" pos:column="9">if <condition pos:line="530" pos:column="12">(<expr><operator pos:line="530" pos:column="13">!<pos:position pos:line="530" pos:column="14"/></operator><call><name pos:line="530" pos:column="14">strcmp<pos:position pos:line="530" pos:column="20"/></name><argument_list pos:line="530" pos:column="20">(<argument><expr><literal type="string" pos:line="530" pos:column="21">"native-store"<pos:position pos:line="530" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="530" pos:column="37">argv<pos:position pos:line="530" pos:column="41"/></name><index pos:line="530" pos:column="41">[<expr><literal type="number" pos:line="530" pos:column="42">1<pos:position pos:line="530" pos:column="43"/></literal></expr>]<pos:position pos:line="530" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="530" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="530" pos:column="46"/></condition><then pos:line="530" pos:column="46"> <block pos:line="530" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="531" pos:column="17">int<pos:position pos:line="531" pos:column="20"/></name></type> <name pos:line="531" pos:column="21">result<pos:position pos:line="531" pos:column="27"/></name></decl>;<pos:position pos:line="531" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="532" pos:column="17">FILE<pos:position pos:line="532" pos:column="21"/></name> <modifier pos:line="532" pos:column="22">*<pos:position pos:line="532" pos:column="23"/></modifier></type><name pos:line="532" pos:column="23">fp<pos:position pos:line="532" pos:column="25"/></name></decl>;<pos:position pos:line="532" pos:column="26"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="533" pos:column="17">char<pos:position pos:line="533" pos:column="21"/></name> <modifier pos:line="533" pos:column="22">*<pos:position pos:line="533" pos:column="23"/></modifier></type><name pos:line="533" pos:column="23">filename<pos:position pos:line="533" pos:column="31"/></name></decl>;<pos:position pos:line="533" pos:column="32"/></decl_stmt>

		<if pos:line="535" pos:column="17">if <condition pos:line="535" pos:column="20">(<expr><name pos:line="535" pos:column="21">argc<pos:position pos:line="535" pos:column="25"/></name> <operator pos:line="535" pos:column="26">!=<pos:position pos:line="535" pos:column="28"/></operator> <literal type="number" pos:line="535" pos:column="29">5<pos:position pos:line="535" pos:column="30"/></literal></expr>)<pos:position pos:line="535" pos:column="31"/></condition><then pos:line="535" pos:column="31">
			<block type="pseudo"><return pos:line="536" pos:column="25">return <expr><call><name pos:line="536" pos:column="32">error<pos:position pos:line="536" pos:column="37"/></name><argument_list pos:line="536" pos:column="37">(<argument><expr><literal type="string" pos:line="536" pos:column="38">"fetch-native-store takes 3 args"<pos:position pos:line="536" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="536" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="536" pos:column="73"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="537" pos:column="17">filename<pos:position pos:line="537" pos:column="25"/></name> <operator pos:line="537" pos:column="26">=<pos:position pos:line="537" pos:column="27"/></operator> <call><name pos:line="537" pos:column="28">git_path_fetch_head<pos:position pos:line="537" pos:column="47"/></name><argument_list pos:line="537" pos:column="47">()<pos:position pos:line="537" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="538" pos:column="17">fp<pos:position pos:line="538" pos:column="19"/></name> <operator pos:line="538" pos:column="20">=<pos:position pos:line="538" pos:column="21"/></operator> <call><name pos:line="538" pos:column="22">fopen<pos:position pos:line="538" pos:column="27"/></name><argument_list pos:line="538" pos:column="27">(<argument><expr><name pos:line="538" pos:column="28">filename<pos:position pos:line="538" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="538" pos:column="38">"a"<pos:position pos:line="538" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="538" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="538" pos:column="43"/></expr_stmt>
		<if pos:line="539" pos:column="17">if <condition pos:line="539" pos:column="20">(<expr><operator pos:line="539" pos:column="21">!<pos:position pos:line="539" pos:column="22"/></operator><name pos:line="539" pos:column="22">fp<pos:position pos:line="539" pos:column="24"/></name></expr>)<pos:position pos:line="539" pos:column="25"/></condition><then pos:line="539" pos:column="25">
			<block type="pseudo"><return pos:line="540" pos:column="25">return <expr><call><name pos:line="540" pos:column="32">error<pos:position pos:line="540" pos:column="37"/></name><argument_list pos:line="540" pos:column="37">(<argument><expr><literal type="string" pos:line="540" pos:column="38">"cannot open %s: %s"<pos:position pos:line="540" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="540" pos:column="60">filename<pos:position pos:line="540" pos:column="68"/></name></expr></argument>, <argument><expr><call><name pos:line="540" pos:column="70">strerror<pos:position pos:line="540" pos:column="78"/></name><argument_list pos:line="540" pos:column="78">(<argument><expr><name pos:line="540" pos:column="79">errno<pos:position pos:line="540" pos:column="84"/></name></expr></argument>)<pos:position pos:line="540" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="540" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="540" pos:column="87"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="541" pos:column="17">result<pos:position pos:line="541" pos:column="23"/></name> <operator pos:line="541" pos:column="24">=<pos:position pos:line="541" pos:column="25"/></operator> <call><name pos:line="541" pos:column="26">fetch_native_store<pos:position pos:line="541" pos:column="44"/></name><argument_list pos:line="541" pos:column="44">(<argument><expr><name pos:line="541" pos:column="45">fp<pos:position pos:line="541" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="541" pos:column="49">argv<pos:position pos:line="541" pos:column="53"/></name><index pos:line="541" pos:column="53">[<expr><literal type="number" pos:line="541" pos:column="54">2<pos:position pos:line="541" pos:column="55"/></literal></expr>]<pos:position pos:line="541" pos:column="56"/></index></name></expr></argument>, <argument><expr><name><name pos:line="541" pos:column="58">argv<pos:position pos:line="541" pos:column="62"/></name><index pos:line="541" pos:column="62">[<expr><literal type="number" pos:line="541" pos:column="63">3<pos:position pos:line="541" pos:column="64"/></literal></expr>]<pos:position pos:line="541" pos:column="65"/></index></name></expr></argument>, <argument><expr><name><name pos:line="541" pos:column="67">argv<pos:position pos:line="541" pos:column="71"/></name><index pos:line="541" pos:column="71">[<expr><literal type="number" pos:line="541" pos:column="72">4<pos:position pos:line="541" pos:column="73"/></literal></expr>]<pos:position pos:line="541" pos:column="74"/></index></name></expr></argument>,
					    <argument><expr><name pos:line="542" pos:column="45">verbose<pos:position pos:line="542" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="542" pos:column="54">force<pos:position pos:line="542" pos:column="59"/></name></expr></argument>)<pos:position pos:line="542" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="542" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="543" pos:column="17">fclose<pos:position pos:line="543" pos:column="23"/></name><argument_list pos:line="543" pos:column="23">(<argument><expr><name pos:line="543" pos:column="24">fp<pos:position pos:line="543" pos:column="26"/></name></expr></argument>)<pos:position pos:line="543" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="543" pos:column="28"/></expr_stmt>
		<return pos:line="544" pos:column="17">return <expr><name pos:line="544" pos:column="24">result<pos:position pos:line="544" pos:column="30"/></name></expr>;<pos:position pos:line="544" pos:column="31"/></return>
	}<pos:position pos:line="545" pos:column="10"/></block></then></if>
	<if pos:line="546" pos:column="9">if <condition pos:line="546" pos:column="12">(<expr><operator pos:line="546" pos:column="13">!<pos:position pos:line="546" pos:column="14"/></operator><call><name pos:line="546" pos:column="14">strcmp<pos:position pos:line="546" pos:column="20"/></name><argument_list pos:line="546" pos:column="20">(<argument><expr><literal type="string" pos:line="546" pos:column="21">"parse-reflist"<pos:position pos:line="546" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="546" pos:column="38">argv<pos:position pos:line="546" pos:column="42"/></name><index pos:line="546" pos:column="42">[<expr><literal type="number" pos:line="546" pos:column="43">1<pos:position pos:line="546" pos:column="44"/></literal></expr>]<pos:position pos:line="546" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="546" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="546" pos:column="47"/></condition><then pos:line="546" pos:column="47"> <block pos:line="546" pos:column="48">{
		<decl_stmt><decl><type><specifier pos:line="547" pos:column="17">const<pos:position pos:line="547" pos:column="22"/></specifier> <name pos:line="547" pos:column="23">char<pos:position pos:line="547" pos:column="27"/></name> <modifier pos:line="547" pos:column="28">*<pos:position pos:line="547" pos:column="29"/></modifier></type><name pos:line="547" pos:column="29">reflist<pos:position pos:line="547" pos:column="36"/></name></decl>;<pos:position pos:line="547" pos:column="37"/></decl_stmt>
		<if pos:line="548" pos:column="17">if <condition pos:line="548" pos:column="20">(<expr><name pos:line="548" pos:column="21">argc<pos:position pos:line="548" pos:column="25"/></name> <operator pos:line="548" pos:column="26">!=<pos:position pos:line="548" pos:column="28"/></operator> <literal type="number" pos:line="548" pos:column="29">3<pos:position pos:line="548" pos:column="30"/></literal></expr>)<pos:position pos:line="548" pos:column="31"/></condition><then pos:line="548" pos:column="31">
			<block type="pseudo"><return pos:line="549" pos:column="25">return <expr><call><name pos:line="549" pos:column="32">error<pos:position pos:line="549" pos:column="37"/></name><argument_list pos:line="549" pos:column="37">(<argument><expr><literal type="string" pos:line="549" pos:column="38">"parse-reflist takes 1 arg"<pos:position pos:line="549" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="549" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="67"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="550" pos:column="17">reflist<pos:position pos:line="550" pos:column="24"/></name> <operator pos:line="550" pos:column="25">=<pos:position pos:line="550" pos:column="26"/></operator> <name><name pos:line="550" pos:column="27">argv<pos:position pos:line="550" pos:column="31"/></name><index pos:line="550" pos:column="31">[<expr><literal type="number" pos:line="550" pos:column="32">2<pos:position pos:line="550" pos:column="33"/></literal></expr>]<pos:position pos:line="550" pos:column="34"/></index></name></expr>;<pos:position pos:line="550" pos:column="35"/></expr_stmt>
		<if pos:line="551" pos:column="17">if <condition pos:line="551" pos:column="20">(<expr><operator pos:line="551" pos:column="21">!<pos:position pos:line="551" pos:column="22"/></operator><call><name pos:line="551" pos:column="22">strcmp<pos:position pos:line="551" pos:column="28"/></name><argument_list pos:line="551" pos:column="28">(<argument><expr><name pos:line="551" pos:column="29">reflist<pos:position pos:line="551" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="551" pos:column="38">"-"<pos:position pos:line="551" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="551" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="551" pos:column="43"/></condition><then pos:line="551" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="552" pos:column="25">reflist<pos:position pos:line="552" pos:column="32"/></name> <operator pos:line="552" pos:column="33">=<pos:position pos:line="552" pos:column="34"/></operator> <call><name pos:line="552" pos:column="35">get_stdin<pos:position pos:line="552" pos:column="44"/></name><argument_list pos:line="552" pos:column="44">()<pos:position pos:line="552" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="552" pos:column="47"/></expr_stmt></block></then></if>
		<return pos:line="553" pos:column="17">return <expr><call><name pos:line="553" pos:column="24">parse_reflist<pos:position pos:line="553" pos:column="37"/></name><argument_list pos:line="553" pos:column="37">(<argument><expr><name pos:line="553" pos:column="38">reflist<pos:position pos:line="553" pos:column="45"/></name></expr></argument>)<pos:position pos:line="553" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="553" pos:column="47"/></return>
	}<pos:position pos:line="554" pos:column="10"/></block></then></if>
	<if pos:line="555" pos:column="9">if <condition pos:line="555" pos:column="12">(<expr><operator pos:line="555" pos:column="13">!<pos:position pos:line="555" pos:column="14"/></operator><call><name pos:line="555" pos:column="14">strcmp<pos:position pos:line="555" pos:column="20"/></name><argument_list pos:line="555" pos:column="20">(<argument><expr><literal type="string" pos:line="555" pos:column="21">"pick-rref"<pos:position pos:line="555" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="555" pos:column="34">argv<pos:position pos:line="555" pos:column="38"/></name><index pos:line="555" pos:column="38">[<expr><literal type="number" pos:line="555" pos:column="39">1<pos:position pos:line="555" pos:column="40"/></literal></expr>]<pos:position pos:line="555" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="555" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="555" pos:column="43"/></condition><then pos:line="555" pos:column="43"> <block pos:line="555" pos:column="44">{
		<decl_stmt><decl><type><specifier pos:line="556" pos:column="17">const<pos:position pos:line="556" pos:column="22"/></specifier> <name pos:line="556" pos:column="23">char<pos:position pos:line="556" pos:column="27"/></name> <modifier pos:line="556" pos:column="28">*<pos:position pos:line="556" pos:column="29"/></modifier></type><name pos:line="556" pos:column="29">ls_remote_result<pos:position pos:line="556" pos:column="45"/></name></decl>;<pos:position pos:line="556" pos:column="46"/></decl_stmt>
		<if pos:line="557" pos:column="17">if <condition pos:line="557" pos:column="20">(<expr><name pos:line="557" pos:column="21">argc<pos:position pos:line="557" pos:column="25"/></name> <operator pos:line="557" pos:column="26">!=<pos:position pos:line="557" pos:column="28"/></operator> <literal type="number" pos:line="557" pos:column="29">4<pos:position pos:line="557" pos:column="30"/></literal></expr>)<pos:position pos:line="557" pos:column="31"/></condition><then pos:line="557" pos:column="31">
			<block type="pseudo"><return pos:line="558" pos:column="25">return <expr><call><name pos:line="558" pos:column="32">error<pos:position pos:line="558" pos:column="37"/></name><argument_list pos:line="558" pos:column="37">(<argument><expr><literal type="string" pos:line="558" pos:column="38">"pick-rref takes 2 args"<pos:position pos:line="558" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="558" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="558" pos:column="64"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="559" pos:column="17">ls_remote_result<pos:position pos:line="559" pos:column="33"/></name> <operator pos:line="559" pos:column="34">=<pos:position pos:line="559" pos:column="35"/></operator> <name><name pos:line="559" pos:column="36">argv<pos:position pos:line="559" pos:column="40"/></name><index pos:line="559" pos:column="40">[<expr><literal type="number" pos:line="559" pos:column="41">3<pos:position pos:line="559" pos:column="42"/></literal></expr>]<pos:position pos:line="559" pos:column="43"/></index></name></expr>;<pos:position pos:line="559" pos:column="44"/></expr_stmt>
		<if pos:line="560" pos:column="17">if <condition pos:line="560" pos:column="20">(<expr><operator pos:line="560" pos:column="21">!<pos:position pos:line="560" pos:column="22"/></operator><call><name pos:line="560" pos:column="22">strcmp<pos:position pos:line="560" pos:column="28"/></name><argument_list pos:line="560" pos:column="28">(<argument><expr><name pos:line="560" pos:column="29">ls_remote_result<pos:position pos:line="560" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="560" pos:column="47">"-"<pos:position pos:line="560" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="560" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="560" pos:column="52"/></condition><then pos:line="560" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="561" pos:column="25">ls_remote_result<pos:position pos:line="561" pos:column="41"/></name> <operator pos:line="561" pos:column="42">=<pos:position pos:line="561" pos:column="43"/></operator> <call><name pos:line="561" pos:column="44">get_stdin<pos:position pos:line="561" pos:column="53"/></name><argument_list pos:line="561" pos:column="53">()<pos:position pos:line="561" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="56"/></expr_stmt></block></then></if>
		<return pos:line="562" pos:column="17">return <expr><call><name pos:line="562" pos:column="24">pick_rref<pos:position pos:line="562" pos:column="33"/></name><argument_list pos:line="562" pos:column="33">(<argument><expr><name pos:line="562" pos:column="34">sopt<pos:position pos:line="562" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="562" pos:column="40">argv<pos:position pos:line="562" pos:column="44"/></name><index pos:line="562" pos:column="44">[<expr><literal type="number" pos:line="562" pos:column="45">2<pos:position pos:line="562" pos:column="46"/></literal></expr>]<pos:position pos:line="562" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="562" pos:column="49">ls_remote_result<pos:position pos:line="562" pos:column="65"/></name></expr></argument>)<pos:position pos:line="562" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="562" pos:column="67"/></return>
	}<pos:position pos:line="563" pos:column="10"/></block></then></if>
	<if pos:line="564" pos:column="9">if <condition pos:line="564" pos:column="12">(<expr><operator pos:line="564" pos:column="13">!<pos:position pos:line="564" pos:column="14"/></operator><call><name pos:line="564" pos:column="14">strcmp<pos:position pos:line="564" pos:column="20"/></name><argument_list pos:line="564" pos:column="20">(<argument><expr><literal type="string" pos:line="564" pos:column="21">"expand-refs-wildcard"<pos:position pos:line="564" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="564" pos:column="45">argv<pos:position pos:line="564" pos:column="49"/></name><index pos:line="564" pos:column="49">[<expr><literal type="number" pos:line="564" pos:column="50">1<pos:position pos:line="564" pos:column="51"/></literal></expr>]<pos:position pos:line="564" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="564" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="564" pos:column="54"/></condition><then pos:line="564" pos:column="54"> <block pos:line="564" pos:column="55">{
		<decl_stmt><decl><type><specifier pos:line="565" pos:column="17">const<pos:position pos:line="565" pos:column="22"/></specifier> <name pos:line="565" pos:column="23">char<pos:position pos:line="565" pos:column="27"/></name> <modifier pos:line="565" pos:column="28">*<pos:position pos:line="565" pos:column="29"/></modifier></type><name pos:line="565" pos:column="29">reflist<pos:position pos:line="565" pos:column="36"/></name></decl>;<pos:position pos:line="565" pos:column="37"/></decl_stmt>
		<if pos:line="566" pos:column="17">if <condition pos:line="566" pos:column="20">(<expr><name pos:line="566" pos:column="21">argc<pos:position pos:line="566" pos:column="25"/></name> <operator pos:line="566" pos:column="26">&lt;<pos:position pos:line="566" pos:column="30"/></operator> <literal type="number" pos:line="566" pos:column="28">4<pos:position pos:line="566" pos:column="29"/></literal></expr>)<pos:position pos:line="566" pos:column="30"/></condition><then pos:line="566" pos:column="30">
			<block type="pseudo"><return pos:line="567" pos:column="25">return <expr><call><name pos:line="567" pos:column="32">error<pos:position pos:line="567" pos:column="37"/></name><argument_list pos:line="567" pos:column="37">(<argument><expr><literal type="string" pos:line="567" pos:column="38">"expand-refs-wildcard takes at least 2 args"<pos:position pos:line="567" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="567" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="567" pos:column="84"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="568" pos:column="17">reflist<pos:position pos:line="568" pos:column="24"/></name> <operator pos:line="568" pos:column="25">=<pos:position pos:line="568" pos:column="26"/></operator> <name><name pos:line="568" pos:column="27">argv<pos:position pos:line="568" pos:column="31"/></name><index pos:line="568" pos:column="31">[<expr><literal type="number" pos:line="568" pos:column="32">2<pos:position pos:line="568" pos:column="33"/></literal></expr>]<pos:position pos:line="568" pos:column="34"/></index></name></expr>;<pos:position pos:line="568" pos:column="35"/></expr_stmt>
		<if pos:line="569" pos:column="17">if <condition pos:line="569" pos:column="20">(<expr><operator pos:line="569" pos:column="21">!<pos:position pos:line="569" pos:column="22"/></operator><call><name pos:line="569" pos:column="22">strcmp<pos:position pos:line="569" pos:column="28"/></name><argument_list pos:line="569" pos:column="28">(<argument><expr><name pos:line="569" pos:column="29">reflist<pos:position pos:line="569" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="569" pos:column="38">"-"<pos:position pos:line="569" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="569" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="569" pos:column="43"/></condition><then pos:line="569" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="570" pos:column="25">reflist<pos:position pos:line="570" pos:column="32"/></name> <operator pos:line="570" pos:column="33">=<pos:position pos:line="570" pos:column="34"/></operator> <call><name pos:line="570" pos:column="35">get_stdin<pos:position pos:line="570" pos:column="44"/></name><argument_list pos:line="570" pos:column="44">()<pos:position pos:line="570" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="570" pos:column="47"/></expr_stmt></block></then></if>
		<return pos:line="571" pos:column="17">return <expr><call><name pos:line="571" pos:column="24">expand_refs_wildcard<pos:position pos:line="571" pos:column="44"/></name><argument_list pos:line="571" pos:column="44">(<argument><expr><name pos:line="571" pos:column="45">reflist<pos:position pos:line="571" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="571" pos:column="54">argc<pos:position pos:line="571" pos:column="58"/></name> <operator pos:line="571" pos:column="59">-<pos:position pos:line="571" pos:column="60"/></operator> <literal type="number" pos:line="571" pos:column="61">3<pos:position pos:line="571" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="571" pos:column="64">argv<pos:position pos:line="571" pos:column="68"/></name> <operator pos:line="571" pos:column="69">+<pos:position pos:line="571" pos:column="70"/></operator> <literal type="number" pos:line="571" pos:column="71">3<pos:position pos:line="571" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="571" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="571" pos:column="74"/></return>
	}<pos:position pos:line="572" pos:column="10"/></block></then></if>

	<return pos:line="574" pos:column="9">return <expr><call><name pos:line="574" pos:column="16">error<pos:position pos:line="574" pos:column="21"/></name><argument_list pos:line="574" pos:column="21">(<argument><expr><literal type="string" pos:line="574" pos:column="22">"Unknown subcommand: %s"<pos:position pos:line="574" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="574" pos:column="48">argv<pos:position pos:line="574" pos:column="52"/></name><index pos:line="574" pos:column="52">[<expr><literal type="number" pos:line="574" pos:column="53">1<pos:position pos:line="574" pos:column="54"/></literal></expr>]<pos:position pos:line="574" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="574" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="57"/></return>
}<pos:position pos:line="575" pos:column="2"/></block></function>
</unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_325_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">log_init<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">restart<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">log_initialised<pos:position pos:line="3" pos:column="28"/></name></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29"> <block pos:line="3" pos:column="30">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><operator pos:line="4" pos:column="21">!<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">restart<pos:position pos:line="4" pos:column="29"/></name></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30">
			<block type="pseudo"><return pos:line="5" pos:column="25">return;<pos:position pos:line="5" pos:column="32"/></return></block></then></if>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><call><name pos:line="6" pos:column="21">strcmp<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">logfile_name<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="42">lp_log_file<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><name pos:line="6" pos:column="54">module_id<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call> <operator pos:line="6" pos:column="66">!=<pos:position pos:line="6" pos:column="68"/></operator> <literal type="number" pos:line="6" pos:column="69">0<pos:position pos:line="6" pos:column="70"/></literal></expr>)<pos:position pos:line="6" pos:column="71"/></condition><then pos:line="6" pos:column="71"> <block pos:line="6" pos:column="72">{
			<if pos:line="7" pos:column="25">if <condition pos:line="7" pos:column="28">(<expr><name pos:line="7" pos:column="29">logfile_fp<pos:position pos:line="7" pos:column="39"/></name></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40"> <block pos:line="7" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="8" pos:column="33">fclose<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">logfile_fp<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="9" pos:column="33">logfile_fp<pos:position pos:line="9" pos:column="43"/></name> <operator pos:line="9" pos:column="44">=<pos:position pos:line="9" pos:column="45"/></operator> <name pos:line="9" pos:column="46">NULL<pos:position pos:line="9" pos:column="50"/></name></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="10" pos:column="26"/></block></then> <else pos:line="10" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="33">closelog<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">()<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="12" pos:column="25">logfile_name<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">=<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="40">NULL<pos:position pos:line="12" pos:column="44"/></name></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then> <elseif pos:line="13" pos:column="19">else <if pos:line="13" pos:column="24">if <condition pos:line="13" pos:column="27">(<expr><operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">logfile_name<pos:position pos:line="13" pos:column="41"/></name></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
			<block type="pseudo"><return pos:line="14" pos:column="25">return;<pos:position pos:line="14" pos:column="32"/></return></block></then></if></elseif> <comment type="block" pos:line="14" pos:column="33">/* unchanged, non-empty "log file" names */</comment>
		<elseif pos:line="15" pos:column="17">else <if pos:line="15" pos:column="22">if <condition pos:line="15" pos:column="25">(<expr><call><name pos:line="15" pos:column="26">lp_syslog_facility<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><operator pos:line="15" pos:column="45">-<pos:position pos:line="15" pos:column="46"/></operator><literal type="number" pos:line="15" pos:column="46">1<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call> <operator pos:line="15" pos:column="49">!=<pos:position pos:line="15" pos:column="51"/></operator> <call><name pos:line="15" pos:column="52">lp_syslog_facility<pos:position pos:line="15" pos:column="70"/></name><argument_list pos:line="15" pos:column="70">(<argument><expr><name pos:line="15" pos:column="71">module_id<pos:position pos:line="15" pos:column="80"/></name></expr></argument>)<pos:position pos:line="15" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="82"/></condition><then pos:line="15" pos:column="82">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">closelog<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">()<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></then></if></elseif>
		<else pos:line="17" pos:column="17">else
			<block type="pseudo"><return pos:line="18" pos:column="25">return;<pos:position pos:line="18" pos:column="32"/></return></block></else></if> <comment type="block" pos:line="18" pos:column="33">/* unchanged syslog settings */</comment>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">log_initialised<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <literal type="number" pos:line="20" pos:column="35">1<pos:position pos:line="20" pos:column="36"/></literal></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="22" pos:column="9">/* This looks pointless, but it is needed in order for the
	 * C library on some systems to fetch the timezone info
	 * before the chroot. */</comment>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">timestring<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><call><name pos:line="25" pos:column="20">time<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">NULL<pos:position pos:line="25" pos:column="29"/></name></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>

	<comment type="block" pos:line="27" pos:column="9">/* Optionally use a log file instead of syslog.  (Non-daemon
	 * rsyncs will have already set logfile_name, as needed.) */</comment>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">am_daemon<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&amp;&amp;<pos:position pos:line="29" pos:column="33"/></operator> <operator pos:line="29" pos:column="26">!<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">logfile_name<pos:position pos:line="29" pos:column="39"/></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">logfile_name<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <call><name pos:line="30" pos:column="32">lp_log_file<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">module_id<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">logfile_name<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">&amp;&amp;<pos:position pos:line="31" pos:column="36"/></operator> <operator pos:line="31" pos:column="29">*<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">logfile_name<pos:position pos:line="31" pos:column="42"/></name></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">logfile_open<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">()<pos:position pos:line="32" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt></block></then>
	<else pos:line="33" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">syslog_init<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">()<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt></block></else></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

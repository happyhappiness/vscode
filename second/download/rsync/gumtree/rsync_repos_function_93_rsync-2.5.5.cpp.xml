<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_93_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_bak_dir<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">fname<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">bak_path<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_STAT<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">STRUCT_STAT<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">st2<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">fullpath<pos:position pos:line="5" pos:column="22"/></name><index pos:line="5" pos:column="22">[<expr><name pos:line="5" pos:column="23">MAXPATHLEN<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><specifier pos:line="6" pos:column="9">extern<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">orig_umask<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">q<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

        <while pos:line="10" pos:column="9">while<condition pos:line="10" pos:column="14">(<expr><call><name pos:line="10" pos:column="15">strncmp<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">bak_path<pos:position pos:line="10" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="32">"./"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="37">2<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call><operator pos:line="10" pos:column="39">==<pos:position pos:line="10" pos:column="41"/></operator><literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr>)<pos:position pos:line="10" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="44">bak_path<pos:position pos:line="10" pos:column="52"/></name> <operator pos:line="10" pos:column="53">+=<pos:position pos:line="10" pos:column="55"/></operator> <literal type="number" pos:line="10" pos:column="56">2<pos:position pos:line="10" pos:column="57"/></literal></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt></block></while>

        <if pos:line="12" pos:column="9">if<condition pos:line="12" pos:column="11">(<expr><name><name pos:line="12" pos:column="12">bak_path<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><call><name pos:line="12" pos:column="21">strlen<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">bak_path<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call><operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator><literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr>]<pos:position pos:line="12" pos:column="40"/></index></name><operator pos:line="12" pos:column="40">!=<pos:position pos:line="12" pos:column="42"/></operator><literal type="char" pos:line="12" pos:column="42">'/'<pos:position pos:line="12" pos:column="45"/></literal></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <block pos:line="12" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">snprintf<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">fullpath<pos:position pos:line="13" pos:column="34"/></name></expr></argument>,<argument><expr><sizeof pos:line="13" pos:column="35">sizeof<argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">fullpath<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></sizeof></expr></argument>,<argument><expr><literal type="string" pos:line="13" pos:column="52">"%s/"<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>,<argument><expr><name pos:line="13" pos:column="58">bak_path<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then> <else pos:line="14" pos:column="11">else <block pos:line="14" pos:column="16">{
                <expr_stmt><expr><call><name pos:line="15" pos:column="17">snprintf<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">fullpath<pos:position pos:line="15" pos:column="34"/></name></expr></argument>,<argument><expr><sizeof pos:line="15" pos:column="35">sizeof<argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">fullpath<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></sizeof></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="52">"%s"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>,<argument><expr><name pos:line="15" pos:column="57">bak_path<pos:position pos:line="15" pos:column="65"/></name></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">fullpath<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">q<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator><operator pos:line="18" pos:column="11">&amp;<pos:position pos:line="18" pos:column="16"/></operator><name><name pos:line="18" pos:column="12">fullpath<pos:position pos:line="18" pos:column="20"/></name><index pos:line="18" pos:column="20">[<expr><call><name pos:line="18" pos:column="21">strlen<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">fullpath<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>]<pos:position pos:line="18" pos:column="38"/></index></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>  <comment type="block" pos:line="18" pos:column="41">/* End of bak_path string */</comment>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">strcat<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">fullpath<pos:position pos:line="19" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="25">fname<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>

        <comment type="block" pos:line="21" pos:column="9">/* Make the directories */</comment>
        <while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator><call><name pos:line="22" pos:column="19">strchr<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">p<pos:position pos:line="22" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="22" pos:column="28">'/'<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator></expr>)<pos:position pos:line="22" pos:column="34"/></condition> <block pos:line="22" pos:column="35">{
                <expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">p<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
                <if pos:line="24" pos:column="17">if<condition pos:line="24" pos:column="19">(<expr><call><name pos:line="24" pos:column="20">do_lstat<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">fullpath<pos:position pos:line="24" pos:column="37"/></name></expr></argument>,<argument><expr><operator pos:line="24" pos:column="38">&amp;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="39">st<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call><operator pos:line="24" pos:column="42">!=<pos:position pos:line="24" pos:column="44"/></operator><literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46"> <block pos:line="24" pos:column="47">{
                        <expr_stmt><expr><call><name pos:line="25" pos:column="25">do_mkdir<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">fullpath<pos:position pos:line="25" pos:column="42"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="25" pos:column="43">0777<pos:position pos:line="25" pos:column="47"/></literal> <operator pos:line="25" pos:column="48">&amp;<pos:position pos:line="25" pos:column="53"/></operator> <operator pos:line="25" pos:column="50">~<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">orig_umask<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
                        <if pos:line="26" pos:column="25">if<condition pos:line="26" pos:column="27">(<expr><name pos:line="26" pos:column="28">p<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">q<pos:position pos:line="26" pos:column="31"/></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32"> <block pos:line="26" pos:column="33">{
                                <if pos:line="27" pos:column="33">if<condition pos:line="27" pos:column="35">(<expr><call><name pos:line="27" pos:column="36">do_lstat<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">q<pos:position pos:line="27" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="27" pos:column="47">&amp;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="48">st<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call><operator pos:line="27" pos:column="51">!=<pos:position pos:line="27" pos:column="53"/></operator><literal type="number" pos:line="27" pos:column="53">0<pos:position pos:line="27" pos:column="54"/></literal></expr>)<pos:position pos:line="27" pos:column="55"/></condition><then pos:line="27" pos:column="55"> <block pos:line="27" pos:column="56">{
                                        <expr_stmt><expr><call><name pos:line="28" pos:column="41">rprintf<pos:position pos:line="28" pos:column="48"/></name><argument_list pos:line="28" pos:column="48">(<argument><expr><name pos:line="28" pos:column="49">FERROR<pos:position pos:line="28" pos:column="55"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="28" pos:column="56">"make_bak_dir stat %s : %s\n"<pos:position pos:line="28" pos:column="85"/></literal></expr></argument>,<argument><expr><name pos:line="28" pos:column="86">fullpath<pos:position pos:line="28" pos:column="94"/></name></expr></argument>,<argument><expr><call><name pos:line="28" pos:column="95">strerror<pos:position pos:line="28" pos:column="103"/></name><argument_list pos:line="28" pos:column="103">(<argument><expr><name pos:line="28" pos:column="104">errno<pos:position pos:line="28" pos:column="109"/></name></expr></argument>)<pos:position pos:line="28" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="112"/></expr_stmt>
                                }<pos:position pos:line="29" pos:column="34"/></block></then> <else pos:line="29" pos:column="35">else <block pos:line="29" pos:column="40">{
                                        <expr_stmt><expr><name pos:line="30" pos:column="41">st2<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">=<pos:position pos:line="30" pos:column="45"/></operator><operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="46">st<pos:position pos:line="30" pos:column="48"/></name></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
                                        <expr_stmt><expr><call><name pos:line="31" pos:column="41">set_modtime<pos:position pos:line="31" pos:column="52"/></name><argument_list pos:line="31" pos:column="52">(<argument><expr><name pos:line="31" pos:column="53">fullpath<pos:position pos:line="31" pos:column="61"/></name></expr></argument>,<argument><expr><name><name pos:line="31" pos:column="62">st2<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">-&gt;<pos:position pos:line="31" pos:column="70"/></operator><name pos:line="31" pos:column="67">st_mtime<pos:position pos:line="31" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="77"/></expr_stmt>
                                        <if pos:line="32" pos:column="41">if<condition pos:line="32" pos:column="43">(<expr><call><name pos:line="32" pos:column="44">do_lchown<pos:position pos:line="32" pos:column="53"/></name><argument_list pos:line="32" pos:column="53">(<argument><expr><name pos:line="32" pos:column="54">fullpath<pos:position pos:line="32" pos:column="62"/></name></expr></argument>,<argument><expr><name><name pos:line="32" pos:column="63">st2<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">-&gt;<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="68">st_uid<pos:position pos:line="32" pos:column="74"/></name></name></expr></argument>,<argument><expr><name><name pos:line="32" pos:column="75">st2<pos:position pos:line="32" pos:column="78"/></name><operator pos:line="32" pos:column="78">-&gt;<pos:position pos:line="32" pos:column="83"/></operator><name pos:line="32" pos:column="80">st_gid<pos:position pos:line="32" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="87"/></argument_list></call><operator pos:line="32" pos:column="87">!=<pos:position pos:line="32" pos:column="89"/></operator><literal type="number" pos:line="32" pos:column="89">0<pos:position pos:line="32" pos:column="90"/></literal></expr>)<pos:position pos:line="32" pos:column="91"/></condition><then pos:line="32" pos:column="91"> <block pos:line="32" pos:column="92">{
                                                <expr_stmt><expr><call><name pos:line="33" pos:column="49">rprintf<pos:position pos:line="33" pos:column="56"/></name><argument_list pos:line="33" pos:column="56">(<argument><expr><name pos:line="33" pos:column="57">FERROR<pos:position pos:line="33" pos:column="63"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="33" pos:column="64">"make_bak_dir chown %s : %s\n"<pos:position pos:line="33" pos:column="94"/></literal></expr></argument>,<argument><expr><name pos:line="33" pos:column="95">fullpath<pos:position pos:line="33" pos:column="103"/></name></expr></argument>,<argument><expr><call><name pos:line="33" pos:column="104">strerror<pos:position pos:line="33" pos:column="112"/></name><argument_list pos:line="33" pos:column="112">(<argument><expr><name pos:line="33" pos:column="113">errno<pos:position pos:line="33" pos:column="118"/></name></expr></argument>)<pos:position pos:line="33" pos:column="119"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="121"/></expr_stmt>
                                        }<pos:position pos:line="34" pos:column="42"/></block></then></if><empty_stmt pos:line="34" pos:column="42">;<pos:position pos:line="34" pos:column="43"/></empty_stmt>
                                        <if pos:line="35" pos:column="41">if<condition pos:line="35" pos:column="43">(<expr><call><name pos:line="35" pos:column="44">do_chmod<pos:position pos:line="35" pos:column="52"/></name><argument_list pos:line="35" pos:column="52">(<argument><expr><name pos:line="35" pos:column="53">fullpath<pos:position pos:line="35" pos:column="61"/></name></expr></argument>,<argument><expr><name><name pos:line="35" pos:column="62">st2<pos:position pos:line="35" pos:column="65"/></name><operator pos:line="35" pos:column="65">-&gt;<pos:position pos:line="35" pos:column="70"/></operator><name pos:line="35" pos:column="67">st_mode<pos:position pos:line="35" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call><operator pos:line="35" pos:column="75">!=<pos:position pos:line="35" pos:column="77"/></operator><literal type="number" pos:line="35" pos:column="77">0<pos:position pos:line="35" pos:column="78"/></literal></expr>)<pos:position pos:line="35" pos:column="79"/></condition><then pos:line="35" pos:column="79"> <block pos:line="35" pos:column="80">{
                                                <expr_stmt><expr><call><name pos:line="36" pos:column="49">rprintf<pos:position pos:line="36" pos:column="56"/></name><argument_list pos:line="36" pos:column="56">(<argument><expr><name pos:line="36" pos:column="57">FERROR<pos:position pos:line="36" pos:column="63"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="64">"make_bak_dir failed to set permissions on %s : %s\n"<pos:position pos:line="36" pos:column="117"/></literal></expr></argument>,<argument><expr><name pos:line="36" pos:column="118">fullpath<pos:position pos:line="36" pos:column="126"/></name></expr></argument>,<argument><expr><call><name pos:line="36" pos:column="127">strerror<pos:position pos:line="36" pos:column="135"/></name><argument_list pos:line="36" pos:column="135">(<argument><expr><name pos:line="36" pos:column="136">errno<pos:position pos:line="36" pos:column="141"/></name></expr></argument>)<pos:position pos:line="36" pos:column="142"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="143"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="144"/></expr_stmt>
                                        }<pos:position pos:line="37" pos:column="42"/></block></then></if><empty_stmt pos:line="37" pos:column="42">;<pos:position pos:line="37" pos:column="43"/></empty_stmt>
                                }<pos:position pos:line="38" pos:column="34"/></block></else></if><empty_stmt pos:line="38" pos:column="34">;<pos:position pos:line="38" pos:column="35"/></empty_stmt>
                        }<pos:position pos:line="39" pos:column="26"/></block></then></if>
                }<pos:position pos:line="40" pos:column="18"/></block></then></if><empty_stmt pos:line="40" pos:column="18">;<pos:position pos:line="40" pos:column="19"/></empty_stmt>
                <expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">p<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <literal type="char" pos:line="41" pos:column="22">'/'<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><name pos:line="42" pos:column="17">p<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">++<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></while>
        <return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

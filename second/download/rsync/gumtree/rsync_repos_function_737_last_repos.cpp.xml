<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_737_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">memmove<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">dest<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">void<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">src<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">size_t<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">n<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">bcopy<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">(<argument><expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator><operator pos:line="3" pos:column="22">)<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">src<pos:position pos:line="3" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="29">(<pos:position pos:line="3" pos:column="30"/></operator><name pos:line="3" pos:column="30">char<pos:position pos:line="3" pos:column="34"/></name> <operator pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></operator><operator pos:line="3" pos:column="36">)<pos:position pos:line="3" pos:column="37"/></operator> <name pos:line="3" pos:column="38">dest<pos:position pos:line="3" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="44">n<pos:position pos:line="3" pos:column="45"/></name></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="47"/></expr_stmt>
	<return pos:line="4" pos:column="9">return <expr><name pos:line="4" pos:column="16">dest<pos:position pos:line="4" pos:column="20"/></name></expr>;<pos:position pos:line="4" pos:column="21"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

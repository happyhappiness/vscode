<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_168.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">match_sums<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">f<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">sum_struct<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="54">off_t<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">len<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">last_match<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">=<pos:position pos:line="3" pos:column="15"/></operator> <literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr>;<pos:position pos:line="3" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">false_alarms<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">tag_hits<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>;<pos:position pos:line="5" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="6" pos:column="3">matches<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator><literal type="number" pos:line="6" pos:column="11">0<pos:position pos:line="6" pos:column="12"/></literal></expr>;<pos:position pos:line="6" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">data_transfer<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">len<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">&gt;<pos:position pos:line="9" pos:column="15"/></operator> <literal type="number" pos:line="9" pos:column="13">0<pos:position pos:line="9" pos:column="14"/></literal> <operator pos:line="9" pos:column="15">&amp;&amp;<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="18">s<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">count<pos:position pos:line="9" pos:column="26"/></name></name><operator pos:line="9" pos:column="26">&gt;<pos:position pos:line="9" pos:column="30"/></operator><literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29"> <block pos:line="9" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">build_hash_table<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">s<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">verbose<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&gt;<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">2<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="7">fprintf<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">stderr<pos:position pos:line="13" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="13" pos:column="22">"built hash table\n"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">hash_search<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">f<pos:position pos:line="15" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="19">s<pos:position pos:line="15" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="21">buf<pos:position pos:line="15" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="25">len<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">verbose<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&gt;<pos:position pos:line="17" pos:column="21"/></operator> <literal type="number" pos:line="17" pos:column="19">2<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">fprintf<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><name pos:line="18" pos:column="15">stderr<pos:position pos:line="18" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="18" pos:column="22">"done hash search\n"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></then> <else pos:line="19" pos:column="5">else <block pos:line="19" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">matched<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">f<pos:position pos:line="20" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="15">s<pos:position pos:line="20" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="17">buf<pos:position pos:line="20" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="21">len<pos:position pos:line="20" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="25">len<pos:position pos:line="20" pos:column="28"/></name></expr></argument>,<argument><expr><operator pos:line="20" pos:column="29">-<pos:position pos:line="20" pos:column="30"/></operator><literal type="number" pos:line="20" pos:column="30">1<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></else></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">targets<pos:position pos:line="23" pos:column="14"/></name></expr>)<pos:position pos:line="23" pos:column="15"/></condition><then pos:line="23" pos:column="15"> <block pos:line="23" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">free<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">(<argument><expr><name pos:line="24" pos:column="10">targets<pos:position pos:line="24" pos:column="17"/></name></expr></argument>)<pos:position pos:line="24" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">targets<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">NULL<pos:position pos:line="25" pos:column="17"/></name></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">verbose<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">&gt;<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="17">2<pos:position pos:line="28" pos:column="18"/></literal></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">fprintf<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">stderr<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="21">"false_alarms=%d tag_hits=%d matches=%d\n"<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>,
	    <argument><expr><name pos:line="30" pos:column="13">false_alarms<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="27">tag_hits<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">matches<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">total_tag_hits<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">+=<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="21">tag_hits<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name pos:line="33" pos:column="3">total_false_alarms<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">+=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">false_alarms<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name pos:line="34" pos:column="3">total_matches<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">+=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">matches<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="35" pos:column="3">total_data_transfer<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">+=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">data_transfer<pos:position pos:line="35" pos:column="39"/></name></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

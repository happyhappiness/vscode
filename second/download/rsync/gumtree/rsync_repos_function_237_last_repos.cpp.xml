<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_237_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">set_compression<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fname<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name><name pos:line="3" pos:column="15">struct<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">suffix_tree<pos:position pos:line="3" pos:column="33"/></name></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">node<pos:position pos:line="3" pos:column="39"/></name></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">s<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">ltr<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">do_compression<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
		<block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">match_list<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">init_set_compression<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">()<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">compression_level<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="29">per_file_default_level<pos:position pos:line="13" pos:column="51"/></name></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">match_list<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">&amp;&amp;<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="29">!<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">suftree<pos:position pos:line="15" pos:column="37"/></name></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">s<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><name pos:line="18" pos:column="18">strrchr<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">fname<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="33">'/'<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator> <operator pos:line="18" pos:column="39">!=<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="42">NULL<pos:position pos:line="18" pos:column="46"/></name></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">fname<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">s<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">+<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">1<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then></if>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">s<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">match_list<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></init> <condition><expr><operator pos:line="21" pos:column="30">*<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">s<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></condition> <incr><expr><name pos:line="21" pos:column="34">s<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">+=<pos:position pos:line="21" pos:column="38"/></operator> <call><name pos:line="21" pos:column="39">strlen<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name pos:line="21" pos:column="46">s<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call> <operator pos:line="21" pos:column="49">+<pos:position pos:line="21" pos:column="50"/></operator> <literal type="number" pos:line="21" pos:column="51">1<pos:position pos:line="21" pos:column="52"/></literal></expr></incr>)<pos:position pos:line="21" pos:column="53"/></control> <block pos:line="21" pos:column="54">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">iwildmatch<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">s<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="35">fname<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42"> <block pos:line="22" pos:column="43">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">compression_level<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">=<pos:position pos:line="23" pos:column="44"/></operator> <literal type="number" pos:line="23" pos:column="45">0<pos:position pos:line="23" pos:column="46"/></literal></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
			<return pos:line="24" pos:column="25">return;<pos:position pos:line="24" pos:column="32"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></for>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">node<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">suftree<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">)<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">||<pos:position pos:line="28" pos:column="33"/></operator> <operator pos:line="28" pos:column="34">!<pos:position pos:line="28" pos:column="35"/></operator><operator pos:line="28" pos:column="35">(<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">s<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <call><name pos:line="28" pos:column="40">strrchr<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">fname<pos:position pos:line="28" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="28" pos:column="55">'.'<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator>
	 <operator pos:line="29" pos:column="10">||<pos:position pos:line="29" pos:column="12"/></operator> <name pos:line="29" pos:column="13">s<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">fname<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">||<pos:position pos:line="29" pos:column="26"/></operator> <operator pos:line="29" pos:column="27">!<pos:position pos:line="29" pos:column="28"/></operator><operator pos:line="29" pos:column="28">(<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">ltr<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <operator pos:line="29" pos:column="35">*<pos:position pos:line="29" pos:column="36"/></operator><operator pos:line="29" pos:column="36">++<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="38">s<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">)<pos:position pos:line="29" pos:column="40"/></operator></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41">
		<block type="pseudo"><return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return></block></then></if>

	<while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><literal type="number" pos:line="32" pos:column="16">1<pos:position pos:line="32" pos:column="17"/></literal></expr>)<pos:position pos:line="32" pos:column="18"/></condition> <block pos:line="32" pos:column="19">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><call><name pos:line="33" pos:column="21">isUpper<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><operator pos:line="33" pos:column="29">&amp;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="30">ltr<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">ltr<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <call><name pos:line="34" pos:column="31">toLower<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><operator pos:line="34" pos:column="39">&amp;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="40">ltr<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt></block></then></if>
		<while pos:line="35" pos:column="17">while <condition pos:line="35" pos:column="23">(<expr><name><name pos:line="35" pos:column="24">node<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">letter<pos:position pos:line="35" pos:column="36"/></name></name> <operator pos:line="35" pos:column="37">!=<pos:position pos:line="35" pos:column="39"/></operator> <name pos:line="35" pos:column="40">ltr<pos:position pos:line="35" pos:column="43"/></name></expr>)<pos:position pos:line="35" pos:column="44"/></condition> <block pos:line="35" pos:column="45">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name><name pos:line="36" pos:column="29">node<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">-&gt;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="35">letter<pos:position pos:line="36" pos:column="41"/></name></name> <operator pos:line="36" pos:column="42">&gt;<pos:position pos:line="36" pos:column="46"/></operator> <name pos:line="36" pos:column="44">ltr<pos:position pos:line="36" pos:column="47"/></name></expr>)<pos:position pos:line="36" pos:column="48"/></condition><then pos:line="36" pos:column="48">
				<block type="pseudo"><return pos:line="37" pos:column="33">return;<pos:position pos:line="37" pos:column="40"/></return></block></then></if>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><operator pos:line="38" pos:column="29">!<pos:position pos:line="38" pos:column="30"/></operator><operator pos:line="38" pos:column="30">(<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">node<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">=<pos:position pos:line="38" pos:column="37"/></operator> <name><name pos:line="38" pos:column="38">node<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">sibling<pos:position pos:line="38" pos:column="51"/></name></name><operator pos:line="38" pos:column="51">)<pos:position pos:line="38" pos:column="52"/></operator></expr>)<pos:position pos:line="38" pos:column="53"/></condition><then pos:line="38" pos:column="53">
				<block type="pseudo"><return pos:line="39" pos:column="33">return;<pos:position pos:line="39" pos:column="40"/></return></block></then></if>
		}<pos:position pos:line="40" pos:column="18"/></block></while>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">ltr<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <operator pos:line="41" pos:column="28">*<pos:position pos:line="41" pos:column="29"/></operator><operator pos:line="41" pos:column="29">++<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">s<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">)<pos:position pos:line="41" pos:column="33"/></operator> <operator pos:line="41" pos:column="34">==<pos:position pos:line="41" pos:column="36"/></operator> <literal type="char" pos:line="41" pos:column="37">'\0'<pos:position pos:line="41" pos:column="41"/></literal></expr>)<pos:position pos:line="41" pos:column="42"/></condition><then pos:line="41" pos:column="42"> <block pos:line="41" pos:column="43">{
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><name><name pos:line="42" pos:column="29">node<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">word_end<pos:position pos:line="42" pos:column="43"/></name></name></expr>)<pos:position pos:line="42" pos:column="44"/></condition><then pos:line="42" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="33">compression_level<pos:position pos:line="43" pos:column="50"/></name> <operator pos:line="43" pos:column="51">=<pos:position pos:line="43" pos:column="52"/></operator> <literal type="number" pos:line="43" pos:column="53">0<pos:position pos:line="43" pos:column="54"/></literal></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt></block></then></if>
			<return pos:line="44" pos:column="25">return;<pos:position pos:line="44" pos:column="32"/></return>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><operator pos:line="46" pos:column="22">(<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">node<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">=<pos:position pos:line="46" pos:column="29"/></operator> <name><name pos:line="46" pos:column="30">node<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">child<pos:position pos:line="46" pos:column="41"/></name></name><operator pos:line="46" pos:column="41">)<pos:position pos:line="46" pos:column="42"/></operator></expr>)<pos:position pos:line="46" pos:column="43"/></condition><then pos:line="46" pos:column="43">
			<block type="pseudo"><return pos:line="47" pos:column="25">return;<pos:position pos:line="47" pos:column="32"/></return></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></while>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_634.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">map_struct<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">map_file<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">fd<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="36">OFF_T<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">len<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">map_struct<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">ret<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<expr_stmt><expr><name pos:line="4" pos:column="9">ret<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <operator pos:line="4" pos:column="15">(<pos:position pos:line="4" pos:column="16"/></operator>struct <name pos:line="4" pos:column="23">map_struct<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator><call><name pos:line="4" pos:column="36">malloc<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><sizeof pos:line="4" pos:column="43">sizeof<argument_list pos:line="4" pos:column="49">(<argument><expr><operator pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="51">ret<pos:position pos:line="4" pos:column="54"/></name></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">ret<pos:position pos:line="5" pos:column="17"/></name></expr>)<pos:position pos:line="5" pos:column="18"/></condition><then pos:line="5" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="19">out_of_memory<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><literal type="string" pos:line="5" pos:column="33">"map_file"<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="7" pos:column="9">ret<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">map<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">ret<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">fd<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">fd<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">size<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">len<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">NULL<pos:position pos:line="10" pos:column="22"/></name></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">ret<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">p_size<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">ret<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">p_offset<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">ret<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">p_len<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="22">0<pos:position pos:line="13" pos:column="23"/></literal></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">USE_MMAP<pos:position pos:line="15" pos:column="16"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="16" pos:column="9">len<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">MIN<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">len<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">MAX_MAP_SIZE<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ret<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">map<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">char<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator><call><name pos:line="17" pos:column="28">do_mmap<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">NULL<pos:position pos:line="17" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="41">len<pos:position pos:line="17" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="45">PROT_READ<pos:position pos:line="17" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="55">MAP_SHARED<pos:position pos:line="17" pos:column="65"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="66">fd<pos:position pos:line="17" pos:column="68"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="69">0<pos:position pos:line="17" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">ret<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">map<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">==<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">char<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></operator><operator pos:line="18" pos:column="32">)<pos:position pos:line="18" pos:column="33"/></operator><operator pos:line="18" pos:column="33">-<pos:position pos:line="18" pos:column="34"/></operator><literal type="number" pos:line="18" pos:column="34">1<pos:position pos:line="18" pos:column="35"/></literal></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36"> <block pos:line="18" pos:column="37">{
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">ret<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">map<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">NULL<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">ret<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">p_len<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">len<pos:position pos:line="21" pos:column="33"/></name></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></else></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_738_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">strpbrk<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">s<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">accept<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><operator pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">!=<pos:position pos:line="3" pos:column="21"/></operator> <literal type="char" pos:line="3" pos:column="22">'\0'<pos:position pos:line="3" pos:column="26"/></literal></expr>)<pos:position pos:line="3" pos:column="27"/></condition>  <block pos:line="3" pos:column="29">{
		<decl_stmt><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">a<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">accept<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
		<while pos:line="5" pos:column="17">while <condition pos:line="5" pos:column="23">(<expr><operator pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">a<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">!=<pos:position pos:line="5" pos:column="29"/></operator> <literal type="char" pos:line="5" pos:column="30">'\0'<pos:position pos:line="5" pos:column="34"/></literal></expr>)<pos:position pos:line="5" pos:column="35"/></condition> <block pos:line="5" pos:column="36">{
			<if pos:line="6" pos:column="25">if <condition pos:line="6" pos:column="28">(<expr><operator pos:line="6" pos:column="29">*<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">a<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">++<pos:position pos:line="6" pos:column="33"/></operator> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">s<pos:position pos:line="6" pos:column="39"/></name></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">	<block type="pseudo"><return pos:line="6" pos:column="41">return <expr><operator pos:line="6" pos:column="48">(<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="49">char<pos:position pos:line="6" pos:column="53"/></name> <operator pos:line="6" pos:column="54">*<pos:position pos:line="6" pos:column="55"/></operator><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="56">s<pos:position pos:line="6" pos:column="57"/></name></expr>;<pos:position pos:line="6" pos:column="58"/></return></block></then></if>
		}<pos:position pos:line="7" pos:column="18"/></block></while>
		<expr_stmt><expr><operator pos:line="8" pos:column="17">++<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">s<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></while>

	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_902.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">normalize_path<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">path<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">BOOL<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">force_newbuf<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">unsigned<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">len_ptr<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">len<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">path<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">!=<pos:position pos:line="5" pos:column="21"/></operator> <literal type="char" pos:line="5" pos:column="22">'/'<pos:position pos:line="5" pos:column="25"/></literal></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{ <comment type="block" pos:line="5" pos:column="29">/* Make path absolute. */</comment>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">len<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name pos:line="6" pos:column="27">strlen<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">path<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">curr_dir_len<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">+<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="36">1<pos:position pos:line="7" pos:column="37"/></literal> <operator pos:line="7" pos:column="38">+<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="40">len<pos:position pos:line="7" pos:column="43"/></name> <operator pos:line="7" pos:column="44">&gt;=<pos:position pos:line="7" pos:column="49"/></operator> <sizeof pos:line="7" pos:column="47">sizeof <name pos:line="7" pos:column="54">curr_dir<pos:position pos:line="7" pos:column="62"/></name></sizeof></expr>)<pos:position pos:line="7" pos:column="63"/></condition><then pos:line="7" pos:column="63">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><name pos:line="8" pos:column="32">NULL<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">curr_dir<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><name pos:line="9" pos:column="26">curr_dir_len<pos:position pos:line="9" pos:column="38"/></name></expr>]<pos:position pos:line="9" pos:column="39"/></index></name> <operator pos:line="9" pos:column="40">=<pos:position pos:line="9" pos:column="41"/></operator> <literal type="char" pos:line="9" pos:column="42">'/'<pos:position pos:line="9" pos:column="45"/></literal></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">memcpy<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">curr_dir<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">+<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">curr_dir_len<pos:position pos:line="10" pos:column="47"/></name> <operator pos:line="10" pos:column="48">+<pos:position pos:line="10" pos:column="49"/></operator> <literal type="number" pos:line="10" pos:column="50">1<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">path<pos:position pos:line="10" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">len<pos:position pos:line="10" pos:column="62"/></name> <operator pos:line="10" pos:column="63">+<pos:position pos:line="10" pos:column="64"/></operator> <literal type="number" pos:line="10" pos:column="65">1<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">path<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="30">strdup<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">curr_dir<pos:position pos:line="11" pos:column="45"/></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call><operator pos:line="11" pos:column="46">)<pos:position pos:line="11" pos:column="47"/></operator></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="25">out_of_memory<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><literal type="string" pos:line="12" pos:column="39">"normalize_path"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">curr_dir<pos:position pos:line="13" pos:column="25"/></name><index pos:line="13" pos:column="25">[<expr><name pos:line="13" pos:column="26">curr_dir_len<pos:position pos:line="13" pos:column="38"/></name></expr>]<pos:position pos:line="13" pos:column="39"/></index></name> <operator pos:line="13" pos:column="40">=<pos:position pos:line="13" pos:column="41"/></operator> <literal type="char" pos:line="13" pos:column="42">'\0'<pos:position pos:line="13" pos:column="46"/></literal></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <elseif pos:line="14" pos:column="11">else <if pos:line="14" pos:column="16">if <condition pos:line="14" pos:column="19">(<expr><name pos:line="14" pos:column="20">force_newbuf<pos:position pos:line="14" pos:column="32"/></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">path<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <call><name pos:line="15" pos:column="30">strdup<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">path<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator></expr>)<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">out_of_memory<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"normalize_path"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="19" pos:column="9">len<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">clean_fname<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">path<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">CFN_COLLAPSE_DOT_DOT_DIRS<pos:position pos:line="19" pos:column="58"/></name> <operator pos:line="19" pos:column="59">|<pos:position pos:line="19" pos:column="60"/></operator> <name pos:line="19" pos:column="61">CFN_DROP_TRAILING_DOT_DIR<pos:position pos:line="19" pos:column="86"/></name></expr></argument>)<pos:position pos:line="19" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="88"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">len_ptr<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">len_ptr<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">len<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt></block></then></if>

	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">path<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

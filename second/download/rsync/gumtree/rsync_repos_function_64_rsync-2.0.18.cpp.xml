<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_64_rsync-2.0.18.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int32<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">read_int<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="22"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">b<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">4<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">readfd<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">f<pos:position pos:line="4" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="4" pos:column="18">b<pos:position pos:line="4" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="20">4<pos:position pos:line="4" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">IVAL<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">b<pos:position pos:line="5" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

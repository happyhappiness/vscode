<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_163_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int32<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">read_int<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="22"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">b<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">4<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int32<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">num<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">read_buf<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">f<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="21">b<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="24">4<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">num<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">IVAL<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">b<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">SIZEOF_INT32<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&gt;<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="20">4<pos:position pos:line="8" pos:column="21"/></literal></expr></cpp:if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">num<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&amp;<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">int32<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">)<pos:position pos:line="9" pos:column="26"/></operator><literal type="number" pos:line="9" pos:column="26">0x80000000<pos:position pos:line="9" pos:column="36"/></literal></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">num<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">|=<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">~<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">(<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">int32<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">)<pos:position pos:line="10" pos:column="32"/></operator><literal type="number" pos:line="10" pos:column="32">0xffffffff<pos:position pos:line="10" pos:column="42"/></literal></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
	<return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">num<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

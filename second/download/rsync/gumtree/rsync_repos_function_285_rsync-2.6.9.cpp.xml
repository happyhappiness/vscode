<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_285_rsync-2.6.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">set_file_attrs<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">fname<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">file_struct<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">file<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">STRUCT_STAT<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">st<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
		   <parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">flags<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">updated<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">STRUCT_STAT<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">st2<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">change_uid<pos:position pos:line="6" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="25">change_gid<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">mode_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">new_mode<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">file<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">mode<pos:position pos:line="7" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">st<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17"> <block pos:line="9" pos:column="18">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">dry_run<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
			<block type="pseudo"><return pos:line="11" pos:column="25">return <expr><literal type="number" pos:line="11" pos:column="32">1<pos:position pos:line="11" pos:column="33"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></return></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">link_stat<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">fname<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="39">st2<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="44">0<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call> <operator pos:line="12" pos:column="47">&lt;<pos:position pos:line="12" pos:column="51"/></operator> <literal type="number" pos:line="12" pos:column="49">0<pos:position pos:line="12" pos:column="50"/></literal></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51"> <block pos:line="12" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">rsyserr<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">FERROR<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">errno<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="48">"stat %s failed"<pos:position pos:line="13" pos:column="64"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="14" pos:column="33">full_fname<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">fname<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
			<return pos:line="15" pos:column="25">return <expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr>;<pos:position pos:line="15" pos:column="34"/></return>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">st<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <operator pos:line="17" pos:column="22">&amp;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="23">st2<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">preserve_perms<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">&amp;&amp;<pos:position pos:line="18" pos:column="47"/></operator> <call><name pos:line="18" pos:column="40">S_ISDIR<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">new_mode<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call>
		 <operator pos:line="19" pos:column="18">&amp;&amp;<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="21">st<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">st_mode<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="35">S_ISGID<pos:position pos:line="19" pos:column="42"/></name></expr>)<pos:position pos:line="19" pos:column="43"/></condition><then pos:line="19" pos:column="43"> <block pos:line="19" pos:column="44">{
			<comment type="block" pos:line="20" pos:column="25">/* We just created this directory and its setgid
			 * bit is on, so make sure it stays on. */</comment>
			<expr_stmt><expr><name pos:line="22" pos:column="25">new_mode<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">|=<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">S_ISGID<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">preserve_times<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">||<pos:position pos:line="26" pos:column="31"/></operator> <operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><call><name pos:line="26" pos:column="33">S_ISDIR<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">st<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">st_mode<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call> <operator pos:line="26" pos:column="54">&amp;&amp;<pos:position pos:line="26" pos:column="64"/></operator> <name pos:line="26" pos:column="57">omit_dir_times<pos:position pos:line="26" pos:column="71"/></name><operator pos:line="26" pos:column="71">)<pos:position pos:line="26" pos:column="72"/></operator></expr>)<pos:position pos:line="26" pos:column="73"/></condition><then pos:line="26" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">flags<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">|=<pos:position pos:line="27" pos:column="25"/></operator> <name pos:line="27" pos:column="26">ATTRS_SKIP_MTIME<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">flags<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">&amp;<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="23">ATTRS_SKIP_MTIME<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">)<pos:position pos:line="28" pos:column="40"/></operator>
	    <operator pos:line="29" pos:column="13">&amp;&amp;<pos:position pos:line="29" pos:column="23"/></operator> <call><name pos:line="29" pos:column="16">cmp_time<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">st<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">st_mtime<pos:position pos:line="29" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="39">file<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">modtime<pos:position pos:line="29" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call> <operator pos:line="29" pos:column="54">!=<pos:position pos:line="29" pos:column="56"/></operator> <literal type="number" pos:line="29" pos:column="57">0<pos:position pos:line="29" pos:column="58"/></literal></expr>)<pos:position pos:line="29" pos:column="59"/></condition><then pos:line="29" pos:column="59"> <block pos:line="29" pos:column="60">{
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">int<pos:position pos:line="30" pos:column="20"/></name></type> <name pos:line="30" pos:column="21">ret<pos:position pos:line="30" pos:column="24"/></name> <init pos:line="30" pos:column="25">= <expr><call><name pos:line="30" pos:column="27">set_modtime<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">fname<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="46">file<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">modtime<pos:position pos:line="30" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="61">st<pos:position pos:line="30" pos:column="63"/></name><operator pos:line="30" pos:column="63">-&gt;<pos:position pos:line="30" pos:column="68"/></operator><name pos:line="30" pos:column="65">st_mode<pos:position pos:line="30" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="74"/></decl_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">ret<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">&lt;<pos:position pos:line="31" pos:column="29"/></operator> <literal type="number" pos:line="31" pos:column="27">0<pos:position pos:line="31" pos:column="28"/></literal></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29"> <block pos:line="31" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">rsyserr<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">FERROR<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">errno<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="48">"failed to set times on %s"<pos:position pos:line="32" pos:column="75"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="33" pos:column="33">full_fname<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><name pos:line="33" pos:column="44">fname<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
			<return pos:line="34" pos:column="25">return <expr><literal type="number" pos:line="34" pos:column="32">0<pos:position pos:line="34" pos:column="33"/></literal></expr>;<pos:position pos:line="34" pos:column="34"/></return>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">ret<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">==<pos:position pos:line="36" pos:column="27"/></operator> <literal type="number" pos:line="36" pos:column="28">0<pos:position pos:line="36" pos:column="29"/></literal></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <comment type="block" pos:line="36" pos:column="31">/* ret == 1 if symlink could not be set */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">updated<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">=<pos:position pos:line="37" pos:column="34"/></operator> <literal type="number" pos:line="37" pos:column="35">1<pos:position pos:line="37" pos:column="36"/></literal></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="40" pos:column="9">change_uid<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">am_root<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">&amp;&amp;<pos:position pos:line="40" pos:column="40"/></operator> <name pos:line="40" pos:column="33">preserve_uid<pos:position pos:line="40" pos:column="45"/></name> <operator pos:line="40" pos:column="46">&amp;&amp;<pos:position pos:line="40" pos:column="56"/></operator> <name><name pos:line="40" pos:column="49">st<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">-&gt;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="53">st_uid<pos:position pos:line="40" pos:column="59"/></name></name> <operator pos:line="40" pos:column="60">!=<pos:position pos:line="40" pos:column="62"/></operator> <name><name pos:line="40" pos:column="63">file<pos:position pos:line="40" pos:column="67"/></name><operator pos:line="40" pos:column="67">-&gt;<pos:position pos:line="40" pos:column="72"/></operator><name pos:line="40" pos:column="69">uid<pos:position pos:line="40" pos:column="72"/></name></name></expr>;<pos:position pos:line="40" pos:column="73"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">change_gid<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">preserve_gid<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">&amp;&amp;<pos:position pos:line="41" pos:column="45"/></operator> <name><name pos:line="41" pos:column="38">file<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">gid<pos:position pos:line="41" pos:column="47"/></name></name> <operator pos:line="41" pos:column="48">!=<pos:position pos:line="41" pos:column="50"/></operator> <name pos:line="41" pos:column="51">GID_NONE<pos:position pos:line="41" pos:column="59"/></name>
		<operator pos:line="42" pos:column="17">&amp;&amp;<pos:position pos:line="42" pos:column="27"/></operator> <name><name pos:line="42" pos:column="20">st<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">st_gid<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">!=<pos:position pos:line="42" pos:column="33"/></operator> <name><name pos:line="42" pos:column="34">file<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">gid<pos:position pos:line="42" pos:column="43"/></name></name></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><operator pos:line="43" pos:column="5">!<pos:position pos:line="43" pos:column="6"/></operator><name pos:line="43" pos:column="6">defined<pos:position pos:line="43" pos:column="13"/></name> <name pos:line="43" pos:column="14">HAVE_LCHOWN<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">&amp;&amp;<pos:position pos:line="43" pos:column="36"/></operator> <operator pos:line="43" pos:column="29">!<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">defined<pos:position pos:line="43" pos:column="37"/></name> <name pos:line="43" pos:column="38">CHOWN_MODIFIES_SYMLINK<pos:position pos:line="43" pos:column="60"/></name></expr></cpp:if>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">S_ISLNK<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name><name pos:line="44" pos:column="21">st<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">st_mode<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="34"/></condition><then pos:line="44" pos:column="34">
		<block type="pseudo"><empty_stmt pos:line="45" pos:column="17">;<pos:position pos:line="45" pos:column="18"/></empty_stmt></block></then>
	<elseif pos:line="46" pos:column="9">else
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">change_uid<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">||<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">change_gid<pos:position pos:line="48" pos:column="37"/></name></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38"> <block pos:line="48" pos:column="39">{
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">verbose<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">&gt;<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="31">2<pos:position pos:line="49" pos:column="32"/></literal></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33"> <block pos:line="49" pos:column="34">{
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">change_uid<pos:position pos:line="50" pos:column="39"/></name></expr>)<pos:position pos:line="50" pos:column="40"/></condition><then pos:line="50" pos:column="40"> <block pos:line="50" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="51" pos:column="33">rprintf<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">FINFO<pos:position pos:line="51" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="52" pos:column="41">"set uid of %s from %ld to %ld\n"<pos:position pos:line="52" pos:column="74"/></literal></expr></argument>,
					<argument><expr><name pos:line="53" pos:column="41">fname<pos:position pos:line="53" pos:column="46"/></name></expr></argument>,
					<argument><expr><operator pos:line="54" pos:column="41">(<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="42">long<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">)<pos:position pos:line="54" pos:column="47"/></operator><name><name pos:line="54" pos:column="47">st<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="51">st_uid<pos:position pos:line="54" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="59">(<pos:position pos:line="54" pos:column="60"/></operator><name pos:line="54" pos:column="60">long<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">)<pos:position pos:line="54" pos:column="65"/></operator><name><name pos:line="54" pos:column="65">file<pos:position pos:line="54" pos:column="69"/></name><operator pos:line="54" pos:column="69">-&gt;<pos:position pos:line="54" pos:column="74"/></operator><name pos:line="54" pos:column="71">uid<pos:position pos:line="54" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name pos:line="56" pos:column="29">change_gid<pos:position pos:line="56" pos:column="39"/></name></expr>)<pos:position pos:line="56" pos:column="40"/></condition><then pos:line="56" pos:column="40"> <block pos:line="56" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="57" pos:column="33">rprintf<pos:position pos:line="57" pos:column="40"/></name><argument_list pos:line="57" pos:column="40">(<argument><expr><name pos:line="57" pos:column="41">FINFO<pos:position pos:line="57" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="58" pos:column="41">"set gid of %s from %ld to %ld\n"<pos:position pos:line="58" pos:column="74"/></literal></expr></argument>,
					<argument><expr><name pos:line="59" pos:column="41">fname<pos:position pos:line="59" pos:column="46"/></name></expr></argument>,
					<argument><expr><operator pos:line="60" pos:column="41">(<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="42">long<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">)<pos:position pos:line="60" pos:column="47"/></operator><name><name pos:line="60" pos:column="47">st<pos:position pos:line="60" pos:column="49"/></name><operator pos:line="60" pos:column="49">-&gt;<pos:position pos:line="60" pos:column="54"/></operator><name pos:line="60" pos:column="51">st_gid<pos:position pos:line="60" pos:column="57"/></name></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="59">(<pos:position pos:line="60" pos:column="60"/></operator><name pos:line="60" pos:column="60">long<pos:position pos:line="60" pos:column="64"/></name><operator pos:line="60" pos:column="64">)<pos:position pos:line="60" pos:column="65"/></operator><name><name pos:line="60" pos:column="65">file<pos:position pos:line="60" pos:column="69"/></name><operator pos:line="60" pos:column="69">-&gt;<pos:position pos:line="60" pos:column="74"/></operator><name pos:line="60" pos:column="71">gid<pos:position pos:line="60" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="61" pos:column="26"/></block></then></if>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><call><name pos:line="63" pos:column="21">do_lchown<pos:position pos:line="63" pos:column="30"/></name><argument_list pos:line="63" pos:column="30">(<argument><expr><name pos:line="63" pos:column="31">fname<pos:position pos:line="63" pos:column="36"/></name></expr></argument>,
		    <argument><expr><ternary><condition><expr><name pos:line="64" pos:column="21">change_uid<pos:position pos:line="64" pos:column="31"/></name></expr> ?<pos:position pos:line="64" pos:column="33"/></condition><then pos:line="64" pos:column="33"> <expr><name><name pos:line="64" pos:column="34">file<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">-&gt;<pos:position pos:line="64" pos:column="43"/></operator><name pos:line="64" pos:column="40">uid<pos:position pos:line="64" pos:column="43"/></name></name></expr> <pos:position pos:line="64" pos:column="44"/></then><else pos:line="64" pos:column="44">: <expr><name><name pos:line="64" pos:column="46">st<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">-&gt;<pos:position pos:line="64" pos:column="53"/></operator><name pos:line="64" pos:column="50">st_uid<pos:position pos:line="64" pos:column="56"/></name></name></expr></else></ternary></expr></argument>,
		    <argument><expr><ternary><condition><expr><name pos:line="65" pos:column="21">change_gid<pos:position pos:line="65" pos:column="31"/></name></expr> ?<pos:position pos:line="65" pos:column="33"/></condition><then pos:line="65" pos:column="33"> <expr><name><name pos:line="65" pos:column="34">file<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">-&gt;<pos:position pos:line="65" pos:column="43"/></operator><name pos:line="65" pos:column="40">gid<pos:position pos:line="65" pos:column="43"/></name></name></expr> <pos:position pos:line="65" pos:column="44"/></then><else pos:line="65" pos:column="44">: <expr><name><name pos:line="65" pos:column="46">st<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">-&gt;<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="50">st_gid<pos:position pos:line="65" pos:column="56"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call> <operator pos:line="65" pos:column="58">!=<pos:position pos:line="65" pos:column="60"/></operator> <literal type="number" pos:line="65" pos:column="61">0<pos:position pos:line="65" pos:column="62"/></literal></expr>)<pos:position pos:line="65" pos:column="63"/></condition><then pos:line="65" pos:column="63"> <block pos:line="65" pos:column="64">{
			<comment type="block" pos:line="66" pos:column="25">/* shouldn't have attempted to change uid or gid
			 * unless have the privilege */</comment>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">rsyserr<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">FERROR<pos:position pos:line="68" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="41">errno<pos:position pos:line="68" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="48">"%s %s failed"<pos:position pos:line="68" pos:column="62"/></literal></expr></argument>,
			    <argument><expr><ternary><condition><expr><name pos:line="69" pos:column="29">change_uid<pos:position pos:line="69" pos:column="39"/></name></expr> ?<pos:position pos:line="69" pos:column="41"/></condition><then pos:line="69" pos:column="41"> <expr><literal type="string" pos:line="69" pos:column="42">"chown"<pos:position pos:line="69" pos:column="49"/></literal></expr> <pos:position pos:line="69" pos:column="50"/></then><else pos:line="69" pos:column="50">: <expr><literal type="string" pos:line="69" pos:column="52">"chgrp"<pos:position pos:line="69" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
			    <argument><expr><call><name pos:line="70" pos:column="29">full_fname<pos:position pos:line="70" pos:column="39"/></name><argument_list pos:line="70" pos:column="39">(<argument><expr><name pos:line="70" pos:column="40">fname<pos:position pos:line="70" pos:column="45"/></name></expr></argument>)<pos:position pos:line="70" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="48"/></expr_stmt>
			<return pos:line="71" pos:column="25">return <expr><literal type="number" pos:line="71" pos:column="32">0<pos:position pos:line="71" pos:column="33"/></literal></expr>;<pos:position pos:line="71" pos:column="34"/></return>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="73" pos:column="17">/* a lchown had been done - we have to re-stat if the
		 * destination had the setuid or setgid bits set due
		 * to the side effect of the chown call */</comment>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">st<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">-&gt;<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="25">st_mode<pos:position pos:line="76" pos:column="32"/></name></name> <operator pos:line="76" pos:column="33">&amp;<pos:position pos:line="76" pos:column="38"/></operator> <operator pos:line="76" pos:column="35">(<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="36">S_ISUID<pos:position pos:line="76" pos:column="43"/></name> <operator pos:line="76" pos:column="44">|<pos:position pos:line="76" pos:column="45"/></operator> <name pos:line="76" pos:column="46">S_ISGID<pos:position pos:line="76" pos:column="53"/></name><operator pos:line="76" pos:column="53">)<pos:position pos:line="76" pos:column="54"/></operator></expr>)<pos:position pos:line="76" pos:column="55"/></condition><then pos:line="76" pos:column="55"> <block pos:line="76" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">link_stat<pos:position pos:line="77" pos:column="34"/></name><argument_list pos:line="77" pos:column="34">(<argument><expr><name pos:line="77" pos:column="35">fname<pos:position pos:line="77" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="42">st<pos:position pos:line="77" pos:column="44"/></name></expr></argument>,
				  <argument><expr><name pos:line="78" pos:column="35">keep_dirlinks<pos:position pos:line="78" pos:column="48"/></name> <operator pos:line="78" pos:column="49">&amp;&amp;<pos:position pos:line="78" pos:column="59"/></operator> <call><name pos:line="78" pos:column="52">S_ISDIR<pos:position pos:line="78" pos:column="59"/></name><argument_list pos:line="78" pos:column="59">(<argument><expr><name><name pos:line="78" pos:column="60">st<pos:position pos:line="78" pos:column="62"/></name><operator pos:line="78" pos:column="62">-&gt;<pos:position pos:line="78" pos:column="67"/></operator><name pos:line="78" pos:column="64">st_mode<pos:position pos:line="78" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="79" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="80" pos:column="17">updated<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <literal type="number" pos:line="80" pos:column="27">1<pos:position pos:line="80" pos:column="28"/></literal></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">daemon_chmod_modes<pos:position pos:line="83" pos:column="31"/></name> <operator pos:line="83" pos:column="32">&amp;&amp;<pos:position pos:line="83" pos:column="42"/></operator> <operator pos:line="83" pos:column="35">!<pos:position pos:line="83" pos:column="36"/></operator><call><name pos:line="83" pos:column="36">S_ISLNK<pos:position pos:line="83" pos:column="43"/></name><argument_list pos:line="83" pos:column="43">(<argument><expr><name pos:line="83" pos:column="44">new_mode<pos:position pos:line="83" pos:column="52"/></name></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="54"/></condition><then pos:line="83" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="17">new_mode<pos:position pos:line="84" pos:column="25"/></name> <operator pos:line="84" pos:column="26">=<pos:position pos:line="84" pos:column="27"/></operator> <call><name pos:line="84" pos:column="28">tweak_mode<pos:position pos:line="84" pos:column="38"/></name><argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">new_mode<pos:position pos:line="84" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="49">daemon_chmod_modes<pos:position pos:line="84" pos:column="67"/></name></expr></argument>)<pos:position pos:line="84" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="69"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">ifdef<pos:position pos:line="85" pos:column="7"/></cpp:directive> <name pos:line="85" pos:column="8">HAVE_CHMOD<pos:position pos:line="85" pos:column="18"/></name></cpp:ifdef>
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><operator pos:line="86" pos:column="13">(<pos:position pos:line="86" pos:column="14"/></operator><name><name pos:line="86" pos:column="14">st<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">-&gt;<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="18">st_mode<pos:position pos:line="86" pos:column="25"/></name></name> <operator pos:line="86" pos:column="26">&amp;<pos:position pos:line="86" pos:column="31"/></operator> <name pos:line="86" pos:column="28">CHMOD_BITS<pos:position pos:line="86" pos:column="38"/></name><operator pos:line="86" pos:column="38">)<pos:position pos:line="86" pos:column="39"/></operator> <operator pos:line="86" pos:column="40">!=<pos:position pos:line="86" pos:column="42"/></operator> <operator pos:line="86" pos:column="43">(<pos:position pos:line="86" pos:column="44"/></operator><name pos:line="86" pos:column="44">new_mode<pos:position pos:line="86" pos:column="52"/></name> <operator pos:line="86" pos:column="53">&amp;<pos:position pos:line="86" pos:column="58"/></operator> <name pos:line="86" pos:column="55">CHMOD_BITS<pos:position pos:line="86" pos:column="65"/></name><operator pos:line="86" pos:column="65">)<pos:position pos:line="86" pos:column="66"/></operator></expr>)<pos:position pos:line="86" pos:column="67"/></condition><then pos:line="86" pos:column="67"> <block pos:line="86" pos:column="68">{
		<decl_stmt><decl><type><name pos:line="87" pos:column="17">int<pos:position pos:line="87" pos:column="20"/></name></type> <name pos:line="87" pos:column="21">ret<pos:position pos:line="87" pos:column="24"/></name> <init pos:line="87" pos:column="25">= <expr><call><name pos:line="87" pos:column="27">do_chmod<pos:position pos:line="87" pos:column="35"/></name><argument_list pos:line="87" pos:column="35">(<argument><expr><name pos:line="87" pos:column="36">fname<pos:position pos:line="87" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="43">new_mode<pos:position pos:line="87" pos:column="51"/></name></expr></argument>)<pos:position pos:line="87" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="87" pos:column="53"/></decl_stmt>
		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><name pos:line="88" pos:column="21">ret<pos:position pos:line="88" pos:column="24"/></name> <operator pos:line="88" pos:column="25">&lt;<pos:position pos:line="88" pos:column="29"/></operator> <literal type="number" pos:line="88" pos:column="27">0<pos:position pos:line="88" pos:column="28"/></literal></expr>)<pos:position pos:line="88" pos:column="29"/></condition><then pos:line="88" pos:column="29"> <block pos:line="88" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">rsyserr<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">FERROR<pos:position pos:line="89" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="41">errno<pos:position pos:line="89" pos:column="46"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="90" pos:column="33">"failed to set permissions on %s"<pos:position pos:line="90" pos:column="66"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="91" pos:column="33">full_fname<pos:position pos:line="91" pos:column="43"/></name><argument_list pos:line="91" pos:column="43">(<argument><expr><name pos:line="91" pos:column="44">fname<pos:position pos:line="91" pos:column="49"/></name></expr></argument>)<pos:position pos:line="91" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="52"/></expr_stmt>
			<return pos:line="92" pos:column="25">return <expr><literal type="number" pos:line="92" pos:column="32">0<pos:position pos:line="92" pos:column="33"/></literal></expr>;<pos:position pos:line="92" pos:column="34"/></return>
		}<pos:position pos:line="93" pos:column="18"/></block></then></if>
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">ret<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">==<pos:position pos:line="94" pos:column="27"/></operator> <literal type="number" pos:line="94" pos:column="28">0<pos:position pos:line="94" pos:column="29"/></literal></expr>)<pos:position pos:line="94" pos:column="30"/></condition><then pos:line="94" pos:column="30"> <comment type="block" pos:line="94" pos:column="31">/* ret == 1 if symlink could not be set */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="25">updated<pos:position pos:line="95" pos:column="32"/></name> <operator pos:line="95" pos:column="33">=<pos:position pos:line="95" pos:column="34"/></operator> <literal type="number" pos:line="95" pos:column="35">1<pos:position pos:line="95" pos:column="36"/></literal></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="96" pos:column="10"/></block></then></if>
<cpp:endif pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">endif<pos:position pos:line="97" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name pos:line="99" pos:column="13">verbose<pos:position pos:line="99" pos:column="20"/></name> <operator pos:line="99" pos:column="21">&gt;<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="23">1<pos:position pos:line="99" pos:column="24"/></literal> <operator pos:line="99" pos:column="25">&amp;&amp;<pos:position pos:line="99" pos:column="35"/></operator> <name pos:line="99" pos:column="28">flags<pos:position pos:line="99" pos:column="33"/></name> <operator pos:line="99" pos:column="34">&amp;<pos:position pos:line="99" pos:column="39"/></operator> <name pos:line="99" pos:column="36">ATTRS_REPORT<pos:position pos:line="99" pos:column="48"/></name></expr>)<pos:position pos:line="99" pos:column="49"/></condition><then pos:line="99" pos:column="49"> <block pos:line="99" pos:column="50">{
		<if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name pos:line="100" pos:column="21">updated<pos:position pos:line="100" pos:column="28"/></name></expr>)<pos:position pos:line="100" pos:column="29"/></condition><then pos:line="100" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="25">rprintf<pos:position pos:line="101" pos:column="32"/></name><argument_list pos:line="101" pos:column="32">(<argument><expr><name pos:line="101" pos:column="33">FCLIENT<pos:position pos:line="101" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="42">"%s\n"<pos:position pos:line="101" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="50">fname<pos:position pos:line="101" pos:column="55"/></name></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="57"/></expr_stmt></block></then>
		<else pos:line="102" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="25">rprintf<pos:position pos:line="103" pos:column="32"/></name><argument_list pos:line="103" pos:column="32">(<argument><expr><name pos:line="103" pos:column="33">FCLIENT<pos:position pos:line="103" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="42">"%s is uptodate\n"<pos:position pos:line="103" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="62">fname<pos:position pos:line="103" pos:column="67"/></name></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="69"/></expr_stmt></block></else></if>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>
	<return pos:line="105" pos:column="9">return <expr><name pos:line="105" pos:column="16">updated<pos:position pos:line="105" pos:column="23"/></name></expr>;<pos:position pos:line="105" pos:column="24"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

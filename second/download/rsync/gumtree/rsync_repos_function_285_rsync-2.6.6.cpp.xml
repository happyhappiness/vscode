<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_285_rsync-2.6.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">recv_files<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f_in<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">file_list<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">flist<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">local_name<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">next_gen_i<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><operator pos:line="3" pos:column="26">-<pos:position pos:line="3" pos:column="27"/></operator><literal type="number" pos:line="3" pos:column="27">1<pos:position pos:line="3" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd1<pos:position pos:line="4" pos:column="16"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="17">fd2<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">STRUCT_STAT<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">st<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">iflags<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">xlen<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">fname<pos:position pos:line="7" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="22">fbuf<pos:position pos:line="7" pos:column="26"/></name><index pos:line="7" pos:column="26">[<expr><name pos:line="7" pos:column="27">MAXPATHLEN<pos:position pos:line="7" pos:column="37"/></name></expr>]<pos:position pos:line="7" pos:column="38"/></index></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">xname<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">MAXPATHLEN<pos:position pos:line="8" pos:column="30"/></name></expr>]<pos:position pos:line="8" pos:column="31"/></index></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">fnametmp<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><name pos:line="9" pos:column="23">MAXPATHLEN<pos:position pos:line="9" pos:column="33"/></name></expr>]<pos:position pos:line="9" pos:column="34"/></index></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">fnamecmp<pos:position pos:line="10" pos:column="23"/></name></decl>, <modifier pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="26">partialptr<pos:position pos:line="10" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="10" pos:column="38">numbuf<pos:position pos:line="10" pos:column="44"/></name><index pos:line="10" pos:column="44">[<expr><literal type="number" pos:line="10" pos:column="45">4<pos:position pos:line="10" pos:column="46"/></literal></expr>]<pos:position pos:line="10" pos:column="47"/></index></name></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name></type> <name><name pos:line="11" pos:column="14">fnamecmpbuf<pos:position pos:line="11" pos:column="25"/></name><index pos:line="11" pos:column="25">[<expr><name pos:line="11" pos:column="26">MAXPATHLEN<pos:position pos:line="11" pos:column="36"/></name></expr>]<pos:position pos:line="11" pos:column="37"/></index></name></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">uchar<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">fnamecmp_type<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">file_struct<pos:position pos:line="13" pos:column="27"/></name></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">file<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">stats<pos:position pos:line="14" pos:column="21"/></name></name></type> <name pos:line="14" pos:column="22">initial_stats<pos:position pos:line="14" pos:column="35"/></name></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">save_make_backups<pos:position pos:line="15" pos:column="30"/></name> <init pos:line="15" pos:column="31">= <expr><name pos:line="15" pos:column="33">make_backups<pos:position pos:line="15" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">itemizing<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><ternary><condition><expr><name pos:line="16" pos:column="25">am_daemon<pos:position pos:line="16" pos:column="34"/></name></expr> ?<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <expr><name pos:line="16" pos:column="37">daemon_log_format_has_i<pos:position pos:line="16" pos:column="60"/></name></expr>
		      <pos:position pos:line="17" pos:column="9"/></then><else pos:line="17" pos:column="23">: <expr><operator pos:line="17" pos:column="25">!<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">am_server<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">&amp;&amp;<pos:position pos:line="17" pos:column="46"/></operator> <name pos:line="17" pos:column="39">log_format_has_i<pos:position pos:line="17" pos:column="55"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">max_phase<pos:position pos:line="18" pos:column="22"/></name> <init pos:line="18" pos:column="23">= <expr><ternary><condition><expr><name pos:line="18" pos:column="25">protocol_version<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">&gt;=<pos:position pos:line="18" pos:column="47"/></operator> <literal type="number" pos:line="18" pos:column="45">29<pos:position pos:line="18" pos:column="47"/></literal></expr> ?<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49"> <expr><literal type="number" pos:line="18" pos:column="50">2<pos:position pos:line="18" pos:column="51"/></literal></expr> <pos:position pos:line="18" pos:column="52"/></then><else pos:line="18" pos:column="52">: <expr><literal type="number" pos:line="18" pos:column="54">1<pos:position pos:line="18" pos:column="55"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="18" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">i<pos:position pos:line="19" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="16">recv_ok<pos:position pos:line="19" pos:column="23"/></name></decl>;<pos:position pos:line="19" pos:column="24"/></decl_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">verbose<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&gt;<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="23">2<pos:position pos:line="21" pos:column="24"/></literal></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">rprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">FINFO<pos:position pos:line="22" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="22" pos:column="31">"recv_files(%d) starting\n"<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>,<argument><expr><name><name pos:line="22" pos:column="59">flist<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">-&gt;<pos:position pos:line="22" pos:column="69"/></operator><name pos:line="22" pos:column="66">count<pos:position pos:line="22" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">flist<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">hlink_pool<pos:position pos:line="24" pos:column="30"/></name></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block pos:line="24" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">pool_destroy<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name><name pos:line="25" pos:column="30">flist<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">hlink_pool<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">flist<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">hlink_pool<pos:position pos:line="26" pos:column="34"/></name></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <name pos:line="26" pos:column="37">NULL<pos:position pos:line="26" pos:column="41"/></name></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">delay_updates<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">init_delayed_bits<pos:position pos:line="30" pos:column="34"/></name><argument_list pos:line="30" pos:column="34">(<argument><expr><name><name pos:line="30" pos:column="35">flist<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">count<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt></block></then></if>

	<while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><literal type="number" pos:line="32" pos:column="16">1<pos:position pos:line="32" pos:column="17"/></literal></expr>)<pos:position pos:line="32" pos:column="18"/></condition> <block pos:line="32" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">cleanup_disable<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">()<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>

		<expr_stmt><expr><name pos:line="35" pos:column="17">i<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">read_int<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">f_in<pos:position pos:line="35" pos:column="34"/></name></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">i<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">==<pos:position pos:line="36" pos:column="25"/></operator> <operator pos:line="36" pos:column="26">-<pos:position pos:line="36" pos:column="27"/></operator><literal type="number" pos:line="36" pos:column="27">1<pos:position pos:line="36" pos:column="28"/></literal></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29"> <block pos:line="36" pos:column="30">{
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name pos:line="37" pos:column="29">read_batch<pos:position pos:line="37" pos:column="39"/></name></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">get_next_gen_i<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">batch_gen_fd<pos:position pos:line="38" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="62">next_gen_i<pos:position pos:line="38" pos:column="72"/></name></expr></argument>,
					       <argument><expr><name><name pos:line="39" pos:column="48">flist<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">count<pos:position pos:line="39" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="40" pos:column="33">next_gen_i<pos:position pos:line="40" pos:column="43"/></name> <operator pos:line="40" pos:column="44">=<pos:position pos:line="40" pos:column="45"/></operator> <operator pos:line="40" pos:column="46">-<pos:position pos:line="40" pos:column="47"/></operator><literal type="number" pos:line="40" pos:column="47">1<pos:position pos:line="40" pos:column="48"/></literal></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="41" pos:column="26"/></block></then></if>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">++<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">phase<pos:position pos:line="42" pos:column="36"/></name> <operator pos:line="42" pos:column="37">&gt;<pos:position pos:line="42" pos:column="41"/></operator> <name pos:line="42" pos:column="39">max_phase<pos:position pos:line="42" pos:column="48"/></name></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49">
				<block type="pseudo"><break pos:line="43" pos:column="33">break;<pos:position pos:line="43" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="44" pos:column="25">csum_length<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <name pos:line="44" pos:column="39">SUM_LENGTH<pos:position pos:line="44" pos:column="49"/></name></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">verbose<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">&gt;<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="39">2<pos:position pos:line="45" pos:column="40"/></literal></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="33">rprintf<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name pos:line="46" pos:column="41">FINFO<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="48">"recv_files phase=%d\n"<pos:position pos:line="46" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="73">phase<pos:position pos:line="46" pos:column="78"/></name></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="80"/></expr_stmt></block></then></if>
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><name pos:line="47" pos:column="29">phase<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">==<pos:position pos:line="47" pos:column="37"/></operator> <literal type="number" pos:line="47" pos:column="38">2<pos:position pos:line="47" pos:column="39"/></literal> <operator pos:line="47" pos:column="40">&amp;&amp;<pos:position pos:line="47" pos:column="50"/></operator> <name pos:line="47" pos:column="43">delay_updates<pos:position pos:line="47" pos:column="56"/></name></expr>)<pos:position pos:line="47" pos:column="57"/></condition><then pos:line="47" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="33">handle_delayed_updates<pos:position pos:line="48" pos:column="55"/></name><argument_list pos:line="48" pos:column="55">(<argument><expr><name pos:line="48" pos:column="56">flist<pos:position pos:line="48" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="63">local_name<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">send_msg<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">MSG_DONE<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="44">""<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="48">0<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">keep_partial<pos:position pos:line="50" pos:column="41"/></name> <operator pos:line="50" pos:column="42">&amp;&amp;<pos:position pos:line="50" pos:column="52"/></operator> <operator pos:line="50" pos:column="45">!<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">partial_dir<pos:position pos:line="50" pos:column="57"/></name></expr>)<pos:position pos:line="50" pos:column="58"/></condition><then pos:line="50" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">make_backups<pos:position pos:line="51" pos:column="45"/></name> <operator pos:line="51" pos:column="46">=<pos:position pos:line="51" pos:column="47"/></operator> <literal type="number" pos:line="51" pos:column="48">0<pos:position pos:line="51" pos:column="49"/></literal></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt></block></then></if> <comment type="block" pos:line="51" pos:column="51">/* prevents double backup */</comment>
			<continue pos:line="52" pos:column="25">continue;<pos:position pos:line="52" pos:column="34"/></continue>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="55" pos:column="17">iflags<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <call><name pos:line="55" pos:column="26">read_item_attrs<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name pos:line="55" pos:column="42">f_in<pos:position pos:line="55" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="48">-<pos:position pos:line="55" pos:column="49"/></operator><literal type="number" pos:line="55" pos:column="49">1<pos:position pos:line="55" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="52">i<pos:position pos:line="55" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="55">&amp;<pos:position pos:line="55" pos:column="60"/></operator><name pos:line="55" pos:column="56">fnamecmp_type<pos:position pos:line="55" pos:column="69"/></name></expr></argument>,
					 <argument><expr><name pos:line="56" pos:column="42">xname<pos:position pos:line="56" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="49">&amp;<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="50">xlen<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">iflags<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">==<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="31">ITEM_IS_NEW<pos:position pos:line="57" pos:column="42"/></name></expr>)<pos:position pos:line="57" pos:column="43"/></condition><then pos:line="57" pos:column="43"> <comment type="block" pos:line="57" pos:column="44">/* no-op packet */</comment>
			<block type="pseudo"><continue pos:line="58" pos:column="25">continue;<pos:position pos:line="58" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="60" pos:column="17">file<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <name><name pos:line="60" pos:column="24">flist<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">files<pos:position pos:line="60" pos:column="36"/></name><index pos:line="60" pos:column="36">[<expr><name pos:line="60" pos:column="37">i<pos:position pos:line="60" pos:column="38"/></name></expr>]<pos:position pos:line="60" pos:column="39"/></index></name></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="61" pos:column="17">fname<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="61" pos:column="25">local_name<pos:position pos:line="61" pos:column="35"/></name></expr> ?<pos:position pos:line="61" pos:column="37"/></condition><then pos:line="61" pos:column="37"> <expr><name pos:line="61" pos:column="38">local_name<pos:position pos:line="61" pos:column="48"/></name></expr> <pos:position pos:line="61" pos:column="49"/></then><else pos:line="61" pos:column="49">: <expr><call><name pos:line="61" pos:column="51">f_name_to<pos:position pos:line="61" pos:column="60"/></name><argument_list pos:line="61" pos:column="60">(<argument><expr><name pos:line="61" pos:column="61">file<pos:position pos:line="61" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="67">fbuf<pos:position pos:line="61" pos:column="71"/></name></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="61" pos:column="73"/></expr_stmt>

		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><name pos:line="63" pos:column="21">verbose<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">&gt;<pos:position pos:line="63" pos:column="33"/></operator> <literal type="number" pos:line="63" pos:column="31">2<pos:position pos:line="63" pos:column="32"/></literal></expr>)<pos:position pos:line="63" pos:column="33"/></condition><then pos:line="63" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">rprintf<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">(<argument><expr><name pos:line="64" pos:column="33">FINFO<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="40">"recv_files(%s)\n"<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="60">safe_fname<pos:position pos:line="64" pos:column="70"/></name><argument_list pos:line="64" pos:column="70">(<argument><expr><name pos:line="64" pos:column="71">fname<pos:position pos:line="64" pos:column="76"/></name></expr></argument>)<pos:position pos:line="64" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="79"/></expr_stmt></block></then></if>

		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><operator pos:line="66" pos:column="21">!<pos:position pos:line="66" pos:column="22"/></operator><operator pos:line="66" pos:column="22">(<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">iflags<pos:position pos:line="66" pos:column="29"/></name> <operator pos:line="66" pos:column="30">&amp;<pos:position pos:line="66" pos:column="35"/></operator> <name pos:line="66" pos:column="32">ITEM_TRANSFER<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">)<pos:position pos:line="66" pos:column="46"/></operator></expr>)<pos:position pos:line="66" pos:column="47"/></condition><then pos:line="66" pos:column="47"> <block pos:line="66" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">maybe_log_item<pos:position pos:line="67" pos:column="39"/></name><argument_list pos:line="67" pos:column="39">(<argument><expr><name pos:line="67" pos:column="40">file<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">iflags<pos:position pos:line="67" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="54">itemizing<pos:position pos:line="67" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="65">xname<pos:position pos:line="67" pos:column="70"/></name></expr></argument>)<pos:position pos:line="67" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="72"/></expr_stmt>
			<continue pos:line="68" pos:column="25">continue;<pos:position pos:line="68" pos:column="34"/></continue>
		}<pos:position pos:line="69" pos:column="18"/></block></then></if>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">phase<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">==<pos:position pos:line="70" pos:column="29"/></operator> <literal type="number" pos:line="70" pos:column="30">2<pos:position pos:line="70" pos:column="31"/></literal></expr>)<pos:position pos:line="70" pos:column="32"/></condition><then pos:line="70" pos:column="32"> <block pos:line="70" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">rprintf<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">FERROR<pos:position pos:line="71" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="72" pos:column="33">"got transfer request in phase 2 [%s]\n"<pos:position pos:line="72" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="73" pos:column="33">who_am_i<pos:position pos:line="73" pos:column="41"/></name><argument_list pos:line="73" pos:column="41">()<pos:position pos:line="73" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">exit_cleanup<pos:position pos:line="74" pos:column="37"/></name><argument_list pos:line="74" pos:column="37">(<argument><expr><name pos:line="74" pos:column="38">RERR_PROTOCOL<pos:position pos:line="74" pos:column="51"/></name></expr></argument>)<pos:position pos:line="74" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="77" pos:column="17">stats<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">.<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="23">current_file_index<pos:position pos:line="77" pos:column="41"/></name></name> <operator pos:line="77" pos:column="42">=<pos:position pos:line="77" pos:column="43"/></operator> <name pos:line="77" pos:column="44">i<pos:position pos:line="77" pos:column="45"/></name></expr>;<pos:position pos:line="77" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="78" pos:column="17">stats<pos:position pos:line="78" pos:column="22"/></name><operator pos:line="78" pos:column="22">.<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">num_transferred_files<pos:position pos:line="78" pos:column="44"/></name></name><operator pos:line="78" pos:column="44">++<pos:position pos:line="78" pos:column="46"/></operator></expr>;<pos:position pos:line="78" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="79" pos:column="17">stats<pos:position pos:line="79" pos:column="22"/></name><operator pos:line="79" pos:column="22">.<pos:position pos:line="79" pos:column="23"/></operator><name pos:line="79" pos:column="23">total_transferred_size<pos:position pos:line="79" pos:column="45"/></name></name> <operator pos:line="79" pos:column="46">+=<pos:position pos:line="79" pos:column="48"/></operator> <name><name pos:line="79" pos:column="49">file<pos:position pos:line="79" pos:column="53"/></name><operator pos:line="79" pos:column="53">-&gt;<pos:position pos:line="79" pos:column="58"/></operator><name pos:line="79" pos:column="55">length<pos:position pos:line="79" pos:column="61"/></name></name></expr>;<pos:position pos:line="79" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="80" pos:column="17">cleanup_got_literal<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <literal type="number" pos:line="80" pos:column="39">0<pos:position pos:line="80" pos:column="40"/></literal></expr>;<pos:position pos:line="80" pos:column="41"/></expr_stmt>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name><name pos:line="82" pos:column="21">server_filter_list<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">.<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="40">head<pos:position pos:line="82" pos:column="44"/></name></name>
		    <operator pos:line="83" pos:column="21">&amp;&amp;<pos:position pos:line="83" pos:column="31"/></operator> <call><name pos:line="83" pos:column="24">check_filter<pos:position pos:line="83" pos:column="36"/></name><argument_list pos:line="83" pos:column="36">(<argument><expr><operator pos:line="83" pos:column="37">&amp;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="38">server_filter_list<pos:position pos:line="83" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="58">fname<pos:position pos:line="83" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="65">0<pos:position pos:line="83" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="67"/></argument_list></call> <operator pos:line="83" pos:column="68">&lt;<pos:position pos:line="83" pos:column="72"/></operator> <literal type="number" pos:line="83" pos:column="70">0<pos:position pos:line="83" pos:column="71"/></literal></expr>)<pos:position pos:line="83" pos:column="72"/></condition><then pos:line="83" pos:column="72"> <block pos:line="83" pos:column="73">{
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">rprintf<pos:position pos:line="84" pos:column="32"/></name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">FERROR<pos:position pos:line="84" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="41">"attempt to hack rsync failed.\n"<pos:position pos:line="84" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">exit_cleanup<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">RERR_PROTOCOL<pos:position pos:line="85" pos:column="51"/></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if>

		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><operator pos:line="88" pos:column="21">!<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="22">do_xfers<pos:position pos:line="88" pos:column="30"/></name></expr>)<pos:position pos:line="88" pos:column="31"/></condition><then pos:line="88" pos:column="31"> <block pos:line="88" pos:column="32">{ <comment type="block" pos:line="88" pos:column="34">/* log the transfer */</comment>
			<if pos:line="89" pos:column="25">if <condition pos:line="89" pos:column="28">(<expr><operator pos:line="89" pos:column="29">!<pos:position pos:line="89" pos:column="30"/></operator><name pos:line="89" pos:column="30">am_server<pos:position pos:line="89" pos:column="39"/></name> <operator pos:line="89" pos:column="40">&amp;&amp;<pos:position pos:line="89" pos:column="50"/></operator> <name pos:line="89" pos:column="43">log_format<pos:position pos:line="89" pos:column="53"/></name></expr>)<pos:position pos:line="89" pos:column="54"/></condition><then pos:line="89" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="33">log_item<pos:position pos:line="90" pos:column="41"/></name><argument_list pos:line="90" pos:column="41">(<argument><expr><name pos:line="90" pos:column="42">file<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="48">&amp;<pos:position pos:line="90" pos:column="53"/></operator><name pos:line="90" pos:column="49">stats<pos:position pos:line="90" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="56">iflags<pos:position pos:line="90" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="64">NULL<pos:position pos:line="90" pos:column="68"/></name></expr></argument>)<pos:position pos:line="90" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="70"/></expr_stmt></block></then></if>
			<if pos:line="91" pos:column="25">if <condition pos:line="91" pos:column="28">(<expr><name pos:line="91" pos:column="29">read_batch<pos:position pos:line="91" pos:column="39"/></name></expr>)<pos:position pos:line="91" pos:column="40"/></condition><then pos:line="91" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="33">discard_receive_data<pos:position pos:line="92" pos:column="53"/></name><argument_list pos:line="92" pos:column="53">(<argument><expr><name pos:line="92" pos:column="54">f_in<pos:position pos:line="92" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="60">file<pos:position pos:line="92" pos:column="64"/></name><operator pos:line="92" pos:column="64">-&gt;<pos:position pos:line="92" pos:column="69"/></operator><name pos:line="92" pos:column="66">length<pos:position pos:line="92" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="74"/></expr_stmt></block></then></if>
			<continue pos:line="93" pos:column="25">continue;<pos:position pos:line="93" pos:column="34"/></continue>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">write_batch<pos:position pos:line="95" pos:column="32"/></name> <operator pos:line="95" pos:column="33">&lt;<pos:position pos:line="95" pos:column="37"/></operator> <literal type="number" pos:line="95" pos:column="35">0<pos:position pos:line="95" pos:column="36"/></literal></expr>)<pos:position pos:line="95" pos:column="37"/></condition><then pos:line="95" pos:column="37"> <block pos:line="95" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="96" pos:column="25">log_item<pos:position pos:line="96" pos:column="33"/></name><argument_list pos:line="96" pos:column="33">(<argument><expr><name pos:line="96" pos:column="34">file<pos:position pos:line="96" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="40">&amp;<pos:position pos:line="96" pos:column="45"/></operator><name pos:line="96" pos:column="41">stats<pos:position pos:line="96" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="48">iflags<pos:position pos:line="96" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="56">NULL<pos:position pos:line="96" pos:column="60"/></name></expr></argument>)<pos:position pos:line="96" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="62"/></expr_stmt>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><operator pos:line="97" pos:column="29">!<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="30">am_server<pos:position pos:line="97" pos:column="39"/></name></expr>)<pos:position pos:line="97" pos:column="40"/></condition><then pos:line="97" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="33">discard_receive_data<pos:position pos:line="98" pos:column="53"/></name><argument_list pos:line="98" pos:column="53">(<argument><expr><name pos:line="98" pos:column="54">f_in<pos:position pos:line="98" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="60">file<pos:position pos:line="98" pos:column="64"/></name><operator pos:line="98" pos:column="64">-&gt;<pos:position pos:line="98" pos:column="69"/></operator><name pos:line="98" pos:column="66">length<pos:position pos:line="98" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="74"/></expr_stmt></block></then></if>
			<continue pos:line="99" pos:column="25">continue;<pos:position pos:line="99" pos:column="34"/></continue>
		}<pos:position pos:line="100" pos:column="18"/></block></then></if>

		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">read_batch<pos:position pos:line="102" pos:column="31"/></name></expr>)<pos:position pos:line="102" pos:column="32"/></condition><then pos:line="102" pos:column="32"> <block pos:line="102" pos:column="33">{
			<expr_stmt><expr><name pos:line="103" pos:column="25">next_gen_i<pos:position pos:line="103" pos:column="35"/></name> <operator pos:line="103" pos:column="36">=<pos:position pos:line="103" pos:column="37"/></operator> <call><name pos:line="103" pos:column="38">get_next_gen_i<pos:position pos:line="103" pos:column="52"/></name><argument_list pos:line="103" pos:column="52">(<argument><expr><name pos:line="103" pos:column="53">batch_gen_fd<pos:position pos:line="103" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="67">next_gen_i<pos:position pos:line="103" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="79">i<pos:position pos:line="103" pos:column="80"/></name></expr></argument>)<pos:position pos:line="103" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="82"/></expr_stmt>
			<if pos:line="104" pos:column="25">if <condition pos:line="104" pos:column="28">(<expr><name pos:line="104" pos:column="29">i<pos:position pos:line="104" pos:column="30"/></name> <operator pos:line="104" pos:column="31">&lt;<pos:position pos:line="104" pos:column="35"/></operator> <name pos:line="104" pos:column="33">next_gen_i<pos:position pos:line="104" pos:column="43"/></name></expr>)<pos:position pos:line="104" pos:column="44"/></condition><then pos:line="104" pos:column="44"> <block pos:line="104" pos:column="45">{
				<expr_stmt><expr><call><name pos:line="105" pos:column="33">rprintf<pos:position pos:line="105" pos:column="40"/></name><argument_list pos:line="105" pos:column="40">(<argument><expr><name pos:line="105" pos:column="41">FINFO<pos:position pos:line="105" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="48">"(Skipping batched update for \"%s\")\n"<pos:position pos:line="105" pos:column="88"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="106" pos:column="41">safe_fname<pos:position pos:line="106" pos:column="51"/></name><argument_list pos:line="106" pos:column="51">(<argument><expr><name pos:line="106" pos:column="52">fname<pos:position pos:line="106" pos:column="57"/></name></expr></argument>)<pos:position pos:line="106" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="107" pos:column="33">discard_receive_data<pos:position pos:line="107" pos:column="53"/></name><argument_list pos:line="107" pos:column="53">(<argument><expr><name pos:line="107" pos:column="54">f_in<pos:position pos:line="107" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="60">file<pos:position pos:line="107" pos:column="64"/></name><operator pos:line="107" pos:column="64">-&gt;<pos:position pos:line="107" pos:column="69"/></operator><name pos:line="107" pos:column="66">length<pos:position pos:line="107" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="74"/></expr_stmt>
				<continue pos:line="108" pos:column="33">continue;<pos:position pos:line="108" pos:column="42"/></continue>
			}<pos:position pos:line="109" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="110" pos:column="25">next_gen_i<pos:position pos:line="110" pos:column="35"/></name> <operator pos:line="110" pos:column="36">=<pos:position pos:line="110" pos:column="37"/></operator> <operator pos:line="110" pos:column="38">-<pos:position pos:line="110" pos:column="39"/></operator><literal type="number" pos:line="110" pos:column="39">1<pos:position pos:line="110" pos:column="40"/></literal></expr>;<pos:position pos:line="110" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="113" pos:column="17">partialptr<pos:position pos:line="113" pos:column="27"/></name> <operator pos:line="113" pos:column="28">=<pos:position pos:line="113" pos:column="29"/></operator> <ternary><condition><expr><name pos:line="113" pos:column="30">partial_dir<pos:position pos:line="113" pos:column="41"/></name></expr> ?<pos:position pos:line="113" pos:column="43"/></condition><then pos:line="113" pos:column="43"> <expr><call><name pos:line="113" pos:column="44">partial_dir_fname<pos:position pos:line="113" pos:column="61"/></name><argument_list pos:line="113" pos:column="61">(<argument><expr><name pos:line="113" pos:column="62">fname<pos:position pos:line="113" pos:column="67"/></name></expr></argument>)<pos:position pos:line="113" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="113" pos:column="69"/></then><else pos:line="113" pos:column="69">: <expr><name pos:line="113" pos:column="71">fname<pos:position pos:line="113" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="113" pos:column="77"/></expr_stmt>

		<if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><name pos:line="115" pos:column="21">protocol_version<pos:position pos:line="115" pos:column="37"/></name> <operator pos:line="115" pos:column="38">&gt;=<pos:position pos:line="115" pos:column="43"/></operator> <literal type="number" pos:line="115" pos:column="41">29<pos:position pos:line="115" pos:column="43"/></literal></expr>)<pos:position pos:line="115" pos:column="44"/></condition><then pos:line="115" pos:column="44"> <block pos:line="115" pos:column="45">{
			<switch pos:line="116" pos:column="25">switch <condition pos:line="116" pos:column="32">(<expr><name pos:line="116" pos:column="33">fnamecmp_type<pos:position pos:line="116" pos:column="46"/></name></expr>)<pos:position pos:line="116" pos:column="47"/></condition> <block pos:line="116" pos:column="48">{
			<case pos:line="117" pos:column="25">case <expr><name pos:line="117" pos:column="30">FNAMECMP_FNAME<pos:position pos:line="117" pos:column="44"/></name></expr>:<pos:position pos:line="117" pos:column="45"/></case>
				<expr_stmt><expr><name pos:line="118" pos:column="33">fnamecmp<pos:position pos:line="118" pos:column="41"/></name> <operator pos:line="118" pos:column="42">=<pos:position pos:line="118" pos:column="43"/></operator> <name pos:line="118" pos:column="44">fname<pos:position pos:line="118" pos:column="49"/></name></expr>;<pos:position pos:line="118" pos:column="50"/></expr_stmt>
				<break pos:line="119" pos:column="33">break;<pos:position pos:line="119" pos:column="39"/></break>
			<case pos:line="120" pos:column="25">case <expr><name pos:line="120" pos:column="30">FNAMECMP_PARTIAL_DIR<pos:position pos:line="120" pos:column="50"/></name></expr>:<pos:position pos:line="120" pos:column="51"/></case>
				<expr_stmt><expr><name pos:line="121" pos:column="33">fnamecmp<pos:position pos:line="121" pos:column="41"/></name> <operator pos:line="121" pos:column="42">=<pos:position pos:line="121" pos:column="43"/></operator> <name pos:line="121" pos:column="44">partialptr<pos:position pos:line="121" pos:column="54"/></name></expr>;<pos:position pos:line="121" pos:column="55"/></expr_stmt>
				<break pos:line="122" pos:column="33">break;<pos:position pos:line="122" pos:column="39"/></break>
			<case pos:line="123" pos:column="25">case <expr><name pos:line="123" pos:column="30">FNAMECMP_BACKUP<pos:position pos:line="123" pos:column="45"/></name></expr>:<pos:position pos:line="123" pos:column="46"/></case>
				<expr_stmt><expr><name pos:line="124" pos:column="33">fnamecmp<pos:position pos:line="124" pos:column="41"/></name> <operator pos:line="124" pos:column="42">=<pos:position pos:line="124" pos:column="43"/></operator> <call><name pos:line="124" pos:column="44">get_backup_name<pos:position pos:line="124" pos:column="59"/></name><argument_list pos:line="124" pos:column="59">(<argument><expr><name pos:line="124" pos:column="60">fname<pos:position pos:line="124" pos:column="65"/></name></expr></argument>)<pos:position pos:line="124" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="67"/></expr_stmt>
				<break pos:line="125" pos:column="33">break;<pos:position pos:line="125" pos:column="39"/></break>
			<case pos:line="126" pos:column="25">case <expr><name pos:line="126" pos:column="30">FNAMECMP_FUZZY<pos:position pos:line="126" pos:column="44"/></name></expr>:<pos:position pos:line="126" pos:column="45"/></case>
				<if pos:line="127" pos:column="33">if <condition pos:line="127" pos:column="36">(<expr><name><name pos:line="127" pos:column="37">file<pos:position pos:line="127" pos:column="41"/></name><operator pos:line="127" pos:column="41">-&gt;<pos:position pos:line="127" pos:column="46"/></operator><name pos:line="127" pos:column="43">dirname<pos:position pos:line="127" pos:column="50"/></name></name></expr>)<pos:position pos:line="127" pos:column="51"/></condition><then pos:line="127" pos:column="51"> <block pos:line="127" pos:column="52">{
					<expr_stmt><expr><call><name pos:line="128" pos:column="41">pathjoin<pos:position pos:line="128" pos:column="49"/></name><argument_list pos:line="128" pos:column="49">(<argument><expr><name pos:line="128" pos:column="50">fnamecmpbuf<pos:position pos:line="128" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="63">MAXPATHLEN<pos:position pos:line="128" pos:column="73"/></name></expr></argument>,
						 <argument><expr><name><name pos:line="129" pos:column="50">file<pos:position pos:line="129" pos:column="54"/></name><operator pos:line="129" pos:column="54">-&gt;<pos:position pos:line="129" pos:column="59"/></operator><name pos:line="129" pos:column="56">dirname<pos:position pos:line="129" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="65">xname<pos:position pos:line="129" pos:column="70"/></name></expr></argument>)<pos:position pos:line="129" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="72"/></expr_stmt>
					<expr_stmt><expr><name pos:line="130" pos:column="41">fnamecmp<pos:position pos:line="130" pos:column="49"/></name> <operator pos:line="130" pos:column="50">=<pos:position pos:line="130" pos:column="51"/></operator> <name pos:line="130" pos:column="52">fnamecmpbuf<pos:position pos:line="130" pos:column="63"/></name></expr>;<pos:position pos:line="130" pos:column="64"/></expr_stmt>
				}<pos:position pos:line="131" pos:column="34"/></block></then> <else pos:line="131" pos:column="35">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="132" pos:column="41">fnamecmp<pos:position pos:line="132" pos:column="49"/></name> <operator pos:line="132" pos:column="50">=<pos:position pos:line="132" pos:column="51"/></operator> <name pos:line="132" pos:column="52">xname<pos:position pos:line="132" pos:column="57"/></name></expr>;<pos:position pos:line="132" pos:column="58"/></expr_stmt></block></else></if>
				<break pos:line="133" pos:column="33">break;<pos:position pos:line="133" pos:column="39"/></break>
			<default pos:line="134" pos:column="25">default:<pos:position pos:line="134" pos:column="33"/></default>
				<if pos:line="135" pos:column="33">if <condition pos:line="135" pos:column="36">(<expr><name pos:line="135" pos:column="37">fnamecmp_type<pos:position pos:line="135" pos:column="50"/></name> <operator pos:line="135" pos:column="51">&gt;=<pos:position pos:line="135" pos:column="56"/></operator> <name pos:line="135" pos:column="54">basis_dir_cnt<pos:position pos:line="135" pos:column="67"/></name></expr>)<pos:position pos:line="135" pos:column="68"/></condition><then pos:line="135" pos:column="68"> <block pos:line="135" pos:column="69">{
					<expr_stmt><expr><call><name pos:line="136" pos:column="41">rprintf<pos:position pos:line="136" pos:column="48"/></name><argument_list pos:line="136" pos:column="48">(<argument><expr><name pos:line="136" pos:column="49">FERROR<pos:position pos:line="136" pos:column="55"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="137" pos:column="49">"invalid basis_dir index: %d.\n"<pos:position pos:line="137" pos:column="81"/></literal></expr></argument>,
						<argument><expr><name pos:line="138" pos:column="49">fnamecmp_type<pos:position pos:line="138" pos:column="62"/></name></expr></argument>)<pos:position pos:line="138" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="64"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="139" pos:column="41">exit_cleanup<pos:position pos:line="139" pos:column="53"/></name><argument_list pos:line="139" pos:column="53">(<argument><expr><name pos:line="139" pos:column="54">RERR_PROTOCOL<pos:position pos:line="139" pos:column="67"/></name></expr></argument>)<pos:position pos:line="139" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="69"/></expr_stmt>
				}<pos:position pos:line="140" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="141" pos:column="33">pathjoin<pos:position pos:line="141" pos:column="41"/></name><argument_list pos:line="141" pos:column="41">(<argument><expr><name pos:line="141" pos:column="42">fnamecmpbuf<pos:position pos:line="141" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="141" pos:column="55">sizeof <name pos:line="141" pos:column="62">fnamecmpbuf<pos:position pos:line="141" pos:column="73"/></name></sizeof></expr></argument>,
					 <argument><expr><name><name pos:line="142" pos:column="42">basis_dir<pos:position pos:line="142" pos:column="51"/></name><index pos:line="142" pos:column="51">[<expr><name pos:line="142" pos:column="52">fnamecmp_type<pos:position pos:line="142" pos:column="65"/></name></expr>]<pos:position pos:line="142" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="68">fname<pos:position pos:line="142" pos:column="73"/></name></expr></argument>)<pos:position pos:line="142" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><name pos:line="143" pos:column="33">fnamecmp<pos:position pos:line="143" pos:column="41"/></name> <operator pos:line="143" pos:column="42">=<pos:position pos:line="143" pos:column="43"/></operator> <name pos:line="143" pos:column="44">fnamecmpbuf<pos:position pos:line="143" pos:column="55"/></name></expr>;<pos:position pos:line="143" pos:column="56"/></expr_stmt>
				<break pos:line="144" pos:column="33">break;<pos:position pos:line="144" pos:column="39"/></break>
			}<pos:position pos:line="145" pos:column="26"/></block></switch>
			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><operator pos:line="146" pos:column="29">!<pos:position pos:line="146" pos:column="30"/></operator><name pos:line="146" pos:column="30">fnamecmp<pos:position pos:line="146" pos:column="38"/></name> <operator pos:line="146" pos:column="39">||<pos:position pos:line="146" pos:column="41"/></operator> <operator pos:line="146" pos:column="42">(<pos:position pos:line="146" pos:column="43"/></operator><name><name pos:line="146" pos:column="43">server_filter_list<pos:position pos:line="146" pos:column="61"/></name><operator pos:line="146" pos:column="61">.<pos:position pos:line="146" pos:column="62"/></operator><name pos:line="146" pos:column="62">head<pos:position pos:line="146" pos:column="66"/></name></name>
			  <operator pos:line="147" pos:column="27">&amp;&amp;<pos:position pos:line="147" pos:column="37"/></operator> <call><name pos:line="147" pos:column="30">check_filter<pos:position pos:line="147" pos:column="42"/></name><argument_list pos:line="147" pos:column="42">(<argument><expr><operator pos:line="147" pos:column="43">&amp;<pos:position pos:line="147" pos:column="48"/></operator><name pos:line="147" pos:column="44">server_filter_list<pos:position pos:line="147" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="64">fname<pos:position pos:line="147" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="71">0<pos:position pos:line="147" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="73"/></argument_list></call> <operator pos:line="147" pos:column="74">&lt;<pos:position pos:line="147" pos:column="78"/></operator> <literal type="number" pos:line="147" pos:column="76">0<pos:position pos:line="147" pos:column="77"/></literal><operator pos:line="147" pos:column="77">)<pos:position pos:line="147" pos:column="78"/></operator></expr>)<pos:position pos:line="147" pos:column="79"/></condition><then pos:line="147" pos:column="79">
				<block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="33">fnamecmp<pos:position pos:line="148" pos:column="41"/></name> <operator pos:line="148" pos:column="42">=<pos:position pos:line="148" pos:column="43"/></operator> <name pos:line="148" pos:column="44">fname<pos:position pos:line="148" pos:column="49"/></name></expr>;<pos:position pos:line="148" pos:column="50"/></expr_stmt></block></then></if>
		}<pos:position pos:line="149" pos:column="18"/></block></then> <else pos:line="149" pos:column="19">else <block pos:line="149" pos:column="24">{
			<comment type="block" pos:line="150" pos:column="25">/* Reminder: --inplace &amp;&amp; --partial-dir are never
			 * enabled at the same time. */</comment>
			<if pos:line="152" pos:column="25">if <condition pos:line="152" pos:column="28">(<expr><name pos:line="152" pos:column="29">inplace<pos:position pos:line="152" pos:column="36"/></name> <operator pos:line="152" pos:column="37">&amp;&amp;<pos:position pos:line="152" pos:column="47"/></operator> <name pos:line="152" pos:column="40">make_backups<pos:position pos:line="152" pos:column="52"/></name></expr>)<pos:position pos:line="152" pos:column="53"/></condition><then pos:line="152" pos:column="53"> <block pos:line="152" pos:column="54">{
				<if pos:line="153" pos:column="33">if <condition pos:line="153" pos:column="36">(<expr><operator pos:line="153" pos:column="37">!<pos:position pos:line="153" pos:column="38"/></operator><operator pos:line="153" pos:column="38">(<pos:position pos:line="153" pos:column="39"/></operator><name pos:line="153" pos:column="39">fnamecmp<pos:position pos:line="153" pos:column="47"/></name> <operator pos:line="153" pos:column="48">=<pos:position pos:line="153" pos:column="49"/></operator> <call><name pos:line="153" pos:column="50">get_backup_name<pos:position pos:line="153" pos:column="65"/></name><argument_list pos:line="153" pos:column="65">(<argument><expr><name pos:line="153" pos:column="66">fname<pos:position pos:line="153" pos:column="71"/></name></expr></argument>)<pos:position pos:line="153" pos:column="72"/></argument_list></call><operator pos:line="153" pos:column="72">)<pos:position pos:line="153" pos:column="73"/></operator></expr>)<pos:position pos:line="153" pos:column="74"/></condition><then pos:line="153" pos:column="74">
					<block type="pseudo"><expr_stmt><expr><name pos:line="154" pos:column="41">fnamecmp<pos:position pos:line="154" pos:column="49"/></name> <operator pos:line="154" pos:column="50">=<pos:position pos:line="154" pos:column="51"/></operator> <name pos:line="154" pos:column="52">fname<pos:position pos:line="154" pos:column="57"/></name></expr>;<pos:position pos:line="154" pos:column="58"/></expr_stmt></block></then></if>
			}<pos:position pos:line="155" pos:column="26"/></block></then> <elseif pos:line="155" pos:column="27">else <if pos:line="155" pos:column="32">if <condition pos:line="155" pos:column="35">(<expr><name pos:line="155" pos:column="36">partial_dir<pos:position pos:line="155" pos:column="47"/></name> <operator pos:line="155" pos:column="48">&amp;&amp;<pos:position pos:line="155" pos:column="58"/></operator> <name pos:line="155" pos:column="51">partialptr<pos:position pos:line="155" pos:column="61"/></name></expr>)<pos:position pos:line="155" pos:column="62"/></condition><then pos:line="155" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="33">fnamecmp<pos:position pos:line="156" pos:column="41"/></name> <operator pos:line="156" pos:column="42">=<pos:position pos:line="156" pos:column="43"/></operator> <name pos:line="156" pos:column="44">partialptr<pos:position pos:line="156" pos:column="54"/></name></expr>;<pos:position pos:line="156" pos:column="55"/></expr_stmt></block></then></if></elseif>
			<else pos:line="157" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="158" pos:column="33">fnamecmp<pos:position pos:line="158" pos:column="41"/></name> <operator pos:line="158" pos:column="42">=<pos:position pos:line="158" pos:column="43"/></operator> <name pos:line="158" pos:column="44">fname<pos:position pos:line="158" pos:column="49"/></name></expr>;<pos:position pos:line="158" pos:column="50"/></expr_stmt></block></else></if>
		}<pos:position pos:line="159" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="161" pos:column="17">initial_stats<pos:position pos:line="161" pos:column="30"/></name> <operator pos:line="161" pos:column="31">=<pos:position pos:line="161" pos:column="32"/></operator> <name pos:line="161" pos:column="33">stats<pos:position pos:line="161" pos:column="38"/></name></expr>;<pos:position pos:line="161" pos:column="39"/></expr_stmt>

		<comment type="block" pos:line="163" pos:column="17">/* open the file */</comment>
		<expr_stmt><expr><name pos:line="164" pos:column="17">fd1<pos:position pos:line="164" pos:column="20"/></name> <operator pos:line="164" pos:column="21">=<pos:position pos:line="164" pos:column="22"/></operator> <call><name pos:line="164" pos:column="23">do_open<pos:position pos:line="164" pos:column="30"/></name><argument_list pos:line="164" pos:column="30">(<argument><expr><name pos:line="164" pos:column="31">fnamecmp<pos:position pos:line="164" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="41">O_RDONLY<pos:position pos:line="164" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="164" pos:column="51">0<pos:position pos:line="164" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="54"/></expr_stmt>

		<if pos:line="166" pos:column="17">if <condition pos:line="166" pos:column="20">(<expr><name pos:line="166" pos:column="21">fd1<pos:position pos:line="166" pos:column="24"/></name> <operator pos:line="166" pos:column="25">==<pos:position pos:line="166" pos:column="27"/></operator> <operator pos:line="166" pos:column="28">-<pos:position pos:line="166" pos:column="29"/></operator><literal type="number" pos:line="166" pos:column="29">1<pos:position pos:line="166" pos:column="30"/></literal> <operator pos:line="166" pos:column="31">&amp;&amp;<pos:position pos:line="166" pos:column="41"/></operator> <name pos:line="166" pos:column="34">protocol_version<pos:position pos:line="166" pos:column="50"/></name> <operator pos:line="166" pos:column="51">&lt;<pos:position pos:line="166" pos:column="55"/></operator> <literal type="number" pos:line="166" pos:column="53">29<pos:position pos:line="166" pos:column="55"/></literal></expr>)<pos:position pos:line="166" pos:column="56"/></condition><then pos:line="166" pos:column="56"> <block pos:line="166" pos:column="57">{
			<if pos:line="167" pos:column="25">if <condition pos:line="167" pos:column="28">(<expr><name pos:line="167" pos:column="29">fnamecmp<pos:position pos:line="167" pos:column="37"/></name> <operator pos:line="167" pos:column="38">!=<pos:position pos:line="167" pos:column="40"/></operator> <name pos:line="167" pos:column="41">fname<pos:position pos:line="167" pos:column="46"/></name></expr>)<pos:position pos:line="167" pos:column="47"/></condition><then pos:line="167" pos:column="47"> <block pos:line="167" pos:column="48">{
				<expr_stmt><expr><name pos:line="168" pos:column="33">fnamecmp<pos:position pos:line="168" pos:column="41"/></name> <operator pos:line="168" pos:column="42">=<pos:position pos:line="168" pos:column="43"/></operator> <name pos:line="168" pos:column="44">fname<pos:position pos:line="168" pos:column="49"/></name></expr>;<pos:position pos:line="168" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="169" pos:column="33">fd1<pos:position pos:line="169" pos:column="36"/></name> <operator pos:line="169" pos:column="37">=<pos:position pos:line="169" pos:column="38"/></operator> <call><name pos:line="169" pos:column="39">do_open<pos:position pos:line="169" pos:column="46"/></name><argument_list pos:line="169" pos:column="46">(<argument><expr><name pos:line="169" pos:column="47">fnamecmp<pos:position pos:line="169" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="57">O_RDONLY<pos:position pos:line="169" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="67">0<pos:position pos:line="169" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="170" pos:column="26"/></block></then></if>

			<if pos:line="172" pos:column="25">if <condition pos:line="172" pos:column="28">(<expr><name pos:line="172" pos:column="29">fd1<pos:position pos:line="172" pos:column="32"/></name> <operator pos:line="172" pos:column="33">==<pos:position pos:line="172" pos:column="35"/></operator> <operator pos:line="172" pos:column="36">-<pos:position pos:line="172" pos:column="37"/></operator><literal type="number" pos:line="172" pos:column="37">1<pos:position pos:line="172" pos:column="38"/></literal> <operator pos:line="172" pos:column="39">&amp;&amp;<pos:position pos:line="172" pos:column="49"/></operator> <name><name pos:line="172" pos:column="42">basis_dir<pos:position pos:line="172" pos:column="51"/></name><index pos:line="172" pos:column="51">[<expr><literal type="number" pos:line="172" pos:column="52">0<pos:position pos:line="172" pos:column="53"/></literal></expr>]<pos:position pos:line="172" pos:column="54"/></index></name></expr>)<pos:position pos:line="172" pos:column="55"/></condition><then pos:line="172" pos:column="55"> <block pos:line="172" pos:column="56">{
				<comment type="block" pos:line="173" pos:column="33">/* pre-29 allowed only one alternate basis */</comment>
				<expr_stmt><expr><call><name pos:line="174" pos:column="33">pathjoin<pos:position pos:line="174" pos:column="41"/></name><argument_list pos:line="174" pos:column="41">(<argument><expr><name pos:line="174" pos:column="42">fnamecmpbuf<pos:position pos:line="174" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="174" pos:column="55">sizeof <name pos:line="174" pos:column="62">fnamecmpbuf<pos:position pos:line="174" pos:column="73"/></name></sizeof></expr></argument>,
					 <argument><expr><name><name pos:line="175" pos:column="42">basis_dir<pos:position pos:line="175" pos:column="51"/></name><index pos:line="175" pos:column="51">[<expr><literal type="number" pos:line="175" pos:column="52">0<pos:position pos:line="175" pos:column="53"/></literal></expr>]<pos:position pos:line="175" pos:column="54"/></index></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="56">fname<pos:position pos:line="175" pos:column="61"/></name></expr></argument>)<pos:position pos:line="175" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name pos:line="176" pos:column="33">fnamecmp<pos:position pos:line="176" pos:column="41"/></name> <operator pos:line="176" pos:column="42">=<pos:position pos:line="176" pos:column="43"/></operator> <name pos:line="176" pos:column="44">fnamecmpbuf<pos:position pos:line="176" pos:column="55"/></name></expr>;<pos:position pos:line="176" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="177" pos:column="33">fd1<pos:position pos:line="177" pos:column="36"/></name> <operator pos:line="177" pos:column="37">=<pos:position pos:line="177" pos:column="38"/></operator> <call><name pos:line="177" pos:column="39">do_open<pos:position pos:line="177" pos:column="46"/></name><argument_list pos:line="177" pos:column="46">(<argument><expr><name pos:line="177" pos:column="47">fnamecmp<pos:position pos:line="177" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="57">O_RDONLY<pos:position pos:line="177" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="177" pos:column="67">0<pos:position pos:line="177" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="178" pos:column="26"/></block></then></if>
		}<pos:position pos:line="179" pos:column="18"/></block></then></if>

		<if pos:line="181" pos:column="17">if <condition pos:line="181" pos:column="20">(<expr><name pos:line="181" pos:column="21">fd1<pos:position pos:line="181" pos:column="24"/></name> <operator pos:line="181" pos:column="25">!=<pos:position pos:line="181" pos:column="27"/></operator> <operator pos:line="181" pos:column="28">-<pos:position pos:line="181" pos:column="29"/></operator><literal type="number" pos:line="181" pos:column="29">1<pos:position pos:line="181" pos:column="30"/></literal> <operator pos:line="181" pos:column="31">&amp;&amp;<pos:position pos:line="181" pos:column="41"/></operator> <call><name pos:line="181" pos:column="34">do_fstat<pos:position pos:line="181" pos:column="42"/></name><argument_list pos:line="181" pos:column="42">(<argument><expr><name pos:line="181" pos:column="43">fd1<pos:position pos:line="181" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="181" pos:column="47">&amp;<pos:position pos:line="181" pos:column="52"/></operator><name pos:line="181" pos:column="48">st<pos:position pos:line="181" pos:column="50"/></name></expr></argument>)<pos:position pos:line="181" pos:column="51"/></argument_list></call> <operator pos:line="181" pos:column="52">!=<pos:position pos:line="181" pos:column="54"/></operator> <literal type="number" pos:line="181" pos:column="55">0<pos:position pos:line="181" pos:column="56"/></literal></expr>)<pos:position pos:line="181" pos:column="57"/></condition><then pos:line="181" pos:column="57"> <block pos:line="181" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="182" pos:column="25">rsyserr<pos:position pos:line="182" pos:column="32"/></name><argument_list pos:line="182" pos:column="32">(<argument><expr><name pos:line="182" pos:column="33">FERROR<pos:position pos:line="182" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="41">errno<pos:position pos:line="182" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="48">"fstat %s failed"<pos:position pos:line="182" pos:column="65"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="183" pos:column="33">full_fname<pos:position pos:line="183" pos:column="43"/></name><argument_list pos:line="183" pos:column="43">(<argument><expr><name pos:line="183" pos:column="44">fnamecmp<pos:position pos:line="183" pos:column="52"/></name></expr></argument>)<pos:position pos:line="183" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="184" pos:column="25">discard_receive_data<pos:position pos:line="184" pos:column="45"/></name><argument_list pos:line="184" pos:column="45">(<argument><expr><name pos:line="184" pos:column="46">f_in<pos:position pos:line="184" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="52">file<pos:position pos:line="184" pos:column="56"/></name><operator pos:line="184" pos:column="56">-&gt;<pos:position pos:line="184" pos:column="61"/></operator><name pos:line="184" pos:column="58">length<pos:position pos:line="184" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="184" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="185" pos:column="25">close<pos:position pos:line="185" pos:column="30"/></name><argument_list pos:line="185" pos:column="30">(<argument><expr><name pos:line="185" pos:column="31">fd1<pos:position pos:line="185" pos:column="34"/></name></expr></argument>)<pos:position pos:line="185" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="36"/></expr_stmt>
			<continue pos:line="186" pos:column="25">continue;<pos:position pos:line="186" pos:column="34"/></continue>
		}<pos:position pos:line="187" pos:column="18"/></block></then></if>

		<if pos:line="189" pos:column="17">if <condition pos:line="189" pos:column="20">(<expr><name pos:line="189" pos:column="21">fd1<pos:position pos:line="189" pos:column="24"/></name> <operator pos:line="189" pos:column="25">!=<pos:position pos:line="189" pos:column="27"/></operator> <operator pos:line="189" pos:column="28">-<pos:position pos:line="189" pos:column="29"/></operator><literal type="number" pos:line="189" pos:column="29">1<pos:position pos:line="189" pos:column="30"/></literal> <operator pos:line="189" pos:column="31">&amp;&amp;<pos:position pos:line="189" pos:column="41"/></operator> <call><name pos:line="189" pos:column="34">S_ISDIR<pos:position pos:line="189" pos:column="41"/></name><argument_list pos:line="189" pos:column="41">(<argument><expr><name><name pos:line="189" pos:column="42">st<pos:position pos:line="189" pos:column="44"/></name><operator pos:line="189" pos:column="44">.<pos:position pos:line="189" pos:column="45"/></operator><name pos:line="189" pos:column="45">st_mode<pos:position pos:line="189" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="53"/></argument_list></call> <operator pos:line="189" pos:column="54">&amp;&amp;<pos:position pos:line="189" pos:column="64"/></operator> <name pos:line="189" pos:column="57">fnamecmp<pos:position pos:line="189" pos:column="65"/></name> <operator pos:line="189" pos:column="66">==<pos:position pos:line="189" pos:column="68"/></operator> <name pos:line="189" pos:column="69">fname<pos:position pos:line="189" pos:column="74"/></name></expr>)<pos:position pos:line="189" pos:column="75"/></condition><then pos:line="189" pos:column="75"> <block pos:line="189" pos:column="76">{
			<comment type="block" pos:line="190" pos:column="25">/* this special handling for directories
			 * wouldn't be necessary if robust_rename()
			 * and the underlying robust_unlink could cope
			 * with directories
			 */</comment>
			<expr_stmt><expr><call><name pos:line="195" pos:column="25">rprintf<pos:position pos:line="195" pos:column="32"/></name><argument_list pos:line="195" pos:column="32">(<argument><expr><name pos:line="195" pos:column="33">FERROR<pos:position pos:line="195" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="195" pos:column="40">"recv_files: %s is a directory\n"<pos:position pos:line="195" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="196" pos:column="33">full_fname<pos:position pos:line="196" pos:column="43"/></name><argument_list pos:line="196" pos:column="43">(<argument><expr><name pos:line="196" pos:column="44">fnamecmp<pos:position pos:line="196" pos:column="52"/></name></expr></argument>)<pos:position pos:line="196" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="196" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="197" pos:column="25">discard_receive_data<pos:position pos:line="197" pos:column="45"/></name><argument_list pos:line="197" pos:column="45">(<argument><expr><name pos:line="197" pos:column="46">f_in<pos:position pos:line="197" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="52">file<pos:position pos:line="197" pos:column="56"/></name><operator pos:line="197" pos:column="56">-&gt;<pos:position pos:line="197" pos:column="61"/></operator><name pos:line="197" pos:column="58">length<pos:position pos:line="197" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="198" pos:column="25">close<pos:position pos:line="198" pos:column="30"/></name><argument_list pos:line="198" pos:column="30">(<argument><expr><name pos:line="198" pos:column="31">fd1<pos:position pos:line="198" pos:column="34"/></name></expr></argument>)<pos:position pos:line="198" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="36"/></expr_stmt>
			<continue pos:line="199" pos:column="25">continue;<pos:position pos:line="199" pos:column="34"/></continue>
		}<pos:position pos:line="200" pos:column="18"/></block></then></if>

		<if pos:line="202" pos:column="17">if <condition pos:line="202" pos:column="20">(<expr><name pos:line="202" pos:column="21">fd1<pos:position pos:line="202" pos:column="24"/></name> <operator pos:line="202" pos:column="25">!=<pos:position pos:line="202" pos:column="27"/></operator> <operator pos:line="202" pos:column="28">-<pos:position pos:line="202" pos:column="29"/></operator><literal type="number" pos:line="202" pos:column="29">1<pos:position pos:line="202" pos:column="30"/></literal> <operator pos:line="202" pos:column="31">&amp;&amp;<pos:position pos:line="202" pos:column="41"/></operator> <operator pos:line="202" pos:column="34">!<pos:position pos:line="202" pos:column="35"/></operator><call><name pos:line="202" pos:column="35">S_ISREG<pos:position pos:line="202" pos:column="42"/></name><argument_list pos:line="202" pos:column="42">(<argument><expr><name><name pos:line="202" pos:column="43">st<pos:position pos:line="202" pos:column="45"/></name><operator pos:line="202" pos:column="45">.<pos:position pos:line="202" pos:column="46"/></operator><name pos:line="202" pos:column="46">st_mode<pos:position pos:line="202" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="202" pos:column="55"/></condition><then pos:line="202" pos:column="55"> <block pos:line="202" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="203" pos:column="25">close<pos:position pos:line="203" pos:column="30"/></name><argument_list pos:line="203" pos:column="30">(<argument><expr><name pos:line="203" pos:column="31">fd1<pos:position pos:line="203" pos:column="34"/></name></expr></argument>)<pos:position pos:line="203" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="204" pos:column="25">fd1<pos:position pos:line="204" pos:column="28"/></name> <operator pos:line="204" pos:column="29">=<pos:position pos:line="204" pos:column="30"/></operator> <operator pos:line="204" pos:column="31">-<pos:position pos:line="204" pos:column="32"/></operator><literal type="number" pos:line="204" pos:column="32">1<pos:position pos:line="204" pos:column="33"/></literal></expr>;<pos:position pos:line="204" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="205" pos:column="18"/></block></then></if>

		<if pos:line="207" pos:column="17">if <condition pos:line="207" pos:column="20">(<expr><name pos:line="207" pos:column="21">fd1<pos:position pos:line="207" pos:column="24"/></name> <operator pos:line="207" pos:column="25">!=<pos:position pos:line="207" pos:column="27"/></operator> <operator pos:line="207" pos:column="28">-<pos:position pos:line="207" pos:column="29"/></operator><literal type="number" pos:line="207" pos:column="29">1<pos:position pos:line="207" pos:column="30"/></literal> <operator pos:line="207" pos:column="31">&amp;&amp;<pos:position pos:line="207" pos:column="41"/></operator> <operator pos:line="207" pos:column="34">!<pos:position pos:line="207" pos:column="35"/></operator><name pos:line="207" pos:column="35">preserve_perms<pos:position pos:line="207" pos:column="49"/></name></expr>)<pos:position pos:line="207" pos:column="50"/></condition><then pos:line="207" pos:column="50"> <block pos:line="207" pos:column="51">{
			<comment type="block" pos:line="208" pos:column="25">/* if the file exists already and we aren't preserving
			 * permissions then act as though the remote end sent
			 * us the file permissions we already have */</comment>
			<expr_stmt><expr><name><name pos:line="211" pos:column="25">file<pos:position pos:line="211" pos:column="29"/></name><operator pos:line="211" pos:column="29">-&gt;<pos:position pos:line="211" pos:column="34"/></operator><name pos:line="211" pos:column="31">mode<pos:position pos:line="211" pos:column="35"/></name></name> <operator pos:line="211" pos:column="36">=<pos:position pos:line="211" pos:column="37"/></operator> <name><name pos:line="211" pos:column="38">st<pos:position pos:line="211" pos:column="40"/></name><operator pos:line="211" pos:column="40">.<pos:position pos:line="211" pos:column="41"/></operator><name pos:line="211" pos:column="41">st_mode<pos:position pos:line="211" pos:column="48"/></name></name></expr>;<pos:position pos:line="211" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="212" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="214" pos:column="17">/* We now check to see if we are writing file "inplace" */</comment>
		<if pos:line="215" pos:column="17">if <condition pos:line="215" pos:column="20">(<expr><name pos:line="215" pos:column="21">inplace<pos:position pos:line="215" pos:column="28"/></name></expr>)<pos:position pos:line="215" pos:column="29"/></condition><then pos:line="215" pos:column="29">  <block pos:line="215" pos:column="31">{
			<expr_stmt><expr><name pos:line="216" pos:column="25">fd2<pos:position pos:line="216" pos:column="28"/></name> <operator pos:line="216" pos:column="29">=<pos:position pos:line="216" pos:column="30"/></operator> <call><name pos:line="216" pos:column="31">do_open<pos:position pos:line="216" pos:column="38"/></name><argument_list pos:line="216" pos:column="38">(<argument><expr><name pos:line="216" pos:column="39">fname<pos:position pos:line="216" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="46">O_WRONLY<pos:position pos:line="216" pos:column="54"/></name><operator pos:line="216" pos:column="54">|<pos:position pos:line="216" pos:column="55"/></operator><name pos:line="216" pos:column="55">O_CREAT<pos:position pos:line="216" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="216" pos:column="64">0<pos:position pos:line="216" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="67"/></expr_stmt>
			<if pos:line="217" pos:column="25">if <condition pos:line="217" pos:column="28">(<expr><name pos:line="217" pos:column="29">fd2<pos:position pos:line="217" pos:column="32"/></name> <operator pos:line="217" pos:column="33">==<pos:position pos:line="217" pos:column="35"/></operator> <operator pos:line="217" pos:column="36">-<pos:position pos:line="217" pos:column="37"/></operator><literal type="number" pos:line="217" pos:column="37">1<pos:position pos:line="217" pos:column="38"/></literal></expr>)<pos:position pos:line="217" pos:column="39"/></condition><then pos:line="217" pos:column="39"> <block pos:line="217" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="218" pos:column="33">rsyserr<pos:position pos:line="218" pos:column="40"/></name><argument_list pos:line="218" pos:column="40">(<argument><expr><name pos:line="218" pos:column="41">FERROR<pos:position pos:line="218" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="218" pos:column="49">errno<pos:position pos:line="218" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="56">"open %s failed"<pos:position pos:line="218" pos:column="72"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="219" pos:column="41">full_fname<pos:position pos:line="219" pos:column="51"/></name><argument_list pos:line="219" pos:column="51">(<argument><expr><name pos:line="219" pos:column="52">fname<pos:position pos:line="219" pos:column="57"/></name></expr></argument>)<pos:position pos:line="219" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="219" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="220" pos:column="33">discard_receive_data<pos:position pos:line="220" pos:column="53"/></name><argument_list pos:line="220" pos:column="53">(<argument><expr><name pos:line="220" pos:column="54">f_in<pos:position pos:line="220" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="60">file<pos:position pos:line="220" pos:column="64"/></name><operator pos:line="220" pos:column="64">-&gt;<pos:position pos:line="220" pos:column="69"/></operator><name pos:line="220" pos:column="66">length<pos:position pos:line="220" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="74"/></expr_stmt>
				<if pos:line="221" pos:column="33">if <condition pos:line="221" pos:column="36">(<expr><name pos:line="221" pos:column="37">fd1<pos:position pos:line="221" pos:column="40"/></name> <operator pos:line="221" pos:column="41">!=<pos:position pos:line="221" pos:column="43"/></operator> <operator pos:line="221" pos:column="44">-<pos:position pos:line="221" pos:column="45"/></operator><literal type="number" pos:line="221" pos:column="45">1<pos:position pos:line="221" pos:column="46"/></literal></expr>)<pos:position pos:line="221" pos:column="47"/></condition><then pos:line="221" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="222" pos:column="41">close<pos:position pos:line="222" pos:column="46"/></name><argument_list pos:line="222" pos:column="46">(<argument><expr><name pos:line="222" pos:column="47">fd1<pos:position pos:line="222" pos:column="50"/></name></expr></argument>)<pos:position pos:line="222" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="52"/></expr_stmt></block></then></if>
				<continue pos:line="223" pos:column="33">continue;<pos:position pos:line="223" pos:column="42"/></continue>
			}<pos:position pos:line="224" pos:column="26"/></block></then></if>
		}<pos:position pos:line="225" pos:column="18"/></block></then> <else pos:line="225" pos:column="19">else <block pos:line="225" pos:column="24">{
			<if pos:line="226" pos:column="25">if <condition pos:line="226" pos:column="28">(<expr><operator pos:line="226" pos:column="29">!<pos:position pos:line="226" pos:column="30"/></operator><call><name pos:line="226" pos:column="30">get_tmpname<pos:position pos:line="226" pos:column="41"/></name><argument_list pos:line="226" pos:column="41">(<argument><expr><name pos:line="226" pos:column="42">fnametmp<pos:position pos:line="226" pos:column="50"/></name></expr></argument>,<argument><expr><name pos:line="226" pos:column="51">fname<pos:position pos:line="226" pos:column="56"/></name></expr></argument>)<pos:position pos:line="226" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="226" pos:column="58"/></condition><then pos:line="226" pos:column="58"> <block pos:line="226" pos:column="59">{
				<expr_stmt><expr><call><name pos:line="227" pos:column="33">discard_receive_data<pos:position pos:line="227" pos:column="53"/></name><argument_list pos:line="227" pos:column="53">(<argument><expr><name pos:line="227" pos:column="54">f_in<pos:position pos:line="227" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="227" pos:column="60">file<pos:position pos:line="227" pos:column="64"/></name><operator pos:line="227" pos:column="64">-&gt;<pos:position pos:line="227" pos:column="69"/></operator><name pos:line="227" pos:column="66">length<pos:position pos:line="227" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="227" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="74"/></expr_stmt>
				<if pos:line="228" pos:column="33">if <condition pos:line="228" pos:column="36">(<expr><name pos:line="228" pos:column="37">fd1<pos:position pos:line="228" pos:column="40"/></name> <operator pos:line="228" pos:column="41">!=<pos:position pos:line="228" pos:column="43"/></operator> <operator pos:line="228" pos:column="44">-<pos:position pos:line="228" pos:column="45"/></operator><literal type="number" pos:line="228" pos:column="45">1<pos:position pos:line="228" pos:column="46"/></literal></expr>)<pos:position pos:line="228" pos:column="47"/></condition><then pos:line="228" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="229" pos:column="41">close<pos:position pos:line="229" pos:column="46"/></name><argument_list pos:line="229" pos:column="46">(<argument><expr><name pos:line="229" pos:column="47">fd1<pos:position pos:line="229" pos:column="50"/></name></expr></argument>)<pos:position pos:line="229" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="52"/></expr_stmt></block></then></if>
				<continue pos:line="230" pos:column="33">continue;<pos:position pos:line="230" pos:column="42"/></continue>
			}<pos:position pos:line="231" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="233" pos:column="25">/* we initially set the perms without the
			 * setuid/setgid bits to ensure that there is no race
			 * condition. They are then correctly updated after
			 * the lchown. Thanks to snabb@epipe.fi for pointing
			 * this out.  We also set it initially without group
			 * access because of a similar race condition. */</comment>
			<expr_stmt><expr><name pos:line="239" pos:column="25">fd2<pos:position pos:line="239" pos:column="28"/></name> <operator pos:line="239" pos:column="29">=<pos:position pos:line="239" pos:column="30"/></operator> <call><name pos:line="239" pos:column="31">do_mkstemp<pos:position pos:line="239" pos:column="41"/></name><argument_list pos:line="239" pos:column="41">(<argument><expr><name pos:line="239" pos:column="42">fnametmp<pos:position pos:line="239" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="239" pos:column="52">file<pos:position pos:line="239" pos:column="56"/></name><operator pos:line="239" pos:column="56">-&gt;<pos:position pos:line="239" pos:column="61"/></operator><name pos:line="239" pos:column="58">mode<pos:position pos:line="239" pos:column="62"/></name></name> <operator pos:line="239" pos:column="63">&amp;<pos:position pos:line="239" pos:column="68"/></operator> <name pos:line="239" pos:column="65">INITACCESSPERMS<pos:position pos:line="239" pos:column="80"/></name></expr></argument>)<pos:position pos:line="239" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="82"/></expr_stmt>

			<comment type="block" pos:line="241" pos:column="25">/* in most cases parent directories will already exist
			 * because their information should have been previously
			 * transferred, but that may not be the case with -R */</comment>
			<if pos:line="244" pos:column="25">if <condition pos:line="244" pos:column="28">(<expr><name pos:line="244" pos:column="29">fd2<pos:position pos:line="244" pos:column="32"/></name> <operator pos:line="244" pos:column="33">==<pos:position pos:line="244" pos:column="35"/></operator> <operator pos:line="244" pos:column="36">-<pos:position pos:line="244" pos:column="37"/></operator><literal type="number" pos:line="244" pos:column="37">1<pos:position pos:line="244" pos:column="38"/></literal> <operator pos:line="244" pos:column="39">&amp;&amp;<pos:position pos:line="244" pos:column="49"/></operator> <name pos:line="244" pos:column="42">relative_paths<pos:position pos:line="244" pos:column="56"/></name> <operator pos:line="244" pos:column="57">&amp;&amp;<pos:position pos:line="244" pos:column="67"/></operator> <name pos:line="244" pos:column="60">errno<pos:position pos:line="244" pos:column="65"/></name> <operator pos:line="244" pos:column="66">==<pos:position pos:line="244" pos:column="68"/></operator> <name pos:line="244" pos:column="69">ENOENT<pos:position pos:line="244" pos:column="75"/></name>
			    <operator pos:line="245" pos:column="29">&amp;&amp;<pos:position pos:line="245" pos:column="39"/></operator> <call><name pos:line="245" pos:column="32">create_directory_path<pos:position pos:line="245" pos:column="53"/></name><argument_list pos:line="245" pos:column="53">(<argument><expr><name pos:line="245" pos:column="54">fnametmp<pos:position pos:line="245" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="64">orig_umask<pos:position pos:line="245" pos:column="74"/></name></expr></argument>)<pos:position pos:line="245" pos:column="75"/></argument_list></call> <operator pos:line="245" pos:column="76">==<pos:position pos:line="245" pos:column="78"/></operator> <literal type="number" pos:line="245" pos:column="79">0<pos:position pos:line="245" pos:column="80"/></literal></expr>)<pos:position pos:line="245" pos:column="81"/></condition><then pos:line="245" pos:column="81"> <block pos:line="245" pos:column="82">{
				<comment type="block" pos:line="246" pos:column="33">/* Get back to name with XXXXXX in it. */</comment>
				<expr_stmt><expr><call><name pos:line="247" pos:column="33">get_tmpname<pos:position pos:line="247" pos:column="44"/></name><argument_list pos:line="247" pos:column="44">(<argument><expr><name pos:line="247" pos:column="45">fnametmp<pos:position pos:line="247" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="55">fname<pos:position pos:line="247" pos:column="60"/></name></expr></argument>)<pos:position pos:line="247" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="248" pos:column="33">fd2<pos:position pos:line="248" pos:column="36"/></name> <operator pos:line="248" pos:column="37">=<pos:position pos:line="248" pos:column="38"/></operator> <call><name pos:line="248" pos:column="39">do_mkstemp<pos:position pos:line="248" pos:column="49"/></name><argument_list pos:line="248" pos:column="49">(<argument><expr><name pos:line="248" pos:column="50">fnametmp<pos:position pos:line="248" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="248" pos:column="60">file<pos:position pos:line="248" pos:column="64"/></name><operator pos:line="248" pos:column="64">-&gt;<pos:position pos:line="248" pos:column="69"/></operator><name pos:line="248" pos:column="66">mode<pos:position pos:line="248" pos:column="70"/></name></name> <operator pos:line="248" pos:column="71">&amp;<pos:position pos:line="248" pos:column="76"/></operator> <name pos:line="248" pos:column="73">INITACCESSPERMS<pos:position pos:line="248" pos:column="88"/></name></expr></argument>)<pos:position pos:line="248" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="90"/></expr_stmt>
			}<pos:position pos:line="249" pos:column="26"/></block></then></if>
			<if pos:line="250" pos:column="25">if <condition pos:line="250" pos:column="28">(<expr><name pos:line="250" pos:column="29">fd2<pos:position pos:line="250" pos:column="32"/></name> <operator pos:line="250" pos:column="33">==<pos:position pos:line="250" pos:column="35"/></operator> <operator pos:line="250" pos:column="36">-<pos:position pos:line="250" pos:column="37"/></operator><literal type="number" pos:line="250" pos:column="37">1<pos:position pos:line="250" pos:column="38"/></literal></expr>)<pos:position pos:line="250" pos:column="39"/></condition><then pos:line="250" pos:column="39"> <block pos:line="250" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="251" pos:column="33">rsyserr<pos:position pos:line="251" pos:column="40"/></name><argument_list pos:line="251" pos:column="40">(<argument><expr><name pos:line="251" pos:column="41">FERROR<pos:position pos:line="251" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="49">errno<pos:position pos:line="251" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="56">"mkstemp %s failed"<pos:position pos:line="251" pos:column="75"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="252" pos:column="41">full_fname<pos:position pos:line="252" pos:column="51"/></name><argument_list pos:line="252" pos:column="51">(<argument><expr><name pos:line="252" pos:column="52">fnametmp<pos:position pos:line="252" pos:column="60"/></name></expr></argument>)<pos:position pos:line="252" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="252" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="253" pos:column="33">discard_receive_data<pos:position pos:line="253" pos:column="53"/></name><argument_list pos:line="253" pos:column="53">(<argument><expr><name pos:line="253" pos:column="54">f_in<pos:position pos:line="253" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="253" pos:column="60">file<pos:position pos:line="253" pos:column="64"/></name><operator pos:line="253" pos:column="64">-&gt;<pos:position pos:line="253" pos:column="69"/></operator><name pos:line="253" pos:column="66">length<pos:position pos:line="253" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="253" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="74"/></expr_stmt>
				<if pos:line="254" pos:column="33">if <condition pos:line="254" pos:column="36">(<expr><name pos:line="254" pos:column="37">fd1<pos:position pos:line="254" pos:column="40"/></name> <operator pos:line="254" pos:column="41">!=<pos:position pos:line="254" pos:column="43"/></operator> <operator pos:line="254" pos:column="44">-<pos:position pos:line="254" pos:column="45"/></operator><literal type="number" pos:line="254" pos:column="45">1<pos:position pos:line="254" pos:column="46"/></literal></expr>)<pos:position pos:line="254" pos:column="47"/></condition><then pos:line="254" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="255" pos:column="41">close<pos:position pos:line="255" pos:column="46"/></name><argument_list pos:line="255" pos:column="46">(<argument><expr><name pos:line="255" pos:column="47">fd1<pos:position pos:line="255" pos:column="50"/></name></expr></argument>)<pos:position pos:line="255" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="52"/></expr_stmt></block></then></if>
				<continue pos:line="256" pos:column="33">continue;<pos:position pos:line="256" pos:column="42"/></continue>
			}<pos:position pos:line="257" pos:column="26"/></block></then></if>

			<if pos:line="259" pos:column="25">if <condition pos:line="259" pos:column="28">(<expr><name pos:line="259" pos:column="29">partialptr<pos:position pos:line="259" pos:column="39"/></name></expr>)<pos:position pos:line="259" pos:column="40"/></condition><then pos:line="259" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="260" pos:column="33">cleanup_set<pos:position pos:line="260" pos:column="44"/></name><argument_list pos:line="260" pos:column="44">(<argument><expr><name pos:line="260" pos:column="45">fnametmp<pos:position pos:line="260" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="55">partialptr<pos:position pos:line="260" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="67">file<pos:position pos:line="260" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="73">fd1<pos:position pos:line="260" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="78">fd2<pos:position pos:line="260" pos:column="81"/></name></expr></argument>)<pos:position pos:line="260" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="83"/></expr_stmt></block></then></if>
		}<pos:position pos:line="261" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="263" pos:column="17">/* log the transfer */</comment>
		<if pos:line="264" pos:column="17">if <condition pos:line="264" pos:column="20">(<expr><name pos:line="264" pos:column="21">log_before_transfer<pos:position pos:line="264" pos:column="40"/></name></expr>)<pos:position pos:line="264" pos:column="41"/></condition><then pos:line="264" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="265" pos:column="25">log_item<pos:position pos:line="265" pos:column="33"/></name><argument_list pos:line="265" pos:column="33">(<argument><expr><name pos:line="265" pos:column="34">file<pos:position pos:line="265" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="265" pos:column="40">&amp;<pos:position pos:line="265" pos:column="45"/></operator><name pos:line="265" pos:column="41">initial_stats<pos:position pos:line="265" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="56">iflags<pos:position pos:line="265" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="64">NULL<pos:position pos:line="265" pos:column="68"/></name></expr></argument>)<pos:position pos:line="265" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="70"/></expr_stmt></block></then>
		<elseif pos:line="266" pos:column="17">else <if pos:line="266" pos:column="22">if <condition pos:line="266" pos:column="25">(<expr><operator pos:line="266" pos:column="26">!<pos:position pos:line="266" pos:column="27"/></operator><name pos:line="266" pos:column="27">am_server<pos:position pos:line="266" pos:column="36"/></name> <operator pos:line="266" pos:column="37">&amp;&amp;<pos:position pos:line="266" pos:column="47"/></operator> <name pos:line="266" pos:column="40">verbose<pos:position pos:line="266" pos:column="47"/></name> <operator pos:line="266" pos:column="48">&amp;&amp;<pos:position pos:line="266" pos:column="58"/></operator> <name pos:line="266" pos:column="51">do_progress<pos:position pos:line="266" pos:column="62"/></name></expr>)<pos:position pos:line="266" pos:column="63"/></condition><then pos:line="266" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="267" pos:column="25">rprintf<pos:position pos:line="267" pos:column="32"/></name><argument_list pos:line="267" pos:column="32">(<argument><expr><name pos:line="267" pos:column="33">FINFO<pos:position pos:line="267" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="40">"%s\n"<pos:position pos:line="267" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="267" pos:column="48">safe_fname<pos:position pos:line="267" pos:column="58"/></name><argument_list pos:line="267" pos:column="58">(<argument><expr><name pos:line="267" pos:column="59">fname<pos:position pos:line="267" pos:column="64"/></name></expr></argument>)<pos:position pos:line="267" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="267" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="67"/></expr_stmt></block></then></if></elseif></if>

		<comment type="block" pos:line="269" pos:column="17">/* recv file data */</comment>
		<expr_stmt><expr><name pos:line="270" pos:column="17">recv_ok<pos:position pos:line="270" pos:column="24"/></name> <operator pos:line="270" pos:column="25">=<pos:position pos:line="270" pos:column="26"/></operator> <call><name pos:line="270" pos:column="27">receive_data<pos:position pos:line="270" pos:column="39"/></name><argument_list pos:line="270" pos:column="39">(<argument><expr><name pos:line="270" pos:column="40">f_in<pos:position pos:line="270" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="46">fnamecmp<pos:position pos:line="270" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="56">fd1<pos:position pos:line="270" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="270" pos:column="61">st<pos:position pos:line="270" pos:column="63"/></name><operator pos:line="270" pos:column="63">.<pos:position pos:line="270" pos:column="64"/></operator><name pos:line="270" pos:column="64">st_size<pos:position pos:line="270" pos:column="71"/></name></name></expr></argument>,
				       <argument><expr><name pos:line="271" pos:column="40">fname<pos:position pos:line="271" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="47">fd2<pos:position pos:line="271" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="271" pos:column="52">file<pos:position pos:line="271" pos:column="56"/></name><operator pos:line="271" pos:column="56">-&gt;<pos:position pos:line="271" pos:column="61"/></operator><name pos:line="271" pos:column="58">length<pos:position pos:line="271" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="271" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="66"/></expr_stmt>

		<if pos:line="273" pos:column="17">if <condition pos:line="273" pos:column="20">(<expr><operator pos:line="273" pos:column="21">!<pos:position pos:line="273" pos:column="22"/></operator><name pos:line="273" pos:column="22">log_before_transfer<pos:position pos:line="273" pos:column="41"/></name></expr>)<pos:position pos:line="273" pos:column="42"/></condition><then pos:line="273" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="274" pos:column="25">log_item<pos:position pos:line="274" pos:column="33"/></name><argument_list pos:line="274" pos:column="33">(<argument><expr><name pos:line="274" pos:column="34">file<pos:position pos:line="274" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="274" pos:column="40">&amp;<pos:position pos:line="274" pos:column="45"/></operator><name pos:line="274" pos:column="41">initial_stats<pos:position pos:line="274" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="56">iflags<pos:position pos:line="274" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="274" pos:column="64">NULL<pos:position pos:line="274" pos:column="68"/></name></expr></argument>)<pos:position pos:line="274" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="70"/></expr_stmt></block></then></if>

		<if pos:line="276" pos:column="17">if <condition pos:line="276" pos:column="20">(<expr><name pos:line="276" pos:column="21">fd1<pos:position pos:line="276" pos:column="24"/></name> <operator pos:line="276" pos:column="25">!=<pos:position pos:line="276" pos:column="27"/></operator> <operator pos:line="276" pos:column="28">-<pos:position pos:line="276" pos:column="29"/></operator><literal type="number" pos:line="276" pos:column="29">1<pos:position pos:line="276" pos:column="30"/></literal></expr>)<pos:position pos:line="276" pos:column="31"/></condition><then pos:line="276" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="277" pos:column="25">close<pos:position pos:line="277" pos:column="30"/></name><argument_list pos:line="277" pos:column="30">(<argument><expr><name pos:line="277" pos:column="31">fd1<pos:position pos:line="277" pos:column="34"/></name></expr></argument>)<pos:position pos:line="277" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="36"/></expr_stmt></block></then></if>
		<if pos:line="278" pos:column="17">if <condition pos:line="278" pos:column="20">(<expr><call><name pos:line="278" pos:column="21">close<pos:position pos:line="278" pos:column="26"/></name><argument_list pos:line="278" pos:column="26">(<argument><expr><name pos:line="278" pos:column="27">fd2<pos:position pos:line="278" pos:column="30"/></name></expr></argument>)<pos:position pos:line="278" pos:column="31"/></argument_list></call> <operator pos:line="278" pos:column="32">&lt;<pos:position pos:line="278" pos:column="36"/></operator> <literal type="number" pos:line="278" pos:column="34">0<pos:position pos:line="278" pos:column="35"/></literal></expr>)<pos:position pos:line="278" pos:column="36"/></condition><then pos:line="278" pos:column="36"> <block pos:line="278" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="279" pos:column="25">rsyserr<pos:position pos:line="279" pos:column="32"/></name><argument_list pos:line="279" pos:column="32">(<argument><expr><name pos:line="279" pos:column="33">FERROR<pos:position pos:line="279" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="41">errno<pos:position pos:line="279" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="279" pos:column="48">"close failed on %s"<pos:position pos:line="279" pos:column="68"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="280" pos:column="33">full_fname<pos:position pos:line="280" pos:column="43"/></name><argument_list pos:line="280" pos:column="43">(<argument><expr><name pos:line="280" pos:column="44">fnametmp<pos:position pos:line="280" pos:column="52"/></name></expr></argument>)<pos:position pos:line="280" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="280" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="281" pos:column="25">exit_cleanup<pos:position pos:line="281" pos:column="37"/></name><argument_list pos:line="281" pos:column="37">(<argument><expr><name pos:line="281" pos:column="38">RERR_FILEIO<pos:position pos:line="281" pos:column="49"/></name></expr></argument>)<pos:position pos:line="281" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="282" pos:column="18"/></block></then></if>

		<if pos:line="284" pos:column="17">if <condition pos:line="284" pos:column="20">(<expr><operator pos:line="284" pos:column="21">(<pos:position pos:line="284" pos:column="22"/></operator><name pos:line="284" pos:column="22">recv_ok<pos:position pos:line="284" pos:column="29"/></name> <operator pos:line="284" pos:column="30">&amp;&amp;<pos:position pos:line="284" pos:column="40"/></operator> <operator pos:line="284" pos:column="33">(<pos:position pos:line="284" pos:column="34"/></operator><operator pos:line="284" pos:column="34">!<pos:position pos:line="284" pos:column="35"/></operator><name pos:line="284" pos:column="35">delay_updates<pos:position pos:line="284" pos:column="48"/></name> <operator pos:line="284" pos:column="49">||<pos:position pos:line="284" pos:column="51"/></operator> <operator pos:line="284" pos:column="52">!<pos:position pos:line="284" pos:column="53"/></operator><name pos:line="284" pos:column="53">partialptr<pos:position pos:line="284" pos:column="63"/></name><operator pos:line="284" pos:column="63">)<pos:position pos:line="284" pos:column="64"/></operator><operator pos:line="284" pos:column="64">)<pos:position pos:line="284" pos:column="65"/></operator> <operator pos:line="284" pos:column="66">||<pos:position pos:line="284" pos:column="68"/></operator> <name pos:line="284" pos:column="69">inplace<pos:position pos:line="284" pos:column="76"/></name></expr>)<pos:position pos:line="284" pos:column="77"/></condition><then pos:line="284" pos:column="77"> <block pos:line="284" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="285" pos:column="25">finish_transfer<pos:position pos:line="285" pos:column="40"/></name><argument_list pos:line="285" pos:column="40">(<argument><expr><name pos:line="285" pos:column="41">fname<pos:position pos:line="285" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="48">fnametmp<pos:position pos:line="285" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="58">file<pos:position pos:line="285" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="64">recv_ok<pos:position pos:line="285" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="285" pos:column="73">1<pos:position pos:line="285" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="76"/></expr_stmt>
			<if pos:line="286" pos:column="25">if <condition pos:line="286" pos:column="28">(<expr><name pos:line="286" pos:column="29">partialptr<pos:position pos:line="286" pos:column="39"/></name> <operator pos:line="286" pos:column="40">!=<pos:position pos:line="286" pos:column="42"/></operator> <name pos:line="286" pos:column="43">fname<pos:position pos:line="286" pos:column="48"/></name> <operator pos:line="286" pos:column="49">&amp;&amp;<pos:position pos:line="286" pos:column="59"/></operator> <name pos:line="286" pos:column="52">fnamecmp<pos:position pos:line="286" pos:column="60"/></name> <operator pos:line="286" pos:column="61">==<pos:position pos:line="286" pos:column="63"/></operator> <name pos:line="286" pos:column="64">partialptr<pos:position pos:line="286" pos:column="74"/></name></expr>)<pos:position pos:line="286" pos:column="75"/></condition><then pos:line="286" pos:column="75"> <block pos:line="286" pos:column="76">{
				<expr_stmt><expr><call><name pos:line="287" pos:column="33">do_unlink<pos:position pos:line="287" pos:column="42"/></name><argument_list pos:line="287" pos:column="42">(<argument><expr><name pos:line="287" pos:column="43">partialptr<pos:position pos:line="287" pos:column="53"/></name></expr></argument>)<pos:position pos:line="287" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="288" pos:column="33">handle_partial_dir<pos:position pos:line="288" pos:column="51"/></name><argument_list pos:line="288" pos:column="51">(<argument><expr><name pos:line="288" pos:column="52">partialptr<pos:position pos:line="288" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="64">PDIR_DELETE<pos:position pos:line="288" pos:column="75"/></name></expr></argument>)<pos:position pos:line="288" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="289" pos:column="26"/></block></then></if>
		}<pos:position pos:line="290" pos:column="18"/></block></then> <elseif pos:line="290" pos:column="19">else <if pos:line="290" pos:column="24">if <condition pos:line="290" pos:column="27">(<expr><name pos:line="290" pos:column="28">keep_partial<pos:position pos:line="290" pos:column="40"/></name> <operator pos:line="290" pos:column="41">&amp;&amp;<pos:position pos:line="290" pos:column="51"/></operator> <name pos:line="290" pos:column="44">partialptr<pos:position pos:line="290" pos:column="54"/></name>
		    <operator pos:line="291" pos:column="21">&amp;&amp;<pos:position pos:line="291" pos:column="31"/></operator> <call><name pos:line="291" pos:column="24">handle_partial_dir<pos:position pos:line="291" pos:column="42"/></name><argument_list pos:line="291" pos:column="42">(<argument><expr><name pos:line="291" pos:column="43">partialptr<pos:position pos:line="291" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="291" pos:column="55">PDIR_CREATE<pos:position pos:line="291" pos:column="66"/></name></expr></argument>)<pos:position pos:line="291" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="291" pos:column="68"/></condition><then pos:line="291" pos:column="68"> <block pos:line="291" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="292" pos:column="25">finish_transfer<pos:position pos:line="292" pos:column="40"/></name><argument_list pos:line="292" pos:column="40">(<argument><expr><name pos:line="292" pos:column="41">partialptr<pos:position pos:line="292" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="53">fnametmp<pos:position pos:line="292" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="63">file<pos:position pos:line="292" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="69">recv_ok<pos:position pos:line="292" pos:column="76"/></name></expr></argument>,
					<argument><expr><operator pos:line="293" pos:column="41">!<pos:position pos:line="293" pos:column="42"/></operator><name pos:line="293" pos:column="42">partial_dir<pos:position pos:line="293" pos:column="53"/></name></expr></argument>)<pos:position pos:line="293" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="55"/></expr_stmt>
			<if pos:line="294" pos:column="25">if <condition pos:line="294" pos:column="28">(<expr><name pos:line="294" pos:column="29">delay_updates<pos:position pos:line="294" pos:column="42"/></name> <operator pos:line="294" pos:column="43">&amp;&amp;<pos:position pos:line="294" pos:column="53"/></operator> <name pos:line="294" pos:column="46">recv_ok<pos:position pos:line="294" pos:column="53"/></name></expr>)<pos:position pos:line="294" pos:column="54"/></condition><then pos:line="294" pos:column="54"> <block pos:line="294" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="295" pos:column="33">set_delayed_bit<pos:position pos:line="295" pos:column="48"/></name><argument_list pos:line="295" pos:column="48">(<argument><expr><name pos:line="295" pos:column="49">i<pos:position pos:line="295" pos:column="50"/></name></expr></argument>)<pos:position pos:line="295" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="296" pos:column="33">recv_ok<pos:position pos:line="296" pos:column="40"/></name> <operator pos:line="296" pos:column="41">=<pos:position pos:line="296" pos:column="42"/></operator> <operator pos:line="296" pos:column="43">-<pos:position pos:line="296" pos:column="44"/></operator><literal type="number" pos:line="296" pos:column="44">1<pos:position pos:line="296" pos:column="45"/></literal></expr>;<pos:position pos:line="296" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="297" pos:column="26"/></block></then></if>
		}<pos:position pos:line="298" pos:column="18"/></block></then></if></elseif> <else pos:line="298" pos:column="19">else <block pos:line="298" pos:column="24">{
			<expr_stmt><expr><name pos:line="299" pos:column="25">partialptr<pos:position pos:line="299" pos:column="35"/></name> <operator pos:line="299" pos:column="36">=<pos:position pos:line="299" pos:column="37"/></operator> <name pos:line="299" pos:column="38">NULL<pos:position pos:line="299" pos:column="42"/></name></expr>;<pos:position pos:line="299" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="300" pos:column="25">do_unlink<pos:position pos:line="300" pos:column="34"/></name><argument_list pos:line="300" pos:column="34">(<argument><expr><name pos:line="300" pos:column="35">fnametmp<pos:position pos:line="300" pos:column="43"/></name></expr></argument>)<pos:position pos:line="300" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="301" pos:column="18"/></block></else></if>

		<expr_stmt><expr><call><name pos:line="303" pos:column="17">cleanup_disable<pos:position pos:line="303" pos:column="32"/></name><argument_list pos:line="303" pos:column="32">()<pos:position pos:line="303" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="35"/></expr_stmt>

		<if pos:line="305" pos:column="17">if <condition pos:line="305" pos:column="20">(<expr><name pos:line="305" pos:column="21">recv_ok<pos:position pos:line="305" pos:column="28"/></name> <operator pos:line="305" pos:column="29">&gt;<pos:position pos:line="305" pos:column="33"/></operator> <literal type="number" pos:line="305" pos:column="31">0<pos:position pos:line="305" pos:column="32"/></literal></expr>)<pos:position pos:line="305" pos:column="33"/></condition><then pos:line="305" pos:column="33"> <block pos:line="305" pos:column="34">{
			<if pos:line="306" pos:column="25">if <condition pos:line="306" pos:column="28">(<expr><name pos:line="306" pos:column="29">remove_sent_files<pos:position pos:line="306" pos:column="46"/></name>
			    <operator pos:line="307" pos:column="29">||<pos:position pos:line="307" pos:column="31"/></operator> <operator pos:line="307" pos:column="32">(<pos:position pos:line="307" pos:column="33"/></operator><name pos:line="307" pos:column="33">preserve_hard_links<pos:position pos:line="307" pos:column="52"/></name> <operator pos:line="307" pos:column="53">&amp;&amp;<pos:position pos:line="307" pos:column="63"/></operator> <name><name pos:line="307" pos:column="56">file<pos:position pos:line="307" pos:column="60"/></name><operator pos:line="307" pos:column="60">-&gt;<pos:position pos:line="307" pos:column="65"/></operator><name pos:line="307" pos:column="62">link_u<pos:position pos:line="307" pos:column="68"/></name><operator pos:line="307" pos:column="68">.<pos:position pos:line="307" pos:column="69"/></operator><name pos:line="307" pos:column="69">links<pos:position pos:line="307" pos:column="74"/></name></name><operator pos:line="307" pos:column="74">)<pos:position pos:line="307" pos:column="75"/></operator></expr>)<pos:position pos:line="307" pos:column="76"/></condition><then pos:line="307" pos:column="76"> <block pos:line="307" pos:column="77">{
				<expr_stmt><expr><call><name pos:line="308" pos:column="33">SIVAL<pos:position pos:line="308" pos:column="38"/></name><argument_list pos:line="308" pos:column="38">(<argument><expr><name pos:line="308" pos:column="39">numbuf<pos:position pos:line="308" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="308" pos:column="47">0<pos:position pos:line="308" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="308" pos:column="50">i<pos:position pos:line="308" pos:column="51"/></name></expr></argument>)<pos:position pos:line="308" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="309" pos:column="33">send_msg<pos:position pos:line="309" pos:column="41"/></name><argument_list pos:line="309" pos:column="41">(<argument><expr><name pos:line="309" pos:column="42">MSG_SUCCESS<pos:position pos:line="309" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="309" pos:column="55">numbuf<pos:position pos:line="309" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="309" pos:column="63">4<pos:position pos:line="309" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="309" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="66"/></expr_stmt>
			}<pos:position pos:line="310" pos:column="26"/></block></then></if>
		}<pos:position pos:line="311" pos:column="18"/></block></then> <elseif pos:line="311" pos:column="19">else <if pos:line="311" pos:column="24">if <condition pos:line="311" pos:column="27">(<expr><operator pos:line="311" pos:column="28">!<pos:position pos:line="311" pos:column="29"/></operator><name pos:line="311" pos:column="29">recv_ok<pos:position pos:line="311" pos:column="36"/></name></expr>)<pos:position pos:line="311" pos:column="37"/></condition><then pos:line="311" pos:column="37"> <block pos:line="311" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="312" pos:column="25">int<pos:position pos:line="312" pos:column="28"/></name></type> <name pos:line="312" pos:column="29">msgtype<pos:position pos:line="312" pos:column="36"/></name> <init pos:line="312" pos:column="37">= <expr><ternary><condition><expr><name pos:line="312" pos:column="39">phase<pos:position pos:line="312" pos:column="44"/></name> <operator pos:line="312" pos:column="45">||<pos:position pos:line="312" pos:column="47"/></operator> <name pos:line="312" pos:column="48">read_batch<pos:position pos:line="312" pos:column="58"/></name></expr> ?<pos:position pos:line="312" pos:column="60"/></condition><then pos:line="312" pos:column="60"> <expr><name pos:line="312" pos:column="61">FERROR<pos:position pos:line="312" pos:column="67"/></name></expr> <pos:position pos:line="312" pos:column="68"/></then><else pos:line="312" pos:column="68">: <expr><name pos:line="312" pos:column="70">FINFO<pos:position pos:line="312" pos:column="75"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="312" pos:column="76"/></decl_stmt>
			<if pos:line="313" pos:column="25">if <condition pos:line="313" pos:column="28">(<expr><name pos:line="313" pos:column="29">msgtype<pos:position pos:line="313" pos:column="36"/></name> <operator pos:line="313" pos:column="37">==<pos:position pos:line="313" pos:column="39"/></operator> <name pos:line="313" pos:column="40">FERROR<pos:position pos:line="313" pos:column="46"/></name> <operator pos:line="313" pos:column="47">||<pos:position pos:line="313" pos:column="49"/></operator> <name pos:line="313" pos:column="50">verbose<pos:position pos:line="313" pos:column="57"/></name></expr>)<pos:position pos:line="313" pos:column="58"/></condition><then pos:line="313" pos:column="58"> <block pos:line="313" pos:column="59">{
				<decl_stmt><decl><type><name pos:line="314" pos:column="33">char<pos:position pos:line="314" pos:column="37"/></name> <modifier pos:line="314" pos:column="38">*<pos:position pos:line="314" pos:column="39"/></modifier></type><name pos:line="314" pos:column="39">errstr<pos:position pos:line="314" pos:column="45"/></name></decl>, <modifier pos:line="314" pos:column="47">*<pos:position pos:line="314" pos:column="48"/></modifier><decl><type ref="prev"/><name pos:line="314" pos:column="48">redostr<pos:position pos:line="314" pos:column="55"/></name></decl>, <modifier pos:line="314" pos:column="57">*<pos:position pos:line="314" pos:column="58"/></modifier><decl><type ref="prev"/><name pos:line="314" pos:column="58">keptstr<pos:position pos:line="314" pos:column="65"/></name></decl>;<pos:position pos:line="314" pos:column="66"/></decl_stmt>
				<if pos:line="315" pos:column="33">if <condition pos:line="315" pos:column="36">(<expr><operator pos:line="315" pos:column="37">!<pos:position pos:line="315" pos:column="38"/></operator><operator pos:line="315" pos:column="38">(<pos:position pos:line="315" pos:column="39"/></operator><name pos:line="315" pos:column="39">keep_partial<pos:position pos:line="315" pos:column="51"/></name> <operator pos:line="315" pos:column="52">&amp;&amp;<pos:position pos:line="315" pos:column="62"/></operator> <name pos:line="315" pos:column="55">partialptr<pos:position pos:line="315" pos:column="65"/></name><operator pos:line="315" pos:column="65">)<pos:position pos:line="315" pos:column="66"/></operator> <operator pos:line="315" pos:column="67">&amp;&amp;<pos:position pos:line="315" pos:column="77"/></operator> <operator pos:line="315" pos:column="70">!<pos:position pos:line="315" pos:column="71"/></operator><name pos:line="315" pos:column="71">inplace<pos:position pos:line="315" pos:column="78"/></name></expr>)<pos:position pos:line="315" pos:column="79"/></condition><then pos:line="315" pos:column="79">
					<block type="pseudo"><expr_stmt><expr><name pos:line="316" pos:column="41">keptstr<pos:position pos:line="316" pos:column="48"/></name> <operator pos:line="316" pos:column="49">=<pos:position pos:line="316" pos:column="50"/></operator> <literal type="string" pos:line="316" pos:column="51">"discarded"<pos:position pos:line="316" pos:column="62"/></literal></expr>;<pos:position pos:line="316" pos:column="63"/></expr_stmt></block></then>
				<elseif pos:line="317" pos:column="33">else <if pos:line="317" pos:column="38">if <condition pos:line="317" pos:column="41">(<expr><name pos:line="317" pos:column="42">partial_dir<pos:position pos:line="317" pos:column="53"/></name></expr>)<pos:position pos:line="317" pos:column="54"/></condition><then pos:line="317" pos:column="54">
					<block type="pseudo"><expr_stmt><expr><name pos:line="318" pos:column="41">keptstr<pos:position pos:line="318" pos:column="48"/></name> <operator pos:line="318" pos:column="49">=<pos:position pos:line="318" pos:column="50"/></operator> <literal type="string" pos:line="318" pos:column="51">"put into partial-dir"<pos:position pos:line="318" pos:column="73"/></literal></expr>;<pos:position pos:line="318" pos:column="74"/></expr_stmt></block></then></if></elseif>
				<else pos:line="319" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="320" pos:column="41">keptstr<pos:position pos:line="320" pos:column="48"/></name> <operator pos:line="320" pos:column="49">=<pos:position pos:line="320" pos:column="50"/></operator> <literal type="string" pos:line="320" pos:column="51">"retained"<pos:position pos:line="320" pos:column="61"/></literal></expr>;<pos:position pos:line="320" pos:column="62"/></expr_stmt></block></else></if>
				<if pos:line="321" pos:column="33">if <condition pos:line="321" pos:column="36">(<expr><name pos:line="321" pos:column="37">msgtype<pos:position pos:line="321" pos:column="44"/></name> <operator pos:line="321" pos:column="45">==<pos:position pos:line="321" pos:column="47"/></operator> <name pos:line="321" pos:column="48">FERROR<pos:position pos:line="321" pos:column="54"/></name></expr>)<pos:position pos:line="321" pos:column="55"/></condition><then pos:line="321" pos:column="55"> <block pos:line="321" pos:column="56">{
					<expr_stmt><expr><name pos:line="322" pos:column="41">errstr<pos:position pos:line="322" pos:column="47"/></name> <operator pos:line="322" pos:column="48">=<pos:position pos:line="322" pos:column="49"/></operator> <literal type="string" pos:line="322" pos:column="50">"ERROR"<pos:position pos:line="322" pos:column="57"/></literal></expr>;<pos:position pos:line="322" pos:column="58"/></expr_stmt>
					<expr_stmt><expr><name pos:line="323" pos:column="41">redostr<pos:position pos:line="323" pos:column="48"/></name> <operator pos:line="323" pos:column="49">=<pos:position pos:line="323" pos:column="50"/></operator> <literal type="string" pos:line="323" pos:column="51">""<pos:position pos:line="323" pos:column="53"/></literal></expr>;<pos:position pos:line="323" pos:column="54"/></expr_stmt>
				}<pos:position pos:line="324" pos:column="34"/></block></then> <else pos:line="324" pos:column="35">else <block pos:line="324" pos:column="40">{
					<expr_stmt><expr><name pos:line="325" pos:column="41">errstr<pos:position pos:line="325" pos:column="47"/></name> <operator pos:line="325" pos:column="48">=<pos:position pos:line="325" pos:column="49"/></operator> <literal type="string" pos:line="325" pos:column="50">"WARNING"<pos:position pos:line="325" pos:column="59"/></literal></expr>;<pos:position pos:line="325" pos:column="60"/></expr_stmt>
					<expr_stmt><expr><name pos:line="326" pos:column="41">redostr<pos:position pos:line="326" pos:column="48"/></name> <operator pos:line="326" pos:column="49">=<pos:position pos:line="326" pos:column="50"/></operator> <literal type="string" pos:line="326" pos:column="51">" (will try again)"<pos:position pos:line="326" pos:column="70"/></literal></expr>;<pos:position pos:line="326" pos:column="71"/></expr_stmt>
				}<pos:position pos:line="327" pos:column="34"/></block></else></if>
				<expr_stmt><expr><call><name pos:line="328" pos:column="33">rprintf<pos:position pos:line="328" pos:column="40"/></name><argument_list pos:line="328" pos:column="40">(<argument><expr><name pos:line="328" pos:column="41">msgtype<pos:position pos:line="328" pos:column="48"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="329" pos:column="41">"%s: %s failed verification -- update %s%s.\n"<pos:position pos:line="329" pos:column="87"/></literal></expr></argument>,
					<argument><expr><name pos:line="330" pos:column="41">errstr<pos:position pos:line="330" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="330" pos:column="49">safe_fname<pos:position pos:line="330" pos:column="59"/></name><argument_list pos:line="330" pos:column="59">(<argument><expr><name pos:line="330" pos:column="60">fname<pos:position pos:line="330" pos:column="65"/></name></expr></argument>)<pos:position pos:line="330" pos:column="66"/></argument_list></call></expr></argument>,
					<argument><expr><name pos:line="331" pos:column="41">keptstr<pos:position pos:line="331" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="50">redostr<pos:position pos:line="331" pos:column="57"/></name></expr></argument>)<pos:position pos:line="331" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="332" pos:column="26"/></block></then></if>
			<if pos:line="333" pos:column="25">if <condition pos:line="333" pos:column="28">(<expr><operator pos:line="333" pos:column="29">!<pos:position pos:line="333" pos:column="30"/></operator><name pos:line="333" pos:column="30">phase<pos:position pos:line="333" pos:column="35"/></name></expr>)<pos:position pos:line="333" pos:column="36"/></condition><then pos:line="333" pos:column="36"> <block pos:line="333" pos:column="37">{
				<expr_stmt><expr><call><name pos:line="334" pos:column="33">SIVAL<pos:position pos:line="334" pos:column="38"/></name><argument_list pos:line="334" pos:column="38">(<argument><expr><name pos:line="334" pos:column="39">numbuf<pos:position pos:line="334" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="334" pos:column="47">0<pos:position pos:line="334" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="334" pos:column="50">i<pos:position pos:line="334" pos:column="51"/></name></expr></argument>)<pos:position pos:line="334" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="335" pos:column="33">send_msg<pos:position pos:line="335" pos:column="41"/></name><argument_list pos:line="335" pos:column="41">(<argument><expr><name pos:line="335" pos:column="42">MSG_REDO<pos:position pos:line="335" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="52">numbuf<pos:position pos:line="335" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="335" pos:column="60">4<pos:position pos:line="335" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="335" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="336" pos:column="26"/></block></then></if>
		}<pos:position pos:line="337" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="338" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="339" pos:column="9">make_backups<pos:position pos:line="339" pos:column="21"/></name> <operator pos:line="339" pos:column="22">=<pos:position pos:line="339" pos:column="23"/></operator> <name pos:line="339" pos:column="24">save_make_backups<pos:position pos:line="339" pos:column="41"/></name></expr>;<pos:position pos:line="339" pos:column="42"/></expr_stmt>

	<if pos:line="341" pos:column="9">if <condition pos:line="341" pos:column="12">(<expr><name pos:line="341" pos:column="13">phase<pos:position pos:line="341" pos:column="18"/></name> <operator pos:line="341" pos:column="19">==<pos:position pos:line="341" pos:column="21"/></operator> <literal type="number" pos:line="341" pos:column="22">2<pos:position pos:line="341" pos:column="23"/></literal> <operator pos:line="341" pos:column="24">&amp;&amp;<pos:position pos:line="341" pos:column="34"/></operator> <name pos:line="341" pos:column="27">delay_updates<pos:position pos:line="341" pos:column="40"/></name></expr>)<pos:position pos:line="341" pos:column="41"/></condition><then pos:line="341" pos:column="41"> <comment type="block" pos:line="341" pos:column="42">/* for protocol_version &lt; 29 */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="342" pos:column="17">handle_delayed_updates<pos:position pos:line="342" pos:column="39"/></name><argument_list pos:line="342" pos:column="39">(<argument><expr><name pos:line="342" pos:column="40">flist<pos:position pos:line="342" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="342" pos:column="47">local_name<pos:position pos:line="342" pos:column="57"/></name></expr></argument>)<pos:position pos:line="342" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="59"/></expr_stmt></block></then></if>

	<if pos:line="344" pos:column="9">if <condition pos:line="344" pos:column="12">(<expr><name pos:line="344" pos:column="13">verbose<pos:position pos:line="344" pos:column="20"/></name> <operator pos:line="344" pos:column="21">&gt;<pos:position pos:line="344" pos:column="25"/></operator> <literal type="number" pos:line="344" pos:column="23">2<pos:position pos:line="344" pos:column="24"/></literal></expr>)<pos:position pos:line="344" pos:column="25"/></condition><then pos:line="344" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="345" pos:column="17">rprintf<pos:position pos:line="345" pos:column="24"/></name><argument_list pos:line="345" pos:column="24">(<argument><expr><name pos:line="345" pos:column="25">FINFO<pos:position pos:line="345" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="345" pos:column="31">"recv_files finished\n"<pos:position pos:line="345" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="345" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="56"/></expr_stmt></block></then></if>

	<return pos:line="347" pos:column="9">return <expr><literal type="number" pos:line="347" pos:column="16">0<pos:position pos:line="347" pos:column="17"/></literal></expr>;<pos:position pos:line="347" pos:column="18"/></return>
}<pos:position pos:line="348" pos:column="2"/></block></function></unit>

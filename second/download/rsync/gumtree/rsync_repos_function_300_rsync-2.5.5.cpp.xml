<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_300_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_struct<pos:position pos:line="1" pos:column="19"/></name></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">make_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">f<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">fname<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">string_area<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier><modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">ap<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">noexcludes<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">file_struct<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">file<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">STRUCT_STAT<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">st<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">sum<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><name pos:line="6" pos:column="18">SUM_LENGTH<pos:position pos:line="6" pos:column="28"/></name></expr>]<pos:position pos:line="6" pos:column="29"/></index></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">cleaned_name<pos:position pos:line="8" pos:column="26"/></name><index pos:line="8" pos:column="26">[<expr><name pos:line="8" pos:column="27">MAXPATHLEN<pos:position pos:line="8" pos:column="37"/></name></expr>]<pos:position pos:line="8" pos:column="38"/></index></name></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">linkbuf<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><name pos:line="9" pos:column="22">MAXPATHLEN<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">extern<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">int<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">module_id<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strlcpy<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">cleaned_name<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">fname<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">MAXPATHLEN<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">cleaned_name<pos:position pos:line="13" pos:column="21"/></name><index pos:line="13" pos:column="21">[<expr><name pos:line="13" pos:column="22">MAXPATHLEN<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">-<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">1<pos:position pos:line="13" pos:column="36"/></literal></expr>]<pos:position pos:line="13" pos:column="37"/></index></name> <operator pos:line="13" pos:column="38">=<pos:position pos:line="13" pos:column="39"/></operator> <literal type="number" pos:line="13" pos:column="40">0<pos:position pos:line="13" pos:column="41"/></literal></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">clean_fname<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">cleaned_name<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">sanitize_paths<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28"> <block pos:line="15" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">sanitize_path<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">cleaned_name<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">NULL<pos:position pos:line="16" pos:column="49"/></name></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="18" pos:column="9">fname<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">cleaned_name<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">memset<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">sum<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">SUM_LENGTH<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">readlink_stat<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">fname<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="35">st<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">linkbuf<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call> <operator pos:line="22" pos:column="48">!=<pos:position pos:line="22" pos:column="50"/></operator> <literal type="number" pos:line="22" pos:column="51">0<pos:position pos:line="22" pos:column="52"/></literal></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53"> <block pos:line="22" pos:column="54">{
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">int<pos:position pos:line="23" pos:column="20"/></name></type> <name pos:line="23" pos:column="21">save_errno<pos:position pos:line="23" pos:column="31"/></name> <init pos:line="23" pos:column="32">= <expr><name pos:line="23" pos:column="34">errno<pos:position pos:line="23" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="40"/></decl_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">errno<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">==<pos:position pos:line="24" pos:column="30"/></operator> <name pos:line="24" pos:column="31">ENOENT<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">)<pos:position pos:line="24" pos:column="38"/></operator> <operator pos:line="24" pos:column="39">&amp;&amp;<pos:position pos:line="24" pos:column="49"/></operator> <name pos:line="24" pos:column="42">copy_links<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">&amp;&amp;<pos:position pos:line="24" pos:column="63"/></operator> <operator pos:line="24" pos:column="56">!<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="57">noexcludes<pos:position pos:line="24" pos:column="67"/></name></expr>)<pos:position pos:line="24" pos:column="68"/></condition><then pos:line="24" pos:column="68"> <block pos:line="24" pos:column="69">{
			<comment type="block" pos:line="25" pos:column="25">/* symlink pointing nowhere, see if excluded */</comment>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">memset<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">char<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">*<pos:position pos:line="26" pos:column="39"/></operator><operator pos:line="26" pos:column="39">)<pos:position pos:line="26" pos:column="40"/></operator> <operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="42">st<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="46">0<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="49">sizeof<argument_list pos:line="26" pos:column="55">(<argument><expr><name pos:line="26" pos:column="56">st<pos:position pos:line="26" pos:column="58"/></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><call><name pos:line="27" pos:column="29">check_exclude_file<pos:position pos:line="27" pos:column="47"/></name><argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">f<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">fname<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="58">&amp;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="59">st<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63"> <block pos:line="27" pos:column="64">{
				<comment type="block" pos:line="28" pos:column="33">/* file is excluded anyway, ignore silently */</comment>
				<return pos:line="29" pos:column="33">return <expr><name pos:line="29" pos:column="40">NULL<pos:position pos:line="29" pos:column="44"/></name></expr>;<pos:position pos:line="29" pos:column="45"/></return>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">io_error<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="28">1<pos:position pos:line="32" pos:column="29"/></literal></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">rprintf<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">FERROR<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="33">"readlink %s: %s\n"<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>,
			<argument><expr><name pos:line="34" pos:column="25">fname<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="32">strerror<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">save_errno<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/* we use noexcludes from backup.c */</comment>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">noexcludes<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24">
		<block type="pseudo"><goto pos:line="40" pos:column="17">goto <name pos:line="40" pos:column="22">skip_excludes<pos:position pos:line="40" pos:column="35"/></name>;<pos:position pos:line="40" pos:column="36"/></goto></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">S_ISDIR<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name><name pos:line="42" pos:column="21">st<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">st_mode<pos:position pos:line="42" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call> <operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <operator pos:line="42" pos:column="36">!<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">recurse<pos:position pos:line="42" pos:column="44"/></name></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <block pos:line="42" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">rprintf<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">FINFO<pos:position pos:line="43" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="32">"skipping directory %s\n"<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="59">fname<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="66"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><name pos:line="44" pos:column="24">NULL<pos:position pos:line="44" pos:column="28"/></name></expr>;<pos:position pos:line="44" pos:column="29"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">one_file_system<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">&amp;&amp;<pos:position pos:line="47" pos:column="39"/></operator> <name><name pos:line="47" pos:column="32">st<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">.<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="35">st_dev<pos:position pos:line="47" pos:column="41"/></name></name> <operator pos:line="47" pos:column="42">!=<pos:position pos:line="47" pos:column="44"/></operator> <name pos:line="47" pos:column="45">filesystem_dev<pos:position pos:line="47" pos:column="59"/></name></expr>)<pos:position pos:line="47" pos:column="60"/></condition><then pos:line="47" pos:column="60"> <block pos:line="47" pos:column="61">{
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><call><name pos:line="48" pos:column="21">skip_filesystem<pos:position pos:line="48" pos:column="36"/></name><argument_list pos:line="48" pos:column="36">(<argument><expr><name pos:line="48" pos:column="37">fname<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="44">&amp;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="45">st<pos:position pos:line="48" pos:column="47"/></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49">
			<block type="pseudo"><return pos:line="49" pos:column="25">return <expr><name pos:line="49" pos:column="32">NULL<pos:position pos:line="49" pos:column="36"/></name></expr>;<pos:position pos:line="49" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><call><name pos:line="52" pos:column="13">check_exclude_file<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">f<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="35">fname<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="42">&amp;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="43">st<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="47"/></condition><then pos:line="52" pos:column="47">
		<block type="pseudo"><return pos:line="53" pos:column="17">return <expr><name pos:line="53" pos:column="24">NULL<pos:position pos:line="53" pos:column="28"/></name></expr>;<pos:position pos:line="53" pos:column="29"/></return></block></then></if>


	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">lp_ignore_nonreadable<pos:position pos:line="56" pos:column="34"/></name><argument_list pos:line="56" pos:column="34">(<argument><expr><name pos:line="56" pos:column="35">module_id<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call> <operator pos:line="56" pos:column="46">&amp;&amp;<pos:position pos:line="56" pos:column="56"/></operator> <call><name pos:line="56" pos:column="49">access<pos:position pos:line="56" pos:column="55"/></name><argument_list pos:line="56" pos:column="55">(<argument><expr><name pos:line="56" pos:column="56">fname<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="63">R_OK<pos:position pos:line="56" pos:column="67"/></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call> <operator pos:line="56" pos:column="69">!=<pos:position pos:line="56" pos:column="71"/></operator> <literal type="number" pos:line="56" pos:column="72">0<pos:position pos:line="56" pos:column="73"/></literal></expr>)<pos:position pos:line="56" pos:column="74"/></condition><then pos:line="56" pos:column="74">
		<block type="pseudo"><return pos:line="57" pos:column="17">return <expr><name pos:line="57" pos:column="24">NULL<pos:position pos:line="57" pos:column="28"/></name></expr>;<pos:position pos:line="57" pos:column="29"/></return></block></then></if>

      <label><name pos:line="59" pos:column="7">skip_excludes<pos:position pos:line="59" pos:column="20"/></name>:<pos:position pos:line="59" pos:column="21"/></label>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">verbose<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">&gt;<pos:position pos:line="61" pos:column="25"/></operator> <literal type="number" pos:line="61" pos:column="23">2<pos:position pos:line="61" pos:column="24"/></literal></expr>)<pos:position pos:line="61" pos:column="25"/></condition><then pos:line="61" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="17">rprintf<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">FINFO<pos:position pos:line="62" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="32">"make_file(%d,%s)\n"<pos:position pos:line="62" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="54">f<pos:position pos:line="62" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="57">fname<pos:position pos:line="62" pos:column="62"/></name></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="64" pos:column="9">file<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator>struct <name pos:line="64" pos:column="24">file_struct<pos:position pos:line="64" pos:column="35"/></name> <operator pos:line="64" pos:column="36">*<pos:position pos:line="64" pos:column="37"/></operator><operator pos:line="64" pos:column="37">)<pos:position pos:line="64" pos:column="38"/></operator> <call><name pos:line="64" pos:column="39">malloc<pos:position pos:line="64" pos:column="45"/></name><argument_list pos:line="64" pos:column="45">(<argument><expr><sizeof pos:line="64" pos:column="46">sizeof<argument_list pos:line="64" pos:column="52">(<argument><expr><operator pos:line="64" pos:column="53">*<pos:position pos:line="64" pos:column="54"/></operator><name pos:line="64" pos:column="54">file<pos:position pos:line="64" pos:column="58"/></name></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="61"/></expr_stmt>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">file<pos:position pos:line="65" pos:column="18"/></name></expr>)<pos:position pos:line="65" pos:column="19"/></condition><then pos:line="65" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="17">out_of_memory<pos:position pos:line="66" pos:column="30"/></name><argument_list pos:line="66" pos:column="30">(<argument><expr><literal type="string" pos:line="66" pos:column="31">"make_file"<pos:position pos:line="66" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">memset<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><operator pos:line="67" pos:column="16">(<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">char<pos:position pos:line="67" pos:column="21"/></name> <operator pos:line="67" pos:column="22">*<pos:position pos:line="67" pos:column="23"/></operator><operator pos:line="67" pos:column="23">)<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="25">file<pos:position pos:line="67" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="31">0<pos:position pos:line="67" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="34">sizeof<argument_list pos:line="67" pos:column="40">(<argument><expr><operator pos:line="67" pos:column="41">*<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">file<pos:position pos:line="67" pos:column="46"/></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">(<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">p<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">=<pos:position pos:line="69" pos:column="17"/></operator> <call><name pos:line="69" pos:column="18">strrchr<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">fname<pos:position pos:line="69" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="69" pos:column="33">'/'<pos:position pos:line="69" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="37"/></argument_list></call><operator pos:line="69" pos:column="37">)<pos:position pos:line="69" pos:column="38"/></operator></expr>)<pos:position pos:line="69" pos:column="39"/></condition><then pos:line="69" pos:column="39"> <block pos:line="69" pos:column="40">{
		<decl_stmt><decl><specifier pos:line="70" pos:column="17">static<pos:position pos:line="70" pos:column="23"/></specifier> <type><name pos:line="70" pos:column="24">char<pos:position pos:line="70" pos:column="28"/></name> <modifier pos:line="70" pos:column="29">*<pos:position pos:line="70" pos:column="30"/></modifier></type><name pos:line="70" pos:column="30">lastdir<pos:position pos:line="70" pos:column="37"/></name></decl>;<pos:position pos:line="70" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><operator pos:line="71" pos:column="17">*<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">p<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <literal type="number" pos:line="71" pos:column="22">0<pos:position pos:line="71" pos:column="23"/></literal></expr>;<pos:position pos:line="71" pos:column="24"/></expr_stmt>
		<if pos:line="72" pos:column="17">if <condition pos:line="72" pos:column="20">(<expr><name pos:line="72" pos:column="21">lastdir<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">&amp;&amp;<pos:position pos:line="72" pos:column="39"/></operator> <call><name pos:line="72" pos:column="32">strcmp<pos:position pos:line="72" pos:column="38"/></name><argument_list pos:line="72" pos:column="38">(<argument><expr><name pos:line="72" pos:column="39">fname<pos:position pos:line="72" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="46">lastdir<pos:position pos:line="72" pos:column="53"/></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></call> <operator pos:line="72" pos:column="55">==<pos:position pos:line="72" pos:column="57"/></operator> <literal type="number" pos:line="72" pos:column="58">0<pos:position pos:line="72" pos:column="59"/></literal></expr>)<pos:position pos:line="72" pos:column="60"/></condition><then pos:line="72" pos:column="60"> <block pos:line="72" pos:column="61">{
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">file<pos:position pos:line="73" pos:column="29"/></name><operator pos:line="73" pos:column="29">-&gt;<pos:position pos:line="73" pos:column="34"/></operator><name pos:line="73" pos:column="31">dirname<pos:position pos:line="73" pos:column="38"/></name></name> <operator pos:line="73" pos:column="39">=<pos:position pos:line="73" pos:column="40"/></operator> <name pos:line="73" pos:column="41">lastdir<pos:position pos:line="73" pos:column="48"/></name></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></then> <else pos:line="74" pos:column="19">else <block pos:line="74" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">file<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">-&gt;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="31">dirname<pos:position pos:line="75" pos:column="38"/></name></name> <operator pos:line="75" pos:column="39">=<pos:position pos:line="75" pos:column="40"/></operator> <call><name pos:line="75" pos:column="41">strdup<pos:position pos:line="75" pos:column="47"/></name><argument_list pos:line="75" pos:column="47">(<argument><expr><name pos:line="75" pos:column="48">fname<pos:position pos:line="75" pos:column="53"/></name></expr></argument>)<pos:position pos:line="75" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="76" pos:column="25">lastdir<pos:position pos:line="76" pos:column="32"/></name> <operator pos:line="76" pos:column="33">=<pos:position pos:line="76" pos:column="34"/></operator> <name><name pos:line="76" pos:column="35">file<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">-&gt;<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="41">dirname<pos:position pos:line="76" pos:column="48"/></name></name></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="77" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="78" pos:column="17">file<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">-&gt;<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="23">basename<pos:position pos:line="78" pos:column="31"/></name></name> <operator pos:line="78" pos:column="32">=<pos:position pos:line="78" pos:column="33"/></operator> <call><name pos:line="78" pos:column="34">STRDUP<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><name pos:line="78" pos:column="41">ap<pos:position pos:line="78" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="45">p<pos:position pos:line="78" pos:column="46"/></name> <operator pos:line="78" pos:column="47">+<pos:position pos:line="78" pos:column="48"/></operator> <literal type="number" pos:line="78" pos:column="49">1<pos:position pos:line="78" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="79" pos:column="17">*<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">p<pos:position pos:line="79" pos:column="19"/></name> <operator pos:line="79" pos:column="20">=<pos:position pos:line="79" pos:column="21"/></operator> <literal type="char" pos:line="79" pos:column="22">'/'<pos:position pos:line="79" pos:column="25"/></literal></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></then> <else pos:line="80" pos:column="11">else <block pos:line="80" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="81" pos:column="17">file<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">dirname<pos:position pos:line="81" pos:column="30"/></name></name> <operator pos:line="81" pos:column="31">=<pos:position pos:line="81" pos:column="32"/></operator> <name pos:line="81" pos:column="33">NULL<pos:position pos:line="81" pos:column="37"/></name></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="82" pos:column="17">file<pos:position pos:line="82" pos:column="21"/></name><operator pos:line="82" pos:column="21">-&gt;<pos:position pos:line="82" pos:column="26"/></operator><name pos:line="82" pos:column="23">basename<pos:position pos:line="82" pos:column="31"/></name></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <call><name pos:line="82" pos:column="34">STRDUP<pos:position pos:line="82" pos:column="40"/></name><argument_list pos:line="82" pos:column="40">(<argument><expr><name pos:line="82" pos:column="41">ap<pos:position pos:line="82" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="45">fname<pos:position pos:line="82" pos:column="50"/></name></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="85" pos:column="9">file<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">-&gt;<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="15">modtime<pos:position pos:line="85" pos:column="22"/></name></name> <operator pos:line="85" pos:column="23">=<pos:position pos:line="85" pos:column="24"/></operator> <name><name pos:line="85" pos:column="25">st<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">.<pos:position pos:line="85" pos:column="28"/></operator><name pos:line="85" pos:column="28">st_mtime<pos:position pos:line="85" pos:column="36"/></name></name></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="86" pos:column="9">file<pos:position pos:line="86" pos:column="13"/></name><operator pos:line="86" pos:column="13">-&gt;<pos:position pos:line="86" pos:column="18"/></operator><name pos:line="86" pos:column="15">length<pos:position pos:line="86" pos:column="21"/></name></name> <operator pos:line="86" pos:column="22">=<pos:position pos:line="86" pos:column="23"/></operator> <name><name pos:line="86" pos:column="24">st<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">.<pos:position pos:line="86" pos:column="27"/></operator><name pos:line="86" pos:column="27">st_size<pos:position pos:line="86" pos:column="34"/></name></name></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="87" pos:column="9">file<pos:position pos:line="87" pos:column="13"/></name><operator pos:line="87" pos:column="13">-&gt;<pos:position pos:line="87" pos:column="18"/></operator><name pos:line="87" pos:column="15">mode<pos:position pos:line="87" pos:column="19"/></name></name> <operator pos:line="87" pos:column="20">=<pos:position pos:line="87" pos:column="21"/></operator> <name><name pos:line="87" pos:column="22">st<pos:position pos:line="87" pos:column="24"/></name><operator pos:line="87" pos:column="24">.<pos:position pos:line="87" pos:column="25"/></operator><name pos:line="87" pos:column="25">st_mode<pos:position pos:line="87" pos:column="32"/></name></name></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="88" pos:column="9">file<pos:position pos:line="88" pos:column="13"/></name><operator pos:line="88" pos:column="13">-&gt;<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="15">uid<pos:position pos:line="88" pos:column="18"/></name></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <name><name pos:line="88" pos:column="21">st<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">.<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="24">st_uid<pos:position pos:line="88" pos:column="30"/></name></name></expr>;<pos:position pos:line="88" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="89" pos:column="9">file<pos:position pos:line="89" pos:column="13"/></name><operator pos:line="89" pos:column="13">-&gt;<pos:position pos:line="89" pos:column="18"/></operator><name pos:line="89" pos:column="15">gid<pos:position pos:line="89" pos:column="18"/></name></name> <operator pos:line="89" pos:column="19">=<pos:position pos:line="89" pos:column="20"/></operator> <name><name pos:line="89" pos:column="21">st<pos:position pos:line="89" pos:column="23"/></name><operator pos:line="89" pos:column="23">.<pos:position pos:line="89" pos:column="24"/></operator><name pos:line="89" pos:column="24">st_gid<pos:position pos:line="89" pos:column="30"/></name></name></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="90" pos:column="9">file<pos:position pos:line="90" pos:column="13"/></name><operator pos:line="90" pos:column="13">-&gt;<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="15">dev<pos:position pos:line="90" pos:column="18"/></name></name> <operator pos:line="90" pos:column="19">=<pos:position pos:line="90" pos:column="20"/></operator> <name><name pos:line="90" pos:column="21">st<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">.<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">st_dev<pos:position pos:line="90" pos:column="30"/></name></name></expr>;<pos:position pos:line="90" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="91" pos:column="9">file<pos:position pos:line="91" pos:column="13"/></name><operator pos:line="91" pos:column="13">-&gt;<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="15">inode<pos:position pos:line="91" pos:column="20"/></name></name> <operator pos:line="91" pos:column="21">=<pos:position pos:line="91" pos:column="22"/></operator> <name><name pos:line="91" pos:column="23">st<pos:position pos:line="91" pos:column="25"/></name><operator pos:line="91" pos:column="25">.<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="26">st_ino<pos:position pos:line="91" pos:column="32"/></name></name></expr>;<pos:position pos:line="91" pos:column="33"/></expr_stmt>
<cpp:ifdef pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">ifdef<pos:position pos:line="92" pos:column="7"/></cpp:directive> <name pos:line="92" pos:column="8">HAVE_STRUCT_STAT_ST_RDEV<pos:position pos:line="92" pos:column="32"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="93" pos:column="9">file<pos:position pos:line="93" pos:column="13"/></name><operator pos:line="93" pos:column="13">-&gt;<pos:position pos:line="93" pos:column="18"/></operator><name pos:line="93" pos:column="15">rdev<pos:position pos:line="93" pos:column="19"/></name></name> <operator pos:line="93" pos:column="20">=<pos:position pos:line="93" pos:column="21"/></operator> <name><name pos:line="93" pos:column="22">st<pos:position pos:line="93" pos:column="24"/></name><operator pos:line="93" pos:column="24">.<pos:position pos:line="93" pos:column="25"/></operator><name pos:line="93" pos:column="25">st_rdev<pos:position pos:line="93" pos:column="32"/></name></name></expr>;<pos:position pos:line="93" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">if<pos:position pos:line="96" pos:column="4"/></cpp:directive> <expr><name pos:line="96" pos:column="5">SUPPORT_LINKS<pos:position pos:line="96" pos:column="18"/></name></expr></cpp:if>
	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><call><name pos:line="97" pos:column="13">S_ISLNK<pos:position pos:line="97" pos:column="20"/></name><argument_list pos:line="97" pos:column="20">(<argument><expr><name><name pos:line="97" pos:column="21">st<pos:position pos:line="97" pos:column="23"/></name><operator pos:line="97" pos:column="23">.<pos:position pos:line="97" pos:column="24"/></operator><name pos:line="97" pos:column="24">st_mode<pos:position pos:line="97" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="33"/></condition><then pos:line="97" pos:column="33"> <block pos:line="97" pos:column="34">{
		<expr_stmt><expr><name><name pos:line="98" pos:column="17">file<pos:position pos:line="98" pos:column="21"/></name><operator pos:line="98" pos:column="21">-&gt;<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="23">link<pos:position pos:line="98" pos:column="27"/></name></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <call><name pos:line="98" pos:column="30">STRDUP<pos:position pos:line="98" pos:column="36"/></name><argument_list pos:line="98" pos:column="36">(<argument><expr><name pos:line="98" pos:column="37">ap<pos:position pos:line="98" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="41">linkbuf<pos:position pos:line="98" pos:column="48"/></name></expr></argument>)<pos:position pos:line="98" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">always_checksum<pos:position pos:line="102" pos:column="28"/></name></expr>)<pos:position pos:line="102" pos:column="29"/></condition><then pos:line="102" pos:column="29"> <block pos:line="102" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">file<pos:position pos:line="103" pos:column="21"/></name><operator pos:line="103" pos:column="21">-&gt;<pos:position pos:line="103" pos:column="26"/></operator><name pos:line="103" pos:column="23">sum<pos:position pos:line="103" pos:column="26"/></name></name> <operator pos:line="103" pos:column="27">=<pos:position pos:line="103" pos:column="28"/></operator> <operator pos:line="103" pos:column="29">(<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="30">char<pos:position pos:line="103" pos:column="34"/></name> <operator pos:line="103" pos:column="35">*<pos:position pos:line="103" pos:column="36"/></operator><operator pos:line="103" pos:column="36">)<pos:position pos:line="103" pos:column="37"/></operator> <call><name pos:line="103" pos:column="38">MALLOC<pos:position pos:line="103" pos:column="44"/></name><argument_list pos:line="103" pos:column="44">(<argument><expr><name pos:line="103" pos:column="45">ap<pos:position pos:line="103" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="49">MD4_SUM_LENGTH<pos:position pos:line="103" pos:column="63"/></name></expr></argument>)<pos:position pos:line="103" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="65"/></expr_stmt>
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><operator pos:line="104" pos:column="21">!<pos:position pos:line="104" pos:column="22"/></operator><name><name pos:line="104" pos:column="22">file<pos:position pos:line="104" pos:column="26"/></name><operator pos:line="104" pos:column="26">-&gt;<pos:position pos:line="104" pos:column="31"/></operator><name pos:line="104" pos:column="28">sum<pos:position pos:line="104" pos:column="31"/></name></name></expr>)<pos:position pos:line="104" pos:column="32"/></condition><then pos:line="104" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="25">out_of_memory<pos:position pos:line="105" pos:column="38"/></name><argument_list pos:line="105" pos:column="38">(<argument><expr><literal type="string" pos:line="105" pos:column="39">"md4 sum"<pos:position pos:line="105" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="50"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="106" pos:column="17">/* drat. we have to provide a null checksum for non-regular
		   files in order to be compatible with earlier versions
		   of rsync */</comment>
		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><call><name pos:line="109" pos:column="21">S_ISREG<pos:position pos:line="109" pos:column="28"/></name><argument_list pos:line="109" pos:column="28">(<argument><expr><name><name pos:line="109" pos:column="29">st<pos:position pos:line="109" pos:column="31"/></name><operator pos:line="109" pos:column="31">.<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="32">st_mode<pos:position pos:line="109" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="41"/></condition><then pos:line="109" pos:column="41"> <block pos:line="109" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">file_checksum<pos:position pos:line="110" pos:column="38"/></name><argument_list pos:line="110" pos:column="38">(<argument><expr><name pos:line="110" pos:column="39">fname<pos:position pos:line="110" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="46">file<pos:position pos:line="110" pos:column="50"/></name><operator pos:line="110" pos:column="50">-&gt;<pos:position pos:line="110" pos:column="55"/></operator><name pos:line="110" pos:column="52">sum<pos:position pos:line="110" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="110" pos:column="57">st<pos:position pos:line="110" pos:column="59"/></name><operator pos:line="110" pos:column="59">.<pos:position pos:line="110" pos:column="60"/></operator><name pos:line="110" pos:column="60">st_size<pos:position pos:line="110" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="111" pos:column="18"/></block></then> <else pos:line="111" pos:column="19">else <block pos:line="111" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="112" pos:column="25">memset<pos:position pos:line="112" pos:column="31"/></name><argument_list pos:line="112" pos:column="31">(<argument><expr><name><name pos:line="112" pos:column="32">file<pos:position pos:line="112" pos:column="36"/></name><operator pos:line="112" pos:column="36">-&gt;<pos:position pos:line="112" pos:column="41"/></operator><name pos:line="112" pos:column="38">sum<pos:position pos:line="112" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="43">0<pos:position pos:line="112" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="46">MD4_SUM_LENGTH<pos:position pos:line="112" pos:column="60"/></name></expr></argument>)<pos:position pos:line="112" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="113" pos:column="18"/></block></else></if>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if>

	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">flist_dir<pos:position pos:line="116" pos:column="22"/></name></expr>)<pos:position pos:line="116" pos:column="23"/></condition><then pos:line="116" pos:column="23"> <block pos:line="116" pos:column="24">{
		<decl_stmt><decl><specifier pos:line="117" pos:column="17">static<pos:position pos:line="117" pos:column="23"/></specifier> <type><name pos:line="117" pos:column="24">char<pos:position pos:line="117" pos:column="28"/></name> <modifier pos:line="117" pos:column="29">*<pos:position pos:line="117" pos:column="30"/></modifier></type><name pos:line="117" pos:column="30">lastdir<pos:position pos:line="117" pos:column="37"/></name></decl>;<pos:position pos:line="117" pos:column="38"/></decl_stmt>
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><name pos:line="118" pos:column="21">lastdir<pos:position pos:line="118" pos:column="28"/></name> <operator pos:line="118" pos:column="29">&amp;&amp;<pos:position pos:line="118" pos:column="39"/></operator> <call><name pos:line="118" pos:column="32">strcmp<pos:position pos:line="118" pos:column="38"/></name><argument_list pos:line="118" pos:column="38">(<argument><expr><name pos:line="118" pos:column="39">lastdir<pos:position pos:line="118" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="48">flist_dir<pos:position pos:line="118" pos:column="57"/></name></expr></argument>)<pos:position pos:line="118" pos:column="58"/></argument_list></call> <operator pos:line="118" pos:column="59">==<pos:position pos:line="118" pos:column="61"/></operator> <literal type="number" pos:line="118" pos:column="62">0<pos:position pos:line="118" pos:column="63"/></literal></expr>)<pos:position pos:line="118" pos:column="64"/></condition><then pos:line="118" pos:column="64"> <block pos:line="118" pos:column="65">{
			<expr_stmt><expr><name><name pos:line="119" pos:column="25">file<pos:position pos:line="119" pos:column="29"/></name><operator pos:line="119" pos:column="29">-&gt;<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="31">basedir<pos:position pos:line="119" pos:column="38"/></name></name> <operator pos:line="119" pos:column="39">=<pos:position pos:line="119" pos:column="40"/></operator> <name pos:line="119" pos:column="41">lastdir<pos:position pos:line="119" pos:column="48"/></name></expr>;<pos:position pos:line="119" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="120" pos:column="18"/></block></then> <else pos:line="120" pos:column="19">else <block pos:line="120" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="121" pos:column="25">file<pos:position pos:line="121" pos:column="29"/></name><operator pos:line="121" pos:column="29">-&gt;<pos:position pos:line="121" pos:column="34"/></operator><name pos:line="121" pos:column="31">basedir<pos:position pos:line="121" pos:column="38"/></name></name> <operator pos:line="121" pos:column="39">=<pos:position pos:line="121" pos:column="40"/></operator> <call><name pos:line="121" pos:column="41">strdup<pos:position pos:line="121" pos:column="47"/></name><argument_list pos:line="121" pos:column="47">(<argument><expr><name pos:line="121" pos:column="48">flist_dir<pos:position pos:line="121" pos:column="57"/></name></expr></argument>)<pos:position pos:line="121" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="122" pos:column="25">lastdir<pos:position pos:line="122" pos:column="32"/></name> <operator pos:line="122" pos:column="33">=<pos:position pos:line="122" pos:column="34"/></operator> <name><name pos:line="122" pos:column="35">file<pos:position pos:line="122" pos:column="39"/></name><operator pos:line="122" pos:column="39">-&gt;<pos:position pos:line="122" pos:column="44"/></operator><name pos:line="122" pos:column="41">basedir<pos:position pos:line="122" pos:column="48"/></name></name></expr>;<pos:position pos:line="122" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="123" pos:column="18"/></block></else></if>
	}<pos:position pos:line="124" pos:column="10"/></block></then> <else pos:line="124" pos:column="11">else <block pos:line="124" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="125" pos:column="17">file<pos:position pos:line="125" pos:column="21"/></name><operator pos:line="125" pos:column="21">-&gt;<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="23">basedir<pos:position pos:line="125" pos:column="30"/></name></name> <operator pos:line="125" pos:column="31">=<pos:position pos:line="125" pos:column="32"/></operator> <name pos:line="125" pos:column="33">NULL<pos:position pos:line="125" pos:column="37"/></name></expr>;<pos:position pos:line="125" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="126" pos:column="10"/></block></else></if>

	<if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><operator pos:line="128" pos:column="13">!<pos:position pos:line="128" pos:column="14"/></operator><call><name pos:line="128" pos:column="14">S_ISDIR<pos:position pos:line="128" pos:column="21"/></name><argument_list pos:line="128" pos:column="21">(<argument><expr><name><name pos:line="128" pos:column="22">st<pos:position pos:line="128" pos:column="24"/></name><operator pos:line="128" pos:column="24">.<pos:position pos:line="128" pos:column="25"/></operator><name pos:line="128" pos:column="25">st_mode<pos:position pos:line="128" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="34"/></condition><then pos:line="128" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="129" pos:column="17">stats<pos:position pos:line="129" pos:column="22"/></name><operator pos:line="129" pos:column="22">.<pos:position pos:line="129" pos:column="23"/></operator><name pos:line="129" pos:column="23">total_size<pos:position pos:line="129" pos:column="33"/></name></name> <operator pos:line="129" pos:column="34">+=<pos:position pos:line="129" pos:column="36"/></operator> <name><name pos:line="129" pos:column="37">st<pos:position pos:line="129" pos:column="39"/></name><operator pos:line="129" pos:column="39">.<pos:position pos:line="129" pos:column="40"/></operator><name pos:line="129" pos:column="40">st_size<pos:position pos:line="129" pos:column="47"/></name></name></expr>;<pos:position pos:line="129" pos:column="48"/></expr_stmt></block></then></if>

	<return pos:line="131" pos:column="9">return <expr><name pos:line="131" pos:column="16">file<pos:position pos:line="131" pos:column="20"/></name></expr>;<pos:position pos:line="131" pos:column="21"/></return>
}<pos:position pos:line="132" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_671_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">ZLIB_INTERNAL<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">zcfree<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">opaque<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">ptr<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">voidpf<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">opaque<pos:position pos:line="2" pos:column="18"/></name></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">voidpf<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">ptr<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">free<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">ptr<pos:position pos:line="5" pos:column="13"/></name></expr></argument>)<pos:position pos:line="5" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">opaque<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> <block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="6" pos:column="25">/* make compiler happy */</comment>
}<pos:position pos:line="7" pos:column="2"/></block></function_decl></unit>

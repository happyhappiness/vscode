<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_138_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">noop_io_until_death<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">buf<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">1024<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name><name pos:line="5" pos:column="14">iobuf<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">in<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">.<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">buf<pos:position pos:line="5" pos:column="26"/></name></name> <operator pos:line="5" pos:column="27">||<pos:position pos:line="5" pos:column="29"/></operator> <operator pos:line="5" pos:column="30">!<pos:position pos:line="5" pos:column="31"/></operator><name><name pos:line="5" pos:column="31">iobuf<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">.<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">out<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">.<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="41">buf<pos:position pos:line="5" pos:column="44"/></name></name> <operator pos:line="5" pos:column="45">||<pos:position pos:line="5" pos:column="47"/></operator> <name><name pos:line="5" pos:column="48">iobuf<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">.<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="54">in_fd<pos:position pos:line="5" pos:column="59"/></name></name> <operator pos:line="5" pos:column="60">&lt;<pos:position pos:line="5" pos:column="64"/></operator> <literal type="number" pos:line="5" pos:column="62">0<pos:position pos:line="5" pos:column="63"/></literal> <operator pos:line="5" pos:column="64">||<pos:position pos:line="5" pos:column="66"/></operator> <name><name pos:line="5" pos:column="67">iobuf<pos:position pos:line="5" pos:column="72"/></name><operator pos:line="5" pos:column="72">.<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="73">out_fd<pos:position pos:line="5" pos:column="79"/></name></name> <operator pos:line="5" pos:column="80">&lt;<pos:position pos:line="5" pos:column="84"/></operator> <literal type="number" pos:line="5" pos:column="82">0<pos:position pos:line="5" pos:column="83"/></literal> <operator pos:line="5" pos:column="84">||<pos:position pos:line="5" pos:column="86"/></operator> <name pos:line="5" pos:column="87">kluge_around_eof<pos:position pos:line="5" pos:column="103"/></name></expr>)<pos:position pos:line="5" pos:column="104"/></condition><then pos:line="5" pos:column="104">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">kluge_around_eof<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <literal type="number" pos:line="8" pos:column="28">2<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
	<comment type="block" pos:line="9" pos:column="9">/* Setting an I/O timeout ensures that if something inexplicably weird
	 * happens, we won't hang around forever. */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">io_timeout<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">set_io_timeout<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><literal type="number" pos:line="12" pos:column="32">60<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt></block></then></if>

	<while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">read_buf<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name><name pos:line="15" pos:column="26">iobuf<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">in_fd<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">buf<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="44">sizeof <name pos:line="15" pos:column="51">buf<pos:position pos:line="15" pos:column="54"/></name></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt></block></while>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_495_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_rsync_acl<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">f<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">rsync_acl<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">racl<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">SMB_ACL_TYPE_T<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">type<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">item_list<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">racl_list<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ndx<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">find_matching_rsync_acl<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><name pos:line="4" pos:column="43">racl<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">type<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="55">racl_list<pos:position pos:line="4" pos:column="64"/></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Send 0 (-1 + 1) to indicate that literal ACL data follows. */</comment>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">write_varint<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">f<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="25">ndx<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">+<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="31">1<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">ndx<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">rsync_acl<pos:position pos:line="10" pos:column="26"/></name> <modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier></type><name pos:line="10" pos:column="28">new_racl<pos:position pos:line="10" pos:column="36"/></name> <init pos:line="10" pos:column="37">= <expr><call><name pos:line="10" pos:column="39">EXPAND_ITEM_LIST<pos:position pos:line="10" pos:column="55"/></name><argument_list pos:line="10" pos:column="55">(<argument><expr><name pos:line="10" pos:column="56">racl_list<pos:position pos:line="10" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="67">rsync_acl<pos:position pos:line="10" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="78">1000<pos:position pos:line="10" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="84"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">uchar<pos:position pos:line="11" pos:column="22"/></name></type> <name pos:line="11" pos:column="23">flags<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">racl<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">user_obj<pos:position pos:line="13" pos:column="35"/></name></name> <operator pos:line="13" pos:column="36">!=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">NO_ENTRY<pos:position pos:line="13" pos:column="47"/></name></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">flags<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">|=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">XMIT_USER_OBJ<pos:position pos:line="14" pos:column="47"/></name></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name><name pos:line="15" pos:column="21">racl<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">group_obj<pos:position pos:line="15" pos:column="36"/></name></name> <operator pos:line="15" pos:column="37">!=<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">NO_ENTRY<pos:position pos:line="15" pos:column="48"/></name></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">flags<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">|=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">XMIT_GROUP_OBJ<pos:position pos:line="16" pos:column="48"/></name></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">racl<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">mask_obj<pos:position pos:line="17" pos:column="35"/></name></name> <operator pos:line="17" pos:column="36">!=<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="39">NO_ENTRY<pos:position pos:line="17" pos:column="47"/></name></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">flags<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">|=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">XMIT_MASK_OBJ<pos:position pos:line="18" pos:column="47"/></name></expr>;<pos:position pos:line="18" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">racl<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">other_obj<pos:position pos:line="19" pos:column="36"/></name></name> <operator pos:line="19" pos:column="37">!=<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">NO_ENTRY<pos:position pos:line="19" pos:column="48"/></name></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">flags<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">|=<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="34">XMIT_OTHER_OBJ<pos:position pos:line="20" pos:column="48"/></name></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt></block></then></if>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name><name pos:line="21" pos:column="21">racl<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">names<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">.<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">count<pos:position pos:line="21" pos:column="38"/></name></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">flags<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">|=<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="34">XMIT_NAME_LIST<pos:position pos:line="22" pos:column="48"/></name></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="24" pos:column="17">write_byte<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">f<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">flags<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">flags<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="29">XMIT_USER_OBJ<pos:position pos:line="26" pos:column="42"/></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">write_varint<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">f<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="41">racl<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">user_obj<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">flags<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator> <name pos:line="28" pos:column="29">XMIT_GROUP_OBJ<pos:position pos:line="28" pos:column="43"/></name></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">write_varint<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">f<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="41">racl<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">-&gt;<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="47">group_obj<pos:position pos:line="29" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">flags<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">&amp;<pos:position pos:line="30" pos:column="32"/></operator> <name pos:line="30" pos:column="29">XMIT_MASK_OBJ<pos:position pos:line="30" pos:column="42"/></name></expr>)<pos:position pos:line="30" pos:column="43"/></condition><then pos:line="30" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">write_varint<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">f<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="41">racl<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">mask_obj<pos:position pos:line="31" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">flags<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="29">XMIT_OTHER_OBJ<pos:position pos:line="32" pos:column="43"/></name></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">write_varint<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">f<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="41">racl<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">-&gt;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="47">other_obj<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">flags<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">&amp;<pos:position pos:line="34" pos:column="32"/></operator> <name pos:line="34" pos:column="29">XMIT_NAME_LIST<pos:position pos:line="34" pos:column="43"/></name></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">send_ida_entries<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">f<pos:position pos:line="35" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="45">&amp;<pos:position pos:line="35" pos:column="50"/></operator><name><name pos:line="35" pos:column="46">racl<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">names<pos:position pos:line="35" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="37" pos:column="17">/* Give the allocated data to the new list object. */</comment>
		<expr_stmt><expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">new_racl<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="29">*<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">racl<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">racl<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">empty_rsync_acl<pos:position pos:line="39" pos:column="40"/></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

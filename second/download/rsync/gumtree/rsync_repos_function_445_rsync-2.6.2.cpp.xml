<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_445_rsync-2.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">alloc_pool_t<pos:position pos:line="1" pos:column="13"/></name></type>
<name pos:line="2" pos:column="1">pool_create<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">size_t<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">size<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">size_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">quantum<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
    <parameter><function_decl><type><name pos:line="3" pos:column="5">void<pos:position pos:line="3" pos:column="9"/></name></type> (<modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier><name pos:line="3" pos:column="12">bomb<pos:position pos:line="3" pos:column="16"/></name>)<parameter_list pos:line="3" pos:column="17">(<parameter><decl><type><name pos:line="3" pos:column="18">char<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="25"/></parameter_list></function_decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="27">int<pos:position pos:line="3" pos:column="30"/></name></type> <name pos:line="3" pos:column="31">flags<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">alloc_pool<pos:position pos:line="5" pos:column="26"/></name></name>	<modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">pool<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">pool<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <operator pos:line="7" pos:column="22">(<pos:position pos:line="7" pos:column="23"/></operator>struct <name pos:line="7" pos:column="30">alloc_pool<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">*<pos:position pos:line="7" pos:column="41"/></operator><operator pos:line="7" pos:column="41">)<pos:position pos:line="7" pos:column="42"/></operator> <call><name pos:line="7" pos:column="43">malloc<pos:position pos:line="7" pos:column="49"/></name><argument_list pos:line="7" pos:column="49">(<argument><expr><sizeof pos:line="7" pos:column="50">sizeof <argument_list pos:line="7" pos:column="57">(<argument><expr pos:line="7" pos:column="58">struct <name pos:line="7" pos:column="65">alloc_pool<pos:position pos:line="7" pos:column="75"/></name></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="77"/></argument_list></call><operator pos:line="7" pos:column="77">)<pos:position pos:line="7" pos:column="78"/></operator></expr>)<pos:position pos:line="7" pos:column="79"/></condition><then pos:line="7" pos:column="79">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">pool<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">pool<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="25">sizeof <argument_list pos:line="9" pos:column="32">(<argument><expr pos:line="9" pos:column="33">struct <name pos:line="9" pos:column="40">alloc_pool<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">pool<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">size<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <ternary><condition><expr><name pos:line="11" pos:column="22">size<pos:position pos:line="11" pos:column="26"/></name></expr>	<comment type="block" pos:line="11" pos:column="33">/* round extent size to min alignment reqs */</comment>
	    ?<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <expr><operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">size<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">+<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">MINALIGN<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">-<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">1<pos:position pos:line="12" pos:column="35"/></literal><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator> <operator pos:line="12" pos:column="37">&amp;<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="39">~<pos:position pos:line="12" pos:column="40"/></operator><operator pos:line="12" pos:column="40">(<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">MINALIGN<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">-<pos:position pos:line="12" pos:column="51"/></operator> <literal type="number" pos:line="12" pos:column="52">1<pos:position pos:line="12" pos:column="53"/></literal><operator pos:line="12" pos:column="53">)<pos:position pos:line="12" pos:column="54"/></operator></expr>
	    <pos:position pos:line="13" pos:column="6"/></then><else pos:line="13" pos:column="13">: <expr><name pos:line="13" pos:column="15">POOL_DEF_EXTENT<pos:position pos:line="13" pos:column="30"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">pool<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">flags<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="27">POOL_INTERN<pos:position pos:line="14" pos:column="38"/></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">pool<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">size<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">-=<pos:position pos:line="16" pos:column="30"/></operator> <sizeof pos:line="16" pos:column="31">sizeof <argument_list pos:line="16" pos:column="38">(<argument><expr pos:line="16" pos:column="39">struct <name pos:line="16" pos:column="46">pool_extent<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">flags<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">|=<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">POOL_APPEND<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">pool<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">quantum<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="19" pos:column="25">quantum<pos:position pos:line="19" pos:column="32"/></name></expr> ?<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <expr><name pos:line="19" pos:column="35">quantum<pos:position pos:line="19" pos:column="42"/></name></expr> <pos:position pos:line="19" pos:column="43"/></then><else pos:line="19" pos:column="43">: <expr><name pos:line="19" pos:column="45">MINALIGN<pos:position pos:line="19" pos:column="53"/></name></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">pool<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">bomb<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">bomb<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">pool<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">flags<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">flags<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>

	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">pool<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

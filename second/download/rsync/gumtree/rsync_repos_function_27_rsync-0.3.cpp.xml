<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_27_rsync-0.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">map_file<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">fd<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="23">off_t<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">len<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ret<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></operator><operator pos:line="3" pos:column="22">)<pos:position pos:line="3" pos:column="23"/></operator><call><name pos:line="3" pos:column="23">mmap<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">(<argument><expr><name pos:line="3" pos:column="28">NULL<pos:position pos:line="3" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="3" pos:column="33">len<pos:position pos:line="3" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="3" pos:column="37">PROT_READ<pos:position pos:line="3" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="3" pos:column="47">MAP_SHARED<pos:position pos:line="3" pos:column="57"/></name></expr></argument>,<argument><expr><name pos:line="3" pos:column="58">fd<pos:position pos:line="3" pos:column="60"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="3" pos:column="61">0<pos:position pos:line="3" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="64"/></decl_stmt>
  <return pos:line="4" pos:column="3">return <expr><name pos:line="4" pos:column="10">ret<pos:position pos:line="4" pos:column="13"/></name></expr>;<pos:position pos:line="4" pos:column="14"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

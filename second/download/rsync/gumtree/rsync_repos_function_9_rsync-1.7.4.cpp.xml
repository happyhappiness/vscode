<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_9_rsync-1.7.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_exclude_list<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">pattern<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">list<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">len<pos:position pos:line="3" pos:column="10"/></name><init pos:line="3" pos:column="10">=<expr><literal type="number" pos:line="3" pos:column="11">0<pos:position pos:line="3" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">list<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">&amp;&amp;<pos:position pos:line="4" pos:column="22"/></operator> <operator pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">list<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21">
    <block type="pseudo"><for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init pos:line="5" pos:column="10">;<pos:position pos:line="5" pos:column="11"/></init> <condition><expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">list<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">)<pos:position pos:line="5" pos:column="19"/></operator><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">len<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></expr>;<pos:position pos:line="5" pos:column="25"/></condition> <incr><expr><name pos:line="5" pos:column="26">len<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">++<pos:position pos:line="5" pos:column="31"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="32"/></control> <block type="pseudo"><empty_stmt pos:line="5" pos:column="33">;<pos:position pos:line="5" pos:column="34"/></empty_stmt></block></for></block></then></if>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><call><name pos:line="7" pos:column="7">strcmp<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">pattern<pos:position pos:line="7" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="22">"!"<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call> <operator pos:line="7" pos:column="27">==<pos:position pos:line="7" pos:column="29"/></operator> <literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32"> <block pos:line="7" pos:column="33">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">verbose<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&gt;<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="19">2<pos:position pos:line="8" pos:column="20"/></literal></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">fprintf<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">FINFO<pos:position pos:line="9" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="9" pos:column="21">"clearing exclude list\n"<pos:position pos:line="9" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt></block></then></if>
    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">len<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator><operator pos:line="10" pos:column="17">--<pos:position pos:line="10" pos:column="19"/></operator></expr>)<pos:position pos:line="10" pos:column="20"/></condition> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="7">free<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">list<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator><index pos:line="11" pos:column="19">[<expr><name pos:line="11" pos:column="20">len<pos:position pos:line="11" pos:column="23"/></name></expr>]<pos:position pos:line="11" pos:column="24"/></index></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt></block></while>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">free<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><operator pos:line="12" pos:column="11">*<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">list<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">)<pos:position pos:line="12" pos:column="17"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">list<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
    <return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><operator pos:line="17" pos:column="8">*<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">list<pos:position pos:line="17" pos:column="13"/></name></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14"> <block pos:line="17" pos:column="15">{
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">list<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">char<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></operator><operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><operator pos:line="18" pos:column="21">)<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">malloc<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><sizeof pos:line="18" pos:column="29">sizeof<argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">char<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">*<pos:position pos:line="18" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></sizeof><operator pos:line="18" pos:column="43">*<pos:position pos:line="18" pos:column="44"/></operator><literal type="number" pos:line="18" pos:column="44">2<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then> <else pos:line="19" pos:column="5">else <block pos:line="19" pos:column="10">{
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">list<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">char<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></operator><operator pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></operator><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">realloc<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><operator pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="31">list<pos:position pos:line="20" pos:column="35"/></name></expr></argument>,<argument><expr><sizeof pos:line="20" pos:column="36">sizeof<argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">char<pos:position pos:line="20" pos:column="47"/></name> <operator pos:line="20" pos:column="48">*<pos:position pos:line="20" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></sizeof><operator pos:line="20" pos:column="50">*<pos:position pos:line="20" pos:column="51"/></operator><operator pos:line="20" pos:column="51">(<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="52">len<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">+<pos:position pos:line="20" pos:column="56"/></operator><literal type="number" pos:line="20" pos:column="56">2<pos:position pos:line="20" pos:column="57"/></literal><operator pos:line="20" pos:column="57">)<pos:position pos:line="20" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></else></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">!<pos:position pos:line="23" pos:column="8"/></operator><operator pos:line="23" pos:column="8">*<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">list<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">||<pos:position pos:line="23" pos:column="16"/></operator> <operator pos:line="23" pos:column="17">!<pos:position pos:line="23" pos:column="18"/></operator><operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator><operator pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">list<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">)<pos:position pos:line="23" pos:column="26"/></operator><index pos:line="23" pos:column="26">[<expr><name pos:line="23" pos:column="27">len<pos:position pos:line="23" pos:column="30"/></name></expr>]<pos:position pos:line="23" pos:column="31"/></index> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <call><name pos:line="23" pos:column="34">strdup<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">pattern<pos:position pos:line="23" pos:column="48"/></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call><operator pos:line="23" pos:column="49">)<pos:position pos:line="23" pos:column="50"/></operator></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">out_of_memory<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><literal type="string" pos:line="24" pos:column="19">"add_exclude"<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">verbose<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&gt;<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="17">2<pos:position pos:line="26" pos:column="18"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">FINFO<pos:position pos:line="27" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="27" pos:column="19">"add_exclude(%s)\n"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>,<argument><expr><name pos:line="27" pos:column="39">pattern<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt></block></then></if>
  
  <expr_stmt><expr><operator pos:line="29" pos:column="3">(<pos:position pos:line="29" pos:column="4"/></operator><operator pos:line="29" pos:column="4">*<pos:position pos:line="29" pos:column="5"/></operator><name pos:line="29" pos:column="5">list<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">)<pos:position pos:line="29" pos:column="10"/></operator><index pos:line="29" pos:column="10">[<expr><name pos:line="29" pos:column="11">len<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">+<pos:position pos:line="29" pos:column="15"/></operator><literal type="number" pos:line="29" pos:column="15">1<pos:position pos:line="29" pos:column="16"/></literal></expr>]<pos:position pos:line="29" pos:column="17"/></index> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">NULL<pos:position pos:line="29" pos:column="24"/></name></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

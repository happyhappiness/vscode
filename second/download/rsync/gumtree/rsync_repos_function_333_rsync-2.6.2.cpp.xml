<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_333_rsync-2.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">time_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">t<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">time<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">NULL<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">do_stats<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">&amp;&amp;<pos:position pos:line="5" pos:column="32"/></operator> <name pos:line="5" pos:column="25">verbose<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">&gt;<pos:position pos:line="5" pos:column="37"/></operator> <literal type="number" pos:line="5" pos:column="35">1<pos:position pos:line="5" pos:column="36"/></literal></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <block pos:line="5" pos:column="38">{
		<comment type="block" pos:line="6" pos:column="17">/* These come out from every process */</comment>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">show_malloc_stats<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">show_flist_stats<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">()<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">am_generator<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
		<block type="pseudo"><return pos:line="12" pos:column="17">return;<pos:position pos:line="12" pos:column="24"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">am_daemon<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">log_exit<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">__FILE__<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">__LINE__<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">f<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <operator pos:line="16" pos:column="26">-<pos:position pos:line="16" pos:column="27"/></operator><literal type="number" pos:line="16" pos:column="27">1<pos:position pos:line="16" pos:column="28"/></literal> <operator pos:line="16" pos:column="29">||<pos:position pos:line="16" pos:column="31"/></operator> <operator pos:line="16" pos:column="32">!<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">am_sender<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block type="pseudo"><return pos:line="16" pos:column="44">return;<pos:position pos:line="16" pos:column="51"/></return></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">am_server<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23"> <block pos:line="19" pos:column="24">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">am_sender<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="21" pos:column="25">int64<pos:position pos:line="21" pos:column="30"/></name></type> <name pos:line="21" pos:column="31">w<pos:position pos:line="21" pos:column="32"/></name></decl>;<pos:position pos:line="21" pos:column="33"/></decl_stmt>
			<comment type="block" pos:line="22" pos:column="25">/* store total_written in a temporary
			 * because write_longint changes it */</comment>
			<expr_stmt><expr><name pos:line="24" pos:column="25">w<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="29">stats<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">total_written<pos:position pos:line="24" pos:column="48"/></name></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">write_longint<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">f<pos:position pos:line="25" pos:column="40"/></name></expr></argument>,<argument><expr><name><name pos:line="25" pos:column="41">stats<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">.<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="47">total_read<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">write_longint<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">f<pos:position pos:line="26" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="26" pos:column="41">w<pos:position pos:line="26" pos:column="42"/></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">write_longint<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">f<pos:position pos:line="27" pos:column="40"/></name></expr></argument>,<argument><expr><name><name pos:line="27" pos:column="41">stats<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">.<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="47">total_size<pos:position pos:line="27" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
		<return pos:line="29" pos:column="17">return;<pos:position pos:line="29" pos:column="24"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="32" pos:column="9">/* this is the client */</comment>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">am_sender<pos:position pos:line="34" pos:column="23"/></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24"> <block pos:line="34" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int64<pos:position pos:line="35" pos:column="22"/></name></type> <name pos:line="35" pos:column="23">r<pos:position pos:line="35" pos:column="24"/></name></decl>;<pos:position pos:line="35" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">stats<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">total_written<pos:position pos:line="36" pos:column="36"/></name></name> <operator pos:line="36" pos:column="37">=<pos:position pos:line="36" pos:column="38"/></operator> <call><name pos:line="36" pos:column="39">read_longint<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">(<argument><expr><name pos:line="36" pos:column="52">f<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
		<comment type="block" pos:line="37" pos:column="17">/* store total_read in a temporary, read_longint changes it */</comment>
		<expr_stmt><expr><name pos:line="38" pos:column="17">r<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <call><name pos:line="38" pos:column="21">read_longint<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">f<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">stats<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">.<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">total_size<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <call><name pos:line="39" pos:column="36">read_longint<pos:position pos:line="39" pos:column="48"/></name><argument_list pos:line="39" pos:column="48">(<argument><expr><name pos:line="39" pos:column="49">f<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">stats<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">.<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">total_read<pos:position pos:line="40" pos:column="33"/></name></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <name pos:line="40" pos:column="36">r<pos:position pos:line="40" pos:column="37"/></name></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">do_stats<pos:position pos:line="43" pos:column="21"/></name></expr>)<pos:position pos:line="43" pos:column="22"/></condition><then pos:line="43" pos:column="22"> <block pos:line="43" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">rprintf<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">FINFO<pos:position pos:line="44" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="44" pos:column="31">"\nNumber of files: %d\n"<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="58">stats<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">.<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="64">num_files<pos:position pos:line="44" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">rprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">FINFO<pos:position pos:line="45" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="45" pos:column="31">"Number of files transferred: %d\n"<pos:position pos:line="45" pos:column="66"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="46" pos:column="25">stats<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">.<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">num_transferred_files<pos:position pos:line="46" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">rprintf<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">FINFO<pos:position pos:line="47" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="47" pos:column="31">"Total file size: %.0f bytes\n"<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>,
			<argument><expr><operator pos:line="48" pos:column="25">(<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="26">double<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">)<pos:position pos:line="48" pos:column="33"/></operator><name><name pos:line="48" pos:column="33">stats<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">.<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="39">total_size<pos:position pos:line="48" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">rprintf<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><name pos:line="49" pos:column="25">FINFO<pos:position pos:line="49" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="49" pos:column="31">"Total transferred file size: %.0f bytes\n"<pos:position pos:line="49" pos:column="74"/></literal></expr></argument>,
			<argument><expr><operator pos:line="50" pos:column="25">(<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">double<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">)<pos:position pos:line="50" pos:column="33"/></operator><name><name pos:line="50" pos:column="33">stats<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">.<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">total_transferred_size<pos:position pos:line="50" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">rprintf<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">FINFO<pos:position pos:line="51" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="51" pos:column="31">"Literal data: %.0f bytes\n"<pos:position pos:line="51" pos:column="59"/></literal></expr></argument>,
			<argument><expr><operator pos:line="52" pos:column="25">(<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">double<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">)<pos:position pos:line="52" pos:column="33"/></operator><name><name pos:line="52" pos:column="33">stats<pos:position pos:line="52" pos:column="38"/></name><operator pos:line="52" pos:column="38">.<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="39">literal_data<pos:position pos:line="52" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">rprintf<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">FINFO<pos:position pos:line="53" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="53" pos:column="31">"Matched data: %.0f bytes\n"<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>,
			<argument><expr><operator pos:line="54" pos:column="25">(<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">double<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">)<pos:position pos:line="54" pos:column="33"/></operator><name><name pos:line="54" pos:column="33">stats<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">.<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">matched_data<pos:position pos:line="54" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">rprintf<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name pos:line="55" pos:column="25">FINFO<pos:position pos:line="55" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="55" pos:column="31">"File list size: %d\n"<pos:position pos:line="55" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="55">stats<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">.<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="61">flist_size<pos:position pos:line="55" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">rprintf<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">FINFO<pos:position pos:line="56" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="56" pos:column="31">"Total bytes written: %.0f\n"<pos:position pos:line="56" pos:column="60"/></literal></expr></argument>,
			<argument><expr><operator pos:line="57" pos:column="25">(<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">double<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">)<pos:position pos:line="57" pos:column="33"/></operator><name><name pos:line="57" pos:column="33">stats<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">.<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="39">total_written<pos:position pos:line="57" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">rprintf<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">FINFO<pos:position pos:line="58" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="31">"Total bytes read: %.0f\n"<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>,
			<argument><expr><operator pos:line="59" pos:column="25">(<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">double<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">)<pos:position pos:line="59" pos:column="33"/></operator><name><name pos:line="59" pos:column="33">stats<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">.<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="39">total_read<pos:position pos:line="59" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">verbose<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">||<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">do_stats<pos:position pos:line="62" pos:column="32"/></name></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33"> <block pos:line="62" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">rprintf<pos:position pos:line="63" pos:column="24"/></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name pos:line="63" pos:column="25">FINFO<pos:position pos:line="63" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="63" pos:column="31">"\nwrote %.0f bytes  read %.0f bytes  %.2f bytes/sec\n"<pos:position pos:line="63" pos:column="86"/></literal></expr></argument>,
			<argument><expr><operator pos:line="64" pos:column="25">(<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">double<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">)<pos:position pos:line="64" pos:column="33"/></operator><name><name pos:line="64" pos:column="33">stats<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">.<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="39">total_written<pos:position pos:line="64" pos:column="52"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="65" pos:column="25">(<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">double<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">)<pos:position pos:line="65" pos:column="33"/></operator><name><name pos:line="65" pos:column="33">stats<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">.<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="39">total_read<pos:position pos:line="65" pos:column="49"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="66" pos:column="25">(<pos:position pos:line="66" pos:column="26"/></operator><name><name pos:line="66" pos:column="26">stats<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">.<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">total_written<pos:position pos:line="66" pos:column="45"/></name></name><operator pos:line="66" pos:column="45">+<pos:position pos:line="66" pos:column="46"/></operator><name><name pos:line="66" pos:column="46">stats<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">.<pos:position pos:line="66" pos:column="52"/></operator><name pos:line="66" pos:column="52">total_read<pos:position pos:line="66" pos:column="62"/></name></name><operator pos:line="66" pos:column="62">)<pos:position pos:line="66" pos:column="63"/></operator><operator pos:line="66" pos:column="63">/<pos:position pos:line="66" pos:column="64"/></operator><operator pos:line="66" pos:column="64">(<pos:position pos:line="66" pos:column="65"/></operator><literal type="number" pos:line="66" pos:column="65">0.5<pos:position pos:line="66" pos:column="68"/></literal> <operator pos:line="66" pos:column="69">+<pos:position pos:line="66" pos:column="70"/></operator> <operator pos:line="66" pos:column="71">(<pos:position pos:line="66" pos:column="72"/></operator><name pos:line="66" pos:column="72">t<pos:position pos:line="66" pos:column="73"/></name><operator pos:line="66" pos:column="73">-<pos:position pos:line="66" pos:column="74"/></operator><name pos:line="66" pos:column="74">starttime<pos:position pos:line="66" pos:column="83"/></name><operator pos:line="66" pos:column="83">)<pos:position pos:line="66" pos:column="84"/></operator><operator pos:line="66" pos:column="84">)<pos:position pos:line="66" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="66" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="87"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">rprintf<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">FINFO<pos:position pos:line="67" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="67" pos:column="31">"total size is %.0f  speedup is %.2f\n"<pos:position pos:line="67" pos:column="70"/></literal></expr></argument>,
			<argument><expr><operator pos:line="68" pos:column="25">(<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">double<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">)<pos:position pos:line="68" pos:column="33"/></operator><name><name pos:line="68" pos:column="33">stats<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">.<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="39">total_size<pos:position pos:line="68" pos:column="49"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="69" pos:column="25">(<pos:position pos:line="69" pos:column="26"/></operator><literal type="number" pos:line="69" pos:column="26">1.0<pos:position pos:line="69" pos:column="29"/></literal><operator pos:line="69" pos:column="29">*<pos:position pos:line="69" pos:column="30"/></operator><name><name pos:line="69" pos:column="30">stats<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">.<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="36">total_size<pos:position pos:line="69" pos:column="46"/></name></name><operator pos:line="69" pos:column="46">)<pos:position pos:line="69" pos:column="47"/></operator><operator pos:line="69" pos:column="47">/<pos:position pos:line="69" pos:column="48"/></operator><operator pos:line="69" pos:column="48">(<pos:position pos:line="69" pos:column="49"/></operator><name><name pos:line="69" pos:column="49">stats<pos:position pos:line="69" pos:column="54"/></name><operator pos:line="69" pos:column="54">.<pos:position pos:line="69" pos:column="55"/></operator><name pos:line="69" pos:column="55">total_written<pos:position pos:line="69" pos:column="68"/></name></name><operator pos:line="69" pos:column="68">+<pos:position pos:line="69" pos:column="69"/></operator><name><name pos:line="69" pos:column="69">stats<pos:position pos:line="69" pos:column="74"/></name><operator pos:line="69" pos:column="74">.<pos:position pos:line="69" pos:column="75"/></operator><name pos:line="69" pos:column="75">total_read<pos:position pos:line="69" pos:column="85"/></name></name><operator pos:line="69" pos:column="85">)<pos:position pos:line="69" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="69" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="88"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="72" pos:column="9">fflush<pos:position pos:line="72" pos:column="15"/></name><argument_list pos:line="72" pos:column="15">(<argument><expr><name pos:line="72" pos:column="16">stdout<pos:position pos:line="72" pos:column="22"/></name></expr></argument>)<pos:position pos:line="72" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="73" pos:column="9">fflush<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">stderr<pos:position pos:line="73" pos:column="22"/></name></expr></argument>)<pos:position pos:line="73" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_736.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_exclude<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">exclude_struct<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier><modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">listp<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">pattern<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">include<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="83"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">exclude_struct<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">list<pos:position pos:line="3" pos:column="37"/></name> <init pos:line="3" pos:column="38">= <expr><operator pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></operator><name pos:line="3" pos:column="41">listp<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">pattern<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">==<pos:position pos:line="6" pos:column="24"/></operator> <literal type="char" pos:line="6" pos:column="25">'!'<pos:position pos:line="6" pos:column="28"/></literal> <operator pos:line="6" pos:column="29">&amp;&amp;<pos:position pos:line="6" pos:column="39"/></operator> <operator pos:line="6" pos:column="32">!<pos:position pos:line="6" pos:column="33"/></operator><name><name pos:line="6" pos:column="33">pattern<pos:position pos:line="6" pos:column="40"/></name><index pos:line="6" pos:column="40">[<expr><literal type="number" pos:line="6" pos:column="41">1<pos:position pos:line="6" pos:column="42"/></literal></expr>]<pos:position pos:line="6" pos:column="43"/></index></name></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44"> <block pos:line="6" pos:column="45">{
	    <expr_stmt><expr><call><name pos:line="7" pos:column="13">free_exclude_list<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">listp<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
	    <return pos:line="8" pos:column="13">return;<pos:position pos:line="8" pos:column="20"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">list<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
		<block type="pseudo"><for pos:line="12" pos:column="17">for <control pos:line="12" pos:column="21">(<init pos:line="12" pos:column="22">;<pos:position pos:line="12" pos:column="23"/></init> <condition><expr><name><name pos:line="12" pos:column="24">list<pos:position pos:line="12" pos:column="28"/></name><index pos:line="12" pos:column="28">[<expr><name pos:line="12" pos:column="29">len<pos:position pos:line="12" pos:column="32"/></name></expr>]<pos:position pos:line="12" pos:column="33"/></index></name></expr>;<pos:position pos:line="12" pos:column="34"/></condition> <incr><expr><name pos:line="12" pos:column="35">len<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">++<pos:position pos:line="12" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="41"/></control> <block pos:line="12" pos:column="42">{}<pos:position pos:line="12" pos:column="44"/></block></for></block></then></if>

 	<expr_stmt><expr><name pos:line="14" pos:column="9">list<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">listp<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <call><name pos:line="14" pos:column="25">realloc_array<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">list<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr pos:line="14" pos:column="45">struct <name pos:line="14" pos:column="52">exclude_struct<pos:position pos:line="14" pos:column="66"/></name> <operator pos:line="14" pos:column="67">*<pos:position pos:line="14" pos:column="68"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="70">len<pos:position pos:line="14" pos:column="73"/></name><operator pos:line="14" pos:column="73">+<pos:position pos:line="14" pos:column="74"/></operator><literal type="number" pos:line="14" pos:column="74">2<pos:position pos:line="14" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="77"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">list<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">||<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="22">!<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="24">list<pos:position pos:line="16" pos:column="28"/></name><index pos:line="16" pos:column="28">[<expr><name pos:line="16" pos:column="29">len<pos:position pos:line="16" pos:column="32"/></name></expr>]<pos:position pos:line="16" pos:column="33"/></index></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <call><name pos:line="16" pos:column="36">make_exclude<pos:position pos:line="16" pos:column="48"/></name><argument_list pos:line="16" pos:column="48">(<argument><expr><name pos:line="16" pos:column="49">pattern<pos:position pos:line="16" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">include<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call><operator pos:line="16" pos:column="66">)<pos:position pos:line="16" pos:column="67"/></operator></expr>)<pos:position pos:line="16" pos:column="68"/></condition><then pos:line="16" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">out_of_memory<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"add_exclude"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">verbose<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">&gt;<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="23">2<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">rprintf<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">FINFO<pos:position pos:line="20" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="20" pos:column="31">"add_exclude(%s,%s)\n"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>,<argument><expr><name pos:line="20" pos:column="54">pattern<pos:position pos:line="20" pos:column="61"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="21" pos:column="25">include<pos:position pos:line="21" pos:column="32"/></name></expr> ?<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <expr><literal type="string" pos:line="21" pos:column="35">"include"<pos:position pos:line="21" pos:column="44"/></literal></expr> <pos:position pos:line="21" pos:column="45"/></then><else pos:line="21" pos:column="45">: <expr><literal type="string" pos:line="21" pos:column="47">"exclude"<pos:position pos:line="21" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="24" pos:column="9">list<pos:position pos:line="24" pos:column="13"/></name><index pos:line="24" pos:column="13">[<expr><name pos:line="24" pos:column="14">len<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">+<pos:position pos:line="24" pos:column="18"/></operator><literal type="number" pos:line="24" pos:column="18">1<pos:position pos:line="24" pos:column="19"/></literal></expr>]<pos:position pos:line="24" pos:column="20"/></index></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">NULL<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

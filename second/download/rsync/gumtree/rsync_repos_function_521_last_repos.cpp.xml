<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_521_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">path_is_daemon_excluded<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">path<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">ignore_filename<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">daemon_filter_list<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">.<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="32">head<pos:position pos:line="3" pos:column="36"/></name></name></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37"> <block pos:line="3" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">slash<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">path<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

		<while pos:line="6" pos:column="17">while <condition pos:line="6" pos:column="23">(<expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">slash<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <call><name pos:line="6" pos:column="33">strchr<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">slash<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">+<pos:position pos:line="6" pos:column="46"/></operator><literal type="number" pos:line="6" pos:column="46">1<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="49">'/'<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call><operator pos:line="6" pos:column="53">)<pos:position pos:line="6" pos:column="54"/></operator> <operator pos:line="6" pos:column="55">!=<pos:position pos:line="6" pos:column="57"/></operator> <name pos:line="6" pos:column="58">NULL<pos:position pos:line="6" pos:column="62"/></name></expr>)<pos:position pos:line="6" pos:column="63"/></condition> <block pos:line="6" pos:column="64">{
			<decl_stmt><decl><type><name pos:line="7" pos:column="25">int<pos:position pos:line="7" pos:column="28"/></name></type> <name pos:line="7" pos:column="29">ret<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
			<expr_stmt><expr><operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">slash<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <literal type="char" pos:line="8" pos:column="34">'\0'<pos:position pos:line="8" pos:column="38"/></literal></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="9" pos:column="25">ret<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">check_filter<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><operator pos:line="9" pos:column="44">&amp;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="45">daemon_filter_list<pos:position pos:line="9" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="65">FLOG<pos:position pos:line="9" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="71">path<pos:position pos:line="9" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="77">1<pos:position pos:line="9" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">slash<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <literal type="char" pos:line="10" pos:column="34">'/'<pos:position pos:line="10" pos:column="37"/></literal></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name pos:line="11" pos:column="29">ret<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">&lt;<pos:position pos:line="11" pos:column="37"/></operator> <literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
				<expr_stmt><expr><name pos:line="12" pos:column="33">errno<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">=<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">ENOENT<pos:position pos:line="12" pos:column="47"/></name></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
				<return pos:line="13" pos:column="33">return <expr><literal type="number" pos:line="13" pos:column="40">1<pos:position pos:line="13" pos:column="41"/></literal></expr>;<pos:position pos:line="13" pos:column="42"/></return>
			}<pos:position pos:line="14" pos:column="26"/></block></then></if>
		}<pos:position pos:line="15" pos:column="18"/></block></while>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">ignore_filename<pos:position pos:line="17" pos:column="37"/></name>
		 <operator pos:line="18" pos:column="18">&amp;&amp;<pos:position pos:line="18" pos:column="28"/></operator> <call><name pos:line="18" pos:column="21">check_filter<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><operator pos:line="18" pos:column="34">&amp;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="35">daemon_filter_list<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">FLOG<pos:position pos:line="18" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">path<pos:position pos:line="18" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="67">1<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call> <operator pos:line="18" pos:column="70">&lt;<pos:position pos:line="18" pos:column="74"/></operator> <literal type="number" pos:line="18" pos:column="72">0<pos:position pos:line="18" pos:column="73"/></literal></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74"> <block pos:line="18" pos:column="75">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">errno<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">ENOENT<pos:position pos:line="19" pos:column="39"/></name></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
			<return pos:line="20" pos:column="25">return <expr><literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal></expr>;<pos:position pos:line="20" pos:column="34"/></return>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

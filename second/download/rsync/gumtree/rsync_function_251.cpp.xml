<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_251.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">map_struct<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">map_file<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">fd<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="36">off_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">len<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">map_struct<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">ret<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">ret<pos:position pos:line="4" pos:column="6"/></name> <operator pos:line="4" pos:column="7">=<pos:position pos:line="4" pos:column="8"/></operator> <operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator>struct <name pos:line="4" pos:column="17">map_struct<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><operator pos:line="4" pos:column="29">)<pos:position pos:line="4" pos:column="30"/></operator><call><name pos:line="4" pos:column="30">malloc<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><sizeof pos:line="4" pos:column="37">sizeof<argument_list pos:line="4" pos:column="43">(<argument><expr><operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">ret<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">ret<pos:position pos:line="5" pos:column="11"/></name></expr>)<pos:position pos:line="5" pos:column="12"/></condition><then pos:line="5" pos:column="12"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="13">out_of_memory<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><literal type="string" pos:line="5" pos:column="27">"map_file"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">ret<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">map<pos:position pos:line="7" pos:column="11"/></name></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">ret<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">fd<pos:position pos:line="8" pos:column="10"/></name></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">fd<pos:position pos:line="8" pos:column="15"/></name></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">ret<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">size<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">len<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">ret<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">p<pos:position pos:line="10" pos:column="9"/></name></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">ret<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">p_size<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">ret<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">p_offset<pos:position pos:line="12" pos:column="16"/></name></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">ret<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">p_len<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">HAVE_MMAP<pos:position pos:line="15" pos:column="17"/></name></cpp:ifdef>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">len<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">&lt;<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="13">MAX_MAP_SIZE<pos:position pos:line="16" pos:column="25"/></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="5">ret<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">map<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">char<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator><call><name pos:line="17" pos:column="24">mmap<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">NULL<pos:position pos:line="17" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="34">len<pos:position pos:line="17" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="38">PROT_READ<pos:position pos:line="17" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="48">MAP_SHARED<pos:position pos:line="17" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="59">fd<pos:position pos:line="17" pos:column="61"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="62">0<pos:position pos:line="17" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">ret<pos:position pos:line="19" pos:column="13"/></name></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

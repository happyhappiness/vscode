<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_257_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">successful_send<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">ndx<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">fname<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[<expr><name pos:line="3" pos:column="20">MAXPATHLEN<pos:position pos:line="3" pos:column="30"/></name></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">failed_op<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">file_struct<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">file<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">file_list<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">flist<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">STRUCT_STAT<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">remove_source_files<pos:position pos:line="9" pos:column="33"/></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
		<block type="pseudo"><return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">flist<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">flist_for_ndx<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">ndx<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="36">"successful_send"<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">file<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">flist<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">files<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><name pos:line="13" pos:column="29">ndx<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">-<pos:position pos:line="13" pos:column="34"/></operator> <name><name pos:line="13" pos:column="35">flist<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">ndx_start<pos:position pos:line="13" pos:column="51"/></name></name></expr>]<pos:position pos:line="13" pos:column="52"/></index></name></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">change_pathname<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">file<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">NULL<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="45"/></condition><then pos:line="14" pos:column="45">
		<block type="pseudo"><return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">f_name<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">file<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">fname<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">do_lstat<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">fname<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="29">&amp;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="30">st<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call> <operator pos:line="18" pos:column="34">&lt;<pos:position pos:line="18" pos:column="38"/></operator> <literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">failed_op<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="string" pos:line="19" pos:column="29">"re-lstat"<pos:position pos:line="19" pos:column="39"/></literal></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
		<goto pos:line="20" pos:column="17">goto <name pos:line="20" pos:column="22">failed<pos:position pos:line="20" pos:column="28"/></name>;<pos:position pos:line="20" pos:column="29"/></goto>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">S_ISREG<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name><name pos:line="23" pos:column="21">file<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">mode<pos:position pos:line="23" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call> <comment type="block" pos:line="23" pos:column="33">/* Symlinks &amp; devices don't need this check: */</comment>
	 <operator pos:line="24" pos:column="10">&amp;&amp;<pos:position pos:line="24" pos:column="20"/></operator> <operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">st<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">.<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">st_size<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">!=<pos:position pos:line="24" pos:column="27"/></operator> <call><name pos:line="24" pos:column="28">F_LENGTH<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">file<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call> <operator pos:line="24" pos:column="43">||<pos:position pos:line="24" pos:column="45"/></operator> <name><name pos:line="24" pos:column="46">st<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">.<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">st_mtime<pos:position pos:line="24" pos:column="57"/></name></name> <operator pos:line="24" pos:column="58">!=<pos:position pos:line="24" pos:column="60"/></operator> <name><name pos:line="24" pos:column="61">file<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">-&gt;<pos:position pos:line="24" pos:column="70"/></operator><name pos:line="24" pos:column="67">modtime<pos:position pos:line="24" pos:column="74"/></name></name>
<cpp:ifdef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifdef<pos:position pos:line="25" pos:column="7"/></cpp:directive> <name pos:line="25" pos:column="8">ST_MTIME_NSEC<pos:position pos:line="25" pos:column="21"/></name></cpp:ifdef>
	 <operator pos:line="26" pos:column="10">||<pos:position pos:line="26" pos:column="12"/></operator> <operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><call><name pos:line="26" pos:column="14">NSEC_BUMP<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">file<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call> <operator pos:line="26" pos:column="30">&amp;&amp;<pos:position pos:line="26" pos:column="40"/></operator> <operator pos:line="26" pos:column="33">(<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">uint32<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">)<pos:position pos:line="26" pos:column="41"/></operator><name><name pos:line="26" pos:column="41">st<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">.<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">ST_MTIME_NSEC<pos:position pos:line="26" pos:column="57"/></name></name> <operator pos:line="26" pos:column="58">!=<pos:position pos:line="26" pos:column="60"/></operator> <call><name pos:line="26" pos:column="61">F_MOD_NSEC<pos:position pos:line="26" pos:column="71"/></name><argument_list pos:line="26" pos:column="71">(<argument><expr><name pos:line="26" pos:column="72">file<pos:position pos:line="26" pos:column="76"/></name></expr></argument>)<pos:position pos:line="26" pos:column="77"/></argument_list></call><operator pos:line="26" pos:column="77">)<pos:position pos:line="26" pos:column="78"/></operator>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
	<operator pos:line="28" pos:column="9">)<pos:position pos:line="28" pos:column="10"/></operator></expr>)<pos:position pos:line="28" pos:column="11"/></condition><then pos:line="28" pos:column="11"> <block pos:line="28" pos:column="12">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">rprintf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">FERROR_XFER<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="38">"ERROR: Skipping sender remove for changed file: %s\n"<pos:position pos:line="29" pos:column="92"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="94">fname<pos:position pos:line="29" pos:column="99"/></name></expr></argument>)<pos:position pos:line="29" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="101"/></expr_stmt>
		<return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">do_unlink<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">fname<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call> <operator pos:line="33" pos:column="30">&lt;<pos:position pos:line="33" pos:column="34"/></operator> <literal type="number" pos:line="33" pos:column="32">0<pos:position pos:line="33" pos:column="33"/></literal></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34"> <block pos:line="33" pos:column="35">{
		<expr_stmt><expr><name pos:line="34" pos:column="17">failed_op<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <literal type="string" pos:line="34" pos:column="29">"remove"<pos:position pos:line="34" pos:column="37"/></literal></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
	  <label><name pos:line="35" pos:column="11">failed<pos:position pos:line="35" pos:column="17"/></name>:<pos:position pos:line="35" pos:column="18"/></label>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">errno<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">==<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">ENOENT<pos:position pos:line="36" pos:column="36"/></name></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">rprintf<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">FINFO<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="40">"sender file already removed: %s\n"<pos:position pos:line="37" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="77">fname<pos:position pos:line="37" pos:column="82"/></name></expr></argument>)<pos:position pos:line="37" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="84"/></expr_stmt></block></then>
		<else pos:line="38" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">rsyserr<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">FERROR_XFER<pos:position pos:line="39" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="46">errno<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="53">"sender failed to %s %s"<pos:position pos:line="39" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="79">failed_op<pos:position pos:line="39" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="90">fname<pos:position pos:line="39" pos:column="95"/></name></expr></argument>)<pos:position pos:line="39" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="97"/></expr_stmt></block></else></if>
	}<pos:position pos:line="40" pos:column="10"/></block></then> <else pos:line="40" pos:column="11">else <block pos:line="40" pos:column="16">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">INFO_GTE<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">REMOVE<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="38">1<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="41"/></condition><then pos:line="41" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="25">rprintf<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">FINFO<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="40">"sender removed %s\n"<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="63">fname<pos:position pos:line="42" pos:column="68"/></name></expr></argument>)<pos:position pos:line="42" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="70"/></expr_stmt></block></then></if>
	}<pos:position pos:line="43" pos:column="10"/></block></else></if>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

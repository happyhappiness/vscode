<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_742_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">do_big_num<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int64<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">num<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">human_flag<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">fract<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">bufs<pos:position pos:line="3" pos:column="25"/></name><index pos:line="3" pos:column="25">[<expr><literal type="number" pos:line="3" pos:column="26">4<pos:position pos:line="3" pos:column="27"/></literal></expr>]<pos:position pos:line="3" pos:column="28"/></index><index pos:line="3" pos:column="28">[<expr><literal type="number" pos:line="3" pos:column="29">128<pos:position pos:line="3" pos:column="32"/></literal></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt> <comment type="block" pos:line="3" pos:column="35">/* more than enough room */</comment>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">unsigned<pos:position pos:line="4" pos:column="24"/></name> <name pos:line="4" pos:column="25">int<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">n<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">s<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">negated<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">human_flag<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">&amp;&amp;<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="27">!<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">number_separator<pos:position pos:line="8" pos:column="44"/></name></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <block pos:line="8" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name></type> <name><name pos:line="9" pos:column="22">buf<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><literal type="number" pos:line="9" pos:column="26">32<pos:position pos:line="9" pos:column="28"/></literal></expr>]<pos:position pos:line="9" pos:column="29"/></index></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">snprintf<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">buf<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="31">sizeof <name pos:line="10" pos:column="38">buf<pos:position pos:line="10" pos:column="41"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="43">"%f"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="49">3.14<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">strchr<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">buf<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="33">'.'<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call> <operator pos:line="11" pos:column="38">!=<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="41">NULL<pos:position pos:line="11" pos:column="45"/></name></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">number_separator<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">=<pos:position pos:line="12" pos:column="43"/></operator> <literal type="char" pos:line="12" pos:column="44">','<pos:position pos:line="12" pos:column="47"/></literal></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then>
		<else pos:line="13" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">number_separator<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">=<pos:position pos:line="14" pos:column="43"/></operator> <literal type="char" pos:line="14" pos:column="44">'.'<pos:position pos:line="14" pos:column="47"/></literal></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt></block></else></if>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">n<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">n<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">+<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">1<pos:position pos:line="17" pos:column="19"/></literal><operator pos:line="17" pos:column="19">)<pos:position pos:line="17" pos:column="20"/></operator> <operator pos:line="17" pos:column="21">%<pos:position pos:line="17" pos:column="22"/></operator> <operator pos:line="17" pos:column="23">(<pos:position pos:line="17" pos:column="24"/></operator><sizeof pos:line="17" pos:column="24">sizeof <name pos:line="17" pos:column="31">bufs<pos:position pos:line="17" pos:column="35"/></name></sizeof> <operator pos:line="17" pos:column="36">/<pos:position pos:line="17" pos:column="37"/></operator> <sizeof pos:line="17" pos:column="38">sizeof <name><name pos:line="17" pos:column="45">bufs<pos:position pos:line="17" pos:column="49"/></name><index pos:line="17" pos:column="49">[<expr><literal type="number" pos:line="17" pos:column="50">0<pos:position pos:line="17" pos:column="51"/></literal></expr>]<pos:position pos:line="17" pos:column="52"/></index></name></sizeof><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">human_flag<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&gt;<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="26">1<pos:position pos:line="19" pos:column="27"/></literal></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">human_flag<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">==<pos:position pos:line="20" pos:column="34"/></operator> <literal type="number" pos:line="20" pos:column="35">2<pos:position pos:line="20" pos:column="36"/></literal></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">HUMANIFY<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><literal type="number" pos:line="21" pos:column="34">1000<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then>
		<else pos:line="22" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">HUMANIFY<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><literal type="number" pos:line="23" pos:column="34">1024<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">s<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <name><name pos:line="26" pos:column="13">bufs<pos:position pos:line="26" pos:column="17"/></name><index pos:line="26" pos:column="17">[<expr><name pos:line="26" pos:column="18">n<pos:position pos:line="26" pos:column="19"/></name></expr>]<pos:position pos:line="26" pos:column="20"/></index></name> <operator pos:line="26" pos:column="21">+<pos:position pos:line="26" pos:column="22"/></operator> <sizeof pos:line="26" pos:column="23">sizeof <name><name pos:line="26" pos:column="30">bufs<pos:position pos:line="26" pos:column="34"/></name><index pos:line="26" pos:column="34">[<expr><literal type="number" pos:line="26" pos:column="35">0<pos:position pos:line="26" pos:column="36"/></literal></expr>]<pos:position pos:line="26" pos:column="37"/></index></name></sizeof> <operator pos:line="26" pos:column="38">-<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="40">1<pos:position pos:line="26" pos:column="41"/></literal></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">fract<pos:position pos:line="27" pos:column="18"/></name></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">strlen<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">fract<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">s<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">-=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">len<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">strlcpy<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">s<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="28">fract<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">len<pos:position pos:line="30" pos:column="38"/></name> <operator pos:line="30" pos:column="39">+<pos:position pos:line="30" pos:column="40"/></operator> <literal type="number" pos:line="30" pos:column="41">1<pos:position pos:line="30" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then> <else pos:line="31" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="32" pos:column="17">*<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">s<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="char" pos:line="32" pos:column="22">'\0'<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="34" pos:column="9">len<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <literal type="number" pos:line="34" pos:column="15">0<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">num<pos:position pos:line="36" pos:column="17"/></name></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="17">*<pos:position pos:line="37" pos:column="18"/></operator><operator pos:line="37" pos:column="18">--<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">s<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <literal type="char" pos:line="37" pos:column="24">'0'<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">num<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">&lt;<pos:position pos:line="38" pos:column="21"/></operator> <literal type="number" pos:line="38" pos:column="19">0<pos:position pos:line="38" pos:column="20"/></literal></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21"> <block pos:line="38" pos:column="22">{
		<comment type="block" pos:line="39" pos:column="17">/* A maximum-size negated number can't fit as a positive,
		 * so do one digit in negated form to start us off. */</comment>
		<expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><operator pos:line="41" pos:column="18">--<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">s<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <call pos:line="41" pos:column="24">(<name pos:line="41" pos:column="25">char<pos:position pos:line="41" pos:column="29"/></name>)<argument_list pos:line="41" pos:column="30">(<argument><expr><operator pos:line="41" pos:column="31">-<pos:position pos:line="41" pos:column="32"/></operator><operator pos:line="41" pos:column="32">(<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">num<pos:position pos:line="41" pos:column="36"/></name> <operator pos:line="41" pos:column="37">%<pos:position pos:line="41" pos:column="38"/></operator> <literal type="number" pos:line="41" pos:column="39">10<pos:position pos:line="41" pos:column="41"/></literal><operator pos:line="41" pos:column="41">)<pos:position pos:line="41" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call> <operator pos:line="41" pos:column="44">+<pos:position pos:line="41" pos:column="45"/></operator> <literal type="char" pos:line="41" pos:column="46">'0'<pos:position pos:line="41" pos:column="49"/></literal></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">num<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <operator pos:line="42" pos:column="23">-<pos:position pos:line="42" pos:column="24"/></operator><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">num<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">/<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="31">10<pos:position pos:line="42" pos:column="33"/></literal><operator pos:line="42" pos:column="33">)<pos:position pos:line="42" pos:column="34"/></operator></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">len<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">++<pos:position pos:line="43" pos:column="22"/></operator></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">negated<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="27">1<pos:position pos:line="44" pos:column="28"/></literal></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then> <else pos:line="45" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="17">negated<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <literal type="number" pos:line="46" pos:column="27">0<pos:position pos:line="46" pos:column="28"/></literal></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt></block></else></if>

	<while pos:line="48" pos:column="9">while <condition pos:line="48" pos:column="15">(<expr><name pos:line="48" pos:column="16">num<pos:position pos:line="48" pos:column="19"/></name></expr>)<pos:position pos:line="48" pos:column="20"/></condition> <block pos:line="48" pos:column="21">{
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">human_flag<pos:position pos:line="49" pos:column="31"/></name></expr>)<pos:position pos:line="49" pos:column="32"/></condition><then pos:line="49" pos:column="32"> <block pos:line="49" pos:column="33">{
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">len<pos:position pos:line="50" pos:column="32"/></name> <operator pos:line="50" pos:column="33">==<pos:position pos:line="50" pos:column="35"/></operator> <literal type="number" pos:line="50" pos:column="36">3<pos:position pos:line="50" pos:column="37"/></literal></expr>)<pos:position pos:line="50" pos:column="38"/></condition><then pos:line="50" pos:column="38"> <block pos:line="50" pos:column="39">{
				<expr_stmt><expr><operator pos:line="51" pos:column="33">*<pos:position pos:line="51" pos:column="34"/></operator><operator pos:line="51" pos:column="34">--<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">s<pos:position pos:line="51" pos:column="37"/></name> <operator pos:line="51" pos:column="38">=<pos:position pos:line="51" pos:column="39"/></operator> <name pos:line="51" pos:column="40">number_separator<pos:position pos:line="51" pos:column="56"/></name></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><name pos:line="52" pos:column="33">len<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">=<pos:position pos:line="52" pos:column="38"/></operator> <literal type="number" pos:line="52" pos:column="39">1<pos:position pos:line="52" pos:column="40"/></literal></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
			}<pos:position pos:line="53" pos:column="26"/></block></then> <else pos:line="53" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="33">len<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">++<pos:position pos:line="54" pos:column="38"/></operator></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt></block></else></if>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="56" pos:column="17">*<pos:position pos:line="56" pos:column="18"/></operator><operator pos:line="56" pos:column="18">--<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">s<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <call pos:line="56" pos:column="24">(<name pos:line="56" pos:column="25">char<pos:position pos:line="56" pos:column="29"/></name>)<argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">num<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">%<pos:position pos:line="56" pos:column="36"/></operator> <literal type="number" pos:line="56" pos:column="37">10<pos:position pos:line="56" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call> <operator pos:line="56" pos:column="41">+<pos:position pos:line="56" pos:column="42"/></operator> <literal type="char" pos:line="56" pos:column="43">'0'<pos:position pos:line="56" pos:column="46"/></literal></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="57" pos:column="17">num<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">/=<pos:position pos:line="57" pos:column="23"/></operator> <literal type="number" pos:line="57" pos:column="24">10<pos:position pos:line="57" pos:column="26"/></literal></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></while>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">negated<pos:position pos:line="60" pos:column="20"/></name></expr>)<pos:position pos:line="60" pos:column="21"/></condition><then pos:line="60" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="61" pos:column="17">*<pos:position pos:line="61" pos:column="18"/></operator><operator pos:line="61" pos:column="18">--<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">s<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <literal type="char" pos:line="61" pos:column="24">'-'<pos:position pos:line="61" pos:column="27"/></literal></expr>;<pos:position pos:line="61" pos:column="28"/></expr_stmt></block></then></if>

	<return pos:line="63" pos:column="9">return <expr><name pos:line="63" pos:column="16">s<pos:position pos:line="63" pos:column="17"/></name></expr>;<pos:position pos:line="63" pos:column="18"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

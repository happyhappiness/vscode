<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_633_rsync-3.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">size_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">dopr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">buffer<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">size_t<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">maxlen<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">format<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">va_list<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">args_in<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">ch<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">LLONG<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">value<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">LDOUBLE<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">fvalue<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">strvalue<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">min<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">max<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">state<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">flags<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">cflags<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">size_t<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">currlen<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">va_list<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">args<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">VA_COPY<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">args<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">args_in<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	
	<expr_stmt><expr><name pos:line="17" pos:column="9">state<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">DP_S_DEFAULT<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">currlen<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">flags<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">cflags<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">=<pos:position pos:line="18" pos:column="35"/></operator> <name pos:line="18" pos:column="36">min<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">=<pos:position pos:line="18" pos:column="41"/></operator> <literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">max<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <operator pos:line="19" pos:column="15">-<pos:position pos:line="19" pos:column="16"/></operator><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">ch<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <operator pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">format<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">++<pos:position pos:line="20" pos:column="23"/></operator></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
	
	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><name pos:line="22" pos:column="16">state<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">!=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">DP_S_DONE<pos:position pos:line="22" pos:column="34"/></name></expr>)<pos:position pos:line="22" pos:column="35"/></condition> <block pos:line="22" pos:column="36">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">ch<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">==<pos:position pos:line="23" pos:column="26"/></operator> <literal type="char" pos:line="23" pos:column="27">'\0'<pos:position pos:line="23" pos:column="31"/></literal></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32"> 
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">state<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="33">DP_S_DONE<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt></block></then></if>

		<switch pos:line="26" pos:column="17">switch<condition pos:line="26" pos:column="23">(<expr><name pos:line="26" pos:column="24">state<pos:position pos:line="26" pos:column="29"/></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition> <block pos:line="26" pos:column="31">{
		<case pos:line="27" pos:column="17">case <expr><name pos:line="27" pos:column="22">DP_S_DEFAULT<pos:position pos:line="27" pos:column="34"/></name></expr>:<pos:position pos:line="27" pos:column="35"/></case>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><name pos:line="28" pos:column="29">ch<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <literal type="char" pos:line="28" pos:column="35">'%'<pos:position pos:line="28" pos:column="38"/></literal></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> 
				<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="33">state<pos:position pos:line="29" pos:column="38"/></name> <operator pos:line="29" pos:column="39">=<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="41">DP_S_FLAGS<pos:position pos:line="29" pos:column="51"/></name></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt></block></then>
			<else pos:line="30" pos:column="25">else 
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="33">dopr_outch<pos:position pos:line="31" pos:column="43"/></name> <argument_list pos:line="31" pos:column="44">(<argument><expr><name pos:line="31" pos:column="45">buffer<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="53">&amp;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="54">currlen<pos:position pos:line="31" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="63">maxlen<pos:position pos:line="31" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="71">ch<pos:position pos:line="31" pos:column="73"/></name></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="32" pos:column="25">ch<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <operator pos:line="32" pos:column="30">*<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">format<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">++<pos:position pos:line="32" pos:column="39"/></operator></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
			<break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break>
		<case pos:line="34" pos:column="17">case <expr><name pos:line="34" pos:column="22">DP_S_FLAGS<pos:position pos:line="34" pos:column="32"/></name></expr>:<pos:position pos:line="34" pos:column="33"/></case>
			<switch pos:line="35" pos:column="25">switch <condition pos:line="35" pos:column="32">(<expr><name pos:line="35" pos:column="33">ch<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition> <block pos:line="35" pos:column="37">{
			<case pos:line="36" pos:column="25">case <expr><literal type="char" pos:line="36" pos:column="30">'-'<pos:position pos:line="36" pos:column="33"/></literal></expr>:<pos:position pos:line="36" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="37" pos:column="33">flags<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">|=<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="42">DP_F_MINUS<pos:position pos:line="37" pos:column="52"/></name></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="38" pos:column="33">ch<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">=<pos:position pos:line="38" pos:column="37"/></operator> <operator pos:line="38" pos:column="38">*<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">format<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">++<pos:position pos:line="38" pos:column="47"/></operator></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
				<break pos:line="39" pos:column="33">break;<pos:position pos:line="39" pos:column="39"/></break>
			<case pos:line="40" pos:column="25">case <expr><literal type="char" pos:line="40" pos:column="30">'+'<pos:position pos:line="40" pos:column="33"/></literal></expr>:<pos:position pos:line="40" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="41" pos:column="33">flags<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">|=<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">DP_F_PLUS<pos:position pos:line="41" pos:column="51"/></name></expr>;<pos:position pos:line="41" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="42" pos:column="33">ch<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <operator pos:line="42" pos:column="38">*<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">format<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">++<pos:position pos:line="42" pos:column="47"/></operator></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
				<break pos:line="43" pos:column="33">break;<pos:position pos:line="43" pos:column="39"/></break>
			<case pos:line="44" pos:column="25">case <expr><literal type="char" pos:line="44" pos:column="30">' '<pos:position pos:line="44" pos:column="33"/></literal></expr>:<pos:position pos:line="44" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="45" pos:column="33">flags<pos:position pos:line="45" pos:column="38"/></name> <operator pos:line="45" pos:column="39">|=<pos:position pos:line="45" pos:column="41"/></operator> <name pos:line="45" pos:column="42">DP_F_SPACE<pos:position pos:line="45" pos:column="52"/></name></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="46" pos:column="33">ch<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">=<pos:position pos:line="46" pos:column="37"/></operator> <operator pos:line="46" pos:column="38">*<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">format<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">++<pos:position pos:line="46" pos:column="47"/></operator></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>
				<break pos:line="47" pos:column="33">break;<pos:position pos:line="47" pos:column="39"/></break>
			<case pos:line="48" pos:column="25">case <expr><literal type="char" pos:line="48" pos:column="30">'#'<pos:position pos:line="48" pos:column="33"/></literal></expr>:<pos:position pos:line="48" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="49" pos:column="33">flags<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">|=<pos:position pos:line="49" pos:column="41"/></operator> <name pos:line="49" pos:column="42">DP_F_NUM<pos:position pos:line="49" pos:column="50"/></name></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name pos:line="50" pos:column="33">ch<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <operator pos:line="50" pos:column="38">*<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">format<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">++<pos:position pos:line="50" pos:column="47"/></operator></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
				<break pos:line="51" pos:column="33">break;<pos:position pos:line="51" pos:column="39"/></break>
			<case pos:line="52" pos:column="25">case <expr><literal type="char" pos:line="52" pos:column="30">'0'<pos:position pos:line="52" pos:column="33"/></literal></expr>:<pos:position pos:line="52" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="53" pos:column="33">flags<pos:position pos:line="53" pos:column="38"/></name> <operator pos:line="53" pos:column="39">|=<pos:position pos:line="53" pos:column="41"/></operator> <name pos:line="53" pos:column="42">DP_F_ZERO<pos:position pos:line="53" pos:column="51"/></name></expr>;<pos:position pos:line="53" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="54" pos:column="33">ch<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">=<pos:position pos:line="54" pos:column="37"/></operator> <operator pos:line="54" pos:column="38">*<pos:position pos:line="54" pos:column="39"/></operator><name pos:line="54" pos:column="39">format<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">++<pos:position pos:line="54" pos:column="47"/></operator></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
				<break pos:line="55" pos:column="33">break;<pos:position pos:line="55" pos:column="39"/></break>
			<default pos:line="56" pos:column="25">default:<pos:position pos:line="56" pos:column="33"/></default>
				<expr_stmt><expr><name pos:line="57" pos:column="33">state<pos:position pos:line="57" pos:column="38"/></name> <operator pos:line="57" pos:column="39">=<pos:position pos:line="57" pos:column="40"/></operator> <name pos:line="57" pos:column="41">DP_S_MIN<pos:position pos:line="57" pos:column="49"/></name></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
				<break pos:line="58" pos:column="33">break;<pos:position pos:line="58" pos:column="39"/></break>
			}<pos:position pos:line="59" pos:column="26"/></block></switch>
			<break pos:line="60" pos:column="25">break;<pos:position pos:line="60" pos:column="31"/></break>
		<case pos:line="61" pos:column="17">case <expr><name pos:line="61" pos:column="22">DP_S_MIN<pos:position pos:line="61" pos:column="30"/></name></expr>:<pos:position pos:line="61" pos:column="31"/></case>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><call><name pos:line="62" pos:column="29">isdigit<pos:position pos:line="62" pos:column="36"/></name><argument_list pos:line="62" pos:column="36">(<argument><expr><operator pos:line="62" pos:column="37">(<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="38">unsigned<pos:position pos:line="62" pos:column="46"/></name> <name pos:line="62" pos:column="47">char<pos:position pos:line="62" pos:column="51"/></name><operator pos:line="62" pos:column="51">)<pos:position pos:line="62" pos:column="52"/></operator><name pos:line="62" pos:column="52">ch<pos:position pos:line="62" pos:column="54"/></name></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="56"/></condition><then pos:line="62" pos:column="56"> <block pos:line="62" pos:column="57">{
				<expr_stmt><expr><name pos:line="63" pos:column="33">min<pos:position pos:line="63" pos:column="36"/></name> <operator pos:line="63" pos:column="37">=<pos:position pos:line="63" pos:column="38"/></operator> <literal type="number" pos:line="63" pos:column="39">10<pos:position pos:line="63" pos:column="41"/></literal><operator pos:line="63" pos:column="41">*<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">min<pos:position pos:line="63" pos:column="45"/></name> <operator pos:line="63" pos:column="46">+<pos:position pos:line="63" pos:column="47"/></operator> <call><name pos:line="63" pos:column="48">char_to_int<pos:position pos:line="63" pos:column="59"/></name> <argument_list pos:line="63" pos:column="60">(<argument><expr><name pos:line="63" pos:column="61">ch<pos:position pos:line="63" pos:column="63"/></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name pos:line="64" pos:column="33">ch<pos:position pos:line="64" pos:column="35"/></name> <operator pos:line="64" pos:column="36">=<pos:position pos:line="64" pos:column="37"/></operator> <operator pos:line="64" pos:column="38">*<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="39">format<pos:position pos:line="64" pos:column="45"/></name><operator pos:line="64" pos:column="45">++<pos:position pos:line="64" pos:column="47"/></operator></expr>;<pos:position pos:line="64" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="65" pos:column="26"/></block></then> <elseif pos:line="65" pos:column="27">else <if pos:line="65" pos:column="32">if <condition pos:line="65" pos:column="35">(<expr><name pos:line="65" pos:column="36">ch<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">==<pos:position pos:line="65" pos:column="41"/></operator> <literal type="char" pos:line="65" pos:column="42">'*'<pos:position pos:line="65" pos:column="45"/></literal></expr>)<pos:position pos:line="65" pos:column="46"/></condition><then pos:line="65" pos:column="46"> <block pos:line="65" pos:column="47">{
				<expr_stmt><expr><name pos:line="66" pos:column="33">min<pos:position pos:line="66" pos:column="36"/></name> <operator pos:line="66" pos:column="37">=<pos:position pos:line="66" pos:column="38"/></operator> <call><name pos:line="66" pos:column="39">va_arg<pos:position pos:line="66" pos:column="45"/></name> <argument_list pos:line="66" pos:column="46">(<argument><expr><name pos:line="66" pos:column="47">args<pos:position pos:line="66" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="53">int<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="67" pos:column="33">ch<pos:position pos:line="67" pos:column="35"/></name> <operator pos:line="67" pos:column="36">=<pos:position pos:line="67" pos:column="37"/></operator> <operator pos:line="67" pos:column="38">*<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="39">format<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">++<pos:position pos:line="67" pos:column="47"/></operator></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="68" pos:column="33">state<pos:position pos:line="68" pos:column="38"/></name> <operator pos:line="68" pos:column="39">=<pos:position pos:line="68" pos:column="40"/></operator> <name pos:line="68" pos:column="41">DP_S_DOT<pos:position pos:line="68" pos:column="49"/></name></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="69" pos:column="26"/></block></then></if></elseif> <else pos:line="69" pos:column="27">else <block pos:line="69" pos:column="32">{
				<expr_stmt><expr><name pos:line="70" pos:column="33">state<pos:position pos:line="70" pos:column="38"/></name> <operator pos:line="70" pos:column="39">=<pos:position pos:line="70" pos:column="40"/></operator> <name pos:line="70" pos:column="41">DP_S_DOT<pos:position pos:line="70" pos:column="49"/></name></expr>;<pos:position pos:line="70" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="71" pos:column="26"/></block></else></if>
			<break pos:line="72" pos:column="25">break;<pos:position pos:line="72" pos:column="31"/></break>
		<case pos:line="73" pos:column="17">case <expr><name pos:line="73" pos:column="22">DP_S_DOT<pos:position pos:line="73" pos:column="30"/></name></expr>:<pos:position pos:line="73" pos:column="31"/></case>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name pos:line="74" pos:column="29">ch<pos:position pos:line="74" pos:column="31"/></name> <operator pos:line="74" pos:column="32">==<pos:position pos:line="74" pos:column="34"/></operator> <literal type="char" pos:line="74" pos:column="35">'.'<pos:position pos:line="74" pos:column="38"/></literal></expr>)<pos:position pos:line="74" pos:column="39"/></condition><then pos:line="74" pos:column="39"> <block pos:line="74" pos:column="40">{
				<expr_stmt><expr><name pos:line="75" pos:column="33">state<pos:position pos:line="75" pos:column="38"/></name> <operator pos:line="75" pos:column="39">=<pos:position pos:line="75" pos:column="40"/></operator> <name pos:line="75" pos:column="41">DP_S_MAX<pos:position pos:line="75" pos:column="49"/></name></expr>;<pos:position pos:line="75" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="76" pos:column="33">ch<pos:position pos:line="76" pos:column="35"/></name> <operator pos:line="76" pos:column="36">=<pos:position pos:line="76" pos:column="37"/></operator> <operator pos:line="76" pos:column="38">*<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="39">format<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">++<pos:position pos:line="76" pos:column="47"/></operator></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="77" pos:column="26"/></block></then> <else pos:line="77" pos:column="27">else <block pos:line="77" pos:column="32">{ 
				<expr_stmt><expr><name pos:line="78" pos:column="33">state<pos:position pos:line="78" pos:column="38"/></name> <operator pos:line="78" pos:column="39">=<pos:position pos:line="78" pos:column="40"/></operator> <name pos:line="78" pos:column="41">DP_S_MOD<pos:position pos:line="78" pos:column="49"/></name></expr>;<pos:position pos:line="78" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="79" pos:column="26"/></block></else></if>
			<break pos:line="80" pos:column="25">break;<pos:position pos:line="80" pos:column="31"/></break>
		<case pos:line="81" pos:column="17">case <expr><name pos:line="81" pos:column="22">DP_S_MAX<pos:position pos:line="81" pos:column="30"/></name></expr>:<pos:position pos:line="81" pos:column="31"/></case>
			<if pos:line="82" pos:column="25">if <condition pos:line="82" pos:column="28">(<expr><call><name pos:line="82" pos:column="29">isdigit<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><operator pos:line="82" pos:column="37">(<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="38">unsigned<pos:position pos:line="82" pos:column="46"/></name> <name pos:line="82" pos:column="47">char<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">)<pos:position pos:line="82" pos:column="52"/></operator><name pos:line="82" pos:column="52">ch<pos:position pos:line="82" pos:column="54"/></name></expr></argument>)<pos:position pos:line="82" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="56"/></condition><then pos:line="82" pos:column="56"> <block pos:line="82" pos:column="57">{
				<if pos:line="83" pos:column="33">if <condition pos:line="83" pos:column="36">(<expr><name pos:line="83" pos:column="37">max<pos:position pos:line="83" pos:column="40"/></name> <operator pos:line="83" pos:column="41">&lt;<pos:position pos:line="83" pos:column="45"/></operator> <literal type="number" pos:line="83" pos:column="43">0<pos:position pos:line="83" pos:column="44"/></literal></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45">
					<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="41">max<pos:position pos:line="84" pos:column="44"/></name> <operator pos:line="84" pos:column="45">=<pos:position pos:line="84" pos:column="46"/></operator> <literal type="number" pos:line="84" pos:column="47">0<pos:position pos:line="84" pos:column="48"/></literal></expr>;<pos:position pos:line="84" pos:column="49"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="85" pos:column="33">max<pos:position pos:line="85" pos:column="36"/></name> <operator pos:line="85" pos:column="37">=<pos:position pos:line="85" pos:column="38"/></operator> <literal type="number" pos:line="85" pos:column="39">10<pos:position pos:line="85" pos:column="41"/></literal><operator pos:line="85" pos:column="41">*<pos:position pos:line="85" pos:column="42"/></operator><name pos:line="85" pos:column="42">max<pos:position pos:line="85" pos:column="45"/></name> <operator pos:line="85" pos:column="46">+<pos:position pos:line="85" pos:column="47"/></operator> <call><name pos:line="85" pos:column="48">char_to_int<pos:position pos:line="85" pos:column="59"/></name> <argument_list pos:line="85" pos:column="60">(<argument><expr><name pos:line="85" pos:column="61">ch<pos:position pos:line="85" pos:column="63"/></name></expr></argument>)<pos:position pos:line="85" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name pos:line="86" pos:column="33">ch<pos:position pos:line="86" pos:column="35"/></name> <operator pos:line="86" pos:column="36">=<pos:position pos:line="86" pos:column="37"/></operator> <operator pos:line="86" pos:column="38">*<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="39">format<pos:position pos:line="86" pos:column="45"/></name><operator pos:line="86" pos:column="45">++<pos:position pos:line="86" pos:column="47"/></operator></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="87" pos:column="26"/></block></then> <elseif pos:line="87" pos:column="27">else <if pos:line="87" pos:column="32">if <condition pos:line="87" pos:column="35">(<expr><name pos:line="87" pos:column="36">ch<pos:position pos:line="87" pos:column="38"/></name> <operator pos:line="87" pos:column="39">==<pos:position pos:line="87" pos:column="41"/></operator> <literal type="char" pos:line="87" pos:column="42">'*'<pos:position pos:line="87" pos:column="45"/></literal></expr>)<pos:position pos:line="87" pos:column="46"/></condition><then pos:line="87" pos:column="46"> <block pos:line="87" pos:column="47">{
				<expr_stmt><expr><name pos:line="88" pos:column="33">max<pos:position pos:line="88" pos:column="36"/></name> <operator pos:line="88" pos:column="37">=<pos:position pos:line="88" pos:column="38"/></operator> <call><name pos:line="88" pos:column="39">va_arg<pos:position pos:line="88" pos:column="45"/></name> <argument_list pos:line="88" pos:column="46">(<argument><expr><name pos:line="88" pos:column="47">args<pos:position pos:line="88" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="53">int<pos:position pos:line="88" pos:column="56"/></name></expr></argument>)<pos:position pos:line="88" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="89" pos:column="33">ch<pos:position pos:line="89" pos:column="35"/></name> <operator pos:line="89" pos:column="36">=<pos:position pos:line="89" pos:column="37"/></operator> <operator pos:line="89" pos:column="38">*<pos:position pos:line="89" pos:column="39"/></operator><name pos:line="89" pos:column="39">format<pos:position pos:line="89" pos:column="45"/></name><operator pos:line="89" pos:column="45">++<pos:position pos:line="89" pos:column="47"/></operator></expr>;<pos:position pos:line="89" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="90" pos:column="33">state<pos:position pos:line="90" pos:column="38"/></name> <operator pos:line="90" pos:column="39">=<pos:position pos:line="90" pos:column="40"/></operator> <name pos:line="90" pos:column="41">DP_S_MOD<pos:position pos:line="90" pos:column="49"/></name></expr>;<pos:position pos:line="90" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="91" pos:column="26"/></block></then></if></elseif> <else pos:line="91" pos:column="27">else <block pos:line="91" pos:column="32">{
				<expr_stmt><expr><name pos:line="92" pos:column="33">state<pos:position pos:line="92" pos:column="38"/></name> <operator pos:line="92" pos:column="39">=<pos:position pos:line="92" pos:column="40"/></operator> <name pos:line="92" pos:column="41">DP_S_MOD<pos:position pos:line="92" pos:column="49"/></name></expr>;<pos:position pos:line="92" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="93" pos:column="26"/></block></else></if>
			<break pos:line="94" pos:column="25">break;<pos:position pos:line="94" pos:column="31"/></break>
		<case pos:line="95" pos:column="17">case <expr><name pos:line="95" pos:column="22">DP_S_MOD<pos:position pos:line="95" pos:column="30"/></name></expr>:<pos:position pos:line="95" pos:column="31"/></case>
			<switch pos:line="96" pos:column="25">switch <condition pos:line="96" pos:column="32">(<expr><name pos:line="96" pos:column="33">ch<pos:position pos:line="96" pos:column="35"/></name></expr>)<pos:position pos:line="96" pos:column="36"/></condition> <block pos:line="96" pos:column="37">{
			<case pos:line="97" pos:column="25">case <expr><literal type="char" pos:line="97" pos:column="30">'h'<pos:position pos:line="97" pos:column="33"/></literal></expr>:<pos:position pos:line="97" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="98" pos:column="33">cflags<pos:position pos:line="98" pos:column="39"/></name> <operator pos:line="98" pos:column="40">=<pos:position pos:line="98" pos:column="41"/></operator> <name pos:line="98" pos:column="42">DP_C_SHORT<pos:position pos:line="98" pos:column="52"/></name></expr>;<pos:position pos:line="98" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="99" pos:column="33">ch<pos:position pos:line="99" pos:column="35"/></name> <operator pos:line="99" pos:column="36">=<pos:position pos:line="99" pos:column="37"/></operator> <operator pos:line="99" pos:column="38">*<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="39">format<pos:position pos:line="99" pos:column="45"/></name><operator pos:line="99" pos:column="45">++<pos:position pos:line="99" pos:column="47"/></operator></expr>;<pos:position pos:line="99" pos:column="48"/></expr_stmt>
				<break pos:line="100" pos:column="33">break;<pos:position pos:line="100" pos:column="39"/></break>
			<case pos:line="101" pos:column="25">case <expr><literal type="char" pos:line="101" pos:column="30">'l'<pos:position pos:line="101" pos:column="33"/></literal></expr>:<pos:position pos:line="101" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="102" pos:column="33">cflags<pos:position pos:line="102" pos:column="39"/></name> <operator pos:line="102" pos:column="40">=<pos:position pos:line="102" pos:column="41"/></operator> <name pos:line="102" pos:column="42">DP_C_LONG<pos:position pos:line="102" pos:column="51"/></name></expr>;<pos:position pos:line="102" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="103" pos:column="33">ch<pos:position pos:line="103" pos:column="35"/></name> <operator pos:line="103" pos:column="36">=<pos:position pos:line="103" pos:column="37"/></operator> <operator pos:line="103" pos:column="38">*<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="39">format<pos:position pos:line="103" pos:column="45"/></name><operator pos:line="103" pos:column="45">++<pos:position pos:line="103" pos:column="47"/></operator></expr>;<pos:position pos:line="103" pos:column="48"/></expr_stmt>
				<if pos:line="104" pos:column="33">if <condition pos:line="104" pos:column="36">(<expr><name pos:line="104" pos:column="37">ch<pos:position pos:line="104" pos:column="39"/></name> <operator pos:line="104" pos:column="40">==<pos:position pos:line="104" pos:column="42"/></operator> <literal type="char" pos:line="104" pos:column="43">'l'<pos:position pos:line="104" pos:column="46"/></literal></expr>)<pos:position pos:line="104" pos:column="47"/></condition><then pos:line="104" pos:column="47"> <block pos:line="104" pos:column="48">{	<comment type="block" pos:line="104" pos:column="57">/* It's a long long */</comment>
					<expr_stmt><expr><name pos:line="105" pos:column="41">cflags<pos:position pos:line="105" pos:column="47"/></name> <operator pos:line="105" pos:column="48">=<pos:position pos:line="105" pos:column="49"/></operator> <name pos:line="105" pos:column="50">DP_C_LLONG<pos:position pos:line="105" pos:column="60"/></name></expr>;<pos:position pos:line="105" pos:column="61"/></expr_stmt>
					<expr_stmt><expr><name pos:line="106" pos:column="41">ch<pos:position pos:line="106" pos:column="43"/></name> <operator pos:line="106" pos:column="44">=<pos:position pos:line="106" pos:column="45"/></operator> <operator pos:line="106" pos:column="46">*<pos:position pos:line="106" pos:column="47"/></operator><name pos:line="106" pos:column="47">format<pos:position pos:line="106" pos:column="53"/></name><operator pos:line="106" pos:column="53">++<pos:position pos:line="106" pos:column="55"/></operator></expr>;<pos:position pos:line="106" pos:column="56"/></expr_stmt>
				}<pos:position pos:line="107" pos:column="34"/></block></then></if>
				<break pos:line="108" pos:column="33">break;<pos:position pos:line="108" pos:column="39"/></break>
			<case pos:line="109" pos:column="25">case <expr><literal type="char" pos:line="109" pos:column="30">'L'<pos:position pos:line="109" pos:column="33"/></literal></expr>:<pos:position pos:line="109" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="110" pos:column="33">cflags<pos:position pos:line="110" pos:column="39"/></name> <operator pos:line="110" pos:column="40">=<pos:position pos:line="110" pos:column="41"/></operator> <name pos:line="110" pos:column="42">DP_C_LDOUBLE<pos:position pos:line="110" pos:column="54"/></name></expr>;<pos:position pos:line="110" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name pos:line="111" pos:column="33">ch<pos:position pos:line="111" pos:column="35"/></name> <operator pos:line="111" pos:column="36">=<pos:position pos:line="111" pos:column="37"/></operator> <operator pos:line="111" pos:column="38">*<pos:position pos:line="111" pos:column="39"/></operator><name pos:line="111" pos:column="39">format<pos:position pos:line="111" pos:column="45"/></name><operator pos:line="111" pos:column="45">++<pos:position pos:line="111" pos:column="47"/></operator></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt>
				<break pos:line="112" pos:column="33">break;<pos:position pos:line="112" pos:column="39"/></break>
			<default pos:line="113" pos:column="25">default:<pos:position pos:line="113" pos:column="33"/></default>
				<break pos:line="114" pos:column="33">break;<pos:position pos:line="114" pos:column="39"/></break>
			}<pos:position pos:line="115" pos:column="26"/></block></switch>
			<expr_stmt><expr><name pos:line="116" pos:column="25">state<pos:position pos:line="116" pos:column="30"/></name> <operator pos:line="116" pos:column="31">=<pos:position pos:line="116" pos:column="32"/></operator> <name pos:line="116" pos:column="33">DP_S_CONV<pos:position pos:line="116" pos:column="42"/></name></expr>;<pos:position pos:line="116" pos:column="43"/></expr_stmt>
			<break pos:line="117" pos:column="25">break;<pos:position pos:line="117" pos:column="31"/></break>
		<case pos:line="118" pos:column="17">case <expr><name pos:line="118" pos:column="22">DP_S_CONV<pos:position pos:line="118" pos:column="31"/></name></expr>:<pos:position pos:line="118" pos:column="32"/></case>
			<switch pos:line="119" pos:column="25">switch <condition pos:line="119" pos:column="32">(<expr><name pos:line="119" pos:column="33">ch<pos:position pos:line="119" pos:column="35"/></name></expr>)<pos:position pos:line="119" pos:column="36"/></condition> <block pos:line="119" pos:column="37">{
			<case pos:line="120" pos:column="25">case <expr><literal type="char" pos:line="120" pos:column="30">'d'<pos:position pos:line="120" pos:column="33"/></literal></expr>:<pos:position pos:line="120" pos:column="34"/></case>
			<case pos:line="121" pos:column="25">case <expr><literal type="char" pos:line="121" pos:column="30">'i'<pos:position pos:line="121" pos:column="33"/></literal></expr>:<pos:position pos:line="121" pos:column="34"/></case>
				<if pos:line="122" pos:column="33">if <condition pos:line="122" pos:column="36">(<expr><name pos:line="122" pos:column="37">cflags<pos:position pos:line="122" pos:column="43"/></name> <operator pos:line="122" pos:column="44">==<pos:position pos:line="122" pos:column="46"/></operator> <name pos:line="122" pos:column="47">DP_C_SHORT<pos:position pos:line="122" pos:column="57"/></name></expr>)<pos:position pos:line="122" pos:column="58"/></condition><then pos:line="122" pos:column="58"> 
					<block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="41">value<pos:position pos:line="123" pos:column="46"/></name> <operator pos:line="123" pos:column="47">=<pos:position pos:line="123" pos:column="48"/></operator> <call><name pos:line="123" pos:column="49">va_arg<pos:position pos:line="123" pos:column="55"/></name> <argument_list pos:line="123" pos:column="56">(<argument><expr><name pos:line="123" pos:column="57">args<pos:position pos:line="123" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="63">int<pos:position pos:line="123" pos:column="66"/></name></expr></argument>)<pos:position pos:line="123" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="68"/></expr_stmt></block></then>
				<elseif pos:line="124" pos:column="33">else <if pos:line="124" pos:column="38">if <condition pos:line="124" pos:column="41">(<expr><name pos:line="124" pos:column="42">cflags<pos:position pos:line="124" pos:column="48"/></name> <operator pos:line="124" pos:column="49">==<pos:position pos:line="124" pos:column="51"/></operator> <name pos:line="124" pos:column="52">DP_C_LONG<pos:position pos:line="124" pos:column="61"/></name></expr>)<pos:position pos:line="124" pos:column="62"/></condition><then pos:line="124" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="41">value<pos:position pos:line="125" pos:column="46"/></name> <operator pos:line="125" pos:column="47">=<pos:position pos:line="125" pos:column="48"/></operator> <macro><name pos:line="125" pos:column="49">va_arg<pos:position pos:line="125" pos:column="55"/></name> <argument_list pos:line="125" pos:column="56">(<argument pos:line="125" pos:column="57">args<pos:position pos:line="125" pos:column="61"/></argument>, <argument pos:line="125" pos:column="63">long int<pos:position pos:line="125" pos:column="71"/></argument>)<pos:position pos:line="125" pos:column="72"/></argument_list></macro></expr>;<pos:position pos:line="125" pos:column="73"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="126" pos:column="33">else <if pos:line="126" pos:column="38">if <condition pos:line="126" pos:column="41">(<expr><name pos:line="126" pos:column="42">cflags<pos:position pos:line="126" pos:column="48"/></name> <operator pos:line="126" pos:column="49">==<pos:position pos:line="126" pos:column="51"/></operator> <name pos:line="126" pos:column="52">DP_C_LLONG<pos:position pos:line="126" pos:column="62"/></name></expr>)<pos:position pos:line="126" pos:column="63"/></condition><then pos:line="126" pos:column="63">
					<block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="41">value<pos:position pos:line="127" pos:column="46"/></name> <operator pos:line="127" pos:column="47">=<pos:position pos:line="127" pos:column="48"/></operator> <call><name pos:line="127" pos:column="49">va_arg<pos:position pos:line="127" pos:column="55"/></name> <argument_list pos:line="127" pos:column="56">(<argument><expr><name pos:line="127" pos:column="57">args<pos:position pos:line="127" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="63">LLONG<pos:position pos:line="127" pos:column="68"/></name></expr></argument>)<pos:position pos:line="127" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="70"/></expr_stmt></block></then></if></elseif>
				<else pos:line="128" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="41">value<pos:position pos:line="129" pos:column="46"/></name> <operator pos:line="129" pos:column="47">=<pos:position pos:line="129" pos:column="48"/></operator> <call><name pos:line="129" pos:column="49">va_arg<pos:position pos:line="129" pos:column="55"/></name> <argument_list pos:line="129" pos:column="56">(<argument><expr><name pos:line="129" pos:column="57">args<pos:position pos:line="129" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="63">int<pos:position pos:line="129" pos:column="66"/></name></expr></argument>)<pos:position pos:line="129" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="68"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="130" pos:column="33">fmtint<pos:position pos:line="130" pos:column="39"/></name> <argument_list pos:line="130" pos:column="40">(<argument><expr><name pos:line="130" pos:column="41">buffer<pos:position pos:line="130" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="49">&amp;<pos:position pos:line="130" pos:column="54"/></operator><name pos:line="130" pos:column="50">currlen<pos:position pos:line="130" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="59">maxlen<pos:position pos:line="130" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="67">value<pos:position pos:line="130" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="74">10<pos:position pos:line="130" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="78">min<pos:position pos:line="130" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="83">max<pos:position pos:line="130" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="88">flags<pos:position pos:line="130" pos:column="93"/></name></expr></argument>)<pos:position pos:line="130" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="95"/></expr_stmt>
				<break pos:line="131" pos:column="33">break;<pos:position pos:line="131" pos:column="39"/></break>
			<case pos:line="132" pos:column="25">case <expr><literal type="char" pos:line="132" pos:column="30">'o'<pos:position pos:line="132" pos:column="33"/></literal></expr>:<pos:position pos:line="132" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="133" pos:column="33">flags<pos:position pos:line="133" pos:column="38"/></name> <operator pos:line="133" pos:column="39">|=<pos:position pos:line="133" pos:column="41"/></operator> <name pos:line="133" pos:column="42">DP_F_UNSIGNED<pos:position pos:line="133" pos:column="55"/></name></expr>;<pos:position pos:line="133" pos:column="56"/></expr_stmt>
				<if pos:line="134" pos:column="33">if <condition pos:line="134" pos:column="36">(<expr><name pos:line="134" pos:column="37">cflags<pos:position pos:line="134" pos:column="43"/></name> <operator pos:line="134" pos:column="44">==<pos:position pos:line="134" pos:column="46"/></operator> <name pos:line="134" pos:column="47">DP_C_SHORT<pos:position pos:line="134" pos:column="57"/></name></expr>)<pos:position pos:line="134" pos:column="58"/></condition><then pos:line="134" pos:column="58">
					<block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="41">value<pos:position pos:line="135" pos:column="46"/></name> <operator pos:line="135" pos:column="47">=<pos:position pos:line="135" pos:column="48"/></operator> <macro><name pos:line="135" pos:column="49">va_arg<pos:position pos:line="135" pos:column="55"/></name> <argument_list pos:line="135" pos:column="56">(<argument pos:line="135" pos:column="57">args<pos:position pos:line="135" pos:column="61"/></argument>, <argument pos:line="135" pos:column="63">unsigned int<pos:position pos:line="135" pos:column="75"/></argument>)<pos:position pos:line="135" pos:column="76"/></argument_list></macro></expr>;<pos:position pos:line="135" pos:column="77"/></expr_stmt></block></then>
				<elseif pos:line="136" pos:column="33">else <if pos:line="136" pos:column="38">if <condition pos:line="136" pos:column="41">(<expr><name pos:line="136" pos:column="42">cflags<pos:position pos:line="136" pos:column="48"/></name> <operator pos:line="136" pos:column="49">==<pos:position pos:line="136" pos:column="51"/></operator> <name pos:line="136" pos:column="52">DP_C_LONG<pos:position pos:line="136" pos:column="61"/></name></expr>)<pos:position pos:line="136" pos:column="62"/></condition><then pos:line="136" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="41">value<pos:position pos:line="137" pos:column="46"/></name> <operator pos:line="137" pos:column="47">=<pos:position pos:line="137" pos:column="48"/></operator> <operator pos:line="137" pos:column="49">(<pos:position pos:line="137" pos:column="50"/></operator><name pos:line="137" pos:column="50">long<pos:position pos:line="137" pos:column="54"/></name><operator pos:line="137" pos:column="54">)<pos:position pos:line="137" pos:column="55"/></operator><macro><name pos:line="137" pos:column="55">va_arg<pos:position pos:line="137" pos:column="61"/></name> <argument_list pos:line="137" pos:column="62">(<argument pos:line="137" pos:column="63">args<pos:position pos:line="137" pos:column="67"/></argument>, <argument pos:line="137" pos:column="69">unsigned long int<pos:position pos:line="137" pos:column="86"/></argument>)<pos:position pos:line="137" pos:column="87"/></argument_list></macro></expr>;<pos:position pos:line="137" pos:column="88"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="138" pos:column="33">else <if pos:line="138" pos:column="38">if <condition pos:line="138" pos:column="41">(<expr><name pos:line="138" pos:column="42">cflags<pos:position pos:line="138" pos:column="48"/></name> <operator pos:line="138" pos:column="49">==<pos:position pos:line="138" pos:column="51"/></operator> <name pos:line="138" pos:column="52">DP_C_LLONG<pos:position pos:line="138" pos:column="62"/></name></expr>)<pos:position pos:line="138" pos:column="63"/></condition><then pos:line="138" pos:column="63">
					<block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="41">value<pos:position pos:line="139" pos:column="46"/></name> <operator pos:line="139" pos:column="47">=<pos:position pos:line="139" pos:column="48"/></operator> <operator pos:line="139" pos:column="49">(<pos:position pos:line="139" pos:column="50"/></operator><name pos:line="139" pos:column="50">long<pos:position pos:line="139" pos:column="54"/></name><operator pos:line="139" pos:column="54">)<pos:position pos:line="139" pos:column="55"/></operator><macro><name pos:line="139" pos:column="55">va_arg<pos:position pos:line="139" pos:column="61"/></name> <argument_list pos:line="139" pos:column="62">(<argument pos:line="139" pos:column="63">args<pos:position pos:line="139" pos:column="67"/></argument>, <argument pos:line="139" pos:column="69">unsigned LLONG<pos:position pos:line="139" pos:column="83"/></argument>)<pos:position pos:line="139" pos:column="84"/></argument_list></macro></expr>;<pos:position pos:line="139" pos:column="85"/></expr_stmt></block></then></if></elseif>
				<else pos:line="140" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="141" pos:column="41">value<pos:position pos:line="141" pos:column="46"/></name> <operator pos:line="141" pos:column="47">=<pos:position pos:line="141" pos:column="48"/></operator> <operator pos:line="141" pos:column="49">(<pos:position pos:line="141" pos:column="50"/></operator><name pos:line="141" pos:column="50">long<pos:position pos:line="141" pos:column="54"/></name><operator pos:line="141" pos:column="54">)<pos:position pos:line="141" pos:column="55"/></operator><macro><name pos:line="141" pos:column="55">va_arg<pos:position pos:line="141" pos:column="61"/></name> <argument_list pos:line="141" pos:column="62">(<argument pos:line="141" pos:column="63">args<pos:position pos:line="141" pos:column="67"/></argument>, <argument pos:line="141" pos:column="69">unsigned int<pos:position pos:line="141" pos:column="81"/></argument>)<pos:position pos:line="141" pos:column="82"/></argument_list></macro></expr>;<pos:position pos:line="141" pos:column="83"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="142" pos:column="33">fmtint<pos:position pos:line="142" pos:column="39"/></name> <argument_list pos:line="142" pos:column="40">(<argument><expr><name pos:line="142" pos:column="41">buffer<pos:position pos:line="142" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="49">&amp;<pos:position pos:line="142" pos:column="54"/></operator><name pos:line="142" pos:column="50">currlen<pos:position pos:line="142" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="59">maxlen<pos:position pos:line="142" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="67">value<pos:position pos:line="142" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="74">8<pos:position pos:line="142" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="77">min<pos:position pos:line="142" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="82">max<pos:position pos:line="142" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="87">flags<pos:position pos:line="142" pos:column="92"/></name></expr></argument>)<pos:position pos:line="142" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="94"/></expr_stmt>
				<break pos:line="143" pos:column="33">break;<pos:position pos:line="143" pos:column="39"/></break>
			<case pos:line="144" pos:column="25">case <expr><literal type="char" pos:line="144" pos:column="30">'u'<pos:position pos:line="144" pos:column="33"/></literal></expr>:<pos:position pos:line="144" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="145" pos:column="33">flags<pos:position pos:line="145" pos:column="38"/></name> <operator pos:line="145" pos:column="39">|=<pos:position pos:line="145" pos:column="41"/></operator> <name pos:line="145" pos:column="42">DP_F_UNSIGNED<pos:position pos:line="145" pos:column="55"/></name></expr>;<pos:position pos:line="145" pos:column="56"/></expr_stmt>
				<if pos:line="146" pos:column="33">if <condition pos:line="146" pos:column="36">(<expr><name pos:line="146" pos:column="37">cflags<pos:position pos:line="146" pos:column="43"/></name> <operator pos:line="146" pos:column="44">==<pos:position pos:line="146" pos:column="46"/></operator> <name pos:line="146" pos:column="47">DP_C_SHORT<pos:position pos:line="146" pos:column="57"/></name></expr>)<pos:position pos:line="146" pos:column="58"/></condition><then pos:line="146" pos:column="58">
					<block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="41">value<pos:position pos:line="147" pos:column="46"/></name> <operator pos:line="147" pos:column="47">=<pos:position pos:line="147" pos:column="48"/></operator> <macro><name pos:line="147" pos:column="49">va_arg<pos:position pos:line="147" pos:column="55"/></name> <argument_list pos:line="147" pos:column="56">(<argument pos:line="147" pos:column="57">args<pos:position pos:line="147" pos:column="61"/></argument>, <argument pos:line="147" pos:column="63">unsigned int<pos:position pos:line="147" pos:column="75"/></argument>)<pos:position pos:line="147" pos:column="76"/></argument_list></macro></expr>;<pos:position pos:line="147" pos:column="77"/></expr_stmt></block></then>
				<elseif pos:line="148" pos:column="33">else <if pos:line="148" pos:column="38">if <condition pos:line="148" pos:column="41">(<expr><name pos:line="148" pos:column="42">cflags<pos:position pos:line="148" pos:column="48"/></name> <operator pos:line="148" pos:column="49">==<pos:position pos:line="148" pos:column="51"/></operator> <name pos:line="148" pos:column="52">DP_C_LONG<pos:position pos:line="148" pos:column="61"/></name></expr>)<pos:position pos:line="148" pos:column="62"/></condition><then pos:line="148" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><name pos:line="149" pos:column="41">value<pos:position pos:line="149" pos:column="46"/></name> <operator pos:line="149" pos:column="47">=<pos:position pos:line="149" pos:column="48"/></operator> <operator pos:line="149" pos:column="49">(<pos:position pos:line="149" pos:column="50"/></operator><name pos:line="149" pos:column="50">long<pos:position pos:line="149" pos:column="54"/></name><operator pos:line="149" pos:column="54">)<pos:position pos:line="149" pos:column="55"/></operator><macro><name pos:line="149" pos:column="55">va_arg<pos:position pos:line="149" pos:column="61"/></name> <argument_list pos:line="149" pos:column="62">(<argument pos:line="149" pos:column="63">args<pos:position pos:line="149" pos:column="67"/></argument>, <argument pos:line="149" pos:column="69">unsigned long int<pos:position pos:line="149" pos:column="86"/></argument>)<pos:position pos:line="149" pos:column="87"/></argument_list></macro></expr>;<pos:position pos:line="149" pos:column="88"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="150" pos:column="33">else <if pos:line="150" pos:column="38">if <condition pos:line="150" pos:column="41">(<expr><name pos:line="150" pos:column="42">cflags<pos:position pos:line="150" pos:column="48"/></name> <operator pos:line="150" pos:column="49">==<pos:position pos:line="150" pos:column="51"/></operator> <name pos:line="150" pos:column="52">DP_C_LLONG<pos:position pos:line="150" pos:column="62"/></name></expr>)<pos:position pos:line="150" pos:column="63"/></condition><then pos:line="150" pos:column="63">
					<block type="pseudo"><expr_stmt><expr><name pos:line="151" pos:column="41">value<pos:position pos:line="151" pos:column="46"/></name> <operator pos:line="151" pos:column="47">=<pos:position pos:line="151" pos:column="48"/></operator> <operator pos:line="151" pos:column="49">(<pos:position pos:line="151" pos:column="50"/></operator><name pos:line="151" pos:column="50">LLONG<pos:position pos:line="151" pos:column="55"/></name><operator pos:line="151" pos:column="55">)<pos:position pos:line="151" pos:column="56"/></operator><macro><name pos:line="151" pos:column="56">va_arg<pos:position pos:line="151" pos:column="62"/></name> <argument_list pos:line="151" pos:column="63">(<argument pos:line="151" pos:column="64">args<pos:position pos:line="151" pos:column="68"/></argument>, <argument pos:line="151" pos:column="70">unsigned LLONG<pos:position pos:line="151" pos:column="84"/></argument>)<pos:position pos:line="151" pos:column="85"/></argument_list></macro></expr>;<pos:position pos:line="151" pos:column="86"/></expr_stmt></block></then></if></elseif>
				<else pos:line="152" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="153" pos:column="41">value<pos:position pos:line="153" pos:column="46"/></name> <operator pos:line="153" pos:column="47">=<pos:position pos:line="153" pos:column="48"/></operator> <operator pos:line="153" pos:column="49">(<pos:position pos:line="153" pos:column="50"/></operator><name pos:line="153" pos:column="50">long<pos:position pos:line="153" pos:column="54"/></name><operator pos:line="153" pos:column="54">)<pos:position pos:line="153" pos:column="55"/></operator><macro><name pos:line="153" pos:column="55">va_arg<pos:position pos:line="153" pos:column="61"/></name> <argument_list pos:line="153" pos:column="62">(<argument pos:line="153" pos:column="63">args<pos:position pos:line="153" pos:column="67"/></argument>, <argument pos:line="153" pos:column="69">unsigned int<pos:position pos:line="153" pos:column="81"/></argument>)<pos:position pos:line="153" pos:column="82"/></argument_list></macro></expr>;<pos:position pos:line="153" pos:column="83"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="154" pos:column="33">fmtint<pos:position pos:line="154" pos:column="39"/></name> <argument_list pos:line="154" pos:column="40">(<argument><expr><name pos:line="154" pos:column="41">buffer<pos:position pos:line="154" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="49">&amp;<pos:position pos:line="154" pos:column="54"/></operator><name pos:line="154" pos:column="50">currlen<pos:position pos:line="154" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="59">maxlen<pos:position pos:line="154" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="67">value<pos:position pos:line="154" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="74">10<pos:position pos:line="154" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="154" pos:column="78">min<pos:position pos:line="154" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="83">max<pos:position pos:line="154" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="88">flags<pos:position pos:line="154" pos:column="93"/></name></expr></argument>)<pos:position pos:line="154" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="95"/></expr_stmt>
				<break pos:line="155" pos:column="33">break;<pos:position pos:line="155" pos:column="39"/></break>
			<case pos:line="156" pos:column="25">case <expr><literal type="char" pos:line="156" pos:column="30">'X'<pos:position pos:line="156" pos:column="33"/></literal></expr>:<pos:position pos:line="156" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="157" pos:column="33">flags<pos:position pos:line="157" pos:column="38"/></name> <operator pos:line="157" pos:column="39">|=<pos:position pos:line="157" pos:column="41"/></operator> <name pos:line="157" pos:column="42">DP_F_UP<pos:position pos:line="157" pos:column="49"/></name></expr>;<pos:position pos:line="157" pos:column="50"/></expr_stmt>
			<case pos:line="158" pos:column="25">case <expr><literal type="char" pos:line="158" pos:column="30">'x'<pos:position pos:line="158" pos:column="33"/></literal></expr>:<pos:position pos:line="158" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="159" pos:column="33">flags<pos:position pos:line="159" pos:column="38"/></name> <operator pos:line="159" pos:column="39">|=<pos:position pos:line="159" pos:column="41"/></operator> <name pos:line="159" pos:column="42">DP_F_UNSIGNED<pos:position pos:line="159" pos:column="55"/></name></expr>;<pos:position pos:line="159" pos:column="56"/></expr_stmt>
				<if pos:line="160" pos:column="33">if <condition pos:line="160" pos:column="36">(<expr><name pos:line="160" pos:column="37">cflags<pos:position pos:line="160" pos:column="43"/></name> <operator pos:line="160" pos:column="44">==<pos:position pos:line="160" pos:column="46"/></operator> <name pos:line="160" pos:column="47">DP_C_SHORT<pos:position pos:line="160" pos:column="57"/></name></expr>)<pos:position pos:line="160" pos:column="58"/></condition><then pos:line="160" pos:column="58">
					<block type="pseudo"><expr_stmt><expr><name pos:line="161" pos:column="41">value<pos:position pos:line="161" pos:column="46"/></name> <operator pos:line="161" pos:column="47">=<pos:position pos:line="161" pos:column="48"/></operator> <macro><name pos:line="161" pos:column="49">va_arg<pos:position pos:line="161" pos:column="55"/></name> <argument_list pos:line="161" pos:column="56">(<argument pos:line="161" pos:column="57">args<pos:position pos:line="161" pos:column="61"/></argument>, <argument pos:line="161" pos:column="63">unsigned int<pos:position pos:line="161" pos:column="75"/></argument>)<pos:position pos:line="161" pos:column="76"/></argument_list></macro></expr>;<pos:position pos:line="161" pos:column="77"/></expr_stmt></block></then>
				<elseif pos:line="162" pos:column="33">else <if pos:line="162" pos:column="38">if <condition pos:line="162" pos:column="41">(<expr><name pos:line="162" pos:column="42">cflags<pos:position pos:line="162" pos:column="48"/></name> <operator pos:line="162" pos:column="49">==<pos:position pos:line="162" pos:column="51"/></operator> <name pos:line="162" pos:column="52">DP_C_LONG<pos:position pos:line="162" pos:column="61"/></name></expr>)<pos:position pos:line="162" pos:column="62"/></condition><then pos:line="162" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><name pos:line="163" pos:column="41">value<pos:position pos:line="163" pos:column="46"/></name> <operator pos:line="163" pos:column="47">=<pos:position pos:line="163" pos:column="48"/></operator> <operator pos:line="163" pos:column="49">(<pos:position pos:line="163" pos:column="50"/></operator><name pos:line="163" pos:column="50">long<pos:position pos:line="163" pos:column="54"/></name><operator pos:line="163" pos:column="54">)<pos:position pos:line="163" pos:column="55"/></operator><macro><name pos:line="163" pos:column="55">va_arg<pos:position pos:line="163" pos:column="61"/></name> <argument_list pos:line="163" pos:column="62">(<argument pos:line="163" pos:column="63">args<pos:position pos:line="163" pos:column="67"/></argument>, <argument pos:line="163" pos:column="69">unsigned long int<pos:position pos:line="163" pos:column="86"/></argument>)<pos:position pos:line="163" pos:column="87"/></argument_list></macro></expr>;<pos:position pos:line="163" pos:column="88"/></expr_stmt></block></then></if></elseif>
				<elseif pos:line="164" pos:column="33">else <if pos:line="164" pos:column="38">if <condition pos:line="164" pos:column="41">(<expr><name pos:line="164" pos:column="42">cflags<pos:position pos:line="164" pos:column="48"/></name> <operator pos:line="164" pos:column="49">==<pos:position pos:line="164" pos:column="51"/></operator> <name pos:line="164" pos:column="52">DP_C_LLONG<pos:position pos:line="164" pos:column="62"/></name></expr>)<pos:position pos:line="164" pos:column="63"/></condition><then pos:line="164" pos:column="63">
					<block type="pseudo"><expr_stmt><expr><name pos:line="165" pos:column="41">value<pos:position pos:line="165" pos:column="46"/></name> <operator pos:line="165" pos:column="47">=<pos:position pos:line="165" pos:column="48"/></operator> <operator pos:line="165" pos:column="49">(<pos:position pos:line="165" pos:column="50"/></operator><name pos:line="165" pos:column="50">LLONG<pos:position pos:line="165" pos:column="55"/></name><operator pos:line="165" pos:column="55">)<pos:position pos:line="165" pos:column="56"/></operator><macro><name pos:line="165" pos:column="56">va_arg<pos:position pos:line="165" pos:column="62"/></name> <argument_list pos:line="165" pos:column="63">(<argument pos:line="165" pos:column="64">args<pos:position pos:line="165" pos:column="68"/></argument>, <argument pos:line="165" pos:column="70">unsigned LLONG<pos:position pos:line="165" pos:column="84"/></argument>)<pos:position pos:line="165" pos:column="85"/></argument_list></macro></expr>;<pos:position pos:line="165" pos:column="86"/></expr_stmt></block></then></if></elseif>
				<else pos:line="166" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="167" pos:column="41">value<pos:position pos:line="167" pos:column="46"/></name> <operator pos:line="167" pos:column="47">=<pos:position pos:line="167" pos:column="48"/></operator> <operator pos:line="167" pos:column="49">(<pos:position pos:line="167" pos:column="50"/></operator><name pos:line="167" pos:column="50">long<pos:position pos:line="167" pos:column="54"/></name><operator pos:line="167" pos:column="54">)<pos:position pos:line="167" pos:column="55"/></operator><macro><name pos:line="167" pos:column="55">va_arg<pos:position pos:line="167" pos:column="61"/></name> <argument_list pos:line="167" pos:column="62">(<argument pos:line="167" pos:column="63">args<pos:position pos:line="167" pos:column="67"/></argument>, <argument pos:line="167" pos:column="69">unsigned int<pos:position pos:line="167" pos:column="81"/></argument>)<pos:position pos:line="167" pos:column="82"/></argument_list></macro></expr>;<pos:position pos:line="167" pos:column="83"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="168" pos:column="33">fmtint<pos:position pos:line="168" pos:column="39"/></name> <argument_list pos:line="168" pos:column="40">(<argument><expr><name pos:line="168" pos:column="41">buffer<pos:position pos:line="168" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="168" pos:column="49">&amp;<pos:position pos:line="168" pos:column="54"/></operator><name pos:line="168" pos:column="50">currlen<pos:position pos:line="168" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="59">maxlen<pos:position pos:line="168" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="67">value<pos:position pos:line="168" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="74">16<pos:position pos:line="168" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="78">min<pos:position pos:line="168" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="83">max<pos:position pos:line="168" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="88">flags<pos:position pos:line="168" pos:column="93"/></name></expr></argument>)<pos:position pos:line="168" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="95"/></expr_stmt>
				<break pos:line="169" pos:column="33">break;<pos:position pos:line="169" pos:column="39"/></break>
			<case pos:line="170" pos:column="25">case <expr><literal type="char" pos:line="170" pos:column="30">'f'<pos:position pos:line="170" pos:column="33"/></literal></expr>:<pos:position pos:line="170" pos:column="34"/></case>
				<if pos:line="171" pos:column="33">if <condition pos:line="171" pos:column="36">(<expr><name pos:line="171" pos:column="37">cflags<pos:position pos:line="171" pos:column="43"/></name> <operator pos:line="171" pos:column="44">==<pos:position pos:line="171" pos:column="46"/></operator> <name pos:line="171" pos:column="47">DP_C_LDOUBLE<pos:position pos:line="171" pos:column="59"/></name></expr>)<pos:position pos:line="171" pos:column="60"/></condition><then pos:line="171" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="41">fvalue<pos:position pos:line="172" pos:column="47"/></name> <operator pos:line="172" pos:column="48">=<pos:position pos:line="172" pos:column="49"/></operator> <call><name pos:line="172" pos:column="50">va_arg<pos:position pos:line="172" pos:column="56"/></name> <argument_list pos:line="172" pos:column="57">(<argument><expr><name pos:line="172" pos:column="58">args<pos:position pos:line="172" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="64">LDOUBLE<pos:position pos:line="172" pos:column="71"/></name></expr></argument>)<pos:position pos:line="172" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="73"/></expr_stmt></block></then>
				<else pos:line="173" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="174" pos:column="41">fvalue<pos:position pos:line="174" pos:column="47"/></name> <operator pos:line="174" pos:column="48">=<pos:position pos:line="174" pos:column="49"/></operator> <call><name pos:line="174" pos:column="50">va_arg<pos:position pos:line="174" pos:column="56"/></name> <argument_list pos:line="174" pos:column="57">(<argument><expr><name pos:line="174" pos:column="58">args<pos:position pos:line="174" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="64">double<pos:position pos:line="174" pos:column="70"/></name></expr></argument>)<pos:position pos:line="174" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="72"/></expr_stmt></block></else></if>
				<comment type="block" pos:line="175" pos:column="33">/* um, floating point? */</comment>
				<expr_stmt><expr><call><name pos:line="176" pos:column="33">fmtfp<pos:position pos:line="176" pos:column="38"/></name> <argument_list pos:line="176" pos:column="39">(<argument><expr><name pos:line="176" pos:column="40">buffer<pos:position pos:line="176" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="176" pos:column="48">&amp;<pos:position pos:line="176" pos:column="53"/></operator><name pos:line="176" pos:column="49">currlen<pos:position pos:line="176" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="58">maxlen<pos:position pos:line="176" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="66">fvalue<pos:position pos:line="176" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="74">min<pos:position pos:line="176" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="79">max<pos:position pos:line="176" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="84">flags<pos:position pos:line="176" pos:column="89"/></name></expr></argument>)<pos:position pos:line="176" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="91"/></expr_stmt>
				<break pos:line="177" pos:column="33">break;<pos:position pos:line="177" pos:column="39"/></break>
			<case pos:line="178" pos:column="25">case <expr><literal type="char" pos:line="178" pos:column="30">'E'<pos:position pos:line="178" pos:column="33"/></literal></expr>:<pos:position pos:line="178" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="179" pos:column="33">flags<pos:position pos:line="179" pos:column="38"/></name> <operator pos:line="179" pos:column="39">|=<pos:position pos:line="179" pos:column="41"/></operator> <name pos:line="179" pos:column="42">DP_F_UP<pos:position pos:line="179" pos:column="49"/></name></expr>;<pos:position pos:line="179" pos:column="50"/></expr_stmt>
			<case pos:line="180" pos:column="25">case <expr><literal type="char" pos:line="180" pos:column="30">'e'<pos:position pos:line="180" pos:column="33"/></literal></expr>:<pos:position pos:line="180" pos:column="34"/></case>
				<if pos:line="181" pos:column="33">if <condition pos:line="181" pos:column="36">(<expr><name pos:line="181" pos:column="37">cflags<pos:position pos:line="181" pos:column="43"/></name> <operator pos:line="181" pos:column="44">==<pos:position pos:line="181" pos:column="46"/></operator> <name pos:line="181" pos:column="47">DP_C_LDOUBLE<pos:position pos:line="181" pos:column="59"/></name></expr>)<pos:position pos:line="181" pos:column="60"/></condition><then pos:line="181" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><name pos:line="182" pos:column="41">fvalue<pos:position pos:line="182" pos:column="47"/></name> <operator pos:line="182" pos:column="48">=<pos:position pos:line="182" pos:column="49"/></operator> <call><name pos:line="182" pos:column="50">va_arg<pos:position pos:line="182" pos:column="56"/></name> <argument_list pos:line="182" pos:column="57">(<argument><expr><name pos:line="182" pos:column="58">args<pos:position pos:line="182" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="64">LDOUBLE<pos:position pos:line="182" pos:column="71"/></name></expr></argument>)<pos:position pos:line="182" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="73"/></expr_stmt></block></then>
				<else pos:line="183" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="184" pos:column="41">fvalue<pos:position pos:line="184" pos:column="47"/></name> <operator pos:line="184" pos:column="48">=<pos:position pos:line="184" pos:column="49"/></operator> <call><name pos:line="184" pos:column="50">va_arg<pos:position pos:line="184" pos:column="56"/></name> <argument_list pos:line="184" pos:column="57">(<argument><expr><name pos:line="184" pos:column="58">args<pos:position pos:line="184" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="64">double<pos:position pos:line="184" pos:column="70"/></name></expr></argument>)<pos:position pos:line="184" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="72"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="185" pos:column="33">fmtfp<pos:position pos:line="185" pos:column="38"/></name> <argument_list pos:line="185" pos:column="39">(<argument><expr><name pos:line="185" pos:column="40">buffer<pos:position pos:line="185" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="185" pos:column="48">&amp;<pos:position pos:line="185" pos:column="53"/></operator><name pos:line="185" pos:column="49">currlen<pos:position pos:line="185" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="58">maxlen<pos:position pos:line="185" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="66">fvalue<pos:position pos:line="185" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="74">min<pos:position pos:line="185" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="79">max<pos:position pos:line="185" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="84">flags<pos:position pos:line="185" pos:column="89"/></name></expr></argument>)<pos:position pos:line="185" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="91"/></expr_stmt>
				<break pos:line="186" pos:column="33">break;<pos:position pos:line="186" pos:column="39"/></break>
			<case pos:line="187" pos:column="25">case <expr><literal type="char" pos:line="187" pos:column="30">'G'<pos:position pos:line="187" pos:column="33"/></literal></expr>:<pos:position pos:line="187" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="188" pos:column="33">flags<pos:position pos:line="188" pos:column="38"/></name> <operator pos:line="188" pos:column="39">|=<pos:position pos:line="188" pos:column="41"/></operator> <name pos:line="188" pos:column="42">DP_F_UP<pos:position pos:line="188" pos:column="49"/></name></expr>;<pos:position pos:line="188" pos:column="50"/></expr_stmt>
			<case pos:line="189" pos:column="25">case <expr><literal type="char" pos:line="189" pos:column="30">'g'<pos:position pos:line="189" pos:column="33"/></literal></expr>:<pos:position pos:line="189" pos:column="34"/></case>
				<if pos:line="190" pos:column="33">if <condition pos:line="190" pos:column="36">(<expr><name pos:line="190" pos:column="37">cflags<pos:position pos:line="190" pos:column="43"/></name> <operator pos:line="190" pos:column="44">==<pos:position pos:line="190" pos:column="46"/></operator> <name pos:line="190" pos:column="47">DP_C_LDOUBLE<pos:position pos:line="190" pos:column="59"/></name></expr>)<pos:position pos:line="190" pos:column="60"/></condition><then pos:line="190" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><name pos:line="191" pos:column="41">fvalue<pos:position pos:line="191" pos:column="47"/></name> <operator pos:line="191" pos:column="48">=<pos:position pos:line="191" pos:column="49"/></operator> <call><name pos:line="191" pos:column="50">va_arg<pos:position pos:line="191" pos:column="56"/></name> <argument_list pos:line="191" pos:column="57">(<argument><expr><name pos:line="191" pos:column="58">args<pos:position pos:line="191" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="64">LDOUBLE<pos:position pos:line="191" pos:column="71"/></name></expr></argument>)<pos:position pos:line="191" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="73"/></expr_stmt></block></then>
				<else pos:line="192" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="193" pos:column="41">fvalue<pos:position pos:line="193" pos:column="47"/></name> <operator pos:line="193" pos:column="48">=<pos:position pos:line="193" pos:column="49"/></operator> <call><name pos:line="193" pos:column="50">va_arg<pos:position pos:line="193" pos:column="56"/></name> <argument_list pos:line="193" pos:column="57">(<argument><expr><name pos:line="193" pos:column="58">args<pos:position pos:line="193" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="64">double<pos:position pos:line="193" pos:column="70"/></name></expr></argument>)<pos:position pos:line="193" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="72"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="194" pos:column="33">fmtfp<pos:position pos:line="194" pos:column="38"/></name> <argument_list pos:line="194" pos:column="39">(<argument><expr><name pos:line="194" pos:column="40">buffer<pos:position pos:line="194" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="194" pos:column="48">&amp;<pos:position pos:line="194" pos:column="53"/></operator><name pos:line="194" pos:column="49">currlen<pos:position pos:line="194" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="58">maxlen<pos:position pos:line="194" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="66">fvalue<pos:position pos:line="194" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="74">min<pos:position pos:line="194" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="79">max<pos:position pos:line="194" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="84">flags<pos:position pos:line="194" pos:column="89"/></name></expr></argument>)<pos:position pos:line="194" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="91"/></expr_stmt>
				<break pos:line="195" pos:column="33">break;<pos:position pos:line="195" pos:column="39"/></break>
			<case pos:line="196" pos:column="25">case <expr><literal type="char" pos:line="196" pos:column="30">'c'<pos:position pos:line="196" pos:column="33"/></literal></expr>:<pos:position pos:line="196" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="197" pos:column="33">dopr_outch<pos:position pos:line="197" pos:column="43"/></name> <argument_list pos:line="197" pos:column="44">(<argument><expr><name pos:line="197" pos:column="45">buffer<pos:position pos:line="197" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="53">&amp;<pos:position pos:line="197" pos:column="58"/></operator><name pos:line="197" pos:column="54">currlen<pos:position pos:line="197" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="63">maxlen<pos:position pos:line="197" pos:column="69"/></name></expr></argument>, <argument><expr><call><name pos:line="197" pos:column="71">va_arg<pos:position pos:line="197" pos:column="77"/></name> <argument_list pos:line="197" pos:column="78">(<argument><expr><name pos:line="197" pos:column="79">args<pos:position pos:line="197" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="85">int<pos:position pos:line="197" pos:column="88"/></name></expr></argument>)<pos:position pos:line="197" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="197" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="91"/></expr_stmt>
				<break pos:line="198" pos:column="33">break;<pos:position pos:line="198" pos:column="39"/></break>
			<case pos:line="199" pos:column="25">case <expr><literal type="char" pos:line="199" pos:column="30">'s'<pos:position pos:line="199" pos:column="33"/></literal></expr>:<pos:position pos:line="199" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="200" pos:column="33">strvalue<pos:position pos:line="200" pos:column="41"/></name> <operator pos:line="200" pos:column="42">=<pos:position pos:line="200" pos:column="43"/></operator> <call><name pos:line="200" pos:column="44">va_arg<pos:position pos:line="200" pos:column="50"/></name> <argument_list pos:line="200" pos:column="51">(<argument><expr><name pos:line="200" pos:column="52">args<pos:position pos:line="200" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="58">char<pos:position pos:line="200" pos:column="62"/></name> <operator pos:line="200" pos:column="63">*<pos:position pos:line="200" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="200" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="66"/></expr_stmt>
				<if pos:line="201" pos:column="33">if <condition pos:line="201" pos:column="36">(<expr><operator pos:line="201" pos:column="37">!<pos:position pos:line="201" pos:column="38"/></operator><name pos:line="201" pos:column="38">strvalue<pos:position pos:line="201" pos:column="46"/></name></expr>)<pos:position pos:line="201" pos:column="47"/></condition><then pos:line="201" pos:column="47"> <block type="pseudo"><expr_stmt><expr><name pos:line="201" pos:column="48">strvalue<pos:position pos:line="201" pos:column="56"/></name> <operator pos:line="201" pos:column="57">=<pos:position pos:line="201" pos:column="58"/></operator> <literal type="string" pos:line="201" pos:column="59">"(NULL)"<pos:position pos:line="201" pos:column="67"/></literal></expr>;<pos:position pos:line="201" pos:column="68"/></expr_stmt></block></then></if>
				<if pos:line="202" pos:column="33">if <condition pos:line="202" pos:column="36">(<expr><name pos:line="202" pos:column="37">max<pos:position pos:line="202" pos:column="40"/></name> <operator pos:line="202" pos:column="41">==<pos:position pos:line="202" pos:column="43"/></operator> <operator pos:line="202" pos:column="44">-<pos:position pos:line="202" pos:column="45"/></operator><literal type="number" pos:line="202" pos:column="45">1<pos:position pos:line="202" pos:column="46"/></literal></expr>)<pos:position pos:line="202" pos:column="47"/></condition><then pos:line="202" pos:column="47"> <block pos:line="202" pos:column="48">{
					<expr_stmt><expr><name pos:line="203" pos:column="41">max<pos:position pos:line="203" pos:column="44"/></name> <operator pos:line="203" pos:column="45">=<pos:position pos:line="203" pos:column="46"/></operator> <call><name pos:line="203" pos:column="47">strlen<pos:position pos:line="203" pos:column="53"/></name><argument_list pos:line="203" pos:column="53">(<argument><expr><name pos:line="203" pos:column="54">strvalue<pos:position pos:line="203" pos:column="62"/></name></expr></argument>)<pos:position pos:line="203" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="64"/></expr_stmt>
				}<pos:position pos:line="204" pos:column="34"/></block></then></if>
				<if pos:line="205" pos:column="33">if <condition pos:line="205" pos:column="36">(<expr><name pos:line="205" pos:column="37">min<pos:position pos:line="205" pos:column="40"/></name> <operator pos:line="205" pos:column="41">&gt;<pos:position pos:line="205" pos:column="45"/></operator> <literal type="number" pos:line="205" pos:column="43">0<pos:position pos:line="205" pos:column="44"/></literal> <operator pos:line="205" pos:column="45">&amp;&amp;<pos:position pos:line="205" pos:column="55"/></operator> <name pos:line="205" pos:column="48">max<pos:position pos:line="205" pos:column="51"/></name> <operator pos:line="205" pos:column="52">&gt;=<pos:position pos:line="205" pos:column="57"/></operator> <literal type="number" pos:line="205" pos:column="55">0<pos:position pos:line="205" pos:column="56"/></literal> <operator pos:line="205" pos:column="57">&amp;&amp;<pos:position pos:line="205" pos:column="67"/></operator> <name pos:line="205" pos:column="60">min<pos:position pos:line="205" pos:column="63"/></name> <operator pos:line="205" pos:column="64">&gt;<pos:position pos:line="205" pos:column="68"/></operator> <name pos:line="205" pos:column="66">max<pos:position pos:line="205" pos:column="69"/></name></expr>)<pos:position pos:line="205" pos:column="70"/></condition><then pos:line="205" pos:column="70"> <block type="pseudo"><expr_stmt><expr><name pos:line="205" pos:column="71">max<pos:position pos:line="205" pos:column="74"/></name> <operator pos:line="205" pos:column="75">=<pos:position pos:line="205" pos:column="76"/></operator> <name pos:line="205" pos:column="77">min<pos:position pos:line="205" pos:column="80"/></name></expr>;<pos:position pos:line="205" pos:column="81"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="206" pos:column="33">fmtstr<pos:position pos:line="206" pos:column="39"/></name> <argument_list pos:line="206" pos:column="40">(<argument><expr><name pos:line="206" pos:column="41">buffer<pos:position pos:line="206" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="206" pos:column="49">&amp;<pos:position pos:line="206" pos:column="54"/></operator><name pos:line="206" pos:column="50">currlen<pos:position pos:line="206" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="59">maxlen<pos:position pos:line="206" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="67">strvalue<pos:position pos:line="206" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="77">flags<pos:position pos:line="206" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="84">min<pos:position pos:line="206" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="89">max<pos:position pos:line="206" pos:column="92"/></name></expr></argument>)<pos:position pos:line="206" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="94"/></expr_stmt>
				<break pos:line="207" pos:column="33">break;<pos:position pos:line="207" pos:column="39"/></break>
			<case pos:line="208" pos:column="25">case <expr><literal type="char" pos:line="208" pos:column="30">'p'<pos:position pos:line="208" pos:column="33"/></literal></expr>:<pos:position pos:line="208" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="209" pos:column="33">strvalue<pos:position pos:line="209" pos:column="41"/></name> <operator pos:line="209" pos:column="42">=<pos:position pos:line="209" pos:column="43"/></operator> <call><name pos:line="209" pos:column="44">va_arg<pos:position pos:line="209" pos:column="50"/></name> <argument_list pos:line="209" pos:column="51">(<argument><expr><name pos:line="209" pos:column="52">args<pos:position pos:line="209" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="58">void<pos:position pos:line="209" pos:column="62"/></name> <operator pos:line="209" pos:column="63">*<pos:position pos:line="209" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="209" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="210" pos:column="33">fmtint<pos:position pos:line="210" pos:column="39"/></name> <argument_list pos:line="210" pos:column="40">(<argument><expr><name pos:line="210" pos:column="41">buffer<pos:position pos:line="210" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="49">&amp;<pos:position pos:line="210" pos:column="54"/></operator><name pos:line="210" pos:column="50">currlen<pos:position pos:line="210" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="59">maxlen<pos:position pos:line="210" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="210" pos:column="67">(<pos:position pos:line="210" pos:column="68"/></operator><name pos:line="210" pos:column="68">long<pos:position pos:line="210" pos:column="72"/></name><operator pos:line="210" pos:column="72">)<pos:position pos:line="210" pos:column="73"/></operator> <name pos:line="210" pos:column="74">strvalue<pos:position pos:line="210" pos:column="82"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="210" pos:column="84">16<pos:position pos:line="210" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="210" pos:column="88">min<pos:position pos:line="210" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="93">max<pos:position pos:line="210" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="98">flags<pos:position pos:line="210" pos:column="103"/></name></expr></argument>)<pos:position pos:line="210" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="105"/></expr_stmt>
				<break pos:line="211" pos:column="33">break;<pos:position pos:line="211" pos:column="39"/></break>
			<case pos:line="212" pos:column="25">case <expr><literal type="char" pos:line="212" pos:column="30">'n'<pos:position pos:line="212" pos:column="33"/></literal></expr>:<pos:position pos:line="212" pos:column="34"/></case>
				<if pos:line="213" pos:column="33">if <condition pos:line="213" pos:column="36">(<expr><name pos:line="213" pos:column="37">cflags<pos:position pos:line="213" pos:column="43"/></name> <operator pos:line="213" pos:column="44">==<pos:position pos:line="213" pos:column="46"/></operator> <name pos:line="213" pos:column="47">DP_C_SHORT<pos:position pos:line="213" pos:column="57"/></name></expr>)<pos:position pos:line="213" pos:column="58"/></condition><then pos:line="213" pos:column="58"> <block pos:line="213" pos:column="59">{
					<decl_stmt><decl><type><name pos:line="214" pos:column="41">short<pos:position pos:line="214" pos:column="46"/></name> <name pos:line="214" pos:column="47">int<pos:position pos:line="214" pos:column="50"/></name> <modifier pos:line="214" pos:column="51">*<pos:position pos:line="214" pos:column="52"/></modifier></type><name pos:line="214" pos:column="52">num<pos:position pos:line="214" pos:column="55"/></name></decl>;<pos:position pos:line="214" pos:column="56"/></decl_stmt>
					<expr_stmt><expr><name pos:line="215" pos:column="41">num<pos:position pos:line="215" pos:column="44"/></name> <operator pos:line="215" pos:column="45">=<pos:position pos:line="215" pos:column="46"/></operator> <macro><name pos:line="215" pos:column="47">va_arg<pos:position pos:line="215" pos:column="53"/></name> <argument_list pos:line="215" pos:column="54">(<argument pos:line="215" pos:column="55">args<pos:position pos:line="215" pos:column="59"/></argument>, <argument pos:line="215" pos:column="61">short int *<pos:position pos:line="215" pos:column="72"/></argument>)<pos:position pos:line="215" pos:column="73"/></argument_list></macro></expr>;<pos:position pos:line="215" pos:column="74"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="216" pos:column="41">*<pos:position pos:line="216" pos:column="42"/></operator><name pos:line="216" pos:column="42">num<pos:position pos:line="216" pos:column="45"/></name> <operator pos:line="216" pos:column="46">=<pos:position pos:line="216" pos:column="47"/></operator> <name pos:line="216" pos:column="48">currlen<pos:position pos:line="216" pos:column="55"/></name></expr>;<pos:position pos:line="216" pos:column="56"/></expr_stmt>
				}<pos:position pos:line="217" pos:column="34"/></block></then> <elseif pos:line="217" pos:column="35">else <if pos:line="217" pos:column="40">if <condition pos:line="217" pos:column="43">(<expr><name pos:line="217" pos:column="44">cflags<pos:position pos:line="217" pos:column="50"/></name> <operator pos:line="217" pos:column="51">==<pos:position pos:line="217" pos:column="53"/></operator> <name pos:line="217" pos:column="54">DP_C_LONG<pos:position pos:line="217" pos:column="63"/></name></expr>)<pos:position pos:line="217" pos:column="64"/></condition><then pos:line="217" pos:column="64"> <block pos:line="217" pos:column="65">{
					<decl_stmt><decl><type><name pos:line="218" pos:column="41">long<pos:position pos:line="218" pos:column="45"/></name> <name pos:line="218" pos:column="46">int<pos:position pos:line="218" pos:column="49"/></name> <modifier pos:line="218" pos:column="50">*<pos:position pos:line="218" pos:column="51"/></modifier></type><name pos:line="218" pos:column="51">num<pos:position pos:line="218" pos:column="54"/></name></decl>;<pos:position pos:line="218" pos:column="55"/></decl_stmt>
					<expr_stmt><expr><name pos:line="219" pos:column="41">num<pos:position pos:line="219" pos:column="44"/></name> <operator pos:line="219" pos:column="45">=<pos:position pos:line="219" pos:column="46"/></operator> <macro><name pos:line="219" pos:column="47">va_arg<pos:position pos:line="219" pos:column="53"/></name> <argument_list pos:line="219" pos:column="54">(<argument pos:line="219" pos:column="55">args<pos:position pos:line="219" pos:column="59"/></argument>, <argument pos:line="219" pos:column="61">long int *<pos:position pos:line="219" pos:column="71"/></argument>)<pos:position pos:line="219" pos:column="72"/></argument_list></macro></expr>;<pos:position pos:line="219" pos:column="73"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="220" pos:column="41">*<pos:position pos:line="220" pos:column="42"/></operator><name pos:line="220" pos:column="42">num<pos:position pos:line="220" pos:column="45"/></name> <operator pos:line="220" pos:column="46">=<pos:position pos:line="220" pos:column="47"/></operator> <operator pos:line="220" pos:column="48">(<pos:position pos:line="220" pos:column="49"/></operator><name pos:line="220" pos:column="49">long<pos:position pos:line="220" pos:column="53"/></name> <name pos:line="220" pos:column="54">int<pos:position pos:line="220" pos:column="57"/></name><operator pos:line="220" pos:column="57">)<pos:position pos:line="220" pos:column="58"/></operator><name pos:line="220" pos:column="58">currlen<pos:position pos:line="220" pos:column="65"/></name></expr>;<pos:position pos:line="220" pos:column="66"/></expr_stmt>
				}<pos:position pos:line="221" pos:column="34"/></block></then></if></elseif> <elseif pos:line="221" pos:column="35">else <if pos:line="221" pos:column="40">if <condition pos:line="221" pos:column="43">(<expr><name pos:line="221" pos:column="44">cflags<pos:position pos:line="221" pos:column="50"/></name> <operator pos:line="221" pos:column="51">==<pos:position pos:line="221" pos:column="53"/></operator> <name pos:line="221" pos:column="54">DP_C_LLONG<pos:position pos:line="221" pos:column="64"/></name></expr>)<pos:position pos:line="221" pos:column="65"/></condition><then pos:line="221" pos:column="65"> <block pos:line="221" pos:column="66">{
					<decl_stmt><decl><type><name pos:line="222" pos:column="41">LLONG<pos:position pos:line="222" pos:column="46"/></name> <modifier pos:line="222" pos:column="47">*<pos:position pos:line="222" pos:column="48"/></modifier></type><name pos:line="222" pos:column="48">num<pos:position pos:line="222" pos:column="51"/></name></decl>;<pos:position pos:line="222" pos:column="52"/></decl_stmt>
					<expr_stmt><expr><name pos:line="223" pos:column="41">num<pos:position pos:line="223" pos:column="44"/></name> <operator pos:line="223" pos:column="45">=<pos:position pos:line="223" pos:column="46"/></operator> <call><name pos:line="223" pos:column="47">va_arg<pos:position pos:line="223" pos:column="53"/></name> <argument_list pos:line="223" pos:column="54">(<argument><expr><name pos:line="223" pos:column="55">args<pos:position pos:line="223" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="61">LLONG<pos:position pos:line="223" pos:column="66"/></name> <operator pos:line="223" pos:column="67">*<pos:position pos:line="223" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="223" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="70"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="224" pos:column="41">*<pos:position pos:line="224" pos:column="42"/></operator><name pos:line="224" pos:column="42">num<pos:position pos:line="224" pos:column="45"/></name> <operator pos:line="224" pos:column="46">=<pos:position pos:line="224" pos:column="47"/></operator> <operator pos:line="224" pos:column="48">(<pos:position pos:line="224" pos:column="49"/></operator><name pos:line="224" pos:column="49">LLONG<pos:position pos:line="224" pos:column="54"/></name><operator pos:line="224" pos:column="54">)<pos:position pos:line="224" pos:column="55"/></operator><name pos:line="224" pos:column="55">currlen<pos:position pos:line="224" pos:column="62"/></name></expr>;<pos:position pos:line="224" pos:column="63"/></expr_stmt>
				}<pos:position pos:line="225" pos:column="34"/></block></then></if></elseif> <else pos:line="225" pos:column="35">else <block pos:line="225" pos:column="40">{
					<decl_stmt><decl><type><name pos:line="226" pos:column="41">int<pos:position pos:line="226" pos:column="44"/></name> <modifier pos:line="226" pos:column="45">*<pos:position pos:line="226" pos:column="46"/></modifier></type><name pos:line="226" pos:column="46">num<pos:position pos:line="226" pos:column="49"/></name></decl>;<pos:position pos:line="226" pos:column="50"/></decl_stmt>
					<expr_stmt><expr><name pos:line="227" pos:column="41">num<pos:position pos:line="227" pos:column="44"/></name> <operator pos:line="227" pos:column="45">=<pos:position pos:line="227" pos:column="46"/></operator> <call><name pos:line="227" pos:column="47">va_arg<pos:position pos:line="227" pos:column="53"/></name> <argument_list pos:line="227" pos:column="54">(<argument><expr><name pos:line="227" pos:column="55">args<pos:position pos:line="227" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="61">int<pos:position pos:line="227" pos:column="64"/></name> <operator pos:line="227" pos:column="65">*<pos:position pos:line="227" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="227" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="68"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="228" pos:column="41">*<pos:position pos:line="228" pos:column="42"/></operator><name pos:line="228" pos:column="42">num<pos:position pos:line="228" pos:column="45"/></name> <operator pos:line="228" pos:column="46">=<pos:position pos:line="228" pos:column="47"/></operator> <name pos:line="228" pos:column="48">currlen<pos:position pos:line="228" pos:column="55"/></name></expr>;<pos:position pos:line="228" pos:column="56"/></expr_stmt>
				}<pos:position pos:line="229" pos:column="34"/></block></else></if>
				<break pos:line="230" pos:column="33">break;<pos:position pos:line="230" pos:column="39"/></break>
			<case pos:line="231" pos:column="25">case <expr><literal type="char" pos:line="231" pos:column="30">'%'<pos:position pos:line="231" pos:column="33"/></literal></expr>:<pos:position pos:line="231" pos:column="34"/></case>
				<expr_stmt><expr><call><name pos:line="232" pos:column="33">dopr_outch<pos:position pos:line="232" pos:column="43"/></name> <argument_list pos:line="232" pos:column="44">(<argument><expr><name pos:line="232" pos:column="45">buffer<pos:position pos:line="232" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="232" pos:column="53">&amp;<pos:position pos:line="232" pos:column="58"/></operator><name pos:line="232" pos:column="54">currlen<pos:position pos:line="232" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="63">maxlen<pos:position pos:line="232" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="71">ch<pos:position pos:line="232" pos:column="73"/></name></expr></argument>)<pos:position pos:line="232" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="75"/></expr_stmt>
				<break pos:line="233" pos:column="33">break;<pos:position pos:line="233" pos:column="39"/></break>
			<case pos:line="234" pos:column="25">case <expr><literal type="char" pos:line="234" pos:column="30">'w'<pos:position pos:line="234" pos:column="33"/></literal></expr>:<pos:position pos:line="234" pos:column="34"/></case>
				<comment type="block" pos:line="235" pos:column="33">/* not supported yet, treat as next char */</comment>
				<expr_stmt><expr><name pos:line="236" pos:column="33">ch<pos:position pos:line="236" pos:column="35"/></name> <operator pos:line="236" pos:column="36">=<pos:position pos:line="236" pos:column="37"/></operator> <operator pos:line="236" pos:column="38">*<pos:position pos:line="236" pos:column="39"/></operator><name pos:line="236" pos:column="39">format<pos:position pos:line="236" pos:column="45"/></name><operator pos:line="236" pos:column="45">++<pos:position pos:line="236" pos:column="47"/></operator></expr>;<pos:position pos:line="236" pos:column="48"/></expr_stmt>
				<break pos:line="237" pos:column="33">break;<pos:position pos:line="237" pos:column="39"/></break>
			<default pos:line="238" pos:column="25">default:<pos:position pos:line="238" pos:column="33"/></default>
				<comment type="block" pos:line="239" pos:column="33">/* Unknown, skip */</comment>
				<break pos:line="240" pos:column="33">break;<pos:position pos:line="240" pos:column="39"/></break>
			}<pos:position pos:line="241" pos:column="26"/></block></switch>
			<expr_stmt><expr><name pos:line="242" pos:column="25">ch<pos:position pos:line="242" pos:column="27"/></name> <operator pos:line="242" pos:column="28">=<pos:position pos:line="242" pos:column="29"/></operator> <operator pos:line="242" pos:column="30">*<pos:position pos:line="242" pos:column="31"/></operator><name pos:line="242" pos:column="31">format<pos:position pos:line="242" pos:column="37"/></name><operator pos:line="242" pos:column="37">++<pos:position pos:line="242" pos:column="39"/></operator></expr>;<pos:position pos:line="242" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="243" pos:column="25">state<pos:position pos:line="243" pos:column="30"/></name> <operator pos:line="243" pos:column="31">=<pos:position pos:line="243" pos:column="32"/></operator> <name pos:line="243" pos:column="33">DP_S_DEFAULT<pos:position pos:line="243" pos:column="45"/></name></expr>;<pos:position pos:line="243" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="244" pos:column="25">flags<pos:position pos:line="244" pos:column="30"/></name> <operator pos:line="244" pos:column="31">=<pos:position pos:line="244" pos:column="32"/></operator> <name pos:line="244" pos:column="33">cflags<pos:position pos:line="244" pos:column="39"/></name> <operator pos:line="244" pos:column="40">=<pos:position pos:line="244" pos:column="41"/></operator> <name pos:line="244" pos:column="42">min<pos:position pos:line="244" pos:column="45"/></name> <operator pos:line="244" pos:column="46">=<pos:position pos:line="244" pos:column="47"/></operator> <literal type="number" pos:line="244" pos:column="48">0<pos:position pos:line="244" pos:column="49"/></literal></expr>;<pos:position pos:line="244" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="245" pos:column="25">max<pos:position pos:line="245" pos:column="28"/></name> <operator pos:line="245" pos:column="29">=<pos:position pos:line="245" pos:column="30"/></operator> <operator pos:line="245" pos:column="31">-<pos:position pos:line="245" pos:column="32"/></operator><literal type="number" pos:line="245" pos:column="32">1<pos:position pos:line="245" pos:column="33"/></literal></expr>;<pos:position pos:line="245" pos:column="34"/></expr_stmt>
			<break pos:line="246" pos:column="25">break;<pos:position pos:line="246" pos:column="31"/></break>
		<case pos:line="247" pos:column="17">case <expr><name pos:line="247" pos:column="22">DP_S_DONE<pos:position pos:line="247" pos:column="31"/></name></expr>:<pos:position pos:line="247" pos:column="32"/></case>
			<break pos:line="248" pos:column="25">break;<pos:position pos:line="248" pos:column="31"/></break>
		<default pos:line="249" pos:column="17">default:<pos:position pos:line="249" pos:column="25"/></default>
			<comment type="block" pos:line="250" pos:column="25">/* hmm? */</comment>
			<break pos:line="251" pos:column="25">break;<pos:position pos:line="251" pos:column="31"/></break> <comment type="block" pos:line="251" pos:column="32">/* some picky compilers need this */</comment>
		}<pos:position pos:line="252" pos:column="18"/></block></switch>
	}<pos:position pos:line="253" pos:column="10"/></block></while>
	<if pos:line="254" pos:column="9">if <condition pos:line="254" pos:column="12">(<expr><name pos:line="254" pos:column="13">maxlen<pos:position pos:line="254" pos:column="19"/></name> <operator pos:line="254" pos:column="20">!=<pos:position pos:line="254" pos:column="22"/></operator> <literal type="number" pos:line="254" pos:column="23">0<pos:position pos:line="254" pos:column="24"/></literal></expr>)<pos:position pos:line="254" pos:column="25"/></condition><then pos:line="254" pos:column="25"> <block pos:line="254" pos:column="26">{
		<if pos:line="255" pos:column="17">if <condition pos:line="255" pos:column="20">(<expr><name pos:line="255" pos:column="21">currlen<pos:position pos:line="255" pos:column="28"/></name> <operator pos:line="255" pos:column="29">&lt;<pos:position pos:line="255" pos:column="33"/></operator> <name pos:line="255" pos:column="31">maxlen<pos:position pos:line="255" pos:column="37"/></name> <operator pos:line="255" pos:column="38">-<pos:position pos:line="255" pos:column="39"/></operator> <literal type="number" pos:line="255" pos:column="40">1<pos:position pos:line="255" pos:column="41"/></literal></expr>)<pos:position pos:line="255" pos:column="42"/></condition><then pos:line="255" pos:column="42"> 
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="256" pos:column="25">buffer<pos:position pos:line="256" pos:column="31"/></name><index pos:line="256" pos:column="31">[<expr><name pos:line="256" pos:column="32">currlen<pos:position pos:line="256" pos:column="39"/></name></expr>]<pos:position pos:line="256" pos:column="40"/></index></name> <operator pos:line="256" pos:column="41">=<pos:position pos:line="256" pos:column="42"/></operator> <literal type="char" pos:line="256" pos:column="43">'\0'<pos:position pos:line="256" pos:column="47"/></literal></expr>;<pos:position pos:line="256" pos:column="48"/></expr_stmt></block></then>
		<elseif pos:line="257" pos:column="17">else <if pos:line="257" pos:column="22">if <condition pos:line="257" pos:column="25">(<expr><name pos:line="257" pos:column="26">maxlen<pos:position pos:line="257" pos:column="32"/></name> <operator pos:line="257" pos:column="33">&gt;<pos:position pos:line="257" pos:column="37"/></operator> <literal type="number" pos:line="257" pos:column="35">0<pos:position pos:line="257" pos:column="36"/></literal></expr>)<pos:position pos:line="257" pos:column="37"/></condition><then pos:line="257" pos:column="37"> 
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="258" pos:column="25">buffer<pos:position pos:line="258" pos:column="31"/></name><index pos:line="258" pos:column="31">[<expr><name pos:line="258" pos:column="32">maxlen<pos:position pos:line="258" pos:column="38"/></name> <operator pos:line="258" pos:column="39">-<pos:position pos:line="258" pos:column="40"/></operator> <literal type="number" pos:line="258" pos:column="41">1<pos:position pos:line="258" pos:column="42"/></literal></expr>]<pos:position pos:line="258" pos:column="43"/></index></name> <operator pos:line="258" pos:column="44">=<pos:position pos:line="258" pos:column="45"/></operator> <literal type="char" pos:line="258" pos:column="46">'\0'<pos:position pos:line="258" pos:column="50"/></literal></expr>;<pos:position pos:line="258" pos:column="51"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="259" pos:column="10"/></block></then></if>
	
	<return pos:line="261" pos:column="9">return <expr><name pos:line="261" pos:column="16">currlen<pos:position pos:line="261" pos:column="23"/></name></expr>;<pos:position pos:line="261" pos:column="24"/></return>
}<pos:position pos:line="262" pos:column="2"/></block></function></unit>

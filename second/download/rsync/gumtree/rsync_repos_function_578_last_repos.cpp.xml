<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_578_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">wait_process_with_flush<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">pid_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">pid<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">exit_code_ptr<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">pid_t<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">waited_pid<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">status<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">waited_pid<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">=<pos:position pos:line="6" pos:column="29"/></operator> <call><name pos:line="6" pos:column="30">wait_process<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name pos:line="6" pos:column="43">pid<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="48">&amp;<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="49">status<pos:position pos:line="6" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="57">WNOHANG<pos:position pos:line="6" pos:column="64"/></name></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call><operator pos:line="6" pos:column="65">)<pos:position pos:line="6" pos:column="66"/></operator> <operator pos:line="6" pos:column="67">==<pos:position pos:line="6" pos:column="69"/></operator> <literal type="number" pos:line="6" pos:column="70">0<pos:position pos:line="6" pos:column="71"/></literal></expr>)<pos:position pos:line="6" pos:column="72"/></condition> <block pos:line="6" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">msleep<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><literal type="number" pos:line="7" pos:column="24">20<pos:position pos:line="7" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">io_flush<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">FULL_FLUSH<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></while>

	<comment type="block" pos:line="11" pos:column="9">/* TODO: If the child exited on a signal, then log an
	 * appropriate error message.  Perhaps we should also accept a
	 * message describing the purpose of the child.  Also indicate
	 * this to the caller so that they know something went wrong. */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">waited_pid<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28"> <block pos:line="15" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">rsyserr<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">FERROR<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">errno<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="40">"waitpid"<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">exit_code_ptr<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">RERR_WAITCHILD<pos:position pos:line="17" pos:column="48"/></name></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><operator pos:line="18" pos:column="20">!<pos:position pos:line="18" pos:column="21"/></operator><call><name pos:line="18" pos:column="21">WIFEXITED<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">status<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">WCOREDUMP<pos:position pos:line="19" pos:column="17"/></name></cpp:ifdef>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">WCOREDUMP<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">status<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">exit_code_ptr<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">=<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="42">RERR_CRASHED<pos:position pos:line="21" pos:column="54"/></name></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt></block></then>
		<elseif pos:line="22" pos:column="17">else
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">WIFSIGNALED<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">status<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="25">*<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">exit_code_ptr<pos:position pos:line="25" pos:column="39"/></name> <operator pos:line="25" pos:column="40">=<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="42">RERR_TERMINATED<pos:position pos:line="25" pos:column="57"/></name></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt></block></then></if></elseif>
		<else pos:line="26" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">exit_code_ptr<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="42">RERR_WAITCHILD<pos:position pos:line="27" pos:column="56"/></name></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt></block></else></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif> <else pos:line="28" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">exit_code_ptr<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <call><name pos:line="29" pos:column="34">WEXITSTATUS<pos:position pos:line="29" pos:column="45"/></name><argument_list pos:line="29" pos:column="45">(<argument><expr><name pos:line="29" pos:column="46">status<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt></block></else></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_111.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier><modifier pos:line="1" pos:column="7">*<pos:position pos:line="1" pos:column="8"/></modifier></type><name pos:line="1" pos:column="8">make_exclude_list<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fname<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">list1<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">fatal<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">list<pos:position pos:line="3" pos:column="14"/></name><init pos:line="3" pos:column="14">=<expr><name pos:line="3" pos:column="15">list1<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">FILE<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">f<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><call><name pos:line="4" pos:column="13">fopen<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">fname<pos:position pos:line="4" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="4" pos:column="25">"r"<pos:position pos:line="4" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">line<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">MAXPATHLEN<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">f<pos:position pos:line="6" pos:column="9"/></name></expr>)<pos:position pos:line="6" pos:column="10"/></condition><then pos:line="6" pos:column="10"> <block pos:line="6" pos:column="11">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">fatal<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">fprintf<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">stderr<pos:position pos:line="8" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="8" pos:column="22">"%s : %s\n"<pos:position pos:line="8" pos:column="33"/></literal></expr></argument>,<argument><expr><name pos:line="8" pos:column="34">fname<pos:position pos:line="8" pos:column="39"/></name></expr></argument>,<argument><expr><call><name pos:line="8" pos:column="40">strerror<pos:position pos:line="8" pos:column="48"/></name><argument_list pos:line="8" pos:column="48">(<argument><expr><name pos:line="8" pos:column="49">errno<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">exit_cleanup<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">list<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><call><name pos:line="14" pos:column="10">fgets<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">line<pos:position pos:line="14" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="14" pos:column="21">MAXPATHLEN<pos:position pos:line="14" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="14" pos:column="32">f<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition> <block pos:line="14" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">l<pos:position pos:line="15" pos:column="10"/></name> <init pos:line="15" pos:column="11">= <expr><call><name pos:line="15" pos:column="13">strlen<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">line<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">l<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">&amp;&amp;<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="14">line<pos:position pos:line="16" pos:column="18"/></name><index pos:line="16" pos:column="18">[<expr><name pos:line="16" pos:column="19">l<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-<pos:position pos:line="16" pos:column="21"/></operator><literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>]<pos:position pos:line="16" pos:column="23"/></index></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <literal type="char" pos:line="16" pos:column="27">'\n'<pos:position pos:line="16" pos:column="31"/></literal></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="33">l<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">--<pos:position pos:line="16" pos:column="36"/></operator></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">line<pos:position pos:line="17" pos:column="9"/></name><index pos:line="17" pos:column="9">[<expr><name pos:line="17" pos:column="10">l<pos:position pos:line="17" pos:column="11"/></name></expr>]<pos:position pos:line="17" pos:column="12"/></index></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">line<pos:position pos:line="18" pos:column="13"/></name><index pos:line="18" pos:column="13">[<expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>]<pos:position pos:line="18" pos:column="16"/></index></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="18">add_exclude_list<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">line<pos:position pos:line="18" pos:column="39"/></name></expr></argument>,<argument><expr><operator pos:line="18" pos:column="40">&amp;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="41">list<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt></block></then></if>
  }<pos:position pos:line="19" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">fclose<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">f<pos:position pos:line="20" pos:column="11"/></name></expr></argument>)<pos:position pos:line="20" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">list<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

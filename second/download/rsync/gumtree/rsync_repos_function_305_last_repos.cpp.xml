<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_305_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">itemize<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">fnamecmp<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">file_struct<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">file<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">ndx<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">statret<pos:position pos:line="1" pos:column="82"/></name></decl></parameter>,
	     <parameter><decl><type><name pos:line="2" pos:column="14">stat_x<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">sxp<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">int32<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">iflags<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">uchar<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">fnamecmp_type<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
	     <parameter><decl><type><specifier pos:line="3" pos:column="14">const<pos:position pos:line="3" pos:column="19"/></specifier> <name pos:line="3" pos:column="20">char<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">xname<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="32"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">statret<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&gt;=<pos:position pos:line="5" pos:column="26"/></operator> <literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{ <comment type="block" pos:line="5" pos:column="29">/* A from-dest-dir statret can == 1! */</comment>
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">keep_time<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><ternary><condition><expr><operator pos:line="6" pos:column="33">!<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">preserve_times<pos:position pos:line="6" pos:column="48"/></name></expr> ?<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50"> <expr><literal type="number" pos:line="6" pos:column="51">0<pos:position pos:line="6" pos:column="52"/></literal></expr>
		    <pos:position pos:line="7" pos:column="7"/></then><else pos:line="7" pos:column="21">: <expr><ternary><condition><expr><call><name pos:line="7" pos:column="23">S_ISDIR<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name><name pos:line="7" pos:column="31">file<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">mode<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <expr><name pos:line="7" pos:column="45">preserve_times<pos:position pos:line="7" pos:column="59"/></name> <operator pos:line="7" pos:column="60">&amp;<pos:position pos:line="7" pos:column="65"/></operator> <name pos:line="7" pos:column="62">PRESERVE_DIR_TIMES<pos:position pos:line="7" pos:column="80"/></name></expr>
		    <pos:position pos:line="8" pos:column="7"/></then><else pos:line="8" pos:column="21">: <expr><ternary><condition><expr><call><name pos:line="8" pos:column="23">S_ISLNK<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name><name pos:line="8" pos:column="31">file<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">mode<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <expr><name pos:line="8" pos:column="45">preserve_times<pos:position pos:line="8" pos:column="59"/></name> <operator pos:line="8" pos:column="60">&amp;<pos:position pos:line="8" pos:column="65"/></operator> <name pos:line="8" pos:column="62">PRESERVE_LINK_TIMES<pos:position pos:line="8" pos:column="81"/></name></expr>
		    <pos:position pos:line="9" pos:column="7"/></then><else pos:line="9" pos:column="21">: <expr><literal type="number" pos:line="9" pos:column="23">1<pos:position pos:line="9" pos:column="24"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>

		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">S_ISREG<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name><name pos:line="11" pos:column="29">file<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">mode<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <call><name pos:line="11" pos:column="44">F_LENGTH<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">(<argument><expr><name pos:line="11" pos:column="53">file<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call> <operator pos:line="11" pos:column="59">!=<pos:position pos:line="11" pos:column="61"/></operator> <name><name pos:line="11" pos:column="62">sxp<pos:position pos:line="11" pos:column="65"/></name><operator pos:line="11" pos:column="65">-&gt;<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="67">st<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">.<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="70">st_size<pos:position pos:line="11" pos:column="77"/></name></name></expr>)<pos:position pos:line="11" pos:column="78"/></condition><then pos:line="11" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">iflags<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">|=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">ITEM_REPORT_SIZE<pos:position pos:line="12" pos:column="51"/></name></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name><name pos:line="13" pos:column="21">file<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">flags<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">&amp;<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="35">FLAG_TIME_FAILED<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52"> <block pos:line="13" pos:column="53">{ <comment type="block" pos:line="13" pos:column="55">/* symlinks only */</comment>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">iflags<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="38">ITEM_LOCAL_CHANGE<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
				<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="33">iflags<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">|=<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">symlink_timeset_failed_flags<pos:position pos:line="15" pos:column="71"/></name></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt></block></then></if>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <elseif pos:line="16" pos:column="19">else <if pos:line="16" pos:column="24">if <condition pos:line="16" pos:column="27">(<expr><ternary><condition><expr><name pos:line="16" pos:column="28">keep_time<pos:position pos:line="16" pos:column="37"/></name></expr>
		 ?<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <expr><call><name pos:line="17" pos:column="20">cmp_time<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name><name pos:line="17" pos:column="29">file<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">modtime<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="44">sxp<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">-&gt;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="49">st<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">.<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">st_mtime<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call> <operator pos:line="17" pos:column="62">!=<pos:position pos:line="17" pos:column="64"/></operator> <literal type="number" pos:line="17" pos:column="65">0<pos:position pos:line="17" pos:column="66"/></literal></expr>
		 <pos:position pos:line="18" pos:column="4"/></then><else pos:line="18" pos:column="18">: <expr><name pos:line="18" pos:column="20">iflags<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&amp;<pos:position pos:line="18" pos:column="32"/></operator> <operator pos:line="18" pos:column="29">(<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">ITEM_TRANSFER<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">|<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="44">ITEM_LOCAL_CHANGE<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">)<pos:position pos:line="18" pos:column="62"/></operator> <operator pos:line="18" pos:column="63">&amp;&amp;<pos:position pos:line="18" pos:column="73"/></operator> <operator pos:line="18" pos:column="66">!<pos:position pos:line="18" pos:column="67"/></operator><operator pos:line="18" pos:column="67">(<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="68">iflags<pos:position pos:line="18" pos:column="74"/></name> <operator pos:line="18" pos:column="75">&amp;<pos:position pos:line="18" pos:column="80"/></operator> <name pos:line="18" pos:column="77">ITEM_MATCHED<pos:position pos:line="18" pos:column="89"/></name><operator pos:line="18" pos:column="89">)<pos:position pos:line="18" pos:column="90"/></operator>
		  <operator pos:line="19" pos:column="19">&amp;&amp;<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="22">(<pos:position pos:line="19" pos:column="23"/></operator><operator pos:line="19" pos:column="23">!<pos:position pos:line="19" pos:column="24"/></operator><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">iflags<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="34">ITEM_XNAME_FOLLOWS<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator> <operator pos:line="19" pos:column="54">||<pos:position pos:line="19" pos:column="56"/></operator> <operator pos:line="19" pos:column="57">*<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="58">xname<pos:position pos:line="19" pos:column="63"/></name><operator pos:line="19" pos:column="63">)<pos:position pos:line="19" pos:column="64"/></operator></expr></else></ternary></expr>)<pos:position pos:line="19" pos:column="65"/></condition><then pos:line="19" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">iflags<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">|=<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="35">ITEM_REPORT_TIME<pos:position pos:line="20" pos:column="51"/></name></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt></block></then></if></elseif></if>
<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><operator pos:line="21" pos:column="5">!<pos:position pos:line="21" pos:column="6"/></operator><name pos:line="21" pos:column="6">defined<pos:position pos:line="21" pos:column="13"/></name> <name pos:line="21" pos:column="14">HAVE_LCHMOD<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">&amp;&amp;<pos:position pos:line="21" pos:column="36"/></operator> <operator pos:line="21" pos:column="29">!<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">defined<pos:position pos:line="21" pos:column="37"/></name> <name pos:line="21" pos:column="38">HAVE_SETATTRLIST<pos:position pos:line="21" pos:column="54"/></name></expr></cpp:if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">S_ISLNK<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name><name pos:line="22" pos:column="29">file<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">mode<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
			<empty_stmt pos:line="23" pos:column="25">;<pos:position pos:line="23" pos:column="26"/></empty_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then> <elseif pos:line="24" pos:column="19">else
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">preserve_perms<pos:position pos:line="26" pos:column="35"/></name></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <block pos:line="26" pos:column="37">{
			<if pos:line="27" pos:column="25">if <condition pos:line="27" pos:column="28">(<expr><operator pos:line="27" pos:column="29">!<pos:position pos:line="27" pos:column="30"/></operator><call><name pos:line="27" pos:column="30">BITS_EQUAL<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name><name pos:line="27" pos:column="41">sxp<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">st<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">.<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="49">st_mode<pos:position pos:line="27" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="58">file<pos:position pos:line="27" pos:column="62"/></name><operator pos:line="27" pos:column="62">-&gt;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="64">mode<pos:position pos:line="27" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="70">CHMOD_BITS<pos:position pos:line="27" pos:column="80"/></name></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="82"/></condition><then pos:line="27" pos:column="82">
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">iflags<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">|=<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="43">ITEM_REPORT_PERMS<pos:position pos:line="28" pos:column="60"/></name></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt></block></then></if>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if></elseif> <elseif pos:line="29" pos:column="19">else <if pos:line="29" pos:column="24">if <condition pos:line="29" pos:column="27">(<expr><name pos:line="29" pos:column="28">preserve_executability<pos:position pos:line="29" pos:column="50"/></name>
		 <operator pos:line="30" pos:column="18">&amp;&amp;<pos:position pos:line="30" pos:column="28"/></operator> <operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><ternary><condition><expr><name><name pos:line="30" pos:column="23">sxp<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">st<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">.<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">st_mode<pos:position pos:line="30" pos:column="38"/></name></name> <operator pos:line="30" pos:column="39">&amp;<pos:position pos:line="30" pos:column="44"/></operator> <literal type="number" pos:line="30" pos:column="41">0111<pos:position pos:line="30" pos:column="45"/></literal></expr> ?<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47"> <expr><literal type="number" pos:line="30" pos:column="48">1<pos:position pos:line="30" pos:column="49"/></literal></expr> <pos:position pos:line="30" pos:column="50"/></then><else pos:line="30" pos:column="50">: <expr><literal type="number" pos:line="30" pos:column="52">0<pos:position pos:line="30" pos:column="53"/></literal></expr></else></ternary><operator pos:line="30" pos:column="53">)<pos:position pos:line="30" pos:column="54"/></operator> <operator pos:line="30" pos:column="55">^<pos:position pos:line="30" pos:column="56"/></operator> <operator pos:line="30" pos:column="57">(<pos:position pos:line="30" pos:column="58"/></operator><ternary><condition><expr><name><name pos:line="30" pos:column="58">file<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">-&gt;<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="64">mode<pos:position pos:line="30" pos:column="68"/></name></name> <operator pos:line="30" pos:column="69">&amp;<pos:position pos:line="30" pos:column="74"/></operator> <literal type="number" pos:line="30" pos:column="71">0111<pos:position pos:line="30" pos:column="75"/></literal></expr> ?<pos:position pos:line="30" pos:column="77"/></condition><then pos:line="30" pos:column="77"> <expr><literal type="number" pos:line="30" pos:column="78">1<pos:position pos:line="30" pos:column="79"/></literal></expr> <pos:position pos:line="30" pos:column="80"/></then><else pos:line="30" pos:column="80">: <expr><literal type="number" pos:line="30" pos:column="82">0<pos:position pos:line="30" pos:column="83"/></literal></expr></else></ternary><operator pos:line="30" pos:column="83">)<pos:position pos:line="30" pos:column="84"/></operator><operator pos:line="30" pos:column="84">)<pos:position pos:line="30" pos:column="85"/></operator></expr>)<pos:position pos:line="30" pos:column="86"/></condition><then pos:line="30" pos:column="86">
			<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="25">iflags<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">|=<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="35">ITEM_REPORT_PERMS<pos:position pos:line="31" pos:column="52"/></name></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">uid_ndx<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">&amp;&amp;<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="32">am_root<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">&amp;&amp;<pos:position pos:line="32" pos:column="50"/></operator> <operator pos:line="32" pos:column="43">(<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">uid_t<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">)<pos:position pos:line="32" pos:column="50"/></operator><call><name pos:line="32" pos:column="50">F_OWNER<pos:position pos:line="32" pos:column="57"/></name><argument_list pos:line="32" pos:column="57">(<argument><expr><name pos:line="32" pos:column="58">file<pos:position pos:line="32" pos:column="62"/></name></expr></argument>)<pos:position pos:line="32" pos:column="63"/></argument_list></call> <operator pos:line="32" pos:column="64">!=<pos:position pos:line="32" pos:column="66"/></operator> <name><name pos:line="32" pos:column="67">sxp<pos:position pos:line="32" pos:column="70"/></name><operator pos:line="32" pos:column="70">-&gt;<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="72">st<pos:position pos:line="32" pos:column="74"/></name><operator pos:line="32" pos:column="74">.<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="75">st_uid<pos:position pos:line="32" pos:column="81"/></name></name></expr>)<pos:position pos:line="32" pos:column="82"/></condition><then pos:line="32" pos:column="82">
			<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="25">iflags<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">|=<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">ITEM_REPORT_OWNER<pos:position pos:line="33" pos:column="52"/></name></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">gid_ndx<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">&amp;&amp;<pos:position pos:line="34" pos:column="39"/></operator> <operator pos:line="34" pos:column="32">!<pos:position pos:line="34" pos:column="33"/></operator><operator pos:line="34" pos:column="33">(<pos:position pos:line="34" pos:column="34"/></operator><name><name pos:line="34" pos:column="34">file<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">flags<pos:position pos:line="34" pos:column="45"/></name></name> <operator pos:line="34" pos:column="46">&amp;<pos:position pos:line="34" pos:column="51"/></operator> <name pos:line="34" pos:column="48">FLAG_SKIP_GROUP<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">)<pos:position pos:line="34" pos:column="64"/></operator>
		    <operator pos:line="35" pos:column="21">&amp;&amp;<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="24">sxp<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">st<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">.<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">st_gid<pos:position pos:line="35" pos:column="38"/></name></name> <operator pos:line="35" pos:column="39">!=<pos:position pos:line="35" pos:column="41"/></operator> <operator pos:line="35" pos:column="42">(<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="43">gid_t<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">)<pos:position pos:line="35" pos:column="49"/></operator><call><name pos:line="35" pos:column="49">F_GROUP<pos:position pos:line="35" pos:column="56"/></name><argument_list pos:line="35" pos:column="56">(<argument><expr><name pos:line="35" pos:column="57">file<pos:position pos:line="35" pos:column="61"/></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="63"/></condition><then pos:line="35" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="25">iflags<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">|=<pos:position pos:line="36" pos:column="34"/></operator> <name pos:line="36" pos:column="35">ITEM_REPORT_GROUP<pos:position pos:line="36" pos:column="52"/></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">SUPPORT_ACLS<pos:position pos:line="37" pos:column="20"/></name></cpp:ifdef>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">preserve_acls<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">&amp;&amp;<pos:position pos:line="38" pos:column="45"/></operator> <operator pos:line="38" pos:column="38">!<pos:position pos:line="38" pos:column="39"/></operator><call><name pos:line="38" pos:column="39">S_ISLNK<pos:position pos:line="38" pos:column="46"/></name><argument_list pos:line="38" pos:column="46">(<argument><expr><name><name pos:line="38" pos:column="47">file<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">-&gt;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="53">mode<pos:position pos:line="38" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="59"/></condition><then pos:line="38" pos:column="59"> <block pos:line="38" pos:column="60">{
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">!<pos:position pos:line="39" pos:column="30"/></operator><call><name pos:line="39" pos:column="30">ACL_READY<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><operator pos:line="39" pos:column="40">*<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">sxp<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="46"/></condition><then pos:line="39" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="33">get_acl<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">fnamecmp<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">sxp<pos:position pos:line="40" pos:column="54"/></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if>
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><call><name pos:line="41" pos:column="29">set_acl<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">NULL<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">file<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">sxp<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="54">file<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">-&gt;<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="60">mode<pos:position pos:line="41" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="66"/></condition><then pos:line="41" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="33">iflags<pos:position pos:line="42" pos:column="39"/></name> <operator pos:line="42" pos:column="40">|=<pos:position pos:line="42" pos:column="42"/></operator> <name pos:line="42" pos:column="43">ITEM_REPORT_ACL<pos:position pos:line="42" pos:column="58"/></name></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="45" pos:column="22"/></name></cpp:ifdef>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">preserve_xattrs<pos:position pos:line="46" pos:column="36"/></name></expr>)<pos:position pos:line="46" pos:column="37"/></condition><then pos:line="46" pos:column="37"> <block pos:line="46" pos:column="38">{
			<if pos:line="47" pos:column="25">if <condition pos:line="47" pos:column="28">(<expr><operator pos:line="47" pos:column="29">!<pos:position pos:line="47" pos:column="30"/></operator><call><name pos:line="47" pos:column="30">XATTR_READY<pos:position pos:line="47" pos:column="41"/></name><argument_list pos:line="47" pos:column="41">(<argument><expr><operator pos:line="47" pos:column="42">*<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">sxp<pos:position pos:line="47" pos:column="46"/></name></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="48"/></condition><then pos:line="47" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="33">get_xattr<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">fnamecmp<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">sxp<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt></block></then></if>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><call><name pos:line="49" pos:column="29">xattr_diff<pos:position pos:line="49" pos:column="39"/></name><argument_list pos:line="49" pos:column="39">(<argument><expr><name pos:line="49" pos:column="40">file<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">sxp<pos:position pos:line="49" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="51">1<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="54"/></condition><then pos:line="49" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="33">iflags<pos:position pos:line="50" pos:column="39"/></name> <operator pos:line="50" pos:column="40">|=<pos:position pos:line="50" pos:column="42"/></operator> <name pos:line="50" pos:column="43">ITEM_REPORT_XATTR<pos:position pos:line="50" pos:column="60"/></name></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt></block></then></if>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="53" pos:column="10"/></block></then> <else pos:line="53" pos:column="11">else <block pos:line="53" pos:column="16">{
<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="54" pos:column="22"/></name></cpp:ifdef>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">preserve_xattrs<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">&amp;&amp;<pos:position pos:line="55" pos:column="47"/></operator> <call><name pos:line="55" pos:column="40">xattr_diff<pos:position pos:line="55" pos:column="50"/></name><argument_list pos:line="55" pos:column="50">(<argument><expr><name pos:line="55" pos:column="51">file<pos:position pos:line="55" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">NULL<pos:position pos:line="55" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="63">1<pos:position pos:line="55" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="25">iflags<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">|=<pos:position pos:line="56" pos:column="34"/></operator> <name pos:line="56" pos:column="35">ITEM_REPORT_XATTR<pos:position pos:line="56" pos:column="52"/></name></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt></block></then></if>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
		<expr_stmt><expr><name pos:line="58" pos:column="17">iflags<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">|=<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">ITEM_IS_NEW<pos:position pos:line="58" pos:column="38"/></name></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="61" pos:column="9">iflags<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">&amp;=<pos:position pos:line="61" pos:column="22"/></operator> <literal type="number" pos:line="61" pos:column="19">0xffff<pos:position pos:line="61" pos:column="25"/></literal></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">iflags<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">&amp;<pos:position pos:line="62" pos:column="26"/></operator> <operator pos:line="62" pos:column="23">(<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="24">SIGNIFICANT_ITEM_FLAGS<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">|<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="47">ITEM_REPORT_XATTR<pos:position pos:line="62" pos:column="64"/></name><operator pos:line="62" pos:column="64">)<pos:position pos:line="62" pos:column="65"/></operator> <operator pos:line="62" pos:column="66">||<pos:position pos:line="62" pos:column="68"/></operator> <call><name pos:line="62" pos:column="69">INFO_GTE<pos:position pos:line="62" pos:column="77"/></name><argument_list pos:line="62" pos:column="77">(<argument><expr><name pos:line="62" pos:column="78">NAME<pos:position pos:line="62" pos:column="82"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="84">2<pos:position pos:line="62" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="86"/></argument_list></call>
	  <operator pos:line="63" pos:column="11">||<pos:position pos:line="63" pos:column="13"/></operator> <name pos:line="63" pos:column="14">stdout_format_has_i<pos:position pos:line="63" pos:column="33"/></name> <operator pos:line="63" pos:column="34">&gt;<pos:position pos:line="63" pos:column="38"/></operator> <literal type="number" pos:line="63" pos:column="36">1<pos:position pos:line="63" pos:column="37"/></literal> <operator pos:line="63" pos:column="38">||<pos:position pos:line="63" pos:column="40"/></operator> <operator pos:line="63" pos:column="41">(<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">xname<pos:position pos:line="63" pos:column="47"/></name> <operator pos:line="63" pos:column="48">&amp;&amp;<pos:position pos:line="63" pos:column="58"/></operator> <operator pos:line="63" pos:column="51">*<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="52">xname<pos:position pos:line="63" pos:column="57"/></name><operator pos:line="63" pos:column="57">)<pos:position pos:line="63" pos:column="58"/></operator><operator pos:line="63" pos:column="58">)<pos:position pos:line="63" pos:column="59"/></operator> <operator pos:line="63" pos:column="60">&amp;&amp;<pos:position pos:line="63" pos:column="70"/></operator> <operator pos:line="63" pos:column="63">!<pos:position pos:line="63" pos:column="64"/></operator><name pos:line="63" pos:column="64">read_batch<pos:position pos:line="63" pos:column="74"/></name></expr>)<pos:position pos:line="63" pos:column="75"/></condition><then pos:line="63" pos:column="75"> <block pos:line="63" pos:column="76">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">protocol_version<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">&gt;=<pos:position pos:line="64" pos:column="43"/></operator> <literal type="number" pos:line="64" pos:column="41">29<pos:position pos:line="64" pos:column="43"/></literal></expr>)<pos:position pos:line="64" pos:column="44"/></condition><then pos:line="64" pos:column="44"> <block pos:line="64" pos:column="45">{
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">ndx<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">&gt;=<pos:position pos:line="65" pos:column="38"/></operator> <literal type="number" pos:line="65" pos:column="36">0<pos:position pos:line="65" pos:column="37"/></literal></expr>)<pos:position pos:line="65" pos:column="38"/></condition><then pos:line="65" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="33">write_ndx<pos:position pos:line="66" pos:column="42"/></name><argument_list pos:line="66" pos:column="42">(<argument><expr><name pos:line="66" pos:column="43">sock_f_out<pos:position pos:line="66" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="55">ndx<pos:position pos:line="66" pos:column="58"/></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">write_shortint<pos:position pos:line="67" pos:column="39"/></name><argument_list pos:line="67" pos:column="39">(<argument><expr><name pos:line="67" pos:column="40">sock_f_out<pos:position pos:line="67" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="52">iflags<pos:position pos:line="67" pos:column="58"/></name></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><name pos:line="68" pos:column="29">iflags<pos:position pos:line="68" pos:column="35"/></name> <operator pos:line="68" pos:column="36">&amp;<pos:position pos:line="68" pos:column="41"/></operator> <name pos:line="68" pos:column="38">ITEM_BASIS_TYPE_FOLLOWS<pos:position pos:line="68" pos:column="61"/></name></expr>)<pos:position pos:line="68" pos:column="62"/></condition><then pos:line="68" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="33">write_byte<pos:position pos:line="69" pos:column="43"/></name><argument_list pos:line="69" pos:column="43">(<argument><expr><name pos:line="69" pos:column="44">sock_f_out<pos:position pos:line="69" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="56">fnamecmp_type<pos:position pos:line="69" pos:column="69"/></name></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="71"/></expr_stmt></block></then></if>
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name pos:line="70" pos:column="29">iflags<pos:position pos:line="70" pos:column="35"/></name> <operator pos:line="70" pos:column="36">&amp;<pos:position pos:line="70" pos:column="41"/></operator> <name pos:line="70" pos:column="38">ITEM_XNAME_FOLLOWS<pos:position pos:line="70" pos:column="56"/></name></expr>)<pos:position pos:line="70" pos:column="57"/></condition><then pos:line="70" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="33">write_vstring<pos:position pos:line="71" pos:column="46"/></name><argument_list pos:line="71" pos:column="46">(<argument><expr><name pos:line="71" pos:column="47">sock_f_out<pos:position pos:line="71" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="59">xname<pos:position pos:line="71" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="66">strlen<pos:position pos:line="71" pos:column="72"/></name><argument_list pos:line="71" pos:column="72">(<argument><expr><name pos:line="71" pos:column="73">xname<pos:position pos:line="71" pos:column="78"/></name></expr></argument>)<pos:position pos:line="71" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="81"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">ifdef<pos:position pos:line="72" pos:column="7"/></cpp:directive> <name pos:line="72" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="72" pos:column="22"/></name></cpp:ifdef>
			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><name pos:line="73" pos:column="29">preserve_xattrs<pos:position pos:line="73" pos:column="44"/></name> <operator pos:line="73" pos:column="45">&amp;&amp;<pos:position pos:line="73" pos:column="55"/></operator> <name pos:line="73" pos:column="48">do_xfers<pos:position pos:line="73" pos:column="56"/></name>
			 <operator pos:line="74" pos:column="26">&amp;&amp;<pos:position pos:line="74" pos:column="36"/></operator> <name pos:line="74" pos:column="29">iflags<pos:position pos:line="74" pos:column="35"/></name> <operator pos:line="74" pos:column="36">&amp;<pos:position pos:line="74" pos:column="41"/></operator> <operator pos:line="74" pos:column="38">(<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="39">ITEM_REPORT_XATTR<pos:position pos:line="74" pos:column="56"/></name><operator pos:line="74" pos:column="56">|<pos:position pos:line="74" pos:column="57"/></operator><name pos:line="74" pos:column="57">ITEM_TRANSFER<pos:position pos:line="74" pos:column="70"/></name><operator pos:line="74" pos:column="70">)<pos:position pos:line="74" pos:column="71"/></operator></expr>)<pos:position pos:line="74" pos:column="72"/></condition><then pos:line="74" pos:column="72"> <block pos:line="74" pos:column="73">{
				<decl_stmt><decl><type><name pos:line="75" pos:column="33">int<pos:position pos:line="75" pos:column="36"/></name></type> <name pos:line="75" pos:column="37">fd<pos:position pos:line="75" pos:column="39"/></name> <init pos:line="75" pos:column="40">= <expr><ternary><condition><expr><name pos:line="75" pos:column="42">iflags<pos:position pos:line="75" pos:column="48"/></name> <operator pos:line="75" pos:column="49">&amp;<pos:position pos:line="75" pos:column="54"/></operator> <name pos:line="75" pos:column="51">ITEM_REPORT_XATTR<pos:position pos:line="75" pos:column="68"/></name>
				      <operator pos:line="76" pos:column="39">&amp;&amp;<pos:position pos:line="76" pos:column="49"/></operator> <operator pos:line="76" pos:column="42">!<pos:position pos:line="76" pos:column="43"/></operator><operator pos:line="76" pos:column="43">(<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="44">want_xattr_optim<pos:position pos:line="76" pos:column="60"/></name> <operator pos:line="76" pos:column="61">&amp;&amp;<pos:position pos:line="76" pos:column="71"/></operator> <call><name pos:line="76" pos:column="64">BITS_SET<pos:position pos:line="76" pos:column="72"/></name><argument_list pos:line="76" pos:column="72">(<argument><expr><name pos:line="76" pos:column="73">iflags<pos:position pos:line="76" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="81">ITEM_XNAME_FOLLOWS<pos:position pos:line="76" pos:column="99"/></name><operator pos:line="76" pos:column="99">|<pos:position pos:line="76" pos:column="100"/></operator><name pos:line="76" pos:column="100">ITEM_LOCAL_CHANGE<pos:position pos:line="76" pos:column="117"/></name></expr></argument>)<pos:position pos:line="76" pos:column="118"/></argument_list></call><operator pos:line="76" pos:column="118">)<pos:position pos:line="76" pos:column="119"/></operator></expr>
				       ?<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41"> <expr><name pos:line="77" pos:column="42">sock_f_out<pos:position pos:line="77" pos:column="52"/></name></expr> <pos:position pos:line="77" pos:column="53"/></then><else pos:line="77" pos:column="53">: <expr><operator pos:line="77" pos:column="55">-<pos:position pos:line="77" pos:column="56"/></operator><literal type="number" pos:line="77" pos:column="56">1<pos:position pos:line="77" pos:column="57"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="77" pos:column="58"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="78" pos:column="33">send_xattr_request<pos:position pos:line="78" pos:column="51"/></name><argument_list pos:line="78" pos:column="51">(<argument><expr><name pos:line="78" pos:column="52">NULL<pos:position pos:line="78" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="58">file<pos:position pos:line="78" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="64">fd<pos:position pos:line="78" pos:column="66"/></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="79" pos:column="26"/></block></then></if>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="81" pos:column="18"/></block></then> <elseif pos:line="81" pos:column="19">else <if pos:line="81" pos:column="24">if <condition pos:line="81" pos:column="27">(<expr><name pos:line="81" pos:column="28">ndx<pos:position pos:line="81" pos:column="31"/></name> <operator pos:line="81" pos:column="32">&gt;=<pos:position pos:line="81" pos:column="37"/></operator> <literal type="number" pos:line="81" pos:column="35">0<pos:position pos:line="81" pos:column="36"/></literal></expr>)<pos:position pos:line="81" pos:column="37"/></condition><then pos:line="81" pos:column="37"> <block pos:line="81" pos:column="38">{
			<decl_stmt><decl><type><name><name pos:line="82" pos:column="25">enum<pos:position pos:line="82" pos:column="29"/></name> <name pos:line="82" pos:column="30">logcode<pos:position pos:line="82" pos:column="37"/></name></name></type> <name pos:line="82" pos:column="38">code<pos:position pos:line="82" pos:column="42"/></name> <init pos:line="82" pos:column="43">= <expr><ternary><condition><expr><name pos:line="82" pos:column="45">logfile_format_has_i<pos:position pos:line="82" pos:column="65"/></name></expr> ?<pos:position pos:line="82" pos:column="67"/></condition><then pos:line="82" pos:column="67"> <expr><name pos:line="82" pos:column="68">FINFO<pos:position pos:line="82" pos:column="73"/></name></expr> <pos:position pos:line="82" pos:column="74"/></then><else pos:line="82" pos:column="74">: <expr><name pos:line="82" pos:column="76">FCLIENT<pos:position pos:line="82" pos:column="83"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="82" pos:column="84"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">log_item<pos:position pos:line="83" pos:column="33"/></name><argument_list pos:line="83" pos:column="33">(<argument><expr><name pos:line="83" pos:column="34">code<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="40">file<pos:position pos:line="83" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">iflags<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="54">xname<pos:position pos:line="83" pos:column="59"/></name></expr></argument>)<pos:position pos:line="83" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_210.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">recv_files<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f_in<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">file_list<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">flist<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">local_name<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{  
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd1<pos:position pos:line="3" pos:column="10"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="11">fd2<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fname<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">fnametmp<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">MAXPATHLEN<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">buf<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">verbose<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&gt;<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">fprintf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">stderr<pos:position pos:line="11" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="20">"recv_files(%d) starting\n"<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>,<argument><expr><name><name pos:line="11" pos:column="48">flist<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">count<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">recurse<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&amp;&amp;<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="18">delete_mode<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="33">!<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">local_name<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">&amp;&amp;<pos:position pos:line="14" pos:column="55"/></operator> <name><name pos:line="14" pos:column="48">flist<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">count<pos:position pos:line="14" pos:column="60"/></name></name><operator pos:line="14" pos:column="60">&gt;<pos:position pos:line="14" pos:column="64"/></operator><literal type="number" pos:line="14" pos:column="61">0<pos:position pos:line="14" pos:column="62"/></literal></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63"> <block pos:line="14" pos:column="64">{
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">delete_files<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">flist<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <while pos:line="18" pos:column="3">while <condition pos:line="18" pos:column="9">(<expr><literal type="number" pos:line="18" pos:column="10">1<pos:position pos:line="18" pos:column="11"/></literal></expr>)<pos:position pos:line="18" pos:column="12"/></condition> 
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">i<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">read_int<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">f_in<pos:position pos:line="20" pos:column="24"/></name></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">i<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">==<pos:position pos:line="21" pos:column="15"/></operator> <operator pos:line="21" pos:column="16">-<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">1<pos:position pos:line="21" pos:column="18"/></literal></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block type="pseudo"><break pos:line="21" pos:column="20">break;<pos:position pos:line="21" pos:column="26"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="23" pos:column="7">fname<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <name><name pos:line="23" pos:column="15">flist<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">files<pos:position pos:line="23" pos:column="27"/></name><index pos:line="23" pos:column="27">[<expr><name pos:line="23" pos:column="28">i<pos:position pos:line="23" pos:column="29"/></name></expr>]<pos:position pos:line="23" pos:column="30"/></index></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">name<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>

      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">local_name<pos:position pos:line="25" pos:column="21"/></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">fname<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">local_name<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt></block></then></if>

      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">dry_run<pos:position pos:line="28" pos:column="18"/></name></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">am_server<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&amp;&amp;<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="27">verbose<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="11">printf<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><literal type="string" pos:line="30" pos:column="18">"%s\n"<pos:position pos:line="30" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="30" pos:column="25">fname<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt></block></then></if>
	<continue pos:line="31" pos:column="9">continue;<pos:position pos:line="31" pos:column="18"/></continue>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>

      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">verbose<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&gt;<pos:position pos:line="34" pos:column="23"/></operator> <literal type="number" pos:line="34" pos:column="21">2<pos:position pos:line="34" pos:column="22"/></literal></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="9">fprintf<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name pos:line="35" pos:column="17">stderr<pos:position pos:line="35" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="35" pos:column="24">"recv_files(%s)\n"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>,<argument><expr><name pos:line="35" pos:column="43">fname<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="37" pos:column="7">/* open the file */</comment>  
      <expr_stmt><expr><name pos:line="38" pos:column="7">fd1<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <call><name pos:line="38" pos:column="13">open<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">fname<pos:position pos:line="38" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="38" pos:column="24">O_RDONLY<pos:position pos:line="38" pos:column="32"/></name></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>

      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">fd1<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">!=<pos:position pos:line="40" pos:column="17"/></operator> <operator pos:line="40" pos:column="18">-<pos:position pos:line="40" pos:column="19"/></operator><literal type="number" pos:line="40" pos:column="19">1<pos:position pos:line="40" pos:column="20"/></literal> <operator pos:line="40" pos:column="21">&amp;&amp;<pos:position pos:line="40" pos:column="31"/></operator> <call><name pos:line="40" pos:column="24">fstat<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">fd1<pos:position pos:line="40" pos:column="33"/></name></expr></argument>,<argument><expr><operator pos:line="40" pos:column="34">&amp;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="35">st<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call> <operator pos:line="40" pos:column="39">!=<pos:position pos:line="40" pos:column="41"/></operator> <literal type="number" pos:line="40" pos:column="42">0<pos:position pos:line="40" pos:column="43"/></literal></expr>)<pos:position pos:line="40" pos:column="44"/></condition><then pos:line="40" pos:column="44"> <block pos:line="40" pos:column="45">{
	<expr_stmt><expr><call><name pos:line="41" pos:column="9">fprintf<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">stderr<pos:position pos:line="41" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="41" pos:column="24">"fstat %s : %s\n"<pos:position pos:line="41" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="41" pos:column="42">fname<pos:position pos:line="41" pos:column="47"/></name></expr></argument>,<argument><expr><call><name pos:line="41" pos:column="48">strerror<pos:position pos:line="41" pos:column="56"/></name><argument_list pos:line="41" pos:column="56">(<argument><expr><name pos:line="41" pos:column="57">errno<pos:position pos:line="41" pos:column="62"/></name></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">close<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">fd1<pos:position pos:line="42" pos:column="18"/></name></expr></argument>)<pos:position pos:line="42" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>
	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">-<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>;<pos:position pos:line="43" pos:column="19"/></return>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>

      <if pos:line="46" pos:column="7">if <condition pos:line="46" pos:column="10">(<expr><name pos:line="46" pos:column="11">fd1<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">!=<pos:position pos:line="46" pos:column="17"/></operator> <operator pos:line="46" pos:column="18">-<pos:position pos:line="46" pos:column="19"/></operator><literal type="number" pos:line="46" pos:column="19">1<pos:position pos:line="46" pos:column="20"/></literal> <operator pos:line="46" pos:column="21">&amp;&amp;<pos:position pos:line="46" pos:column="31"/></operator> <operator pos:line="46" pos:column="24">!<pos:position pos:line="46" pos:column="25"/></operator><call><name pos:line="46" pos:column="25">S_ISREG<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name><name pos:line="46" pos:column="33">st<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">.<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">st_mode<pos:position pos:line="46" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="45"/></condition><then pos:line="46" pos:column="45"> <block pos:line="46" pos:column="46">{
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">fprintf<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">stderr<pos:position pos:line="47" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="47" pos:column="24">"%s : not a regular file\n"<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>,<argument><expr><name pos:line="47" pos:column="52">fname<pos:position pos:line="47" pos:column="57"/></name></expr></argument>)<pos:position pos:line="47" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">close<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">fd1<pos:position pos:line="48" pos:column="18"/></name></expr></argument>)<pos:position pos:line="48" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
	<return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">-<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></return>
      }<pos:position pos:line="50" pos:column="8"/></block></then></if>

      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><name pos:line="52" pos:column="11">fd1<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">!=<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="18">-<pos:position pos:line="52" pos:column="19"/></operator><literal type="number" pos:line="52" pos:column="19">1<pos:position pos:line="52" pos:column="20"/></literal> <operator pos:line="52" pos:column="21">&amp;&amp;<pos:position pos:line="52" pos:column="31"/></operator> <name><name pos:line="52" pos:column="24">st<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">.<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">st_size<pos:position pos:line="52" pos:column="34"/></name></name> <operator pos:line="52" pos:column="35">&gt;<pos:position pos:line="52" pos:column="39"/></operator> <literal type="number" pos:line="52" pos:column="37">0<pos:position pos:line="52" pos:column="38"/></literal></expr>)<pos:position pos:line="52" pos:column="39"/></condition><then pos:line="52" pos:column="39"> <block pos:line="52" pos:column="40">{
	<expr_stmt><expr><name pos:line="53" pos:column="9">buf<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">map_file<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">fd1<pos:position pos:line="53" pos:column="27"/></name></expr></argument>,<argument><expr><name><name pos:line="53" pos:column="28">st<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">.<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">st_size<pos:position pos:line="53" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></then> <else pos:line="54" pos:column="9">else <block pos:line="54" pos:column="14">{
	<expr_stmt><expr><name pos:line="55" pos:column="9">buf<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <name pos:line="55" pos:column="15">NULL<pos:position pos:line="55" pos:column="19"/></name></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="56" pos:column="8"/></block></else></if>

      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><name pos:line="58" pos:column="11">verbose<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">&gt;<pos:position pos:line="58" pos:column="23"/></operator> <literal type="number" pos:line="58" pos:column="21">2<pos:position pos:line="58" pos:column="22"/></literal></expr>)<pos:position pos:line="58" pos:column="23"/></condition><then pos:line="58" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="9">fprintf<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">stderr<pos:position pos:line="59" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="59" pos:column="24">"mapped %s of size %d\n"<pos:position pos:line="59" pos:column="48"/></literal></expr></argument>,<argument><expr><name pos:line="59" pos:column="49">fname<pos:position pos:line="59" pos:column="54"/></name></expr></argument>,<argument><expr><operator pos:line="59" pos:column="55">(<pos:position pos:line="59" pos:column="56"/></operator><name pos:line="59" pos:column="56">int<pos:position pos:line="59" pos:column="59"/></name><operator pos:line="59" pos:column="59">)<pos:position pos:line="59" pos:column="60"/></operator><name><name pos:line="59" pos:column="60">st<pos:position pos:line="59" pos:column="62"/></name><operator pos:line="59" pos:column="62">.<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="63">st_size<pos:position pos:line="59" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="61" pos:column="7">/* open tmp file */</comment>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">sprintf<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><name pos:line="62" pos:column="15">fnametmp<pos:position pos:line="62" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="62" pos:column="24">"%s.XXXXXX"<pos:position pos:line="62" pos:column="35"/></literal></expr></argument>,<argument><expr><name pos:line="62" pos:column="36">fname<pos:position pos:line="62" pos:column="41"/></name></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name pos:line="63" pos:column="11">NULL<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">==<pos:position pos:line="63" pos:column="18"/></operator> <call><name pos:line="63" pos:column="19">mktemp<pos:position pos:line="63" pos:column="25"/></name><argument_list pos:line="63" pos:column="25">(<argument><expr><name pos:line="63" pos:column="26">fnametmp<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36"> <block pos:line="63" pos:column="37">{
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">fprintf<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">stderr<pos:position pos:line="64" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="64" pos:column="24">"mktemp %s failed\n"<pos:position pos:line="64" pos:column="44"/></literal></expr></argument>,<argument><expr><name pos:line="64" pos:column="45">fnametmp<pos:position pos:line="64" pos:column="53"/></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
	<return pos:line="65" pos:column="9">return <expr><operator pos:line="65" pos:column="16">-<pos:position pos:line="65" pos:column="17"/></operator><literal type="number" pos:line="65" pos:column="17">1<pos:position pos:line="65" pos:column="18"/></literal></expr>;<pos:position pos:line="65" pos:column="19"/></return>
      }<pos:position pos:line="66" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="67" pos:column="7">fd2<pos:position pos:line="67" pos:column="10"/></name> <operator pos:line="67" pos:column="11">=<pos:position pos:line="67" pos:column="12"/></operator> <call><name pos:line="67" pos:column="13">open<pos:position pos:line="67" pos:column="17"/></name><argument_list pos:line="67" pos:column="17">(<argument><expr><name pos:line="67" pos:column="18">fnametmp<pos:position pos:line="67" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="27">O_WRONLY<pos:position pos:line="67" pos:column="35"/></name><operator pos:line="67" pos:column="35">|<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="36">O_CREAT<pos:position pos:line="67" pos:column="43"/></name></expr></argument>,<argument><expr><name><name pos:line="67" pos:column="44">flist<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">-&gt;<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="51">files<pos:position pos:line="67" pos:column="56"/></name><index pos:line="67" pos:column="56">[<expr><name pos:line="67" pos:column="57">i<pos:position pos:line="67" pos:column="58"/></name></expr>]<pos:position pos:line="67" pos:column="59"/></index></name><operator pos:line="67" pos:column="59">.<pos:position pos:line="67" pos:column="60"/></operator><name pos:line="67" pos:column="60">mode<pos:position pos:line="67" pos:column="64"/></name></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="66"/></expr_stmt>
      <if pos:line="68" pos:column="7">if <condition pos:line="68" pos:column="10">(<expr><name pos:line="68" pos:column="11">fd2<pos:position pos:line="68" pos:column="14"/></name> <operator pos:line="68" pos:column="15">==<pos:position pos:line="68" pos:column="17"/></operator> <operator pos:line="68" pos:column="18">-<pos:position pos:line="68" pos:column="19"/></operator><literal type="number" pos:line="68" pos:column="19">1<pos:position pos:line="68" pos:column="20"/></literal></expr>)<pos:position pos:line="68" pos:column="21"/></condition><then pos:line="68" pos:column="21"> <block pos:line="68" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">fprintf<pos:position pos:line="69" pos:column="16"/></name><argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">stderr<pos:position pos:line="69" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="69" pos:column="24">"open %s : %s\n"<pos:position pos:line="69" pos:column="40"/></literal></expr></argument>,<argument><expr><name pos:line="69" pos:column="41">fnametmp<pos:position pos:line="69" pos:column="49"/></name></expr></argument>,<argument><expr><call><name pos:line="69" pos:column="50">strerror<pos:position pos:line="69" pos:column="58"/></name><argument_list pos:line="69" pos:column="58">(<argument><expr><name pos:line="69" pos:column="59">errno<pos:position pos:line="69" pos:column="64"/></name></expr></argument>)<pos:position pos:line="69" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt>
	<return pos:line="70" pos:column="9">return <expr><operator pos:line="70" pos:column="16">-<pos:position pos:line="70" pos:column="17"/></operator><literal type="number" pos:line="70" pos:column="17">1<pos:position pos:line="70" pos:column="18"/></literal></expr>;<pos:position pos:line="70" pos:column="19"/></return>
      }<pos:position pos:line="71" pos:column="8"/></block></then></if>
      
      <expr_stmt><expr><name pos:line="73" pos:column="7">cleanup_fname<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <name pos:line="73" pos:column="23">fnametmp<pos:position pos:line="73" pos:column="31"/></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>

      <if pos:line="75" pos:column="7">if <condition pos:line="75" pos:column="10">(<expr><operator pos:line="75" pos:column="11">!<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="12">am_server<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">&amp;&amp;<pos:position pos:line="75" pos:column="32"/></operator> <name pos:line="75" pos:column="25">verbose<pos:position pos:line="75" pos:column="32"/></name></expr>)<pos:position pos:line="75" pos:column="33"/></condition><then pos:line="75" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="9">printf<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="string" pos:line="76" pos:column="16">"%s\n"<pos:position pos:line="76" pos:column="22"/></literal></expr></argument>,<argument><expr><name pos:line="76" pos:column="23">fname<pos:position pos:line="76" pos:column="28"/></name></expr></argument>)<pos:position pos:line="76" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="78" pos:column="7">/* recv file data */</comment>
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">receive_data<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">f_in<pos:position pos:line="79" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="25">buf<pos:position pos:line="79" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="29">fd2<pos:position pos:line="79" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="33">fname<pos:position pos:line="79" pos:column="38"/></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>

      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><name pos:line="81" pos:column="11">fd1<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">!=<pos:position pos:line="81" pos:column="17"/></operator> <operator pos:line="81" pos:column="18">-<pos:position pos:line="81" pos:column="19"/></operator><literal type="number" pos:line="81" pos:column="19">1<pos:position pos:line="81" pos:column="20"/></literal></expr>)<pos:position pos:line="81" pos:column="21"/></condition><then pos:line="81" pos:column="21"> <block pos:line="81" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">unmap_file<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">buf<pos:position pos:line="82" pos:column="23"/></name></expr></argument>,<argument><expr><name><name pos:line="82" pos:column="24">st<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">.<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="27">st_size<pos:position pos:line="82" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="83" pos:column="9">close<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">(<argument><expr><name pos:line="83" pos:column="15">fd1<pos:position pos:line="83" pos:column="18"/></name></expr></argument>)<pos:position pos:line="83" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="84" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="85" pos:column="7">close<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><name pos:line="85" pos:column="13">fd2<pos:position pos:line="85" pos:column="16"/></name></expr></argument>)<pos:position pos:line="85" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="18"/></expr_stmt>

      <if pos:line="87" pos:column="7">if <condition pos:line="87" pos:column="10">(<expr><name pos:line="87" pos:column="11">verbose<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">&gt;<pos:position pos:line="87" pos:column="23"/></operator> <literal type="number" pos:line="87" pos:column="21">2<pos:position pos:line="87" pos:column="22"/></literal></expr>)<pos:position pos:line="87" pos:column="23"/></condition><then pos:line="87" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="9">fprintf<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><name pos:line="88" pos:column="17">stderr<pos:position pos:line="88" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="88" pos:column="24">"renaming %s to %s\n"<pos:position pos:line="88" pos:column="45"/></literal></expr></argument>,<argument><expr><name pos:line="88" pos:column="46">fnametmp<pos:position pos:line="88" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="88" pos:column="55">fname<pos:position pos:line="88" pos:column="60"/></name></expr></argument>)<pos:position pos:line="88" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="62"/></expr_stmt></block></then></if>

      <if pos:line="90" pos:column="7">if <condition pos:line="90" pos:column="10">(<expr><name pos:line="90" pos:column="11">make_backups<pos:position pos:line="90" pos:column="23"/></name></expr>)<pos:position pos:line="90" pos:column="24"/></condition><then pos:line="90" pos:column="24"> <block pos:line="90" pos:column="25">{
	<decl_stmt><decl><type><name pos:line="91" pos:column="9">char<pos:position pos:line="91" pos:column="13"/></name></type> <name><name pos:line="91" pos:column="14">fnamebak<pos:position pos:line="91" pos:column="22"/></name><index pos:line="91" pos:column="22">[<expr><name pos:line="91" pos:column="23">MAXPATHLEN<pos:position pos:line="91" pos:column="33"/></name></expr>]<pos:position pos:line="91" pos:column="34"/></index></name></decl>;<pos:position pos:line="91" pos:column="35"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">sprintf<pos:position pos:line="92" pos:column="16"/></name><argument_list pos:line="92" pos:column="16">(<argument><expr><name pos:line="92" pos:column="17">fnamebak<pos:position pos:line="92" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="92" pos:column="26">"%s%s"<pos:position pos:line="92" pos:column="32"/></literal></expr></argument>,<argument><expr><name pos:line="92" pos:column="33">fname<pos:position pos:line="92" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="92" pos:column="39">backup_suffix<pos:position pos:line="92" pos:column="52"/></name></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><call><name pos:line="93" pos:column="13">rename<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">fname<pos:position pos:line="93" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="93" pos:column="26">fnamebak<pos:position pos:line="93" pos:column="34"/></name></expr></argument>)<pos:position pos:line="93" pos:column="35"/></argument_list></call> <operator pos:line="93" pos:column="36">!=<pos:position pos:line="93" pos:column="38"/></operator> <literal type="number" pos:line="93" pos:column="39">0<pos:position pos:line="93" pos:column="40"/></literal> <operator pos:line="93" pos:column="41">&amp;&amp;<pos:position pos:line="93" pos:column="51"/></operator> <name pos:line="93" pos:column="44">errno<pos:position pos:line="93" pos:column="49"/></name> <operator pos:line="93" pos:column="50">!=<pos:position pos:line="93" pos:column="52"/></operator> <name pos:line="93" pos:column="53">ENOENT<pos:position pos:line="93" pos:column="59"/></name></expr>)<pos:position pos:line="93" pos:column="60"/></condition><then pos:line="93" pos:column="60"> <block pos:line="93" pos:column="61">{
	  <expr_stmt><expr><call><name pos:line="94" pos:column="11">fprintf<pos:position pos:line="94" pos:column="18"/></name><argument_list pos:line="94" pos:column="18">(<argument><expr><name pos:line="94" pos:column="19">stderr<pos:position pos:line="94" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="94" pos:column="26">"rename %s %s : %s\n"<pos:position pos:line="94" pos:column="47"/></literal></expr></argument>,<argument><expr><name pos:line="94" pos:column="48">fname<pos:position pos:line="94" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="94" pos:column="54">fnamebak<pos:position pos:line="94" pos:column="62"/></name></expr></argument>,<argument><expr><call><name pos:line="94" pos:column="63">strerror<pos:position pos:line="94" pos:column="71"/></name><argument_list pos:line="94" pos:column="71">(<argument><expr><name pos:line="94" pos:column="72">errno<pos:position pos:line="94" pos:column="77"/></name></expr></argument>)<pos:position pos:line="94" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="80"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="95" pos:column="11">exit_cleanup<pos:position pos:line="95" pos:column="23"/></name><argument_list pos:line="95" pos:column="23">(<argument><expr><literal type="number" pos:line="95" pos:column="24">1<pos:position pos:line="95" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="96" pos:column="10"/></block></then></if>
      }<pos:position pos:line="97" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="99" pos:column="7">/* move tmp file over real file */</comment>
      <if pos:line="100" pos:column="7">if <condition pos:line="100" pos:column="10">(<expr><call><name pos:line="100" pos:column="11">rename<pos:position pos:line="100" pos:column="17"/></name><argument_list pos:line="100" pos:column="17">(<argument><expr><name pos:line="100" pos:column="18">fnametmp<pos:position pos:line="100" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="100" pos:column="27">fname<pos:position pos:line="100" pos:column="32"/></name></expr></argument>)<pos:position pos:line="100" pos:column="33"/></argument_list></call> <operator pos:line="100" pos:column="34">!=<pos:position pos:line="100" pos:column="36"/></operator> <literal type="number" pos:line="100" pos:column="37">0<pos:position pos:line="100" pos:column="38"/></literal></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39"> <block pos:line="100" pos:column="40">{
	<expr_stmt><expr><call><name pos:line="101" pos:column="9">fprintf<pos:position pos:line="101" pos:column="16"/></name><argument_list pos:line="101" pos:column="16">(<argument><expr><name pos:line="101" pos:column="17">stderr<pos:position pos:line="101" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="101" pos:column="24">"rename %s -&gt; %s : %s\n"<pos:position pos:line="101" pos:column="51"/></literal></expr></argument>,
		<argument><expr><name pos:line="102" pos:column="17">fnametmp<pos:position pos:line="102" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="102" pos:column="26">fname<pos:position pos:line="102" pos:column="31"/></name></expr></argument>,<argument><expr><call><name pos:line="102" pos:column="32">strerror<pos:position pos:line="102" pos:column="40"/></name><argument_list pos:line="102" pos:column="40">(<argument><expr><name pos:line="102" pos:column="41">errno<pos:position pos:line="102" pos:column="46"/></name></expr></argument>)<pos:position pos:line="102" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="103" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="105" pos:column="7">cleanup_fname<pos:position pos:line="105" pos:column="20"/></name> <operator pos:line="105" pos:column="21">=<pos:position pos:line="105" pos:column="22"/></operator> <name pos:line="105" pos:column="23">NULL<pos:position pos:line="105" pos:column="27"/></name></expr>;<pos:position pos:line="105" pos:column="28"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="107" pos:column="7">set_perms<pos:position pos:line="107" pos:column="16"/></name><argument_list pos:line="107" pos:column="16">(<argument><expr><name pos:line="107" pos:column="17">fname<pos:position pos:line="107" pos:column="22"/></name></expr></argument>,<argument><expr><operator pos:line="107" pos:column="23">&amp;<pos:position pos:line="107" pos:column="28"/></operator><name><name pos:line="107" pos:column="24">flist<pos:position pos:line="107" pos:column="29"/></name><operator pos:line="107" pos:column="29">-&gt;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="31">files<pos:position pos:line="107" pos:column="36"/></name><index pos:line="107" pos:column="36">[<expr><name pos:line="107" pos:column="37">i<pos:position pos:line="107" pos:column="38"/></name></expr>]<pos:position pos:line="107" pos:column="39"/></index></name></expr></argument>,<argument><expr><name pos:line="107" pos:column="40">NULL<pos:position pos:line="107" pos:column="44"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="107" pos:column="45">0<pos:position pos:line="107" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="108" pos:column="6"/></block></while>

  <if pos:line="110" pos:column="3">if <condition pos:line="110" pos:column="6">(<expr><name pos:line="110" pos:column="7">verbose<pos:position pos:line="110" pos:column="14"/></name> <operator pos:line="110" pos:column="15">&gt;<pos:position pos:line="110" pos:column="19"/></operator> <literal type="number" pos:line="110" pos:column="17">2<pos:position pos:line="110" pos:column="18"/></literal></expr>)<pos:position pos:line="110" pos:column="19"/></condition><then pos:line="110" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="5">fprintf<pos:position pos:line="111" pos:column="12"/></name><argument_list pos:line="111" pos:column="12">(<argument><expr><name pos:line="111" pos:column="13">stderr<pos:position pos:line="111" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="111" pos:column="20">"recv_files finished\n"<pos:position pos:line="111" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="45"/></expr_stmt></block></then></if>
  
  <return pos:line="113" pos:column="3">return <expr><literal type="number" pos:line="113" pos:column="10">0<pos:position pos:line="113" pos:column="11"/></literal></expr>;<pos:position pos:line="113" pos:column="12"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

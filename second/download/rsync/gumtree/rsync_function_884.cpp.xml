<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_884.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">glob_expand<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">s<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier><modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier><modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">argv_ptr<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">argc_ptr<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">maxargs_ptr<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">argv<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><operator pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></operator><name pos:line="3" pos:column="24">argv_ptr<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">argc<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">argc_ptr<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">maxargs<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">maxargs_ptr<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><operator pos:line="6" pos:column="5">!<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">defined<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">HAVE_GLOB<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">||<pos:position pos:line="6" pos:column="26"/></operator> <operator pos:line="6" pos:column="27">!<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">defined<pos:position pos:line="6" pos:column="35"/></name> <name pos:line="6" pos:column="36">HAVE_GLOB_H<pos:position pos:line="6" pos:column="47"/></name></expr></cpp:if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">argc<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">maxargs<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block pos:line="7" pos:column="30">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">maxargs<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">+=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">MAX_ARGS<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">argv<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <call><name pos:line="9" pos:column="30">realloc_array<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">argv<pos:position pos:line="9" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="50">char<pos:position pos:line="9" pos:column="54"/></name> <operator pos:line="9" pos:column="55">*<pos:position pos:line="9" pos:column="56"/></operator></expr></argument>, <argument><expr><name pos:line="9" pos:column="58">maxargs<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call><operator pos:line="9" pos:column="66">)<pos:position pos:line="9" pos:column="67"/></operator></expr>)<pos:position pos:line="9" pos:column="68"/></condition><then pos:line="9" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">out_of_memory<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><literal type="string" pos:line="10" pos:column="39">"glob_expand"<pos:position pos:line="10" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">argv_ptr<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">argv<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">maxargs_ptr<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">maxargs<pos:position pos:line="12" pos:column="39"/></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><operator pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">s<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">s<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <literal type="string" pos:line="15" pos:column="21">"."<pos:position pos:line="15" pos:column="24"/></literal></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="16" pos:column="9">s<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name><name pos:line="16" pos:column="13">argv<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><name pos:line="16" pos:column="18">argc<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">++<pos:position pos:line="16" pos:column="24"/></operator></expr>]<pos:position pos:line="16" pos:column="25"/></index></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <call><name pos:line="16" pos:column="28">strdup<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">s<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">filter_server_path<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">s<pos:position pos:line="17" pos:column="29"/></name></expr></argument>)<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">glob_t<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">globbuf<pos:position pos:line="19" pos:column="23"/></name></decl>;<pos:position pos:line="19" pos:column="24"/></decl_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">maxargs<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="24">argc<pos:position pos:line="21" pos:column="28"/></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29">
		<block type="pseudo"><return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">s<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">s<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="string" pos:line="24" pos:column="21">"."<pos:position pos:line="24" pos:column="24"/></literal></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">sanitize_paths<pos:position pos:line="26" pos:column="27"/></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">s<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">sanitize_path<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">NULL<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="41">s<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="44">""<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="48">0<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt></block></then>
	<else pos:line="28" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">s<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name pos:line="29" pos:column="21">strdup<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">s<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt></block></else></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">s<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">out_of_memory<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><literal type="string" pos:line="31" pos:column="31">"glob_expand"<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">memset<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><operator pos:line="33" pos:column="16">&amp;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="17">globbuf<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="26">0<pos:position pos:line="33" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="29">sizeof <name pos:line="33" pos:column="36">globbuf<pos:position pos:line="33" pos:column="43"/></name></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><call><name pos:line="34" pos:column="14">filter_server_path<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">s<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="36"/></condition><then pos:line="34" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">glob<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">s<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="28">NULL<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="34">&amp;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="35">globbuf<pos:position pos:line="35" pos:column="42"/></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">MAX<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><operator pos:line="36" pos:column="17">(<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">int<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">)<pos:position pos:line="36" pos:column="22"/></operator><name><name pos:line="36" pos:column="22">globbuf<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">.<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">gl_pathc<pos:position pos:line="36" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="40">1<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call> <operator pos:line="36" pos:column="43">&gt;<pos:position pos:line="36" pos:column="47"/></operator> <name pos:line="36" pos:column="45">maxargs<pos:position pos:line="36" pos:column="52"/></name> <operator pos:line="36" pos:column="53">-<pos:position pos:line="36" pos:column="54"/></operator> <name pos:line="36" pos:column="55">argc<pos:position pos:line="36" pos:column="59"/></name></expr>)<pos:position pos:line="36" pos:column="60"/></condition><then pos:line="36" pos:column="60"> <block pos:line="36" pos:column="61">{
		<expr_stmt><expr><name pos:line="37" pos:column="17">maxargs<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">+=<pos:position pos:line="37" pos:column="27"/></operator> <name><name pos:line="37" pos:column="28">globbuf<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">.<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">gl_pathc<pos:position pos:line="37" pos:column="44"/></name></name> <operator pos:line="37" pos:column="45">+<pos:position pos:line="37" pos:column="46"/></operator> <name pos:line="37" pos:column="47">MAX_ARGS<pos:position pos:line="37" pos:column="55"/></name></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><operator pos:line="38" pos:column="22">(<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">argv<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <call><name pos:line="38" pos:column="30">realloc_array<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">argv<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="50">char<pos:position pos:line="38" pos:column="54"/></name> <operator pos:line="38" pos:column="55">*<pos:position pos:line="38" pos:column="56"/></operator></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">maxargs<pos:position pos:line="38" pos:column="65"/></name></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call><operator pos:line="38" pos:column="66">)<pos:position pos:line="38" pos:column="67"/></operator></expr>)<pos:position pos:line="38" pos:column="68"/></condition><then pos:line="38" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">out_of_memory<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><literal type="string" pos:line="39" pos:column="39">"glob_expand"<pos:position pos:line="39" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><operator pos:line="40" pos:column="17">*<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">argv_ptr<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">argv<pos:position pos:line="40" pos:column="33"/></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">maxargs_ptr<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <name pos:line="41" pos:column="32">maxargs<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">globbuf<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">.<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">gl_pathc<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">==<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="17">argv<pos:position pos:line="44" pos:column="21"/></name><index pos:line="44" pos:column="21">[<expr><name pos:line="44" pos:column="22">argc<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">++<pos:position pos:line="44" pos:column="28"/></operator></expr>]<pos:position pos:line="44" pos:column="29"/></index></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="32">s<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="45" pos:column="9">else <block pos:line="45" pos:column="14">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">i<pos:position pos:line="46" pos:column="22"/></name></decl>;<pos:position pos:line="46" pos:column="23"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">free<pos:position pos:line="47" pos:column="21"/></name><argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">s<pos:position pos:line="47" pos:column="23"/></name></expr></argument>)<pos:position pos:line="47" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
		<for pos:line="48" pos:column="17">for <control pos:line="48" pos:column="21">(<init><expr><name pos:line="48" pos:column="22">i<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr>;<pos:position pos:line="48" pos:column="28"/></init> <condition><expr><name pos:line="48" pos:column="29">i<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">&lt;<pos:position pos:line="48" pos:column="35"/></operator> <operator pos:line="48" pos:column="33">(<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="34">int<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">)<pos:position pos:line="48" pos:column="38"/></operator><name><name pos:line="48" pos:column="38">globbuf<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">.<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">gl_pathc<pos:position pos:line="48" pos:column="54"/></name></name></expr>;<pos:position pos:line="48" pos:column="55"/></condition> <incr><expr><name pos:line="48" pos:column="56">i<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">++<pos:position pos:line="48" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="60"/></control> <block pos:line="48" pos:column="61">{
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><operator pos:line="49" pos:column="29">!<pos:position pos:line="49" pos:column="30"/></operator><operator pos:line="49" pos:column="30">(<pos:position pos:line="49" pos:column="31"/></operator><name><name pos:line="49" pos:column="31">argv<pos:position pos:line="49" pos:column="35"/></name><index pos:line="49" pos:column="35">[<expr><name pos:line="49" pos:column="36">argc<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">++<pos:position pos:line="49" pos:column="42"/></operator></expr>]<pos:position pos:line="49" pos:column="43"/></index></name> <operator pos:line="49" pos:column="44">=<pos:position pos:line="49" pos:column="45"/></operator> <call><name pos:line="49" pos:column="46">strdup<pos:position pos:line="49" pos:column="52"/></name><argument_list pos:line="49" pos:column="52">(<argument><expr><name><name pos:line="49" pos:column="53">globbuf<pos:position pos:line="49" pos:column="60"/></name><operator pos:line="49" pos:column="60">.<pos:position pos:line="49" pos:column="61"/></operator><name pos:line="49" pos:column="61">gl_pathv<pos:position pos:line="49" pos:column="69"/></name><index pos:line="49" pos:column="69">[<expr><name pos:line="49" pos:column="70">i<pos:position pos:line="49" pos:column="71"/></name></expr>]<pos:position pos:line="49" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></call><operator pos:line="49" pos:column="73">)<pos:position pos:line="49" pos:column="74"/></operator></expr>)<pos:position pos:line="49" pos:column="75"/></condition><then pos:line="49" pos:column="75">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="33">out_of_memory<pos:position pos:line="50" pos:column="46"/></name><argument_list pos:line="50" pos:column="46">(<argument><expr><literal type="string" pos:line="50" pos:column="47">"glob_expand"<pos:position pos:line="50" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt></block></then></if>
		}<pos:position pos:line="51" pos:column="18"/></block></for>
	}<pos:position pos:line="52" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">globfree<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><operator pos:line="53" pos:column="18">&amp;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="19">globbuf<pos:position pos:line="53" pos:column="26"/></name></expr></argument>)<pos:position pos:line="53" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><operator pos:line="55" pos:column="9">*<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">argc_ptr<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <name pos:line="55" pos:column="21">argc<pos:position pos:line="55" pos:column="25"/></name></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

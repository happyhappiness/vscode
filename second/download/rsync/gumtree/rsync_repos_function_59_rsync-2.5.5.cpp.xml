<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_59_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">recv_uid_list<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">file_list<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">flist<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">id<pos:position pos:line="3" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">i<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">name<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">idlist<pos:position pos:line="5" pos:column="22"/></name></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">list<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">numeric_ids<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block type="pseudo"><return pos:line="7" pos:column="26">return;<pos:position pos:line="7" pos:column="33"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">preserve_uid<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
		<comment type="block" pos:line="10" pos:column="17">/* read the uid list */</comment>
		<expr_stmt><expr><name pos:line="11" pos:column="17">list<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">uidlist<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">id<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">read_int<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">f<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
		<while pos:line="13" pos:column="17">while <condition pos:line="13" pos:column="23">(<expr><name pos:line="13" pos:column="24">id<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">!=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr>)<pos:position pos:line="13" pos:column="32"/></condition> <block pos:line="13" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="14" pos:column="25">int<pos:position pos:line="14" pos:column="28"/></name></type> <name pos:line="14" pos:column="29">len<pos:position pos:line="14" pos:column="32"/></name> <init pos:line="14" pos:column="33">= <expr><call><name pos:line="14" pos:column="35">read_byte<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">f<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">name<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">char<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">*<pos:position pos:line="15" pos:column="39"/></operator><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator><call><name pos:line="15" pos:column="40">malloc<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">len<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">+<pos:position pos:line="15" pos:column="51"/></operator><literal type="number" pos:line="15" pos:column="51">1<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><operator pos:line="16" pos:column="29">!<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">name<pos:position pos:line="16" pos:column="34"/></name></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="36">out_of_memory<pos:position pos:line="16" pos:column="49"/></name><argument_list pos:line="16" pos:column="49">(<argument><expr><literal type="string" pos:line="16" pos:column="50">"recv_uid_list"<pos:position pos:line="16" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">read_sbuf<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">f<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">name<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">len<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">list<pos:position pos:line="18" pos:column="34"/></name></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
				<expr_stmt><expr><name pos:line="19" pos:column="33">uidlist<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">=<pos:position pos:line="19" pos:column="42"/></operator> <call><name pos:line="19" pos:column="43">add_list<pos:position pos:line="19" pos:column="51"/></name><argument_list pos:line="19" pos:column="51">(<argument><expr><name pos:line="19" pos:column="52">id<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">name<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="20" pos:column="33">list<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">=<pos:position pos:line="20" pos:column="39"/></operator> <name pos:line="20" pos:column="40">uidlist<pos:position pos:line="20" pos:column="47"/></name></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="21" pos:column="26"/></block></then> <else pos:line="21" pos:column="27">else <block pos:line="21" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="22" pos:column="33">list<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">-&gt;<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="39">next<pos:position pos:line="22" pos:column="43"/></name></name> <operator pos:line="22" pos:column="44">=<pos:position pos:line="22" pos:column="45"/></operator> <call><name pos:line="22" pos:column="46">add_list<pos:position pos:line="22" pos:column="54"/></name><argument_list pos:line="22" pos:column="54">(<argument><expr><name pos:line="22" pos:column="55">id<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="59">name<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name pos:line="23" pos:column="33">list<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">=<pos:position pos:line="23" pos:column="39"/></operator> <name><name pos:line="23" pos:column="40">list<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">next<pos:position pos:line="23" pos:column="50"/></name></name></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">list<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">id2<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <call><name pos:line="25" pos:column="37">map_uid<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">id<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="49">name<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">free<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">name<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">id<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">read_int<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">f<pos:position pos:line="27" pos:column="40"/></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></while>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>


	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">preserve_gid<pos:position pos:line="32" pos:column="25"/></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
		<comment type="block" pos:line="33" pos:column="17">/* and the gid list */</comment>
		<expr_stmt><expr><name pos:line="34" pos:column="17">list<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">gidlist<pos:position pos:line="34" pos:column="31"/></name></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">id<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <call><name pos:line="35" pos:column="22">read_int<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">f<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
		<while pos:line="36" pos:column="17">while <condition pos:line="36" pos:column="23">(<expr><name pos:line="36" pos:column="24">id<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">!=<pos:position pos:line="36" pos:column="29"/></operator> <literal type="number" pos:line="36" pos:column="30">0<pos:position pos:line="36" pos:column="31"/></literal></expr>)<pos:position pos:line="36" pos:column="32"/></condition> <block pos:line="36" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="37" pos:column="25">int<pos:position pos:line="37" pos:column="28"/></name></type> <name pos:line="37" pos:column="29">len<pos:position pos:line="37" pos:column="32"/></name> <init pos:line="37" pos:column="33">= <expr><call><name pos:line="37" pos:column="35">read_byte<pos:position pos:line="37" pos:column="44"/></name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">f<pos:position pos:line="37" pos:column="46"/></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">name<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <operator pos:line="38" pos:column="32">(<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">char<pos:position pos:line="38" pos:column="37"/></name> <operator pos:line="38" pos:column="38">*<pos:position pos:line="38" pos:column="39"/></operator><operator pos:line="38" pos:column="39">)<pos:position pos:line="38" pos:column="40"/></operator><call><name pos:line="38" pos:column="40">malloc<pos:position pos:line="38" pos:column="46"/></name><argument_list pos:line="38" pos:column="46">(<argument><expr><name pos:line="38" pos:column="47">len<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">+<pos:position pos:line="38" pos:column="51"/></operator><literal type="number" pos:line="38" pos:column="51">1<pos:position pos:line="38" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">!<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">name<pos:position pos:line="39" pos:column="34"/></name></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="36">out_of_memory<pos:position pos:line="39" pos:column="49"/></name><argument_list pos:line="39" pos:column="49">(<argument><expr><literal type="string" pos:line="39" pos:column="50">"recv_uid_list"<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">read_sbuf<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">f<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">name<pos:position pos:line="40" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="44">len<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><operator pos:line="41" pos:column="29">!<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">list<pos:position pos:line="41" pos:column="34"/></name></expr>)<pos:position pos:line="41" pos:column="35"/></condition><then pos:line="41" pos:column="35"> <block pos:line="41" pos:column="36">{
				<expr_stmt><expr><name pos:line="42" pos:column="33">gidlist<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">=<pos:position pos:line="42" pos:column="42"/></operator> <call><name pos:line="42" pos:column="43">add_list<pos:position pos:line="42" pos:column="51"/></name><argument_list pos:line="42" pos:column="51">(<argument><expr><name pos:line="42" pos:column="52">id<pos:position pos:line="42" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="56">name<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="43" pos:column="33">list<pos:position pos:line="43" pos:column="37"/></name> <operator pos:line="43" pos:column="38">=<pos:position pos:line="43" pos:column="39"/></operator> <name pos:line="43" pos:column="40">gidlist<pos:position pos:line="43" pos:column="47"/></name></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="44" pos:column="26"/></block></then> <else pos:line="44" pos:column="27">else <block pos:line="44" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="45" pos:column="33">list<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">next<pos:position pos:line="45" pos:column="43"/></name></name> <operator pos:line="45" pos:column="44">=<pos:position pos:line="45" pos:column="45"/></operator> <call><name pos:line="45" pos:column="46">add_list<pos:position pos:line="45" pos:column="54"/></name><argument_list pos:line="45" pos:column="54">(<argument><expr><name pos:line="45" pos:column="55">id<pos:position pos:line="45" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="59">name<pos:position pos:line="45" pos:column="63"/></name></expr></argument>)<pos:position pos:line="45" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name pos:line="46" pos:column="33">list<pos:position pos:line="46" pos:column="37"/></name> <operator pos:line="46" pos:column="38">=<pos:position pos:line="46" pos:column="39"/></operator> <name><name pos:line="46" pos:column="40">list<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">-&gt;<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="46">next<pos:position pos:line="46" pos:column="50"/></name></name></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="47" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name><name pos:line="48" pos:column="25">list<pos:position pos:line="48" pos:column="29"/></name><operator pos:line="48" pos:column="29">-&gt;<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="31">id2<pos:position pos:line="48" pos:column="34"/></name></name> <operator pos:line="48" pos:column="35">=<pos:position pos:line="48" pos:column="36"/></operator> <call><name pos:line="48" pos:column="37">map_gid<pos:position pos:line="48" pos:column="44"/></name><argument_list pos:line="48" pos:column="44">(<argument><expr><name pos:line="48" pos:column="45">id<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">name<pos:position pos:line="48" pos:column="53"/></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">free<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">name<pos:position pos:line="49" pos:column="34"/></name></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="50" pos:column="25">id<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <call><name pos:line="50" pos:column="30">read_int<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">f<pos:position pos:line="50" pos:column="40"/></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></while>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><operator pos:line="54" pos:column="13">!<pos:position pos:line="54" pos:column="14"/></operator><operator pos:line="54" pos:column="14">(<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">am_root<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">&amp;&amp;<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="26">preserve_uid<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">)<pos:position pos:line="54" pos:column="39"/></operator> <operator pos:line="54" pos:column="40">&amp;&amp;<pos:position pos:line="54" pos:column="50"/></operator> <operator pos:line="54" pos:column="43">!<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="44">preserve_gid<pos:position pos:line="54" pos:column="56"/></name></expr>)<pos:position pos:line="54" pos:column="57"/></condition><then pos:line="54" pos:column="57"> <block type="pseudo"><return pos:line="54" pos:column="58">return;<pos:position pos:line="54" pos:column="65"/></return></block></then></if>

	<comment type="block" pos:line="56" pos:column="9">/* now convert the uid/gid of all files in the list to the mapped
	   uid/gid */</comment>
	<for pos:line="58" pos:column="9">for <control pos:line="58" pos:column="13">(<init><expr><name pos:line="58" pos:column="14">i<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></init><condition><expr><name pos:line="58" pos:column="18">i<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">&lt;<pos:position pos:line="58" pos:column="23"/></operator><name><name pos:line="58" pos:column="20">flist<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">count<pos:position pos:line="58" pos:column="32"/></name></name></expr>;<pos:position pos:line="58" pos:column="33"/></condition><incr><expr><name pos:line="58" pos:column="33">i<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">++<pos:position pos:line="58" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="37"/></control> <block pos:line="58" pos:column="38">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">am_root<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">&amp;&amp;<pos:position pos:line="59" pos:column="39"/></operator> <name pos:line="59" pos:column="32">preserve_uid<pos:position pos:line="59" pos:column="44"/></name> <operator pos:line="59" pos:column="45">&amp;&amp;<pos:position pos:line="59" pos:column="55"/></operator> <name><name pos:line="59" pos:column="48">flist<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">-&gt;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="55">files<pos:position pos:line="59" pos:column="60"/></name><index pos:line="59" pos:column="60">[<expr><name pos:line="59" pos:column="61">i<pos:position pos:line="59" pos:column="62"/></name></expr>]<pos:position pos:line="59" pos:column="63"/></index></name><operator pos:line="59" pos:column="63">-&gt;<pos:position pos:line="59" pos:column="68"/></operator><name pos:line="59" pos:column="65">uid<pos:position pos:line="59" pos:column="68"/></name> <operator pos:line="59" pos:column="69">!=<pos:position pos:line="59" pos:column="71"/></operator> <literal type="number" pos:line="59" pos:column="72">0<pos:position pos:line="59" pos:column="73"/></literal></expr>)<pos:position pos:line="59" pos:column="74"/></condition><then pos:line="59" pos:column="74"> <block pos:line="59" pos:column="75">{
			<expr_stmt><expr><name><name pos:line="60" pos:column="25">flist<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">files<pos:position pos:line="60" pos:column="37"/></name><index pos:line="60" pos:column="37">[<expr><name pos:line="60" pos:column="38">i<pos:position pos:line="60" pos:column="39"/></name></expr>]<pos:position pos:line="60" pos:column="40"/></index></name><operator pos:line="60" pos:column="40">-&gt;<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="42">uid<pos:position pos:line="60" pos:column="45"/></name> <operator pos:line="60" pos:column="46">=<pos:position pos:line="60" pos:column="47"/></operator> <call><name pos:line="60" pos:column="48">match_uid<pos:position pos:line="60" pos:column="57"/></name><argument_list pos:line="60" pos:column="57">(<argument><expr><name><name pos:line="60" pos:column="58">flist<pos:position pos:line="60" pos:column="63"/></name><operator pos:line="60" pos:column="63">-&gt;<pos:position pos:line="60" pos:column="68"/></operator><name pos:line="60" pos:column="65">files<pos:position pos:line="60" pos:column="70"/></name><index pos:line="60" pos:column="70">[<expr><name pos:line="60" pos:column="71">i<pos:position pos:line="60" pos:column="72"/></name></expr>]<pos:position pos:line="60" pos:column="73"/></index></name><operator pos:line="60" pos:column="73">-&gt;<pos:position pos:line="60" pos:column="78"/></operator><name pos:line="60" pos:column="75">uid<pos:position pos:line="60" pos:column="78"/></name></expr></argument>)<pos:position pos:line="60" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">preserve_gid<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">&amp;&amp;<pos:position pos:line="62" pos:column="44"/></operator> <name><name pos:line="62" pos:column="37">flist<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">files<pos:position pos:line="62" pos:column="49"/></name><index pos:line="62" pos:column="49">[<expr><name pos:line="62" pos:column="50">i<pos:position pos:line="62" pos:column="51"/></name></expr>]<pos:position pos:line="62" pos:column="52"/></index></name><operator pos:line="62" pos:column="52">-&gt;<pos:position pos:line="62" pos:column="57"/></operator><name pos:line="62" pos:column="54">gid<pos:position pos:line="62" pos:column="57"/></name> <operator pos:line="62" pos:column="58">!=<pos:position pos:line="62" pos:column="60"/></operator> <literal type="number" pos:line="62" pos:column="61">0<pos:position pos:line="62" pos:column="62"/></literal></expr>)<pos:position pos:line="62" pos:column="63"/></condition><then pos:line="62" pos:column="63"> <block pos:line="62" pos:column="64">{
			<expr_stmt><expr><name><name pos:line="63" pos:column="25">flist<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">files<pos:position pos:line="63" pos:column="37"/></name><index pos:line="63" pos:column="37">[<expr><name pos:line="63" pos:column="38">i<pos:position pos:line="63" pos:column="39"/></name></expr>]<pos:position pos:line="63" pos:column="40"/></index></name><operator pos:line="63" pos:column="40">-&gt;<pos:position pos:line="63" pos:column="45"/></operator><name pos:line="63" pos:column="42">gid<pos:position pos:line="63" pos:column="45"/></name> <operator pos:line="63" pos:column="46">=<pos:position pos:line="63" pos:column="47"/></operator> <call><name pos:line="63" pos:column="48">match_gid<pos:position pos:line="63" pos:column="57"/></name><argument_list pos:line="63" pos:column="57">(<argument><expr><name><name pos:line="63" pos:column="58">flist<pos:position pos:line="63" pos:column="63"/></name><operator pos:line="63" pos:column="63">-&gt;<pos:position pos:line="63" pos:column="68"/></operator><name pos:line="63" pos:column="65">files<pos:position pos:line="63" pos:column="70"/></name><index pos:line="63" pos:column="70">[<expr><name pos:line="63" pos:column="71">i<pos:position pos:line="63" pos:column="72"/></name></expr>]<pos:position pos:line="63" pos:column="73"/></index></name><operator pos:line="63" pos:column="73">-&gt;<pos:position pos:line="63" pos:column="78"/></operator><name pos:line="63" pos:column="75">gid<pos:position pos:line="63" pos:column="78"/></name></expr></argument>)<pos:position pos:line="63" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
	}<pos:position pos:line="65" pos:column="10"/></block></for>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

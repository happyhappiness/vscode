<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_926_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type> <name pos:line="1" pos:column="14">poptStrerror<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">error<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <switch pos:line="3" pos:column="5">switch <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">error<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition> <block pos:line="3" pos:column="20">{
      <case pos:line="4" pos:column="7">case <expr><name pos:line="4" pos:column="12">POPT_ERROR_NOARG<pos:position pos:line="4" pos:column="28"/></name></expr>:<pos:position pos:line="4" pos:column="29"/></case>
	<return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">POPT_<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><literal type="string" pos:line="5" pos:column="22">"missing argument"<pos:position pos:line="5" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></return>
      <case pos:line="6" pos:column="7">case <expr><name pos:line="6" pos:column="12">POPT_ERROR_UNWANTEDARG<pos:position pos:line="6" pos:column="34"/></name></expr>:<pos:position pos:line="6" pos:column="35"/></case>
	<return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">POPT_<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><literal type="string" pos:line="7" pos:column="22">"option does not take an argument"<pos:position pos:line="7" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></return>
      <case pos:line="8" pos:column="7">case <expr><name pos:line="8" pos:column="12">POPT_ERROR_BADOPT<pos:position pos:line="8" pos:column="29"/></name></expr>:<pos:position pos:line="8" pos:column="30"/></case>
	<return pos:line="9" pos:column="9">return <expr><call><name pos:line="9" pos:column="16">POPT_<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><literal type="string" pos:line="9" pos:column="22">"unknown option"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></return>
      <case pos:line="10" pos:column="7">case <expr><name pos:line="10" pos:column="12">POPT_ERROR_BADOPERATION<pos:position pos:line="10" pos:column="35"/></name></expr>:<pos:position pos:line="10" pos:column="36"/></case>
	<return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">POPT_<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><literal type="string" pos:line="11" pos:column="22">"mutually exclusive logical operations requested"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></return>
      <case pos:line="12" pos:column="7">case <expr><name pos:line="12" pos:column="12">POPT_ERROR_NULLARG<pos:position pos:line="12" pos:column="30"/></name></expr>:<pos:position pos:line="12" pos:column="31"/></case>
	<return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">POPT_<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><literal type="string" pos:line="13" pos:column="22">"opt-&gt;arg should not be NULL"<pos:position pos:line="13" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></return>
      <case pos:line="14" pos:column="7">case <expr><name pos:line="14" pos:column="12">POPT_ERROR_OPTSTOODEEP<pos:position pos:line="14" pos:column="34"/></name></expr>:<pos:position pos:line="14" pos:column="35"/></case>
	<return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">POPT_<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="string" pos:line="15" pos:column="22">"aliases nested too deeply"<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></return>
      <case pos:line="16" pos:column="7">case <expr><name pos:line="16" pos:column="12">POPT_ERROR_BADQUOTE<pos:position pos:line="16" pos:column="31"/></name></expr>:<pos:position pos:line="16" pos:column="32"/></case>
	<return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">POPT_<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><literal type="string" pos:line="17" pos:column="22">"error in parameter quoting"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></return>
      <case pos:line="18" pos:column="7">case <expr><name pos:line="18" pos:column="12">POPT_ERROR_BADNUMBER<pos:position pos:line="18" pos:column="32"/></name></expr>:<pos:position pos:line="18" pos:column="33"/></case>
	<return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">POPT_<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><literal type="string" pos:line="19" pos:column="22">"invalid numeric value"<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></return>
      <case pos:line="20" pos:column="7">case <expr><name pos:line="20" pos:column="12">POPT_ERROR_OVERFLOW<pos:position pos:line="20" pos:column="31"/></name></expr>:<pos:position pos:line="20" pos:column="32"/></case>
	<return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">POPT_<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><literal type="string" pos:line="21" pos:column="22">"number too large or too small"<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></return>
      <case pos:line="22" pos:column="7">case <expr><name pos:line="22" pos:column="12">POPT_ERROR_MALLOC<pos:position pos:line="22" pos:column="29"/></name></expr>:<pos:position pos:line="22" pos:column="30"/></case>
	<return pos:line="23" pos:column="9">return <expr><call><name pos:line="23" pos:column="16">POPT_<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><literal type="string" pos:line="23" pos:column="22">"memory allocation failed"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="50"/></return>
      <case pos:line="24" pos:column="7">case <expr><name pos:line="24" pos:column="12">POPT_ERROR_ERRNO<pos:position pos:line="24" pos:column="28"/></name></expr>:<pos:position pos:line="24" pos:column="29"/></case>
	<return pos:line="25" pos:column="9">return <expr><call><name pos:line="25" pos:column="16">strerror<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">errno<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></return>
      <default pos:line="26" pos:column="7">default:<pos:position pos:line="26" pos:column="15"/></default>
	<return pos:line="27" pos:column="9">return <expr><call><name pos:line="27" pos:column="16">POPT_<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><literal type="string" pos:line="27" pos:column="22">"unknown error"<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></switch>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

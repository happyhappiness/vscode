<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_164_rsync-2.0.18.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">recv_files<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f_in<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">file_list<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">flist<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">local_name<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">f_gen<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{  
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd1<pos:position pos:line="3" pos:column="16"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="17">fd2<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">STRUCT_STAT<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">fname<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">fnametmp<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><name pos:line="6" pos:column="23">MAXPATHLEN<pos:position pos:line="6" pos:column="33"/></name></expr>]<pos:position pos:line="6" pos:column="34"/></index></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">map_struct<pos:position pos:line="7" pos:column="26"/></name></name> <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier></type><name pos:line="7" pos:column="28">buf<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">file_struct<pos:position pos:line="9" pos:column="27"/></name></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">file<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">phase<pos:position pos:line="10" pos:column="18"/></name><init pos:line="10" pos:column="18">=<expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">recv_ok<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
	
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">verbose<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&gt;<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="23">2<pos:position pos:line="13" pos:column="24"/></literal></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">rprintf<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">FINFO<pos:position pos:line="14" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="14" pos:column="31">"recv_files(%d) starting\n"<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>,<argument><expr><name><name pos:line="14" pos:column="59">flist<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">count<pos:position pos:line="14" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">recurse<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&amp;&amp;<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="24">delete_mode<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">&amp;&amp;<pos:position pos:line="17" pos:column="46"/></operator> <operator pos:line="17" pos:column="39">!<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="40">local_name<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">&amp;&amp;<pos:position pos:line="17" pos:column="61"/></operator> <name><name pos:line="17" pos:column="54">flist<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">count<pos:position pos:line="17" pos:column="66"/></name></name><operator pos:line="17" pos:column="66">&gt;<pos:position pos:line="17" pos:column="70"/></operator><literal type="number" pos:line="17" pos:column="67">0<pos:position pos:line="17" pos:column="68"/></literal></expr>)<pos:position pos:line="17" pos:column="69"/></condition><then pos:line="17" pos:column="69"> <block pos:line="17" pos:column="70">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">delete_files<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">flist<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>)<pos:position pos:line="21" pos:column="18"/></condition> <block pos:line="21" pos:column="19">{      
		<expr_stmt><expr><name pos:line="22" pos:column="17">i<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">read_int<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">f_in<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <operator pos:line="23" pos:column="26">-<pos:position pos:line="23" pos:column="27"/></operator><literal type="number" pos:line="23" pos:column="27">1<pos:position pos:line="23" pos:column="28"/></literal></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29"> <block pos:line="23" pos:column="30">{
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name pos:line="24" pos:column="29">phase<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">==<pos:position pos:line="24" pos:column="36"/></operator><literal type="number" pos:line="24" pos:column="36">0<pos:position pos:line="24" pos:column="37"/></literal> <operator pos:line="24" pos:column="38">&amp;&amp;<pos:position pos:line="24" pos:column="48"/></operator> <name pos:line="24" pos:column="41">remote_version<pos:position pos:line="24" pos:column="55"/></name> <operator pos:line="24" pos:column="56">&gt;=<pos:position pos:line="24" pos:column="61"/></operator> <literal type="number" pos:line="24" pos:column="59">13<pos:position pos:line="24" pos:column="61"/></literal></expr>)<pos:position pos:line="24" pos:column="62"/></condition><then pos:line="24" pos:column="62"> <block pos:line="24" pos:column="63">{
				<expr_stmt><expr><name pos:line="25" pos:column="33">phase<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">++<pos:position pos:line="25" pos:column="40"/></operator></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
				<expr_stmt><expr><name pos:line="26" pos:column="33">csum_length<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">=<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="47">SUM_LENGTH<pos:position pos:line="26" pos:column="57"/></name></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
				<if pos:line="27" pos:column="33">if <condition pos:line="27" pos:column="36">(<expr><name pos:line="27" pos:column="37">verbose<pos:position pos:line="27" pos:column="44"/></name> <operator pos:line="27" pos:column="45">&gt;<pos:position pos:line="27" pos:column="49"/></operator> <literal type="number" pos:line="27" pos:column="47">2<pos:position pos:line="27" pos:column="48"/></literal></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="41">rprintf<pos:position pos:line="28" pos:column="48"/></name><argument_list pos:line="28" pos:column="48">(<argument><expr><name pos:line="28" pos:column="49">FINFO<pos:position pos:line="28" pos:column="54"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="28" pos:column="55">"recv_files phase=%d\n"<pos:position pos:line="28" pos:column="78"/></literal></expr></argument>,<argument><expr><name pos:line="28" pos:column="79">phase<pos:position pos:line="28" pos:column="84"/></name></expr></argument>)<pos:position pos:line="28" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="86"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="29" pos:column="33">write_int<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">f_gen<pos:position pos:line="29" pos:column="48"/></name></expr></argument>,<argument><expr><operator pos:line="29" pos:column="49">-<pos:position pos:line="29" pos:column="50"/></operator><literal type="number" pos:line="29" pos:column="50">1<pos:position pos:line="29" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="53"/></expr_stmt>
				<continue pos:line="30" pos:column="33">continue;<pos:position pos:line="30" pos:column="42"/></continue>
			}<pos:position pos:line="31" pos:column="26"/></block></then></if>
			<break pos:line="32" pos:column="25">break;<pos:position pos:line="32" pos:column="31"/></break>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>

		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal> <operator pos:line="35" pos:column="27">||<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">i<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">&gt;=<pos:position pos:line="35" pos:column="37"/></operator> <name><name pos:line="35" pos:column="35">flist<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">count<pos:position pos:line="35" pos:column="47"/></name></name></expr>)<pos:position pos:line="35" pos:column="48"/></condition><then pos:line="35" pos:column="48"> <block pos:line="35" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">rprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">FERROR<pos:position pos:line="36" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="40">"Invalid file index %d in recv_files (count=%d)\n"<pos:position pos:line="36" pos:column="90"/></literal></expr></argument>, 
				<argument><expr><name pos:line="37" pos:column="33">i<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">flist<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">count<pos:position pos:line="37" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">exit_cleanup<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><literal type="number" pos:line="38" pos:column="38">1<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="41" pos:column="17">file<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name><name pos:line="41" pos:column="24">flist<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">files<pos:position pos:line="41" pos:column="36"/></name><index pos:line="41" pos:column="36">[<expr><name pos:line="41" pos:column="37">i<pos:position pos:line="41" pos:column="38"/></name></expr>]<pos:position pos:line="41" pos:column="39"/></index></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">fname<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <call><name pos:line="42" pos:column="25">f_name<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">file<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="44" pos:column="17">stats<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">.<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">num_transferred_files<pos:position pos:line="44" pos:column="44"/></name></name><operator pos:line="44" pos:column="44">++<pos:position pos:line="44" pos:column="46"/></operator></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">stats<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">.<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">total_transferred_size<pos:position pos:line="45" pos:column="45"/></name></name> <operator pos:line="45" pos:column="46">+=<pos:position pos:line="45" pos:column="48"/></operator> <name><name pos:line="45" pos:column="49">file<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">-&gt;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="55">length<pos:position pos:line="45" pos:column="61"/></name></name></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>

		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">local_name<pos:position pos:line="47" pos:column="31"/></name></expr>)<pos:position pos:line="47" pos:column="32"/></condition><then pos:line="47" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="25">fname<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">=<pos:position pos:line="48" pos:column="32"/></operator> <name pos:line="48" pos:column="33">local_name<pos:position pos:line="48" pos:column="43"/></name></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt></block></then></if>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">dry_run<pos:position pos:line="50" pos:column="28"/></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29"> <block pos:line="50" pos:column="30">{
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><operator pos:line="51" pos:column="29">!<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">am_server<pos:position pos:line="51" pos:column="39"/></name> <operator pos:line="51" pos:column="40">&amp;&amp;<pos:position pos:line="51" pos:column="50"/></operator> <name pos:line="51" pos:column="43">verbose<pos:position pos:line="51" pos:column="50"/></name></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="33">printf<pos:position pos:line="52" pos:column="39"/></name><argument_list pos:line="52" pos:column="39">(<argument><expr><literal type="string" pos:line="52" pos:column="40">"%s\n"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>,<argument><expr><name pos:line="52" pos:column="47">fname<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt></block></then></if>
			<continue pos:line="53" pos:column="25">continue;<pos:position pos:line="53" pos:column="34"/></continue>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">verbose<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">&gt;<pos:position pos:line="56" pos:column="33"/></operator> <literal type="number" pos:line="56" pos:column="31">2<pos:position pos:line="56" pos:column="32"/></literal></expr>)<pos:position pos:line="56" pos:column="33"/></condition><then pos:line="56" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">rprintf<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">FINFO<pos:position pos:line="57" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="57" pos:column="39">"recv_files(%s)\n"<pos:position pos:line="57" pos:column="57"/></literal></expr></argument>,<argument><expr><name pos:line="57" pos:column="58">fname<pos:position pos:line="57" pos:column="63"/></name></expr></argument>)<pos:position pos:line="57" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="65"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="59" pos:column="17">/* open the file */</comment>  
		<expr_stmt><expr><name pos:line="60" pos:column="17">fd1<pos:position pos:line="60" pos:column="20"/></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <call><name pos:line="60" pos:column="23">open<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">fname<pos:position pos:line="60" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="60" pos:column="34">O_RDONLY<pos:position pos:line="60" pos:column="42"/></name></expr></argument>)<pos:position pos:line="60" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="44"/></expr_stmt>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">fd1<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">!=<pos:position pos:line="62" pos:column="27"/></operator> <operator pos:line="62" pos:column="28">-<pos:position pos:line="62" pos:column="29"/></operator><literal type="number" pos:line="62" pos:column="29">1<pos:position pos:line="62" pos:column="30"/></literal> <operator pos:line="62" pos:column="31">&amp;&amp;<pos:position pos:line="62" pos:column="41"/></operator> <call><name pos:line="62" pos:column="34">do_fstat<pos:position pos:line="62" pos:column="42"/></name><argument_list pos:line="62" pos:column="42">(<argument><expr><name pos:line="62" pos:column="43">fd1<pos:position pos:line="62" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="62" pos:column="47">&amp;<pos:position pos:line="62" pos:column="52"/></operator><name pos:line="62" pos:column="48">st<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call> <operator pos:line="62" pos:column="52">!=<pos:position pos:line="62" pos:column="54"/></operator> <literal type="number" pos:line="62" pos:column="55">0<pos:position pos:line="62" pos:column="56"/></literal></expr>)<pos:position pos:line="62" pos:column="57"/></condition><then pos:line="62" pos:column="57"> <block pos:line="62" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">rprintf<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">FERROR<pos:position pos:line="63" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="63" pos:column="40">"fstat %s : %s\n"<pos:position pos:line="63" pos:column="57"/></literal></expr></argument>,<argument><expr><name pos:line="63" pos:column="58">fname<pos:position pos:line="63" pos:column="63"/></name></expr></argument>,<argument><expr><call><name pos:line="63" pos:column="64">strerror<pos:position pos:line="63" pos:column="72"/></name><argument_list pos:line="63" pos:column="72">(<argument><expr><name pos:line="63" pos:column="73">errno<pos:position pos:line="63" pos:column="78"/></name></expr></argument>)<pos:position pos:line="63" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="64" pos:column="25">receive_data<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">(<argument><expr><name pos:line="64" pos:column="38">f_in<pos:position pos:line="64" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="64" pos:column="43">NULL<pos:position pos:line="64" pos:column="47"/></name></expr></argument>,<argument><expr><operator pos:line="64" pos:column="48">-<pos:position pos:line="64" pos:column="49"/></operator><literal type="number" pos:line="64" pos:column="49">1<pos:position pos:line="64" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="64" pos:column="51">NULL<pos:position pos:line="64" pos:column="55"/></name></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">close<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name pos:line="65" pos:column="31">fd1<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="36"/></expr_stmt>
			<continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>

		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name pos:line="69" pos:column="21">fd1<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">!=<pos:position pos:line="69" pos:column="27"/></operator> <operator pos:line="69" pos:column="28">-<pos:position pos:line="69" pos:column="29"/></operator><literal type="number" pos:line="69" pos:column="29">1<pos:position pos:line="69" pos:column="30"/></literal> <operator pos:line="69" pos:column="31">&amp;&amp;<pos:position pos:line="69" pos:column="41"/></operator> <operator pos:line="69" pos:column="34">!<pos:position pos:line="69" pos:column="35"/></operator><call><name pos:line="69" pos:column="35">S_ISREG<pos:position pos:line="69" pos:column="42"/></name><argument_list pos:line="69" pos:column="42">(<argument><expr><name><name pos:line="69" pos:column="43">st<pos:position pos:line="69" pos:column="45"/></name><operator pos:line="69" pos:column="45">.<pos:position pos:line="69" pos:column="46"/></operator><name pos:line="69" pos:column="46">st_mode<pos:position pos:line="69" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="55"/></condition><then pos:line="69" pos:column="55"> <block pos:line="69" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="70" pos:column="25">rprintf<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">FERROR<pos:position pos:line="70" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="70" pos:column="40">"%s : not a regular file (recv_files)\n"<pos:position pos:line="70" pos:column="80"/></literal></expr></argument>,<argument><expr><name pos:line="70" pos:column="81">fname<pos:position pos:line="70" pos:column="86"/></name></expr></argument>)<pos:position pos:line="70" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">receive_data<pos:position pos:line="71" pos:column="37"/></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">f_in<pos:position pos:line="71" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="71" pos:column="43">NULL<pos:position pos:line="71" pos:column="47"/></name></expr></argument>,<argument><expr><operator pos:line="71" pos:column="48">-<pos:position pos:line="71" pos:column="49"/></operator><literal type="number" pos:line="71" pos:column="49">1<pos:position pos:line="71" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="71" pos:column="51">NULL<pos:position pos:line="71" pos:column="55"/></name></expr></argument>)<pos:position pos:line="71" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">close<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">fd1<pos:position pos:line="72" pos:column="34"/></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
			<continue pos:line="73" pos:column="25">continue;<pos:position pos:line="73" pos:column="34"/></continue>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>

		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">fd1<pos:position pos:line="76" pos:column="24"/></name> <operator pos:line="76" pos:column="25">!=<pos:position pos:line="76" pos:column="27"/></operator> <operator pos:line="76" pos:column="28">-<pos:position pos:line="76" pos:column="29"/></operator><literal type="number" pos:line="76" pos:column="29">1<pos:position pos:line="76" pos:column="30"/></literal> <operator pos:line="76" pos:column="31">&amp;&amp;<pos:position pos:line="76" pos:column="41"/></operator> <name><name pos:line="76" pos:column="34">st<pos:position pos:line="76" pos:column="36"/></name><operator pos:line="76" pos:column="36">.<pos:position pos:line="76" pos:column="37"/></operator><name pos:line="76" pos:column="37">st_size<pos:position pos:line="76" pos:column="44"/></name></name> <operator pos:line="76" pos:column="45">&gt;<pos:position pos:line="76" pos:column="49"/></operator> <literal type="number" pos:line="76" pos:column="47">0<pos:position pos:line="76" pos:column="48"/></literal></expr>)<pos:position pos:line="76" pos:column="49"/></condition><then pos:line="76" pos:column="49"> <block pos:line="76" pos:column="50">{
			<expr_stmt><expr><name pos:line="77" pos:column="25">buf<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">=<pos:position pos:line="77" pos:column="30"/></operator> <call><name pos:line="77" pos:column="31">map_file<pos:position pos:line="77" pos:column="39"/></name><argument_list pos:line="77" pos:column="39">(<argument><expr><name pos:line="77" pos:column="40">fd1<pos:position pos:line="77" pos:column="43"/></name></expr></argument>,<argument><expr><name><name pos:line="77" pos:column="44">st<pos:position pos:line="77" pos:column="46"/></name><operator pos:line="77" pos:column="46">.<pos:position pos:line="77" pos:column="47"/></operator><name pos:line="77" pos:column="47">st_size<pos:position pos:line="77" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt>
			<if pos:line="78" pos:column="25">if <condition pos:line="78" pos:column="28">(<expr><name pos:line="78" pos:column="29">verbose<pos:position pos:line="78" pos:column="36"/></name> <operator pos:line="78" pos:column="37">&gt;<pos:position pos:line="78" pos:column="41"/></operator> <literal type="number" pos:line="78" pos:column="39">2<pos:position pos:line="78" pos:column="40"/></literal></expr>)<pos:position pos:line="78" pos:column="41"/></condition><then pos:line="78" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="33">rprintf<pos:position pos:line="79" pos:column="40"/></name><argument_list pos:line="79" pos:column="40">(<argument><expr><name pos:line="79" pos:column="41">FINFO<pos:position pos:line="79" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="79" pos:column="47">"recv mapped %s of size %d\n"<pos:position pos:line="79" pos:column="76"/></literal></expr></argument>,<argument><expr><name pos:line="79" pos:column="77">fname<pos:position pos:line="79" pos:column="82"/></name></expr></argument>,<argument><expr><operator pos:line="79" pos:column="83">(<pos:position pos:line="79" pos:column="84"/></operator><name pos:line="79" pos:column="84">int<pos:position pos:line="79" pos:column="87"/></name><operator pos:line="79" pos:column="87">)<pos:position pos:line="79" pos:column="88"/></operator><name><name pos:line="79" pos:column="88">st<pos:position pos:line="79" pos:column="90"/></name><operator pos:line="79" pos:column="90">.<pos:position pos:line="79" pos:column="91"/></operator><name pos:line="79" pos:column="91">st_size<pos:position pos:line="79" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="100"/></expr_stmt></block></then></if>
		}<pos:position pos:line="80" pos:column="18"/></block></then> <else pos:line="80" pos:column="19">else <block pos:line="80" pos:column="24">{
			<expr_stmt><expr><name pos:line="81" pos:column="25">buf<pos:position pos:line="81" pos:column="28"/></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <name pos:line="81" pos:column="31">NULL<pos:position pos:line="81" pos:column="35"/></name></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="82" pos:column="18"/></block></else></if>

		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><operator pos:line="84" pos:column="21">!<pos:position pos:line="84" pos:column="22"/></operator><call><name pos:line="84" pos:column="22">get_tmpname<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name pos:line="84" pos:column="34">fnametmp<pos:position pos:line="84" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="84" pos:column="43">fname<pos:position pos:line="84" pos:column="48"/></name></expr></argument>)<pos:position pos:line="84" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="50"/></condition><then pos:line="84" pos:column="50"> <block pos:line="84" pos:column="51">{
			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><name pos:line="85" pos:column="29">buf<pos:position pos:line="85" pos:column="32"/></name></expr>)<pos:position pos:line="85" pos:column="33"/></condition><then pos:line="85" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="34">unmap_file<pos:position pos:line="85" pos:column="44"/></name><argument_list pos:line="85" pos:column="44">(<argument><expr><name pos:line="85" pos:column="45">buf<pos:position pos:line="85" pos:column="48"/></name></expr></argument>)<pos:position pos:line="85" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="50"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="86" pos:column="25">close<pos:position pos:line="86" pos:column="30"/></name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">fd1<pos:position pos:line="86" pos:column="34"/></name></expr></argument>)<pos:position pos:line="86" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="36"/></expr_stmt>
			<continue pos:line="87" pos:column="25">continue;<pos:position pos:line="87" pos:column="34"/></continue>
		}<pos:position pos:line="88" pos:column="18"/></block></then></if>

		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">NULL<pos:position pos:line="90" pos:column="25"/></name> <operator pos:line="90" pos:column="26">==<pos:position pos:line="90" pos:column="28"/></operator> <call><name pos:line="90" pos:column="29">do_mktemp<pos:position pos:line="90" pos:column="38"/></name><argument_list pos:line="90" pos:column="38">(<argument><expr><name pos:line="90" pos:column="39">fnametmp<pos:position pos:line="90" pos:column="47"/></name></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49"> <block pos:line="90" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">rprintf<pos:position pos:line="91" pos:column="32"/></name><argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">FERROR<pos:position pos:line="91" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="91" pos:column="40">"mktemp %s failed\n"<pos:position pos:line="91" pos:column="60"/></literal></expr></argument>,<argument><expr><name pos:line="91" pos:column="61">fnametmp<pos:position pos:line="91" pos:column="69"/></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">receive_data<pos:position pos:line="92" pos:column="37"/></name><argument_list pos:line="92" pos:column="37">(<argument><expr><name pos:line="92" pos:column="38">f_in<pos:position pos:line="92" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="92" pos:column="43">buf<pos:position pos:line="92" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="92" pos:column="47">-<pos:position pos:line="92" pos:column="48"/></operator><literal type="number" pos:line="92" pos:column="48">1<pos:position pos:line="92" pos:column="49"/></literal></expr></argument>,<argument><expr><name pos:line="92" pos:column="50">NULL<pos:position pos:line="92" pos:column="54"/></name></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="56"/></expr_stmt>
			<if pos:line="93" pos:column="25">if <condition pos:line="93" pos:column="28">(<expr><name pos:line="93" pos:column="29">buf<pos:position pos:line="93" pos:column="32"/></name></expr>)<pos:position pos:line="93" pos:column="33"/></condition><then pos:line="93" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="34">unmap_file<pos:position pos:line="93" pos:column="44"/></name><argument_list pos:line="93" pos:column="44">(<argument><expr><name pos:line="93" pos:column="45">buf<pos:position pos:line="93" pos:column="48"/></name></expr></argument>)<pos:position pos:line="93" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="50"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">close<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">fd1<pos:position pos:line="94" pos:column="34"/></name></expr></argument>)<pos:position pos:line="94" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="36"/></expr_stmt>
			<continue pos:line="95" pos:column="25">continue;<pos:position pos:line="95" pos:column="34"/></continue>
		}<pos:position pos:line="96" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="98" pos:column="17">/* we initially set the perms without the
		   setuid/setgid bits to ensure that there is no race
		   condition. They are then correctly updated after
		   the lchown. Thanks to snabb@epipe.fi for pointing
		   this out */</comment>
		<expr_stmt><expr><name pos:line="103" pos:column="17">fd2<pos:position pos:line="103" pos:column="20"/></name> <operator pos:line="103" pos:column="21">=<pos:position pos:line="103" pos:column="22"/></operator> <call><name pos:line="103" pos:column="23">do_open<pos:position pos:line="103" pos:column="30"/></name><argument_list pos:line="103" pos:column="30">(<argument><expr><name pos:line="103" pos:column="31">fnametmp<pos:position pos:line="103" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="103" pos:column="40">O_WRONLY<pos:position pos:line="103" pos:column="48"/></name><operator pos:line="103" pos:column="48">|<pos:position pos:line="103" pos:column="49"/></operator><name pos:line="103" pos:column="49">O_CREAT<pos:position pos:line="103" pos:column="56"/></name><operator pos:line="103" pos:column="56">|<pos:position pos:line="103" pos:column="57"/></operator><name pos:line="103" pos:column="57">O_EXCL<pos:position pos:line="103" pos:column="63"/></name></expr></argument>,
			      <argument><expr><name><name pos:line="104" pos:column="31">file<pos:position pos:line="104" pos:column="35"/></name><operator pos:line="104" pos:column="35">-&gt;<pos:position pos:line="104" pos:column="40"/></operator><name pos:line="104" pos:column="37">mode<pos:position pos:line="104" pos:column="41"/></name></name> <operator pos:line="104" pos:column="42">&amp;<pos:position pos:line="104" pos:column="47"/></operator> <name pos:line="104" pos:column="44">ACCESSPERMS<pos:position pos:line="104" pos:column="55"/></name></expr></argument>)<pos:position pos:line="104" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="57"/></expr_stmt>

		<if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><name pos:line="106" pos:column="21">fd2<pos:position pos:line="106" pos:column="24"/></name> <operator pos:line="106" pos:column="25">==<pos:position pos:line="106" pos:column="27"/></operator> <operator pos:line="106" pos:column="28">-<pos:position pos:line="106" pos:column="29"/></operator><literal type="number" pos:line="106" pos:column="29">1<pos:position pos:line="106" pos:column="30"/></literal> <operator pos:line="106" pos:column="31">&amp;&amp;<pos:position pos:line="106" pos:column="41"/></operator> <name pos:line="106" pos:column="34">relative_paths<pos:position pos:line="106" pos:column="48"/></name> <operator pos:line="106" pos:column="49">&amp;&amp;<pos:position pos:line="106" pos:column="59"/></operator> <name pos:line="106" pos:column="52">errno<pos:position pos:line="106" pos:column="57"/></name> <operator pos:line="106" pos:column="58">==<pos:position pos:line="106" pos:column="60"/></operator> <name pos:line="106" pos:column="61">ENOENT<pos:position pos:line="106" pos:column="67"/></name> <operator pos:line="106" pos:column="68">&amp;&amp;<pos:position pos:line="106" pos:column="78"/></operator> 
		    <call><name pos:line="107" pos:column="21">create_directory_path<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">(<argument><expr><name pos:line="107" pos:column="43">fnametmp<pos:position pos:line="107" pos:column="51"/></name></expr></argument>)<pos:position pos:line="107" pos:column="52"/></argument_list></call> <operator pos:line="107" pos:column="53">==<pos:position pos:line="107" pos:column="55"/></operator> <literal type="number" pos:line="107" pos:column="56">0<pos:position pos:line="107" pos:column="57"/></literal></expr>)<pos:position pos:line="107" pos:column="58"/></condition><then pos:line="107" pos:column="58"> <block pos:line="107" pos:column="59">{
			<expr_stmt><expr><name pos:line="108" pos:column="25">fd2<pos:position pos:line="108" pos:column="28"/></name> <operator pos:line="108" pos:column="29">=<pos:position pos:line="108" pos:column="30"/></operator> <call><name pos:line="108" pos:column="31">do_open<pos:position pos:line="108" pos:column="38"/></name><argument_list pos:line="108" pos:column="38">(<argument><expr><name pos:line="108" pos:column="39">fnametmp<pos:position pos:line="108" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="108" pos:column="48">O_WRONLY<pos:position pos:line="108" pos:column="56"/></name><operator pos:line="108" pos:column="56">|<pos:position pos:line="108" pos:column="57"/></operator><name pos:line="108" pos:column="57">O_CREAT<pos:position pos:line="108" pos:column="64"/></name><operator pos:line="108" pos:column="64">|<pos:position pos:line="108" pos:column="65"/></operator><name pos:line="108" pos:column="65">O_EXCL<pos:position pos:line="108" pos:column="71"/></name></expr></argument>,
				      <argument><expr><name><name pos:line="109" pos:column="39">file<pos:position pos:line="109" pos:column="43"/></name><operator pos:line="109" pos:column="43">-&gt;<pos:position pos:line="109" pos:column="48"/></operator><name pos:line="109" pos:column="45">mode<pos:position pos:line="109" pos:column="49"/></name></name> <operator pos:line="109" pos:column="50">&amp;<pos:position pos:line="109" pos:column="55"/></operator> <name pos:line="109" pos:column="52">ACCESSPERMS<pos:position pos:line="109" pos:column="63"/></name></expr></argument>)<pos:position pos:line="109" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="110" pos:column="18"/></block></then></if>
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name pos:line="111" pos:column="21">fd2<pos:position pos:line="111" pos:column="24"/></name> <operator pos:line="111" pos:column="25">==<pos:position pos:line="111" pos:column="27"/></operator> <operator pos:line="111" pos:column="28">-<pos:position pos:line="111" pos:column="29"/></operator><literal type="number" pos:line="111" pos:column="29">1<pos:position pos:line="111" pos:column="30"/></literal></expr>)<pos:position pos:line="111" pos:column="31"/></condition><then pos:line="111" pos:column="31"> <block pos:line="111" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="112" pos:column="25">rprintf<pos:position pos:line="112" pos:column="32"/></name><argument_list pos:line="112" pos:column="32">(<argument><expr><name pos:line="112" pos:column="33">FERROR<pos:position pos:line="112" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="112" pos:column="40">"open %s : %s\n"<pos:position pos:line="112" pos:column="56"/></literal></expr></argument>,<argument><expr><name pos:line="112" pos:column="57">fnametmp<pos:position pos:line="112" pos:column="65"/></name></expr></argument>,<argument><expr><call><name pos:line="112" pos:column="66">strerror<pos:position pos:line="112" pos:column="74"/></name><argument_list pos:line="112" pos:column="74">(<argument><expr><name pos:line="112" pos:column="75">errno<pos:position pos:line="112" pos:column="80"/></name></expr></argument>)<pos:position pos:line="112" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="83"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="113" pos:column="25">receive_data<pos:position pos:line="113" pos:column="37"/></name><argument_list pos:line="113" pos:column="37">(<argument><expr><name pos:line="113" pos:column="38">f_in<pos:position pos:line="113" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="113" pos:column="43">buf<pos:position pos:line="113" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="113" pos:column="47">-<pos:position pos:line="113" pos:column="48"/></operator><literal type="number" pos:line="113" pos:column="48">1<pos:position pos:line="113" pos:column="49"/></literal></expr></argument>,<argument><expr><name pos:line="113" pos:column="50">NULL<pos:position pos:line="113" pos:column="54"/></name></expr></argument>)<pos:position pos:line="113" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="56"/></expr_stmt>
			<if pos:line="114" pos:column="25">if <condition pos:line="114" pos:column="28">(<expr><name pos:line="114" pos:column="29">buf<pos:position pos:line="114" pos:column="32"/></name></expr>)<pos:position pos:line="114" pos:column="33"/></condition><then pos:line="114" pos:column="33"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="34">unmap_file<pos:position pos:line="114" pos:column="44"/></name><argument_list pos:line="114" pos:column="44">(<argument><expr><name pos:line="114" pos:column="45">buf<pos:position pos:line="114" pos:column="48"/></name></expr></argument>)<pos:position pos:line="114" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="50"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="115" pos:column="25">close<pos:position pos:line="115" pos:column="30"/></name><argument_list pos:line="115" pos:column="30">(<argument><expr><name pos:line="115" pos:column="31">fd1<pos:position pos:line="115" pos:column="34"/></name></expr></argument>)<pos:position pos:line="115" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="36"/></expr_stmt>
			<continue pos:line="116" pos:column="25">continue;<pos:position pos:line="116" pos:column="34"/></continue>
		}<pos:position pos:line="117" pos:column="18"/></block></then></if>
      
		<expr_stmt><expr><name pos:line="119" pos:column="17">cleanup_fname<pos:position pos:line="119" pos:column="30"/></name> <operator pos:line="119" pos:column="31">=<pos:position pos:line="119" pos:column="32"/></operator> <name pos:line="119" pos:column="33">fnametmp<pos:position pos:line="119" pos:column="41"/></name></expr>;<pos:position pos:line="119" pos:column="42"/></expr_stmt>

		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><operator pos:line="121" pos:column="21">!<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="22">am_server<pos:position pos:line="121" pos:column="31"/></name> <operator pos:line="121" pos:column="32">&amp;&amp;<pos:position pos:line="121" pos:column="42"/></operator> <name pos:line="121" pos:column="35">verbose<pos:position pos:line="121" pos:column="42"/></name></expr>)<pos:position pos:line="121" pos:column="43"/></condition><then pos:line="121" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="25">printf<pos:position pos:line="122" pos:column="31"/></name><argument_list pos:line="122" pos:column="31">(<argument><expr><literal type="string" pos:line="122" pos:column="32">"%s\n"<pos:position pos:line="122" pos:column="38"/></literal></expr></argument>,<argument><expr><name pos:line="122" pos:column="39">fname<pos:position pos:line="122" pos:column="44"/></name></expr></argument>)<pos:position pos:line="122" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="46"/></expr_stmt></block></then></if>
		
		<comment type="block" pos:line="124" pos:column="17">/* recv file data */</comment>
		<expr_stmt><expr><name pos:line="125" pos:column="17">recv_ok<pos:position pos:line="125" pos:column="24"/></name> <operator pos:line="125" pos:column="25">=<pos:position pos:line="125" pos:column="26"/></operator> <call><name pos:line="125" pos:column="27">receive_data<pos:position pos:line="125" pos:column="39"/></name><argument_list pos:line="125" pos:column="39">(<argument><expr><name pos:line="125" pos:column="40">f_in<pos:position pos:line="125" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="125" pos:column="45">buf<pos:position pos:line="125" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="125" pos:column="49">fd2<pos:position pos:line="125" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="125" pos:column="53">fname<pos:position pos:line="125" pos:column="58"/></name></expr></argument>)<pos:position pos:line="125" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="60"/></expr_stmt>
		
		<if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><name pos:line="127" pos:column="21">buf<pos:position pos:line="127" pos:column="24"/></name></expr>)<pos:position pos:line="127" pos:column="25"/></condition><then pos:line="127" pos:column="25"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="26">unmap_file<pos:position pos:line="127" pos:column="36"/></name><argument_list pos:line="127" pos:column="36">(<argument><expr><name pos:line="127" pos:column="37">buf<pos:position pos:line="127" pos:column="40"/></name></expr></argument>)<pos:position pos:line="127" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="42"/></expr_stmt></block></then></if>
		<if pos:line="128" pos:column="17">if <condition pos:line="128" pos:column="20">(<expr><name pos:line="128" pos:column="21">fd1<pos:position pos:line="128" pos:column="24"/></name> <operator pos:line="128" pos:column="25">!=<pos:position pos:line="128" pos:column="27"/></operator> <operator pos:line="128" pos:column="28">-<pos:position pos:line="128" pos:column="29"/></operator><literal type="number" pos:line="128" pos:column="29">1<pos:position pos:line="128" pos:column="30"/></literal></expr>)<pos:position pos:line="128" pos:column="31"/></condition><then pos:line="128" pos:column="31"> <block pos:line="128" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="129" pos:column="25">close<pos:position pos:line="129" pos:column="30"/></name><argument_list pos:line="129" pos:column="30">(<argument><expr><name pos:line="129" pos:column="31">fd1<pos:position pos:line="129" pos:column="34"/></name></expr></argument>)<pos:position pos:line="129" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="130" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="131" pos:column="17">close<pos:position pos:line="131" pos:column="22"/></name><argument_list pos:line="131" pos:column="22">(<argument><expr><name pos:line="131" pos:column="23">fd2<pos:position pos:line="131" pos:column="26"/></name></expr></argument>)<pos:position pos:line="131" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="28"/></expr_stmt>
		
		<if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">verbose<pos:position pos:line="133" pos:column="28"/></name> <operator pos:line="133" pos:column="29">&gt;<pos:position pos:line="133" pos:column="33"/></operator> <literal type="number" pos:line="133" pos:column="31">2<pos:position pos:line="133" pos:column="32"/></literal></expr>)<pos:position pos:line="133" pos:column="33"/></condition><then pos:line="133" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="25">rprintf<pos:position pos:line="134" pos:column="32"/></name><argument_list pos:line="134" pos:column="32">(<argument><expr><name pos:line="134" pos:column="33">FINFO<pos:position pos:line="134" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="134" pos:column="39">"renaming %s to %s\n"<pos:position pos:line="134" pos:column="60"/></literal></expr></argument>,<argument><expr><name pos:line="134" pos:column="61">fnametmp<pos:position pos:line="134" pos:column="69"/></name></expr></argument>,<argument><expr><name pos:line="134" pos:column="70">fname<pos:position pos:line="134" pos:column="75"/></name></expr></argument>)<pos:position pos:line="134" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="77"/></expr_stmt></block></then></if>
		
		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><name pos:line="136" pos:column="21">make_backups<pos:position pos:line="136" pos:column="33"/></name></expr>)<pos:position pos:line="136" pos:column="34"/></condition><then pos:line="136" pos:column="34"> <block pos:line="136" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="137" pos:column="25">char<pos:position pos:line="137" pos:column="29"/></name></type> <name><name pos:line="137" pos:column="30">fnamebak<pos:position pos:line="137" pos:column="38"/></name><index pos:line="137" pos:column="38">[<expr><name pos:line="137" pos:column="39">MAXPATHLEN<pos:position pos:line="137" pos:column="49"/></name></expr>]<pos:position pos:line="137" pos:column="50"/></index></name></decl>;<pos:position pos:line="137" pos:column="51"/></decl_stmt>
			<if pos:line="138" pos:column="25">if <condition pos:line="138" pos:column="28">(<expr><call><name pos:line="138" pos:column="29">strlen<pos:position pos:line="138" pos:column="35"/></name><argument_list pos:line="138" pos:column="35">(<argument><expr><name pos:line="138" pos:column="36">fname<pos:position pos:line="138" pos:column="41"/></name></expr></argument>)<pos:position pos:line="138" pos:column="42"/></argument_list></call> <operator pos:line="138" pos:column="43">+<pos:position pos:line="138" pos:column="44"/></operator> <call><name pos:line="138" pos:column="45">strlen<pos:position pos:line="138" pos:column="51"/></name><argument_list pos:line="138" pos:column="51">(<argument><expr><name pos:line="138" pos:column="52">backup_suffix<pos:position pos:line="138" pos:column="65"/></name></expr></argument>)<pos:position pos:line="138" pos:column="66"/></argument_list></call> <operator pos:line="138" pos:column="67">&gt;<pos:position pos:line="138" pos:column="71"/></operator> <operator pos:line="138" pos:column="69">(<pos:position pos:line="138" pos:column="70"/></operator><name pos:line="138" pos:column="70">MAXPATHLEN<pos:position pos:line="138" pos:column="80"/></name><operator pos:line="138" pos:column="80">-<pos:position pos:line="138" pos:column="81"/></operator><literal type="number" pos:line="138" pos:column="81">1<pos:position pos:line="138" pos:column="82"/></literal><operator pos:line="138" pos:column="82">)<pos:position pos:line="138" pos:column="83"/></operator></expr>)<pos:position pos:line="138" pos:column="84"/></condition><then pos:line="138" pos:column="84"> <block pos:line="138" pos:column="85">{
				<expr_stmt><expr><call><name pos:line="139" pos:column="33">rprintf<pos:position pos:line="139" pos:column="40"/></name><argument_list pos:line="139" pos:column="40">(<argument><expr><name pos:line="139" pos:column="41">FERROR<pos:position pos:line="139" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="139" pos:column="48">"backup filename too long\n"<pos:position pos:line="139" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="78"/></expr_stmt>
				<continue pos:line="140" pos:column="33">continue;<pos:position pos:line="140" pos:column="42"/></continue>
			}<pos:position pos:line="141" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="142" pos:column="25">slprintf<pos:position pos:line="142" pos:column="33"/></name><argument_list pos:line="142" pos:column="33">(<argument><expr><name pos:line="142" pos:column="34">fnamebak<pos:position pos:line="142" pos:column="42"/></name></expr></argument>,<argument><expr><sizeof pos:line="142" pos:column="43">sizeof<argument_list pos:line="142" pos:column="49">(<argument><expr><name pos:line="142" pos:column="50">fnamebak<pos:position pos:line="142" pos:column="58"/></name></expr></argument>)<pos:position pos:line="142" pos:column="59"/></argument_list></sizeof><operator pos:line="142" pos:column="59">-<pos:position pos:line="142" pos:column="60"/></operator><literal type="number" pos:line="142" pos:column="60">1<pos:position pos:line="142" pos:column="61"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="142" pos:column="62">"%s%s"<pos:position pos:line="142" pos:column="68"/></literal></expr></argument>,<argument><expr><name pos:line="142" pos:column="69">fname<pos:position pos:line="142" pos:column="74"/></name></expr></argument>,<argument><expr><name pos:line="142" pos:column="75">backup_suffix<pos:position pos:line="142" pos:column="88"/></name></expr></argument>)<pos:position pos:line="142" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="90"/></expr_stmt>
			<if pos:line="143" pos:column="25">if <condition pos:line="143" pos:column="28">(<expr><call><name pos:line="143" pos:column="29">do_rename<pos:position pos:line="143" pos:column="38"/></name><argument_list pos:line="143" pos:column="38">(<argument><expr><name pos:line="143" pos:column="39">fname<pos:position pos:line="143" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="143" pos:column="45">fnamebak<pos:position pos:line="143" pos:column="53"/></name></expr></argument>)<pos:position pos:line="143" pos:column="54"/></argument_list></call> <operator pos:line="143" pos:column="55">!=<pos:position pos:line="143" pos:column="57"/></operator> <literal type="number" pos:line="143" pos:column="58">0<pos:position pos:line="143" pos:column="59"/></literal> <operator pos:line="143" pos:column="60">&amp;&amp;<pos:position pos:line="143" pos:column="70"/></operator> <name pos:line="143" pos:column="63">errno<pos:position pos:line="143" pos:column="68"/></name> <operator pos:line="143" pos:column="69">!=<pos:position pos:line="143" pos:column="71"/></operator> <name pos:line="143" pos:column="72">ENOENT<pos:position pos:line="143" pos:column="78"/></name></expr>)<pos:position pos:line="143" pos:column="79"/></condition><then pos:line="143" pos:column="79"> <block pos:line="143" pos:column="80">{
				<expr_stmt><expr><call><name pos:line="144" pos:column="33">rprintf<pos:position pos:line="144" pos:column="40"/></name><argument_list pos:line="144" pos:column="40">(<argument><expr><name pos:line="144" pos:column="41">FERROR<pos:position pos:line="144" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="144" pos:column="48">"rename %s %s : %s\n"<pos:position pos:line="144" pos:column="69"/></literal></expr></argument>,<argument><expr><name pos:line="144" pos:column="70">fname<pos:position pos:line="144" pos:column="75"/></name></expr></argument>,<argument><expr><name pos:line="144" pos:column="76">fnamebak<pos:position pos:line="144" pos:column="84"/></name></expr></argument>,<argument><expr><call><name pos:line="144" pos:column="85">strerror<pos:position pos:line="144" pos:column="93"/></name><argument_list pos:line="144" pos:column="93">(<argument><expr><name pos:line="144" pos:column="94">errno<pos:position pos:line="144" pos:column="99"/></name></expr></argument>)<pos:position pos:line="144" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="102"/></expr_stmt>
				<continue pos:line="145" pos:column="33">continue;<pos:position pos:line="145" pos:column="42"/></continue>
			}<pos:position pos:line="146" pos:column="26"/></block></then></if>
		}<pos:position pos:line="147" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="149" pos:column="17">/* move tmp file over real file */</comment>
		<if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><call><name pos:line="150" pos:column="21">do_rename<pos:position pos:line="150" pos:column="30"/></name><argument_list pos:line="150" pos:column="30">(<argument><expr><name pos:line="150" pos:column="31">fnametmp<pos:position pos:line="150" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="150" pos:column="40">fname<pos:position pos:line="150" pos:column="45"/></name></expr></argument>)<pos:position pos:line="150" pos:column="46"/></argument_list></call> <operator pos:line="150" pos:column="47">!=<pos:position pos:line="150" pos:column="49"/></operator> <literal type="number" pos:line="150" pos:column="50">0<pos:position pos:line="150" pos:column="51"/></literal></expr>)<pos:position pos:line="150" pos:column="52"/></condition><then pos:line="150" pos:column="52"> <block pos:line="150" pos:column="53">{
			<if pos:line="151" pos:column="25">if <condition pos:line="151" pos:column="28">(<expr><name pos:line="151" pos:column="29">errno<pos:position pos:line="151" pos:column="34"/></name> <operator pos:line="151" pos:column="35">==<pos:position pos:line="151" pos:column="37"/></operator> <name pos:line="151" pos:column="38">EXDEV<pos:position pos:line="151" pos:column="43"/></name></expr>)<pos:position pos:line="151" pos:column="44"/></condition><then pos:line="151" pos:column="44"> <block pos:line="151" pos:column="45">{
				<comment type="block" pos:line="152" pos:column="33">/* rename failed on cross-filesystem link.  
				   Copy the file instead. */</comment>
				<if pos:line="154" pos:column="33">if <condition pos:line="154" pos:column="36">(<expr><call><name pos:line="154" pos:column="37">copy_file<pos:position pos:line="154" pos:column="46"/></name><argument_list pos:line="154" pos:column="46">(<argument><expr><name pos:line="154" pos:column="47">fnametmp<pos:position pos:line="154" pos:column="55"/></name></expr></argument>,<argument><expr><name pos:line="154" pos:column="56">fname<pos:position pos:line="154" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="63">file<pos:position pos:line="154" pos:column="67"/></name><operator pos:line="154" pos:column="67">-&gt;<pos:position pos:line="154" pos:column="72"/></operator><name pos:line="154" pos:column="69">mode<pos:position pos:line="154" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="75"/></condition><then pos:line="154" pos:column="75"> <block pos:line="154" pos:column="76">{
					<expr_stmt><expr><call><name pos:line="155" pos:column="41">rprintf<pos:position pos:line="155" pos:column="48"/></name><argument_list pos:line="155" pos:column="48">(<argument><expr><name pos:line="155" pos:column="49">FERROR<pos:position pos:line="155" pos:column="55"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="155" pos:column="56">"copy %s -&gt; %s : %s\n"<pos:position pos:line="155" pos:column="81"/></literal></expr></argument>,
						<argument><expr><name pos:line="156" pos:column="49">fnametmp<pos:position pos:line="156" pos:column="57"/></name></expr></argument>,<argument><expr><name pos:line="156" pos:column="58">fname<pos:position pos:line="156" pos:column="63"/></name></expr></argument>,<argument><expr><call><name pos:line="156" pos:column="64">strerror<pos:position pos:line="156" pos:column="72"/></name><argument_list pos:line="156" pos:column="72">(<argument><expr><name pos:line="156" pos:column="73">errno<pos:position pos:line="156" pos:column="78"/></name></expr></argument>)<pos:position pos:line="156" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="156" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="81"/></expr_stmt>
				}<pos:position pos:line="157" pos:column="34"/></block></then> <else pos:line="157" pos:column="35">else <block pos:line="157" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="158" pos:column="41">set_perms<pos:position pos:line="158" pos:column="50"/></name><argument_list pos:line="158" pos:column="50">(<argument><expr><name pos:line="158" pos:column="51">fname<pos:position pos:line="158" pos:column="56"/></name></expr></argument>,<argument><expr><name pos:line="158" pos:column="57">file<pos:position pos:line="158" pos:column="61"/></name></expr></argument>,<argument><expr><name pos:line="158" pos:column="62">NULL<pos:position pos:line="158" pos:column="66"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="158" pos:column="67">0<pos:position pos:line="158" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="70"/></expr_stmt>
				}<pos:position pos:line="159" pos:column="34"/></block></else></if>
				<expr_stmt><expr><call><name pos:line="160" pos:column="33">do_unlink<pos:position pos:line="160" pos:column="42"/></name><argument_list pos:line="160" pos:column="42">(<argument><expr><name pos:line="160" pos:column="43">fnametmp<pos:position pos:line="160" pos:column="51"/></name></expr></argument>)<pos:position pos:line="160" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="161" pos:column="26"/></block></then> <else pos:line="161" pos:column="27">else <block pos:line="161" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="162" pos:column="33">rprintf<pos:position pos:line="162" pos:column="40"/></name><argument_list pos:line="162" pos:column="40">(<argument><expr><name pos:line="162" pos:column="41">FERROR<pos:position pos:line="162" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="162" pos:column="48">"rename %s -&gt; %s : %s\n"<pos:position pos:line="162" pos:column="75"/></literal></expr></argument>,
					<argument><expr><name pos:line="163" pos:column="41">fnametmp<pos:position pos:line="163" pos:column="49"/></name></expr></argument>,<argument><expr><name pos:line="163" pos:column="50">fname<pos:position pos:line="163" pos:column="55"/></name></expr></argument>,<argument><expr><call><name pos:line="163" pos:column="56">strerror<pos:position pos:line="163" pos:column="64"/></name><argument_list pos:line="163" pos:column="64">(<argument><expr><name pos:line="163" pos:column="65">errno<pos:position pos:line="163" pos:column="70"/></name></expr></argument>)<pos:position pos:line="163" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="163" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="73"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="164" pos:column="33">do_unlink<pos:position pos:line="164" pos:column="42"/></name><argument_list pos:line="164" pos:column="42">(<argument><expr><name pos:line="164" pos:column="43">fnametmp<pos:position pos:line="164" pos:column="51"/></name></expr></argument>)<pos:position pos:line="164" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="165" pos:column="26"/></block></else></if>
		}<pos:position pos:line="166" pos:column="18"/></block></then> <else pos:line="166" pos:column="19">else <block pos:line="166" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="167" pos:column="25">set_perms<pos:position pos:line="167" pos:column="34"/></name><argument_list pos:line="167" pos:column="34">(<argument><expr><name pos:line="167" pos:column="35">fname<pos:position pos:line="167" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="167" pos:column="41">file<pos:position pos:line="167" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="167" pos:column="46">NULL<pos:position pos:line="167" pos:column="50"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="167" pos:column="51">0<pos:position pos:line="167" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="168" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="170" pos:column="17">cleanup_fname<pos:position pos:line="170" pos:column="30"/></name> <operator pos:line="170" pos:column="31">=<pos:position pos:line="170" pos:column="32"/></operator> <name pos:line="170" pos:column="33">NULL<pos:position pos:line="170" pos:column="37"/></name></expr>;<pos:position pos:line="170" pos:column="38"/></expr_stmt>

		
		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><operator pos:line="173" pos:column="21">!<pos:position pos:line="173" pos:column="22"/></operator><name pos:line="173" pos:column="22">recv_ok<pos:position pos:line="173" pos:column="29"/></name></expr>)<pos:position pos:line="173" pos:column="30"/></condition><then pos:line="173" pos:column="30"> <block pos:line="173" pos:column="31">{
			<if pos:line="174" pos:column="25">if <condition pos:line="174" pos:column="28">(<expr><name pos:line="174" pos:column="29">csum_length<pos:position pos:line="174" pos:column="40"/></name> <operator pos:line="174" pos:column="41">==<pos:position pos:line="174" pos:column="43"/></operator> <name pos:line="174" pos:column="44">SUM_LENGTH<pos:position pos:line="174" pos:column="54"/></name></expr>)<pos:position pos:line="174" pos:column="55"/></condition><then pos:line="174" pos:column="55"> <block pos:line="174" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="175" pos:column="33">rprintf<pos:position pos:line="175" pos:column="40"/></name><argument_list pos:line="175" pos:column="40">(<argument><expr><name pos:line="175" pos:column="41">FERROR<pos:position pos:line="175" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="175" pos:column="48">"ERROR: file corruption in %s. File changed during transfer?\n"<pos:position pos:line="175" pos:column="111"/></literal></expr></argument>,
					<argument><expr><name pos:line="176" pos:column="41">fname<pos:position pos:line="176" pos:column="46"/></name></expr></argument>)<pos:position pos:line="176" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="177" pos:column="26"/></block></then> <else pos:line="177" pos:column="27">else <block pos:line="177" pos:column="32">{
				<if pos:line="178" pos:column="33">if <condition pos:line="178" pos:column="36">(<expr><name pos:line="178" pos:column="37">verbose<pos:position pos:line="178" pos:column="44"/></name> <operator pos:line="178" pos:column="45">&gt;<pos:position pos:line="178" pos:column="49"/></operator> <literal type="number" pos:line="178" pos:column="47">1<pos:position pos:line="178" pos:column="48"/></literal></expr>)<pos:position pos:line="178" pos:column="49"/></condition><then pos:line="178" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="179" pos:column="41">rprintf<pos:position pos:line="179" pos:column="48"/></name><argument_list pos:line="179" pos:column="48">(<argument><expr><name pos:line="179" pos:column="49">FINFO<pos:position pos:line="179" pos:column="54"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="179" pos:column="55">"redoing %s(%d)\n"<pos:position pos:line="179" pos:column="73"/></literal></expr></argument>,<argument><expr><name pos:line="179" pos:column="74">fname<pos:position pos:line="179" pos:column="79"/></name></expr></argument>,<argument><expr><name pos:line="179" pos:column="80">i<pos:position pos:line="179" pos:column="81"/></name></expr></argument>)<pos:position pos:line="179" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="83"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="180" pos:column="33">write_int<pos:position pos:line="180" pos:column="42"/></name><argument_list pos:line="180" pos:column="42">(<argument><expr><name pos:line="180" pos:column="43">f_gen<pos:position pos:line="180" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="180" pos:column="49">i<pos:position pos:line="180" pos:column="50"/></name></expr></argument>)<pos:position pos:line="180" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="181" pos:column="26"/></block></else></if>
		}<pos:position pos:line="182" pos:column="18"/></block></then></if>
	}<pos:position pos:line="183" pos:column="10"/></block></while>

	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">preserve_hard_links<pos:position pos:line="185" pos:column="32"/></name></expr>)<pos:position pos:line="185" pos:column="33"/></condition><then pos:line="185" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="17">do_hard_links<pos:position pos:line="186" pos:column="30"/></name><argument_list pos:line="186" pos:column="30">(<argument><expr><name pos:line="186" pos:column="31">flist<pos:position pos:line="186" pos:column="36"/></name></expr></argument>)<pos:position pos:line="186" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="38"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="188" pos:column="9">/* now we need to fix any directory permissions that were 
	   modified during the transfer */</comment>
	<for pos:line="190" pos:column="9">for <control pos:line="190" pos:column="13">(<init><expr><name pos:line="190" pos:column="14">i<pos:position pos:line="190" pos:column="15"/></name> <operator pos:line="190" pos:column="16">=<pos:position pos:line="190" pos:column="17"/></operator> <literal type="number" pos:line="190" pos:column="18">0<pos:position pos:line="190" pos:column="19"/></literal></expr>;<pos:position pos:line="190" pos:column="20"/></init> <condition><expr><name pos:line="190" pos:column="21">i<pos:position pos:line="190" pos:column="22"/></name> <operator pos:line="190" pos:column="23">&lt;<pos:position pos:line="190" pos:column="27"/></operator> <name><name pos:line="190" pos:column="25">flist<pos:position pos:line="190" pos:column="30"/></name><operator pos:line="190" pos:column="30">-&gt;<pos:position pos:line="190" pos:column="35"/></operator><name pos:line="190" pos:column="32">count<pos:position pos:line="190" pos:column="37"/></name></name></expr>;<pos:position pos:line="190" pos:column="38"/></condition> <incr><expr><name pos:line="190" pos:column="39">i<pos:position pos:line="190" pos:column="40"/></name><operator pos:line="190" pos:column="40">++<pos:position pos:line="190" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="190" pos:column="43"/></control> <block pos:line="190" pos:column="44">{
		<expr_stmt><expr><name pos:line="191" pos:column="17">file<pos:position pos:line="191" pos:column="21"/></name> <operator pos:line="191" pos:column="22">=<pos:position pos:line="191" pos:column="23"/></operator> <name><name pos:line="191" pos:column="24">flist<pos:position pos:line="191" pos:column="29"/></name><operator pos:line="191" pos:column="29">-&gt;<pos:position pos:line="191" pos:column="34"/></operator><name pos:line="191" pos:column="31">files<pos:position pos:line="191" pos:column="36"/></name><index pos:line="191" pos:column="36">[<expr><name pos:line="191" pos:column="37">i<pos:position pos:line="191" pos:column="38"/></name></expr>]<pos:position pos:line="191" pos:column="39"/></index></name></expr>;<pos:position pos:line="191" pos:column="40"/></expr_stmt>
		<if pos:line="192" pos:column="17">if <condition pos:line="192" pos:column="20">(<expr><operator pos:line="192" pos:column="21">!<pos:position pos:line="192" pos:column="22"/></operator><name><name pos:line="192" pos:column="22">file<pos:position pos:line="192" pos:column="26"/></name><operator pos:line="192" pos:column="26">-&gt;<pos:position pos:line="192" pos:column="31"/></operator><name pos:line="192" pos:column="28">basename<pos:position pos:line="192" pos:column="36"/></name></name> <operator pos:line="192" pos:column="37">||<pos:position pos:line="192" pos:column="39"/></operator> <operator pos:line="192" pos:column="40">!<pos:position pos:line="192" pos:column="41"/></operator><call><name pos:line="192" pos:column="41">S_ISDIR<pos:position pos:line="192" pos:column="48"/></name><argument_list pos:line="192" pos:column="48">(<argument><expr><name><name pos:line="192" pos:column="49">file<pos:position pos:line="192" pos:column="53"/></name><operator pos:line="192" pos:column="53">-&gt;<pos:position pos:line="192" pos:column="58"/></operator><name pos:line="192" pos:column="55">mode<pos:position pos:line="192" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="192" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="192" pos:column="61"/></condition><then pos:line="192" pos:column="61"> <block type="pseudo"><continue pos:line="192" pos:column="62">continue;<pos:position pos:line="192" pos:column="71"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="193" pos:column="17">recv_generator<pos:position pos:line="193" pos:column="31"/></name><argument_list pos:line="193" pos:column="31">(<argument><expr><call><name pos:line="193" pos:column="32">f_name<pos:position pos:line="193" pos:column="38"/></name><argument_list pos:line="193" pos:column="38">(<argument><expr><name pos:line="193" pos:column="39">file<pos:position pos:line="193" pos:column="43"/></name></expr></argument>)<pos:position pos:line="193" pos:column="44"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="193" pos:column="45">flist<pos:position pos:line="193" pos:column="50"/></name></expr></argument>,<argument><expr><name pos:line="193" pos:column="51">i<pos:position pos:line="193" pos:column="52"/></name></expr></argument>,<argument><expr><operator pos:line="193" pos:column="53">-<pos:position pos:line="193" pos:column="54"/></operator><literal type="number" pos:line="193" pos:column="54">1<pos:position pos:line="193" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="194" pos:column="10"/></block></for>

	<if pos:line="196" pos:column="9">if <condition pos:line="196" pos:column="12">(<expr><name pos:line="196" pos:column="13">verbose<pos:position pos:line="196" pos:column="20"/></name> <operator pos:line="196" pos:column="21">&gt;<pos:position pos:line="196" pos:column="25"/></operator> <literal type="number" pos:line="196" pos:column="23">2<pos:position pos:line="196" pos:column="24"/></literal></expr>)<pos:position pos:line="196" pos:column="25"/></condition><then pos:line="196" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="197" pos:column="17">rprintf<pos:position pos:line="197" pos:column="24"/></name><argument_list pos:line="197" pos:column="24">(<argument><expr><name pos:line="197" pos:column="25">FINFO<pos:position pos:line="197" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="197" pos:column="31">"recv_files finished\n"<pos:position pos:line="197" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="56"/></expr_stmt></block></then></if>
	
	<return pos:line="199" pos:column="9">return <expr><literal type="number" pos:line="199" pos:column="16">0<pos:position pos:line="199" pos:column="17"/></literal></expr>;<pos:position pos:line="199" pos:column="18"/></return>
}<pos:position pos:line="200" pos:column="2"/></block></function></unit>

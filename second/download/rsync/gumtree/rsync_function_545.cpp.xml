<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_545.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">recv_generator<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">fname<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">file_list<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">flist<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">i<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">f_out<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{  
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">map_struct<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">buf<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">sum_struct<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">s<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">statret<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">file_struct<pos:position pos:line="8" pos:column="21"/></name></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">file<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name><name pos:line="8" pos:column="30">flist<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">files<pos:position pos:line="8" pos:column="42"/></name><index pos:line="8" pos:column="42">[<expr><name pos:line="8" pos:column="43">i<pos:position pos:line="8" pos:column="44"/></name></expr>]<pos:position pos:line="8" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">verbose<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&gt;<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">fprintf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">FINFO<pos:position pos:line="11" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="19">"recv_generator(%s,%d)\n"<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>,<argument><expr><name pos:line="11" pos:column="45">fname<pos:position pos:line="11" pos:column="50"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="51">i<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">statret<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">link_stat<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">fname<pos:position pos:line="13" pos:column="28"/></name></expr></argument>,<argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="30">st<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><call><name pos:line="15" pos:column="7">S_ISDIR<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name><name pos:line="15" pos:column="15">file<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">mode<pos:position pos:line="15" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">dry_run<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block type="pseudo"><return pos:line="16" pos:column="18">return;<pos:position pos:line="16" pos:column="25"/></return></block></then></if>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">statret<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">==<pos:position pos:line="17" pos:column="19"/></operator> <literal type="number" pos:line="17" pos:column="20">0<pos:position pos:line="17" pos:column="21"/></literal> <operator pos:line="17" pos:column="22">&amp;&amp;<pos:position pos:line="17" pos:column="32"/></operator> <operator pos:line="17" pos:column="25">!<pos:position pos:line="17" pos:column="26"/></operator><call><name pos:line="17" pos:column="26">S_ISDIR<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">st<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">.<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">st_mode<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="46"/></condition><then pos:line="17" pos:column="46"> <block pos:line="17" pos:column="47">{
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><call><name pos:line="18" pos:column="11">do_unlink<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">fname<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call> <operator pos:line="18" pos:column="28">!=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">fprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">FERROR<pos:position pos:line="19" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="19" pos:column="24">"unlink %s : %s\n"<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>,<argument><expr><name pos:line="19" pos:column="43">fname<pos:position pos:line="19" pos:column="48"/></name></expr></argument>,<argument><expr><call><name pos:line="19" pos:column="49">strerror<pos:position pos:line="19" pos:column="57"/></name><argument_list pos:line="19" pos:column="57">(<argument><expr><name pos:line="19" pos:column="58">errno<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
	<return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
      }<pos:position pos:line="21" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="22" pos:column="7">statret<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <operator pos:line="22" pos:column="17">-<pos:position pos:line="22" pos:column="18"/></operator><literal type="number" pos:line="22" pos:column="18">1<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">statret<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">!=<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal> <operator pos:line="24" pos:column="22">&amp;&amp;<pos:position pos:line="24" pos:column="32"/></operator> <call><name pos:line="24" pos:column="25">do_mkdir<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">fname<pos:position pos:line="24" pos:column="39"/></name></expr></argument>,<argument><expr><name><name pos:line="24" pos:column="40">file<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">-&gt;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="46">mode<pos:position pos:line="24" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call> <operator pos:line="24" pos:column="52">!=<pos:position pos:line="24" pos:column="54"/></operator> <literal type="number" pos:line="24" pos:column="55">0<pos:position pos:line="24" pos:column="56"/></literal> <operator pos:line="24" pos:column="57">&amp;&amp;<pos:position pos:line="24" pos:column="67"/></operator> <name pos:line="24" pos:column="60">errno<pos:position pos:line="24" pos:column="65"/></name> <operator pos:line="24" pos:column="66">!=<pos:position pos:line="24" pos:column="68"/></operator> <name pos:line="24" pos:column="69">EEXIST<pos:position pos:line="24" pos:column="75"/></name></expr>)<pos:position pos:line="24" pos:column="76"/></condition><then pos:line="24" pos:column="76"> <block pos:line="24" pos:column="77">{
	    <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">!<pos:position pos:line="25" pos:column="18"/></operator><operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">relative_paths<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">&amp;&amp;<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="37">errno<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">==<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">ENOENT<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">&amp;&amp;<pos:position pos:line="25" pos:column="61"/></operator> 
		  <call><name pos:line="26" pos:column="19">create_directory_path<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">fname<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call><operator pos:line="26" pos:column="47">==<pos:position pos:line="26" pos:column="49"/></operator><literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal> <operator pos:line="26" pos:column="51">&amp;&amp;<pos:position pos:line="26" pos:column="61"/></operator> 
		  <call><name pos:line="27" pos:column="19">do_mkdir<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">fname<pos:position pos:line="27" pos:column="33"/></name></expr></argument>,<argument><expr><name><name pos:line="27" pos:column="34">file<pos:position pos:line="27" pos:column="38"/></name><operator pos:line="27" pos:column="38">-&gt;<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="40">mode<pos:position pos:line="27" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call><operator pos:line="27" pos:column="45">==<pos:position pos:line="27" pos:column="47"/></operator><literal type="number" pos:line="27" pos:column="47">0<pos:position pos:line="27" pos:column="48"/></literal><operator pos:line="27" pos:column="48">)<pos:position pos:line="27" pos:column="49"/></operator></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50"> <block pos:line="27" pos:column="51">{
		    <expr_stmt><expr><call><name pos:line="28" pos:column="21">fprintf<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">FERROR<pos:position pos:line="28" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="28" pos:column="36">"mkdir %s : %s (2)\n"<pos:position pos:line="28" pos:column="57"/></literal></expr></argument>,
			    <argument><expr><name pos:line="29" pos:column="29">fname<pos:position pos:line="29" pos:column="34"/></name></expr></argument>,<argument><expr><call><name pos:line="29" pos:column="35">strerror<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">errno<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
	    }<pos:position pos:line="30" pos:column="14"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">set_perms<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">fname<pos:position pos:line="32" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="32" pos:column="25">file<pos:position pos:line="32" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="32" pos:column="30">NULL<pos:position pos:line="32" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call> <operator pos:line="32" pos:column="38">&amp;&amp;<pos:position pos:line="32" pos:column="48"/></operator> <name pos:line="32" pos:column="41">verbose<pos:position pos:line="32" pos:column="48"/></name></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="7">fprintf<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">FINFO<pos:position pos:line="33" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="33" pos:column="21">"%s/\n"<pos:position pos:line="33" pos:column="28"/></literal></expr></argument>,<argument><expr><name pos:line="33" pos:column="29">fname<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt></block></then></if>
    <return pos:line="34" pos:column="5">return;<pos:position pos:line="34" pos:column="12"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">preserve_links<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">&amp;&amp;<pos:position pos:line="37" pos:column="32"/></operator> <call><name pos:line="37" pos:column="25">S_ISLNK<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name><name pos:line="37" pos:column="33">file<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">mode<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <block pos:line="37" pos:column="46">{
<cpp:if pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">if<pos:position pos:line="38" pos:column="4"/></cpp:directive> <expr><name pos:line="38" pos:column="5">SUPPORT_LINKS<pos:position pos:line="38" pos:column="18"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">char<pos:position pos:line="39" pos:column="9"/></name></type> <name><name pos:line="39" pos:column="10">lnk<pos:position pos:line="39" pos:column="13"/></name><index pos:line="39" pos:column="13">[<expr><name pos:line="39" pos:column="14">MAXPATHLEN<pos:position pos:line="39" pos:column="24"/></name></expr>]<pos:position pos:line="39" pos:column="25"/></index></name></decl>;<pos:position pos:line="39" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">int<pos:position pos:line="40" pos:column="8"/></name></type> <name pos:line="40" pos:column="9">l<pos:position pos:line="40" pos:column="10"/></name></decl>;<pos:position pos:line="40" pos:column="11"/></decl_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">statret<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22"> <block pos:line="41" pos:column="23">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">l<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <call><name pos:line="42" pos:column="11">readlink<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">fname<pos:position pos:line="42" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="42" pos:column="26">lnk<pos:position pos:line="42" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="42" pos:column="30">MAXPATHLEN<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-<pos:position pos:line="42" pos:column="41"/></operator><literal type="number" pos:line="42" pos:column="41">1<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">l<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">&gt;<pos:position pos:line="43" pos:column="17"/></operator> <literal type="number" pos:line="43" pos:column="15">0<pos:position pos:line="43" pos:column="16"/></literal></expr>)<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17"> <block pos:line="43" pos:column="18">{
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">lnk<pos:position pos:line="44" pos:column="12"/></name><index pos:line="44" pos:column="12">[<expr><name pos:line="44" pos:column="13">l<pos:position pos:line="44" pos:column="14"/></name></expr>]<pos:position pos:line="44" pos:column="15"/></index></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>;<pos:position pos:line="44" pos:column="20"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">strcmp<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><name pos:line="45" pos:column="20">lnk<pos:position pos:line="45" pos:column="23"/></name></expr></argument>,<argument><expr><name><name pos:line="45" pos:column="24">file<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">-&gt;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="30">link<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="35"/></argument_list></call> <operator pos:line="45" pos:column="36">==<pos:position pos:line="45" pos:column="38"/></operator> <literal type="number" pos:line="45" pos:column="39">0<pos:position pos:line="45" pos:column="40"/></literal></expr>)<pos:position pos:line="45" pos:column="41"/></condition><then pos:line="45" pos:column="41"> <block pos:line="45" pos:column="42">{
	  <expr_stmt><expr><call><name pos:line="46" pos:column="11">set_perms<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">fname<pos:position pos:line="46" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="46" pos:column="27">file<pos:position pos:line="46" pos:column="31"/></name></expr></argument>,<argument><expr><operator pos:line="46" pos:column="32">&amp;<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="33">st<pos:position pos:line="46" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="46" pos:column="36">1<pos:position pos:line="46" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="39"/></expr_stmt>
	  <return pos:line="47" pos:column="11">return;<pos:position pos:line="47" pos:column="18"/></return>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">delete_file<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">fname<pos:position pos:line="51" pos:column="22"/></name></expr></argument>)<pos:position pos:line="51" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">do_symlink<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name><name pos:line="52" pos:column="20">file<pos:position pos:line="52" pos:column="24"/></name><operator pos:line="52" pos:column="24">-&gt;<pos:position pos:line="52" pos:column="29"/></operator><name pos:line="52" pos:column="26">link<pos:position pos:line="52" pos:column="30"/></name></name></expr></argument>,<argument><expr><name pos:line="52" pos:column="31">fname<pos:position pos:line="52" pos:column="36"/></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call> <operator pos:line="52" pos:column="38">!=<pos:position pos:line="52" pos:column="40"/></operator> <literal type="number" pos:line="52" pos:column="41">0<pos:position pos:line="52" pos:column="42"/></literal></expr>)<pos:position pos:line="52" pos:column="43"/></condition><then pos:line="52" pos:column="43"> <block pos:line="52" pos:column="44">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">fprintf<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">FERROR<pos:position pos:line="53" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="53" pos:column="22">"link %s -&gt; %s : %s\n"<pos:position pos:line="53" pos:column="47"/></literal></expr></argument>,
	      <argument><expr><name pos:line="54" pos:column="15">fname<pos:position pos:line="54" pos:column="20"/></name></expr></argument>,<argument><expr><name><name pos:line="54" pos:column="21">file<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">-&gt;<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="27">link<pos:position pos:line="54" pos:column="31"/></name></name></expr></argument>,<argument><expr><call><name pos:line="54" pos:column="32">strerror<pos:position pos:line="54" pos:column="40"/></name><argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">errno<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then> <else pos:line="55" pos:column="7">else <block pos:line="55" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">set_perms<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">fname<pos:position pos:line="56" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="56" pos:column="23">file<pos:position pos:line="56" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="56" pos:column="28">NULL<pos:position pos:line="56" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="56" pos:column="33">0<pos:position pos:line="56" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="36"/></expr_stmt>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><name pos:line="57" pos:column="11">verbose<pos:position pos:line="57" pos:column="18"/></name></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19"> 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="9">fprintf<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><name pos:line="58" pos:column="17">FINFO<pos:position pos:line="58" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="23">"%s -&gt; %s\n"<pos:position pos:line="58" pos:column="38"/></literal></expr></argument>,
		<argument><expr><name pos:line="59" pos:column="17">fname<pos:position pos:line="59" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="59" pos:column="23">file<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">link<pos:position pos:line="59" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="62" pos:column="5">return;<pos:position pos:line="62" pos:column="12"/></return>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">ifdef<pos:position pos:line="65" pos:column="7"/></cpp:directive> <name pos:line="65" pos:column="8">HAVE_MKNOD<pos:position pos:line="65" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name pos:line="66" pos:column="7">am_root<pos:position pos:line="66" pos:column="14"/></name> <operator pos:line="66" pos:column="15">&amp;&amp;<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="18">preserve_devices<pos:position pos:line="66" pos:column="34"/></name> <operator pos:line="66" pos:column="35">&amp;&amp;<pos:position pos:line="66" pos:column="45"/></operator> <call><name pos:line="66" pos:column="38">IS_DEVICE<pos:position pos:line="66" pos:column="47"/></name><argument_list pos:line="66" pos:column="47">(<argument><expr><name><name pos:line="66" pos:column="48">file<pos:position pos:line="66" pos:column="52"/></name><operator pos:line="66" pos:column="52">-&gt;<pos:position pos:line="66" pos:column="57"/></operator><name pos:line="66" pos:column="54">mode<pos:position pos:line="66" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="60"/></condition><then pos:line="66" pos:column="60"> <block pos:line="66" pos:column="61">{
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">statret<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">!=<pos:position pos:line="67" pos:column="19"/></operator> <literal type="number" pos:line="67" pos:column="20">0<pos:position pos:line="67" pos:column="21"/></literal> <operator pos:line="67" pos:column="22">||<pos:position pos:line="67" pos:column="24"/></operator> 
	<name><name pos:line="68" pos:column="9">st<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">.<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">st_mode<pos:position pos:line="68" pos:column="19"/></name></name> <operator pos:line="68" pos:column="20">!=<pos:position pos:line="68" pos:column="22"/></operator> <name><name pos:line="68" pos:column="23">file<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">mode<pos:position pos:line="68" pos:column="33"/></name></name> <operator pos:line="68" pos:column="34">||<pos:position pos:line="68" pos:column="36"/></operator>
	<name><name pos:line="69" pos:column="9">st<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">.<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="12">st_rdev<pos:position pos:line="69" pos:column="19"/></name></name> <operator pos:line="69" pos:column="20">!=<pos:position pos:line="69" pos:column="22"/></operator> <name><name pos:line="69" pos:column="23">file<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">-&gt;<pos:position pos:line="69" pos:column="32"/></operator><name pos:line="69" pos:column="29">rdev<pos:position pos:line="69" pos:column="33"/></name></name></expr>)<pos:position pos:line="69" pos:column="34"/></condition><then pos:line="69" pos:column="34"> <block pos:line="69" pos:column="35">{	
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">delete_file<pos:position pos:line="70" pos:column="18"/></name><argument_list pos:line="70" pos:column="18">(<argument><expr><name pos:line="70" pos:column="19">fname<pos:position pos:line="70" pos:column="24"/></name></expr></argument>)<pos:position pos:line="70" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="26"/></expr_stmt>
      <if pos:line="71" pos:column="7">if <condition pos:line="71" pos:column="10">(<expr><name pos:line="71" pos:column="11">verbose<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">&gt;<pos:position pos:line="71" pos:column="23"/></operator> <literal type="number" pos:line="71" pos:column="21">2<pos:position pos:line="71" pos:column="22"/></literal></expr>)<pos:position pos:line="71" pos:column="23"/></condition><then pos:line="71" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="9">fprintf<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">FINFO<pos:position pos:line="72" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="72" pos:column="23">"mknod(%s,0%o,0x%x)\n"<pos:position pos:line="72" pos:column="45"/></literal></expr></argument>,
		<argument><expr><name pos:line="73" pos:column="17">fname<pos:position pos:line="73" pos:column="22"/></name></expr></argument>,<argument><expr><operator pos:line="73" pos:column="23">(<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">int<pos:position pos:line="73" pos:column="27"/></name><operator pos:line="73" pos:column="27">)<pos:position pos:line="73" pos:column="28"/></operator><name><name pos:line="73" pos:column="28">file<pos:position pos:line="73" pos:column="32"/></name><operator pos:line="73" pos:column="32">-&gt;<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="34">mode<pos:position pos:line="73" pos:column="38"/></name></name></expr></argument>,<argument><expr><operator pos:line="73" pos:column="39">(<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="40">int<pos:position pos:line="73" pos:column="43"/></name><operator pos:line="73" pos:column="43">)<pos:position pos:line="73" pos:column="44"/></operator><name><name pos:line="73" pos:column="44">file<pos:position pos:line="73" pos:column="48"/></name><operator pos:line="73" pos:column="48">-&gt;<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="50">rdev<pos:position pos:line="73" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt></block></then></if>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><call><name pos:line="74" pos:column="11">do_mknod<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><name pos:line="74" pos:column="20">fname<pos:position pos:line="74" pos:column="25"/></name></expr></argument>,<argument><expr><name><name pos:line="74" pos:column="26">file<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">-&gt;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="32">mode<pos:position pos:line="74" pos:column="36"/></name></name></expr></argument>,<argument><expr><name><name pos:line="74" pos:column="37">file<pos:position pos:line="74" pos:column="41"/></name><operator pos:line="74" pos:column="41">-&gt;<pos:position pos:line="74" pos:column="46"/></operator><name pos:line="74" pos:column="43">rdev<pos:position pos:line="74" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call> <operator pos:line="74" pos:column="49">!=<pos:position pos:line="74" pos:column="51"/></operator> <literal type="number" pos:line="74" pos:column="52">0<pos:position pos:line="74" pos:column="53"/></literal></expr>)<pos:position pos:line="74" pos:column="54"/></condition><then pos:line="74" pos:column="54"> <block pos:line="74" pos:column="55">{
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">fprintf<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">FERROR<pos:position pos:line="75" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="75" pos:column="24">"mknod %s : %s\n"<pos:position pos:line="75" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="75" pos:column="42">fname<pos:position pos:line="75" pos:column="47"/></name></expr></argument>,<argument><expr><call><name pos:line="75" pos:column="48">strerror<pos:position pos:line="75" pos:column="56"/></name><argument_list pos:line="75" pos:column="56">(<argument><expr><name pos:line="75" pos:column="57">errno<pos:position pos:line="75" pos:column="62"/></name></expr></argument>)<pos:position pos:line="75" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="76" pos:column="8"/></block></then> <else pos:line="76" pos:column="9">else <block pos:line="76" pos:column="14">{
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">set_perms<pos:position pos:line="77" pos:column="18"/></name><argument_list pos:line="77" pos:column="18">(<argument><expr><name pos:line="77" pos:column="19">fname<pos:position pos:line="77" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="77" pos:column="25">file<pos:position pos:line="77" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="77" pos:column="30">NULL<pos:position pos:line="77" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="77" pos:column="35">0<pos:position pos:line="77" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">verbose<pos:position pos:line="78" pos:column="20"/></name></expr>)<pos:position pos:line="78" pos:column="21"/></condition><then pos:line="78" pos:column="21">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="11">fprintf<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><name pos:line="79" pos:column="19">FINFO<pos:position pos:line="79" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="79" pos:column="25">"%s\n"<pos:position pos:line="79" pos:column="31"/></literal></expr></argument>,<argument><expr><name pos:line="79" pos:column="32">fname<pos:position pos:line="79" pos:column="37"/></name></expr></argument>)<pos:position pos:line="79" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="39"/></expr_stmt></block></then></if>
      }<pos:position pos:line="80" pos:column="8"/></block></else></if>
    }<pos:position pos:line="81" pos:column="6"/></block></then> <else pos:line="81" pos:column="7">else <block pos:line="81" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">set_perms<pos:position pos:line="82" pos:column="16"/></name><argument_list pos:line="82" pos:column="16">(<argument><expr><name pos:line="82" pos:column="17">fname<pos:position pos:line="82" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="82" pos:column="23">file<pos:position pos:line="82" pos:column="27"/></name></expr></argument>,<argument><expr><operator pos:line="82" pos:column="28">&amp;<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="29">st<pos:position pos:line="82" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="82" pos:column="32">1<pos:position pos:line="82" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></else></if>
    <return pos:line="84" pos:column="5">return;<pos:position pos:line="84" pos:column="12"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></then></if>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif<pos:position pos:line="86" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><name pos:line="88" pos:column="7">preserve_hard_links<pos:position pos:line="88" pos:column="26"/></name> <operator pos:line="88" pos:column="27">&amp;&amp;<pos:position pos:line="88" pos:column="37"/></operator> <call><name pos:line="88" pos:column="30">check_hard_link<pos:position pos:line="88" pos:column="45"/></name><argument_list pos:line="88" pos:column="45">(<argument><expr><name pos:line="88" pos:column="46">file<pos:position pos:line="88" pos:column="50"/></name></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="52"/></condition><then pos:line="88" pos:column="52"> <block pos:line="88" pos:column="53">{
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">verbose<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">&gt;<pos:position pos:line="89" pos:column="21"/></operator> <literal type="number" pos:line="89" pos:column="19">1<pos:position pos:line="89" pos:column="20"/></literal></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="7">fprintf<pos:position pos:line="90" pos:column="14"/></name><argument_list pos:line="90" pos:column="14">(<argument><expr><name pos:line="90" pos:column="15">FINFO<pos:position pos:line="90" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="90" pos:column="21">"%s is a hard link\n"<pos:position pos:line="90" pos:column="42"/></literal></expr></argument>,<argument><expr><call><name pos:line="90" pos:column="43">f_name<pos:position pos:line="90" pos:column="49"/></name><argument_list pos:line="90" pos:column="49">(<argument><expr><name pos:line="90" pos:column="50">file<pos:position pos:line="90" pos:column="54"/></name></expr></argument>)<pos:position pos:line="90" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="57"/></expr_stmt></block></then></if>
    <return pos:line="91" pos:column="5">return;<pos:position pos:line="91" pos:column="12"/></return>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>

  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><operator pos:line="94" pos:column="7">!<pos:position pos:line="94" pos:column="8"/></operator><call><name pos:line="94" pos:column="8">S_ISREG<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><name><name pos:line="94" pos:column="16">file<pos:position pos:line="94" pos:column="20"/></name><operator pos:line="94" pos:column="20">-&gt;<pos:position pos:line="94" pos:column="25"/></operator><name pos:line="94" pos:column="22">mode<pos:position pos:line="94" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="28"/></condition><then pos:line="94" pos:column="28"> <block pos:line="94" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">fprintf<pos:position pos:line="95" pos:column="12"/></name><argument_list pos:line="95" pos:column="12">(<argument><expr><name pos:line="95" pos:column="13">FINFO<pos:position pos:line="95" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="95" pos:column="19">"skipping non-regular file %s\n"<pos:position pos:line="95" pos:column="51"/></literal></expr></argument>,<argument><expr><name pos:line="95" pos:column="52">fname<pos:position pos:line="95" pos:column="57"/></name></expr></argument>)<pos:position pos:line="95" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="59"/></expr_stmt>
    <return pos:line="96" pos:column="5">return;<pos:position pos:line="96" pos:column="12"/></return>
  }<pos:position pos:line="97" pos:column="4"/></block></then></if>

  <if pos:line="99" pos:column="3">if <condition pos:line="99" pos:column="6">(<expr><name pos:line="99" pos:column="7">statret<pos:position pos:line="99" pos:column="14"/></name> <operator pos:line="99" pos:column="15">==<pos:position pos:line="99" pos:column="17"/></operator> <operator pos:line="99" pos:column="18">-<pos:position pos:line="99" pos:column="19"/></operator><literal type="number" pos:line="99" pos:column="19">1<pos:position pos:line="99" pos:column="20"/></literal></expr>)<pos:position pos:line="99" pos:column="21"/></condition><then pos:line="99" pos:column="21"> <block pos:line="99" pos:column="22">{
    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name pos:line="100" pos:column="9">errno<pos:position pos:line="100" pos:column="14"/></name> <operator pos:line="100" pos:column="15">==<pos:position pos:line="100" pos:column="17"/></operator> <name pos:line="100" pos:column="18">ENOENT<pos:position pos:line="100" pos:column="24"/></name></expr>)<pos:position pos:line="100" pos:column="25"/></condition><then pos:line="100" pos:column="25"> <block pos:line="100" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="101" pos:column="7">write_int<pos:position pos:line="101" pos:column="16"/></name><argument_list pos:line="101" pos:column="16">(<argument><expr><name pos:line="101" pos:column="17">f_out<pos:position pos:line="101" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="101" pos:column="23">i<pos:position pos:line="101" pos:column="24"/></name></expr></argument>)<pos:position pos:line="101" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="26"/></expr_stmt>
      <if pos:line="102" pos:column="7">if <condition pos:line="102" pos:column="10">(<expr><operator pos:line="102" pos:column="11">!<pos:position pos:line="102" pos:column="12"/></operator><name pos:line="102" pos:column="12">dry_run<pos:position pos:line="102" pos:column="19"/></name></expr>)<pos:position pos:line="102" pos:column="20"/></condition><then pos:line="102" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="21">send_sums<pos:position pos:line="102" pos:column="30"/></name><argument_list pos:line="102" pos:column="30">(<argument><expr><name pos:line="102" pos:column="31">NULL<pos:position pos:line="102" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="102" pos:column="36">f_out<pos:position pos:line="102" pos:column="41"/></name></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt></block></then></if>
    }<pos:position pos:line="103" pos:column="6"/></block></then> <else pos:line="103" pos:column="7">else <block pos:line="103" pos:column="12">{
      <if pos:line="104" pos:column="7">if <condition pos:line="104" pos:column="10">(<expr><name pos:line="104" pos:column="11">verbose<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">&gt;<pos:position pos:line="104" pos:column="23"/></operator> <literal type="number" pos:line="104" pos:column="21">1<pos:position pos:line="104" pos:column="22"/></literal></expr>)<pos:position pos:line="104" pos:column="23"/></condition><then pos:line="104" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="9">fprintf<pos:position pos:line="105" pos:column="16"/></name><argument_list pos:line="105" pos:column="16">(<argument><expr><name pos:line="105" pos:column="17">FERROR<pos:position pos:line="105" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="105" pos:column="24">"recv_generator failed to open %s\n"<pos:position pos:line="105" pos:column="60"/></literal></expr></argument>,<argument><expr><name pos:line="105" pos:column="61">fname<pos:position pos:line="105" pos:column="66"/></name></expr></argument>)<pos:position pos:line="105" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="68"/></expr_stmt></block></then></if>
    }<pos:position pos:line="106" pos:column="6"/></block></else></if>
    <return pos:line="107" pos:column="5">return;<pos:position pos:line="107" pos:column="12"/></return>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if>

  <if pos:line="110" pos:column="3">if <condition pos:line="110" pos:column="6">(<expr><operator pos:line="110" pos:column="7">!<pos:position pos:line="110" pos:column="8"/></operator><call><name pos:line="110" pos:column="8">S_ISREG<pos:position pos:line="110" pos:column="15"/></name><argument_list pos:line="110" pos:column="15">(<argument><expr><name><name pos:line="110" pos:column="16">st<pos:position pos:line="110" pos:column="18"/></name><operator pos:line="110" pos:column="18">.<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="19">st_mode<pos:position pos:line="110" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="28"/></condition><then pos:line="110" pos:column="28"> <block pos:line="110" pos:column="29">{
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><call><name pos:line="111" pos:column="9">delete_file<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">fname<pos:position pos:line="111" pos:column="26"/></name></expr></argument>)<pos:position pos:line="111" pos:column="27"/></argument_list></call> <operator pos:line="111" pos:column="28">!=<pos:position pos:line="111" pos:column="30"/></operator> <literal type="number" pos:line="111" pos:column="31">0<pos:position pos:line="111" pos:column="32"/></literal></expr>)<pos:position pos:line="111" pos:column="33"/></condition><then pos:line="111" pos:column="33"> <block pos:line="111" pos:column="34">{
      <return pos:line="112" pos:column="7">return;<pos:position pos:line="112" pos:column="14"/></return>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="115" pos:column="5">/* now pretend the file didn't exist */</comment>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">write_int<pos:position pos:line="116" pos:column="14"/></name><argument_list pos:line="116" pos:column="14">(<argument><expr><name pos:line="116" pos:column="15">f_out<pos:position pos:line="116" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="116" pos:column="21">i<pos:position pos:line="116" pos:column="22"/></name></expr></argument>)<pos:position pos:line="116" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="24"/></expr_stmt>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><operator pos:line="117" pos:column="9">!<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="10">dry_run<pos:position pos:line="117" pos:column="17"/></name></expr>)<pos:position pos:line="117" pos:column="18"/></condition><then pos:line="117" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="19">send_sums<pos:position pos:line="117" pos:column="28"/></name><argument_list pos:line="117" pos:column="28">(<argument><expr><name pos:line="117" pos:column="29">NULL<pos:position pos:line="117" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="117" pos:column="34">f_out<pos:position pos:line="117" pos:column="39"/></name></expr></argument>)<pos:position pos:line="117" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="41"/></expr_stmt></block></then></if>    
    <return pos:line="118" pos:column="5">return;<pos:position pos:line="118" pos:column="12"/></return>
  }<pos:position pos:line="119" pos:column="4"/></block></then></if>

  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><name pos:line="121" pos:column="7">update_only<pos:position pos:line="121" pos:column="18"/></name> <operator pos:line="121" pos:column="19">&amp;&amp;<pos:position pos:line="121" pos:column="29"/></operator> <name><name pos:line="121" pos:column="22">st<pos:position pos:line="121" pos:column="24"/></name><operator pos:line="121" pos:column="24">.<pos:position pos:line="121" pos:column="25"/></operator><name pos:line="121" pos:column="25">st_mtime<pos:position pos:line="121" pos:column="33"/></name></name> <operator pos:line="121" pos:column="34">&gt;<pos:position pos:line="121" pos:column="38"/></operator> <name><name pos:line="121" pos:column="36">file<pos:position pos:line="121" pos:column="40"/></name><operator pos:line="121" pos:column="40">-&gt;<pos:position pos:line="121" pos:column="45"/></operator><name pos:line="121" pos:column="42">modtime<pos:position pos:line="121" pos:column="49"/></name></name></expr>)<pos:position pos:line="121" pos:column="50"/></condition><then pos:line="121" pos:column="50"> <block pos:line="121" pos:column="51">{
    <if pos:line="122" pos:column="5">if <condition pos:line="122" pos:column="8">(<expr><name pos:line="122" pos:column="9">verbose<pos:position pos:line="122" pos:column="16"/></name> <operator pos:line="122" pos:column="17">&gt;<pos:position pos:line="122" pos:column="21"/></operator> <literal type="number" pos:line="122" pos:column="19">1<pos:position pos:line="122" pos:column="20"/></literal></expr>)<pos:position pos:line="122" pos:column="21"/></condition><then pos:line="122" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="7">fprintf<pos:position pos:line="123" pos:column="14"/></name><argument_list pos:line="123" pos:column="14">(<argument><expr><name pos:line="123" pos:column="15">FINFO<pos:position pos:line="123" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="123" pos:column="21">"%s is newer\n"<pos:position pos:line="123" pos:column="36"/></literal></expr></argument>,<argument><expr><name pos:line="123" pos:column="37">fname<pos:position pos:line="123" pos:column="42"/></name></expr></argument>)<pos:position pos:line="123" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="44"/></expr_stmt></block></then></if>
    <return pos:line="124" pos:column="5">return;<pos:position pos:line="124" pos:column="12"/></return>
  }<pos:position pos:line="125" pos:column="4"/></block></then></if>

  <if pos:line="127" pos:column="3">if <condition pos:line="127" pos:column="6">(<expr><call><name pos:line="127" pos:column="7">skip_file<pos:position pos:line="127" pos:column="16"/></name><argument_list pos:line="127" pos:column="16">(<argument><expr><name pos:line="127" pos:column="17">fname<pos:position pos:line="127" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="24">file<pos:position pos:line="127" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="127" pos:column="30">&amp;<pos:position pos:line="127" pos:column="35"/></operator><name pos:line="127" pos:column="31">st<pos:position pos:line="127" pos:column="33"/></name></expr></argument>)<pos:position pos:line="127" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="35"/></condition><then pos:line="127" pos:column="35"> <block pos:line="127" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">set_perms<pos:position pos:line="128" pos:column="14"/></name><argument_list pos:line="128" pos:column="14">(<argument><expr><name pos:line="128" pos:column="15">fname<pos:position pos:line="128" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="128" pos:column="21">file<pos:position pos:line="128" pos:column="25"/></name></expr></argument>,<argument><expr><operator pos:line="128" pos:column="26">&amp;<pos:position pos:line="128" pos:column="31"/></operator><name pos:line="128" pos:column="27">st<pos:position pos:line="128" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="128" pos:column="30">1<pos:position pos:line="128" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="33"/></expr_stmt>
    <return pos:line="129" pos:column="5">return;<pos:position pos:line="129" pos:column="12"/></return>
  }<pos:position pos:line="130" pos:column="4"/></block></then></if>

  <if pos:line="132" pos:column="3">if <condition pos:line="132" pos:column="6">(<expr><name pos:line="132" pos:column="7">dry_run<pos:position pos:line="132" pos:column="14"/></name></expr>)<pos:position pos:line="132" pos:column="15"/></condition><then pos:line="132" pos:column="15"> <block pos:line="132" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">write_int<pos:position pos:line="133" pos:column="14"/></name><argument_list pos:line="133" pos:column="14">(<argument><expr><name pos:line="133" pos:column="15">f_out<pos:position pos:line="133" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="133" pos:column="21">i<pos:position pos:line="133" pos:column="22"/></name></expr></argument>)<pos:position pos:line="133" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="24"/></expr_stmt>
    <return pos:line="134" pos:column="5">return;<pos:position pos:line="134" pos:column="12"/></return>
  }<pos:position pos:line="135" pos:column="4"/></block></then></if>

  <if pos:line="137" pos:column="3">if <condition pos:line="137" pos:column="6">(<expr><name pos:line="137" pos:column="7">whole_file<pos:position pos:line="137" pos:column="17"/></name></expr>)<pos:position pos:line="137" pos:column="18"/></condition><then pos:line="137" pos:column="18"> <block pos:line="137" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="138" pos:column="5">write_int<pos:position pos:line="138" pos:column="14"/></name><argument_list pos:line="138" pos:column="14">(<argument><expr><name pos:line="138" pos:column="15">f_out<pos:position pos:line="138" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="138" pos:column="21">i<pos:position pos:line="138" pos:column="22"/></name></expr></argument>)<pos:position pos:line="138" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="139" pos:column="5">send_sums<pos:position pos:line="139" pos:column="14"/></name><argument_list pos:line="139" pos:column="14">(<argument><expr><name pos:line="139" pos:column="15">NULL<pos:position pos:line="139" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="139" pos:column="20">f_out<pos:position pos:line="139" pos:column="25"/></name></expr></argument>)<pos:position pos:line="139" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="27"/></expr_stmt>    
    <return pos:line="140" pos:column="5">return;<pos:position pos:line="140" pos:column="12"/></return>
  }<pos:position pos:line="141" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="143" pos:column="3">/* open the file */</comment>  
  <expr_stmt><expr><name pos:line="144" pos:column="3">fd<pos:position pos:line="144" pos:column="5"/></name> <operator pos:line="144" pos:column="6">=<pos:position pos:line="144" pos:column="7"/></operator> <call><name pos:line="144" pos:column="8">open<pos:position pos:line="144" pos:column="12"/></name><argument_list pos:line="144" pos:column="12">(<argument><expr><name pos:line="144" pos:column="13">fname<pos:position pos:line="144" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="144" pos:column="19">O_RDONLY<pos:position pos:line="144" pos:column="27"/></name></expr></argument>)<pos:position pos:line="144" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="29"/></expr_stmt>

  <if pos:line="146" pos:column="3">if <condition pos:line="146" pos:column="6">(<expr><name pos:line="146" pos:column="7">fd<pos:position pos:line="146" pos:column="9"/></name> <operator pos:line="146" pos:column="10">==<pos:position pos:line="146" pos:column="12"/></operator> <operator pos:line="146" pos:column="13">-<pos:position pos:line="146" pos:column="14"/></operator><literal type="number" pos:line="146" pos:column="14">1<pos:position pos:line="146" pos:column="15"/></literal></expr>)<pos:position pos:line="146" pos:column="16"/></condition><then pos:line="146" pos:column="16"> <block pos:line="146" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="147" pos:column="5">fprintf<pos:position pos:line="147" pos:column="12"/></name><argument_list pos:line="147" pos:column="12">(<argument><expr><name pos:line="147" pos:column="13">FERROR<pos:position pos:line="147" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="147" pos:column="20">"failed to open %s : %s\n"<pos:position pos:line="147" pos:column="46"/></literal></expr></argument>,<argument><expr><name pos:line="147" pos:column="47">fname<pos:position pos:line="147" pos:column="52"/></name></expr></argument>,<argument><expr><call><name pos:line="147" pos:column="53">strerror<pos:position pos:line="147" pos:column="61"/></name><argument_list pos:line="147" pos:column="61">(<argument><expr><name pos:line="147" pos:column="62">errno<pos:position pos:line="147" pos:column="67"/></name></expr></argument>)<pos:position pos:line="147" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="147" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="148" pos:column="5">fprintf<pos:position pos:line="148" pos:column="12"/></name><argument_list pos:line="148" pos:column="12">(<argument><expr><name pos:line="148" pos:column="13">FERROR<pos:position pos:line="148" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="148" pos:column="20">"skipping %s\n"<pos:position pos:line="148" pos:column="35"/></literal></expr></argument>,<argument><expr><name pos:line="148" pos:column="36">fname<pos:position pos:line="148" pos:column="41"/></name></expr></argument>)<pos:position pos:line="148" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="43"/></expr_stmt>
    <return pos:line="149" pos:column="5">return;<pos:position pos:line="149" pos:column="12"/></return>
  }<pos:position pos:line="150" pos:column="4"/></block></then></if>

  <if pos:line="152" pos:column="3">if <condition pos:line="152" pos:column="6">(<expr><name><name pos:line="152" pos:column="7">st<pos:position pos:line="152" pos:column="9"/></name><operator pos:line="152" pos:column="9">.<pos:position pos:line="152" pos:column="10"/></operator><name pos:line="152" pos:column="10">st_size<pos:position pos:line="152" pos:column="17"/></name></name> <operator pos:line="152" pos:column="18">&gt;<pos:position pos:line="152" pos:column="22"/></operator> <literal type="number" pos:line="152" pos:column="20">0<pos:position pos:line="152" pos:column="21"/></literal></expr>)<pos:position pos:line="152" pos:column="22"/></condition><then pos:line="152" pos:column="22"> <block pos:line="152" pos:column="23">{
    <expr_stmt><expr><name pos:line="153" pos:column="5">buf<pos:position pos:line="153" pos:column="8"/></name> <operator pos:line="153" pos:column="9">=<pos:position pos:line="153" pos:column="10"/></operator> <call><name pos:line="153" pos:column="11">map_file<pos:position pos:line="153" pos:column="19"/></name><argument_list pos:line="153" pos:column="19">(<argument><expr><name pos:line="153" pos:column="20">fd<pos:position pos:line="153" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="153" pos:column="23">st<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">.<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="26">st_size<pos:position pos:line="153" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="154" pos:column="4"/></block></then> <else pos:line="154" pos:column="5">else <block pos:line="154" pos:column="10">{
    <expr_stmt><expr><name pos:line="155" pos:column="5">buf<pos:position pos:line="155" pos:column="8"/></name> <operator pos:line="155" pos:column="9">=<pos:position pos:line="155" pos:column="10"/></operator> <name pos:line="155" pos:column="11">NULL<pos:position pos:line="155" pos:column="15"/></name></expr>;<pos:position pos:line="155" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="156" pos:column="4"/></block></else></if>

  <if pos:line="158" pos:column="3">if <condition pos:line="158" pos:column="6">(<expr><name pos:line="158" pos:column="7">verbose<pos:position pos:line="158" pos:column="14"/></name> <operator pos:line="158" pos:column="15">&gt;<pos:position pos:line="158" pos:column="19"/></operator> <literal type="number" pos:line="158" pos:column="17">3<pos:position pos:line="158" pos:column="18"/></literal></expr>)<pos:position pos:line="158" pos:column="19"/></condition><then pos:line="158" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="5">fprintf<pos:position pos:line="159" pos:column="12"/></name><argument_list pos:line="159" pos:column="12">(<argument><expr><name pos:line="159" pos:column="13">FINFO<pos:position pos:line="159" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="159" pos:column="19">"gen mapped %s of size %d\n"<pos:position pos:line="159" pos:column="47"/></literal></expr></argument>,<argument><expr><name pos:line="159" pos:column="48">fname<pos:position pos:line="159" pos:column="53"/></name></expr></argument>,<argument><expr><operator pos:line="159" pos:column="54">(<pos:position pos:line="159" pos:column="55"/></operator><name pos:line="159" pos:column="55">int<pos:position pos:line="159" pos:column="58"/></name><operator pos:line="159" pos:column="58">)<pos:position pos:line="159" pos:column="59"/></operator><name><name pos:line="159" pos:column="59">st<pos:position pos:line="159" pos:column="61"/></name><operator pos:line="159" pos:column="61">.<pos:position pos:line="159" pos:column="62"/></operator><name pos:line="159" pos:column="62">st_size<pos:position pos:line="159" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="71"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="161" pos:column="3">s<pos:position pos:line="161" pos:column="4"/></name> <operator pos:line="161" pos:column="5">=<pos:position pos:line="161" pos:column="6"/></operator> <call><name pos:line="161" pos:column="7">generate_sums<pos:position pos:line="161" pos:column="20"/></name><argument_list pos:line="161" pos:column="20">(<argument><expr><name pos:line="161" pos:column="21">buf<pos:position pos:line="161" pos:column="24"/></name></expr></argument>,<argument><expr><name><name pos:line="161" pos:column="25">st<pos:position pos:line="161" pos:column="27"/></name><operator pos:line="161" pos:column="27">.<pos:position pos:line="161" pos:column="28"/></operator><name pos:line="161" pos:column="28">st_size<pos:position pos:line="161" pos:column="35"/></name></name></expr></argument>,<argument><expr><call><name pos:line="161" pos:column="36">adapt_block_size<pos:position pos:line="161" pos:column="52"/></name><argument_list pos:line="161" pos:column="52">(<argument><expr><name pos:line="161" pos:column="53">file<pos:position pos:line="161" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="59">block_size<pos:position pos:line="161" pos:column="69"/></name></expr></argument>)<pos:position pos:line="161" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="161" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="72"/></expr_stmt>

  <if pos:line="163" pos:column="3">if <condition pos:line="163" pos:column="6">(<expr><name pos:line="163" pos:column="7">verbose<pos:position pos:line="163" pos:column="14"/></name> <operator pos:line="163" pos:column="15">&gt;<pos:position pos:line="163" pos:column="19"/></operator> <literal type="number" pos:line="163" pos:column="17">2<pos:position pos:line="163" pos:column="18"/></literal></expr>)<pos:position pos:line="163" pos:column="19"/></condition><then pos:line="163" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="5">fprintf<pos:position pos:line="164" pos:column="12"/></name><argument_list pos:line="164" pos:column="12">(<argument><expr><name pos:line="164" pos:column="13">FINFO<pos:position pos:line="164" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="164" pos:column="19">"sending sums for %d\n"<pos:position pos:line="164" pos:column="42"/></literal></expr></argument>,<argument><expr><name pos:line="164" pos:column="43">i<pos:position pos:line="164" pos:column="44"/></name></expr></argument>)<pos:position pos:line="164" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="46"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="166" pos:column="3">write_int<pos:position pos:line="166" pos:column="12"/></name><argument_list pos:line="166" pos:column="12">(<argument><expr><name pos:line="166" pos:column="13">f_out<pos:position pos:line="166" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="166" pos:column="19">i<pos:position pos:line="166" pos:column="20"/></name></expr></argument>)<pos:position pos:line="166" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="167" pos:column="3">send_sums<pos:position pos:line="167" pos:column="12"/></name><argument_list pos:line="167" pos:column="12">(<argument><expr><name pos:line="167" pos:column="13">s<pos:position pos:line="167" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="167" pos:column="15">f_out<pos:position pos:line="167" pos:column="20"/></name></expr></argument>)<pos:position pos:line="167" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="168" pos:column="3">write_flush<pos:position pos:line="168" pos:column="14"/></name><argument_list pos:line="168" pos:column="14">(<argument><expr><name pos:line="168" pos:column="15">f_out<pos:position pos:line="168" pos:column="20"/></name></expr></argument>)<pos:position pos:line="168" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="170" pos:column="3">close<pos:position pos:line="170" pos:column="8"/></name><argument_list pos:line="170" pos:column="8">(<argument><expr><name pos:line="170" pos:column="9">fd<pos:position pos:line="170" pos:column="11"/></name></expr></argument>)<pos:position pos:line="170" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="13"/></expr_stmt>
  <if pos:line="171" pos:column="3">if <condition pos:line="171" pos:column="6">(<expr><name pos:line="171" pos:column="7">buf<pos:position pos:line="171" pos:column="10"/></name></expr>)<pos:position pos:line="171" pos:column="11"/></condition><then pos:line="171" pos:column="11"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="12">unmap_file<pos:position pos:line="171" pos:column="22"/></name><argument_list pos:line="171" pos:column="22">(<argument><expr><name pos:line="171" pos:column="23">buf<pos:position pos:line="171" pos:column="26"/></name></expr></argument>)<pos:position pos:line="171" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="28"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="173" pos:column="3">free_sums<pos:position pos:line="173" pos:column="12"/></name><argument_list pos:line="173" pos:column="12">(<argument><expr><name pos:line="173" pos:column="13">s<pos:position pos:line="173" pos:column="14"/></name></expr></argument>)<pos:position pos:line="173" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="16"/></expr_stmt>
}<pos:position pos:line="174" pos:column="2"/></block></function></unit>

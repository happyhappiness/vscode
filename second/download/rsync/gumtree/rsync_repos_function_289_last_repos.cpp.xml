<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_289_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">x_stat<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><specifier pos:line="1" pos:column="12">const<pos:position pos:line="1" pos:column="17"/></specifier> <name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">fname<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">STRUCT_STAT<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">fst<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">STRUCT_STAT<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">xst<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">do_stat<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">fname<pos:position pos:line="3" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="34">fst<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">(<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">ret<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">&lt;<pos:position pos:line="4" pos:column="22"/></operator> <literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <call><name pos:line="4" pos:column="25">get_stat_xattr<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">(<argument><expr><name pos:line="4" pos:column="40">fname<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="47">-<pos:position pos:line="4" pos:column="48"/></operator><literal type="number" pos:line="4" pos:column="48">1<pos:position pos:line="4" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="51">fst<pos:position pos:line="4" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="56">xst<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call> <operator pos:line="4" pos:column="61">&lt;<pos:position pos:line="4" pos:column="65"/></operator> <literal type="number" pos:line="4" pos:column="63">0<pos:position pos:line="4" pos:column="64"/></literal><operator pos:line="4" pos:column="64">)<pos:position pos:line="4" pos:column="65"/></operator> <operator pos:line="4" pos:column="66">&amp;&amp;<pos:position pos:line="4" pos:column="76"/></operator> <name pos:line="4" pos:column="69">xst<pos:position pos:line="4" pos:column="72"/></name></expr>)<pos:position pos:line="4" pos:column="73"/></condition><then pos:line="4" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="5" pos:column="17">xst<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">st_mode<pos:position pos:line="5" pos:column="29"/></name></name> <operator pos:line="5" pos:column="30">=<pos:position pos:line="5" pos:column="31"/></operator> <literal type="number" pos:line="5" pos:column="32">0<pos:position pos:line="5" pos:column="33"/></literal></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt></block></then></if>
	<return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">ret<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

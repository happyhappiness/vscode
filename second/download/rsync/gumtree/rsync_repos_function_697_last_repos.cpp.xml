<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_697_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">void<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fill_window<pos:position pos:line="1" pos:column="23"/></name><argument_list pos:line="1" pos:column="23">(<argument><expr><name pos:line="1" pos:column="24">s<pos:position pos:line="1" pos:column="25"/></name></expr></argument>)<pos:position pos:line="1" pos:column="26"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">unsigned<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">n<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">m<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">Posf<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">p<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">more<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>    <comment type="block" pos:line="6" pos:column="23">/* Amount of free space at the end of the window. */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uInt<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">wsize<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name><name pos:line="7" pos:column="18">s<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">w_size<pos:position pos:line="7" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">s<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">lookahead<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">&lt;<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="27">MIN_LOOKAHEAD<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="42">"already enough lookahead"<pos:position pos:line="9" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="70"/></expr_stmt>

    <do pos:line="11" pos:column="5">do <block pos:line="11" pos:column="8">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">more<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call pos:line="12" pos:column="16">(<name pos:line="12" pos:column="17">unsigned<pos:position pos:line="12" pos:column="25"/></name>)<argument_list pos:line="12" pos:column="26">(<argument><expr><name><name pos:line="12" pos:column="27">s<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">window_size<pos:position pos:line="12" pos:column="41"/></name></name> <operator pos:line="12" pos:column="42">-<pos:position pos:line="12" pos:column="43"/></operator><operator pos:line="12" pos:column="43">(<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">ulg<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator><name><name pos:line="12" pos:column="48">s<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">lookahead<pos:position pos:line="12" pos:column="60"/></name></name> <operator pos:line="12" pos:column="61">-<pos:position pos:line="12" pos:column="62"/></operator><operator pos:line="12" pos:column="62">(<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="63">ulg<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">)<pos:position pos:line="12" pos:column="67"/></operator><name><name pos:line="12" pos:column="67">s<pos:position pos:line="12" pos:column="68"/></name><operator pos:line="12" pos:column="68">-&gt;<pos:position pos:line="12" pos:column="73"/></operator><name pos:line="12" pos:column="70">strstart<pos:position pos:line="12" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>

        <comment type="block" pos:line="14" pos:column="9">/* Deal with !@#$% 64K limit: */</comment>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><sizeof pos:line="15" pos:column="13">sizeof<argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">int<pos:position pos:line="15" pos:column="23"/></name></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></sizeof> <operator pos:line="15" pos:column="25">&lt;=<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="28">2<pos:position pos:line="15" pos:column="29"/></literal></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30"> <block pos:line="15" pos:column="31">{
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">more<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">==<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal> <operator pos:line="16" pos:column="27">&amp;&amp;<pos:position pos:line="16" pos:column="37"/></operator> <name><name pos:line="16" pos:column="30">s<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">strstart<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">==<pos:position pos:line="16" pos:column="44"/></operator> <literal type="number" pos:line="16" pos:column="45">0<pos:position pos:line="16" pos:column="46"/></literal> <operator pos:line="16" pos:column="47">&amp;&amp;<pos:position pos:line="16" pos:column="57"/></operator> <name><name pos:line="16" pos:column="50">s<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">lookahead<pos:position pos:line="16" pos:column="62"/></name></name> <operator pos:line="16" pos:column="63">==<pos:position pos:line="16" pos:column="65"/></operator> <literal type="number" pos:line="16" pos:column="66">0<pos:position pos:line="16" pos:column="67"/></literal></expr>)<pos:position pos:line="16" pos:column="68"/></condition><then pos:line="16" pos:column="68"> <block pos:line="16" pos:column="69">{
                <expr_stmt><expr><name pos:line="17" pos:column="17">more<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">wsize<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>

            }<pos:position pos:line="19" pos:column="14"/></block></then> <elseif pos:line="19" pos:column="15">else <if pos:line="19" pos:column="20">if <condition pos:line="19" pos:column="23">(<expr><name pos:line="19" pos:column="24">more<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">==<pos:position pos:line="19" pos:column="31"/></operator> <call pos:line="19" pos:column="32">(<name pos:line="19" pos:column="33">unsigned<pos:position pos:line="19" pos:column="41"/></name>)<argument_list pos:line="19" pos:column="42">(<argument><expr><operator pos:line="19" pos:column="43">-<pos:position pos:line="19" pos:column="44"/></operator><literal type="number" pos:line="19" pos:column="44">1<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47"> <block pos:line="19" pos:column="48">{
                <comment type="block" pos:line="20" pos:column="17">/* Very unlikely, but possible on 16 bit machine if
                 * strstart == 0 &amp;&amp; lookahead == 1 (input done a byte at time)
                 */</comment>
                <expr_stmt><expr><name pos:line="23" pos:column="17">more<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">--<pos:position pos:line="23" pos:column="23"/></operator></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="27" pos:column="9">/* If the window is almost full and there is insufficient lookahead,
         * move the upper half to the lower one to make room in the upper half.
         */</comment>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">s<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">strstart<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">&gt;=<pos:position pos:line="30" pos:column="30"/></operator> <name pos:line="30" pos:column="28">wsize<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">+<pos:position pos:line="30" pos:column="34"/></operator><call><name pos:line="30" pos:column="34">MAX_DIST<pos:position pos:line="30" pos:column="42"/></name><argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">s<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46"> <block pos:line="30" pos:column="47">{

            <expr_stmt><expr><call><name pos:line="32" pos:column="13">zmemcpy<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name><name pos:line="32" pos:column="21">s<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">window<pos:position pos:line="32" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="32">s<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">window<pos:position pos:line="32" pos:column="41"/></name></name><operator pos:line="32" pos:column="41">+<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="42">wsize<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="49">(<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="50">unsigned<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">)<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="59">wsize<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">s<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">match_start<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">-=<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">wsize<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">s<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">strstart<pos:position pos:line="34" pos:column="24"/></name></name>    <operator pos:line="34" pos:column="28">-=<pos:position pos:line="34" pos:column="30"/></operator> <name pos:line="34" pos:column="31">wsize<pos:position pos:line="34" pos:column="36"/></name></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt> <comment type="block" pos:line="34" pos:column="38">/* we now have strstart &gt;= MAX_DIST */</comment>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">s<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">-&gt;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="16">block_start<pos:position pos:line="35" pos:column="27"/></name></name> <operator pos:line="35" pos:column="28">-=<pos:position pos:line="35" pos:column="30"/></operator> <operator pos:line="35" pos:column="31">(<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">long<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">)<pos:position pos:line="35" pos:column="37"/></operator> <name pos:line="35" pos:column="38">wsize<pos:position pos:line="35" pos:column="43"/></name></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>

            <comment type="block" pos:line="37" pos:column="13">/* Slide the hash table (could be avoided with 32 bit values
               at the expense of memory usage). We slide even when level == 0
               to keep the hash table consistent if we switch back to level &gt; 0
               later. (Using level 0 permanently is not an optimal usage of
               zlib, so we don't care about this pathological case.)
             */</comment>
            <expr_stmt><expr><name pos:line="43" pos:column="13">n<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <name><name pos:line="43" pos:column="17">s<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">hash_size<pos:position pos:line="43" pos:column="29"/></name></name></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">p<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <operator pos:line="44" pos:column="17">&amp;<pos:position pos:line="44" pos:column="22"/></operator><name><name pos:line="44" pos:column="18">s<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">head<pos:position pos:line="44" pos:column="25"/></name><index pos:line="44" pos:column="25">[<expr><name pos:line="44" pos:column="26">n<pos:position pos:line="44" pos:column="27"/></name></expr>]<pos:position pos:line="44" pos:column="28"/></index></name></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt>
            <do pos:line="45" pos:column="13">do <block pos:line="45" pos:column="16">{
                <expr_stmt><expr><name pos:line="46" pos:column="17">m<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <operator pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></operator><operator pos:line="46" pos:column="22">--<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">p<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="47" pos:column="17">*<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">p<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call pos:line="47" pos:column="22">(<name pos:line="47" pos:column="23">Pos<pos:position pos:line="47" pos:column="26"/></name>)<argument_list pos:line="47" pos:column="27">(<argument><expr><ternary><condition><expr><name pos:line="47" pos:column="28">m<pos:position pos:line="47" pos:column="29"/></name> <operator pos:line="47" pos:column="30">&gt;=<pos:position pos:line="47" pos:column="35"/></operator> <name pos:line="47" pos:column="33">wsize<pos:position pos:line="47" pos:column="38"/></name></expr> ?<pos:position pos:line="47" pos:column="40"/></condition><then pos:line="47" pos:column="40"> <expr><name pos:line="47" pos:column="41">m<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="43">wsize<pos:position pos:line="47" pos:column="48"/></name></expr> <pos:position pos:line="47" pos:column="49"/></then><else pos:line="47" pos:column="49">: <expr><name pos:line="47" pos:column="51">NIL<pos:position pos:line="47" pos:column="54"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block> while <condition pos:line="48" pos:column="21">(<expr><operator pos:line="48" pos:column="22">--<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">n<pos:position pos:line="48" pos:column="25"/></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition>;<pos:position pos:line="48" pos:column="27"/></do>

            <expr_stmt><expr><name pos:line="50" pos:column="13">n<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">wsize<pos:position pos:line="50" pos:column="22"/></name></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
<cpp:ifndef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifndef<pos:position pos:line="51" pos:column="8"/></cpp:directive> <name pos:line="51" pos:column="9">FASTEST<pos:position pos:line="51" pos:column="16"/></name></cpp:ifndef>
            <expr_stmt><expr><name pos:line="52" pos:column="13">p<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <operator pos:line="52" pos:column="17">&amp;<pos:position pos:line="52" pos:column="22"/></operator><name><name pos:line="52" pos:column="18">s<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">prev<pos:position pos:line="52" pos:column="25"/></name><index pos:line="52" pos:column="25">[<expr><name pos:line="52" pos:column="26">n<pos:position pos:line="52" pos:column="27"/></name></expr>]<pos:position pos:line="52" pos:column="28"/></index></name></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
            <do pos:line="53" pos:column="13">do <block pos:line="53" pos:column="16">{
                <expr_stmt><expr><name pos:line="54" pos:column="17">m<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <operator pos:line="54" pos:column="21">*<pos:position pos:line="54" pos:column="22"/></operator><operator pos:line="54" pos:column="22">--<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">p<pos:position pos:line="54" pos:column="25"/></name></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="55" pos:column="17">*<pos:position pos:line="55" pos:column="18"/></operator><name pos:line="55" pos:column="18">p<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <call pos:line="55" pos:column="22">(<name pos:line="55" pos:column="23">Pos<pos:position pos:line="55" pos:column="26"/></name>)<argument_list pos:line="55" pos:column="27">(<argument><expr><ternary><condition><expr><name pos:line="55" pos:column="28">m<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">&gt;=<pos:position pos:line="55" pos:column="35"/></operator> <name pos:line="55" pos:column="33">wsize<pos:position pos:line="55" pos:column="38"/></name></expr> ?<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40"> <expr><name pos:line="55" pos:column="41">m<pos:position pos:line="55" pos:column="42"/></name><operator pos:line="55" pos:column="42">-<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="43">wsize<pos:position pos:line="55" pos:column="48"/></name></expr> <pos:position pos:line="55" pos:column="49"/></then><else pos:line="55" pos:column="49">: <expr><name pos:line="55" pos:column="51">NIL<pos:position pos:line="55" pos:column="54"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="55" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="56"/></expr_stmt>
                <comment type="block" pos:line="56" pos:column="17">/* If n is not on any hash chain, prev[n] is garbage but
                 * its value will never be used.
                 */</comment>
            }<pos:position pos:line="59" pos:column="14"/></block> while <condition pos:line="59" pos:column="21">(<expr><operator pos:line="59" pos:column="22">--<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">n<pos:position pos:line="59" pos:column="25"/></name></expr>)<pos:position pos:line="59" pos:column="26"/></condition>;<pos:position pos:line="59" pos:column="27"/></do>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="61" pos:column="13">more<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">+=<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="21">wsize<pos:position pos:line="61" pos:column="26"/></name></expr>;<pos:position pos:line="61" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">s<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">strm<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">avail_in<pos:position pos:line="63" pos:column="30"/></name></name> <operator pos:line="63" pos:column="31">==<pos:position pos:line="63" pos:column="33"/></operator> <literal type="number" pos:line="63" pos:column="34">0<pos:position pos:line="63" pos:column="35"/></literal></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36"> <block type="pseudo"><break pos:line="63" pos:column="37">break;<pos:position pos:line="63" pos:column="43"/></break></block></then></if>

        <comment type="block" pos:line="65" pos:column="9">/* If there was no sliding:
         *    strstart &lt;= WSIZE+MAX_DIST-1 &amp;&amp; lookahead &lt;= MIN_LOOKAHEAD - 1 &amp;&amp;
         *    more == window_size - lookahead - strstart
         * =&gt; more &gt;= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
         * =&gt; more &gt;= window_size - 2*WSIZE + 2
         * In the BIG_MEM or MMAP case (not yet supported),
         *   window_size == input_size + MIN_LOOKAHEAD  &amp;&amp;
         *   strstart + s-&gt;lookahead &lt;= input_size =&gt; more &gt;= MIN_LOOKAHEAD.
         * Otherwise, window_size == 2*WSIZE so more &gt;= 2.
         * If there was sliding, more &gt;= WSIZE. So in all cases, more &gt;= 2.
         */</comment>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">Assert<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name pos:line="76" pos:column="16">more<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">&gt;=<pos:position pos:line="76" pos:column="26"/></operator> <literal type="number" pos:line="76" pos:column="24">2<pos:position pos:line="76" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="27">"more &lt; 2"<pos:position pos:line="76" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><name pos:line="78" pos:column="9">n<pos:position pos:line="78" pos:column="10"/></name> <operator pos:line="78" pos:column="11">=<pos:position pos:line="78" pos:column="12"/></operator> <call><name pos:line="78" pos:column="13">read_buf<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">(<argument><expr><name><name pos:line="78" pos:column="22">s<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">-&gt;<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="25">strm<pos:position pos:line="78" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="31">s<pos:position pos:line="78" pos:column="32"/></name><operator pos:line="78" pos:column="32">-&gt;<pos:position pos:line="78" pos:column="37"/></operator><name pos:line="78" pos:column="34">window<pos:position pos:line="78" pos:column="40"/></name></name> <operator pos:line="78" pos:column="41">+<pos:position pos:line="78" pos:column="42"/></operator> <name><name pos:line="78" pos:column="43">s<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">strstart<pos:position pos:line="78" pos:column="54"/></name></name> <operator pos:line="78" pos:column="55">+<pos:position pos:line="78" pos:column="56"/></operator> <name><name pos:line="78" pos:column="57">s<pos:position pos:line="78" pos:column="58"/></name><operator pos:line="78" pos:column="58">-&gt;<pos:position pos:line="78" pos:column="63"/></operator><name pos:line="78" pos:column="60">lookahead<pos:position pos:line="78" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="71">more<pos:position pos:line="78" pos:column="75"/></name></expr></argument>)<pos:position pos:line="78" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">s<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">-&gt;<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="12">lookahead<pos:position pos:line="79" pos:column="21"/></name></name> <operator pos:line="79" pos:column="22">+=<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">n<pos:position pos:line="79" pos:column="26"/></name></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="81" pos:column="9">/* Initialize the hash value now that we have some input: */</comment>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">s<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">lookahead<pos:position pos:line="82" pos:column="25"/></name></name> <operator pos:line="82" pos:column="26">+<pos:position pos:line="82" pos:column="27"/></operator> <name><name pos:line="82" pos:column="28">s<pos:position pos:line="82" pos:column="29"/></name><operator pos:line="82" pos:column="29">-&gt;<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="31">insert<pos:position pos:line="82" pos:column="37"/></name></name> <operator pos:line="82" pos:column="38">&gt;=<pos:position pos:line="82" pos:column="43"/></operator> <name pos:line="82" pos:column="41">MIN_MATCH<pos:position pos:line="82" pos:column="50"/></name></expr>)<pos:position pos:line="82" pos:column="51"/></condition><then pos:line="82" pos:column="51"> <block pos:line="82" pos:column="52">{
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">uInt<pos:position pos:line="83" pos:column="17"/></name></type> <name pos:line="83" pos:column="18">str<pos:position pos:line="83" pos:column="21"/></name> <init pos:line="83" pos:column="22">= <expr><name><name pos:line="83" pos:column="24">s<pos:position pos:line="83" pos:column="25"/></name><operator pos:line="83" pos:column="25">-&gt;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="27">strstart<pos:position pos:line="83" pos:column="35"/></name></name> <operator pos:line="83" pos:column="36">-<pos:position pos:line="83" pos:column="37"/></operator> <name><name pos:line="83" pos:column="38">s<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">-&gt;<pos:position pos:line="83" pos:column="44"/></operator><name pos:line="83" pos:column="41">insert<pos:position pos:line="83" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="83" pos:column="48"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="84" pos:column="13">s<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">-&gt;<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="16">ins_h<pos:position pos:line="84" pos:column="21"/></name></name> <operator pos:line="84" pos:column="22">=<pos:position pos:line="84" pos:column="23"/></operator> <name><name pos:line="84" pos:column="24">s<pos:position pos:line="84" pos:column="25"/></name><operator pos:line="84" pos:column="25">-&gt;<pos:position pos:line="84" pos:column="30"/></operator><name pos:line="84" pos:column="27">window<pos:position pos:line="84" pos:column="33"/></name><index pos:line="84" pos:column="33">[<expr><name pos:line="84" pos:column="34">str<pos:position pos:line="84" pos:column="37"/></name></expr>]<pos:position pos:line="84" pos:column="38"/></index></name></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">UPDATE_HASH<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">s<pos:position pos:line="85" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="28">s<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">-&gt;<pos:position pos:line="85" pos:column="34"/></operator><name pos:line="85" pos:column="31">ins_h<pos:position pos:line="85" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="38">s<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">-&gt;<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="41">window<pos:position pos:line="85" pos:column="47"/></name><index pos:line="85" pos:column="47">[<expr><name pos:line="85" pos:column="48">str<pos:position pos:line="85" pos:column="51"/></name> <operator pos:line="85" pos:column="52">+<pos:position pos:line="85" pos:column="53"/></operator> <literal type="number" pos:line="85" pos:column="54">1<pos:position pos:line="85" pos:column="55"/></literal></expr>]<pos:position pos:line="85" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="58"/></expr_stmt>
<cpp:if pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">if<pos:position pos:line="86" pos:column="4"/></cpp:directive> <expr><name pos:line="86" pos:column="5">MIN_MATCH<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">!=<pos:position pos:line="86" pos:column="17"/></operator> <literal type="number" pos:line="86" pos:column="18">3<pos:position pos:line="86" pos:column="19"/></literal></expr></cpp:if>
            <decl_stmt><decl><type><name pos:line="87" pos:column="13">Call<pos:position pos:line="87" pos:column="17"/></name></type> <name pos:line="87" pos:column="18">UPDATE_HASH<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">()<pos:position pos:line="87" pos:column="31"/></argument_list> <name pos:line="87" pos:column="32">MIN_MATCH<pos:position pos:line="87" pos:column="41"/></name>-3 <name pos:line="87" pos:column="44">more<pos:position pos:line="87" pos:column="48"/></name> <name pos:line="87" pos:column="49">times<pos:position pos:line="87" pos:column="54"/></name>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif<pos:position pos:line="88" pos:column="7"/></cpp:directive></cpp:endif>
            while <argument_list pos:line="89" pos:column="19">(<argument><expr><name><name pos:line="89" pos:column="20">s<pos:position pos:line="89" pos:column="21"/></name><operator pos:line="89" pos:column="21">-&gt;<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="23">insert<pos:position pos:line="89" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list> <argument_list pos:line="89" pos:column="31">{
                <argument><expr><call><name pos:line="90" pos:column="17">UPDATE_HASH<pos:position pos:line="90" pos:column="28"/></name><argument_list pos:line="90" pos:column="28">(<argument><expr><name pos:line="90" pos:column="29">s<pos:position pos:line="90" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="32">s<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">-&gt;<pos:position pos:line="90" pos:column="38"/></operator><name pos:line="90" pos:column="35">ins_h<pos:position pos:line="90" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="42">s<pos:position pos:line="90" pos:column="43"/></name><operator pos:line="90" pos:column="43">-&gt;<pos:position pos:line="90" pos:column="48"/></operator><name pos:line="90" pos:column="45">window<pos:position pos:line="90" pos:column="51"/></name><index pos:line="90" pos:column="51">[<expr><name pos:line="90" pos:column="52">str<pos:position pos:line="90" pos:column="55"/></name> <operator pos:line="90" pos:column="56">+<pos:position pos:line="90" pos:column="57"/></operator> <name pos:line="90" pos:column="58">MIN_MATCH<pos:position pos:line="90" pos:column="67"/></name><operator pos:line="90" pos:column="67">-<pos:position pos:line="90" pos:column="68"/></operator><literal type="number" pos:line="90" pos:column="68">1<pos:position pos:line="90" pos:column="69"/></literal></expr>]<pos:position pos:line="90" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="90" pos:column="71"/></argument_list></call></expr></argument>;<pos:position pos:line="90" pos:column="72"/></argument_list></decl></decl_stmt>
<cpp:ifndef pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">ifndef<pos:position pos:line="91" pos:column="8"/></cpp:directive> <name pos:line="91" pos:column="9">FASTEST<pos:position pos:line="91" pos:column="16"/></name></cpp:ifndef>
                <expr_stmt><expr><name><name pos:line="92" pos:column="17">s<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">-&gt;<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="20">prev<pos:position pos:line="92" pos:column="24"/></name><index pos:line="92" pos:column="24">[<expr><name pos:line="92" pos:column="25">str<pos:position pos:line="92" pos:column="28"/></name> <operator pos:line="92" pos:column="29">&amp;<pos:position pos:line="92" pos:column="34"/></operator> <name><name pos:line="92" pos:column="31">s<pos:position pos:line="92" pos:column="32"/></name><operator pos:line="92" pos:column="32">-&gt;<pos:position pos:line="92" pos:column="37"/></operator><name pos:line="92" pos:column="34">w_mask<pos:position pos:line="92" pos:column="40"/></name></name></expr>]<pos:position pos:line="92" pos:column="41"/></index></name> <operator pos:line="92" pos:column="42">=<pos:position pos:line="92" pos:column="43"/></operator> <name><name pos:line="92" pos:column="44">s<pos:position pos:line="92" pos:column="45"/></name><operator pos:line="92" pos:column="45">-&gt;<pos:position pos:line="92" pos:column="50"/></operator><name pos:line="92" pos:column="47">head<pos:position pos:line="92" pos:column="51"/></name><index pos:line="92" pos:column="51">[<expr><name><name pos:line="92" pos:column="52">s<pos:position pos:line="92" pos:column="53"/></name><operator pos:line="92" pos:column="53">-&gt;<pos:position pos:line="92" pos:column="58"/></operator><name pos:line="92" pos:column="55">ins_h<pos:position pos:line="92" pos:column="60"/></name></name></expr>]<pos:position pos:line="92" pos:column="61"/></index></name></expr>;<pos:position pos:line="92" pos:column="62"/></expr_stmt>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><name><name pos:line="94" pos:column="17">s<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">-&gt;<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="20">head<pos:position pos:line="94" pos:column="24"/></name><index pos:line="94" pos:column="24">[<expr><name><name pos:line="94" pos:column="25">s<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">-&gt;<pos:position pos:line="94" pos:column="31"/></operator><name pos:line="94" pos:column="28">ins_h<pos:position pos:line="94" pos:column="33"/></name></name></expr>]<pos:position pos:line="94" pos:column="34"/></index></name> <operator pos:line="94" pos:column="35">=<pos:position pos:line="94" pos:column="36"/></operator> <operator pos:line="94" pos:column="37">(<pos:position pos:line="94" pos:column="38"/></operator><name pos:line="94" pos:column="38">Pos<pos:position pos:line="94" pos:column="41"/></name><operator pos:line="94" pos:column="41">)<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="42">str<pos:position pos:line="94" pos:column="45"/></name></expr>;<pos:position pos:line="94" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name pos:line="95" pos:column="17">str<pos:position pos:line="95" pos:column="20"/></name><operator pos:line="95" pos:column="20">++<pos:position pos:line="95" pos:column="22"/></operator></expr>;<pos:position pos:line="95" pos:column="23"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="96" pos:column="17">s<pos:position pos:line="96" pos:column="18"/></name><operator pos:line="96" pos:column="18">-&gt;<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="20">insert<pos:position pos:line="96" pos:column="26"/></name></name><operator pos:line="96" pos:column="26">--<pos:position pos:line="96" pos:column="28"/></operator></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt>
                <if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><name><name pos:line="97" pos:column="21">s<pos:position pos:line="97" pos:column="22"/></name><operator pos:line="97" pos:column="22">-&gt;<pos:position pos:line="97" pos:column="27"/></operator><name pos:line="97" pos:column="24">lookahead<pos:position pos:line="97" pos:column="33"/></name></name> <operator pos:line="97" pos:column="34">+<pos:position pos:line="97" pos:column="35"/></operator> <name><name pos:line="97" pos:column="36">s<pos:position pos:line="97" pos:column="37"/></name><operator pos:line="97" pos:column="37">-&gt;<pos:position pos:line="97" pos:column="42"/></operator><name pos:line="97" pos:column="39">insert<pos:position pos:line="97" pos:column="45"/></name></name> <operator pos:line="97" pos:column="46">&lt;<pos:position pos:line="97" pos:column="50"/></operator> <name pos:line="97" pos:column="48">MIN_MATCH<pos:position pos:line="97" pos:column="57"/></name></expr>)<pos:position pos:line="97" pos:column="58"/></condition><then pos:line="97" pos:column="58">
                    <block type="pseudo"><break pos:line="98" pos:column="21">break;<pos:position pos:line="98" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="99" pos:column="14"/></block></then></if>
        }<pos:position pos:line="100" pos:column="10"/></block>
        <comment type="block" pos:line="101" pos:column="9">/* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
         * but this is not important since only literal bytes will be emitted.
         */</comment>

    }<pos:position pos:line="105" pos:column="6"/></do> <while pos:line="105" pos:column="7">while <condition pos:line="105" pos:column="13">(<expr><name><name pos:line="105" pos:column="14">s<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">-&gt;<pos:position pos:line="105" pos:column="20"/></operator><name pos:line="105" pos:column="17">lookahead<pos:position pos:line="105" pos:column="26"/></name></name> <operator pos:line="105" pos:column="27">&lt;<pos:position pos:line="105" pos:column="31"/></operator> <name pos:line="105" pos:column="29">MIN_LOOKAHEAD<pos:position pos:line="105" pos:column="42"/></name> <operator pos:line="105" pos:column="43">&amp;&amp;<pos:position pos:line="105" pos:column="53"/></operator> <name><name pos:line="105" pos:column="46">s<pos:position pos:line="105" pos:column="47"/></name><operator pos:line="105" pos:column="47">-&gt;<pos:position pos:line="105" pos:column="52"/></operator><name pos:line="105" pos:column="49">strm<pos:position pos:line="105" pos:column="53"/></name><operator pos:line="105" pos:column="53">-&gt;<pos:position pos:line="105" pos:column="58"/></operator><name pos:line="105" pos:column="55">avail_in<pos:position pos:line="105" pos:column="63"/></name></name> <operator pos:line="105" pos:column="64">!=<pos:position pos:line="105" pos:column="66"/></operator> <literal type="number" pos:line="105" pos:column="67">0<pos:position pos:line="105" pos:column="68"/></literal></expr>)<pos:position pos:line="105" pos:column="69"/></condition><block type="pseudo"><empty_stmt pos:line="105" pos:column="69">;<pos:position pos:line="105" pos:column="70"/></empty_stmt></block></while>

    <comment type="block" pos:line="107" pos:column="5">/* If the WIN_INIT bytes after the end of the current data have never been
     * written, then zero those bytes in order to avoid memory check reports of
     * the use of uninitialized (or uninitialised as Julian writes) bytes by
     * the longest match routines.  Update the high water mark for the next
     * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
     * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
     */</comment>
    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><name><name pos:line="114" pos:column="9">s<pos:position pos:line="114" pos:column="10"/></name><operator pos:line="114" pos:column="10">-&gt;<pos:position pos:line="114" pos:column="15"/></operator><name pos:line="114" pos:column="12">high_water<pos:position pos:line="114" pos:column="22"/></name></name> <operator pos:line="114" pos:column="23">&lt;<pos:position pos:line="114" pos:column="27"/></operator> <name><name pos:line="114" pos:column="25">s<pos:position pos:line="114" pos:column="26"/></name><operator pos:line="114" pos:column="26">-&gt;<pos:position pos:line="114" pos:column="31"/></operator><name pos:line="114" pos:column="28">window_size<pos:position pos:line="114" pos:column="39"/></name></name></expr>)<pos:position pos:line="114" pos:column="40"/></condition><then pos:line="114" pos:column="40"> <block pos:line="114" pos:column="41">{
        <decl_stmt><decl><type><name pos:line="115" pos:column="9">ulg<pos:position pos:line="115" pos:column="12"/></name></type> <name pos:line="115" pos:column="13">curr<pos:position pos:line="115" pos:column="17"/></name> <init pos:line="115" pos:column="18">= <expr><name><name pos:line="115" pos:column="20">s<pos:position pos:line="115" pos:column="21"/></name><operator pos:line="115" pos:column="21">-&gt;<pos:position pos:line="115" pos:column="26"/></operator><name pos:line="115" pos:column="23">strstart<pos:position pos:line="115" pos:column="31"/></name></name> <operator pos:line="115" pos:column="32">+<pos:position pos:line="115" pos:column="33"/></operator> <call pos:line="115" pos:column="34">(<name pos:line="115" pos:column="35">ulg<pos:position pos:line="115" pos:column="38"/></name>)<argument_list pos:line="115" pos:column="39">(<argument><expr><name><name pos:line="115" pos:column="40">s<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">lookahead<pos:position pos:line="115" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="115" pos:column="54"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="116" pos:column="9">ulg<pos:position pos:line="116" pos:column="12"/></name></type> <name pos:line="116" pos:column="13">init<pos:position pos:line="116" pos:column="17"/></name></decl>;<pos:position pos:line="116" pos:column="18"/></decl_stmt>

        <if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name><name pos:line="118" pos:column="13">s<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">-&gt;<pos:position pos:line="118" pos:column="19"/></operator><name pos:line="118" pos:column="16">high_water<pos:position pos:line="118" pos:column="26"/></name></name> <operator pos:line="118" pos:column="27">&lt;<pos:position pos:line="118" pos:column="31"/></operator> <name pos:line="118" pos:column="29">curr<pos:position pos:line="118" pos:column="33"/></name></expr>)<pos:position pos:line="118" pos:column="34"/></condition><then pos:line="118" pos:column="34"> <block pos:line="118" pos:column="35">{
            <comment type="block" pos:line="119" pos:column="13">/* Previous high water mark below current data -- zero WIN_INIT
             * bytes or up to end of window, whichever is less.
             */</comment>
            <expr_stmt><expr><name pos:line="122" pos:column="13">init<pos:position pos:line="122" pos:column="17"/></name> <operator pos:line="122" pos:column="18">=<pos:position pos:line="122" pos:column="19"/></operator> <name><name pos:line="122" pos:column="20">s<pos:position pos:line="122" pos:column="21"/></name><operator pos:line="122" pos:column="21">-&gt;<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="23">window_size<pos:position pos:line="122" pos:column="34"/></name></name> <operator pos:line="122" pos:column="35">-<pos:position pos:line="122" pos:column="36"/></operator> <name pos:line="122" pos:column="37">curr<pos:position pos:line="122" pos:column="41"/></name></expr>;<pos:position pos:line="122" pos:column="42"/></expr_stmt>
            <if pos:line="123" pos:column="13">if <condition pos:line="123" pos:column="16">(<expr><name pos:line="123" pos:column="17">init<pos:position pos:line="123" pos:column="21"/></name> <operator pos:line="123" pos:column="22">&gt;<pos:position pos:line="123" pos:column="26"/></operator> <name pos:line="123" pos:column="24">WIN_INIT<pos:position pos:line="123" pos:column="32"/></name></expr>)<pos:position pos:line="123" pos:column="33"/></condition><then pos:line="123" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name pos:line="124" pos:column="17">init<pos:position pos:line="124" pos:column="21"/></name> <operator pos:line="124" pos:column="22">=<pos:position pos:line="124" pos:column="23"/></operator> <name pos:line="124" pos:column="24">WIN_INIT<pos:position pos:line="124" pos:column="32"/></name></expr>;<pos:position pos:line="124" pos:column="33"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="125" pos:column="13">zmemzero<pos:position pos:line="125" pos:column="21"/></name><argument_list pos:line="125" pos:column="21">(<argument><expr><name><name pos:line="125" pos:column="22">s<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">window<pos:position pos:line="125" pos:column="31"/></name></name> <operator pos:line="125" pos:column="32">+<pos:position pos:line="125" pos:column="33"/></operator> <name pos:line="125" pos:column="34">curr<pos:position pos:line="125" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="40">(<pos:position pos:line="125" pos:column="41"/></operator><name pos:line="125" pos:column="41">unsigned<pos:position pos:line="125" pos:column="49"/></name><operator pos:line="125" pos:column="49">)<pos:position pos:line="125" pos:column="50"/></operator><name pos:line="125" pos:column="50">init<pos:position pos:line="125" pos:column="54"/></name></expr></argument>)<pos:position pos:line="125" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">s<pos:position pos:line="126" pos:column="14"/></name><operator pos:line="126" pos:column="14">-&gt;<pos:position pos:line="126" pos:column="19"/></operator><name pos:line="126" pos:column="16">high_water<pos:position pos:line="126" pos:column="26"/></name></name> <operator pos:line="126" pos:column="27">=<pos:position pos:line="126" pos:column="28"/></operator> <name pos:line="126" pos:column="29">curr<pos:position pos:line="126" pos:column="33"/></name> <operator pos:line="126" pos:column="34">+<pos:position pos:line="126" pos:column="35"/></operator> <name pos:line="126" pos:column="36">init<pos:position pos:line="126" pos:column="40"/></name></expr>;<pos:position pos:line="126" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="127" pos:column="10"/></block></then>
        <elseif pos:line="128" pos:column="9">else <if pos:line="128" pos:column="14">if <condition pos:line="128" pos:column="17">(<expr><name><name pos:line="128" pos:column="18">s<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">-&gt;<pos:position pos:line="128" pos:column="24"/></operator><name pos:line="128" pos:column="21">high_water<pos:position pos:line="128" pos:column="31"/></name></name> <operator pos:line="128" pos:column="32">&lt;<pos:position pos:line="128" pos:column="36"/></operator> <operator pos:line="128" pos:column="34">(<pos:position pos:line="128" pos:column="35"/></operator><name pos:line="128" pos:column="35">ulg<pos:position pos:line="128" pos:column="38"/></name><operator pos:line="128" pos:column="38">)<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="39">curr<pos:position pos:line="128" pos:column="43"/></name> <operator pos:line="128" pos:column="44">+<pos:position pos:line="128" pos:column="45"/></operator> <name pos:line="128" pos:column="46">WIN_INIT<pos:position pos:line="128" pos:column="54"/></name></expr>)<pos:position pos:line="128" pos:column="55"/></condition><then pos:line="128" pos:column="55"> <block pos:line="128" pos:column="56">{
            <comment type="block" pos:line="129" pos:column="13">/* High water mark at or above current data, but below current data
             * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up
             * to end of window, whichever is less.
             */</comment>
            <expr_stmt><expr><name pos:line="133" pos:column="13">init<pos:position pos:line="133" pos:column="17"/></name> <operator pos:line="133" pos:column="18">=<pos:position pos:line="133" pos:column="19"/></operator> <operator pos:line="133" pos:column="20">(<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="21">ulg<pos:position pos:line="133" pos:column="24"/></name><operator pos:line="133" pos:column="24">)<pos:position pos:line="133" pos:column="25"/></operator><name pos:line="133" pos:column="25">curr<pos:position pos:line="133" pos:column="29"/></name> <operator pos:line="133" pos:column="30">+<pos:position pos:line="133" pos:column="31"/></operator> <name pos:line="133" pos:column="32">WIN_INIT<pos:position pos:line="133" pos:column="40"/></name> <operator pos:line="133" pos:column="41">-<pos:position pos:line="133" pos:column="42"/></operator> <name><name pos:line="133" pos:column="43">s<pos:position pos:line="133" pos:column="44"/></name><operator pos:line="133" pos:column="44">-&gt;<pos:position pos:line="133" pos:column="49"/></operator><name pos:line="133" pos:column="46">high_water<pos:position pos:line="133" pos:column="56"/></name></name></expr>;<pos:position pos:line="133" pos:column="57"/></expr_stmt>
            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><name pos:line="134" pos:column="17">init<pos:position pos:line="134" pos:column="21"/></name> <operator pos:line="134" pos:column="22">&gt;<pos:position pos:line="134" pos:column="26"/></operator> <name><name pos:line="134" pos:column="24">s<pos:position pos:line="134" pos:column="25"/></name><operator pos:line="134" pos:column="25">-&gt;<pos:position pos:line="134" pos:column="30"/></operator><name pos:line="134" pos:column="27">window_size<pos:position pos:line="134" pos:column="38"/></name></name> <operator pos:line="134" pos:column="39">-<pos:position pos:line="134" pos:column="40"/></operator> <name><name pos:line="134" pos:column="41">s<pos:position pos:line="134" pos:column="42"/></name><operator pos:line="134" pos:column="42">-&gt;<pos:position pos:line="134" pos:column="47"/></operator><name pos:line="134" pos:column="44">high_water<pos:position pos:line="134" pos:column="54"/></name></name></expr>)<pos:position pos:line="134" pos:column="55"/></condition><then pos:line="134" pos:column="55">
                <block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="17">init<pos:position pos:line="135" pos:column="21"/></name> <operator pos:line="135" pos:column="22">=<pos:position pos:line="135" pos:column="23"/></operator> <name><name pos:line="135" pos:column="24">s<pos:position pos:line="135" pos:column="25"/></name><operator pos:line="135" pos:column="25">-&gt;<pos:position pos:line="135" pos:column="30"/></operator><name pos:line="135" pos:column="27">window_size<pos:position pos:line="135" pos:column="38"/></name></name> <operator pos:line="135" pos:column="39">-<pos:position pos:line="135" pos:column="40"/></operator> <name><name pos:line="135" pos:column="41">s<pos:position pos:line="135" pos:column="42"/></name><operator pos:line="135" pos:column="42">-&gt;<pos:position pos:line="135" pos:column="47"/></operator><name pos:line="135" pos:column="44">high_water<pos:position pos:line="135" pos:column="54"/></name></name></expr>;<pos:position pos:line="135" pos:column="55"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">zmemzero<pos:position pos:line="136" pos:column="21"/></name><argument_list pos:line="136" pos:column="21">(<argument><expr><name><name pos:line="136" pos:column="22">s<pos:position pos:line="136" pos:column="23"/></name><operator pos:line="136" pos:column="23">-&gt;<pos:position pos:line="136" pos:column="28"/></operator><name pos:line="136" pos:column="25">window<pos:position pos:line="136" pos:column="31"/></name></name> <operator pos:line="136" pos:column="32">+<pos:position pos:line="136" pos:column="33"/></operator> <name><name pos:line="136" pos:column="34">s<pos:position pos:line="136" pos:column="35"/></name><operator pos:line="136" pos:column="35">-&gt;<pos:position pos:line="136" pos:column="40"/></operator><name pos:line="136" pos:column="37">high_water<pos:position pos:line="136" pos:column="47"/></name></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="49">(<pos:position pos:line="136" pos:column="50"/></operator><name pos:line="136" pos:column="50">unsigned<pos:position pos:line="136" pos:column="58"/></name><operator pos:line="136" pos:column="58">)<pos:position pos:line="136" pos:column="59"/></operator><name pos:line="136" pos:column="59">init<pos:position pos:line="136" pos:column="63"/></name></expr></argument>)<pos:position pos:line="136" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="137" pos:column="13">s<pos:position pos:line="137" pos:column="14"/></name><operator pos:line="137" pos:column="14">-&gt;<pos:position pos:line="137" pos:column="19"/></operator><name pos:line="137" pos:column="16">high_water<pos:position pos:line="137" pos:column="26"/></name></name> <operator pos:line="137" pos:column="27">+=<pos:position pos:line="137" pos:column="29"/></operator> <name pos:line="137" pos:column="30">init<pos:position pos:line="137" pos:column="34"/></name></expr>;<pos:position pos:line="137" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="138" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="139" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="141" pos:column="5">Assert<pos:position pos:line="141" pos:column="11"/></name><argument_list pos:line="141" pos:column="11">(<argument><expr><operator pos:line="141" pos:column="12">(<pos:position pos:line="141" pos:column="13"/></operator><name pos:line="141" pos:column="13">ulg<pos:position pos:line="141" pos:column="16"/></name><operator pos:line="141" pos:column="16">)<pos:position pos:line="141" pos:column="17"/></operator><name><name pos:line="141" pos:column="17">s<pos:position pos:line="141" pos:column="18"/></name><operator pos:line="141" pos:column="18">-&gt;<pos:position pos:line="141" pos:column="23"/></operator><name pos:line="141" pos:column="20">strstart<pos:position pos:line="141" pos:column="28"/></name></name> <operator pos:line="141" pos:column="29">&lt;=<pos:position pos:line="141" pos:column="34"/></operator> <name><name pos:line="141" pos:column="32">s<pos:position pos:line="141" pos:column="33"/></name><operator pos:line="141" pos:column="33">-&gt;<pos:position pos:line="141" pos:column="38"/></operator><name pos:line="141" pos:column="35">window_size<pos:position pos:line="141" pos:column="46"/></name></name> <operator pos:line="141" pos:column="47">-<pos:position pos:line="141" pos:column="48"/></operator> <name pos:line="141" pos:column="49">MIN_LOOKAHEAD<pos:position pos:line="141" pos:column="62"/></name></expr></argument>,
           <argument><expr><literal type="string" pos:line="142" pos:column="12">"not enough room for search"<pos:position pos:line="142" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="42"/></expr_stmt>
}<pos:position pos:line="143" pos:column="2"/></block></unit>

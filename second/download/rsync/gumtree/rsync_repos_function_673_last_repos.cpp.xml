<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_673_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">compress2<pos:position pos:line="1" pos:column="22"/></name> <argument_list pos:line="1" pos:column="23">(<argument><expr><name pos:line="1" pos:column="24">dest<pos:position pos:line="1" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="30">destLen<pos:position pos:line="1" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="39">source<pos:position pos:line="1" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="47">sourceLen<pos:position pos:line="1" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="58">level<pos:position pos:line="1" pos:column="63"/></name></expr></argument>)<pos:position pos:line="1" pos:column="64"/></argument_list>
    <name pos:line="2" pos:column="5">Bytef<pos:position pos:line="2" pos:column="10"/></name> <modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier><name pos:line="2" pos:column="12">dest<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">uLongf<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">destLen<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">Bytef<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">source<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uLong<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">sourceLen<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">level<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">z_stream<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">stream<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">err<pos:position pos:line="9" pos:column="12"/></name></decl>;<pos:position pos:line="9" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">stream<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">next_in<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">(<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">z_const<pos:position pos:line="11" pos:column="30"/></name> <name pos:line="11" pos:column="31">Bytef<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">source<pos:position pos:line="11" pos:column="45"/></name></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">stream<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">avail_in<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">uInt<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">sourceLen<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">MAXSEG_64K<pos:position pos:line="13" pos:column="18"/></name></cpp:ifdef>
    <comment type="block" pos:line="14" pos:column="5">/* Check for source &gt; 64K on 16-bit machine: */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">uLong<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">)<pos:position pos:line="15" pos:column="16"/></operator><name><name pos:line="15" pos:column="16">stream<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">avail_in<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">!=<pos:position pos:line="15" pos:column="34"/></operator> <name pos:line="15" pos:column="35">sourceLen<pos:position pos:line="15" pos:column="44"/></name></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45"> <block type="pseudo"><return pos:line="15" pos:column="46">return <expr><name pos:line="15" pos:column="53">Z_BUF_ERROR<pos:position pos:line="15" pos:column="64"/></name></expr>;<pos:position pos:line="15" pos:column="65"/></return></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">stream<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">next_out<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">dest<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">stream<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">avail_out<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">uInt<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator><operator pos:line="18" pos:column="30">*<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">destLen<pos:position pos:line="18" pos:column="38"/></name></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">uLong<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator><name><name pos:line="19" pos:column="16">stream<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">avail_out<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">!=<pos:position pos:line="19" pos:column="35"/></operator> <operator pos:line="19" pos:column="36">*<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">destLen<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block type="pseudo"><return pos:line="19" pos:column="46">return <expr><name pos:line="19" pos:column="53">Z_BUF_ERROR<pos:position pos:line="19" pos:column="64"/></name></expr>;<pos:position pos:line="19" pos:column="65"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="21" pos:column="5">stream<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">zalloc<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">(<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">alloc_func<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">)<pos:position pos:line="21" pos:column="33"/></operator><literal type="number" pos:line="21" pos:column="33">0<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">stream<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">zfree<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <operator pos:line="22" pos:column="20">(<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">free_func<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator><literal type="number" pos:line="22" pos:column="31">0<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">stream<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">opaque<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">(<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">voidpf<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">)<pos:position pos:line="23" pos:column="29"/></operator><literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">err<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">deflateInit<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><operator pos:line="25" pos:column="23">&amp;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="24">stream<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">level<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">err<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">!=<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">Z_OK<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block type="pseudo"><return pos:line="26" pos:column="22">return <expr><name pos:line="26" pos:column="29">err<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">err<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <call><name pos:line="28" pos:column="11">deflate<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><operator pos:line="28" pos:column="19">&amp;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="20">stream<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="28">Z_FINISH<pos:position pos:line="28" pos:column="36"/></name></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">err<pos:position pos:line="29" pos:column="12"/></name> <operator pos:line="29" pos:column="13">!=<pos:position pos:line="29" pos:column="15"/></operator> <name pos:line="29" pos:column="16">Z_STREAM_END<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">deflateEnd<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><operator pos:line="30" pos:column="20">&amp;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="21">stream<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><ternary><condition><expr><name pos:line="31" pos:column="16">err<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">Z_OK<pos:position pos:line="31" pos:column="27"/></name></expr> ?<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29"> <expr><name pos:line="31" pos:column="30">Z_BUF_ERROR<pos:position pos:line="31" pos:column="41"/></name></expr> <pos:position pos:line="31" pos:column="42"/></then><else pos:line="31" pos:column="42">: <expr><name pos:line="31" pos:column="44">err<pos:position pos:line="31" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="31" pos:column="48"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">destLen<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name><name pos:line="33" pos:column="16">stream<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">.<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">total_out<pos:position pos:line="33" pos:column="32"/></name></name></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="35" pos:column="5">err<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <call><name pos:line="35" pos:column="11">deflateEnd<pos:position pos:line="35" pos:column="21"/></name><argument_list pos:line="35" pos:column="21">(<argument><expr><operator pos:line="35" pos:column="22">&amp;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="23">stream<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">err<pos:position pos:line="36" pos:column="15"/></name></expr>;<pos:position pos:line="36" pos:column="16"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></unit>

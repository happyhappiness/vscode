<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_432_rsync-2.6.7.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">inflate<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">strm<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">flush<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">strm<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">int<pos:position pos:line="3" pos:column="4"/></name></type> <name pos:line="3" pos:column="5">flush<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">inflate_state<pos:position pos:line="5" pos:column="25"/></name></name> <name pos:line="5" pos:column="26">FAR<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">state<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name> <name pos:line="6" pos:column="19">FAR<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">next<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>    <comment type="block" pos:line="6" pos:column="33">/* next input */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name> <name pos:line="7" pos:column="19">FAR<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">put<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>     <comment type="block" pos:line="7" pos:column="33">/* next output */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">have<pos:position pos:line="8" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">left<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>        <comment type="block" pos:line="8" pos:column="33">/* available input and output */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">long<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">hold<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="9" pos:column="33">/* bit buffer */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">bits<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>              <comment type="block" pos:line="10" pos:column="33">/* bits in bit buffer */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">in<pos:position pos:line="11" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="18">out<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>           <comment type="block" pos:line="11" pos:column="33">/* save starting available input and output */</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">copy<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>              <comment type="block" pos:line="12" pos:column="33">/* number of stored or match bytes to copy */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">unsigned<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">char<pos:position pos:line="13" pos:column="18"/></name> <name pos:line="13" pos:column="19">FAR<pos:position pos:line="13" pos:column="22"/></name> <modifier pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></modifier></type><name pos:line="13" pos:column="24">from<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>    <comment type="block" pos:line="13" pos:column="33">/* where to copy match bytes from */</comment>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">code<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">this<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>                  <comment type="block" pos:line="14" pos:column="33">/* current decoding table entry */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">code<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">last<pos:position pos:line="15" pos:column="14"/></name></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>                  <comment type="block" pos:line="15" pos:column="33">/* parent table entry */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">unsigned<pos:position pos:line="16" pos:column="13"/></name></type> <name pos:line="16" pos:column="14">len<pos:position pos:line="16" pos:column="17"/></name></decl>;<pos:position pos:line="16" pos:column="18"/></decl_stmt>               <comment type="block" pos:line="16" pos:column="33">/* length to copy for repeats, bits to drop */</comment>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">ret<pos:position pos:line="17" pos:column="12"/></name></decl>;<pos:position pos:line="17" pos:column="13"/></decl_stmt>                    <comment type="block" pos:line="17" pos:column="33">/* return code */</comment>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">GUNZIP<pos:position pos:line="18" pos:column="14"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">unsigned<pos:position pos:line="19" pos:column="13"/></name> <name pos:line="19" pos:column="14">char<pos:position pos:line="19" pos:column="18"/></name></type> <name><name pos:line="19" pos:column="19">hbuf<pos:position pos:line="19" pos:column="23"/></name><index pos:line="19" pos:column="23">[<expr><literal type="number" pos:line="19" pos:column="24">4<pos:position pos:line="19" pos:column="25"/></literal></expr>]<pos:position pos:line="19" pos:column="26"/></index></name></decl>;<pos:position pos:line="19" pos:column="27"/></decl_stmt>      <comment type="block" pos:line="19" pos:column="33">/* buffer for gzip header crc calculation */</comment>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><specifier pos:line="21" pos:column="5">static<pos:position pos:line="21" pos:column="11"/></specifier> <type><specifier pos:line="21" pos:column="12">const<pos:position pos:line="21" pos:column="17"/></specifier> <name pos:line="21" pos:column="18">unsigned<pos:position pos:line="21" pos:column="26"/></name> <name pos:line="21" pos:column="27">short<pos:position pos:line="21" pos:column="32"/></name></type> <name><name pos:line="21" pos:column="33">order<pos:position pos:line="21" pos:column="38"/></name><index pos:line="21" pos:column="38">[<expr><literal type="number" pos:line="21" pos:column="39">19<pos:position pos:line="21" pos:column="41"/></literal></expr>]<pos:position pos:line="21" pos:column="42"/></index></name> <init pos:line="21" pos:column="43">= <comment type="block" pos:line="21" pos:column="45">/* permutation of code lengths */</comment>
        <expr><block pos:line="22" pos:column="9">{<expr><literal type="number" pos:line="22" pos:column="10">16<pos:position pos:line="22" pos:column="12"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="14">17<pos:position pos:line="22" pos:column="16"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="18">18<pos:position pos:line="22" pos:column="20"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="25">8<pos:position pos:line="22" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="28">7<pos:position pos:line="22" pos:column="29"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="31">9<pos:position pos:line="22" pos:column="32"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="34">6<pos:position pos:line="22" pos:column="35"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="37">10<pos:position pos:line="22" pos:column="39"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="41">5<pos:position pos:line="22" pos:column="42"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="44">11<pos:position pos:line="22" pos:column="46"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="48">4<pos:position pos:line="22" pos:column="49"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="51">12<pos:position pos:line="22" pos:column="53"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="55">3<pos:position pos:line="22" pos:column="56"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="58">13<pos:position pos:line="22" pos:column="60"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="62">2<pos:position pos:line="22" pos:column="63"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="65">14<pos:position pos:line="22" pos:column="67"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="69">1<pos:position pos:line="22" pos:column="70"/></literal></expr>, <expr><literal type="number" pos:line="22" pos:column="72">15<pos:position pos:line="22" pos:column="74"/></literal></expr>}<pos:position pos:line="22" pos:column="75"/></block></expr></init></decl>;<pos:position pos:line="22" pos:column="76"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">strm<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">==<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">Z_NULL<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">||<pos:position pos:line="24" pos:column="26"/></operator> <name><name pos:line="24" pos:column="27">strm<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">state<pos:position pos:line="24" pos:column="38"/></name></name> <operator pos:line="24" pos:column="39">==<pos:position pos:line="24" pos:column="41"/></operator> <name pos:line="24" pos:column="42">Z_NULL<pos:position pos:line="24" pos:column="48"/></name> <operator pos:line="24" pos:column="49">||<pos:position pos:line="24" pos:column="51"/></operator> <name><name pos:line="24" pos:column="52">strm<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">-&gt;<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="58">next_out<pos:position pos:line="24" pos:column="66"/></name></name> <operator pos:line="24" pos:column="67">==<pos:position pos:line="24" pos:column="69"/></operator> <name pos:line="24" pos:column="70">Z_NULL<pos:position pos:line="24" pos:column="76"/></name> <operator pos:line="24" pos:column="77">||<pos:position pos:line="24" pos:column="79"/></operator>
        <operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name><name pos:line="25" pos:column="10">strm<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">next_in<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">==<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">Z_NULL<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">&amp;&amp;<pos:position pos:line="25" pos:column="44"/></operator> <name><name pos:line="25" pos:column="37">strm<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">avail_in<pos:position pos:line="25" pos:column="51"/></name></name> <operator pos:line="25" pos:column="52">!=<pos:position pos:line="25" pos:column="54"/></operator> <literal type="number" pos:line="25" pos:column="55">0<pos:position pos:line="25" pos:column="56"/></literal><operator pos:line="25" pos:column="56">)<pos:position pos:line="25" pos:column="57"/></operator></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">Z_STREAM_ERROR<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">state<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator>struct <name pos:line="28" pos:column="21">inflate_state<pos:position pos:line="28" pos:column="34"/></name> <name pos:line="28" pos:column="35">FAR<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">*<pos:position pos:line="28" pos:column="40"/></operator><operator pos:line="28" pos:column="40">)<pos:position pos:line="28" pos:column="41"/></operator><name><name pos:line="28" pos:column="41">strm<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">state<pos:position pos:line="28" pos:column="52"/></name></name></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">state<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">mode<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">==<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">TYPE<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="30">state<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">mode<pos:position pos:line="29" pos:column="41"/></name></name> <operator pos:line="29" pos:column="42">=<pos:position pos:line="29" pos:column="43"/></operator> <name pos:line="29" pos:column="44">TYPEDO<pos:position pos:line="29" pos:column="50"/></name></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt></block></then></if>      <comment type="block" pos:line="29" pos:column="57">/* skip check */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">LOAD<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">()<pos:position pos:line="30" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">in<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <name pos:line="31" pos:column="10">have<pos:position pos:line="31" pos:column="14"/></name></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">out<pos:position pos:line="32" pos:column="8"/></name> <operator pos:line="32" pos:column="9">=<pos:position pos:line="32" pos:column="10"/></operator> <name pos:line="32" pos:column="11">left<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">ret<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <name pos:line="33" pos:column="11">Z_OK<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init pos:line="34" pos:column="10">;<pos:position pos:line="34" pos:column="11"/></init><condition pos:line="34" pos:column="11">;<pos:position pos:line="34" pos:column="12"/></condition><incr/>)<pos:position pos:line="34" pos:column="13"/></control>
        <block type="pseudo"><switch pos:line="35" pos:column="9">switch <condition pos:line="35" pos:column="16">(<expr><name><name pos:line="35" pos:column="17">state<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">mode<pos:position pos:line="35" pos:column="28"/></name></name></expr>)<pos:position pos:line="35" pos:column="29"/></condition> <block pos:line="35" pos:column="30">{
        <case pos:line="36" pos:column="9">case <expr><name pos:line="36" pos:column="14">HEAD<pos:position pos:line="36" pos:column="18"/></name></expr>:<pos:position pos:line="36" pos:column="19"/></case>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">state<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">wrap<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">==<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="32">0<pos:position pos:line="37" pos:column="33"/></literal></expr>)<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34"> <block pos:line="37" pos:column="35">{
                <expr_stmt><expr><name><name pos:line="38" pos:column="17">state<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">mode<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <name pos:line="38" pos:column="31">TYPEDO<pos:position pos:line="38" pos:column="37"/></name></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
                <break pos:line="39" pos:column="17">break;<pos:position pos:line="39" pos:column="23"/></break>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">NEEDBITS<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><literal type="number" pos:line="41" pos:column="22">16<pos:position pos:line="41" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">GUNZIP<pos:position pos:line="42" pos:column="14"/></name></cpp:ifdef>
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">(<pos:position pos:line="43" pos:column="18"/></operator><name><name pos:line="43" pos:column="18">state<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">wrap<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">&amp;<pos:position pos:line="43" pos:column="35"/></operator> <literal type="number" pos:line="43" pos:column="32">2<pos:position pos:line="43" pos:column="33"/></literal><operator pos:line="43" pos:column="33">)<pos:position pos:line="43" pos:column="34"/></operator> <operator pos:line="43" pos:column="35">&amp;&amp;<pos:position pos:line="43" pos:column="45"/></operator> <name pos:line="43" pos:column="38">hold<pos:position pos:line="43" pos:column="42"/></name> <operator pos:line="43" pos:column="43">==<pos:position pos:line="43" pos:column="45"/></operator> <literal type="number" pos:line="43" pos:column="46">0x8b1f<pos:position pos:line="43" pos:column="52"/></literal></expr>)<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53"> <block pos:line="43" pos:column="54">{  <comment type="block" pos:line="43" pos:column="57">/* gzip header */</comment>
                <expr_stmt><expr><name><name pos:line="44" pos:column="17">state<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">check<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <call><name pos:line="44" pos:column="32">crc32<pos:position pos:line="44" pos:column="37"/></name><argument_list pos:line="44" pos:column="37">(<argument><expr><literal type="number" pos:line="44" pos:column="38">0L<pos:position pos:line="44" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">Z_NULL<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="50">0<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">CRC2<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name><name pos:line="45" pos:column="22">state<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">check<pos:position pos:line="45" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="36">hold<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">INITBITS<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">()<pos:position pos:line="46" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="47" pos:column="17">state<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="24">mode<pos:position pos:line="47" pos:column="28"/></name></name> <operator pos:line="47" pos:column="29">=<pos:position pos:line="47" pos:column="30"/></operator> <name pos:line="47" pos:column="31">FLAGS<pos:position pos:line="47" pos:column="36"/></name></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
                <break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="50" pos:column="13">state<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">flags<pos:position pos:line="50" pos:column="25"/></name></name> <operator pos:line="50" pos:column="26">=<pos:position pos:line="50" pos:column="27"/></operator> <literal type="number" pos:line="50" pos:column="28">0<pos:position pos:line="50" pos:column="29"/></literal></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>           <comment type="block" pos:line="50" pos:column="41">/* expect zlib header */</comment>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name><name pos:line="51" pos:column="17">state<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="24">head<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">!=<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="32">Z_NULL<pos:position pos:line="51" pos:column="38"/></name></expr>)<pos:position pos:line="51" pos:column="39"/></condition><then pos:line="51" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="17">state<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">head<pos:position pos:line="52" pos:column="28"/></name><operator pos:line="52" pos:column="28">-&gt;<pos:position pos:line="52" pos:column="33"/></operator><name pos:line="52" pos:column="30">done<pos:position pos:line="52" pos:column="34"/></name></name> <operator pos:line="52" pos:column="35">=<pos:position pos:line="52" pos:column="36"/></operator> <operator pos:line="52" pos:column="37">-<pos:position pos:line="52" pos:column="38"/></operator><literal type="number" pos:line="52" pos:column="38">1<pos:position pos:line="52" pos:column="39"/></literal></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt></block></then></if>
            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><operator pos:line="53" pos:column="17">!<pos:position pos:line="53" pos:column="18"/></operator><operator pos:line="53" pos:column="18">(<pos:position pos:line="53" pos:column="19"/></operator><name><name pos:line="53" pos:column="19">state<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">-&gt;<pos:position pos:line="53" pos:column="29"/></operator><name pos:line="53" pos:column="26">wrap<pos:position pos:line="53" pos:column="30"/></name></name> <operator pos:line="53" pos:column="31">&amp;<pos:position pos:line="53" pos:column="36"/></operator> <literal type="number" pos:line="53" pos:column="33">1<pos:position pos:line="53" pos:column="34"/></literal><operator pos:line="53" pos:column="34">)<pos:position pos:line="53" pos:column="35"/></operator> <operator pos:line="53" pos:column="36">||<pos:position pos:line="53" pos:column="38"/></operator></expr></condition></if>   <comment type="block" pos:line="53" pos:column="41">/* check if zlib header allowed */</comment>
<cpp:else pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">else<pos:position pos:line="54" pos:column="6"/></cpp:directive></cpp:else>
            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>
                <expr><operator pos:line="57" pos:column="17">(<pos:position pos:line="57" pos:column="18"/></operator><operator pos:line="57" pos:column="18">(<pos:position pos:line="57" pos:column="19"/></operator><call><name pos:line="57" pos:column="19">BITS<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><literal type="number" pos:line="57" pos:column="24">8<pos:position pos:line="57" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="26"/></argument_list></call> <operator pos:line="57" pos:column="27">&lt;&lt;<pos:position pos:line="57" pos:column="35"/></operator> <literal type="number" pos:line="57" pos:column="30">8<pos:position pos:line="57" pos:column="31"/></literal><operator pos:line="57" pos:column="31">)<pos:position pos:line="57" pos:column="32"/></operator> <operator pos:line="57" pos:column="33">+<pos:position pos:line="57" pos:column="34"/></operator> <operator pos:line="57" pos:column="35">(<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="36">hold<pos:position pos:line="57" pos:column="40"/></name> <operator pos:line="57" pos:column="41">&gt;&gt;<pos:position pos:line="57" pos:column="46"/></operator> <literal type="number" pos:line="57" pos:column="44">8<pos:position pos:line="57" pos:column="45"/></literal><operator pos:line="57" pos:column="45">)<pos:position pos:line="57" pos:column="46"/></operator><operator pos:line="57" pos:column="46">)<pos:position pos:line="57" pos:column="47"/></operator> <operator pos:line="57" pos:column="48">%<pos:position pos:line="57" pos:column="49"/></operator> <literal type="number" pos:line="57" pos:column="50">31<pos:position pos:line="57" pos:column="52"/></literal></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53"> <block pos:line="57" pos:column="54">{
                <expr_stmt><expr><name><name pos:line="58" pos:column="17">strm<pos:position pos:line="58" pos:column="21"/></name><operator pos:line="58" pos:column="21">-&gt;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="23">msg<pos:position pos:line="58" pos:column="26"/></name></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <operator pos:line="58" pos:column="29">(<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">char<pos:position pos:line="58" pos:column="34"/></name> <operator pos:line="58" pos:column="35">*<pos:position pos:line="58" pos:column="36"/></operator><operator pos:line="58" pos:column="36">)<pos:position pos:line="58" pos:column="37"/></operator><literal type="string" pos:line="58" pos:column="37">"incorrect header check"<pos:position pos:line="58" pos:column="61"/></literal></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="59" pos:column="17">state<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">-&gt;<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="24">mode<pos:position pos:line="59" pos:column="28"/></name></name> <operator pos:line="59" pos:column="29">=<pos:position pos:line="59" pos:column="30"/></operator> <name pos:line="59" pos:column="31">BAD<pos:position pos:line="59" pos:column="34"/></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
                <break pos:line="60" pos:column="17">break;<pos:position pos:line="60" pos:column="23"/></break>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>
            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><call><name pos:line="62" pos:column="17">BITS<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><literal type="number" pos:line="62" pos:column="22">4<pos:position pos:line="62" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="24"/></argument_list></call> <operator pos:line="62" pos:column="25">!=<pos:position pos:line="62" pos:column="27"/></operator> <name pos:line="62" pos:column="28">Z_DEFLATED<pos:position pos:line="62" pos:column="38"/></name></expr>)<pos:position pos:line="62" pos:column="39"/></condition><then pos:line="62" pos:column="39"> <block pos:line="62" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="63" pos:column="17">strm<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">msg<pos:position pos:line="63" pos:column="26"/></name></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <operator pos:line="63" pos:column="29">(<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">char<pos:position pos:line="63" pos:column="34"/></name> <operator pos:line="63" pos:column="35">*<pos:position pos:line="63" pos:column="36"/></operator><operator pos:line="63" pos:column="36">)<pos:position pos:line="63" pos:column="37"/></operator><literal type="string" pos:line="63" pos:column="37">"unknown compression method"<pos:position pos:line="63" pos:column="65"/></literal></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="64" pos:column="17">state<pos:position pos:line="64" pos:column="22"/></name><operator pos:line="64" pos:column="22">-&gt;<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="24">mode<pos:position pos:line="64" pos:column="28"/></name></name> <operator pos:line="64" pos:column="29">=<pos:position pos:line="64" pos:column="30"/></operator> <name pos:line="64" pos:column="31">BAD<pos:position pos:line="64" pos:column="34"/></name></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
                <break pos:line="65" pos:column="17">break;<pos:position pos:line="65" pos:column="23"/></break>
            }<pos:position pos:line="66" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">DROPBITS<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><literal type="number" pos:line="67" pos:column="22">4<pos:position pos:line="67" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="68" pos:column="13">len<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <call><name pos:line="68" pos:column="19">BITS<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><literal type="number" pos:line="68" pos:column="24">4<pos:position pos:line="68" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="26"/></argument_list></call> <operator pos:line="68" pos:column="27">+<pos:position pos:line="68" pos:column="28"/></operator> <literal type="number" pos:line="68" pos:column="29">8<pos:position pos:line="68" pos:column="30"/></literal></expr>;<pos:position pos:line="68" pos:column="31"/></expr_stmt>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">len<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">&gt;<pos:position pos:line="69" pos:column="25"/></operator> <name><name pos:line="69" pos:column="23">state<pos:position pos:line="69" pos:column="28"/></name><operator pos:line="69" pos:column="28">-&gt;<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="30">wbits<pos:position pos:line="69" pos:column="35"/></name></name></expr>)<pos:position pos:line="69" pos:column="36"/></condition><then pos:line="69" pos:column="36"> <block pos:line="69" pos:column="37">{
                <expr_stmt><expr><name><name pos:line="70" pos:column="17">strm<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">-&gt;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="23">msg<pos:position pos:line="70" pos:column="26"/></name></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <operator pos:line="70" pos:column="29">(<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="30">char<pos:position pos:line="70" pos:column="34"/></name> <operator pos:line="70" pos:column="35">*<pos:position pos:line="70" pos:column="36"/></operator><operator pos:line="70" pos:column="36">)<pos:position pos:line="70" pos:column="37"/></operator><literal type="string" pos:line="70" pos:column="37">"invalid window size"<pos:position pos:line="70" pos:column="58"/></literal></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="71" pos:column="17">state<pos:position pos:line="71" pos:column="22"/></name><operator pos:line="71" pos:column="22">-&gt;<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="24">mode<pos:position pos:line="71" pos:column="28"/></name></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="31">BAD<pos:position pos:line="71" pos:column="34"/></name></expr>;<pos:position pos:line="71" pos:column="35"/></expr_stmt>
                <break pos:line="72" pos:column="17">break;<pos:position pos:line="72" pos:column="23"/></break>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="74" pos:column="13">state<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">dmax<pos:position pos:line="74" pos:column="24"/></name></name> <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <literal type="number" pos:line="74" pos:column="27">1U<pos:position pos:line="74" pos:column="29"/></literal> <operator pos:line="74" pos:column="30">&lt;&lt;<pos:position pos:line="74" pos:column="38"/></operator> <name pos:line="74" pos:column="33">len<pos:position pos:line="74" pos:column="36"/></name></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">Tracev<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><operator pos:line="75" pos:column="20">(<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="21">stderr<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">,<pos:position pos:line="75" pos:column="28"/></operator> <literal type="string" pos:line="75" pos:column="29">"inflate:   zlib header ok\n"<pos:position pos:line="75" pos:column="58"/></literal><operator pos:line="75" pos:column="58">)<pos:position pos:line="75" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="76" pos:column="13">strm<pos:position pos:line="76" pos:column="17"/></name><operator pos:line="76" pos:column="17">-&gt;<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="19">adler<pos:position pos:line="76" pos:column="24"/></name></name> <operator pos:line="76" pos:column="25">=<pos:position pos:line="76" pos:column="26"/></operator> <name><name pos:line="76" pos:column="27">state<pos:position pos:line="76" pos:column="32"/></name><operator pos:line="76" pos:column="32">-&gt;<pos:position pos:line="76" pos:column="37"/></operator><name pos:line="76" pos:column="34">check<pos:position pos:line="76" pos:column="39"/></name></name> <operator pos:line="76" pos:column="40">=<pos:position pos:line="76" pos:column="41"/></operator> <call><name pos:line="76" pos:column="42">adler32<pos:position pos:line="76" pos:column="49"/></name><argument_list pos:line="76" pos:column="49">(<argument><expr><literal type="number" pos:line="76" pos:column="50">0L<pos:position pos:line="76" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="54">Z_NULL<pos:position pos:line="76" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="62">0<pos:position pos:line="76" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="77" pos:column="13">state<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">-&gt;<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="20">mode<pos:position pos:line="77" pos:column="24"/></name></name> <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <ternary><condition><expr><name pos:line="77" pos:column="27">hold<pos:position pos:line="77" pos:column="31"/></name> <operator pos:line="77" pos:column="32">&amp;<pos:position pos:line="77" pos:column="37"/></operator> <literal type="number" pos:line="77" pos:column="34">0x200<pos:position pos:line="77" pos:column="39"/></literal></expr> ?<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41"> <expr><name pos:line="77" pos:column="42">DICTID<pos:position pos:line="77" pos:column="48"/></name></expr> <pos:position pos:line="77" pos:column="49"/></then><else pos:line="77" pos:column="49">: <expr><name pos:line="77" pos:column="51">TYPE<pos:position pos:line="77" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="77" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">INITBITS<pos:position pos:line="78" pos:column="21"/></name><argument_list pos:line="78" pos:column="21">()<pos:position pos:line="78" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="24"/></expr_stmt>
            <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>
<cpp:ifdef pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">ifdef<pos:position pos:line="80" pos:column="7"/></cpp:directive> <name pos:line="80" pos:column="8">GUNZIP<pos:position pos:line="80" pos:column="14"/></name></cpp:ifdef>
        <case pos:line="81" pos:column="9">case <expr><name pos:line="81" pos:column="14">FLAGS<pos:position pos:line="81" pos:column="19"/></name></expr>:<pos:position pos:line="81" pos:column="20"/></case>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">NEEDBITS<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><literal type="number" pos:line="82" pos:column="22">16<pos:position pos:line="82" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">state<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">flags<pos:position pos:line="83" pos:column="25"/></name></name> <operator pos:line="83" pos:column="26">=<pos:position pos:line="83" pos:column="27"/></operator> <call pos:line="83" pos:column="28">(<name pos:line="83" pos:column="29">int<pos:position pos:line="83" pos:column="32"/></name>)<argument_list pos:line="83" pos:column="33">(<argument><expr><name pos:line="83" pos:column="34">hold<pos:position pos:line="83" pos:column="38"/></name></expr></argument>)<pos:position pos:line="83" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="40"/></expr_stmt>
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><operator pos:line="84" pos:column="17">(<pos:position pos:line="84" pos:column="18"/></operator><name><name pos:line="84" pos:column="18">state<pos:position pos:line="84" pos:column="23"/></name><operator pos:line="84" pos:column="23">-&gt;<pos:position pos:line="84" pos:column="28"/></operator><name pos:line="84" pos:column="25">flags<pos:position pos:line="84" pos:column="30"/></name></name> <operator pos:line="84" pos:column="31">&amp;<pos:position pos:line="84" pos:column="36"/></operator> <literal type="number" pos:line="84" pos:column="33">0xff<pos:position pos:line="84" pos:column="37"/></literal><operator pos:line="84" pos:column="37">)<pos:position pos:line="84" pos:column="38"/></operator> <operator pos:line="84" pos:column="39">!=<pos:position pos:line="84" pos:column="41"/></operator> <name pos:line="84" pos:column="42">Z_DEFLATED<pos:position pos:line="84" pos:column="52"/></name></expr>)<pos:position pos:line="84" pos:column="53"/></condition><then pos:line="84" pos:column="53"> <block pos:line="84" pos:column="54">{
                <expr_stmt><expr><name><name pos:line="85" pos:column="17">strm<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">msg<pos:position pos:line="85" pos:column="26"/></name></name> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <operator pos:line="85" pos:column="29">(<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="30">char<pos:position pos:line="85" pos:column="34"/></name> <operator pos:line="85" pos:column="35">*<pos:position pos:line="85" pos:column="36"/></operator><operator pos:line="85" pos:column="36">)<pos:position pos:line="85" pos:column="37"/></operator><literal type="string" pos:line="85" pos:column="37">"unknown compression method"<pos:position pos:line="85" pos:column="65"/></literal></expr>;<pos:position pos:line="85" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="86" pos:column="17">state<pos:position pos:line="86" pos:column="22"/></name><operator pos:line="86" pos:column="22">-&gt;<pos:position pos:line="86" pos:column="27"/></operator><name pos:line="86" pos:column="24">mode<pos:position pos:line="86" pos:column="28"/></name></name> <operator pos:line="86" pos:column="29">=<pos:position pos:line="86" pos:column="30"/></operator> <name pos:line="86" pos:column="31">BAD<pos:position pos:line="86" pos:column="34"/></name></expr>;<pos:position pos:line="86" pos:column="35"/></expr_stmt>
                <break pos:line="87" pos:column="17">break;<pos:position pos:line="87" pos:column="23"/></break>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name><name pos:line="89" pos:column="17">state<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">flags<pos:position pos:line="89" pos:column="29"/></name></name> <operator pos:line="89" pos:column="30">&amp;<pos:position pos:line="89" pos:column="35"/></operator> <literal type="number" pos:line="89" pos:column="32">0xe000<pos:position pos:line="89" pos:column="38"/></literal></expr>)<pos:position pos:line="89" pos:column="39"/></condition><then pos:line="89" pos:column="39"> <block pos:line="89" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="90" pos:column="17">strm<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">msg<pos:position pos:line="90" pos:column="26"/></name></name> <operator pos:line="90" pos:column="27">=<pos:position pos:line="90" pos:column="28"/></operator> <operator pos:line="90" pos:column="29">(<pos:position pos:line="90" pos:column="30"/></operator><name pos:line="90" pos:column="30">char<pos:position pos:line="90" pos:column="34"/></name> <operator pos:line="90" pos:column="35">*<pos:position pos:line="90" pos:column="36"/></operator><operator pos:line="90" pos:column="36">)<pos:position pos:line="90" pos:column="37"/></operator><literal type="string" pos:line="90" pos:column="37">"unknown header flags set"<pos:position pos:line="90" pos:column="63"/></literal></expr>;<pos:position pos:line="90" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="91" pos:column="17">state<pos:position pos:line="91" pos:column="22"/></name><operator pos:line="91" pos:column="22">-&gt;<pos:position pos:line="91" pos:column="27"/></operator><name pos:line="91" pos:column="24">mode<pos:position pos:line="91" pos:column="28"/></name></name> <operator pos:line="91" pos:column="29">=<pos:position pos:line="91" pos:column="30"/></operator> <name pos:line="91" pos:column="31">BAD<pos:position pos:line="91" pos:column="34"/></name></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt>
                <break pos:line="92" pos:column="17">break;<pos:position pos:line="92" pos:column="23"/></break>
            }<pos:position pos:line="93" pos:column="14"/></block></then></if>
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><name><name pos:line="94" pos:column="17">state<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">-&gt;<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="24">head<pos:position pos:line="94" pos:column="28"/></name></name> <operator pos:line="94" pos:column="29">!=<pos:position pos:line="94" pos:column="31"/></operator> <name pos:line="94" pos:column="32">Z_NULL<pos:position pos:line="94" pos:column="38"/></name></expr>)<pos:position pos:line="94" pos:column="39"/></condition><then pos:line="94" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="17">state<pos:position pos:line="95" pos:column="22"/></name><operator pos:line="95" pos:column="22">-&gt;<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="24">head<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">-&gt;<pos:position pos:line="95" pos:column="33"/></operator><name pos:line="95" pos:column="30">text<pos:position pos:line="95" pos:column="34"/></name></name> <operator pos:line="95" pos:column="35">=<pos:position pos:line="95" pos:column="36"/></operator> <call pos:line="95" pos:column="37">(<name pos:line="95" pos:column="38">int<pos:position pos:line="95" pos:column="41"/></name>)<argument_list pos:line="95" pos:column="42">(<argument><expr><operator pos:line="95" pos:column="43">(<pos:position pos:line="95" pos:column="44"/></operator><name pos:line="95" pos:column="44">hold<pos:position pos:line="95" pos:column="48"/></name> <operator pos:line="95" pos:column="49">&gt;&gt;<pos:position pos:line="95" pos:column="54"/></operator> <literal type="number" pos:line="95" pos:column="52">8<pos:position pos:line="95" pos:column="53"/></literal><operator pos:line="95" pos:column="53">)<pos:position pos:line="95" pos:column="54"/></operator> <operator pos:line="95" pos:column="55">&amp;<pos:position pos:line="95" pos:column="60"/></operator> <literal type="number" pos:line="95" pos:column="57">1<pos:position pos:line="95" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="60"/></expr_stmt></block></then></if>
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><name><name pos:line="96" pos:column="17">state<pos:position pos:line="96" pos:column="22"/></name><operator pos:line="96" pos:column="22">-&gt;<pos:position pos:line="96" pos:column="27"/></operator><name pos:line="96" pos:column="24">flags<pos:position pos:line="96" pos:column="29"/></name></name> <operator pos:line="96" pos:column="30">&amp;<pos:position pos:line="96" pos:column="35"/></operator> <literal type="number" pos:line="96" pos:column="32">0x0200<pos:position pos:line="96" pos:column="38"/></literal></expr>)<pos:position pos:line="96" pos:column="39"/></condition><then pos:line="96" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="40">CRC2<pos:position pos:line="96" pos:column="44"/></name><argument_list pos:line="96" pos:column="44">(<argument><expr><name><name pos:line="96" pos:column="45">state<pos:position pos:line="96" pos:column="50"/></name><operator pos:line="96" pos:column="50">-&gt;<pos:position pos:line="96" pos:column="55"/></operator><name pos:line="96" pos:column="52">check<pos:position pos:line="96" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="59">hold<pos:position pos:line="96" pos:column="63"/></name></expr></argument>)<pos:position pos:line="96" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="65"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">INITBITS<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">()<pos:position pos:line="97" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="98" pos:column="13">state<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">-&gt;<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="20">mode<pos:position pos:line="98" pos:column="24"/></name></name> <operator pos:line="98" pos:column="25">=<pos:position pos:line="98" pos:column="26"/></operator> <name pos:line="98" pos:column="27">TIME<pos:position pos:line="98" pos:column="31"/></name></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
        <case pos:line="99" pos:column="9">case <expr><name pos:line="99" pos:column="14">TIME<pos:position pos:line="99" pos:column="18"/></name></expr>:<pos:position pos:line="99" pos:column="19"/></case>
            <expr_stmt><expr><call><name pos:line="100" pos:column="13">NEEDBITS<pos:position pos:line="100" pos:column="21"/></name><argument_list pos:line="100" pos:column="21">(<argument><expr><literal type="number" pos:line="100" pos:column="22">32<pos:position pos:line="100" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>
            <if pos:line="101" pos:column="13">if <condition pos:line="101" pos:column="16">(<expr><name><name pos:line="101" pos:column="17">state<pos:position pos:line="101" pos:column="22"/></name><operator pos:line="101" pos:column="22">-&gt;<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="24">head<pos:position pos:line="101" pos:column="28"/></name></name> <operator pos:line="101" pos:column="29">!=<pos:position pos:line="101" pos:column="31"/></operator> <name pos:line="101" pos:column="32">Z_NULL<pos:position pos:line="101" pos:column="38"/></name></expr>)<pos:position pos:line="101" pos:column="39"/></condition><then pos:line="101" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="102" pos:column="17">state<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">-&gt;<pos:position pos:line="102" pos:column="27"/></operator><name pos:line="102" pos:column="24">head<pos:position pos:line="102" pos:column="28"/></name><operator pos:line="102" pos:column="28">-&gt;<pos:position pos:line="102" pos:column="33"/></operator><name pos:line="102" pos:column="30">time<pos:position pos:line="102" pos:column="34"/></name></name> <operator pos:line="102" pos:column="35">=<pos:position pos:line="102" pos:column="36"/></operator> <name pos:line="102" pos:column="37">hold<pos:position pos:line="102" pos:column="41"/></name></expr>;<pos:position pos:line="102" pos:column="42"/></expr_stmt></block></then></if>
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name><name pos:line="103" pos:column="17">state<pos:position pos:line="103" pos:column="22"/></name><operator pos:line="103" pos:column="22">-&gt;<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="24">flags<pos:position pos:line="103" pos:column="29"/></name></name> <operator pos:line="103" pos:column="30">&amp;<pos:position pos:line="103" pos:column="35"/></operator> <literal type="number" pos:line="103" pos:column="32">0x0200<pos:position pos:line="103" pos:column="38"/></literal></expr>)<pos:position pos:line="103" pos:column="39"/></condition><then pos:line="103" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="40">CRC4<pos:position pos:line="103" pos:column="44"/></name><argument_list pos:line="103" pos:column="44">(<argument><expr><name><name pos:line="103" pos:column="45">state<pos:position pos:line="103" pos:column="50"/></name><operator pos:line="103" pos:column="50">-&gt;<pos:position pos:line="103" pos:column="55"/></operator><name pos:line="103" pos:column="52">check<pos:position pos:line="103" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="59">hold<pos:position pos:line="103" pos:column="63"/></name></expr></argument>)<pos:position pos:line="103" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="65"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">INITBITS<pos:position pos:line="104" pos:column="21"/></name><argument_list pos:line="104" pos:column="21">()<pos:position pos:line="104" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">state<pos:position pos:line="105" pos:column="18"/></name><operator pos:line="105" pos:column="18">-&gt;<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="20">mode<pos:position pos:line="105" pos:column="24"/></name></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <name pos:line="105" pos:column="27">OS<pos:position pos:line="105" pos:column="29"/></name></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>
        <case pos:line="106" pos:column="9">case <expr><name pos:line="106" pos:column="14">OS<pos:position pos:line="106" pos:column="16"/></name></expr>:<pos:position pos:line="106" pos:column="17"/></case>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">NEEDBITS<pos:position pos:line="107" pos:column="21"/></name><argument_list pos:line="107" pos:column="21">(<argument><expr><literal type="number" pos:line="107" pos:column="22">16<pos:position pos:line="107" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="26"/></expr_stmt>
            <if pos:line="108" pos:column="13">if <condition pos:line="108" pos:column="16">(<expr><name><name pos:line="108" pos:column="17">state<pos:position pos:line="108" pos:column="22"/></name><operator pos:line="108" pos:column="22">-&gt;<pos:position pos:line="108" pos:column="27"/></operator><name pos:line="108" pos:column="24">head<pos:position pos:line="108" pos:column="28"/></name></name> <operator pos:line="108" pos:column="29">!=<pos:position pos:line="108" pos:column="31"/></operator> <name pos:line="108" pos:column="32">Z_NULL<pos:position pos:line="108" pos:column="38"/></name></expr>)<pos:position pos:line="108" pos:column="39"/></condition><then pos:line="108" pos:column="39"> <block pos:line="108" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="109" pos:column="17">state<pos:position pos:line="109" pos:column="22"/></name><operator pos:line="109" pos:column="22">-&gt;<pos:position pos:line="109" pos:column="27"/></operator><name pos:line="109" pos:column="24">head<pos:position pos:line="109" pos:column="28"/></name><operator pos:line="109" pos:column="28">-&gt;<pos:position pos:line="109" pos:column="33"/></operator><name pos:line="109" pos:column="30">xflags<pos:position pos:line="109" pos:column="36"/></name></name> <operator pos:line="109" pos:column="37">=<pos:position pos:line="109" pos:column="38"/></operator> <call pos:line="109" pos:column="39">(<name pos:line="109" pos:column="40">int<pos:position pos:line="109" pos:column="43"/></name>)<argument_list pos:line="109" pos:column="44">(<argument><expr><name pos:line="109" pos:column="45">hold<pos:position pos:line="109" pos:column="49"/></name> <operator pos:line="109" pos:column="50">&amp;<pos:position pos:line="109" pos:column="55"/></operator> <literal type="number" pos:line="109" pos:column="52">0xff<pos:position pos:line="109" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="110" pos:column="17">state<pos:position pos:line="110" pos:column="22"/></name><operator pos:line="110" pos:column="22">-&gt;<pos:position pos:line="110" pos:column="27"/></operator><name pos:line="110" pos:column="24">head<pos:position pos:line="110" pos:column="28"/></name><operator pos:line="110" pos:column="28">-&gt;<pos:position pos:line="110" pos:column="33"/></operator><name pos:line="110" pos:column="30">os<pos:position pos:line="110" pos:column="32"/></name></name> <operator pos:line="110" pos:column="33">=<pos:position pos:line="110" pos:column="34"/></operator> <call pos:line="110" pos:column="35">(<name pos:line="110" pos:column="36">int<pos:position pos:line="110" pos:column="39"/></name>)<argument_list pos:line="110" pos:column="40">(<argument><expr><name pos:line="110" pos:column="41">hold<pos:position pos:line="110" pos:column="45"/></name> <operator pos:line="110" pos:column="46">&gt;&gt;<pos:position pos:line="110" pos:column="51"/></operator> <literal type="number" pos:line="110" pos:column="49">8<pos:position pos:line="110" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="111" pos:column="14"/></block></then></if>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><name><name pos:line="112" pos:column="17">state<pos:position pos:line="112" pos:column="22"/></name><operator pos:line="112" pos:column="22">-&gt;<pos:position pos:line="112" pos:column="27"/></operator><name pos:line="112" pos:column="24">flags<pos:position pos:line="112" pos:column="29"/></name></name> <operator pos:line="112" pos:column="30">&amp;<pos:position pos:line="112" pos:column="35"/></operator> <literal type="number" pos:line="112" pos:column="32">0x0200<pos:position pos:line="112" pos:column="38"/></literal></expr>)<pos:position pos:line="112" pos:column="39"/></condition><then pos:line="112" pos:column="39"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="40">CRC2<pos:position pos:line="112" pos:column="44"/></name><argument_list pos:line="112" pos:column="44">(<argument><expr><name><name pos:line="112" pos:column="45">state<pos:position pos:line="112" pos:column="50"/></name><operator pos:line="112" pos:column="50">-&gt;<pos:position pos:line="112" pos:column="55"/></operator><name pos:line="112" pos:column="52">check<pos:position pos:line="112" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="59">hold<pos:position pos:line="112" pos:column="63"/></name></expr></argument>)<pos:position pos:line="112" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="65"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="113" pos:column="13">INITBITS<pos:position pos:line="113" pos:column="21"/></name><argument_list pos:line="113" pos:column="21">()<pos:position pos:line="113" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="114" pos:column="13">state<pos:position pos:line="114" pos:column="18"/></name><operator pos:line="114" pos:column="18">-&gt;<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="20">mode<pos:position pos:line="114" pos:column="24"/></name></name> <operator pos:line="114" pos:column="25">=<pos:position pos:line="114" pos:column="26"/></operator> <name pos:line="114" pos:column="27">EXLEN<pos:position pos:line="114" pos:column="32"/></name></expr>;<pos:position pos:line="114" pos:column="33"/></expr_stmt>
        <case pos:line="115" pos:column="9">case <expr><name pos:line="115" pos:column="14">EXLEN<pos:position pos:line="115" pos:column="19"/></name></expr>:<pos:position pos:line="115" pos:column="20"/></case>
            <if pos:line="116" pos:column="13">if <condition pos:line="116" pos:column="16">(<expr><name><name pos:line="116" pos:column="17">state<pos:position pos:line="116" pos:column="22"/></name><operator pos:line="116" pos:column="22">-&gt;<pos:position pos:line="116" pos:column="27"/></operator><name pos:line="116" pos:column="24">flags<pos:position pos:line="116" pos:column="29"/></name></name> <operator pos:line="116" pos:column="30">&amp;<pos:position pos:line="116" pos:column="35"/></operator> <literal type="number" pos:line="116" pos:column="32">0x0400<pos:position pos:line="116" pos:column="38"/></literal></expr>)<pos:position pos:line="116" pos:column="39"/></condition><then pos:line="116" pos:column="39"> <block pos:line="116" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="117" pos:column="17">NEEDBITS<pos:position pos:line="117" pos:column="25"/></name><argument_list pos:line="117" pos:column="25">(<argument><expr><literal type="number" pos:line="117" pos:column="26">16<pos:position pos:line="117" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="118" pos:column="17">state<pos:position pos:line="118" pos:column="22"/></name><operator pos:line="118" pos:column="22">-&gt;<pos:position pos:line="118" pos:column="27"/></operator><name pos:line="118" pos:column="24">length<pos:position pos:line="118" pos:column="30"/></name></name> <operator pos:line="118" pos:column="31">=<pos:position pos:line="118" pos:column="32"/></operator> <call pos:line="118" pos:column="33">(<name pos:line="118" pos:column="34">unsigned<pos:position pos:line="118" pos:column="42"/></name>)<argument_list pos:line="118" pos:column="43">(<argument><expr><name pos:line="118" pos:column="44">hold<pos:position pos:line="118" pos:column="48"/></name></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="50"/></expr_stmt>
                <if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><name><name pos:line="119" pos:column="21">state<pos:position pos:line="119" pos:column="26"/></name><operator pos:line="119" pos:column="26">-&gt;<pos:position pos:line="119" pos:column="31"/></operator><name pos:line="119" pos:column="28">head<pos:position pos:line="119" pos:column="32"/></name></name> <operator pos:line="119" pos:column="33">!=<pos:position pos:line="119" pos:column="35"/></operator> <name pos:line="119" pos:column="36">Z_NULL<pos:position pos:line="119" pos:column="42"/></name></expr>)<pos:position pos:line="119" pos:column="43"/></condition><then pos:line="119" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="120" pos:column="21">state<pos:position pos:line="120" pos:column="26"/></name><operator pos:line="120" pos:column="26">-&gt;<pos:position pos:line="120" pos:column="31"/></operator><name pos:line="120" pos:column="28">head<pos:position pos:line="120" pos:column="32"/></name><operator pos:line="120" pos:column="32">-&gt;<pos:position pos:line="120" pos:column="37"/></operator><name pos:line="120" pos:column="34">extra_len<pos:position pos:line="120" pos:column="43"/></name></name> <operator pos:line="120" pos:column="44">=<pos:position pos:line="120" pos:column="45"/></operator> <operator pos:line="120" pos:column="46">(<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="47">unsigned<pos:position pos:line="120" pos:column="55"/></name><operator pos:line="120" pos:column="55">)<pos:position pos:line="120" pos:column="56"/></operator><name pos:line="120" pos:column="56">hold<pos:position pos:line="120" pos:column="60"/></name></expr>;<pos:position pos:line="120" pos:column="61"/></expr_stmt></block></then></if>
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name><name pos:line="121" pos:column="21">state<pos:position pos:line="121" pos:column="26"/></name><operator pos:line="121" pos:column="26">-&gt;<pos:position pos:line="121" pos:column="31"/></operator><name pos:line="121" pos:column="28">flags<pos:position pos:line="121" pos:column="33"/></name></name> <operator pos:line="121" pos:column="34">&amp;<pos:position pos:line="121" pos:column="39"/></operator> <literal type="number" pos:line="121" pos:column="36">0x0200<pos:position pos:line="121" pos:column="42"/></literal></expr>)<pos:position pos:line="121" pos:column="43"/></condition><then pos:line="121" pos:column="43"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="44">CRC2<pos:position pos:line="121" pos:column="48"/></name><argument_list pos:line="121" pos:column="48">(<argument><expr><name><name pos:line="121" pos:column="49">state<pos:position pos:line="121" pos:column="54"/></name><operator pos:line="121" pos:column="54">-&gt;<pos:position pos:line="121" pos:column="59"/></operator><name pos:line="121" pos:column="56">check<pos:position pos:line="121" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="63">hold<pos:position pos:line="121" pos:column="67"/></name></expr></argument>)<pos:position pos:line="121" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="69"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="122" pos:column="17">INITBITS<pos:position pos:line="122" pos:column="25"/></name><argument_list pos:line="122" pos:column="25">()<pos:position pos:line="122" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="123" pos:column="14"/></block></then>
            <elseif pos:line="124" pos:column="13">else <if pos:line="124" pos:column="18">if <condition pos:line="124" pos:column="21">(<expr><name><name pos:line="124" pos:column="22">state<pos:position pos:line="124" pos:column="27"/></name><operator pos:line="124" pos:column="27">-&gt;<pos:position pos:line="124" pos:column="32"/></operator><name pos:line="124" pos:column="29">head<pos:position pos:line="124" pos:column="33"/></name></name> <operator pos:line="124" pos:column="34">!=<pos:position pos:line="124" pos:column="36"/></operator> <name pos:line="124" pos:column="37">Z_NULL<pos:position pos:line="124" pos:column="43"/></name></expr>)<pos:position pos:line="124" pos:column="44"/></condition><then pos:line="124" pos:column="44">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="125" pos:column="17">state<pos:position pos:line="125" pos:column="22"/></name><operator pos:line="125" pos:column="22">-&gt;<pos:position pos:line="125" pos:column="27"/></operator><name pos:line="125" pos:column="24">head<pos:position pos:line="125" pos:column="28"/></name><operator pos:line="125" pos:column="28">-&gt;<pos:position pos:line="125" pos:column="33"/></operator><name pos:line="125" pos:column="30">extra<pos:position pos:line="125" pos:column="35"/></name></name> <operator pos:line="125" pos:column="36">=<pos:position pos:line="125" pos:column="37"/></operator> <name pos:line="125" pos:column="38">Z_NULL<pos:position pos:line="125" pos:column="44"/></name></expr>;<pos:position pos:line="125" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">state<pos:position pos:line="126" pos:column="18"/></name><operator pos:line="126" pos:column="18">-&gt;<pos:position pos:line="126" pos:column="23"/></operator><name pos:line="126" pos:column="20">mode<pos:position pos:line="126" pos:column="24"/></name></name> <operator pos:line="126" pos:column="25">=<pos:position pos:line="126" pos:column="26"/></operator> <name pos:line="126" pos:column="27">EXTRA<pos:position pos:line="126" pos:column="32"/></name></expr>;<pos:position pos:line="126" pos:column="33"/></expr_stmt>
        <case pos:line="127" pos:column="9">case <expr><name pos:line="127" pos:column="14">EXTRA<pos:position pos:line="127" pos:column="19"/></name></expr>:<pos:position pos:line="127" pos:column="20"/></case>
            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><name><name pos:line="128" pos:column="17">state<pos:position pos:line="128" pos:column="22"/></name><operator pos:line="128" pos:column="22">-&gt;<pos:position pos:line="128" pos:column="27"/></operator><name pos:line="128" pos:column="24">flags<pos:position pos:line="128" pos:column="29"/></name></name> <operator pos:line="128" pos:column="30">&amp;<pos:position pos:line="128" pos:column="35"/></operator> <literal type="number" pos:line="128" pos:column="32">0x0400<pos:position pos:line="128" pos:column="38"/></literal></expr>)<pos:position pos:line="128" pos:column="39"/></condition><then pos:line="128" pos:column="39"> <block pos:line="128" pos:column="40">{
                <expr_stmt><expr><name pos:line="129" pos:column="17">copy<pos:position pos:line="129" pos:column="21"/></name> <operator pos:line="129" pos:column="22">=<pos:position pos:line="129" pos:column="23"/></operator> <name><name pos:line="129" pos:column="24">state<pos:position pos:line="129" pos:column="29"/></name><operator pos:line="129" pos:column="29">-&gt;<pos:position pos:line="129" pos:column="34"/></operator><name pos:line="129" pos:column="31">length<pos:position pos:line="129" pos:column="37"/></name></name></expr>;<pos:position pos:line="129" pos:column="38"/></expr_stmt>
                <if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><name pos:line="130" pos:column="21">copy<pos:position pos:line="130" pos:column="25"/></name> <operator pos:line="130" pos:column="26">&gt;<pos:position pos:line="130" pos:column="30"/></operator> <name pos:line="130" pos:column="28">have<pos:position pos:line="130" pos:column="32"/></name></expr>)<pos:position pos:line="130" pos:column="33"/></condition><then pos:line="130" pos:column="33"> <block type="pseudo"><expr_stmt><expr><name pos:line="130" pos:column="34">copy<pos:position pos:line="130" pos:column="38"/></name> <operator pos:line="130" pos:column="39">=<pos:position pos:line="130" pos:column="40"/></operator> <name pos:line="130" pos:column="41">have<pos:position pos:line="130" pos:column="45"/></name></expr>;<pos:position pos:line="130" pos:column="46"/></expr_stmt></block></then></if>
                <if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name pos:line="131" pos:column="21">copy<pos:position pos:line="131" pos:column="25"/></name></expr>)<pos:position pos:line="131" pos:column="26"/></condition><then pos:line="131" pos:column="26"> <block pos:line="131" pos:column="27">{
                    <if pos:line="132" pos:column="21">if <condition pos:line="132" pos:column="24">(<expr><name><name pos:line="132" pos:column="25">state<pos:position pos:line="132" pos:column="30"/></name><operator pos:line="132" pos:column="30">-&gt;<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="32">head<pos:position pos:line="132" pos:column="36"/></name></name> <operator pos:line="132" pos:column="37">!=<pos:position pos:line="132" pos:column="39"/></operator> <name pos:line="132" pos:column="40">Z_NULL<pos:position pos:line="132" pos:column="46"/></name> <operator pos:line="132" pos:column="47">&amp;&amp;<pos:position pos:line="132" pos:column="57"/></operator>
                        <name><name pos:line="133" pos:column="25">state<pos:position pos:line="133" pos:column="30"/></name><operator pos:line="133" pos:column="30">-&gt;<pos:position pos:line="133" pos:column="35"/></operator><name pos:line="133" pos:column="32">head<pos:position pos:line="133" pos:column="36"/></name><operator pos:line="133" pos:column="36">-&gt;<pos:position pos:line="133" pos:column="41"/></operator><name pos:line="133" pos:column="38">extra<pos:position pos:line="133" pos:column="43"/></name></name> <operator pos:line="133" pos:column="44">!=<pos:position pos:line="133" pos:column="46"/></operator> <name pos:line="133" pos:column="47">Z_NULL<pos:position pos:line="133" pos:column="53"/></name></expr>)<pos:position pos:line="133" pos:column="54"/></condition><then pos:line="133" pos:column="54"> <block pos:line="133" pos:column="55">{
                        <expr_stmt><expr><name pos:line="134" pos:column="25">len<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">=<pos:position pos:line="134" pos:column="30"/></operator> <name><name pos:line="134" pos:column="31">state<pos:position pos:line="134" pos:column="36"/></name><operator pos:line="134" pos:column="36">-&gt;<pos:position pos:line="134" pos:column="41"/></operator><name pos:line="134" pos:column="38">head<pos:position pos:line="134" pos:column="42"/></name><operator pos:line="134" pos:column="42">-&gt;<pos:position pos:line="134" pos:column="47"/></operator><name pos:line="134" pos:column="44">extra_len<pos:position pos:line="134" pos:column="53"/></name></name> <operator pos:line="134" pos:column="54">-<pos:position pos:line="134" pos:column="55"/></operator> <name><name pos:line="134" pos:column="56">state<pos:position pos:line="134" pos:column="61"/></name><operator pos:line="134" pos:column="61">-&gt;<pos:position pos:line="134" pos:column="66"/></operator><name pos:line="134" pos:column="63">length<pos:position pos:line="134" pos:column="69"/></name></name></expr>;<pos:position pos:line="134" pos:column="70"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="135" pos:column="25">zmemcpy<pos:position pos:line="135" pos:column="32"/></name><argument_list pos:line="135" pos:column="32">(<argument><expr><name><name pos:line="135" pos:column="33">state<pos:position pos:line="135" pos:column="38"/></name><operator pos:line="135" pos:column="38">-&gt;<pos:position pos:line="135" pos:column="43"/></operator><name pos:line="135" pos:column="40">head<pos:position pos:line="135" pos:column="44"/></name><operator pos:line="135" pos:column="44">-&gt;<pos:position pos:line="135" pos:column="49"/></operator><name pos:line="135" pos:column="46">extra<pos:position pos:line="135" pos:column="51"/></name></name> <operator pos:line="135" pos:column="52">+<pos:position pos:line="135" pos:column="53"/></operator> <name pos:line="135" pos:column="54">len<pos:position pos:line="135" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="59">next<pos:position pos:line="135" pos:column="63"/></name></expr></argument>,
                                <argument><expr><ternary><condition><expr><name pos:line="136" pos:column="33">len<pos:position pos:line="136" pos:column="36"/></name> <operator pos:line="136" pos:column="37">+<pos:position pos:line="136" pos:column="38"/></operator> <name pos:line="136" pos:column="39">copy<pos:position pos:line="136" pos:column="43"/></name> <operator pos:line="136" pos:column="44">&gt;<pos:position pos:line="136" pos:column="48"/></operator> <name><name pos:line="136" pos:column="46">state<pos:position pos:line="136" pos:column="51"/></name><operator pos:line="136" pos:column="51">-&gt;<pos:position pos:line="136" pos:column="56"/></operator><name pos:line="136" pos:column="53">head<pos:position pos:line="136" pos:column="57"/></name><operator pos:line="136" pos:column="57">-&gt;<pos:position pos:line="136" pos:column="62"/></operator><name pos:line="136" pos:column="59">extra_max<pos:position pos:line="136" pos:column="68"/></name></name></expr> ?<pos:position pos:line="136" pos:column="70"/></condition><then pos:line="136" pos:column="70">
                                <expr><name><name pos:line="137" pos:column="33">state<pos:position pos:line="137" pos:column="38"/></name><operator pos:line="137" pos:column="38">-&gt;<pos:position pos:line="137" pos:column="43"/></operator><name pos:line="137" pos:column="40">head<pos:position pos:line="137" pos:column="44"/></name><operator pos:line="137" pos:column="44">-&gt;<pos:position pos:line="137" pos:column="49"/></operator><name pos:line="137" pos:column="46">extra_max<pos:position pos:line="137" pos:column="55"/></name></name> <operator pos:line="137" pos:column="56">-<pos:position pos:line="137" pos:column="57"/></operator> <name pos:line="137" pos:column="58">len<pos:position pos:line="137" pos:column="61"/></name></expr> <pos:position pos:line="137" pos:column="62"/></then><else pos:line="137" pos:column="62">: <expr><name pos:line="137" pos:column="64">copy<pos:position pos:line="137" pos:column="68"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="137" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="70"/></expr_stmt>
                    }<pos:position pos:line="138" pos:column="22"/></block></then></if>
                    <if pos:line="139" pos:column="21">if <condition pos:line="139" pos:column="24">(<expr><name><name pos:line="139" pos:column="25">state<pos:position pos:line="139" pos:column="30"/></name><operator pos:line="139" pos:column="30">-&gt;<pos:position pos:line="139" pos:column="35"/></operator><name pos:line="139" pos:column="32">flags<pos:position pos:line="139" pos:column="37"/></name></name> <operator pos:line="139" pos:column="38">&amp;<pos:position pos:line="139" pos:column="43"/></operator> <literal type="number" pos:line="139" pos:column="40">0x0200<pos:position pos:line="139" pos:column="46"/></literal></expr>)<pos:position pos:line="139" pos:column="47"/></condition><then pos:line="139" pos:column="47">
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="140" pos:column="25">state<pos:position pos:line="140" pos:column="30"/></name><operator pos:line="140" pos:column="30">-&gt;<pos:position pos:line="140" pos:column="35"/></operator><name pos:line="140" pos:column="32">check<pos:position pos:line="140" pos:column="37"/></name></name> <operator pos:line="140" pos:column="38">=<pos:position pos:line="140" pos:column="39"/></operator> <call><name pos:line="140" pos:column="40">crc32<pos:position pos:line="140" pos:column="45"/></name><argument_list pos:line="140" pos:column="45">(<argument><expr><name><name pos:line="140" pos:column="46">state<pos:position pos:line="140" pos:column="51"/></name><operator pos:line="140" pos:column="51">-&gt;<pos:position pos:line="140" pos:column="56"/></operator><name pos:line="140" pos:column="53">check<pos:position pos:line="140" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="60">next<pos:position pos:line="140" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="66">copy<pos:position pos:line="140" pos:column="70"/></name></expr></argument>)<pos:position pos:line="140" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="72"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name pos:line="141" pos:column="21">have<pos:position pos:line="141" pos:column="25"/></name> <operator pos:line="141" pos:column="26">-=<pos:position pos:line="141" pos:column="28"/></operator> <name pos:line="141" pos:column="29">copy<pos:position pos:line="141" pos:column="33"/></name></expr>;<pos:position pos:line="141" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="142" pos:column="21">next<pos:position pos:line="142" pos:column="25"/></name> <operator pos:line="142" pos:column="26">+=<pos:position pos:line="142" pos:column="28"/></operator> <name pos:line="142" pos:column="29">copy<pos:position pos:line="142" pos:column="33"/></name></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="143" pos:column="21">state<pos:position pos:line="143" pos:column="26"/></name><operator pos:line="143" pos:column="26">-&gt;<pos:position pos:line="143" pos:column="31"/></operator><name pos:line="143" pos:column="28">length<pos:position pos:line="143" pos:column="34"/></name></name> <operator pos:line="143" pos:column="35">-=<pos:position pos:line="143" pos:column="37"/></operator> <name pos:line="143" pos:column="38">copy<pos:position pos:line="143" pos:column="42"/></name></expr>;<pos:position pos:line="143" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="144" pos:column="18"/></block></then></if>
                <if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><name><name pos:line="145" pos:column="21">state<pos:position pos:line="145" pos:column="26"/></name><operator pos:line="145" pos:column="26">-&gt;<pos:position pos:line="145" pos:column="31"/></operator><name pos:line="145" pos:column="28">length<pos:position pos:line="145" pos:column="34"/></name></name></expr>)<pos:position pos:line="145" pos:column="35"/></condition><then pos:line="145" pos:column="35"> <block type="pseudo"><goto pos:line="145" pos:column="36">goto <name pos:line="145" pos:column="41">inf_leave<pos:position pos:line="145" pos:column="50"/></name>;<pos:position pos:line="145" pos:column="51"/></goto></block></then></if>
            }<pos:position pos:line="146" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="147" pos:column="13">state<pos:position pos:line="147" pos:column="18"/></name><operator pos:line="147" pos:column="18">-&gt;<pos:position pos:line="147" pos:column="23"/></operator><name pos:line="147" pos:column="20">length<pos:position pos:line="147" pos:column="26"/></name></name> <operator pos:line="147" pos:column="27">=<pos:position pos:line="147" pos:column="28"/></operator> <literal type="number" pos:line="147" pos:column="29">0<pos:position pos:line="147" pos:column="30"/></literal></expr>;<pos:position pos:line="147" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="148" pos:column="13">state<pos:position pos:line="148" pos:column="18"/></name><operator pos:line="148" pos:column="18">-&gt;<pos:position pos:line="148" pos:column="23"/></operator><name pos:line="148" pos:column="20">mode<pos:position pos:line="148" pos:column="24"/></name></name> <operator pos:line="148" pos:column="25">=<pos:position pos:line="148" pos:column="26"/></operator> <name pos:line="148" pos:column="27">NAME<pos:position pos:line="148" pos:column="31"/></name></expr>;<pos:position pos:line="148" pos:column="32"/></expr_stmt>
        <case pos:line="149" pos:column="9">case <expr><name pos:line="149" pos:column="14">NAME<pos:position pos:line="149" pos:column="18"/></name></expr>:<pos:position pos:line="149" pos:column="19"/></case>
            <if pos:line="150" pos:column="13">if <condition pos:line="150" pos:column="16">(<expr><name><name pos:line="150" pos:column="17">state<pos:position pos:line="150" pos:column="22"/></name><operator pos:line="150" pos:column="22">-&gt;<pos:position pos:line="150" pos:column="27"/></operator><name pos:line="150" pos:column="24">flags<pos:position pos:line="150" pos:column="29"/></name></name> <operator pos:line="150" pos:column="30">&amp;<pos:position pos:line="150" pos:column="35"/></operator> <literal type="number" pos:line="150" pos:column="32">0x0800<pos:position pos:line="150" pos:column="38"/></literal></expr>)<pos:position pos:line="150" pos:column="39"/></condition><then pos:line="150" pos:column="39"> <block pos:line="150" pos:column="40">{
                <if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><name pos:line="151" pos:column="21">have<pos:position pos:line="151" pos:column="25"/></name> <operator pos:line="151" pos:column="26">==<pos:position pos:line="151" pos:column="28"/></operator> <literal type="number" pos:line="151" pos:column="29">0<pos:position pos:line="151" pos:column="30"/></literal></expr>)<pos:position pos:line="151" pos:column="31"/></condition><then pos:line="151" pos:column="31"> <block type="pseudo"><goto pos:line="151" pos:column="32">goto <name pos:line="151" pos:column="37">inf_leave<pos:position pos:line="151" pos:column="46"/></name>;<pos:position pos:line="151" pos:column="47"/></goto></block></then></if>
                <expr_stmt><expr><name pos:line="152" pos:column="17">copy<pos:position pos:line="152" pos:column="21"/></name> <operator pos:line="152" pos:column="22">=<pos:position pos:line="152" pos:column="23"/></operator> <literal type="number" pos:line="152" pos:column="24">0<pos:position pos:line="152" pos:column="25"/></literal></expr>;<pos:position pos:line="152" pos:column="26"/></expr_stmt>
                <do pos:line="153" pos:column="17">do <block pos:line="153" pos:column="20">{
                    <expr_stmt><expr><name pos:line="154" pos:column="21">len<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">=<pos:position pos:line="154" pos:column="26"/></operator> <call pos:line="154" pos:column="27">(<name pos:line="154" pos:column="28">unsigned<pos:position pos:line="154" pos:column="36"/></name>)<argument_list pos:line="154" pos:column="37">(<argument><expr><name><name pos:line="154" pos:column="38">next<pos:position pos:line="154" pos:column="42"/></name><index pos:line="154" pos:column="42">[<expr><name pos:line="154" pos:column="43">copy<pos:position pos:line="154" pos:column="47"/></name><operator pos:line="154" pos:column="47">++<pos:position pos:line="154" pos:column="49"/></operator></expr>]<pos:position pos:line="154" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="154" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="52"/></expr_stmt>
                    <if pos:line="155" pos:column="21">if <condition pos:line="155" pos:column="24">(<expr><name><name pos:line="155" pos:column="25">state<pos:position pos:line="155" pos:column="30"/></name><operator pos:line="155" pos:column="30">-&gt;<pos:position pos:line="155" pos:column="35"/></operator><name pos:line="155" pos:column="32">head<pos:position pos:line="155" pos:column="36"/></name></name> <operator pos:line="155" pos:column="37">!=<pos:position pos:line="155" pos:column="39"/></operator> <name pos:line="155" pos:column="40">Z_NULL<pos:position pos:line="155" pos:column="46"/></name> <operator pos:line="155" pos:column="47">&amp;&amp;<pos:position pos:line="155" pos:column="57"/></operator>
                            <name><name pos:line="156" pos:column="29">state<pos:position pos:line="156" pos:column="34"/></name><operator pos:line="156" pos:column="34">-&gt;<pos:position pos:line="156" pos:column="39"/></operator><name pos:line="156" pos:column="36">head<pos:position pos:line="156" pos:column="40"/></name><operator pos:line="156" pos:column="40">-&gt;<pos:position pos:line="156" pos:column="45"/></operator><name pos:line="156" pos:column="42">name<pos:position pos:line="156" pos:column="46"/></name></name> <operator pos:line="156" pos:column="47">!=<pos:position pos:line="156" pos:column="49"/></operator> <name pos:line="156" pos:column="50">Z_NULL<pos:position pos:line="156" pos:column="56"/></name> <operator pos:line="156" pos:column="57">&amp;&amp;<pos:position pos:line="156" pos:column="67"/></operator>
                            <name><name pos:line="157" pos:column="29">state<pos:position pos:line="157" pos:column="34"/></name><operator pos:line="157" pos:column="34">-&gt;<pos:position pos:line="157" pos:column="39"/></operator><name pos:line="157" pos:column="36">length<pos:position pos:line="157" pos:column="42"/></name></name> <operator pos:line="157" pos:column="43">&lt;<pos:position pos:line="157" pos:column="47"/></operator> <name><name pos:line="157" pos:column="45">state<pos:position pos:line="157" pos:column="50"/></name><operator pos:line="157" pos:column="50">-&gt;<pos:position pos:line="157" pos:column="55"/></operator><name pos:line="157" pos:column="52">head<pos:position pos:line="157" pos:column="56"/></name><operator pos:line="157" pos:column="56">-&gt;<pos:position pos:line="157" pos:column="61"/></operator><name pos:line="157" pos:column="58">name_max<pos:position pos:line="157" pos:column="66"/></name></name></expr>)<pos:position pos:line="157" pos:column="67"/></condition><then pos:line="157" pos:column="67">
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="158" pos:column="25">state<pos:position pos:line="158" pos:column="30"/></name><operator pos:line="158" pos:column="30">-&gt;<pos:position pos:line="158" pos:column="35"/></operator><name pos:line="158" pos:column="32">head<pos:position pos:line="158" pos:column="36"/></name><operator pos:line="158" pos:column="36">-&gt;<pos:position pos:line="158" pos:column="41"/></operator><name pos:line="158" pos:column="38">name<pos:position pos:line="158" pos:column="42"/></name><index pos:line="158" pos:column="42">[<expr><name><name pos:line="158" pos:column="43">state<pos:position pos:line="158" pos:column="48"/></name><operator pos:line="158" pos:column="48">-&gt;<pos:position pos:line="158" pos:column="53"/></operator><name pos:line="158" pos:column="50">length<pos:position pos:line="158" pos:column="56"/></name></name><operator pos:line="158" pos:column="56">++<pos:position pos:line="158" pos:column="58"/></operator></expr>]<pos:position pos:line="158" pos:column="59"/></index></name> <operator pos:line="158" pos:column="60">=<pos:position pos:line="158" pos:column="61"/></operator> <name pos:line="158" pos:column="62">len<pos:position pos:line="158" pos:column="65"/></name></expr>;<pos:position pos:line="158" pos:column="66"/></expr_stmt></block></then></if>
                }<pos:position pos:line="159" pos:column="18"/></block> while <condition pos:line="159" pos:column="25">(<expr><name pos:line="159" pos:column="26">len<pos:position pos:line="159" pos:column="29"/></name> <operator pos:line="159" pos:column="30">&amp;&amp;<pos:position pos:line="159" pos:column="40"/></operator> <name pos:line="159" pos:column="33">copy<pos:position pos:line="159" pos:column="37"/></name> <operator pos:line="159" pos:column="38">&lt;<pos:position pos:line="159" pos:column="42"/></operator> <name pos:line="159" pos:column="40">have<pos:position pos:line="159" pos:column="44"/></name></expr>)<pos:position pos:line="159" pos:column="45"/></condition>;<pos:position pos:line="159" pos:column="46"/></do>
                <if pos:line="160" pos:column="17">if <condition pos:line="160" pos:column="20">(<expr><name><name pos:line="160" pos:column="21">state<pos:position pos:line="160" pos:column="26"/></name><operator pos:line="160" pos:column="26">-&gt;<pos:position pos:line="160" pos:column="31"/></operator><name pos:line="160" pos:column="28">flags<pos:position pos:line="160" pos:column="33"/></name></name> <operator pos:line="160" pos:column="34">&amp;<pos:position pos:line="160" pos:column="39"/></operator> <literal type="number" pos:line="160" pos:column="36">0x0200<pos:position pos:line="160" pos:column="42"/></literal></expr>)<pos:position pos:line="160" pos:column="43"/></condition><then pos:line="160" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="161" pos:column="21">state<pos:position pos:line="161" pos:column="26"/></name><operator pos:line="161" pos:column="26">-&gt;<pos:position pos:line="161" pos:column="31"/></operator><name pos:line="161" pos:column="28">check<pos:position pos:line="161" pos:column="33"/></name></name> <operator pos:line="161" pos:column="34">=<pos:position pos:line="161" pos:column="35"/></operator> <call><name pos:line="161" pos:column="36">crc32<pos:position pos:line="161" pos:column="41"/></name><argument_list pos:line="161" pos:column="41">(<argument><expr><name><name pos:line="161" pos:column="42">state<pos:position pos:line="161" pos:column="47"/></name><operator pos:line="161" pos:column="47">-&gt;<pos:position pos:line="161" pos:column="52"/></operator><name pos:line="161" pos:column="49">check<pos:position pos:line="161" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="56">next<pos:position pos:line="161" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="62">copy<pos:position pos:line="161" pos:column="66"/></name></expr></argument>)<pos:position pos:line="161" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="68"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="162" pos:column="17">have<pos:position pos:line="162" pos:column="21"/></name> <operator pos:line="162" pos:column="22">-=<pos:position pos:line="162" pos:column="24"/></operator> <name pos:line="162" pos:column="25">copy<pos:position pos:line="162" pos:column="29"/></name></expr>;<pos:position pos:line="162" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="163" pos:column="17">next<pos:position pos:line="163" pos:column="21"/></name> <operator pos:line="163" pos:column="22">+=<pos:position pos:line="163" pos:column="24"/></operator> <name pos:line="163" pos:column="25">copy<pos:position pos:line="163" pos:column="29"/></name></expr>;<pos:position pos:line="163" pos:column="30"/></expr_stmt>
                <if pos:line="164" pos:column="17">if <condition pos:line="164" pos:column="20">(<expr><name pos:line="164" pos:column="21">len<pos:position pos:line="164" pos:column="24"/></name></expr>)<pos:position pos:line="164" pos:column="25"/></condition><then pos:line="164" pos:column="25"> <block type="pseudo"><goto pos:line="164" pos:column="26">goto <name pos:line="164" pos:column="31">inf_leave<pos:position pos:line="164" pos:column="40"/></name>;<pos:position pos:line="164" pos:column="41"/></goto></block></then></if>
            }<pos:position pos:line="165" pos:column="14"/></block></then>
            <elseif pos:line="166" pos:column="13">else <if pos:line="166" pos:column="18">if <condition pos:line="166" pos:column="21">(<expr><name><name pos:line="166" pos:column="22">state<pos:position pos:line="166" pos:column="27"/></name><operator pos:line="166" pos:column="27">-&gt;<pos:position pos:line="166" pos:column="32"/></operator><name pos:line="166" pos:column="29">head<pos:position pos:line="166" pos:column="33"/></name></name> <operator pos:line="166" pos:column="34">!=<pos:position pos:line="166" pos:column="36"/></operator> <name pos:line="166" pos:column="37">Z_NULL<pos:position pos:line="166" pos:column="43"/></name></expr>)<pos:position pos:line="166" pos:column="44"/></condition><then pos:line="166" pos:column="44">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="167" pos:column="17">state<pos:position pos:line="167" pos:column="22"/></name><operator pos:line="167" pos:column="22">-&gt;<pos:position pos:line="167" pos:column="27"/></operator><name pos:line="167" pos:column="24">head<pos:position pos:line="167" pos:column="28"/></name><operator pos:line="167" pos:column="28">-&gt;<pos:position pos:line="167" pos:column="33"/></operator><name pos:line="167" pos:column="30">name<pos:position pos:line="167" pos:column="34"/></name></name> <operator pos:line="167" pos:column="35">=<pos:position pos:line="167" pos:column="36"/></operator> <name pos:line="167" pos:column="37">Z_NULL<pos:position pos:line="167" pos:column="43"/></name></expr>;<pos:position pos:line="167" pos:column="44"/></expr_stmt></block></then></if></elseif></if>
            <expr_stmt><expr><name><name pos:line="168" pos:column="13">state<pos:position pos:line="168" pos:column="18"/></name><operator pos:line="168" pos:column="18">-&gt;<pos:position pos:line="168" pos:column="23"/></operator><name pos:line="168" pos:column="20">length<pos:position pos:line="168" pos:column="26"/></name></name> <operator pos:line="168" pos:column="27">=<pos:position pos:line="168" pos:column="28"/></operator> <literal type="number" pos:line="168" pos:column="29">0<pos:position pos:line="168" pos:column="30"/></literal></expr>;<pos:position pos:line="168" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="169" pos:column="13">state<pos:position pos:line="169" pos:column="18"/></name><operator pos:line="169" pos:column="18">-&gt;<pos:position pos:line="169" pos:column="23"/></operator><name pos:line="169" pos:column="20">mode<pos:position pos:line="169" pos:column="24"/></name></name> <operator pos:line="169" pos:column="25">=<pos:position pos:line="169" pos:column="26"/></operator> <name pos:line="169" pos:column="27">COMMENT<pos:position pos:line="169" pos:column="34"/></name></expr>;<pos:position pos:line="169" pos:column="35"/></expr_stmt>
        <case pos:line="170" pos:column="9">case <expr><name pos:line="170" pos:column="14">COMMENT<pos:position pos:line="170" pos:column="21"/></name></expr>:<pos:position pos:line="170" pos:column="22"/></case>
            <if pos:line="171" pos:column="13">if <condition pos:line="171" pos:column="16">(<expr><name><name pos:line="171" pos:column="17">state<pos:position pos:line="171" pos:column="22"/></name><operator pos:line="171" pos:column="22">-&gt;<pos:position pos:line="171" pos:column="27"/></operator><name pos:line="171" pos:column="24">flags<pos:position pos:line="171" pos:column="29"/></name></name> <operator pos:line="171" pos:column="30">&amp;<pos:position pos:line="171" pos:column="35"/></operator> <literal type="number" pos:line="171" pos:column="32">0x1000<pos:position pos:line="171" pos:column="38"/></literal></expr>)<pos:position pos:line="171" pos:column="39"/></condition><then pos:line="171" pos:column="39"> <block pos:line="171" pos:column="40">{
                <if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><name pos:line="172" pos:column="21">have<pos:position pos:line="172" pos:column="25"/></name> <operator pos:line="172" pos:column="26">==<pos:position pos:line="172" pos:column="28"/></operator> <literal type="number" pos:line="172" pos:column="29">0<pos:position pos:line="172" pos:column="30"/></literal></expr>)<pos:position pos:line="172" pos:column="31"/></condition><then pos:line="172" pos:column="31"> <block type="pseudo"><goto pos:line="172" pos:column="32">goto <name pos:line="172" pos:column="37">inf_leave<pos:position pos:line="172" pos:column="46"/></name>;<pos:position pos:line="172" pos:column="47"/></goto></block></then></if>
                <expr_stmt><expr><name pos:line="173" pos:column="17">copy<pos:position pos:line="173" pos:column="21"/></name> <operator pos:line="173" pos:column="22">=<pos:position pos:line="173" pos:column="23"/></operator> <literal type="number" pos:line="173" pos:column="24">0<pos:position pos:line="173" pos:column="25"/></literal></expr>;<pos:position pos:line="173" pos:column="26"/></expr_stmt>
                <do pos:line="174" pos:column="17">do <block pos:line="174" pos:column="20">{
                    <expr_stmt><expr><name pos:line="175" pos:column="21">len<pos:position pos:line="175" pos:column="24"/></name> <operator pos:line="175" pos:column="25">=<pos:position pos:line="175" pos:column="26"/></operator> <call pos:line="175" pos:column="27">(<name pos:line="175" pos:column="28">unsigned<pos:position pos:line="175" pos:column="36"/></name>)<argument_list pos:line="175" pos:column="37">(<argument><expr><name><name pos:line="175" pos:column="38">next<pos:position pos:line="175" pos:column="42"/></name><index pos:line="175" pos:column="42">[<expr><name pos:line="175" pos:column="43">copy<pos:position pos:line="175" pos:column="47"/></name><operator pos:line="175" pos:column="47">++<pos:position pos:line="175" pos:column="49"/></operator></expr>]<pos:position pos:line="175" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="175" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="52"/></expr_stmt>
                    <if pos:line="176" pos:column="21">if <condition pos:line="176" pos:column="24">(<expr><name><name pos:line="176" pos:column="25">state<pos:position pos:line="176" pos:column="30"/></name><operator pos:line="176" pos:column="30">-&gt;<pos:position pos:line="176" pos:column="35"/></operator><name pos:line="176" pos:column="32">head<pos:position pos:line="176" pos:column="36"/></name></name> <operator pos:line="176" pos:column="37">!=<pos:position pos:line="176" pos:column="39"/></operator> <name pos:line="176" pos:column="40">Z_NULL<pos:position pos:line="176" pos:column="46"/></name> <operator pos:line="176" pos:column="47">&amp;&amp;<pos:position pos:line="176" pos:column="57"/></operator>
                            <name><name pos:line="177" pos:column="29">state<pos:position pos:line="177" pos:column="34"/></name><operator pos:line="177" pos:column="34">-&gt;<pos:position pos:line="177" pos:column="39"/></operator><name pos:line="177" pos:column="36">head<pos:position pos:line="177" pos:column="40"/></name><operator pos:line="177" pos:column="40">-&gt;<pos:position pos:line="177" pos:column="45"/></operator><name pos:line="177" pos:column="42">comment<pos:position pos:line="177" pos:column="49"/></name></name> <operator pos:line="177" pos:column="50">!=<pos:position pos:line="177" pos:column="52"/></operator> <name pos:line="177" pos:column="53">Z_NULL<pos:position pos:line="177" pos:column="59"/></name> <operator pos:line="177" pos:column="60">&amp;&amp;<pos:position pos:line="177" pos:column="70"/></operator>
                            <name><name pos:line="178" pos:column="29">state<pos:position pos:line="178" pos:column="34"/></name><operator pos:line="178" pos:column="34">-&gt;<pos:position pos:line="178" pos:column="39"/></operator><name pos:line="178" pos:column="36">length<pos:position pos:line="178" pos:column="42"/></name></name> <operator pos:line="178" pos:column="43">&lt;<pos:position pos:line="178" pos:column="47"/></operator> <name><name pos:line="178" pos:column="45">state<pos:position pos:line="178" pos:column="50"/></name><operator pos:line="178" pos:column="50">-&gt;<pos:position pos:line="178" pos:column="55"/></operator><name pos:line="178" pos:column="52">head<pos:position pos:line="178" pos:column="56"/></name><operator pos:line="178" pos:column="56">-&gt;<pos:position pos:line="178" pos:column="61"/></operator><name pos:line="178" pos:column="58">comm_max<pos:position pos:line="178" pos:column="66"/></name></name></expr>)<pos:position pos:line="178" pos:column="67"/></condition><then pos:line="178" pos:column="67">
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="179" pos:column="25">state<pos:position pos:line="179" pos:column="30"/></name><operator pos:line="179" pos:column="30">-&gt;<pos:position pos:line="179" pos:column="35"/></operator><name pos:line="179" pos:column="32">head<pos:position pos:line="179" pos:column="36"/></name><operator pos:line="179" pos:column="36">-&gt;<pos:position pos:line="179" pos:column="41"/></operator><name pos:line="179" pos:column="38">comment<pos:position pos:line="179" pos:column="45"/></name><index pos:line="179" pos:column="45">[<expr><name><name pos:line="179" pos:column="46">state<pos:position pos:line="179" pos:column="51"/></name><operator pos:line="179" pos:column="51">-&gt;<pos:position pos:line="179" pos:column="56"/></operator><name pos:line="179" pos:column="53">length<pos:position pos:line="179" pos:column="59"/></name></name><operator pos:line="179" pos:column="59">++<pos:position pos:line="179" pos:column="61"/></operator></expr>]<pos:position pos:line="179" pos:column="62"/></index></name> <operator pos:line="179" pos:column="63">=<pos:position pos:line="179" pos:column="64"/></operator> <name pos:line="179" pos:column="65">len<pos:position pos:line="179" pos:column="68"/></name></expr>;<pos:position pos:line="179" pos:column="69"/></expr_stmt></block></then></if>
                }<pos:position pos:line="180" pos:column="18"/></block> while <condition pos:line="180" pos:column="25">(<expr><name pos:line="180" pos:column="26">len<pos:position pos:line="180" pos:column="29"/></name> <operator pos:line="180" pos:column="30">&amp;&amp;<pos:position pos:line="180" pos:column="40"/></operator> <name pos:line="180" pos:column="33">copy<pos:position pos:line="180" pos:column="37"/></name> <operator pos:line="180" pos:column="38">&lt;<pos:position pos:line="180" pos:column="42"/></operator> <name pos:line="180" pos:column="40">have<pos:position pos:line="180" pos:column="44"/></name></expr>)<pos:position pos:line="180" pos:column="45"/></condition>;<pos:position pos:line="180" pos:column="46"/></do>
                <if pos:line="181" pos:column="17">if <condition pos:line="181" pos:column="20">(<expr><name><name pos:line="181" pos:column="21">state<pos:position pos:line="181" pos:column="26"/></name><operator pos:line="181" pos:column="26">-&gt;<pos:position pos:line="181" pos:column="31"/></operator><name pos:line="181" pos:column="28">flags<pos:position pos:line="181" pos:column="33"/></name></name> <operator pos:line="181" pos:column="34">&amp;<pos:position pos:line="181" pos:column="39"/></operator> <literal type="number" pos:line="181" pos:column="36">0x0200<pos:position pos:line="181" pos:column="42"/></literal></expr>)<pos:position pos:line="181" pos:column="43"/></condition><then pos:line="181" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="182" pos:column="21">state<pos:position pos:line="182" pos:column="26"/></name><operator pos:line="182" pos:column="26">-&gt;<pos:position pos:line="182" pos:column="31"/></operator><name pos:line="182" pos:column="28">check<pos:position pos:line="182" pos:column="33"/></name></name> <operator pos:line="182" pos:column="34">=<pos:position pos:line="182" pos:column="35"/></operator> <call><name pos:line="182" pos:column="36">crc32<pos:position pos:line="182" pos:column="41"/></name><argument_list pos:line="182" pos:column="41">(<argument><expr><name><name pos:line="182" pos:column="42">state<pos:position pos:line="182" pos:column="47"/></name><operator pos:line="182" pos:column="47">-&gt;<pos:position pos:line="182" pos:column="52"/></operator><name pos:line="182" pos:column="49">check<pos:position pos:line="182" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="56">next<pos:position pos:line="182" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="62">copy<pos:position pos:line="182" pos:column="66"/></name></expr></argument>)<pos:position pos:line="182" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="68"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="183" pos:column="17">have<pos:position pos:line="183" pos:column="21"/></name> <operator pos:line="183" pos:column="22">-=<pos:position pos:line="183" pos:column="24"/></operator> <name pos:line="183" pos:column="25">copy<pos:position pos:line="183" pos:column="29"/></name></expr>;<pos:position pos:line="183" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="184" pos:column="17">next<pos:position pos:line="184" pos:column="21"/></name> <operator pos:line="184" pos:column="22">+=<pos:position pos:line="184" pos:column="24"/></operator> <name pos:line="184" pos:column="25">copy<pos:position pos:line="184" pos:column="29"/></name></expr>;<pos:position pos:line="184" pos:column="30"/></expr_stmt>
                <if pos:line="185" pos:column="17">if <condition pos:line="185" pos:column="20">(<expr><name pos:line="185" pos:column="21">len<pos:position pos:line="185" pos:column="24"/></name></expr>)<pos:position pos:line="185" pos:column="25"/></condition><then pos:line="185" pos:column="25"> <block type="pseudo"><goto pos:line="185" pos:column="26">goto <name pos:line="185" pos:column="31">inf_leave<pos:position pos:line="185" pos:column="40"/></name>;<pos:position pos:line="185" pos:column="41"/></goto></block></then></if>
            }<pos:position pos:line="186" pos:column="14"/></block></then>
            <elseif pos:line="187" pos:column="13">else <if pos:line="187" pos:column="18">if <condition pos:line="187" pos:column="21">(<expr><name><name pos:line="187" pos:column="22">state<pos:position pos:line="187" pos:column="27"/></name><operator pos:line="187" pos:column="27">-&gt;<pos:position pos:line="187" pos:column="32"/></operator><name pos:line="187" pos:column="29">head<pos:position pos:line="187" pos:column="33"/></name></name> <operator pos:line="187" pos:column="34">!=<pos:position pos:line="187" pos:column="36"/></operator> <name pos:line="187" pos:column="37">Z_NULL<pos:position pos:line="187" pos:column="43"/></name></expr>)<pos:position pos:line="187" pos:column="44"/></condition><then pos:line="187" pos:column="44">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="188" pos:column="17">state<pos:position pos:line="188" pos:column="22"/></name><operator pos:line="188" pos:column="22">-&gt;<pos:position pos:line="188" pos:column="27"/></operator><name pos:line="188" pos:column="24">head<pos:position pos:line="188" pos:column="28"/></name><operator pos:line="188" pos:column="28">-&gt;<pos:position pos:line="188" pos:column="33"/></operator><name pos:line="188" pos:column="30">comment<pos:position pos:line="188" pos:column="37"/></name></name> <operator pos:line="188" pos:column="38">=<pos:position pos:line="188" pos:column="39"/></operator> <name pos:line="188" pos:column="40">Z_NULL<pos:position pos:line="188" pos:column="46"/></name></expr>;<pos:position pos:line="188" pos:column="47"/></expr_stmt></block></then></if></elseif></if>
            <expr_stmt><expr><name><name pos:line="189" pos:column="13">state<pos:position pos:line="189" pos:column="18"/></name><operator pos:line="189" pos:column="18">-&gt;<pos:position pos:line="189" pos:column="23"/></operator><name pos:line="189" pos:column="20">mode<pos:position pos:line="189" pos:column="24"/></name></name> <operator pos:line="189" pos:column="25">=<pos:position pos:line="189" pos:column="26"/></operator> <name pos:line="189" pos:column="27">HCRC<pos:position pos:line="189" pos:column="31"/></name></expr>;<pos:position pos:line="189" pos:column="32"/></expr_stmt>
        <case pos:line="190" pos:column="9">case <expr><name pos:line="190" pos:column="14">HCRC<pos:position pos:line="190" pos:column="18"/></name></expr>:<pos:position pos:line="190" pos:column="19"/></case>
            <if pos:line="191" pos:column="13">if <condition pos:line="191" pos:column="16">(<expr><name><name pos:line="191" pos:column="17">state<pos:position pos:line="191" pos:column="22"/></name><operator pos:line="191" pos:column="22">-&gt;<pos:position pos:line="191" pos:column="27"/></operator><name pos:line="191" pos:column="24">flags<pos:position pos:line="191" pos:column="29"/></name></name> <operator pos:line="191" pos:column="30">&amp;<pos:position pos:line="191" pos:column="35"/></operator> <literal type="number" pos:line="191" pos:column="32">0x0200<pos:position pos:line="191" pos:column="38"/></literal></expr>)<pos:position pos:line="191" pos:column="39"/></condition><then pos:line="191" pos:column="39"> <block pos:line="191" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="192" pos:column="17">NEEDBITS<pos:position pos:line="192" pos:column="25"/></name><argument_list pos:line="192" pos:column="25">(<argument><expr><literal type="number" pos:line="192" pos:column="26">16<pos:position pos:line="192" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="30"/></expr_stmt>
                <if pos:line="193" pos:column="17">if <condition pos:line="193" pos:column="20">(<expr><name pos:line="193" pos:column="21">hold<pos:position pos:line="193" pos:column="25"/></name> <operator pos:line="193" pos:column="26">!=<pos:position pos:line="193" pos:column="28"/></operator> <operator pos:line="193" pos:column="29">(<pos:position pos:line="193" pos:column="30"/></operator><name><name pos:line="193" pos:column="30">state<pos:position pos:line="193" pos:column="35"/></name><operator pos:line="193" pos:column="35">-&gt;<pos:position pos:line="193" pos:column="40"/></operator><name pos:line="193" pos:column="37">check<pos:position pos:line="193" pos:column="42"/></name></name> <operator pos:line="193" pos:column="43">&amp;<pos:position pos:line="193" pos:column="48"/></operator> <literal type="number" pos:line="193" pos:column="45">0xffff<pos:position pos:line="193" pos:column="51"/></literal><operator pos:line="193" pos:column="51">)<pos:position pos:line="193" pos:column="52"/></operator></expr>)<pos:position pos:line="193" pos:column="53"/></condition><then pos:line="193" pos:column="53"> <block pos:line="193" pos:column="54">{
                    <expr_stmt><expr><name><name pos:line="194" pos:column="21">strm<pos:position pos:line="194" pos:column="25"/></name><operator pos:line="194" pos:column="25">-&gt;<pos:position pos:line="194" pos:column="30"/></operator><name pos:line="194" pos:column="27">msg<pos:position pos:line="194" pos:column="30"/></name></name> <operator pos:line="194" pos:column="31">=<pos:position pos:line="194" pos:column="32"/></operator> <operator pos:line="194" pos:column="33">(<pos:position pos:line="194" pos:column="34"/></operator><name pos:line="194" pos:column="34">char<pos:position pos:line="194" pos:column="38"/></name> <operator pos:line="194" pos:column="39">*<pos:position pos:line="194" pos:column="40"/></operator><operator pos:line="194" pos:column="40">)<pos:position pos:line="194" pos:column="41"/></operator><literal type="string" pos:line="194" pos:column="41">"header crc mismatch"<pos:position pos:line="194" pos:column="62"/></literal></expr>;<pos:position pos:line="194" pos:column="63"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="195" pos:column="21">state<pos:position pos:line="195" pos:column="26"/></name><operator pos:line="195" pos:column="26">-&gt;<pos:position pos:line="195" pos:column="31"/></operator><name pos:line="195" pos:column="28">mode<pos:position pos:line="195" pos:column="32"/></name></name> <operator pos:line="195" pos:column="33">=<pos:position pos:line="195" pos:column="34"/></operator> <name pos:line="195" pos:column="35">BAD<pos:position pos:line="195" pos:column="38"/></name></expr>;<pos:position pos:line="195" pos:column="39"/></expr_stmt>
                    <break pos:line="196" pos:column="21">break;<pos:position pos:line="196" pos:column="27"/></break>
                }<pos:position pos:line="197" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="198" pos:column="17">INITBITS<pos:position pos:line="198" pos:column="25"/></name><argument_list pos:line="198" pos:column="25">()<pos:position pos:line="198" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="199" pos:column="14"/></block></then></if>
            <if pos:line="200" pos:column="13">if <condition pos:line="200" pos:column="16">(<expr><name><name pos:line="200" pos:column="17">state<pos:position pos:line="200" pos:column="22"/></name><operator pos:line="200" pos:column="22">-&gt;<pos:position pos:line="200" pos:column="27"/></operator><name pos:line="200" pos:column="24">head<pos:position pos:line="200" pos:column="28"/></name></name> <operator pos:line="200" pos:column="29">!=<pos:position pos:line="200" pos:column="31"/></operator> <name pos:line="200" pos:column="32">Z_NULL<pos:position pos:line="200" pos:column="38"/></name></expr>)<pos:position pos:line="200" pos:column="39"/></condition><then pos:line="200" pos:column="39"> <block pos:line="200" pos:column="40">{
                <expr_stmt><expr><name><name pos:line="201" pos:column="17">state<pos:position pos:line="201" pos:column="22"/></name><operator pos:line="201" pos:column="22">-&gt;<pos:position pos:line="201" pos:column="27"/></operator><name pos:line="201" pos:column="24">head<pos:position pos:line="201" pos:column="28"/></name><operator pos:line="201" pos:column="28">-&gt;<pos:position pos:line="201" pos:column="33"/></operator><name pos:line="201" pos:column="30">hcrc<pos:position pos:line="201" pos:column="34"/></name></name> <operator pos:line="201" pos:column="35">=<pos:position pos:line="201" pos:column="36"/></operator> <call pos:line="201" pos:column="37">(<name pos:line="201" pos:column="38">int<pos:position pos:line="201" pos:column="41"/></name>)<argument_list pos:line="201" pos:column="42">(<argument><expr><operator pos:line="201" pos:column="43">(<pos:position pos:line="201" pos:column="44"/></operator><name><name pos:line="201" pos:column="44">state<pos:position pos:line="201" pos:column="49"/></name><operator pos:line="201" pos:column="49">-&gt;<pos:position pos:line="201" pos:column="54"/></operator><name pos:line="201" pos:column="51">flags<pos:position pos:line="201" pos:column="56"/></name></name> <operator pos:line="201" pos:column="57">&gt;&gt;<pos:position pos:line="201" pos:column="62"/></operator> <literal type="number" pos:line="201" pos:column="60">9<pos:position pos:line="201" pos:column="61"/></literal><operator pos:line="201" pos:column="61">)<pos:position pos:line="201" pos:column="62"/></operator> <operator pos:line="201" pos:column="63">&amp;<pos:position pos:line="201" pos:column="68"/></operator> <literal type="number" pos:line="201" pos:column="65">1<pos:position pos:line="201" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="202" pos:column="17">state<pos:position pos:line="202" pos:column="22"/></name><operator pos:line="202" pos:column="22">-&gt;<pos:position pos:line="202" pos:column="27"/></operator><name pos:line="202" pos:column="24">head<pos:position pos:line="202" pos:column="28"/></name><operator pos:line="202" pos:column="28">-&gt;<pos:position pos:line="202" pos:column="33"/></operator><name pos:line="202" pos:column="30">done<pos:position pos:line="202" pos:column="34"/></name></name> <operator pos:line="202" pos:column="35">=<pos:position pos:line="202" pos:column="36"/></operator> <literal type="number" pos:line="202" pos:column="37">1<pos:position pos:line="202" pos:column="38"/></literal></expr>;<pos:position pos:line="202" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="203" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="204" pos:column="13">strm<pos:position pos:line="204" pos:column="17"/></name><operator pos:line="204" pos:column="17">-&gt;<pos:position pos:line="204" pos:column="22"/></operator><name pos:line="204" pos:column="19">adler<pos:position pos:line="204" pos:column="24"/></name></name> <operator pos:line="204" pos:column="25">=<pos:position pos:line="204" pos:column="26"/></operator> <name><name pos:line="204" pos:column="27">state<pos:position pos:line="204" pos:column="32"/></name><operator pos:line="204" pos:column="32">-&gt;<pos:position pos:line="204" pos:column="37"/></operator><name pos:line="204" pos:column="34">check<pos:position pos:line="204" pos:column="39"/></name></name> <operator pos:line="204" pos:column="40">=<pos:position pos:line="204" pos:column="41"/></operator> <call><name pos:line="204" pos:column="42">crc32<pos:position pos:line="204" pos:column="47"/></name><argument_list pos:line="204" pos:column="47">(<argument><expr><literal type="number" pos:line="204" pos:column="48">0L<pos:position pos:line="204" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="204" pos:column="52">Z_NULL<pos:position pos:line="204" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="204" pos:column="60">0<pos:position pos:line="204" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="205" pos:column="13">state<pos:position pos:line="205" pos:column="18"/></name><operator pos:line="205" pos:column="18">-&gt;<pos:position pos:line="205" pos:column="23"/></operator><name pos:line="205" pos:column="20">mode<pos:position pos:line="205" pos:column="24"/></name></name> <operator pos:line="205" pos:column="25">=<pos:position pos:line="205" pos:column="26"/></operator> <name pos:line="205" pos:column="27">TYPE<pos:position pos:line="205" pos:column="31"/></name></expr>;<pos:position pos:line="205" pos:column="32"/></expr_stmt>
            <break pos:line="206" pos:column="13">break;<pos:position pos:line="206" pos:column="19"/></break>
<cpp:endif pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">endif<pos:position pos:line="207" pos:column="7"/></cpp:directive></cpp:endif>
        <case pos:line="208" pos:column="9">case <expr><name pos:line="208" pos:column="14">DICTID<pos:position pos:line="208" pos:column="20"/></name></expr>:<pos:position pos:line="208" pos:column="21"/></case>
            <expr_stmt><expr><call><name pos:line="209" pos:column="13">NEEDBITS<pos:position pos:line="209" pos:column="21"/></name><argument_list pos:line="209" pos:column="21">(<argument><expr><literal type="number" pos:line="209" pos:column="22">32<pos:position pos:line="209" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="210" pos:column="13">strm<pos:position pos:line="210" pos:column="17"/></name><operator pos:line="210" pos:column="17">-&gt;<pos:position pos:line="210" pos:column="22"/></operator><name pos:line="210" pos:column="19">adler<pos:position pos:line="210" pos:column="24"/></name></name> <operator pos:line="210" pos:column="25">=<pos:position pos:line="210" pos:column="26"/></operator> <name><name pos:line="210" pos:column="27">state<pos:position pos:line="210" pos:column="32"/></name><operator pos:line="210" pos:column="32">-&gt;<pos:position pos:line="210" pos:column="37"/></operator><name pos:line="210" pos:column="34">check<pos:position pos:line="210" pos:column="39"/></name></name> <operator pos:line="210" pos:column="40">=<pos:position pos:line="210" pos:column="41"/></operator> <call><name pos:line="210" pos:column="42">REVERSE<pos:position pos:line="210" pos:column="49"/></name><argument_list pos:line="210" pos:column="49">(<argument><expr><name pos:line="210" pos:column="50">hold<pos:position pos:line="210" pos:column="54"/></name></expr></argument>)<pos:position pos:line="210" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="211" pos:column="13">INITBITS<pos:position pos:line="211" pos:column="21"/></name><argument_list pos:line="211" pos:column="21">()<pos:position pos:line="211" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="212" pos:column="13">state<pos:position pos:line="212" pos:column="18"/></name><operator pos:line="212" pos:column="18">-&gt;<pos:position pos:line="212" pos:column="23"/></operator><name pos:line="212" pos:column="20">mode<pos:position pos:line="212" pos:column="24"/></name></name> <operator pos:line="212" pos:column="25">=<pos:position pos:line="212" pos:column="26"/></operator> <name pos:line="212" pos:column="27">DICT<pos:position pos:line="212" pos:column="31"/></name></expr>;<pos:position pos:line="212" pos:column="32"/></expr_stmt>
        <case pos:line="213" pos:column="9">case <expr><name pos:line="213" pos:column="14">DICT<pos:position pos:line="213" pos:column="18"/></name></expr>:<pos:position pos:line="213" pos:column="19"/></case>
            <if pos:line="214" pos:column="13">if <condition pos:line="214" pos:column="16">(<expr><name><name pos:line="214" pos:column="17">state<pos:position pos:line="214" pos:column="22"/></name><operator pos:line="214" pos:column="22">-&gt;<pos:position pos:line="214" pos:column="27"/></operator><name pos:line="214" pos:column="24">havedict<pos:position pos:line="214" pos:column="32"/></name></name> <operator pos:line="214" pos:column="33">==<pos:position pos:line="214" pos:column="35"/></operator> <literal type="number" pos:line="214" pos:column="36">0<pos:position pos:line="214" pos:column="37"/></literal></expr>)<pos:position pos:line="214" pos:column="38"/></condition><then pos:line="214" pos:column="38"> <block pos:line="214" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="215" pos:column="17">RESTORE<pos:position pos:line="215" pos:column="24"/></name><argument_list pos:line="215" pos:column="24">()<pos:position pos:line="215" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="27"/></expr_stmt>
                <return pos:line="216" pos:column="17">return <expr><name pos:line="216" pos:column="24">Z_NEED_DICT<pos:position pos:line="216" pos:column="35"/></name></expr>;<pos:position pos:line="216" pos:column="36"/></return>
            }<pos:position pos:line="217" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="218" pos:column="13">strm<pos:position pos:line="218" pos:column="17"/></name><operator pos:line="218" pos:column="17">-&gt;<pos:position pos:line="218" pos:column="22"/></operator><name pos:line="218" pos:column="19">adler<pos:position pos:line="218" pos:column="24"/></name></name> <operator pos:line="218" pos:column="25">=<pos:position pos:line="218" pos:column="26"/></operator> <name><name pos:line="218" pos:column="27">state<pos:position pos:line="218" pos:column="32"/></name><operator pos:line="218" pos:column="32">-&gt;<pos:position pos:line="218" pos:column="37"/></operator><name pos:line="218" pos:column="34">check<pos:position pos:line="218" pos:column="39"/></name></name> <operator pos:line="218" pos:column="40">=<pos:position pos:line="218" pos:column="41"/></operator> <call><name pos:line="218" pos:column="42">adler32<pos:position pos:line="218" pos:column="49"/></name><argument_list pos:line="218" pos:column="49">(<argument><expr><literal type="number" pos:line="218" pos:column="50">0L<pos:position pos:line="218" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="218" pos:column="54">Z_NULL<pos:position pos:line="218" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="218" pos:column="62">0<pos:position pos:line="218" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="219" pos:column="13">state<pos:position pos:line="219" pos:column="18"/></name><operator pos:line="219" pos:column="18">-&gt;<pos:position pos:line="219" pos:column="23"/></operator><name pos:line="219" pos:column="20">mode<pos:position pos:line="219" pos:column="24"/></name></name> <operator pos:line="219" pos:column="25">=<pos:position pos:line="219" pos:column="26"/></operator> <name pos:line="219" pos:column="27">TYPE<pos:position pos:line="219" pos:column="31"/></name></expr>;<pos:position pos:line="219" pos:column="32"/></expr_stmt>
        <case pos:line="220" pos:column="9">case <expr><name pos:line="220" pos:column="14">TYPE<pos:position pos:line="220" pos:column="18"/></name></expr>:<pos:position pos:line="220" pos:column="19"/></case>
            <if pos:line="221" pos:column="13">if <condition pos:line="221" pos:column="16">(<expr><name pos:line="221" pos:column="17">flush<pos:position pos:line="221" pos:column="22"/></name> <operator pos:line="221" pos:column="23">==<pos:position pos:line="221" pos:column="25"/></operator> <name pos:line="221" pos:column="26">Z_BLOCK<pos:position pos:line="221" pos:column="33"/></name></expr>)<pos:position pos:line="221" pos:column="34"/></condition><then pos:line="221" pos:column="34"> <block type="pseudo"><goto pos:line="221" pos:column="35">goto <name pos:line="221" pos:column="40">inf_leave<pos:position pos:line="221" pos:column="49"/></name>;<pos:position pos:line="221" pos:column="50"/></goto></block></then></if>
        <case pos:line="222" pos:column="9">case <expr><name pos:line="222" pos:column="14">TYPEDO<pos:position pos:line="222" pos:column="20"/></name></expr>:<pos:position pos:line="222" pos:column="21"/></case>
            <if pos:line="223" pos:column="13">if <condition pos:line="223" pos:column="16">(<expr><name><name pos:line="223" pos:column="17">state<pos:position pos:line="223" pos:column="22"/></name><operator pos:line="223" pos:column="22">-&gt;<pos:position pos:line="223" pos:column="27"/></operator><name pos:line="223" pos:column="24">last<pos:position pos:line="223" pos:column="28"/></name></name></expr>)<pos:position pos:line="223" pos:column="29"/></condition><then pos:line="223" pos:column="29"> <block pos:line="223" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="224" pos:column="17">BYTEBITS<pos:position pos:line="224" pos:column="25"/></name><argument_list pos:line="224" pos:column="25">()<pos:position pos:line="224" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="225" pos:column="17">state<pos:position pos:line="225" pos:column="22"/></name><operator pos:line="225" pos:column="22">-&gt;<pos:position pos:line="225" pos:column="27"/></operator><name pos:line="225" pos:column="24">mode<pos:position pos:line="225" pos:column="28"/></name></name> <operator pos:line="225" pos:column="29">=<pos:position pos:line="225" pos:column="30"/></operator> <name pos:line="225" pos:column="31">CHECK<pos:position pos:line="225" pos:column="36"/></name></expr>;<pos:position pos:line="225" pos:column="37"/></expr_stmt>
                <break pos:line="226" pos:column="17">break;<pos:position pos:line="226" pos:column="23"/></break>
            }<pos:position pos:line="227" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="228" pos:column="13">NEEDBITS<pos:position pos:line="228" pos:column="21"/></name><argument_list pos:line="228" pos:column="21">(<argument><expr><literal type="number" pos:line="228" pos:column="22">3<pos:position pos:line="228" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="229" pos:column="13">state<pos:position pos:line="229" pos:column="18"/></name><operator pos:line="229" pos:column="18">-&gt;<pos:position pos:line="229" pos:column="23"/></operator><name pos:line="229" pos:column="20">last<pos:position pos:line="229" pos:column="24"/></name></name> <operator pos:line="229" pos:column="25">=<pos:position pos:line="229" pos:column="26"/></operator> <call><name pos:line="229" pos:column="27">BITS<pos:position pos:line="229" pos:column="31"/></name><argument_list pos:line="229" pos:column="31">(<argument><expr><literal type="number" pos:line="229" pos:column="32">1<pos:position pos:line="229" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="230" pos:column="13">DROPBITS<pos:position pos:line="230" pos:column="21"/></name><argument_list pos:line="230" pos:column="21">(<argument><expr><literal type="number" pos:line="230" pos:column="22">1<pos:position pos:line="230" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="25"/></expr_stmt>
            <switch pos:line="231" pos:column="13">switch <condition pos:line="231" pos:column="20">(<expr><call><name pos:line="231" pos:column="21">BITS<pos:position pos:line="231" pos:column="25"/></name><argument_list pos:line="231" pos:column="25">(<argument><expr><literal type="number" pos:line="231" pos:column="26">2<pos:position pos:line="231" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="231" pos:column="29"/></condition> <block pos:line="231" pos:column="30">{
            <case pos:line="232" pos:column="13">case <expr><literal type="number" pos:line="232" pos:column="18">0<pos:position pos:line="232" pos:column="19"/></literal></expr>:<pos:position pos:line="232" pos:column="20"/></case>                             <comment type="block" pos:line="232" pos:column="49">/* stored block */</comment>
                <expr_stmt><expr><call><name pos:line="233" pos:column="17">Tracev<pos:position pos:line="233" pos:column="23"/></name><argument_list pos:line="233" pos:column="23">(<argument><expr><operator pos:line="233" pos:column="24">(<pos:position pos:line="233" pos:column="25"/></operator><name pos:line="233" pos:column="25">stderr<pos:position pos:line="233" pos:column="31"/></name><operator pos:line="233" pos:column="31">,<pos:position pos:line="233" pos:column="32"/></operator> <literal type="string" pos:line="233" pos:column="33">"inflate:     stored block%s\n"<pos:position pos:line="233" pos:column="64"/></literal><operator pos:line="233" pos:column="64">,<pos:position pos:line="233" pos:column="65"/></operator>
                        <ternary><condition><expr><name><name pos:line="234" pos:column="25">state<pos:position pos:line="234" pos:column="30"/></name><operator pos:line="234" pos:column="30">-&gt;<pos:position pos:line="234" pos:column="35"/></operator><name pos:line="234" pos:column="32">last<pos:position pos:line="234" pos:column="36"/></name></name></expr> ?<pos:position pos:line="234" pos:column="38"/></condition><then pos:line="234" pos:column="38"> <expr><literal type="string" pos:line="234" pos:column="39">" (last)"<pos:position pos:line="234" pos:column="48"/></literal></expr> <pos:position pos:line="234" pos:column="49"/></then><else pos:line="234" pos:column="49">: <expr><literal type="string" pos:line="234" pos:column="51">""<pos:position pos:line="234" pos:column="53"/></literal></expr></else></ternary><operator pos:line="234" pos:column="53">)<pos:position pos:line="234" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="234" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="235" pos:column="17">state<pos:position pos:line="235" pos:column="22"/></name><operator pos:line="235" pos:column="22">-&gt;<pos:position pos:line="235" pos:column="27"/></operator><name pos:line="235" pos:column="24">mode<pos:position pos:line="235" pos:column="28"/></name></name> <operator pos:line="235" pos:column="29">=<pos:position pos:line="235" pos:column="30"/></operator> <name pos:line="235" pos:column="31">STORED<pos:position pos:line="235" pos:column="37"/></name></expr>;<pos:position pos:line="235" pos:column="38"/></expr_stmt>
                <break pos:line="236" pos:column="17">break;<pos:position pos:line="236" pos:column="23"/></break>
            <case pos:line="237" pos:column="13">case <expr><literal type="number" pos:line="237" pos:column="18">1<pos:position pos:line="237" pos:column="19"/></literal></expr>:<pos:position pos:line="237" pos:column="20"/></case>                             <comment type="block" pos:line="237" pos:column="49">/* fixed block */</comment>
                <expr_stmt><expr><call><name pos:line="238" pos:column="17">fixedtables<pos:position pos:line="238" pos:column="28"/></name><argument_list pos:line="238" pos:column="28">(<argument><expr><name pos:line="238" pos:column="29">state<pos:position pos:line="238" pos:column="34"/></name></expr></argument>)<pos:position pos:line="238" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="239" pos:column="17">Tracev<pos:position pos:line="239" pos:column="23"/></name><argument_list pos:line="239" pos:column="23">(<argument><expr><operator pos:line="239" pos:column="24">(<pos:position pos:line="239" pos:column="25"/></operator><name pos:line="239" pos:column="25">stderr<pos:position pos:line="239" pos:column="31"/></name><operator pos:line="239" pos:column="31">,<pos:position pos:line="239" pos:column="32"/></operator> <literal type="string" pos:line="239" pos:column="33">"inflate:     fixed codes block%s\n"<pos:position pos:line="239" pos:column="69"/></literal><operator pos:line="239" pos:column="69">,<pos:position pos:line="239" pos:column="70"/></operator>
                        <ternary><condition><expr><name><name pos:line="240" pos:column="25">state<pos:position pos:line="240" pos:column="30"/></name><operator pos:line="240" pos:column="30">-&gt;<pos:position pos:line="240" pos:column="35"/></operator><name pos:line="240" pos:column="32">last<pos:position pos:line="240" pos:column="36"/></name></name></expr> ?<pos:position pos:line="240" pos:column="38"/></condition><then pos:line="240" pos:column="38"> <expr><literal type="string" pos:line="240" pos:column="39">" (last)"<pos:position pos:line="240" pos:column="48"/></literal></expr> <pos:position pos:line="240" pos:column="49"/></then><else pos:line="240" pos:column="49">: <expr><literal type="string" pos:line="240" pos:column="51">""<pos:position pos:line="240" pos:column="53"/></literal></expr></else></ternary><operator pos:line="240" pos:column="53">)<pos:position pos:line="240" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="240" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="241" pos:column="17">state<pos:position pos:line="241" pos:column="22"/></name><operator pos:line="241" pos:column="22">-&gt;<pos:position pos:line="241" pos:column="27"/></operator><name pos:line="241" pos:column="24">mode<pos:position pos:line="241" pos:column="28"/></name></name> <operator pos:line="241" pos:column="29">=<pos:position pos:line="241" pos:column="30"/></operator> <name pos:line="241" pos:column="31">LEN<pos:position pos:line="241" pos:column="34"/></name></expr>;<pos:position pos:line="241" pos:column="35"/></expr_stmt>              <comment type="block" pos:line="241" pos:column="49">/* decode codes */</comment>
                <break pos:line="242" pos:column="17">break;<pos:position pos:line="242" pos:column="23"/></break>
            <case pos:line="243" pos:column="13">case <expr><literal type="number" pos:line="243" pos:column="18">2<pos:position pos:line="243" pos:column="19"/></literal></expr>:<pos:position pos:line="243" pos:column="20"/></case>                             <comment type="block" pos:line="243" pos:column="49">/* dynamic block */</comment>
                <expr_stmt><expr><call><name pos:line="244" pos:column="17">Tracev<pos:position pos:line="244" pos:column="23"/></name><argument_list pos:line="244" pos:column="23">(<argument><expr><operator pos:line="244" pos:column="24">(<pos:position pos:line="244" pos:column="25"/></operator><name pos:line="244" pos:column="25">stderr<pos:position pos:line="244" pos:column="31"/></name><operator pos:line="244" pos:column="31">,<pos:position pos:line="244" pos:column="32"/></operator> <literal type="string" pos:line="244" pos:column="33">"inflate:     dynamic codes block%s\n"<pos:position pos:line="244" pos:column="71"/></literal><operator pos:line="244" pos:column="71">,<pos:position pos:line="244" pos:column="72"/></operator>
                        <ternary><condition><expr><name><name pos:line="245" pos:column="25">state<pos:position pos:line="245" pos:column="30"/></name><operator pos:line="245" pos:column="30">-&gt;<pos:position pos:line="245" pos:column="35"/></operator><name pos:line="245" pos:column="32">last<pos:position pos:line="245" pos:column="36"/></name></name></expr> ?<pos:position pos:line="245" pos:column="38"/></condition><then pos:line="245" pos:column="38"> <expr><literal type="string" pos:line="245" pos:column="39">" (last)"<pos:position pos:line="245" pos:column="48"/></literal></expr> <pos:position pos:line="245" pos:column="49"/></then><else pos:line="245" pos:column="49">: <expr><literal type="string" pos:line="245" pos:column="51">""<pos:position pos:line="245" pos:column="53"/></literal></expr></else></ternary><operator pos:line="245" pos:column="53">)<pos:position pos:line="245" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="245" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="246" pos:column="17">state<pos:position pos:line="246" pos:column="22"/></name><operator pos:line="246" pos:column="22">-&gt;<pos:position pos:line="246" pos:column="27"/></operator><name pos:line="246" pos:column="24">mode<pos:position pos:line="246" pos:column="28"/></name></name> <operator pos:line="246" pos:column="29">=<pos:position pos:line="246" pos:column="30"/></operator> <name pos:line="246" pos:column="31">TABLE<pos:position pos:line="246" pos:column="36"/></name></expr>;<pos:position pos:line="246" pos:column="37"/></expr_stmt>
                <break pos:line="247" pos:column="17">break;<pos:position pos:line="247" pos:column="23"/></break>
            <case pos:line="248" pos:column="13">case <expr><literal type="number" pos:line="248" pos:column="18">3<pos:position pos:line="248" pos:column="19"/></literal></expr>:<pos:position pos:line="248" pos:column="20"/></case>
                <expr_stmt><expr><name><name pos:line="249" pos:column="17">strm<pos:position pos:line="249" pos:column="21"/></name><operator pos:line="249" pos:column="21">-&gt;<pos:position pos:line="249" pos:column="26"/></operator><name pos:line="249" pos:column="23">msg<pos:position pos:line="249" pos:column="26"/></name></name> <operator pos:line="249" pos:column="27">=<pos:position pos:line="249" pos:column="28"/></operator> <operator pos:line="249" pos:column="29">(<pos:position pos:line="249" pos:column="30"/></operator><name pos:line="249" pos:column="30">char<pos:position pos:line="249" pos:column="34"/></name> <operator pos:line="249" pos:column="35">*<pos:position pos:line="249" pos:column="36"/></operator><operator pos:line="249" pos:column="36">)<pos:position pos:line="249" pos:column="37"/></operator><literal type="string" pos:line="249" pos:column="37">"invalid block type"<pos:position pos:line="249" pos:column="57"/></literal></expr>;<pos:position pos:line="249" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="250" pos:column="17">state<pos:position pos:line="250" pos:column="22"/></name><operator pos:line="250" pos:column="22">-&gt;<pos:position pos:line="250" pos:column="27"/></operator><name pos:line="250" pos:column="24">mode<pos:position pos:line="250" pos:column="28"/></name></name> <operator pos:line="250" pos:column="29">=<pos:position pos:line="250" pos:column="30"/></operator> <name pos:line="250" pos:column="31">BAD<pos:position pos:line="250" pos:column="34"/></name></expr>;<pos:position pos:line="250" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="251" pos:column="14"/></block></switch>
            <expr_stmt><expr><call><name pos:line="252" pos:column="13">DROPBITS<pos:position pos:line="252" pos:column="21"/></name><argument_list pos:line="252" pos:column="21">(<argument><expr><literal type="number" pos:line="252" pos:column="22">2<pos:position pos:line="252" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="252" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="25"/></expr_stmt>
            <break pos:line="253" pos:column="13">break;<pos:position pos:line="253" pos:column="19"/></break>
        <case pos:line="254" pos:column="9">case <expr><name pos:line="254" pos:column="14">STORED<pos:position pos:line="254" pos:column="20"/></name></expr>:<pos:position pos:line="254" pos:column="21"/></case>
            <expr_stmt><expr><call><name pos:line="255" pos:column="13">BYTEBITS<pos:position pos:line="255" pos:column="21"/></name><argument_list pos:line="255" pos:column="21">()<pos:position pos:line="255" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="24"/></expr_stmt>                         <comment type="block" pos:line="255" pos:column="49">/* go to byte boundary */</comment>
            <expr_stmt><expr><call><name pos:line="256" pos:column="13">NEEDBITS<pos:position pos:line="256" pos:column="21"/></name><argument_list pos:line="256" pos:column="21">(<argument><expr><literal type="number" pos:line="256" pos:column="22">32<pos:position pos:line="256" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="26"/></expr_stmt>
            <if pos:line="257" pos:column="13">if <condition pos:line="257" pos:column="16">(<expr><operator pos:line="257" pos:column="17">(<pos:position pos:line="257" pos:column="18"/></operator><name pos:line="257" pos:column="18">hold<pos:position pos:line="257" pos:column="22"/></name> <operator pos:line="257" pos:column="23">&amp;<pos:position pos:line="257" pos:column="28"/></operator> <literal type="number" pos:line="257" pos:column="25">0xffff<pos:position pos:line="257" pos:column="31"/></literal><operator pos:line="257" pos:column="31">)<pos:position pos:line="257" pos:column="32"/></operator> <operator pos:line="257" pos:column="33">!=<pos:position pos:line="257" pos:column="35"/></operator> <operator pos:line="257" pos:column="36">(<pos:position pos:line="257" pos:column="37"/></operator><operator pos:line="257" pos:column="37">(<pos:position pos:line="257" pos:column="38"/></operator><name pos:line="257" pos:column="38">hold<pos:position pos:line="257" pos:column="42"/></name> <operator pos:line="257" pos:column="43">&gt;&gt;<pos:position pos:line="257" pos:column="48"/></operator> <literal type="number" pos:line="257" pos:column="46">16<pos:position pos:line="257" pos:column="48"/></literal><operator pos:line="257" pos:column="48">)<pos:position pos:line="257" pos:column="49"/></operator> <operator pos:line="257" pos:column="50">^<pos:position pos:line="257" pos:column="51"/></operator> <literal type="number" pos:line="257" pos:column="52">0xffff<pos:position pos:line="257" pos:column="58"/></literal><operator pos:line="257" pos:column="58">)<pos:position pos:line="257" pos:column="59"/></operator></expr>)<pos:position pos:line="257" pos:column="60"/></condition><then pos:line="257" pos:column="60"> <block pos:line="257" pos:column="61">{
                <expr_stmt><expr><name><name pos:line="258" pos:column="17">strm<pos:position pos:line="258" pos:column="21"/></name><operator pos:line="258" pos:column="21">-&gt;<pos:position pos:line="258" pos:column="26"/></operator><name pos:line="258" pos:column="23">msg<pos:position pos:line="258" pos:column="26"/></name></name> <operator pos:line="258" pos:column="27">=<pos:position pos:line="258" pos:column="28"/></operator> <operator pos:line="258" pos:column="29">(<pos:position pos:line="258" pos:column="30"/></operator><name pos:line="258" pos:column="30">char<pos:position pos:line="258" pos:column="34"/></name> <operator pos:line="258" pos:column="35">*<pos:position pos:line="258" pos:column="36"/></operator><operator pos:line="258" pos:column="36">)<pos:position pos:line="258" pos:column="37"/></operator><literal type="string" pos:line="258" pos:column="37">"invalid stored block lengths"<pos:position pos:line="258" pos:column="67"/></literal></expr>;<pos:position pos:line="258" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="259" pos:column="17">state<pos:position pos:line="259" pos:column="22"/></name><operator pos:line="259" pos:column="22">-&gt;<pos:position pos:line="259" pos:column="27"/></operator><name pos:line="259" pos:column="24">mode<pos:position pos:line="259" pos:column="28"/></name></name> <operator pos:line="259" pos:column="29">=<pos:position pos:line="259" pos:column="30"/></operator> <name pos:line="259" pos:column="31">BAD<pos:position pos:line="259" pos:column="34"/></name></expr>;<pos:position pos:line="259" pos:column="35"/></expr_stmt>
                <break pos:line="260" pos:column="17">break;<pos:position pos:line="260" pos:column="23"/></break>
            }<pos:position pos:line="261" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="262" pos:column="13">state<pos:position pos:line="262" pos:column="18"/></name><operator pos:line="262" pos:column="18">-&gt;<pos:position pos:line="262" pos:column="23"/></operator><name pos:line="262" pos:column="20">length<pos:position pos:line="262" pos:column="26"/></name></name> <operator pos:line="262" pos:column="27">=<pos:position pos:line="262" pos:column="28"/></operator> <operator pos:line="262" pos:column="29">(<pos:position pos:line="262" pos:column="30"/></operator><name pos:line="262" pos:column="30">unsigned<pos:position pos:line="262" pos:column="38"/></name><operator pos:line="262" pos:column="38">)<pos:position pos:line="262" pos:column="39"/></operator><name pos:line="262" pos:column="39">hold<pos:position pos:line="262" pos:column="43"/></name> <operator pos:line="262" pos:column="44">&amp;<pos:position pos:line="262" pos:column="49"/></operator> <literal type="number" pos:line="262" pos:column="46">0xffff<pos:position pos:line="262" pos:column="52"/></literal></expr>;<pos:position pos:line="262" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="263" pos:column="13">Tracev<pos:position pos:line="263" pos:column="19"/></name><argument_list pos:line="263" pos:column="19">(<argument><expr><operator pos:line="263" pos:column="20">(<pos:position pos:line="263" pos:column="21"/></operator><name pos:line="263" pos:column="21">stderr<pos:position pos:line="263" pos:column="27"/></name><operator pos:line="263" pos:column="27">,<pos:position pos:line="263" pos:column="28"/></operator> <literal type="string" pos:line="263" pos:column="29">"inflate:       stored length %u\n"<pos:position pos:line="263" pos:column="64"/></literal><operator pos:line="263" pos:column="64">,<pos:position pos:line="263" pos:column="65"/></operator>
                    <name><name pos:line="264" pos:column="21">state<pos:position pos:line="264" pos:column="26"/></name><operator pos:line="264" pos:column="26">-&gt;<pos:position pos:line="264" pos:column="31"/></operator><name pos:line="264" pos:column="28">length<pos:position pos:line="264" pos:column="34"/></name></name><operator pos:line="264" pos:column="34">)<pos:position pos:line="264" pos:column="35"/></operator></expr></argument>)<pos:position pos:line="264" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="265" pos:column="13">INITBITS<pos:position pos:line="265" pos:column="21"/></name><argument_list pos:line="265" pos:column="21">()<pos:position pos:line="265" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="266" pos:column="13">state<pos:position pos:line="266" pos:column="18"/></name><operator pos:line="266" pos:column="18">-&gt;<pos:position pos:line="266" pos:column="23"/></operator><name pos:line="266" pos:column="20">mode<pos:position pos:line="266" pos:column="24"/></name></name> <operator pos:line="266" pos:column="25">=<pos:position pos:line="266" pos:column="26"/></operator> <name pos:line="266" pos:column="27">COPY<pos:position pos:line="266" pos:column="31"/></name></expr>;<pos:position pos:line="266" pos:column="32"/></expr_stmt>
        <case pos:line="267" pos:column="9">case <expr><name pos:line="267" pos:column="14">COPY<pos:position pos:line="267" pos:column="18"/></name></expr>:<pos:position pos:line="267" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="268" pos:column="13">copy<pos:position pos:line="268" pos:column="17"/></name> <operator pos:line="268" pos:column="18">=<pos:position pos:line="268" pos:column="19"/></operator> <name><name pos:line="268" pos:column="20">state<pos:position pos:line="268" pos:column="25"/></name><operator pos:line="268" pos:column="25">-&gt;<pos:position pos:line="268" pos:column="30"/></operator><name pos:line="268" pos:column="27">length<pos:position pos:line="268" pos:column="33"/></name></name></expr>;<pos:position pos:line="268" pos:column="34"/></expr_stmt>
            <if pos:line="269" pos:column="13">if <condition pos:line="269" pos:column="16">(<expr><name pos:line="269" pos:column="17">copy<pos:position pos:line="269" pos:column="21"/></name></expr>)<pos:position pos:line="269" pos:column="22"/></condition><then pos:line="269" pos:column="22"> <block pos:line="269" pos:column="23">{
                <if pos:line="270" pos:column="17">if <condition pos:line="270" pos:column="20">(<expr><name pos:line="270" pos:column="21">copy<pos:position pos:line="270" pos:column="25"/></name> <operator pos:line="270" pos:column="26">&gt;<pos:position pos:line="270" pos:column="30"/></operator> <name pos:line="270" pos:column="28">have<pos:position pos:line="270" pos:column="32"/></name></expr>)<pos:position pos:line="270" pos:column="33"/></condition><then pos:line="270" pos:column="33"> <block type="pseudo"><expr_stmt><expr><name pos:line="270" pos:column="34">copy<pos:position pos:line="270" pos:column="38"/></name> <operator pos:line="270" pos:column="39">=<pos:position pos:line="270" pos:column="40"/></operator> <name pos:line="270" pos:column="41">have<pos:position pos:line="270" pos:column="45"/></name></expr>;<pos:position pos:line="270" pos:column="46"/></expr_stmt></block></then></if>
                <if pos:line="271" pos:column="17">if <condition pos:line="271" pos:column="20">(<expr><name pos:line="271" pos:column="21">copy<pos:position pos:line="271" pos:column="25"/></name> <operator pos:line="271" pos:column="26">&gt;<pos:position pos:line="271" pos:column="30"/></operator> <name pos:line="271" pos:column="28">left<pos:position pos:line="271" pos:column="32"/></name></expr>)<pos:position pos:line="271" pos:column="33"/></condition><then pos:line="271" pos:column="33"> <block type="pseudo"><expr_stmt><expr><name pos:line="271" pos:column="34">copy<pos:position pos:line="271" pos:column="38"/></name> <operator pos:line="271" pos:column="39">=<pos:position pos:line="271" pos:column="40"/></operator> <name pos:line="271" pos:column="41">left<pos:position pos:line="271" pos:column="45"/></name></expr>;<pos:position pos:line="271" pos:column="46"/></expr_stmt></block></then></if>
                <if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><name pos:line="272" pos:column="21">copy<pos:position pos:line="272" pos:column="25"/></name> <operator pos:line="272" pos:column="26">==<pos:position pos:line="272" pos:column="28"/></operator> <literal type="number" pos:line="272" pos:column="29">0<pos:position pos:line="272" pos:column="30"/></literal></expr>)<pos:position pos:line="272" pos:column="31"/></condition><then pos:line="272" pos:column="31"> <block type="pseudo"><goto pos:line="272" pos:column="32">goto <name pos:line="272" pos:column="37">inf_leave<pos:position pos:line="272" pos:column="46"/></name>;<pos:position pos:line="272" pos:column="47"/></goto></block></then></if>
                <expr_stmt><expr><call><name pos:line="273" pos:column="17">zmemcpy<pos:position pos:line="273" pos:column="24"/></name><argument_list pos:line="273" pos:column="24">(<argument><expr><name pos:line="273" pos:column="25">put<pos:position pos:line="273" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="30">next<pos:position pos:line="273" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="36">copy<pos:position pos:line="273" pos:column="40"/></name></expr></argument>)<pos:position pos:line="273" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="274" pos:column="17">have<pos:position pos:line="274" pos:column="21"/></name> <operator pos:line="274" pos:column="22">-=<pos:position pos:line="274" pos:column="24"/></operator> <name pos:line="274" pos:column="25">copy<pos:position pos:line="274" pos:column="29"/></name></expr>;<pos:position pos:line="274" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="275" pos:column="17">next<pos:position pos:line="275" pos:column="21"/></name> <operator pos:line="275" pos:column="22">+=<pos:position pos:line="275" pos:column="24"/></operator> <name pos:line="275" pos:column="25">copy<pos:position pos:line="275" pos:column="29"/></name></expr>;<pos:position pos:line="275" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="276" pos:column="17">left<pos:position pos:line="276" pos:column="21"/></name> <operator pos:line="276" pos:column="22">-=<pos:position pos:line="276" pos:column="24"/></operator> <name pos:line="276" pos:column="25">copy<pos:position pos:line="276" pos:column="29"/></name></expr>;<pos:position pos:line="276" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="277" pos:column="17">put<pos:position pos:line="277" pos:column="20"/></name> <operator pos:line="277" pos:column="21">+=<pos:position pos:line="277" pos:column="23"/></operator> <name pos:line="277" pos:column="24">copy<pos:position pos:line="277" pos:column="28"/></name></expr>;<pos:position pos:line="277" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="278" pos:column="17">state<pos:position pos:line="278" pos:column="22"/></name><operator pos:line="278" pos:column="22">-&gt;<pos:position pos:line="278" pos:column="27"/></operator><name pos:line="278" pos:column="24">length<pos:position pos:line="278" pos:column="30"/></name></name> <operator pos:line="278" pos:column="31">-=<pos:position pos:line="278" pos:column="33"/></operator> <name pos:line="278" pos:column="34">copy<pos:position pos:line="278" pos:column="38"/></name></expr>;<pos:position pos:line="278" pos:column="39"/></expr_stmt>
                <break pos:line="279" pos:column="17">break;<pos:position pos:line="279" pos:column="23"/></break>
            }<pos:position pos:line="280" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="281" pos:column="13">Tracev<pos:position pos:line="281" pos:column="19"/></name><argument_list pos:line="281" pos:column="19">(<argument><expr><operator pos:line="281" pos:column="20">(<pos:position pos:line="281" pos:column="21"/></operator><name pos:line="281" pos:column="21">stderr<pos:position pos:line="281" pos:column="27"/></name><operator pos:line="281" pos:column="27">,<pos:position pos:line="281" pos:column="28"/></operator> <literal type="string" pos:line="281" pos:column="29">"inflate:       stored end\n"<pos:position pos:line="281" pos:column="58"/></literal><operator pos:line="281" pos:column="58">)<pos:position pos:line="281" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="281" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="282" pos:column="13">state<pos:position pos:line="282" pos:column="18"/></name><operator pos:line="282" pos:column="18">-&gt;<pos:position pos:line="282" pos:column="23"/></operator><name pos:line="282" pos:column="20">mode<pos:position pos:line="282" pos:column="24"/></name></name> <operator pos:line="282" pos:column="25">=<pos:position pos:line="282" pos:column="26"/></operator> <name pos:line="282" pos:column="27">TYPE<pos:position pos:line="282" pos:column="31"/></name></expr>;<pos:position pos:line="282" pos:column="32"/></expr_stmt>
            <break pos:line="283" pos:column="13">break;<pos:position pos:line="283" pos:column="19"/></break>
        <case pos:line="284" pos:column="9">case <expr><name pos:line="284" pos:column="14">TABLE<pos:position pos:line="284" pos:column="19"/></name></expr>:<pos:position pos:line="284" pos:column="20"/></case>
            <expr_stmt><expr><call><name pos:line="285" pos:column="13">NEEDBITS<pos:position pos:line="285" pos:column="21"/></name><argument_list pos:line="285" pos:column="21">(<argument><expr><literal type="number" pos:line="285" pos:column="22">14<pos:position pos:line="285" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="286" pos:column="13">state<pos:position pos:line="286" pos:column="18"/></name><operator pos:line="286" pos:column="18">-&gt;<pos:position pos:line="286" pos:column="23"/></operator><name pos:line="286" pos:column="20">nlen<pos:position pos:line="286" pos:column="24"/></name></name> <operator pos:line="286" pos:column="25">=<pos:position pos:line="286" pos:column="26"/></operator> <call><name pos:line="286" pos:column="27">BITS<pos:position pos:line="286" pos:column="31"/></name><argument_list pos:line="286" pos:column="31">(<argument><expr><literal type="number" pos:line="286" pos:column="32">5<pos:position pos:line="286" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="34"/></argument_list></call> <operator pos:line="286" pos:column="35">+<pos:position pos:line="286" pos:column="36"/></operator> <literal type="number" pos:line="286" pos:column="37">257<pos:position pos:line="286" pos:column="40"/></literal></expr>;<pos:position pos:line="286" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="287" pos:column="13">DROPBITS<pos:position pos:line="287" pos:column="21"/></name><argument_list pos:line="287" pos:column="21">(<argument><expr><literal type="number" pos:line="287" pos:column="22">5<pos:position pos:line="287" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="287" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="288" pos:column="13">state<pos:position pos:line="288" pos:column="18"/></name><operator pos:line="288" pos:column="18">-&gt;<pos:position pos:line="288" pos:column="23"/></operator><name pos:line="288" pos:column="20">ndist<pos:position pos:line="288" pos:column="25"/></name></name> <operator pos:line="288" pos:column="26">=<pos:position pos:line="288" pos:column="27"/></operator> <call><name pos:line="288" pos:column="28">BITS<pos:position pos:line="288" pos:column="32"/></name><argument_list pos:line="288" pos:column="32">(<argument><expr><literal type="number" pos:line="288" pos:column="33">5<pos:position pos:line="288" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="35"/></argument_list></call> <operator pos:line="288" pos:column="36">+<pos:position pos:line="288" pos:column="37"/></operator> <literal type="number" pos:line="288" pos:column="38">1<pos:position pos:line="288" pos:column="39"/></literal></expr>;<pos:position pos:line="288" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="289" pos:column="13">DROPBITS<pos:position pos:line="289" pos:column="21"/></name><argument_list pos:line="289" pos:column="21">(<argument><expr><literal type="number" pos:line="289" pos:column="22">5<pos:position pos:line="289" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="290" pos:column="13">state<pos:position pos:line="290" pos:column="18"/></name><operator pos:line="290" pos:column="18">-&gt;<pos:position pos:line="290" pos:column="23"/></operator><name pos:line="290" pos:column="20">ncode<pos:position pos:line="290" pos:column="25"/></name></name> <operator pos:line="290" pos:column="26">=<pos:position pos:line="290" pos:column="27"/></operator> <call><name pos:line="290" pos:column="28">BITS<pos:position pos:line="290" pos:column="32"/></name><argument_list pos:line="290" pos:column="32">(<argument><expr><literal type="number" pos:line="290" pos:column="33">4<pos:position pos:line="290" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="35"/></argument_list></call> <operator pos:line="290" pos:column="36">+<pos:position pos:line="290" pos:column="37"/></operator> <literal type="number" pos:line="290" pos:column="38">4<pos:position pos:line="290" pos:column="39"/></literal></expr>;<pos:position pos:line="290" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="291" pos:column="13">DROPBITS<pos:position pos:line="291" pos:column="21"/></name><argument_list pos:line="291" pos:column="21">(<argument><expr><literal type="number" pos:line="291" pos:column="22">4<pos:position pos:line="291" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="25"/></expr_stmt>
<cpp:ifndef pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">ifndef<pos:position pos:line="292" pos:column="8"/></cpp:directive> <name pos:line="292" pos:column="9">PKZIP_BUG_WORKAROUND<pos:position pos:line="292" pos:column="29"/></name></cpp:ifndef>
            <if pos:line="293" pos:column="13">if <condition pos:line="293" pos:column="16">(<expr><name><name pos:line="293" pos:column="17">state<pos:position pos:line="293" pos:column="22"/></name><operator pos:line="293" pos:column="22">-&gt;<pos:position pos:line="293" pos:column="27"/></operator><name pos:line="293" pos:column="24">nlen<pos:position pos:line="293" pos:column="28"/></name></name> <operator pos:line="293" pos:column="29">&gt;<pos:position pos:line="293" pos:column="33"/></operator> <literal type="number" pos:line="293" pos:column="31">286<pos:position pos:line="293" pos:column="34"/></literal> <operator pos:line="293" pos:column="35">||<pos:position pos:line="293" pos:column="37"/></operator> <name><name pos:line="293" pos:column="38">state<pos:position pos:line="293" pos:column="43"/></name><operator pos:line="293" pos:column="43">-&gt;<pos:position pos:line="293" pos:column="48"/></operator><name pos:line="293" pos:column="45">ndist<pos:position pos:line="293" pos:column="50"/></name></name> <operator pos:line="293" pos:column="51">&gt;<pos:position pos:line="293" pos:column="55"/></operator> <literal type="number" pos:line="293" pos:column="53">30<pos:position pos:line="293" pos:column="55"/></literal></expr>)<pos:position pos:line="293" pos:column="56"/></condition><then pos:line="293" pos:column="56"> <block pos:line="293" pos:column="57">{
                <expr_stmt><expr><name><name pos:line="294" pos:column="17">strm<pos:position pos:line="294" pos:column="21"/></name><operator pos:line="294" pos:column="21">-&gt;<pos:position pos:line="294" pos:column="26"/></operator><name pos:line="294" pos:column="23">msg<pos:position pos:line="294" pos:column="26"/></name></name> <operator pos:line="294" pos:column="27">=<pos:position pos:line="294" pos:column="28"/></operator> <operator pos:line="294" pos:column="29">(<pos:position pos:line="294" pos:column="30"/></operator><name pos:line="294" pos:column="30">char<pos:position pos:line="294" pos:column="34"/></name> <operator pos:line="294" pos:column="35">*<pos:position pos:line="294" pos:column="36"/></operator><operator pos:line="294" pos:column="36">)<pos:position pos:line="294" pos:column="37"/></operator><literal type="string" pos:line="294" pos:column="37">"too many length or distance symbols"<pos:position pos:line="294" pos:column="74"/></literal></expr>;<pos:position pos:line="294" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="295" pos:column="17">state<pos:position pos:line="295" pos:column="22"/></name><operator pos:line="295" pos:column="22">-&gt;<pos:position pos:line="295" pos:column="27"/></operator><name pos:line="295" pos:column="24">mode<pos:position pos:line="295" pos:column="28"/></name></name> <operator pos:line="295" pos:column="29">=<pos:position pos:line="295" pos:column="30"/></operator> <name pos:line="295" pos:column="31">BAD<pos:position pos:line="295" pos:column="34"/></name></expr>;<pos:position pos:line="295" pos:column="35"/></expr_stmt>
                <break pos:line="296" pos:column="17">break;<pos:position pos:line="296" pos:column="23"/></break>
            }<pos:position pos:line="297" pos:column="14"/></block></then></if>
<cpp:endif pos:line="298" pos:column="1">#<cpp:directive pos:line="298" pos:column="2">endif<pos:position pos:line="298" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="299" pos:column="13">Tracev<pos:position pos:line="299" pos:column="19"/></name><argument_list pos:line="299" pos:column="19">(<argument><expr><operator pos:line="299" pos:column="20">(<pos:position pos:line="299" pos:column="21"/></operator><name pos:line="299" pos:column="21">stderr<pos:position pos:line="299" pos:column="27"/></name><operator pos:line="299" pos:column="27">,<pos:position pos:line="299" pos:column="28"/></operator> <literal type="string" pos:line="299" pos:column="29">"inflate:       table sizes ok\n"<pos:position pos:line="299" pos:column="62"/></literal><operator pos:line="299" pos:column="62">)<pos:position pos:line="299" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="299" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="300" pos:column="13">state<pos:position pos:line="300" pos:column="18"/></name><operator pos:line="300" pos:column="18">-&gt;<pos:position pos:line="300" pos:column="23"/></operator><name pos:line="300" pos:column="20">have<pos:position pos:line="300" pos:column="24"/></name></name> <operator pos:line="300" pos:column="25">=<pos:position pos:line="300" pos:column="26"/></operator> <literal type="number" pos:line="300" pos:column="27">0<pos:position pos:line="300" pos:column="28"/></literal></expr>;<pos:position pos:line="300" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="301" pos:column="13">state<pos:position pos:line="301" pos:column="18"/></name><operator pos:line="301" pos:column="18">-&gt;<pos:position pos:line="301" pos:column="23"/></operator><name pos:line="301" pos:column="20">mode<pos:position pos:line="301" pos:column="24"/></name></name> <operator pos:line="301" pos:column="25">=<pos:position pos:line="301" pos:column="26"/></operator> <name pos:line="301" pos:column="27">LENLENS<pos:position pos:line="301" pos:column="34"/></name></expr>;<pos:position pos:line="301" pos:column="35"/></expr_stmt>
        <case pos:line="302" pos:column="9">case <expr><name pos:line="302" pos:column="14">LENLENS<pos:position pos:line="302" pos:column="21"/></name></expr>:<pos:position pos:line="302" pos:column="22"/></case>
            <while pos:line="303" pos:column="13">while <condition pos:line="303" pos:column="19">(<expr><name><name pos:line="303" pos:column="20">state<pos:position pos:line="303" pos:column="25"/></name><operator pos:line="303" pos:column="25">-&gt;<pos:position pos:line="303" pos:column="30"/></operator><name pos:line="303" pos:column="27">have<pos:position pos:line="303" pos:column="31"/></name></name> <operator pos:line="303" pos:column="32">&lt;<pos:position pos:line="303" pos:column="36"/></operator> <name><name pos:line="303" pos:column="34">state<pos:position pos:line="303" pos:column="39"/></name><operator pos:line="303" pos:column="39">-&gt;<pos:position pos:line="303" pos:column="44"/></operator><name pos:line="303" pos:column="41">ncode<pos:position pos:line="303" pos:column="46"/></name></name></expr>)<pos:position pos:line="303" pos:column="47"/></condition> <block pos:line="303" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="304" pos:column="17">NEEDBITS<pos:position pos:line="304" pos:column="25"/></name><argument_list pos:line="304" pos:column="25">(<argument><expr><literal type="number" pos:line="304" pos:column="26">3<pos:position pos:line="304" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="304" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="305" pos:column="17">state<pos:position pos:line="305" pos:column="22"/></name><operator pos:line="305" pos:column="22">-&gt;<pos:position pos:line="305" pos:column="27"/></operator><name pos:line="305" pos:column="24">lens<pos:position pos:line="305" pos:column="28"/></name><index pos:line="305" pos:column="28">[<expr><name><name pos:line="305" pos:column="29">order<pos:position pos:line="305" pos:column="34"/></name><index pos:line="305" pos:column="34">[<expr><name><name pos:line="305" pos:column="35">state<pos:position pos:line="305" pos:column="40"/></name><operator pos:line="305" pos:column="40">-&gt;<pos:position pos:line="305" pos:column="45"/></operator><name pos:line="305" pos:column="42">have<pos:position pos:line="305" pos:column="46"/></name></name><operator pos:line="305" pos:column="46">++<pos:position pos:line="305" pos:column="48"/></operator></expr>]<pos:position pos:line="305" pos:column="49"/></index></name></expr>]<pos:position pos:line="305" pos:column="50"/></index></name> <operator pos:line="305" pos:column="51">=<pos:position pos:line="305" pos:column="52"/></operator> <operator pos:line="305" pos:column="53">(<pos:position pos:line="305" pos:column="54"/></operator><name pos:line="305" pos:column="54">unsigned<pos:position pos:line="305" pos:column="62"/></name> <name pos:line="305" pos:column="63">short<pos:position pos:line="305" pos:column="68"/></name><operator pos:line="305" pos:column="68">)<pos:position pos:line="305" pos:column="69"/></operator><call><name pos:line="305" pos:column="69">BITS<pos:position pos:line="305" pos:column="73"/></name><argument_list pos:line="305" pos:column="73">(<argument><expr><literal type="number" pos:line="305" pos:column="74">3<pos:position pos:line="305" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="306" pos:column="17">DROPBITS<pos:position pos:line="306" pos:column="25"/></name><argument_list pos:line="306" pos:column="25">(<argument><expr><literal type="number" pos:line="306" pos:column="26">3<pos:position pos:line="306" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="307" pos:column="14"/></block></while>
            <while pos:line="308" pos:column="13">while <condition pos:line="308" pos:column="19">(<expr><name><name pos:line="308" pos:column="20">state<pos:position pos:line="308" pos:column="25"/></name><operator pos:line="308" pos:column="25">-&gt;<pos:position pos:line="308" pos:column="30"/></operator><name pos:line="308" pos:column="27">have<pos:position pos:line="308" pos:column="31"/></name></name> <operator pos:line="308" pos:column="32">&lt;<pos:position pos:line="308" pos:column="36"/></operator> <literal type="number" pos:line="308" pos:column="34">19<pos:position pos:line="308" pos:column="36"/></literal></expr>)<pos:position pos:line="308" pos:column="37"/></condition>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="309" pos:column="17">state<pos:position pos:line="309" pos:column="22"/></name><operator pos:line="309" pos:column="22">-&gt;<pos:position pos:line="309" pos:column="27"/></operator><name pos:line="309" pos:column="24">lens<pos:position pos:line="309" pos:column="28"/></name><index pos:line="309" pos:column="28">[<expr><name><name pos:line="309" pos:column="29">order<pos:position pos:line="309" pos:column="34"/></name><index pos:line="309" pos:column="34">[<expr><name><name pos:line="309" pos:column="35">state<pos:position pos:line="309" pos:column="40"/></name><operator pos:line="309" pos:column="40">-&gt;<pos:position pos:line="309" pos:column="45"/></operator><name pos:line="309" pos:column="42">have<pos:position pos:line="309" pos:column="46"/></name></name><operator pos:line="309" pos:column="46">++<pos:position pos:line="309" pos:column="48"/></operator></expr>]<pos:position pos:line="309" pos:column="49"/></index></name></expr>]<pos:position pos:line="309" pos:column="50"/></index></name> <operator pos:line="309" pos:column="51">=<pos:position pos:line="309" pos:column="52"/></operator> <literal type="number" pos:line="309" pos:column="53">0<pos:position pos:line="309" pos:column="54"/></literal></expr>;<pos:position pos:line="309" pos:column="55"/></expr_stmt></block></while>
            <expr_stmt><expr><name><name pos:line="310" pos:column="13">state<pos:position pos:line="310" pos:column="18"/></name><operator pos:line="310" pos:column="18">-&gt;<pos:position pos:line="310" pos:column="23"/></operator><name pos:line="310" pos:column="20">next<pos:position pos:line="310" pos:column="24"/></name></name> <operator pos:line="310" pos:column="25">=<pos:position pos:line="310" pos:column="26"/></operator> <name><name pos:line="310" pos:column="27">state<pos:position pos:line="310" pos:column="32"/></name><operator pos:line="310" pos:column="32">-&gt;<pos:position pos:line="310" pos:column="37"/></operator><name pos:line="310" pos:column="34">codes<pos:position pos:line="310" pos:column="39"/></name></name></expr>;<pos:position pos:line="310" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="311" pos:column="13">state<pos:position pos:line="311" pos:column="18"/></name><operator pos:line="311" pos:column="18">-&gt;<pos:position pos:line="311" pos:column="23"/></operator><name pos:line="311" pos:column="20">lencode<pos:position pos:line="311" pos:column="27"/></name></name> <operator pos:line="311" pos:column="28">=<pos:position pos:line="311" pos:column="29"/></operator> <operator pos:line="311" pos:column="30">(<pos:position pos:line="311" pos:column="31"/></operator><name pos:line="311" pos:column="31">code<pos:position pos:line="311" pos:column="35"/></name> <specifier pos:line="311" pos:column="36">const<pos:position pos:line="311" pos:column="41"/></specifier> <name pos:line="311" pos:column="42">FAR<pos:position pos:line="311" pos:column="45"/></name> <operator pos:line="311" pos:column="46">*<pos:position pos:line="311" pos:column="47"/></operator><operator pos:line="311" pos:column="47">)<pos:position pos:line="311" pos:column="48"/></operator><operator pos:line="311" pos:column="48">(<pos:position pos:line="311" pos:column="49"/></operator><name><name pos:line="311" pos:column="49">state<pos:position pos:line="311" pos:column="54"/></name><operator pos:line="311" pos:column="54">-&gt;<pos:position pos:line="311" pos:column="59"/></operator><name pos:line="311" pos:column="56">next<pos:position pos:line="311" pos:column="60"/></name></name><operator pos:line="311" pos:column="60">)<pos:position pos:line="311" pos:column="61"/></operator></expr>;<pos:position pos:line="311" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="312" pos:column="13">state<pos:position pos:line="312" pos:column="18"/></name><operator pos:line="312" pos:column="18">-&gt;<pos:position pos:line="312" pos:column="23"/></operator><name pos:line="312" pos:column="20">lenbits<pos:position pos:line="312" pos:column="27"/></name></name> <operator pos:line="312" pos:column="28">=<pos:position pos:line="312" pos:column="29"/></operator> <literal type="number" pos:line="312" pos:column="30">7<pos:position pos:line="312" pos:column="31"/></literal></expr>;<pos:position pos:line="312" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="313" pos:column="13">ret<pos:position pos:line="313" pos:column="16"/></name> <operator pos:line="313" pos:column="17">=<pos:position pos:line="313" pos:column="18"/></operator> <call><name pos:line="313" pos:column="19">inflate_table<pos:position pos:line="313" pos:column="32"/></name><argument_list pos:line="313" pos:column="32">(<argument><expr><name pos:line="313" pos:column="33">CODES<pos:position pos:line="313" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="313" pos:column="40">state<pos:position pos:line="313" pos:column="45"/></name><operator pos:line="313" pos:column="45">-&gt;<pos:position pos:line="313" pos:column="50"/></operator><name pos:line="313" pos:column="47">lens<pos:position pos:line="313" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="313" pos:column="53">19<pos:position pos:line="313" pos:column="55"/></literal></expr></argument>, <argument><expr><operator pos:line="313" pos:column="57">&amp;<pos:position pos:line="313" pos:column="62"/></operator><operator pos:line="313" pos:column="58">(<pos:position pos:line="313" pos:column="59"/></operator><name><name pos:line="313" pos:column="59">state<pos:position pos:line="313" pos:column="64"/></name><operator pos:line="313" pos:column="64">-&gt;<pos:position pos:line="313" pos:column="69"/></operator><name pos:line="313" pos:column="66">next<pos:position pos:line="313" pos:column="70"/></name></name><operator pos:line="313" pos:column="70">)<pos:position pos:line="313" pos:column="71"/></operator></expr></argument>,
                                <argument><expr><operator pos:line="314" pos:column="33">&amp;<pos:position pos:line="314" pos:column="38"/></operator><operator pos:line="314" pos:column="34">(<pos:position pos:line="314" pos:column="35"/></operator><name><name pos:line="314" pos:column="35">state<pos:position pos:line="314" pos:column="40"/></name><operator pos:line="314" pos:column="40">-&gt;<pos:position pos:line="314" pos:column="45"/></operator><name pos:line="314" pos:column="42">lenbits<pos:position pos:line="314" pos:column="49"/></name></name><operator pos:line="314" pos:column="49">)<pos:position pos:line="314" pos:column="50"/></operator></expr></argument>, <argument><expr><name><name pos:line="314" pos:column="52">state<pos:position pos:line="314" pos:column="57"/></name><operator pos:line="314" pos:column="57">-&gt;<pos:position pos:line="314" pos:column="62"/></operator><name pos:line="314" pos:column="59">work<pos:position pos:line="314" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="314" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="65"/></expr_stmt>
            <if pos:line="315" pos:column="13">if <condition pos:line="315" pos:column="16">(<expr><name pos:line="315" pos:column="17">ret<pos:position pos:line="315" pos:column="20"/></name></expr>)<pos:position pos:line="315" pos:column="21"/></condition><then pos:line="315" pos:column="21"> <block pos:line="315" pos:column="22">{
                <expr_stmt><expr><name><name pos:line="316" pos:column="17">strm<pos:position pos:line="316" pos:column="21"/></name><operator pos:line="316" pos:column="21">-&gt;<pos:position pos:line="316" pos:column="26"/></operator><name pos:line="316" pos:column="23">msg<pos:position pos:line="316" pos:column="26"/></name></name> <operator pos:line="316" pos:column="27">=<pos:position pos:line="316" pos:column="28"/></operator> <operator pos:line="316" pos:column="29">(<pos:position pos:line="316" pos:column="30"/></operator><name pos:line="316" pos:column="30">char<pos:position pos:line="316" pos:column="34"/></name> <operator pos:line="316" pos:column="35">*<pos:position pos:line="316" pos:column="36"/></operator><operator pos:line="316" pos:column="36">)<pos:position pos:line="316" pos:column="37"/></operator><literal type="string" pos:line="316" pos:column="37">"invalid code lengths set"<pos:position pos:line="316" pos:column="63"/></literal></expr>;<pos:position pos:line="316" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="317" pos:column="17">state<pos:position pos:line="317" pos:column="22"/></name><operator pos:line="317" pos:column="22">-&gt;<pos:position pos:line="317" pos:column="27"/></operator><name pos:line="317" pos:column="24">mode<pos:position pos:line="317" pos:column="28"/></name></name> <operator pos:line="317" pos:column="29">=<pos:position pos:line="317" pos:column="30"/></operator> <name pos:line="317" pos:column="31">BAD<pos:position pos:line="317" pos:column="34"/></name></expr>;<pos:position pos:line="317" pos:column="35"/></expr_stmt>
                <break pos:line="318" pos:column="17">break;<pos:position pos:line="318" pos:column="23"/></break>
            }<pos:position pos:line="319" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="320" pos:column="13">Tracev<pos:position pos:line="320" pos:column="19"/></name><argument_list pos:line="320" pos:column="19">(<argument><expr><operator pos:line="320" pos:column="20">(<pos:position pos:line="320" pos:column="21"/></operator><name pos:line="320" pos:column="21">stderr<pos:position pos:line="320" pos:column="27"/></name><operator pos:line="320" pos:column="27">,<pos:position pos:line="320" pos:column="28"/></operator> <literal type="string" pos:line="320" pos:column="29">"inflate:       code lengths ok\n"<pos:position pos:line="320" pos:column="63"/></literal><operator pos:line="320" pos:column="63">)<pos:position pos:line="320" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="320" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="321" pos:column="13">state<pos:position pos:line="321" pos:column="18"/></name><operator pos:line="321" pos:column="18">-&gt;<pos:position pos:line="321" pos:column="23"/></operator><name pos:line="321" pos:column="20">have<pos:position pos:line="321" pos:column="24"/></name></name> <operator pos:line="321" pos:column="25">=<pos:position pos:line="321" pos:column="26"/></operator> <literal type="number" pos:line="321" pos:column="27">0<pos:position pos:line="321" pos:column="28"/></literal></expr>;<pos:position pos:line="321" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="322" pos:column="13">state<pos:position pos:line="322" pos:column="18"/></name><operator pos:line="322" pos:column="18">-&gt;<pos:position pos:line="322" pos:column="23"/></operator><name pos:line="322" pos:column="20">mode<pos:position pos:line="322" pos:column="24"/></name></name> <operator pos:line="322" pos:column="25">=<pos:position pos:line="322" pos:column="26"/></operator> <name pos:line="322" pos:column="27">CODELENS<pos:position pos:line="322" pos:column="35"/></name></expr>;<pos:position pos:line="322" pos:column="36"/></expr_stmt>
        <case pos:line="323" pos:column="9">case <expr><name pos:line="323" pos:column="14">CODELENS<pos:position pos:line="323" pos:column="22"/></name></expr>:<pos:position pos:line="323" pos:column="23"/></case>
            <while pos:line="324" pos:column="13">while <condition pos:line="324" pos:column="19">(<expr><name><name pos:line="324" pos:column="20">state<pos:position pos:line="324" pos:column="25"/></name><operator pos:line="324" pos:column="25">-&gt;<pos:position pos:line="324" pos:column="30"/></operator><name pos:line="324" pos:column="27">have<pos:position pos:line="324" pos:column="31"/></name></name> <operator pos:line="324" pos:column="32">&lt;<pos:position pos:line="324" pos:column="36"/></operator> <name><name pos:line="324" pos:column="34">state<pos:position pos:line="324" pos:column="39"/></name><operator pos:line="324" pos:column="39">-&gt;<pos:position pos:line="324" pos:column="44"/></operator><name pos:line="324" pos:column="41">nlen<pos:position pos:line="324" pos:column="45"/></name></name> <operator pos:line="324" pos:column="46">+<pos:position pos:line="324" pos:column="47"/></operator> <name><name pos:line="324" pos:column="48">state<pos:position pos:line="324" pos:column="53"/></name><operator pos:line="324" pos:column="53">-&gt;<pos:position pos:line="324" pos:column="58"/></operator><name pos:line="324" pos:column="55">ndist<pos:position pos:line="324" pos:column="60"/></name></name></expr>)<pos:position pos:line="324" pos:column="61"/></condition> <block pos:line="324" pos:column="62">{
                <for pos:line="325" pos:column="17">for <control pos:line="325" pos:column="21">(<init pos:line="325" pos:column="22">;<pos:position pos:line="325" pos:column="23"/></init><condition pos:line="325" pos:column="23">;<pos:position pos:line="325" pos:column="24"/></condition><incr/>)<pos:position pos:line="325" pos:column="25"/></control> <block pos:line="325" pos:column="26">{
                    <expr_stmt><expr><name pos:line="326" pos:column="21">this<pos:position pos:line="326" pos:column="25"/></name> <operator pos:line="326" pos:column="26">=<pos:position pos:line="326" pos:column="27"/></operator> <name><name pos:line="326" pos:column="28">state<pos:position pos:line="326" pos:column="33"/></name><operator pos:line="326" pos:column="33">-&gt;<pos:position pos:line="326" pos:column="38"/></operator><name pos:line="326" pos:column="35">lencode<pos:position pos:line="326" pos:column="42"/></name><index pos:line="326" pos:column="42">[<expr><call><name pos:line="326" pos:column="43">BITS<pos:position pos:line="326" pos:column="47"/></name><argument_list pos:line="326" pos:column="47">(<argument><expr><name><name pos:line="326" pos:column="48">state<pos:position pos:line="326" pos:column="53"/></name><operator pos:line="326" pos:column="53">-&gt;<pos:position pos:line="326" pos:column="58"/></operator><name pos:line="326" pos:column="55">lenbits<pos:position pos:line="326" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="326" pos:column="63"/></argument_list></call></expr>]<pos:position pos:line="326" pos:column="64"/></index></name></expr>;<pos:position pos:line="326" pos:column="65"/></expr_stmt>
                    <if pos:line="327" pos:column="21">if <condition pos:line="327" pos:column="24">(<expr><call pos:line="327" pos:column="25">(<name pos:line="327" pos:column="26">unsigned<pos:position pos:line="327" pos:column="34"/></name>)<argument_list pos:line="327" pos:column="35">(<argument><expr><name><name pos:line="327" pos:column="36">this<pos:position pos:line="327" pos:column="40"/></name><operator pos:line="327" pos:column="40">.<pos:position pos:line="327" pos:column="41"/></operator><name pos:line="327" pos:column="41">bits<pos:position pos:line="327" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="327" pos:column="46"/></argument_list></call> <operator pos:line="327" pos:column="47">&lt;=<pos:position pos:line="327" pos:column="52"/></operator> <name pos:line="327" pos:column="50">bits<pos:position pos:line="327" pos:column="54"/></name></expr>)<pos:position pos:line="327" pos:column="55"/></condition><then pos:line="327" pos:column="55"> <block type="pseudo"><break pos:line="327" pos:column="56">break;<pos:position pos:line="327" pos:column="62"/></break></block></then></if>
                    <expr_stmt><expr><call><name pos:line="328" pos:column="21">PULLBYTE<pos:position pos:line="328" pos:column="29"/></name><argument_list pos:line="328" pos:column="29">()<pos:position pos:line="328" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="329" pos:column="18"/></block></for>
                <if pos:line="330" pos:column="17">if <condition pos:line="330" pos:column="20">(<expr><name><name pos:line="330" pos:column="21">this<pos:position pos:line="330" pos:column="25"/></name><operator pos:line="330" pos:column="25">.<pos:position pos:line="330" pos:column="26"/></operator><name pos:line="330" pos:column="26">val<pos:position pos:line="330" pos:column="29"/></name></name> <operator pos:line="330" pos:column="30">&lt;<pos:position pos:line="330" pos:column="34"/></operator> <literal type="number" pos:line="330" pos:column="32">16<pos:position pos:line="330" pos:column="34"/></literal></expr>)<pos:position pos:line="330" pos:column="35"/></condition><then pos:line="330" pos:column="35"> <block pos:line="330" pos:column="36">{
                    <expr_stmt><expr><call><name pos:line="331" pos:column="21">NEEDBITS<pos:position pos:line="331" pos:column="29"/></name><argument_list pos:line="331" pos:column="29">(<argument><expr><name><name pos:line="331" pos:column="30">this<pos:position pos:line="331" pos:column="34"/></name><operator pos:line="331" pos:column="34">.<pos:position pos:line="331" pos:column="35"/></operator><name pos:line="331" pos:column="35">bits<pos:position pos:line="331" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="331" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="332" pos:column="21">DROPBITS<pos:position pos:line="332" pos:column="29"/></name><argument_list pos:line="332" pos:column="29">(<argument><expr><name><name pos:line="332" pos:column="30">this<pos:position pos:line="332" pos:column="34"/></name><operator pos:line="332" pos:column="34">.<pos:position pos:line="332" pos:column="35"/></operator><name pos:line="332" pos:column="35">bits<pos:position pos:line="332" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="332" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="41"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="333" pos:column="21">state<pos:position pos:line="333" pos:column="26"/></name><operator pos:line="333" pos:column="26">-&gt;<pos:position pos:line="333" pos:column="31"/></operator><name pos:line="333" pos:column="28">lens<pos:position pos:line="333" pos:column="32"/></name><index pos:line="333" pos:column="32">[<expr><name><name pos:line="333" pos:column="33">state<pos:position pos:line="333" pos:column="38"/></name><operator pos:line="333" pos:column="38">-&gt;<pos:position pos:line="333" pos:column="43"/></operator><name pos:line="333" pos:column="40">have<pos:position pos:line="333" pos:column="44"/></name></name><operator pos:line="333" pos:column="44">++<pos:position pos:line="333" pos:column="46"/></operator></expr>]<pos:position pos:line="333" pos:column="47"/></index></name> <operator pos:line="333" pos:column="48">=<pos:position pos:line="333" pos:column="49"/></operator> <name><name pos:line="333" pos:column="50">this<pos:position pos:line="333" pos:column="54"/></name><operator pos:line="333" pos:column="54">.<pos:position pos:line="333" pos:column="55"/></operator><name pos:line="333" pos:column="55">val<pos:position pos:line="333" pos:column="58"/></name></name></expr>;<pos:position pos:line="333" pos:column="59"/></expr_stmt>
                }<pos:position pos:line="334" pos:column="18"/></block></then>
                <else pos:line="335" pos:column="17">else <block pos:line="335" pos:column="22">{
                    <if pos:line="336" pos:column="21">if <condition pos:line="336" pos:column="24">(<expr><name><name pos:line="336" pos:column="25">this<pos:position pos:line="336" pos:column="29"/></name><operator pos:line="336" pos:column="29">.<pos:position pos:line="336" pos:column="30"/></operator><name pos:line="336" pos:column="30">val<pos:position pos:line="336" pos:column="33"/></name></name> <operator pos:line="336" pos:column="34">==<pos:position pos:line="336" pos:column="36"/></operator> <literal type="number" pos:line="336" pos:column="37">16<pos:position pos:line="336" pos:column="39"/></literal></expr>)<pos:position pos:line="336" pos:column="40"/></condition><then pos:line="336" pos:column="40"> <block pos:line="336" pos:column="41">{
                        <expr_stmt><expr><call><name pos:line="337" pos:column="25">NEEDBITS<pos:position pos:line="337" pos:column="33"/></name><argument_list pos:line="337" pos:column="33">(<argument><expr><name><name pos:line="337" pos:column="34">this<pos:position pos:line="337" pos:column="38"/></name><operator pos:line="337" pos:column="38">.<pos:position pos:line="337" pos:column="39"/></operator><name pos:line="337" pos:column="39">bits<pos:position pos:line="337" pos:column="43"/></name></name> <operator pos:line="337" pos:column="44">+<pos:position pos:line="337" pos:column="45"/></operator> <literal type="number" pos:line="337" pos:column="46">2<pos:position pos:line="337" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="337" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="49"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="338" pos:column="25">DROPBITS<pos:position pos:line="338" pos:column="33"/></name><argument_list pos:line="338" pos:column="33">(<argument><expr><name><name pos:line="338" pos:column="34">this<pos:position pos:line="338" pos:column="38"/></name><operator pos:line="338" pos:column="38">.<pos:position pos:line="338" pos:column="39"/></operator><name pos:line="338" pos:column="39">bits<pos:position pos:line="338" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="338" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="45"/></expr_stmt>
                        <if pos:line="339" pos:column="25">if <condition pos:line="339" pos:column="28">(<expr><name><name pos:line="339" pos:column="29">state<pos:position pos:line="339" pos:column="34"/></name><operator pos:line="339" pos:column="34">-&gt;<pos:position pos:line="339" pos:column="39"/></operator><name pos:line="339" pos:column="36">have<pos:position pos:line="339" pos:column="40"/></name></name> <operator pos:line="339" pos:column="41">==<pos:position pos:line="339" pos:column="43"/></operator> <literal type="number" pos:line="339" pos:column="44">0<pos:position pos:line="339" pos:column="45"/></literal></expr>)<pos:position pos:line="339" pos:column="46"/></condition><then pos:line="339" pos:column="46"> <block pos:line="339" pos:column="47">{
                            <expr_stmt><expr><name><name pos:line="340" pos:column="29">strm<pos:position pos:line="340" pos:column="33"/></name><operator pos:line="340" pos:column="33">-&gt;<pos:position pos:line="340" pos:column="38"/></operator><name pos:line="340" pos:column="35">msg<pos:position pos:line="340" pos:column="38"/></name></name> <operator pos:line="340" pos:column="39">=<pos:position pos:line="340" pos:column="40"/></operator> <operator pos:line="340" pos:column="41">(<pos:position pos:line="340" pos:column="42"/></operator><name pos:line="340" pos:column="42">char<pos:position pos:line="340" pos:column="46"/></name> <operator pos:line="340" pos:column="47">*<pos:position pos:line="340" pos:column="48"/></operator><operator pos:line="340" pos:column="48">)<pos:position pos:line="340" pos:column="49"/></operator><literal type="string" pos:line="340" pos:column="49">"invalid bit length repeat"<pos:position pos:line="340" pos:column="76"/></literal></expr>;<pos:position pos:line="340" pos:column="77"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="341" pos:column="29">state<pos:position pos:line="341" pos:column="34"/></name><operator pos:line="341" pos:column="34">-&gt;<pos:position pos:line="341" pos:column="39"/></operator><name pos:line="341" pos:column="36">mode<pos:position pos:line="341" pos:column="40"/></name></name> <operator pos:line="341" pos:column="41">=<pos:position pos:line="341" pos:column="42"/></operator> <name pos:line="341" pos:column="43">BAD<pos:position pos:line="341" pos:column="46"/></name></expr>;<pos:position pos:line="341" pos:column="47"/></expr_stmt>
                            <break pos:line="342" pos:column="29">break;<pos:position pos:line="342" pos:column="35"/></break>
                        }<pos:position pos:line="343" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><name pos:line="344" pos:column="25">len<pos:position pos:line="344" pos:column="28"/></name> <operator pos:line="344" pos:column="29">=<pos:position pos:line="344" pos:column="30"/></operator> <name><name pos:line="344" pos:column="31">state<pos:position pos:line="344" pos:column="36"/></name><operator pos:line="344" pos:column="36">-&gt;<pos:position pos:line="344" pos:column="41"/></operator><name pos:line="344" pos:column="38">lens<pos:position pos:line="344" pos:column="42"/></name><index pos:line="344" pos:column="42">[<expr><name><name pos:line="344" pos:column="43">state<pos:position pos:line="344" pos:column="48"/></name><operator pos:line="344" pos:column="48">-&gt;<pos:position pos:line="344" pos:column="53"/></operator><name pos:line="344" pos:column="50">have<pos:position pos:line="344" pos:column="54"/></name></name> <operator pos:line="344" pos:column="55">-<pos:position pos:line="344" pos:column="56"/></operator> <literal type="number" pos:line="344" pos:column="57">1<pos:position pos:line="344" pos:column="58"/></literal></expr>]<pos:position pos:line="344" pos:column="59"/></index></name></expr>;<pos:position pos:line="344" pos:column="60"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="345" pos:column="25">copy<pos:position pos:line="345" pos:column="29"/></name> <operator pos:line="345" pos:column="30">=<pos:position pos:line="345" pos:column="31"/></operator> <literal type="number" pos:line="345" pos:column="32">3<pos:position pos:line="345" pos:column="33"/></literal> <operator pos:line="345" pos:column="34">+<pos:position pos:line="345" pos:column="35"/></operator> <call><name pos:line="345" pos:column="36">BITS<pos:position pos:line="345" pos:column="40"/></name><argument_list pos:line="345" pos:column="40">(<argument><expr><literal type="number" pos:line="345" pos:column="41">2<pos:position pos:line="345" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="345" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="44"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="346" pos:column="25">DROPBITS<pos:position pos:line="346" pos:column="33"/></name><argument_list pos:line="346" pos:column="33">(<argument><expr><literal type="number" pos:line="346" pos:column="34">2<pos:position pos:line="346" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="346" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="347" pos:column="22"/></block></then>
                    <elseif pos:line="348" pos:column="21">else <if pos:line="348" pos:column="26">if <condition pos:line="348" pos:column="29">(<expr><name><name pos:line="348" pos:column="30">this<pos:position pos:line="348" pos:column="34"/></name><operator pos:line="348" pos:column="34">.<pos:position pos:line="348" pos:column="35"/></operator><name pos:line="348" pos:column="35">val<pos:position pos:line="348" pos:column="38"/></name></name> <operator pos:line="348" pos:column="39">==<pos:position pos:line="348" pos:column="41"/></operator> <literal type="number" pos:line="348" pos:column="42">17<pos:position pos:line="348" pos:column="44"/></literal></expr>)<pos:position pos:line="348" pos:column="45"/></condition><then pos:line="348" pos:column="45"> <block pos:line="348" pos:column="46">{
                        <expr_stmt><expr><call><name pos:line="349" pos:column="25">NEEDBITS<pos:position pos:line="349" pos:column="33"/></name><argument_list pos:line="349" pos:column="33">(<argument><expr><name><name pos:line="349" pos:column="34">this<pos:position pos:line="349" pos:column="38"/></name><operator pos:line="349" pos:column="38">.<pos:position pos:line="349" pos:column="39"/></operator><name pos:line="349" pos:column="39">bits<pos:position pos:line="349" pos:column="43"/></name></name> <operator pos:line="349" pos:column="44">+<pos:position pos:line="349" pos:column="45"/></operator> <literal type="number" pos:line="349" pos:column="46">3<pos:position pos:line="349" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="349" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="49"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="350" pos:column="25">DROPBITS<pos:position pos:line="350" pos:column="33"/></name><argument_list pos:line="350" pos:column="33">(<argument><expr><name><name pos:line="350" pos:column="34">this<pos:position pos:line="350" pos:column="38"/></name><operator pos:line="350" pos:column="38">.<pos:position pos:line="350" pos:column="39"/></operator><name pos:line="350" pos:column="39">bits<pos:position pos:line="350" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="350" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="45"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="351" pos:column="25">len<pos:position pos:line="351" pos:column="28"/></name> <operator pos:line="351" pos:column="29">=<pos:position pos:line="351" pos:column="30"/></operator> <literal type="number" pos:line="351" pos:column="31">0<pos:position pos:line="351" pos:column="32"/></literal></expr>;<pos:position pos:line="351" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="352" pos:column="25">copy<pos:position pos:line="352" pos:column="29"/></name> <operator pos:line="352" pos:column="30">=<pos:position pos:line="352" pos:column="31"/></operator> <literal type="number" pos:line="352" pos:column="32">3<pos:position pos:line="352" pos:column="33"/></literal> <operator pos:line="352" pos:column="34">+<pos:position pos:line="352" pos:column="35"/></operator> <call><name pos:line="352" pos:column="36">BITS<pos:position pos:line="352" pos:column="40"/></name><argument_list pos:line="352" pos:column="40">(<argument><expr><literal type="number" pos:line="352" pos:column="41">3<pos:position pos:line="352" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="352" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="44"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="353" pos:column="25">DROPBITS<pos:position pos:line="353" pos:column="33"/></name><argument_list pos:line="353" pos:column="33">(<argument><expr><literal type="number" pos:line="353" pos:column="34">3<pos:position pos:line="353" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="354" pos:column="22"/></block></then></if></elseif>
                    <else pos:line="355" pos:column="21">else <block pos:line="355" pos:column="26">{
                        <expr_stmt><expr><call><name pos:line="356" pos:column="25">NEEDBITS<pos:position pos:line="356" pos:column="33"/></name><argument_list pos:line="356" pos:column="33">(<argument><expr><name><name pos:line="356" pos:column="34">this<pos:position pos:line="356" pos:column="38"/></name><operator pos:line="356" pos:column="38">.<pos:position pos:line="356" pos:column="39"/></operator><name pos:line="356" pos:column="39">bits<pos:position pos:line="356" pos:column="43"/></name></name> <operator pos:line="356" pos:column="44">+<pos:position pos:line="356" pos:column="45"/></operator> <literal type="number" pos:line="356" pos:column="46">7<pos:position pos:line="356" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="49"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="357" pos:column="25">DROPBITS<pos:position pos:line="357" pos:column="33"/></name><argument_list pos:line="357" pos:column="33">(<argument><expr><name><name pos:line="357" pos:column="34">this<pos:position pos:line="357" pos:column="38"/></name><operator pos:line="357" pos:column="38">.<pos:position pos:line="357" pos:column="39"/></operator><name pos:line="357" pos:column="39">bits<pos:position pos:line="357" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="357" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="45"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="358" pos:column="25">len<pos:position pos:line="358" pos:column="28"/></name> <operator pos:line="358" pos:column="29">=<pos:position pos:line="358" pos:column="30"/></operator> <literal type="number" pos:line="358" pos:column="31">0<pos:position pos:line="358" pos:column="32"/></literal></expr>;<pos:position pos:line="358" pos:column="33"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="359" pos:column="25">copy<pos:position pos:line="359" pos:column="29"/></name> <operator pos:line="359" pos:column="30">=<pos:position pos:line="359" pos:column="31"/></operator> <literal type="number" pos:line="359" pos:column="32">11<pos:position pos:line="359" pos:column="34"/></literal> <operator pos:line="359" pos:column="35">+<pos:position pos:line="359" pos:column="36"/></operator> <call><name pos:line="359" pos:column="37">BITS<pos:position pos:line="359" pos:column="41"/></name><argument_list pos:line="359" pos:column="41">(<argument><expr><literal type="number" pos:line="359" pos:column="42">7<pos:position pos:line="359" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="359" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="45"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="360" pos:column="25">DROPBITS<pos:position pos:line="360" pos:column="33"/></name><argument_list pos:line="360" pos:column="33">(<argument><expr><literal type="number" pos:line="360" pos:column="34">7<pos:position pos:line="360" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="360" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="361" pos:column="22"/></block></else></if>
                    <if pos:line="362" pos:column="21">if <condition pos:line="362" pos:column="24">(<expr><name><name pos:line="362" pos:column="25">state<pos:position pos:line="362" pos:column="30"/></name><operator pos:line="362" pos:column="30">-&gt;<pos:position pos:line="362" pos:column="35"/></operator><name pos:line="362" pos:column="32">have<pos:position pos:line="362" pos:column="36"/></name></name> <operator pos:line="362" pos:column="37">+<pos:position pos:line="362" pos:column="38"/></operator> <name pos:line="362" pos:column="39">copy<pos:position pos:line="362" pos:column="43"/></name> <operator pos:line="362" pos:column="44">&gt;<pos:position pos:line="362" pos:column="48"/></operator> <name><name pos:line="362" pos:column="46">state<pos:position pos:line="362" pos:column="51"/></name><operator pos:line="362" pos:column="51">-&gt;<pos:position pos:line="362" pos:column="56"/></operator><name pos:line="362" pos:column="53">nlen<pos:position pos:line="362" pos:column="57"/></name></name> <operator pos:line="362" pos:column="58">+<pos:position pos:line="362" pos:column="59"/></operator> <name><name pos:line="362" pos:column="60">state<pos:position pos:line="362" pos:column="65"/></name><operator pos:line="362" pos:column="65">-&gt;<pos:position pos:line="362" pos:column="70"/></operator><name pos:line="362" pos:column="67">ndist<pos:position pos:line="362" pos:column="72"/></name></name></expr>)<pos:position pos:line="362" pos:column="73"/></condition><then pos:line="362" pos:column="73"> <block pos:line="362" pos:column="74">{
                        <expr_stmt><expr><name><name pos:line="363" pos:column="25">strm<pos:position pos:line="363" pos:column="29"/></name><operator pos:line="363" pos:column="29">-&gt;<pos:position pos:line="363" pos:column="34"/></operator><name pos:line="363" pos:column="31">msg<pos:position pos:line="363" pos:column="34"/></name></name> <operator pos:line="363" pos:column="35">=<pos:position pos:line="363" pos:column="36"/></operator> <operator pos:line="363" pos:column="37">(<pos:position pos:line="363" pos:column="38"/></operator><name pos:line="363" pos:column="38">char<pos:position pos:line="363" pos:column="42"/></name> <operator pos:line="363" pos:column="43">*<pos:position pos:line="363" pos:column="44"/></operator><operator pos:line="363" pos:column="44">)<pos:position pos:line="363" pos:column="45"/></operator><literal type="string" pos:line="363" pos:column="45">"invalid bit length repeat"<pos:position pos:line="363" pos:column="72"/></literal></expr>;<pos:position pos:line="363" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="364" pos:column="25">state<pos:position pos:line="364" pos:column="30"/></name><operator pos:line="364" pos:column="30">-&gt;<pos:position pos:line="364" pos:column="35"/></operator><name pos:line="364" pos:column="32">mode<pos:position pos:line="364" pos:column="36"/></name></name> <operator pos:line="364" pos:column="37">=<pos:position pos:line="364" pos:column="38"/></operator> <name pos:line="364" pos:column="39">BAD<pos:position pos:line="364" pos:column="42"/></name></expr>;<pos:position pos:line="364" pos:column="43"/></expr_stmt>
                        <break pos:line="365" pos:column="25">break;<pos:position pos:line="365" pos:column="31"/></break>
                    }<pos:position pos:line="366" pos:column="22"/></block></then></if>
                    <while pos:line="367" pos:column="21">while <condition pos:line="367" pos:column="27">(<expr><name pos:line="367" pos:column="28">copy<pos:position pos:line="367" pos:column="32"/></name><operator pos:line="367" pos:column="32">--<pos:position pos:line="367" pos:column="34"/></operator></expr>)<pos:position pos:line="367" pos:column="35"/></condition>
                        <block type="pseudo"><expr_stmt><expr><name><name pos:line="368" pos:column="25">state<pos:position pos:line="368" pos:column="30"/></name><operator pos:line="368" pos:column="30">-&gt;<pos:position pos:line="368" pos:column="35"/></operator><name pos:line="368" pos:column="32">lens<pos:position pos:line="368" pos:column="36"/></name><index pos:line="368" pos:column="36">[<expr><name><name pos:line="368" pos:column="37">state<pos:position pos:line="368" pos:column="42"/></name><operator pos:line="368" pos:column="42">-&gt;<pos:position pos:line="368" pos:column="47"/></operator><name pos:line="368" pos:column="44">have<pos:position pos:line="368" pos:column="48"/></name></name><operator pos:line="368" pos:column="48">++<pos:position pos:line="368" pos:column="50"/></operator></expr>]<pos:position pos:line="368" pos:column="51"/></index></name> <operator pos:line="368" pos:column="52">=<pos:position pos:line="368" pos:column="53"/></operator> <operator pos:line="368" pos:column="54">(<pos:position pos:line="368" pos:column="55"/></operator><name pos:line="368" pos:column="55">unsigned<pos:position pos:line="368" pos:column="63"/></name> <name pos:line="368" pos:column="64">short<pos:position pos:line="368" pos:column="69"/></name><operator pos:line="368" pos:column="69">)<pos:position pos:line="368" pos:column="70"/></operator><name pos:line="368" pos:column="70">len<pos:position pos:line="368" pos:column="73"/></name></expr>;<pos:position pos:line="368" pos:column="74"/></expr_stmt></block></while>
                }<pos:position pos:line="369" pos:column="18"/></block></else></if>
            }<pos:position pos:line="370" pos:column="14"/></block></while>

            <comment type="block" pos:line="372" pos:column="13">/* handle error breaks in while */</comment>
            <if pos:line="373" pos:column="13">if <condition pos:line="373" pos:column="16">(<expr><name><name pos:line="373" pos:column="17">state<pos:position pos:line="373" pos:column="22"/></name><operator pos:line="373" pos:column="22">-&gt;<pos:position pos:line="373" pos:column="27"/></operator><name pos:line="373" pos:column="24">mode<pos:position pos:line="373" pos:column="28"/></name></name> <operator pos:line="373" pos:column="29">==<pos:position pos:line="373" pos:column="31"/></operator> <name pos:line="373" pos:column="32">BAD<pos:position pos:line="373" pos:column="35"/></name></expr>)<pos:position pos:line="373" pos:column="36"/></condition><then pos:line="373" pos:column="36"> <block type="pseudo"><break pos:line="373" pos:column="37">break;<pos:position pos:line="373" pos:column="43"/></break></block></then></if>

            <comment type="block" pos:line="375" pos:column="13">/* build code tables */</comment>
            <expr_stmt><expr><name><name pos:line="376" pos:column="13">state<pos:position pos:line="376" pos:column="18"/></name><operator pos:line="376" pos:column="18">-&gt;<pos:position pos:line="376" pos:column="23"/></operator><name pos:line="376" pos:column="20">next<pos:position pos:line="376" pos:column="24"/></name></name> <operator pos:line="376" pos:column="25">=<pos:position pos:line="376" pos:column="26"/></operator> <name><name pos:line="376" pos:column="27">state<pos:position pos:line="376" pos:column="32"/></name><operator pos:line="376" pos:column="32">-&gt;<pos:position pos:line="376" pos:column="37"/></operator><name pos:line="376" pos:column="34">codes<pos:position pos:line="376" pos:column="39"/></name></name></expr>;<pos:position pos:line="376" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="377" pos:column="13">state<pos:position pos:line="377" pos:column="18"/></name><operator pos:line="377" pos:column="18">-&gt;<pos:position pos:line="377" pos:column="23"/></operator><name pos:line="377" pos:column="20">lencode<pos:position pos:line="377" pos:column="27"/></name></name> <operator pos:line="377" pos:column="28">=<pos:position pos:line="377" pos:column="29"/></operator> <operator pos:line="377" pos:column="30">(<pos:position pos:line="377" pos:column="31"/></operator><name pos:line="377" pos:column="31">code<pos:position pos:line="377" pos:column="35"/></name> <specifier pos:line="377" pos:column="36">const<pos:position pos:line="377" pos:column="41"/></specifier> <name pos:line="377" pos:column="42">FAR<pos:position pos:line="377" pos:column="45"/></name> <operator pos:line="377" pos:column="46">*<pos:position pos:line="377" pos:column="47"/></operator><operator pos:line="377" pos:column="47">)<pos:position pos:line="377" pos:column="48"/></operator><operator pos:line="377" pos:column="48">(<pos:position pos:line="377" pos:column="49"/></operator><name><name pos:line="377" pos:column="49">state<pos:position pos:line="377" pos:column="54"/></name><operator pos:line="377" pos:column="54">-&gt;<pos:position pos:line="377" pos:column="59"/></operator><name pos:line="377" pos:column="56">next<pos:position pos:line="377" pos:column="60"/></name></name><operator pos:line="377" pos:column="60">)<pos:position pos:line="377" pos:column="61"/></operator></expr>;<pos:position pos:line="377" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="378" pos:column="13">state<pos:position pos:line="378" pos:column="18"/></name><operator pos:line="378" pos:column="18">-&gt;<pos:position pos:line="378" pos:column="23"/></operator><name pos:line="378" pos:column="20">lenbits<pos:position pos:line="378" pos:column="27"/></name></name> <operator pos:line="378" pos:column="28">=<pos:position pos:line="378" pos:column="29"/></operator> <literal type="number" pos:line="378" pos:column="30">9<pos:position pos:line="378" pos:column="31"/></literal></expr>;<pos:position pos:line="378" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="379" pos:column="13">ret<pos:position pos:line="379" pos:column="16"/></name> <operator pos:line="379" pos:column="17">=<pos:position pos:line="379" pos:column="18"/></operator> <call><name pos:line="379" pos:column="19">inflate_table<pos:position pos:line="379" pos:column="32"/></name><argument_list pos:line="379" pos:column="32">(<argument><expr><name pos:line="379" pos:column="33">LENS<pos:position pos:line="379" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="379" pos:column="39">state<pos:position pos:line="379" pos:column="44"/></name><operator pos:line="379" pos:column="44">-&gt;<pos:position pos:line="379" pos:column="49"/></operator><name pos:line="379" pos:column="46">lens<pos:position pos:line="379" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="379" pos:column="52">state<pos:position pos:line="379" pos:column="57"/></name><operator pos:line="379" pos:column="57">-&gt;<pos:position pos:line="379" pos:column="62"/></operator><name pos:line="379" pos:column="59">nlen<pos:position pos:line="379" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="379" pos:column="65">&amp;<pos:position pos:line="379" pos:column="70"/></operator><operator pos:line="379" pos:column="66">(<pos:position pos:line="379" pos:column="67"/></operator><name><name pos:line="379" pos:column="67">state<pos:position pos:line="379" pos:column="72"/></name><operator pos:line="379" pos:column="72">-&gt;<pos:position pos:line="379" pos:column="77"/></operator><name pos:line="379" pos:column="74">next<pos:position pos:line="379" pos:column="78"/></name></name><operator pos:line="379" pos:column="78">)<pos:position pos:line="379" pos:column="79"/></operator></expr></argument>,
                                <argument><expr><operator pos:line="380" pos:column="33">&amp;<pos:position pos:line="380" pos:column="38"/></operator><operator pos:line="380" pos:column="34">(<pos:position pos:line="380" pos:column="35"/></operator><name><name pos:line="380" pos:column="35">state<pos:position pos:line="380" pos:column="40"/></name><operator pos:line="380" pos:column="40">-&gt;<pos:position pos:line="380" pos:column="45"/></operator><name pos:line="380" pos:column="42">lenbits<pos:position pos:line="380" pos:column="49"/></name></name><operator pos:line="380" pos:column="49">)<pos:position pos:line="380" pos:column="50"/></operator></expr></argument>, <argument><expr><name><name pos:line="380" pos:column="52">state<pos:position pos:line="380" pos:column="57"/></name><operator pos:line="380" pos:column="57">-&gt;<pos:position pos:line="380" pos:column="62"/></operator><name pos:line="380" pos:column="59">work<pos:position pos:line="380" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="380" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="65"/></expr_stmt>
            <if pos:line="381" pos:column="13">if <condition pos:line="381" pos:column="16">(<expr><name pos:line="381" pos:column="17">ret<pos:position pos:line="381" pos:column="20"/></name></expr>)<pos:position pos:line="381" pos:column="21"/></condition><then pos:line="381" pos:column="21"> <block pos:line="381" pos:column="22">{
                <expr_stmt><expr><name><name pos:line="382" pos:column="17">strm<pos:position pos:line="382" pos:column="21"/></name><operator pos:line="382" pos:column="21">-&gt;<pos:position pos:line="382" pos:column="26"/></operator><name pos:line="382" pos:column="23">msg<pos:position pos:line="382" pos:column="26"/></name></name> <operator pos:line="382" pos:column="27">=<pos:position pos:line="382" pos:column="28"/></operator> <operator pos:line="382" pos:column="29">(<pos:position pos:line="382" pos:column="30"/></operator><name pos:line="382" pos:column="30">char<pos:position pos:line="382" pos:column="34"/></name> <operator pos:line="382" pos:column="35">*<pos:position pos:line="382" pos:column="36"/></operator><operator pos:line="382" pos:column="36">)<pos:position pos:line="382" pos:column="37"/></operator><literal type="string" pos:line="382" pos:column="37">"invalid literal/lengths set"<pos:position pos:line="382" pos:column="66"/></literal></expr>;<pos:position pos:line="382" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="383" pos:column="17">state<pos:position pos:line="383" pos:column="22"/></name><operator pos:line="383" pos:column="22">-&gt;<pos:position pos:line="383" pos:column="27"/></operator><name pos:line="383" pos:column="24">mode<pos:position pos:line="383" pos:column="28"/></name></name> <operator pos:line="383" pos:column="29">=<pos:position pos:line="383" pos:column="30"/></operator> <name pos:line="383" pos:column="31">BAD<pos:position pos:line="383" pos:column="34"/></name></expr>;<pos:position pos:line="383" pos:column="35"/></expr_stmt>
                <break pos:line="384" pos:column="17">break;<pos:position pos:line="384" pos:column="23"/></break>
            }<pos:position pos:line="385" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="386" pos:column="13">state<pos:position pos:line="386" pos:column="18"/></name><operator pos:line="386" pos:column="18">-&gt;<pos:position pos:line="386" pos:column="23"/></operator><name pos:line="386" pos:column="20">distcode<pos:position pos:line="386" pos:column="28"/></name></name> <operator pos:line="386" pos:column="29">=<pos:position pos:line="386" pos:column="30"/></operator> <operator pos:line="386" pos:column="31">(<pos:position pos:line="386" pos:column="32"/></operator><name pos:line="386" pos:column="32">code<pos:position pos:line="386" pos:column="36"/></name> <specifier pos:line="386" pos:column="37">const<pos:position pos:line="386" pos:column="42"/></specifier> <name pos:line="386" pos:column="43">FAR<pos:position pos:line="386" pos:column="46"/></name> <operator pos:line="386" pos:column="47">*<pos:position pos:line="386" pos:column="48"/></operator><operator pos:line="386" pos:column="48">)<pos:position pos:line="386" pos:column="49"/></operator><operator pos:line="386" pos:column="49">(<pos:position pos:line="386" pos:column="50"/></operator><name><name pos:line="386" pos:column="50">state<pos:position pos:line="386" pos:column="55"/></name><operator pos:line="386" pos:column="55">-&gt;<pos:position pos:line="386" pos:column="60"/></operator><name pos:line="386" pos:column="57">next<pos:position pos:line="386" pos:column="61"/></name></name><operator pos:line="386" pos:column="61">)<pos:position pos:line="386" pos:column="62"/></operator></expr>;<pos:position pos:line="386" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="387" pos:column="13">state<pos:position pos:line="387" pos:column="18"/></name><operator pos:line="387" pos:column="18">-&gt;<pos:position pos:line="387" pos:column="23"/></operator><name pos:line="387" pos:column="20">distbits<pos:position pos:line="387" pos:column="28"/></name></name> <operator pos:line="387" pos:column="29">=<pos:position pos:line="387" pos:column="30"/></operator> <literal type="number" pos:line="387" pos:column="31">6<pos:position pos:line="387" pos:column="32"/></literal></expr>;<pos:position pos:line="387" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="388" pos:column="13">ret<pos:position pos:line="388" pos:column="16"/></name> <operator pos:line="388" pos:column="17">=<pos:position pos:line="388" pos:column="18"/></operator> <call><name pos:line="388" pos:column="19">inflate_table<pos:position pos:line="388" pos:column="32"/></name><argument_list pos:line="388" pos:column="32">(<argument><expr><name pos:line="388" pos:column="33">DISTS<pos:position pos:line="388" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="388" pos:column="40">state<pos:position pos:line="388" pos:column="45"/></name><operator pos:line="388" pos:column="45">-&gt;<pos:position pos:line="388" pos:column="50"/></operator><name pos:line="388" pos:column="47">lens<pos:position pos:line="388" pos:column="51"/></name></name> <operator pos:line="388" pos:column="52">+<pos:position pos:line="388" pos:column="53"/></operator> <name><name pos:line="388" pos:column="54">state<pos:position pos:line="388" pos:column="59"/></name><operator pos:line="388" pos:column="59">-&gt;<pos:position pos:line="388" pos:column="64"/></operator><name pos:line="388" pos:column="61">nlen<pos:position pos:line="388" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="388" pos:column="67">state<pos:position pos:line="388" pos:column="72"/></name><operator pos:line="388" pos:column="72">-&gt;<pos:position pos:line="388" pos:column="77"/></operator><name pos:line="388" pos:column="74">ndist<pos:position pos:line="388" pos:column="79"/></name></name></expr></argument>,
                            <argument><expr><operator pos:line="389" pos:column="29">&amp;<pos:position pos:line="389" pos:column="34"/></operator><operator pos:line="389" pos:column="30">(<pos:position pos:line="389" pos:column="31"/></operator><name><name pos:line="389" pos:column="31">state<pos:position pos:line="389" pos:column="36"/></name><operator pos:line="389" pos:column="36">-&gt;<pos:position pos:line="389" pos:column="41"/></operator><name pos:line="389" pos:column="38">next<pos:position pos:line="389" pos:column="42"/></name></name><operator pos:line="389" pos:column="42">)<pos:position pos:line="389" pos:column="43"/></operator></expr></argument>, <argument><expr><operator pos:line="389" pos:column="45">&amp;<pos:position pos:line="389" pos:column="50"/></operator><operator pos:line="389" pos:column="46">(<pos:position pos:line="389" pos:column="47"/></operator><name><name pos:line="389" pos:column="47">state<pos:position pos:line="389" pos:column="52"/></name><operator pos:line="389" pos:column="52">-&gt;<pos:position pos:line="389" pos:column="57"/></operator><name pos:line="389" pos:column="54">distbits<pos:position pos:line="389" pos:column="62"/></name></name><operator pos:line="389" pos:column="62">)<pos:position pos:line="389" pos:column="63"/></operator></expr></argument>, <argument><expr><name><name pos:line="389" pos:column="65">state<pos:position pos:line="389" pos:column="70"/></name><operator pos:line="389" pos:column="70">-&gt;<pos:position pos:line="389" pos:column="75"/></operator><name pos:line="389" pos:column="72">work<pos:position pos:line="389" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="389" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="78"/></expr_stmt>
            <if pos:line="390" pos:column="13">if <condition pos:line="390" pos:column="16">(<expr><name pos:line="390" pos:column="17">ret<pos:position pos:line="390" pos:column="20"/></name></expr>)<pos:position pos:line="390" pos:column="21"/></condition><then pos:line="390" pos:column="21"> <block pos:line="390" pos:column="22">{
                <expr_stmt><expr><name><name pos:line="391" pos:column="17">strm<pos:position pos:line="391" pos:column="21"/></name><operator pos:line="391" pos:column="21">-&gt;<pos:position pos:line="391" pos:column="26"/></operator><name pos:line="391" pos:column="23">msg<pos:position pos:line="391" pos:column="26"/></name></name> <operator pos:line="391" pos:column="27">=<pos:position pos:line="391" pos:column="28"/></operator> <operator pos:line="391" pos:column="29">(<pos:position pos:line="391" pos:column="30"/></operator><name pos:line="391" pos:column="30">char<pos:position pos:line="391" pos:column="34"/></name> <operator pos:line="391" pos:column="35">*<pos:position pos:line="391" pos:column="36"/></operator><operator pos:line="391" pos:column="36">)<pos:position pos:line="391" pos:column="37"/></operator><literal type="string" pos:line="391" pos:column="37">"invalid distances set"<pos:position pos:line="391" pos:column="60"/></literal></expr>;<pos:position pos:line="391" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="392" pos:column="17">state<pos:position pos:line="392" pos:column="22"/></name><operator pos:line="392" pos:column="22">-&gt;<pos:position pos:line="392" pos:column="27"/></operator><name pos:line="392" pos:column="24">mode<pos:position pos:line="392" pos:column="28"/></name></name> <operator pos:line="392" pos:column="29">=<pos:position pos:line="392" pos:column="30"/></operator> <name pos:line="392" pos:column="31">BAD<pos:position pos:line="392" pos:column="34"/></name></expr>;<pos:position pos:line="392" pos:column="35"/></expr_stmt>
                <break pos:line="393" pos:column="17">break;<pos:position pos:line="393" pos:column="23"/></break>
            }<pos:position pos:line="394" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="395" pos:column="13">Tracev<pos:position pos:line="395" pos:column="19"/></name><argument_list pos:line="395" pos:column="19">(<argument><expr><operator pos:line="395" pos:column="20">(<pos:position pos:line="395" pos:column="21"/></operator><name pos:line="395" pos:column="21">stderr<pos:position pos:line="395" pos:column="27"/></name><operator pos:line="395" pos:column="27">,<pos:position pos:line="395" pos:column="28"/></operator> <literal type="string" pos:line="395" pos:column="29">"inflate:       codes ok\n"<pos:position pos:line="395" pos:column="56"/></literal><operator pos:line="395" pos:column="56">)<pos:position pos:line="395" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="395" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="396" pos:column="13">state<pos:position pos:line="396" pos:column="18"/></name><operator pos:line="396" pos:column="18">-&gt;<pos:position pos:line="396" pos:column="23"/></operator><name pos:line="396" pos:column="20">mode<pos:position pos:line="396" pos:column="24"/></name></name> <operator pos:line="396" pos:column="25">=<pos:position pos:line="396" pos:column="26"/></operator> <name pos:line="396" pos:column="27">LEN<pos:position pos:line="396" pos:column="30"/></name></expr>;<pos:position pos:line="396" pos:column="31"/></expr_stmt>
        <case pos:line="397" pos:column="9">case <expr><name pos:line="397" pos:column="14">LEN<pos:position pos:line="397" pos:column="17"/></name></expr>:<pos:position pos:line="397" pos:column="18"/></case>
            <if pos:line="398" pos:column="13">if <condition pos:line="398" pos:column="16">(<expr><name pos:line="398" pos:column="17">have<pos:position pos:line="398" pos:column="21"/></name> <operator pos:line="398" pos:column="22">&gt;=<pos:position pos:line="398" pos:column="27"/></operator> <literal type="number" pos:line="398" pos:column="25">6<pos:position pos:line="398" pos:column="26"/></literal> <operator pos:line="398" pos:column="27">&amp;&amp;<pos:position pos:line="398" pos:column="37"/></operator> <name pos:line="398" pos:column="30">left<pos:position pos:line="398" pos:column="34"/></name> <operator pos:line="398" pos:column="35">&gt;=<pos:position pos:line="398" pos:column="40"/></operator> <literal type="number" pos:line="398" pos:column="38">258<pos:position pos:line="398" pos:column="41"/></literal></expr>)<pos:position pos:line="398" pos:column="42"/></condition><then pos:line="398" pos:column="42"> <block pos:line="398" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="399" pos:column="17">RESTORE<pos:position pos:line="399" pos:column="24"/></name><argument_list pos:line="399" pos:column="24">()<pos:position pos:line="399" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="399" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="400" pos:column="17">inflate_fast<pos:position pos:line="400" pos:column="29"/></name><argument_list pos:line="400" pos:column="29">(<argument><expr><name pos:line="400" pos:column="30">strm<pos:position pos:line="400" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="36">out<pos:position pos:line="400" pos:column="39"/></name></expr></argument>)<pos:position pos:line="400" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="401" pos:column="17">LOAD<pos:position pos:line="401" pos:column="21"/></name><argument_list pos:line="401" pos:column="21">()<pos:position pos:line="401" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="24"/></expr_stmt>
                <break pos:line="402" pos:column="17">break;<pos:position pos:line="402" pos:column="23"/></break>
            }<pos:position pos:line="403" pos:column="14"/></block></then></if>
            <for pos:line="404" pos:column="13">for <control pos:line="404" pos:column="17">(<init pos:line="404" pos:column="18">;<pos:position pos:line="404" pos:column="19"/></init><condition pos:line="404" pos:column="19">;<pos:position pos:line="404" pos:column="20"/></condition><incr/>)<pos:position pos:line="404" pos:column="21"/></control> <block pos:line="404" pos:column="22">{
                <expr_stmt><expr><name pos:line="405" pos:column="17">this<pos:position pos:line="405" pos:column="21"/></name> <operator pos:line="405" pos:column="22">=<pos:position pos:line="405" pos:column="23"/></operator> <name><name pos:line="405" pos:column="24">state<pos:position pos:line="405" pos:column="29"/></name><operator pos:line="405" pos:column="29">-&gt;<pos:position pos:line="405" pos:column="34"/></operator><name pos:line="405" pos:column="31">lencode<pos:position pos:line="405" pos:column="38"/></name><index pos:line="405" pos:column="38">[<expr><call><name pos:line="405" pos:column="39">BITS<pos:position pos:line="405" pos:column="43"/></name><argument_list pos:line="405" pos:column="43">(<argument><expr><name><name pos:line="405" pos:column="44">state<pos:position pos:line="405" pos:column="49"/></name><operator pos:line="405" pos:column="49">-&gt;<pos:position pos:line="405" pos:column="54"/></operator><name pos:line="405" pos:column="51">lenbits<pos:position pos:line="405" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="405" pos:column="59"/></argument_list></call></expr>]<pos:position pos:line="405" pos:column="60"/></index></name></expr>;<pos:position pos:line="405" pos:column="61"/></expr_stmt>
                <if pos:line="406" pos:column="17">if <condition pos:line="406" pos:column="20">(<expr><call pos:line="406" pos:column="21">(<name pos:line="406" pos:column="22">unsigned<pos:position pos:line="406" pos:column="30"/></name>)<argument_list pos:line="406" pos:column="31">(<argument><expr><name><name pos:line="406" pos:column="32">this<pos:position pos:line="406" pos:column="36"/></name><operator pos:line="406" pos:column="36">.<pos:position pos:line="406" pos:column="37"/></operator><name pos:line="406" pos:column="37">bits<pos:position pos:line="406" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="406" pos:column="42"/></argument_list></call> <operator pos:line="406" pos:column="43">&lt;=<pos:position pos:line="406" pos:column="48"/></operator> <name pos:line="406" pos:column="46">bits<pos:position pos:line="406" pos:column="50"/></name></expr>)<pos:position pos:line="406" pos:column="51"/></condition><then pos:line="406" pos:column="51"> <block type="pseudo"><break pos:line="406" pos:column="52">break;<pos:position pos:line="406" pos:column="58"/></break></block></then></if>
                <expr_stmt><expr><call><name pos:line="407" pos:column="17">PULLBYTE<pos:position pos:line="407" pos:column="25"/></name><argument_list pos:line="407" pos:column="25">()<pos:position pos:line="407" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="408" pos:column="14"/></block></for>
            <if pos:line="409" pos:column="13">if <condition pos:line="409" pos:column="16">(<expr><name><name pos:line="409" pos:column="17">this<pos:position pos:line="409" pos:column="21"/></name><operator pos:line="409" pos:column="21">.<pos:position pos:line="409" pos:column="22"/></operator><name pos:line="409" pos:column="22">op<pos:position pos:line="409" pos:column="24"/></name></name> <operator pos:line="409" pos:column="25">&amp;&amp;<pos:position pos:line="409" pos:column="35"/></operator> <operator pos:line="409" pos:column="28">(<pos:position pos:line="409" pos:column="29"/></operator><name><name pos:line="409" pos:column="29">this<pos:position pos:line="409" pos:column="33"/></name><operator pos:line="409" pos:column="33">.<pos:position pos:line="409" pos:column="34"/></operator><name pos:line="409" pos:column="34">op<pos:position pos:line="409" pos:column="36"/></name></name> <operator pos:line="409" pos:column="37">&amp;<pos:position pos:line="409" pos:column="42"/></operator> <literal type="number" pos:line="409" pos:column="39">0xf0<pos:position pos:line="409" pos:column="43"/></literal><operator pos:line="409" pos:column="43">)<pos:position pos:line="409" pos:column="44"/></operator> <operator pos:line="409" pos:column="45">==<pos:position pos:line="409" pos:column="47"/></operator> <literal type="number" pos:line="409" pos:column="48">0<pos:position pos:line="409" pos:column="49"/></literal></expr>)<pos:position pos:line="409" pos:column="50"/></condition><then pos:line="409" pos:column="50"> <block pos:line="409" pos:column="51">{
                <expr_stmt><expr><name pos:line="410" pos:column="17">last<pos:position pos:line="410" pos:column="21"/></name> <operator pos:line="410" pos:column="22">=<pos:position pos:line="410" pos:column="23"/></operator> <name pos:line="410" pos:column="24">this<pos:position pos:line="410" pos:column="28"/></name></expr>;<pos:position pos:line="410" pos:column="29"/></expr_stmt>
                <for pos:line="411" pos:column="17">for <control pos:line="411" pos:column="21">(<init pos:line="411" pos:column="22">;<pos:position pos:line="411" pos:column="23"/></init><condition pos:line="411" pos:column="23">;<pos:position pos:line="411" pos:column="24"/></condition><incr/>)<pos:position pos:line="411" pos:column="25"/></control> <block pos:line="411" pos:column="26">{
                    <expr_stmt><expr><name pos:line="412" pos:column="21">this<pos:position pos:line="412" pos:column="25"/></name> <operator pos:line="412" pos:column="26">=<pos:position pos:line="412" pos:column="27"/></operator> <name><name pos:line="412" pos:column="28">state<pos:position pos:line="412" pos:column="33"/></name><operator pos:line="412" pos:column="33">-&gt;<pos:position pos:line="412" pos:column="38"/></operator><name pos:line="412" pos:column="35">lencode<pos:position pos:line="412" pos:column="42"/></name><index pos:line="412" pos:column="42">[<expr><name><name pos:line="412" pos:column="43">last<pos:position pos:line="412" pos:column="47"/></name><operator pos:line="412" pos:column="47">.<pos:position pos:line="412" pos:column="48"/></operator><name pos:line="412" pos:column="48">val<pos:position pos:line="412" pos:column="51"/></name></name> <operator pos:line="412" pos:column="52">+<pos:position pos:line="412" pos:column="53"/></operator>
                            <operator pos:line="413" pos:column="29">(<pos:position pos:line="413" pos:column="30"/></operator><call><name pos:line="413" pos:column="30">BITS<pos:position pos:line="413" pos:column="34"/></name><argument_list pos:line="413" pos:column="34">(<argument><expr><name><name pos:line="413" pos:column="35">last<pos:position pos:line="413" pos:column="39"/></name><operator pos:line="413" pos:column="39">.<pos:position pos:line="413" pos:column="40"/></operator><name pos:line="413" pos:column="40">bits<pos:position pos:line="413" pos:column="44"/></name></name> <operator pos:line="413" pos:column="45">+<pos:position pos:line="413" pos:column="46"/></operator> <name><name pos:line="413" pos:column="47">last<pos:position pos:line="413" pos:column="51"/></name><operator pos:line="413" pos:column="51">.<pos:position pos:line="413" pos:column="52"/></operator><name pos:line="413" pos:column="52">op<pos:position pos:line="413" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="413" pos:column="55"/></argument_list></call> <operator pos:line="413" pos:column="56">&gt;&gt;<pos:position pos:line="413" pos:column="61"/></operator> <name><name pos:line="413" pos:column="59">last<pos:position pos:line="413" pos:column="63"/></name><operator pos:line="413" pos:column="63">.<pos:position pos:line="413" pos:column="64"/></operator><name pos:line="413" pos:column="64">bits<pos:position pos:line="413" pos:column="68"/></name></name><operator pos:line="413" pos:column="68">)<pos:position pos:line="413" pos:column="69"/></operator></expr>]<pos:position pos:line="413" pos:column="70"/></index></name></expr>;<pos:position pos:line="413" pos:column="71"/></expr_stmt>
                    <if pos:line="414" pos:column="21">if <condition pos:line="414" pos:column="24">(<expr><call pos:line="414" pos:column="25">(<name pos:line="414" pos:column="26">unsigned<pos:position pos:line="414" pos:column="34"/></name>)<argument_list pos:line="414" pos:column="35">(<argument><expr><name><name pos:line="414" pos:column="36">last<pos:position pos:line="414" pos:column="40"/></name><operator pos:line="414" pos:column="40">.<pos:position pos:line="414" pos:column="41"/></operator><name pos:line="414" pos:column="41">bits<pos:position pos:line="414" pos:column="45"/></name></name> <operator pos:line="414" pos:column="46">+<pos:position pos:line="414" pos:column="47"/></operator> <name><name pos:line="414" pos:column="48">this<pos:position pos:line="414" pos:column="52"/></name><operator pos:line="414" pos:column="52">.<pos:position pos:line="414" pos:column="53"/></operator><name pos:line="414" pos:column="53">bits<pos:position pos:line="414" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="414" pos:column="58"/></argument_list></call> <operator pos:line="414" pos:column="59">&lt;=<pos:position pos:line="414" pos:column="64"/></operator> <name pos:line="414" pos:column="62">bits<pos:position pos:line="414" pos:column="66"/></name></expr>)<pos:position pos:line="414" pos:column="67"/></condition><then pos:line="414" pos:column="67"> <block type="pseudo"><break pos:line="414" pos:column="68">break;<pos:position pos:line="414" pos:column="74"/></break></block></then></if>
                    <expr_stmt><expr><call><name pos:line="415" pos:column="21">PULLBYTE<pos:position pos:line="415" pos:column="29"/></name><argument_list pos:line="415" pos:column="29">()<pos:position pos:line="415" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="416" pos:column="18"/></block></for>
                <expr_stmt><expr><call><name pos:line="417" pos:column="17">DROPBITS<pos:position pos:line="417" pos:column="25"/></name><argument_list pos:line="417" pos:column="25">(<argument><expr><name><name pos:line="417" pos:column="26">last<pos:position pos:line="417" pos:column="30"/></name><operator pos:line="417" pos:column="30">.<pos:position pos:line="417" pos:column="31"/></operator><name pos:line="417" pos:column="31">bits<pos:position pos:line="417" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="417" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="418" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="419" pos:column="13">DROPBITS<pos:position pos:line="419" pos:column="21"/></name><argument_list pos:line="419" pos:column="21">(<argument><expr><name><name pos:line="419" pos:column="22">this<pos:position pos:line="419" pos:column="26"/></name><operator pos:line="419" pos:column="26">.<pos:position pos:line="419" pos:column="27"/></operator><name pos:line="419" pos:column="27">bits<pos:position pos:line="419" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="419" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="420" pos:column="13">state<pos:position pos:line="420" pos:column="18"/></name><operator pos:line="420" pos:column="18">-&gt;<pos:position pos:line="420" pos:column="23"/></operator><name pos:line="420" pos:column="20">length<pos:position pos:line="420" pos:column="26"/></name></name> <operator pos:line="420" pos:column="27">=<pos:position pos:line="420" pos:column="28"/></operator> <operator pos:line="420" pos:column="29">(<pos:position pos:line="420" pos:column="30"/></operator><name pos:line="420" pos:column="30">unsigned<pos:position pos:line="420" pos:column="38"/></name><operator pos:line="420" pos:column="38">)<pos:position pos:line="420" pos:column="39"/></operator><name><name pos:line="420" pos:column="39">this<pos:position pos:line="420" pos:column="43"/></name><operator pos:line="420" pos:column="43">.<pos:position pos:line="420" pos:column="44"/></operator><name pos:line="420" pos:column="44">val<pos:position pos:line="420" pos:column="47"/></name></name></expr>;<pos:position pos:line="420" pos:column="48"/></expr_stmt>
            <if pos:line="421" pos:column="13">if <condition pos:line="421" pos:column="16">(<expr><call pos:line="421" pos:column="17">(<name pos:line="421" pos:column="18">int<pos:position pos:line="421" pos:column="21"/></name>)<argument_list pos:line="421" pos:column="22">(<argument><expr><name><name pos:line="421" pos:column="23">this<pos:position pos:line="421" pos:column="27"/></name><operator pos:line="421" pos:column="27">.<pos:position pos:line="421" pos:column="28"/></operator><name pos:line="421" pos:column="28">op<pos:position pos:line="421" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="421" pos:column="31"/></argument_list></call> <operator pos:line="421" pos:column="32">==<pos:position pos:line="421" pos:column="34"/></operator> <literal type="number" pos:line="421" pos:column="35">0<pos:position pos:line="421" pos:column="36"/></literal></expr>)<pos:position pos:line="421" pos:column="37"/></condition><then pos:line="421" pos:column="37"> <block pos:line="421" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="422" pos:column="17">Tracevv<pos:position pos:line="422" pos:column="24"/></name><argument_list pos:line="422" pos:column="24">(<argument><expr><operator pos:line="422" pos:column="25">(<pos:position pos:line="422" pos:column="26"/></operator><name pos:line="422" pos:column="26">stderr<pos:position pos:line="422" pos:column="32"/></name><operator pos:line="422" pos:column="32">,<pos:position pos:line="422" pos:column="33"/></operator> <ternary><condition><expr><name><name pos:line="422" pos:column="34">this<pos:position pos:line="422" pos:column="38"/></name><operator pos:line="422" pos:column="38">.<pos:position pos:line="422" pos:column="39"/></operator><name pos:line="422" pos:column="39">val<pos:position pos:line="422" pos:column="42"/></name></name> <operator pos:line="422" pos:column="43">&gt;=<pos:position pos:line="422" pos:column="48"/></operator> <literal type="number" pos:line="422" pos:column="46">0x20<pos:position pos:line="422" pos:column="50"/></literal> <operator pos:line="422" pos:column="51">&amp;&amp;<pos:position pos:line="422" pos:column="61"/></operator> <name><name pos:line="422" pos:column="54">this<pos:position pos:line="422" pos:column="58"/></name><operator pos:line="422" pos:column="58">.<pos:position pos:line="422" pos:column="59"/></operator><name pos:line="422" pos:column="59">val<pos:position pos:line="422" pos:column="62"/></name></name> <operator pos:line="422" pos:column="63">&lt;<pos:position pos:line="422" pos:column="67"/></operator> <literal type="number" pos:line="422" pos:column="65">0x7f<pos:position pos:line="422" pos:column="69"/></literal></expr> ?<pos:position pos:line="422" pos:column="71"/></condition><then pos:line="422" pos:column="71">
                        <expr><literal type="string" pos:line="423" pos:column="25">"inflate:         literal '%c'\n"<pos:position pos:line="423" pos:column="58"/></literal></expr> <pos:position pos:line="423" pos:column="59"/></then><else pos:line="423" pos:column="59">:
                        <expr><literal type="string" pos:line="424" pos:column="25">"inflate:         literal 0x%02x\n"<pos:position pos:line="424" pos:column="60"/></literal></expr></else></ternary><operator pos:line="424" pos:column="60">,<pos:position pos:line="424" pos:column="61"/></operator> <name><name pos:line="424" pos:column="62">this<pos:position pos:line="424" pos:column="66"/></name><operator pos:line="424" pos:column="66">.<pos:position pos:line="424" pos:column="67"/></operator><name pos:line="424" pos:column="67">val<pos:position pos:line="424" pos:column="70"/></name></name><operator pos:line="424" pos:column="70">)<pos:position pos:line="424" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="424" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="425" pos:column="17">state<pos:position pos:line="425" pos:column="22"/></name><operator pos:line="425" pos:column="22">-&gt;<pos:position pos:line="425" pos:column="27"/></operator><name pos:line="425" pos:column="24">mode<pos:position pos:line="425" pos:column="28"/></name></name> <operator pos:line="425" pos:column="29">=<pos:position pos:line="425" pos:column="30"/></operator> <name pos:line="425" pos:column="31">LIT<pos:position pos:line="425" pos:column="34"/></name></expr>;<pos:position pos:line="425" pos:column="35"/></expr_stmt>
                <break pos:line="426" pos:column="17">break;<pos:position pos:line="426" pos:column="23"/></break>
            }<pos:position pos:line="427" pos:column="14"/></block></then></if>
            <if pos:line="428" pos:column="13">if <condition pos:line="428" pos:column="16">(<expr><name><name pos:line="428" pos:column="17">this<pos:position pos:line="428" pos:column="21"/></name><operator pos:line="428" pos:column="21">.<pos:position pos:line="428" pos:column="22"/></operator><name pos:line="428" pos:column="22">op<pos:position pos:line="428" pos:column="24"/></name></name> <operator pos:line="428" pos:column="25">&amp;<pos:position pos:line="428" pos:column="30"/></operator> <literal type="number" pos:line="428" pos:column="27">32<pos:position pos:line="428" pos:column="29"/></literal></expr>)<pos:position pos:line="428" pos:column="30"/></condition><then pos:line="428" pos:column="30"> <block pos:line="428" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="429" pos:column="17">Tracevv<pos:position pos:line="429" pos:column="24"/></name><argument_list pos:line="429" pos:column="24">(<argument><expr><operator pos:line="429" pos:column="25">(<pos:position pos:line="429" pos:column="26"/></operator><name pos:line="429" pos:column="26">stderr<pos:position pos:line="429" pos:column="32"/></name><operator pos:line="429" pos:column="32">,<pos:position pos:line="429" pos:column="33"/></operator> <literal type="string" pos:line="429" pos:column="34">"inflate:         end of block\n"<pos:position pos:line="429" pos:column="67"/></literal><operator pos:line="429" pos:column="67">)<pos:position pos:line="429" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="429" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="430" pos:column="17">state<pos:position pos:line="430" pos:column="22"/></name><operator pos:line="430" pos:column="22">-&gt;<pos:position pos:line="430" pos:column="27"/></operator><name pos:line="430" pos:column="24">mode<pos:position pos:line="430" pos:column="28"/></name></name> <operator pos:line="430" pos:column="29">=<pos:position pos:line="430" pos:column="30"/></operator> <name pos:line="430" pos:column="31">TYPE<pos:position pos:line="430" pos:column="35"/></name></expr>;<pos:position pos:line="430" pos:column="36"/></expr_stmt>
                <break pos:line="431" pos:column="17">break;<pos:position pos:line="431" pos:column="23"/></break>
            }<pos:position pos:line="432" pos:column="14"/></block></then></if>
            <if pos:line="433" pos:column="13">if <condition pos:line="433" pos:column="16">(<expr><name><name pos:line="433" pos:column="17">this<pos:position pos:line="433" pos:column="21"/></name><operator pos:line="433" pos:column="21">.<pos:position pos:line="433" pos:column="22"/></operator><name pos:line="433" pos:column="22">op<pos:position pos:line="433" pos:column="24"/></name></name> <operator pos:line="433" pos:column="25">&amp;<pos:position pos:line="433" pos:column="30"/></operator> <literal type="number" pos:line="433" pos:column="27">64<pos:position pos:line="433" pos:column="29"/></literal></expr>)<pos:position pos:line="433" pos:column="30"/></condition><then pos:line="433" pos:column="30"> <block pos:line="433" pos:column="31">{
                <expr_stmt><expr><name><name pos:line="434" pos:column="17">strm<pos:position pos:line="434" pos:column="21"/></name><operator pos:line="434" pos:column="21">-&gt;<pos:position pos:line="434" pos:column="26"/></operator><name pos:line="434" pos:column="23">msg<pos:position pos:line="434" pos:column="26"/></name></name> <operator pos:line="434" pos:column="27">=<pos:position pos:line="434" pos:column="28"/></operator> <operator pos:line="434" pos:column="29">(<pos:position pos:line="434" pos:column="30"/></operator><name pos:line="434" pos:column="30">char<pos:position pos:line="434" pos:column="34"/></name> <operator pos:line="434" pos:column="35">*<pos:position pos:line="434" pos:column="36"/></operator><operator pos:line="434" pos:column="36">)<pos:position pos:line="434" pos:column="37"/></operator><literal type="string" pos:line="434" pos:column="37">"invalid literal/length code"<pos:position pos:line="434" pos:column="66"/></literal></expr>;<pos:position pos:line="434" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="435" pos:column="17">state<pos:position pos:line="435" pos:column="22"/></name><operator pos:line="435" pos:column="22">-&gt;<pos:position pos:line="435" pos:column="27"/></operator><name pos:line="435" pos:column="24">mode<pos:position pos:line="435" pos:column="28"/></name></name> <operator pos:line="435" pos:column="29">=<pos:position pos:line="435" pos:column="30"/></operator> <name pos:line="435" pos:column="31">BAD<pos:position pos:line="435" pos:column="34"/></name></expr>;<pos:position pos:line="435" pos:column="35"/></expr_stmt>
                <break pos:line="436" pos:column="17">break;<pos:position pos:line="436" pos:column="23"/></break>
            }<pos:position pos:line="437" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="438" pos:column="13">state<pos:position pos:line="438" pos:column="18"/></name><operator pos:line="438" pos:column="18">-&gt;<pos:position pos:line="438" pos:column="23"/></operator><name pos:line="438" pos:column="20">extra<pos:position pos:line="438" pos:column="25"/></name></name> <operator pos:line="438" pos:column="26">=<pos:position pos:line="438" pos:column="27"/></operator> <call pos:line="438" pos:column="28">(<name pos:line="438" pos:column="29">unsigned<pos:position pos:line="438" pos:column="37"/></name>)<argument_list pos:line="438" pos:column="38">(<argument><expr><name><name pos:line="438" pos:column="39">this<pos:position pos:line="438" pos:column="43"/></name><operator pos:line="438" pos:column="43">.<pos:position pos:line="438" pos:column="44"/></operator><name pos:line="438" pos:column="44">op<pos:position pos:line="438" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="438" pos:column="47"/></argument_list></call> <operator pos:line="438" pos:column="48">&amp;<pos:position pos:line="438" pos:column="53"/></operator> <literal type="number" pos:line="438" pos:column="50">15<pos:position pos:line="438" pos:column="52"/></literal></expr>;<pos:position pos:line="438" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="439" pos:column="13">state<pos:position pos:line="439" pos:column="18"/></name><operator pos:line="439" pos:column="18">-&gt;<pos:position pos:line="439" pos:column="23"/></operator><name pos:line="439" pos:column="20">mode<pos:position pos:line="439" pos:column="24"/></name></name> <operator pos:line="439" pos:column="25">=<pos:position pos:line="439" pos:column="26"/></operator> <name pos:line="439" pos:column="27">LENEXT<pos:position pos:line="439" pos:column="33"/></name></expr>;<pos:position pos:line="439" pos:column="34"/></expr_stmt>
        <case pos:line="440" pos:column="9">case <expr><name pos:line="440" pos:column="14">LENEXT<pos:position pos:line="440" pos:column="20"/></name></expr>:<pos:position pos:line="440" pos:column="21"/></case>
            <if pos:line="441" pos:column="13">if <condition pos:line="441" pos:column="16">(<expr><name><name pos:line="441" pos:column="17">state<pos:position pos:line="441" pos:column="22"/></name><operator pos:line="441" pos:column="22">-&gt;<pos:position pos:line="441" pos:column="27"/></operator><name pos:line="441" pos:column="24">extra<pos:position pos:line="441" pos:column="29"/></name></name></expr>)<pos:position pos:line="441" pos:column="30"/></condition><then pos:line="441" pos:column="30"> <block pos:line="441" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="442" pos:column="17">NEEDBITS<pos:position pos:line="442" pos:column="25"/></name><argument_list pos:line="442" pos:column="25">(<argument><expr><name><name pos:line="442" pos:column="26">state<pos:position pos:line="442" pos:column="31"/></name><operator pos:line="442" pos:column="31">-&gt;<pos:position pos:line="442" pos:column="36"/></operator><name pos:line="442" pos:column="33">extra<pos:position pos:line="442" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="442" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="443" pos:column="17">state<pos:position pos:line="443" pos:column="22"/></name><operator pos:line="443" pos:column="22">-&gt;<pos:position pos:line="443" pos:column="27"/></operator><name pos:line="443" pos:column="24">length<pos:position pos:line="443" pos:column="30"/></name></name> <operator pos:line="443" pos:column="31">+=<pos:position pos:line="443" pos:column="33"/></operator> <call><name pos:line="443" pos:column="34">BITS<pos:position pos:line="443" pos:column="38"/></name><argument_list pos:line="443" pos:column="38">(<argument><expr><name><name pos:line="443" pos:column="39">state<pos:position pos:line="443" pos:column="44"/></name><operator pos:line="443" pos:column="44">-&gt;<pos:position pos:line="443" pos:column="49"/></operator><name pos:line="443" pos:column="46">extra<pos:position pos:line="443" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="443" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="444" pos:column="17">DROPBITS<pos:position pos:line="444" pos:column="25"/></name><argument_list pos:line="444" pos:column="25">(<argument><expr><name><name pos:line="444" pos:column="26">state<pos:position pos:line="444" pos:column="31"/></name><operator pos:line="444" pos:column="31">-&gt;<pos:position pos:line="444" pos:column="36"/></operator><name pos:line="444" pos:column="33">extra<pos:position pos:line="444" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="444" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="445" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="446" pos:column="13">Tracevv<pos:position pos:line="446" pos:column="20"/></name><argument_list pos:line="446" pos:column="20">(<argument><expr><operator pos:line="446" pos:column="21">(<pos:position pos:line="446" pos:column="22"/></operator><name pos:line="446" pos:column="22">stderr<pos:position pos:line="446" pos:column="28"/></name><operator pos:line="446" pos:column="28">,<pos:position pos:line="446" pos:column="29"/></operator> <literal type="string" pos:line="446" pos:column="30">"inflate:         length %u\n"<pos:position pos:line="446" pos:column="60"/></literal><operator pos:line="446" pos:column="60">,<pos:position pos:line="446" pos:column="61"/></operator> <name><name pos:line="446" pos:column="62">state<pos:position pos:line="446" pos:column="67"/></name><operator pos:line="446" pos:column="67">-&gt;<pos:position pos:line="446" pos:column="72"/></operator><name pos:line="446" pos:column="69">length<pos:position pos:line="446" pos:column="75"/></name></name><operator pos:line="446" pos:column="75">)<pos:position pos:line="446" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="446" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="447" pos:column="13">state<pos:position pos:line="447" pos:column="18"/></name><operator pos:line="447" pos:column="18">-&gt;<pos:position pos:line="447" pos:column="23"/></operator><name pos:line="447" pos:column="20">mode<pos:position pos:line="447" pos:column="24"/></name></name> <operator pos:line="447" pos:column="25">=<pos:position pos:line="447" pos:column="26"/></operator> <name pos:line="447" pos:column="27">DIST<pos:position pos:line="447" pos:column="31"/></name></expr>;<pos:position pos:line="447" pos:column="32"/></expr_stmt>
        <case pos:line="448" pos:column="9">case <expr><name pos:line="448" pos:column="14">DIST<pos:position pos:line="448" pos:column="18"/></name></expr>:<pos:position pos:line="448" pos:column="19"/></case>
            <for pos:line="449" pos:column="13">for <control pos:line="449" pos:column="17">(<init pos:line="449" pos:column="18">;<pos:position pos:line="449" pos:column="19"/></init><condition pos:line="449" pos:column="19">;<pos:position pos:line="449" pos:column="20"/></condition><incr/>)<pos:position pos:line="449" pos:column="21"/></control> <block pos:line="449" pos:column="22">{
                <expr_stmt><expr><name pos:line="450" pos:column="17">this<pos:position pos:line="450" pos:column="21"/></name> <operator pos:line="450" pos:column="22">=<pos:position pos:line="450" pos:column="23"/></operator> <name><name pos:line="450" pos:column="24">state<pos:position pos:line="450" pos:column="29"/></name><operator pos:line="450" pos:column="29">-&gt;<pos:position pos:line="450" pos:column="34"/></operator><name pos:line="450" pos:column="31">distcode<pos:position pos:line="450" pos:column="39"/></name><index pos:line="450" pos:column="39">[<expr><call><name pos:line="450" pos:column="40">BITS<pos:position pos:line="450" pos:column="44"/></name><argument_list pos:line="450" pos:column="44">(<argument><expr><name><name pos:line="450" pos:column="45">state<pos:position pos:line="450" pos:column="50"/></name><operator pos:line="450" pos:column="50">-&gt;<pos:position pos:line="450" pos:column="55"/></operator><name pos:line="450" pos:column="52">distbits<pos:position pos:line="450" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="450" pos:column="61"/></argument_list></call></expr>]<pos:position pos:line="450" pos:column="62"/></index></name></expr>;<pos:position pos:line="450" pos:column="63"/></expr_stmt>
                <if pos:line="451" pos:column="17">if <condition pos:line="451" pos:column="20">(<expr><call pos:line="451" pos:column="21">(<name pos:line="451" pos:column="22">unsigned<pos:position pos:line="451" pos:column="30"/></name>)<argument_list pos:line="451" pos:column="31">(<argument><expr><name><name pos:line="451" pos:column="32">this<pos:position pos:line="451" pos:column="36"/></name><operator pos:line="451" pos:column="36">.<pos:position pos:line="451" pos:column="37"/></operator><name pos:line="451" pos:column="37">bits<pos:position pos:line="451" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="451" pos:column="42"/></argument_list></call> <operator pos:line="451" pos:column="43">&lt;=<pos:position pos:line="451" pos:column="48"/></operator> <name pos:line="451" pos:column="46">bits<pos:position pos:line="451" pos:column="50"/></name></expr>)<pos:position pos:line="451" pos:column="51"/></condition><then pos:line="451" pos:column="51"> <block type="pseudo"><break pos:line="451" pos:column="52">break;<pos:position pos:line="451" pos:column="58"/></break></block></then></if>
                <expr_stmt><expr><call><name pos:line="452" pos:column="17">PULLBYTE<pos:position pos:line="452" pos:column="25"/></name><argument_list pos:line="452" pos:column="25">()<pos:position pos:line="452" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="453" pos:column="14"/></block></for>
            <if pos:line="454" pos:column="13">if <condition pos:line="454" pos:column="16">(<expr><operator pos:line="454" pos:column="17">(<pos:position pos:line="454" pos:column="18"/></operator><name><name pos:line="454" pos:column="18">this<pos:position pos:line="454" pos:column="22"/></name><operator pos:line="454" pos:column="22">.<pos:position pos:line="454" pos:column="23"/></operator><name pos:line="454" pos:column="23">op<pos:position pos:line="454" pos:column="25"/></name></name> <operator pos:line="454" pos:column="26">&amp;<pos:position pos:line="454" pos:column="31"/></operator> <literal type="number" pos:line="454" pos:column="28">0xf0<pos:position pos:line="454" pos:column="32"/></literal><operator pos:line="454" pos:column="32">)<pos:position pos:line="454" pos:column="33"/></operator> <operator pos:line="454" pos:column="34">==<pos:position pos:line="454" pos:column="36"/></operator> <literal type="number" pos:line="454" pos:column="37">0<pos:position pos:line="454" pos:column="38"/></literal></expr>)<pos:position pos:line="454" pos:column="39"/></condition><then pos:line="454" pos:column="39"> <block pos:line="454" pos:column="40">{
                <expr_stmt><expr><name pos:line="455" pos:column="17">last<pos:position pos:line="455" pos:column="21"/></name> <operator pos:line="455" pos:column="22">=<pos:position pos:line="455" pos:column="23"/></operator> <name pos:line="455" pos:column="24">this<pos:position pos:line="455" pos:column="28"/></name></expr>;<pos:position pos:line="455" pos:column="29"/></expr_stmt>
                <for pos:line="456" pos:column="17">for <control pos:line="456" pos:column="21">(<init pos:line="456" pos:column="22">;<pos:position pos:line="456" pos:column="23"/></init><condition pos:line="456" pos:column="23">;<pos:position pos:line="456" pos:column="24"/></condition><incr/>)<pos:position pos:line="456" pos:column="25"/></control> <block pos:line="456" pos:column="26">{
                    <expr_stmt><expr><name pos:line="457" pos:column="21">this<pos:position pos:line="457" pos:column="25"/></name> <operator pos:line="457" pos:column="26">=<pos:position pos:line="457" pos:column="27"/></operator> <name><name pos:line="457" pos:column="28">state<pos:position pos:line="457" pos:column="33"/></name><operator pos:line="457" pos:column="33">-&gt;<pos:position pos:line="457" pos:column="38"/></operator><name pos:line="457" pos:column="35">distcode<pos:position pos:line="457" pos:column="43"/></name><index pos:line="457" pos:column="43">[<expr><name><name pos:line="457" pos:column="44">last<pos:position pos:line="457" pos:column="48"/></name><operator pos:line="457" pos:column="48">.<pos:position pos:line="457" pos:column="49"/></operator><name pos:line="457" pos:column="49">val<pos:position pos:line="457" pos:column="52"/></name></name> <operator pos:line="457" pos:column="53">+<pos:position pos:line="457" pos:column="54"/></operator>
                            <operator pos:line="458" pos:column="29">(<pos:position pos:line="458" pos:column="30"/></operator><call><name pos:line="458" pos:column="30">BITS<pos:position pos:line="458" pos:column="34"/></name><argument_list pos:line="458" pos:column="34">(<argument><expr><name><name pos:line="458" pos:column="35">last<pos:position pos:line="458" pos:column="39"/></name><operator pos:line="458" pos:column="39">.<pos:position pos:line="458" pos:column="40"/></operator><name pos:line="458" pos:column="40">bits<pos:position pos:line="458" pos:column="44"/></name></name> <operator pos:line="458" pos:column="45">+<pos:position pos:line="458" pos:column="46"/></operator> <name><name pos:line="458" pos:column="47">last<pos:position pos:line="458" pos:column="51"/></name><operator pos:line="458" pos:column="51">.<pos:position pos:line="458" pos:column="52"/></operator><name pos:line="458" pos:column="52">op<pos:position pos:line="458" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="458" pos:column="55"/></argument_list></call> <operator pos:line="458" pos:column="56">&gt;&gt;<pos:position pos:line="458" pos:column="61"/></operator> <name><name pos:line="458" pos:column="59">last<pos:position pos:line="458" pos:column="63"/></name><operator pos:line="458" pos:column="63">.<pos:position pos:line="458" pos:column="64"/></operator><name pos:line="458" pos:column="64">bits<pos:position pos:line="458" pos:column="68"/></name></name><operator pos:line="458" pos:column="68">)<pos:position pos:line="458" pos:column="69"/></operator></expr>]<pos:position pos:line="458" pos:column="70"/></index></name></expr>;<pos:position pos:line="458" pos:column="71"/></expr_stmt>
                    <if pos:line="459" pos:column="21">if <condition pos:line="459" pos:column="24">(<expr><call pos:line="459" pos:column="25">(<name pos:line="459" pos:column="26">unsigned<pos:position pos:line="459" pos:column="34"/></name>)<argument_list pos:line="459" pos:column="35">(<argument><expr><name><name pos:line="459" pos:column="36">last<pos:position pos:line="459" pos:column="40"/></name><operator pos:line="459" pos:column="40">.<pos:position pos:line="459" pos:column="41"/></operator><name pos:line="459" pos:column="41">bits<pos:position pos:line="459" pos:column="45"/></name></name> <operator pos:line="459" pos:column="46">+<pos:position pos:line="459" pos:column="47"/></operator> <name><name pos:line="459" pos:column="48">this<pos:position pos:line="459" pos:column="52"/></name><operator pos:line="459" pos:column="52">.<pos:position pos:line="459" pos:column="53"/></operator><name pos:line="459" pos:column="53">bits<pos:position pos:line="459" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="459" pos:column="58"/></argument_list></call> <operator pos:line="459" pos:column="59">&lt;=<pos:position pos:line="459" pos:column="64"/></operator> <name pos:line="459" pos:column="62">bits<pos:position pos:line="459" pos:column="66"/></name></expr>)<pos:position pos:line="459" pos:column="67"/></condition><then pos:line="459" pos:column="67"> <block type="pseudo"><break pos:line="459" pos:column="68">break;<pos:position pos:line="459" pos:column="74"/></break></block></then></if>
                    <expr_stmt><expr><call><name pos:line="460" pos:column="21">PULLBYTE<pos:position pos:line="460" pos:column="29"/></name><argument_list pos:line="460" pos:column="29">()<pos:position pos:line="460" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="461" pos:column="18"/></block></for>
                <expr_stmt><expr><call><name pos:line="462" pos:column="17">DROPBITS<pos:position pos:line="462" pos:column="25"/></name><argument_list pos:line="462" pos:column="25">(<argument><expr><name><name pos:line="462" pos:column="26">last<pos:position pos:line="462" pos:column="30"/></name><operator pos:line="462" pos:column="30">.<pos:position pos:line="462" pos:column="31"/></operator><name pos:line="462" pos:column="31">bits<pos:position pos:line="462" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="462" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="463" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="464" pos:column="13">DROPBITS<pos:position pos:line="464" pos:column="21"/></name><argument_list pos:line="464" pos:column="21">(<argument><expr><name><name pos:line="464" pos:column="22">this<pos:position pos:line="464" pos:column="26"/></name><operator pos:line="464" pos:column="26">.<pos:position pos:line="464" pos:column="27"/></operator><name pos:line="464" pos:column="27">bits<pos:position pos:line="464" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="464" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="464" pos:column="33"/></expr_stmt>
            <if pos:line="465" pos:column="13">if <condition pos:line="465" pos:column="16">(<expr><name><name pos:line="465" pos:column="17">this<pos:position pos:line="465" pos:column="21"/></name><operator pos:line="465" pos:column="21">.<pos:position pos:line="465" pos:column="22"/></operator><name pos:line="465" pos:column="22">op<pos:position pos:line="465" pos:column="24"/></name></name> <operator pos:line="465" pos:column="25">&amp;<pos:position pos:line="465" pos:column="30"/></operator> <literal type="number" pos:line="465" pos:column="27">64<pos:position pos:line="465" pos:column="29"/></literal></expr>)<pos:position pos:line="465" pos:column="30"/></condition><then pos:line="465" pos:column="30"> <block pos:line="465" pos:column="31">{
                <expr_stmt><expr><name><name pos:line="466" pos:column="17">strm<pos:position pos:line="466" pos:column="21"/></name><operator pos:line="466" pos:column="21">-&gt;<pos:position pos:line="466" pos:column="26"/></operator><name pos:line="466" pos:column="23">msg<pos:position pos:line="466" pos:column="26"/></name></name> <operator pos:line="466" pos:column="27">=<pos:position pos:line="466" pos:column="28"/></operator> <operator pos:line="466" pos:column="29">(<pos:position pos:line="466" pos:column="30"/></operator><name pos:line="466" pos:column="30">char<pos:position pos:line="466" pos:column="34"/></name> <operator pos:line="466" pos:column="35">*<pos:position pos:line="466" pos:column="36"/></operator><operator pos:line="466" pos:column="36">)<pos:position pos:line="466" pos:column="37"/></operator><literal type="string" pos:line="466" pos:column="37">"invalid distance code"<pos:position pos:line="466" pos:column="60"/></literal></expr>;<pos:position pos:line="466" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="467" pos:column="17">state<pos:position pos:line="467" pos:column="22"/></name><operator pos:line="467" pos:column="22">-&gt;<pos:position pos:line="467" pos:column="27"/></operator><name pos:line="467" pos:column="24">mode<pos:position pos:line="467" pos:column="28"/></name></name> <operator pos:line="467" pos:column="29">=<pos:position pos:line="467" pos:column="30"/></operator> <name pos:line="467" pos:column="31">BAD<pos:position pos:line="467" pos:column="34"/></name></expr>;<pos:position pos:line="467" pos:column="35"/></expr_stmt>
                <break pos:line="468" pos:column="17">break;<pos:position pos:line="468" pos:column="23"/></break>
            }<pos:position pos:line="469" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="470" pos:column="13">state<pos:position pos:line="470" pos:column="18"/></name><operator pos:line="470" pos:column="18">-&gt;<pos:position pos:line="470" pos:column="23"/></operator><name pos:line="470" pos:column="20">offset<pos:position pos:line="470" pos:column="26"/></name></name> <operator pos:line="470" pos:column="27">=<pos:position pos:line="470" pos:column="28"/></operator> <operator pos:line="470" pos:column="29">(<pos:position pos:line="470" pos:column="30"/></operator><name pos:line="470" pos:column="30">unsigned<pos:position pos:line="470" pos:column="38"/></name><operator pos:line="470" pos:column="38">)<pos:position pos:line="470" pos:column="39"/></operator><name><name pos:line="470" pos:column="39">this<pos:position pos:line="470" pos:column="43"/></name><operator pos:line="470" pos:column="43">.<pos:position pos:line="470" pos:column="44"/></operator><name pos:line="470" pos:column="44">val<pos:position pos:line="470" pos:column="47"/></name></name></expr>;<pos:position pos:line="470" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="471" pos:column="13">state<pos:position pos:line="471" pos:column="18"/></name><operator pos:line="471" pos:column="18">-&gt;<pos:position pos:line="471" pos:column="23"/></operator><name pos:line="471" pos:column="20">extra<pos:position pos:line="471" pos:column="25"/></name></name> <operator pos:line="471" pos:column="26">=<pos:position pos:line="471" pos:column="27"/></operator> <call pos:line="471" pos:column="28">(<name pos:line="471" pos:column="29">unsigned<pos:position pos:line="471" pos:column="37"/></name>)<argument_list pos:line="471" pos:column="38">(<argument><expr><name><name pos:line="471" pos:column="39">this<pos:position pos:line="471" pos:column="43"/></name><operator pos:line="471" pos:column="43">.<pos:position pos:line="471" pos:column="44"/></operator><name pos:line="471" pos:column="44">op<pos:position pos:line="471" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="471" pos:column="47"/></argument_list></call> <operator pos:line="471" pos:column="48">&amp;<pos:position pos:line="471" pos:column="53"/></operator> <literal type="number" pos:line="471" pos:column="50">15<pos:position pos:line="471" pos:column="52"/></literal></expr>;<pos:position pos:line="471" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="472" pos:column="13">state<pos:position pos:line="472" pos:column="18"/></name><operator pos:line="472" pos:column="18">-&gt;<pos:position pos:line="472" pos:column="23"/></operator><name pos:line="472" pos:column="20">mode<pos:position pos:line="472" pos:column="24"/></name></name> <operator pos:line="472" pos:column="25">=<pos:position pos:line="472" pos:column="26"/></operator> <name pos:line="472" pos:column="27">DISTEXT<pos:position pos:line="472" pos:column="34"/></name></expr>;<pos:position pos:line="472" pos:column="35"/></expr_stmt>
        <case pos:line="473" pos:column="9">case <expr><name pos:line="473" pos:column="14">DISTEXT<pos:position pos:line="473" pos:column="21"/></name></expr>:<pos:position pos:line="473" pos:column="22"/></case>
            <if pos:line="474" pos:column="13">if <condition pos:line="474" pos:column="16">(<expr><name><name pos:line="474" pos:column="17">state<pos:position pos:line="474" pos:column="22"/></name><operator pos:line="474" pos:column="22">-&gt;<pos:position pos:line="474" pos:column="27"/></operator><name pos:line="474" pos:column="24">extra<pos:position pos:line="474" pos:column="29"/></name></name></expr>)<pos:position pos:line="474" pos:column="30"/></condition><then pos:line="474" pos:column="30"> <block pos:line="474" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="475" pos:column="17">NEEDBITS<pos:position pos:line="475" pos:column="25"/></name><argument_list pos:line="475" pos:column="25">(<argument><expr><name><name pos:line="475" pos:column="26">state<pos:position pos:line="475" pos:column="31"/></name><operator pos:line="475" pos:column="31">-&gt;<pos:position pos:line="475" pos:column="36"/></operator><name pos:line="475" pos:column="33">extra<pos:position pos:line="475" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="475" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="476" pos:column="17">state<pos:position pos:line="476" pos:column="22"/></name><operator pos:line="476" pos:column="22">-&gt;<pos:position pos:line="476" pos:column="27"/></operator><name pos:line="476" pos:column="24">offset<pos:position pos:line="476" pos:column="30"/></name></name> <operator pos:line="476" pos:column="31">+=<pos:position pos:line="476" pos:column="33"/></operator> <call><name pos:line="476" pos:column="34">BITS<pos:position pos:line="476" pos:column="38"/></name><argument_list pos:line="476" pos:column="38">(<argument><expr><name><name pos:line="476" pos:column="39">state<pos:position pos:line="476" pos:column="44"/></name><operator pos:line="476" pos:column="44">-&gt;<pos:position pos:line="476" pos:column="49"/></operator><name pos:line="476" pos:column="46">extra<pos:position pos:line="476" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="476" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="476" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="477" pos:column="17">DROPBITS<pos:position pos:line="477" pos:column="25"/></name><argument_list pos:line="477" pos:column="25">(<argument><expr><name><name pos:line="477" pos:column="26">state<pos:position pos:line="477" pos:column="31"/></name><operator pos:line="477" pos:column="31">-&gt;<pos:position pos:line="477" pos:column="36"/></operator><name pos:line="477" pos:column="33">extra<pos:position pos:line="477" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="477" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="478" pos:column="14"/></block></then></if>
<cpp:ifdef pos:line="479" pos:column="1">#<cpp:directive pos:line="479" pos:column="2">ifdef<pos:position pos:line="479" pos:column="7"/></cpp:directive> <name pos:line="479" pos:column="8">INFLATE_STRICT<pos:position pos:line="479" pos:column="22"/></name></cpp:ifdef>
            <if pos:line="480" pos:column="13">if <condition pos:line="480" pos:column="16">(<expr><name><name pos:line="480" pos:column="17">state<pos:position pos:line="480" pos:column="22"/></name><operator pos:line="480" pos:column="22">-&gt;<pos:position pos:line="480" pos:column="27"/></operator><name pos:line="480" pos:column="24">offset<pos:position pos:line="480" pos:column="30"/></name></name> <operator pos:line="480" pos:column="31">&gt;<pos:position pos:line="480" pos:column="35"/></operator> <name><name pos:line="480" pos:column="33">state<pos:position pos:line="480" pos:column="38"/></name><operator pos:line="480" pos:column="38">-&gt;<pos:position pos:line="480" pos:column="43"/></operator><name pos:line="480" pos:column="40">dmax<pos:position pos:line="480" pos:column="44"/></name></name></expr>)<pos:position pos:line="480" pos:column="45"/></condition><then pos:line="480" pos:column="45"> <block pos:line="480" pos:column="46">{
                <expr_stmt><expr><name><name pos:line="481" pos:column="17">strm<pos:position pos:line="481" pos:column="21"/></name><operator pos:line="481" pos:column="21">-&gt;<pos:position pos:line="481" pos:column="26"/></operator><name pos:line="481" pos:column="23">msg<pos:position pos:line="481" pos:column="26"/></name></name> <operator pos:line="481" pos:column="27">=<pos:position pos:line="481" pos:column="28"/></operator> <operator pos:line="481" pos:column="29">(<pos:position pos:line="481" pos:column="30"/></operator><name pos:line="481" pos:column="30">char<pos:position pos:line="481" pos:column="34"/></name> <operator pos:line="481" pos:column="35">*<pos:position pos:line="481" pos:column="36"/></operator><operator pos:line="481" pos:column="36">)<pos:position pos:line="481" pos:column="37"/></operator><literal type="string" pos:line="481" pos:column="37">"invalid distance too far back"<pos:position pos:line="481" pos:column="68"/></literal></expr>;<pos:position pos:line="481" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="482" pos:column="17">state<pos:position pos:line="482" pos:column="22"/></name><operator pos:line="482" pos:column="22">-&gt;<pos:position pos:line="482" pos:column="27"/></operator><name pos:line="482" pos:column="24">mode<pos:position pos:line="482" pos:column="28"/></name></name> <operator pos:line="482" pos:column="29">=<pos:position pos:line="482" pos:column="30"/></operator> <name pos:line="482" pos:column="31">BAD<pos:position pos:line="482" pos:column="34"/></name></expr>;<pos:position pos:line="482" pos:column="35"/></expr_stmt>
                <break pos:line="483" pos:column="17">break;<pos:position pos:line="483" pos:column="23"/></break>
            }<pos:position pos:line="484" pos:column="14"/></block></then></if>
<cpp:endif pos:line="485" pos:column="1">#<cpp:directive pos:line="485" pos:column="2">endif<pos:position pos:line="485" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="486" pos:column="13">if <condition pos:line="486" pos:column="16">(<expr><name><name pos:line="486" pos:column="17">state<pos:position pos:line="486" pos:column="22"/></name><operator pos:line="486" pos:column="22">-&gt;<pos:position pos:line="486" pos:column="27"/></operator><name pos:line="486" pos:column="24">offset<pos:position pos:line="486" pos:column="30"/></name></name> <operator pos:line="486" pos:column="31">&gt;<pos:position pos:line="486" pos:column="35"/></operator> <name><name pos:line="486" pos:column="33">state<pos:position pos:line="486" pos:column="38"/></name><operator pos:line="486" pos:column="38">-&gt;<pos:position pos:line="486" pos:column="43"/></operator><name pos:line="486" pos:column="40">whave<pos:position pos:line="486" pos:column="45"/></name></name> <operator pos:line="486" pos:column="46">+<pos:position pos:line="486" pos:column="47"/></operator> <name pos:line="486" pos:column="48">out<pos:position pos:line="486" pos:column="51"/></name> <operator pos:line="486" pos:column="52">-<pos:position pos:line="486" pos:column="53"/></operator> <name pos:line="486" pos:column="54">left<pos:position pos:line="486" pos:column="58"/></name></expr>)<pos:position pos:line="486" pos:column="59"/></condition><then pos:line="486" pos:column="59"> <block pos:line="486" pos:column="60">{
                <expr_stmt><expr><name><name pos:line="487" pos:column="17">strm<pos:position pos:line="487" pos:column="21"/></name><operator pos:line="487" pos:column="21">-&gt;<pos:position pos:line="487" pos:column="26"/></operator><name pos:line="487" pos:column="23">msg<pos:position pos:line="487" pos:column="26"/></name></name> <operator pos:line="487" pos:column="27">=<pos:position pos:line="487" pos:column="28"/></operator> <operator pos:line="487" pos:column="29">(<pos:position pos:line="487" pos:column="30"/></operator><name pos:line="487" pos:column="30">char<pos:position pos:line="487" pos:column="34"/></name> <operator pos:line="487" pos:column="35">*<pos:position pos:line="487" pos:column="36"/></operator><operator pos:line="487" pos:column="36">)<pos:position pos:line="487" pos:column="37"/></operator><literal type="string" pos:line="487" pos:column="37">"invalid distance too far back"<pos:position pos:line="487" pos:column="68"/></literal></expr>;<pos:position pos:line="487" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="488" pos:column="17">state<pos:position pos:line="488" pos:column="22"/></name><operator pos:line="488" pos:column="22">-&gt;<pos:position pos:line="488" pos:column="27"/></operator><name pos:line="488" pos:column="24">mode<pos:position pos:line="488" pos:column="28"/></name></name> <operator pos:line="488" pos:column="29">=<pos:position pos:line="488" pos:column="30"/></operator> <name pos:line="488" pos:column="31">BAD<pos:position pos:line="488" pos:column="34"/></name></expr>;<pos:position pos:line="488" pos:column="35"/></expr_stmt>
                <break pos:line="489" pos:column="17">break;<pos:position pos:line="489" pos:column="23"/></break>
            }<pos:position pos:line="490" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="491" pos:column="13">Tracevv<pos:position pos:line="491" pos:column="20"/></name><argument_list pos:line="491" pos:column="20">(<argument><expr><operator pos:line="491" pos:column="21">(<pos:position pos:line="491" pos:column="22"/></operator><name pos:line="491" pos:column="22">stderr<pos:position pos:line="491" pos:column="28"/></name><operator pos:line="491" pos:column="28">,<pos:position pos:line="491" pos:column="29"/></operator> <literal type="string" pos:line="491" pos:column="30">"inflate:         distance %u\n"<pos:position pos:line="491" pos:column="62"/></literal><operator pos:line="491" pos:column="62">,<pos:position pos:line="491" pos:column="63"/></operator> <name><name pos:line="491" pos:column="64">state<pos:position pos:line="491" pos:column="69"/></name><operator pos:line="491" pos:column="69">-&gt;<pos:position pos:line="491" pos:column="74"/></operator><name pos:line="491" pos:column="71">offset<pos:position pos:line="491" pos:column="77"/></name></name><operator pos:line="491" pos:column="77">)<pos:position pos:line="491" pos:column="78"/></operator></expr></argument>)<pos:position pos:line="491" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="491" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="492" pos:column="13">state<pos:position pos:line="492" pos:column="18"/></name><operator pos:line="492" pos:column="18">-&gt;<pos:position pos:line="492" pos:column="23"/></operator><name pos:line="492" pos:column="20">mode<pos:position pos:line="492" pos:column="24"/></name></name> <operator pos:line="492" pos:column="25">=<pos:position pos:line="492" pos:column="26"/></operator> <name pos:line="492" pos:column="27">MATCH<pos:position pos:line="492" pos:column="32"/></name></expr>;<pos:position pos:line="492" pos:column="33"/></expr_stmt>
        <case pos:line="493" pos:column="9">case <expr><name pos:line="493" pos:column="14">MATCH<pos:position pos:line="493" pos:column="19"/></name></expr>:<pos:position pos:line="493" pos:column="20"/></case>
            <if pos:line="494" pos:column="13">if <condition pos:line="494" pos:column="16">(<expr><name pos:line="494" pos:column="17">left<pos:position pos:line="494" pos:column="21"/></name> <operator pos:line="494" pos:column="22">==<pos:position pos:line="494" pos:column="24"/></operator> <literal type="number" pos:line="494" pos:column="25">0<pos:position pos:line="494" pos:column="26"/></literal></expr>)<pos:position pos:line="494" pos:column="27"/></condition><then pos:line="494" pos:column="27"> <block type="pseudo"><goto pos:line="494" pos:column="28">goto <name pos:line="494" pos:column="33">inf_leave<pos:position pos:line="494" pos:column="42"/></name>;<pos:position pos:line="494" pos:column="43"/></goto></block></then></if>
            <expr_stmt><expr><name pos:line="495" pos:column="13">copy<pos:position pos:line="495" pos:column="17"/></name> <operator pos:line="495" pos:column="18">=<pos:position pos:line="495" pos:column="19"/></operator> <name pos:line="495" pos:column="20">out<pos:position pos:line="495" pos:column="23"/></name> <operator pos:line="495" pos:column="24">-<pos:position pos:line="495" pos:column="25"/></operator> <name pos:line="495" pos:column="26">left<pos:position pos:line="495" pos:column="30"/></name></expr>;<pos:position pos:line="495" pos:column="31"/></expr_stmt>
            <if pos:line="496" pos:column="13">if <condition pos:line="496" pos:column="16">(<expr><name><name pos:line="496" pos:column="17">state<pos:position pos:line="496" pos:column="22"/></name><operator pos:line="496" pos:column="22">-&gt;<pos:position pos:line="496" pos:column="27"/></operator><name pos:line="496" pos:column="24">offset<pos:position pos:line="496" pos:column="30"/></name></name> <operator pos:line="496" pos:column="31">&gt;<pos:position pos:line="496" pos:column="35"/></operator> <name pos:line="496" pos:column="33">copy<pos:position pos:line="496" pos:column="37"/></name></expr>)<pos:position pos:line="496" pos:column="38"/></condition><then pos:line="496" pos:column="38"> <block pos:line="496" pos:column="39">{         <comment type="block" pos:line="496" pos:column="49">/* copy from window */</comment>
                <expr_stmt><expr><name pos:line="497" pos:column="17">copy<pos:position pos:line="497" pos:column="21"/></name> <operator pos:line="497" pos:column="22">=<pos:position pos:line="497" pos:column="23"/></operator> <name><name pos:line="497" pos:column="24">state<pos:position pos:line="497" pos:column="29"/></name><operator pos:line="497" pos:column="29">-&gt;<pos:position pos:line="497" pos:column="34"/></operator><name pos:line="497" pos:column="31">offset<pos:position pos:line="497" pos:column="37"/></name></name> <operator pos:line="497" pos:column="38">-<pos:position pos:line="497" pos:column="39"/></operator> <name pos:line="497" pos:column="40">copy<pos:position pos:line="497" pos:column="44"/></name></expr>;<pos:position pos:line="497" pos:column="45"/></expr_stmt>
                <if pos:line="498" pos:column="17">if <condition pos:line="498" pos:column="20">(<expr><name pos:line="498" pos:column="21">copy<pos:position pos:line="498" pos:column="25"/></name> <operator pos:line="498" pos:column="26">&gt;<pos:position pos:line="498" pos:column="30"/></operator> <name><name pos:line="498" pos:column="28">state<pos:position pos:line="498" pos:column="33"/></name><operator pos:line="498" pos:column="33">-&gt;<pos:position pos:line="498" pos:column="38"/></operator><name pos:line="498" pos:column="35">write<pos:position pos:line="498" pos:column="40"/></name></name></expr>)<pos:position pos:line="498" pos:column="41"/></condition><then pos:line="498" pos:column="41"> <block pos:line="498" pos:column="42">{
                    <expr_stmt><expr><name pos:line="499" pos:column="21">copy<pos:position pos:line="499" pos:column="25"/></name> <operator pos:line="499" pos:column="26">-=<pos:position pos:line="499" pos:column="28"/></operator> <name><name pos:line="499" pos:column="29">state<pos:position pos:line="499" pos:column="34"/></name><operator pos:line="499" pos:column="34">-&gt;<pos:position pos:line="499" pos:column="39"/></operator><name pos:line="499" pos:column="36">write<pos:position pos:line="499" pos:column="41"/></name></name></expr>;<pos:position pos:line="499" pos:column="42"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="500" pos:column="21">from<pos:position pos:line="500" pos:column="25"/></name> <operator pos:line="500" pos:column="26">=<pos:position pos:line="500" pos:column="27"/></operator> <name><name pos:line="500" pos:column="28">state<pos:position pos:line="500" pos:column="33"/></name><operator pos:line="500" pos:column="33">-&gt;<pos:position pos:line="500" pos:column="38"/></operator><name pos:line="500" pos:column="35">window<pos:position pos:line="500" pos:column="41"/></name></name> <operator pos:line="500" pos:column="42">+<pos:position pos:line="500" pos:column="43"/></operator> <operator pos:line="500" pos:column="44">(<pos:position pos:line="500" pos:column="45"/></operator><name><name pos:line="500" pos:column="45">state<pos:position pos:line="500" pos:column="50"/></name><operator pos:line="500" pos:column="50">-&gt;<pos:position pos:line="500" pos:column="55"/></operator><name pos:line="500" pos:column="52">wsize<pos:position pos:line="500" pos:column="57"/></name></name> <operator pos:line="500" pos:column="58">-<pos:position pos:line="500" pos:column="59"/></operator> <name pos:line="500" pos:column="60">copy<pos:position pos:line="500" pos:column="64"/></name><operator pos:line="500" pos:column="64">)<pos:position pos:line="500" pos:column="65"/></operator></expr>;<pos:position pos:line="500" pos:column="66"/></expr_stmt>
                }<pos:position pos:line="501" pos:column="18"/></block></then>
                <else pos:line="502" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="503" pos:column="21">from<pos:position pos:line="503" pos:column="25"/></name> <operator pos:line="503" pos:column="26">=<pos:position pos:line="503" pos:column="27"/></operator> <name><name pos:line="503" pos:column="28">state<pos:position pos:line="503" pos:column="33"/></name><operator pos:line="503" pos:column="33">-&gt;<pos:position pos:line="503" pos:column="38"/></operator><name pos:line="503" pos:column="35">window<pos:position pos:line="503" pos:column="41"/></name></name> <operator pos:line="503" pos:column="42">+<pos:position pos:line="503" pos:column="43"/></operator> <operator pos:line="503" pos:column="44">(<pos:position pos:line="503" pos:column="45"/></operator><name><name pos:line="503" pos:column="45">state<pos:position pos:line="503" pos:column="50"/></name><operator pos:line="503" pos:column="50">-&gt;<pos:position pos:line="503" pos:column="55"/></operator><name pos:line="503" pos:column="52">write<pos:position pos:line="503" pos:column="57"/></name></name> <operator pos:line="503" pos:column="58">-<pos:position pos:line="503" pos:column="59"/></operator> <name pos:line="503" pos:column="60">copy<pos:position pos:line="503" pos:column="64"/></name><operator pos:line="503" pos:column="64">)<pos:position pos:line="503" pos:column="65"/></operator></expr>;<pos:position pos:line="503" pos:column="66"/></expr_stmt></block></else></if>
                <if pos:line="504" pos:column="17">if <condition pos:line="504" pos:column="20">(<expr><name pos:line="504" pos:column="21">copy<pos:position pos:line="504" pos:column="25"/></name> <operator pos:line="504" pos:column="26">&gt;<pos:position pos:line="504" pos:column="30"/></operator> <name><name pos:line="504" pos:column="28">state<pos:position pos:line="504" pos:column="33"/></name><operator pos:line="504" pos:column="33">-&gt;<pos:position pos:line="504" pos:column="38"/></operator><name pos:line="504" pos:column="35">length<pos:position pos:line="504" pos:column="41"/></name></name></expr>)<pos:position pos:line="504" pos:column="42"/></condition><then pos:line="504" pos:column="42"> <block type="pseudo"><expr_stmt><expr><name pos:line="504" pos:column="43">copy<pos:position pos:line="504" pos:column="47"/></name> <operator pos:line="504" pos:column="48">=<pos:position pos:line="504" pos:column="49"/></operator> <name><name pos:line="504" pos:column="50">state<pos:position pos:line="504" pos:column="55"/></name><operator pos:line="504" pos:column="55">-&gt;<pos:position pos:line="504" pos:column="60"/></operator><name pos:line="504" pos:column="57">length<pos:position pos:line="504" pos:column="63"/></name></name></expr>;<pos:position pos:line="504" pos:column="64"/></expr_stmt></block></then></if>
            }<pos:position pos:line="505" pos:column="14"/></block></then>
            <else pos:line="506" pos:column="13">else <block pos:line="506" pos:column="18">{                              <comment type="block" pos:line="506" pos:column="49">/* copy from output */</comment>
                <expr_stmt><expr><name pos:line="507" pos:column="17">from<pos:position pos:line="507" pos:column="21"/></name> <operator pos:line="507" pos:column="22">=<pos:position pos:line="507" pos:column="23"/></operator> <name pos:line="507" pos:column="24">put<pos:position pos:line="507" pos:column="27"/></name> <operator pos:line="507" pos:column="28">-<pos:position pos:line="507" pos:column="29"/></operator> <name><name pos:line="507" pos:column="30">state<pos:position pos:line="507" pos:column="35"/></name><operator pos:line="507" pos:column="35">-&gt;<pos:position pos:line="507" pos:column="40"/></operator><name pos:line="507" pos:column="37">offset<pos:position pos:line="507" pos:column="43"/></name></name></expr>;<pos:position pos:line="507" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="508" pos:column="17">copy<pos:position pos:line="508" pos:column="21"/></name> <operator pos:line="508" pos:column="22">=<pos:position pos:line="508" pos:column="23"/></operator> <name><name pos:line="508" pos:column="24">state<pos:position pos:line="508" pos:column="29"/></name><operator pos:line="508" pos:column="29">-&gt;<pos:position pos:line="508" pos:column="34"/></operator><name pos:line="508" pos:column="31">length<pos:position pos:line="508" pos:column="37"/></name></name></expr>;<pos:position pos:line="508" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="509" pos:column="14"/></block></else></if>
            <if pos:line="510" pos:column="13">if <condition pos:line="510" pos:column="16">(<expr><name pos:line="510" pos:column="17">copy<pos:position pos:line="510" pos:column="21"/></name> <operator pos:line="510" pos:column="22">&gt;<pos:position pos:line="510" pos:column="26"/></operator> <name pos:line="510" pos:column="24">left<pos:position pos:line="510" pos:column="28"/></name></expr>)<pos:position pos:line="510" pos:column="29"/></condition><then pos:line="510" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="510" pos:column="30">copy<pos:position pos:line="510" pos:column="34"/></name> <operator pos:line="510" pos:column="35">=<pos:position pos:line="510" pos:column="36"/></operator> <name pos:line="510" pos:column="37">left<pos:position pos:line="510" pos:column="41"/></name></expr>;<pos:position pos:line="510" pos:column="42"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="511" pos:column="13">left<pos:position pos:line="511" pos:column="17"/></name> <operator pos:line="511" pos:column="18">-=<pos:position pos:line="511" pos:column="20"/></operator> <name pos:line="511" pos:column="21">copy<pos:position pos:line="511" pos:column="25"/></name></expr>;<pos:position pos:line="511" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="512" pos:column="13">state<pos:position pos:line="512" pos:column="18"/></name><operator pos:line="512" pos:column="18">-&gt;<pos:position pos:line="512" pos:column="23"/></operator><name pos:line="512" pos:column="20">length<pos:position pos:line="512" pos:column="26"/></name></name> <operator pos:line="512" pos:column="27">-=<pos:position pos:line="512" pos:column="29"/></operator> <name pos:line="512" pos:column="30">copy<pos:position pos:line="512" pos:column="34"/></name></expr>;<pos:position pos:line="512" pos:column="35"/></expr_stmt>
            <do pos:line="513" pos:column="13">do <block pos:line="513" pos:column="16">{
                <expr_stmt><expr><operator pos:line="514" pos:column="17">*<pos:position pos:line="514" pos:column="18"/></operator><name pos:line="514" pos:column="18">put<pos:position pos:line="514" pos:column="21"/></name><operator pos:line="514" pos:column="21">++<pos:position pos:line="514" pos:column="23"/></operator> <operator pos:line="514" pos:column="24">=<pos:position pos:line="514" pos:column="25"/></operator> <operator pos:line="514" pos:column="26">*<pos:position pos:line="514" pos:column="27"/></operator><name pos:line="514" pos:column="27">from<pos:position pos:line="514" pos:column="31"/></name><operator pos:line="514" pos:column="31">++<pos:position pos:line="514" pos:column="33"/></operator></expr>;<pos:position pos:line="514" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="515" pos:column="14"/></block> while <condition pos:line="515" pos:column="21">(<expr><operator pos:line="515" pos:column="22">--<pos:position pos:line="515" pos:column="24"/></operator><name pos:line="515" pos:column="24">copy<pos:position pos:line="515" pos:column="28"/></name></expr>)<pos:position pos:line="515" pos:column="29"/></condition>;<pos:position pos:line="515" pos:column="30"/></do>
            <if pos:line="516" pos:column="13">if <condition pos:line="516" pos:column="16">(<expr><name><name pos:line="516" pos:column="17">state<pos:position pos:line="516" pos:column="22"/></name><operator pos:line="516" pos:column="22">-&gt;<pos:position pos:line="516" pos:column="27"/></operator><name pos:line="516" pos:column="24">length<pos:position pos:line="516" pos:column="30"/></name></name> <operator pos:line="516" pos:column="31">==<pos:position pos:line="516" pos:column="33"/></operator> <literal type="number" pos:line="516" pos:column="34">0<pos:position pos:line="516" pos:column="35"/></literal></expr>)<pos:position pos:line="516" pos:column="36"/></condition><then pos:line="516" pos:column="36"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="516" pos:column="37">state<pos:position pos:line="516" pos:column="42"/></name><operator pos:line="516" pos:column="42">-&gt;<pos:position pos:line="516" pos:column="47"/></operator><name pos:line="516" pos:column="44">mode<pos:position pos:line="516" pos:column="48"/></name></name> <operator pos:line="516" pos:column="49">=<pos:position pos:line="516" pos:column="50"/></operator> <name pos:line="516" pos:column="51">LEN<pos:position pos:line="516" pos:column="54"/></name></expr>;<pos:position pos:line="516" pos:column="55"/></expr_stmt></block></then></if>
            <break pos:line="517" pos:column="13">break;<pos:position pos:line="517" pos:column="19"/></break>
        <case pos:line="518" pos:column="9">case <expr><name pos:line="518" pos:column="14">LIT<pos:position pos:line="518" pos:column="17"/></name></expr>:<pos:position pos:line="518" pos:column="18"/></case>
            <if pos:line="519" pos:column="13">if <condition pos:line="519" pos:column="16">(<expr><name pos:line="519" pos:column="17">left<pos:position pos:line="519" pos:column="21"/></name> <operator pos:line="519" pos:column="22">==<pos:position pos:line="519" pos:column="24"/></operator> <literal type="number" pos:line="519" pos:column="25">0<pos:position pos:line="519" pos:column="26"/></literal></expr>)<pos:position pos:line="519" pos:column="27"/></condition><then pos:line="519" pos:column="27"> <block type="pseudo"><goto pos:line="519" pos:column="28">goto <name pos:line="519" pos:column="33">inf_leave<pos:position pos:line="519" pos:column="42"/></name>;<pos:position pos:line="519" pos:column="43"/></goto></block></then></if>
            <expr_stmt><expr><operator pos:line="520" pos:column="13">*<pos:position pos:line="520" pos:column="14"/></operator><name pos:line="520" pos:column="14">put<pos:position pos:line="520" pos:column="17"/></name><operator pos:line="520" pos:column="17">++<pos:position pos:line="520" pos:column="19"/></operator> <operator pos:line="520" pos:column="20">=<pos:position pos:line="520" pos:column="21"/></operator> <call pos:line="520" pos:column="22">(<name pos:line="520" pos:column="23">unsigned<pos:position pos:line="520" pos:column="31"/></name> <name pos:line="520" pos:column="32">char<pos:position pos:line="520" pos:column="36"/></name>)<argument_list pos:line="520" pos:column="37">(<argument><expr><name><name pos:line="520" pos:column="38">state<pos:position pos:line="520" pos:column="43"/></name><operator pos:line="520" pos:column="43">-&gt;<pos:position pos:line="520" pos:column="48"/></operator><name pos:line="520" pos:column="45">length<pos:position pos:line="520" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="520" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="520" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name pos:line="521" pos:column="13">left<pos:position pos:line="521" pos:column="17"/></name><operator pos:line="521" pos:column="17">--<pos:position pos:line="521" pos:column="19"/></operator></expr>;<pos:position pos:line="521" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="522" pos:column="13">state<pos:position pos:line="522" pos:column="18"/></name><operator pos:line="522" pos:column="18">-&gt;<pos:position pos:line="522" pos:column="23"/></operator><name pos:line="522" pos:column="20">mode<pos:position pos:line="522" pos:column="24"/></name></name> <operator pos:line="522" pos:column="25">=<pos:position pos:line="522" pos:column="26"/></operator> <name pos:line="522" pos:column="27">LEN<pos:position pos:line="522" pos:column="30"/></name></expr>;<pos:position pos:line="522" pos:column="31"/></expr_stmt>
            <break pos:line="523" pos:column="13">break;<pos:position pos:line="523" pos:column="19"/></break>
        <case pos:line="524" pos:column="9">case <expr><name pos:line="524" pos:column="14">CHECK<pos:position pos:line="524" pos:column="19"/></name></expr>:<pos:position pos:line="524" pos:column="20"/></case>
            <if pos:line="525" pos:column="13">if <condition pos:line="525" pos:column="16">(<expr><name><name pos:line="525" pos:column="17">state<pos:position pos:line="525" pos:column="22"/></name><operator pos:line="525" pos:column="22">-&gt;<pos:position pos:line="525" pos:column="27"/></operator><name pos:line="525" pos:column="24">wrap<pos:position pos:line="525" pos:column="28"/></name></name></expr>)<pos:position pos:line="525" pos:column="29"/></condition><then pos:line="525" pos:column="29"> <block pos:line="525" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="526" pos:column="17">NEEDBITS<pos:position pos:line="526" pos:column="25"/></name><argument_list pos:line="526" pos:column="25">(<argument><expr><literal type="number" pos:line="526" pos:column="26">32<pos:position pos:line="526" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="526" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="527" pos:column="17">out<pos:position pos:line="527" pos:column="20"/></name> <operator pos:line="527" pos:column="21">-=<pos:position pos:line="527" pos:column="23"/></operator> <name pos:line="527" pos:column="24">left<pos:position pos:line="527" pos:column="28"/></name></expr>;<pos:position pos:line="527" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="528" pos:column="17">strm<pos:position pos:line="528" pos:column="21"/></name><operator pos:line="528" pos:column="21">-&gt;<pos:position pos:line="528" pos:column="26"/></operator><name pos:line="528" pos:column="23">total_out<pos:position pos:line="528" pos:column="32"/></name></name> <operator pos:line="528" pos:column="33">+=<pos:position pos:line="528" pos:column="35"/></operator> <name pos:line="528" pos:column="36">out<pos:position pos:line="528" pos:column="39"/></name></expr>;<pos:position pos:line="528" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="529" pos:column="17">state<pos:position pos:line="529" pos:column="22"/></name><operator pos:line="529" pos:column="22">-&gt;<pos:position pos:line="529" pos:column="27"/></operator><name pos:line="529" pos:column="24">total<pos:position pos:line="529" pos:column="29"/></name></name> <operator pos:line="529" pos:column="30">+=<pos:position pos:line="529" pos:column="32"/></operator> <name pos:line="529" pos:column="33">out<pos:position pos:line="529" pos:column="36"/></name></expr>;<pos:position pos:line="529" pos:column="37"/></expr_stmt>
                <if pos:line="530" pos:column="17">if <condition pos:line="530" pos:column="20">(<expr><name pos:line="530" pos:column="21">out<pos:position pos:line="530" pos:column="24"/></name></expr>)<pos:position pos:line="530" pos:column="25"/></condition><then pos:line="530" pos:column="25">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="531" pos:column="21">strm<pos:position pos:line="531" pos:column="25"/></name><operator pos:line="531" pos:column="25">-&gt;<pos:position pos:line="531" pos:column="30"/></operator><name pos:line="531" pos:column="27">adler<pos:position pos:line="531" pos:column="32"/></name></name> <operator pos:line="531" pos:column="33">=<pos:position pos:line="531" pos:column="34"/></operator> <name><name pos:line="531" pos:column="35">state<pos:position pos:line="531" pos:column="40"/></name><operator pos:line="531" pos:column="40">-&gt;<pos:position pos:line="531" pos:column="45"/></operator><name pos:line="531" pos:column="42">check<pos:position pos:line="531" pos:column="47"/></name></name> <operator pos:line="531" pos:column="48">=<pos:position pos:line="531" pos:column="49"/></operator>
                        <call><name pos:line="532" pos:column="25">UPDATE<pos:position pos:line="532" pos:column="31"/></name><argument_list pos:line="532" pos:column="31">(<argument><expr><name><name pos:line="532" pos:column="32">state<pos:position pos:line="532" pos:column="37"/></name><operator pos:line="532" pos:column="37">-&gt;<pos:position pos:line="532" pos:column="42"/></operator><name pos:line="532" pos:column="39">check<pos:position pos:line="532" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="532" pos:column="46">put<pos:position pos:line="532" pos:column="49"/></name> <operator pos:line="532" pos:column="50">-<pos:position pos:line="532" pos:column="51"/></operator> <name pos:line="532" pos:column="52">out<pos:position pos:line="532" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="532" pos:column="57">out<pos:position pos:line="532" pos:column="60"/></name></expr></argument>)<pos:position pos:line="532" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="532" pos:column="62"/></expr_stmt></block></then></if>
                <expr_stmt><expr><name pos:line="533" pos:column="17">out<pos:position pos:line="533" pos:column="20"/></name> <operator pos:line="533" pos:column="21">=<pos:position pos:line="533" pos:column="22"/></operator> <name pos:line="533" pos:column="23">left<pos:position pos:line="533" pos:column="27"/></name></expr>;<pos:position pos:line="533" pos:column="28"/></expr_stmt>
                <if pos:line="534" pos:column="17">if <condition pos:line="534" pos:column="20">(<expr><operator pos:line="534" pos:column="21">(<pos:position pos:line="534" pos:column="22"/></operator>
<cpp:ifdef pos:line="535" pos:column="1">#<cpp:directive pos:line="535" pos:column="2">ifdef<pos:position pos:line="535" pos:column="7"/></cpp:directive> <name pos:line="535" pos:column="8">GUNZIP<pos:position pos:line="535" pos:column="14"/></name></cpp:ifdef>
                     <ternary><condition><expr><name><name pos:line="536" pos:column="22">state<pos:position pos:line="536" pos:column="27"/></name><operator pos:line="536" pos:column="27">-&gt;<pos:position pos:line="536" pos:column="32"/></operator><name pos:line="536" pos:column="29">flags<pos:position pos:line="536" pos:column="34"/></name></name></expr> ?<pos:position pos:line="536" pos:column="36"/></condition><then pos:line="536" pos:column="36"> <expr><name pos:line="536" pos:column="37">hold<pos:position pos:line="536" pos:column="41"/></name></expr> <pos:position pos:line="536" pos:column="42"/></then><else pos:line="536" pos:column="42">:
<cpp:endif pos:line="537" pos:column="1">#<cpp:directive pos:line="537" pos:column="2">endif<pos:position pos:line="537" pos:column="7"/></cpp:directive></cpp:endif>
                     <expr><call><name pos:line="538" pos:column="22">REVERSE<pos:position pos:line="538" pos:column="29"/></name><argument_list pos:line="538" pos:column="29">(<argument><expr><name pos:line="538" pos:column="30">hold<pos:position pos:line="538" pos:column="34"/></name></expr></argument>)<pos:position pos:line="538" pos:column="35"/></argument_list></call></expr></else></ternary><operator pos:line="538" pos:column="35">)<pos:position pos:line="538" pos:column="36"/></operator> <operator pos:line="538" pos:column="37">!=<pos:position pos:line="538" pos:column="39"/></operator> <name><name pos:line="538" pos:column="40">state<pos:position pos:line="538" pos:column="45"/></name><operator pos:line="538" pos:column="45">-&gt;<pos:position pos:line="538" pos:column="50"/></operator><name pos:line="538" pos:column="47">check<pos:position pos:line="538" pos:column="52"/></name></name></expr>)<pos:position pos:line="538" pos:column="53"/></condition><then pos:line="538" pos:column="53"> <block pos:line="538" pos:column="54">{
                    <expr_stmt><expr><name><name pos:line="539" pos:column="21">strm<pos:position pos:line="539" pos:column="25"/></name><operator pos:line="539" pos:column="25">-&gt;<pos:position pos:line="539" pos:column="30"/></operator><name pos:line="539" pos:column="27">msg<pos:position pos:line="539" pos:column="30"/></name></name> <operator pos:line="539" pos:column="31">=<pos:position pos:line="539" pos:column="32"/></operator> <operator pos:line="539" pos:column="33">(<pos:position pos:line="539" pos:column="34"/></operator><name pos:line="539" pos:column="34">char<pos:position pos:line="539" pos:column="38"/></name> <operator pos:line="539" pos:column="39">*<pos:position pos:line="539" pos:column="40"/></operator><operator pos:line="539" pos:column="40">)<pos:position pos:line="539" pos:column="41"/></operator><literal type="string" pos:line="539" pos:column="41">"incorrect data check"<pos:position pos:line="539" pos:column="63"/></literal></expr>;<pos:position pos:line="539" pos:column="64"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="540" pos:column="21">state<pos:position pos:line="540" pos:column="26"/></name><operator pos:line="540" pos:column="26">-&gt;<pos:position pos:line="540" pos:column="31"/></operator><name pos:line="540" pos:column="28">mode<pos:position pos:line="540" pos:column="32"/></name></name> <operator pos:line="540" pos:column="33">=<pos:position pos:line="540" pos:column="34"/></operator> <name pos:line="540" pos:column="35">BAD<pos:position pos:line="540" pos:column="38"/></name></expr>;<pos:position pos:line="540" pos:column="39"/></expr_stmt>
                    <break pos:line="541" pos:column="21">break;<pos:position pos:line="541" pos:column="27"/></break>
                }<pos:position pos:line="542" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="543" pos:column="17">INITBITS<pos:position pos:line="543" pos:column="25"/></name><argument_list pos:line="543" pos:column="25">()<pos:position pos:line="543" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="543" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="544" pos:column="17">Tracev<pos:position pos:line="544" pos:column="23"/></name><argument_list pos:line="544" pos:column="23">(<argument><expr><operator pos:line="544" pos:column="24">(<pos:position pos:line="544" pos:column="25"/></operator><name pos:line="544" pos:column="25">stderr<pos:position pos:line="544" pos:column="31"/></name><operator pos:line="544" pos:column="31">,<pos:position pos:line="544" pos:column="32"/></operator> <literal type="string" pos:line="544" pos:column="33">"inflate:   check matches trailer\n"<pos:position pos:line="544" pos:column="69"/></literal><operator pos:line="544" pos:column="69">)<pos:position pos:line="544" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="544" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="544" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="545" pos:column="14"/></block></then></if>
<cpp:ifdef pos:line="546" pos:column="1">#<cpp:directive pos:line="546" pos:column="2">ifdef<pos:position pos:line="546" pos:column="7"/></cpp:directive> <name pos:line="546" pos:column="8">GUNZIP<pos:position pos:line="546" pos:column="14"/></name></cpp:ifdef>
            <expr_stmt><expr><name><name pos:line="547" pos:column="13">state<pos:position pos:line="547" pos:column="18"/></name><operator pos:line="547" pos:column="18">-&gt;<pos:position pos:line="547" pos:column="23"/></operator><name pos:line="547" pos:column="20">mode<pos:position pos:line="547" pos:column="24"/></name></name> <operator pos:line="547" pos:column="25">=<pos:position pos:line="547" pos:column="26"/></operator> <name pos:line="547" pos:column="27">LENGTH<pos:position pos:line="547" pos:column="33"/></name></expr>;<pos:position pos:line="547" pos:column="34"/></expr_stmt>
        <case pos:line="548" pos:column="9">case <expr><name pos:line="548" pos:column="14">LENGTH<pos:position pos:line="548" pos:column="20"/></name></expr>:<pos:position pos:line="548" pos:column="21"/></case>
            <if pos:line="549" pos:column="13">if <condition pos:line="549" pos:column="16">(<expr><name><name pos:line="549" pos:column="17">state<pos:position pos:line="549" pos:column="22"/></name><operator pos:line="549" pos:column="22">-&gt;<pos:position pos:line="549" pos:column="27"/></operator><name pos:line="549" pos:column="24">wrap<pos:position pos:line="549" pos:column="28"/></name></name> <operator pos:line="549" pos:column="29">&amp;&amp;<pos:position pos:line="549" pos:column="39"/></operator> <name><name pos:line="549" pos:column="32">state<pos:position pos:line="549" pos:column="37"/></name><operator pos:line="549" pos:column="37">-&gt;<pos:position pos:line="549" pos:column="42"/></operator><name pos:line="549" pos:column="39">flags<pos:position pos:line="549" pos:column="44"/></name></name></expr>)<pos:position pos:line="549" pos:column="45"/></condition><then pos:line="549" pos:column="45"> <block pos:line="549" pos:column="46">{
                <expr_stmt><expr><call><name pos:line="550" pos:column="17">NEEDBITS<pos:position pos:line="550" pos:column="25"/></name><argument_list pos:line="550" pos:column="25">(<argument><expr><literal type="number" pos:line="550" pos:column="26">32<pos:position pos:line="550" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="550" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="30"/></expr_stmt>
                <if pos:line="551" pos:column="17">if <condition pos:line="551" pos:column="20">(<expr><name pos:line="551" pos:column="21">hold<pos:position pos:line="551" pos:column="25"/></name> <operator pos:line="551" pos:column="26">!=<pos:position pos:line="551" pos:column="28"/></operator> <operator pos:line="551" pos:column="29">(<pos:position pos:line="551" pos:column="30"/></operator><name><name pos:line="551" pos:column="30">state<pos:position pos:line="551" pos:column="35"/></name><operator pos:line="551" pos:column="35">-&gt;<pos:position pos:line="551" pos:column="40"/></operator><name pos:line="551" pos:column="37">total<pos:position pos:line="551" pos:column="42"/></name></name> <operator pos:line="551" pos:column="43">&amp;<pos:position pos:line="551" pos:column="48"/></operator> <literal type="number" pos:line="551" pos:column="45">0xffffffffUL<pos:position pos:line="551" pos:column="57"/></literal><operator pos:line="551" pos:column="57">)<pos:position pos:line="551" pos:column="58"/></operator></expr>)<pos:position pos:line="551" pos:column="59"/></condition><then pos:line="551" pos:column="59"> <block pos:line="551" pos:column="60">{
                    <expr_stmt><expr><name><name pos:line="552" pos:column="21">strm<pos:position pos:line="552" pos:column="25"/></name><operator pos:line="552" pos:column="25">-&gt;<pos:position pos:line="552" pos:column="30"/></operator><name pos:line="552" pos:column="27">msg<pos:position pos:line="552" pos:column="30"/></name></name> <operator pos:line="552" pos:column="31">=<pos:position pos:line="552" pos:column="32"/></operator> <operator pos:line="552" pos:column="33">(<pos:position pos:line="552" pos:column="34"/></operator><name pos:line="552" pos:column="34">char<pos:position pos:line="552" pos:column="38"/></name> <operator pos:line="552" pos:column="39">*<pos:position pos:line="552" pos:column="40"/></operator><operator pos:line="552" pos:column="40">)<pos:position pos:line="552" pos:column="41"/></operator><literal type="string" pos:line="552" pos:column="41">"incorrect length check"<pos:position pos:line="552" pos:column="65"/></literal></expr>;<pos:position pos:line="552" pos:column="66"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="553" pos:column="21">state<pos:position pos:line="553" pos:column="26"/></name><operator pos:line="553" pos:column="26">-&gt;<pos:position pos:line="553" pos:column="31"/></operator><name pos:line="553" pos:column="28">mode<pos:position pos:line="553" pos:column="32"/></name></name> <operator pos:line="553" pos:column="33">=<pos:position pos:line="553" pos:column="34"/></operator> <name pos:line="553" pos:column="35">BAD<pos:position pos:line="553" pos:column="38"/></name></expr>;<pos:position pos:line="553" pos:column="39"/></expr_stmt>
                    <break pos:line="554" pos:column="21">break;<pos:position pos:line="554" pos:column="27"/></break>
                }<pos:position pos:line="555" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="556" pos:column="17">INITBITS<pos:position pos:line="556" pos:column="25"/></name><argument_list pos:line="556" pos:column="25">()<pos:position pos:line="556" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="556" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="557" pos:column="17">Tracev<pos:position pos:line="557" pos:column="23"/></name><argument_list pos:line="557" pos:column="23">(<argument><expr><operator pos:line="557" pos:column="24">(<pos:position pos:line="557" pos:column="25"/></operator><name pos:line="557" pos:column="25">stderr<pos:position pos:line="557" pos:column="31"/></name><operator pos:line="557" pos:column="31">,<pos:position pos:line="557" pos:column="32"/></operator> <literal type="string" pos:line="557" pos:column="33">"inflate:   length matches trailer\n"<pos:position pos:line="557" pos:column="70"/></literal><operator pos:line="557" pos:column="70">)<pos:position pos:line="557" pos:column="71"/></operator></expr></argument>)<pos:position pos:line="557" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="557" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="558" pos:column="14"/></block></then></if>
<cpp:endif pos:line="559" pos:column="1">#<cpp:directive pos:line="559" pos:column="2">endif<pos:position pos:line="559" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name><name pos:line="560" pos:column="13">state<pos:position pos:line="560" pos:column="18"/></name><operator pos:line="560" pos:column="18">-&gt;<pos:position pos:line="560" pos:column="23"/></operator><name pos:line="560" pos:column="20">mode<pos:position pos:line="560" pos:column="24"/></name></name> <operator pos:line="560" pos:column="25">=<pos:position pos:line="560" pos:column="26"/></operator> <name pos:line="560" pos:column="27">DONE<pos:position pos:line="560" pos:column="31"/></name></expr>;<pos:position pos:line="560" pos:column="32"/></expr_stmt>
        <case pos:line="561" pos:column="9">case <expr><name pos:line="561" pos:column="14">DONE<pos:position pos:line="561" pos:column="18"/></name></expr>:<pos:position pos:line="561" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="562" pos:column="13">ret<pos:position pos:line="562" pos:column="16"/></name> <operator pos:line="562" pos:column="17">=<pos:position pos:line="562" pos:column="18"/></operator> <name pos:line="562" pos:column="19">Z_STREAM_END<pos:position pos:line="562" pos:column="31"/></name></expr>;<pos:position pos:line="562" pos:column="32"/></expr_stmt>
            <goto pos:line="563" pos:column="13">goto <name pos:line="563" pos:column="18">inf_leave<pos:position pos:line="563" pos:column="27"/></name>;<pos:position pos:line="563" pos:column="28"/></goto>
        <case pos:line="564" pos:column="9">case <expr><name pos:line="564" pos:column="14">BAD<pos:position pos:line="564" pos:column="17"/></name></expr>:<pos:position pos:line="564" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="565" pos:column="13">ret<pos:position pos:line="565" pos:column="16"/></name> <operator pos:line="565" pos:column="17">=<pos:position pos:line="565" pos:column="18"/></operator> <name pos:line="565" pos:column="19">Z_DATA_ERROR<pos:position pos:line="565" pos:column="31"/></name></expr>;<pos:position pos:line="565" pos:column="32"/></expr_stmt>
            <goto pos:line="566" pos:column="13">goto <name pos:line="566" pos:column="18">inf_leave<pos:position pos:line="566" pos:column="27"/></name>;<pos:position pos:line="566" pos:column="28"/></goto>
        <case pos:line="567" pos:column="9">case <expr><name pos:line="567" pos:column="14">MEM<pos:position pos:line="567" pos:column="17"/></name></expr>:<pos:position pos:line="567" pos:column="18"/></case>
            <return pos:line="568" pos:column="13">return <expr><name pos:line="568" pos:column="20">Z_MEM_ERROR<pos:position pos:line="568" pos:column="31"/></name></expr>;<pos:position pos:line="568" pos:column="32"/></return>
        <case pos:line="569" pos:column="9">case <expr><name pos:line="569" pos:column="14">SYNC<pos:position pos:line="569" pos:column="18"/></name></expr>:<pos:position pos:line="569" pos:column="19"/></case>
        <default pos:line="570" pos:column="9">default:<pos:position pos:line="570" pos:column="17"/></default>
            <return pos:line="571" pos:column="13">return <expr><name pos:line="571" pos:column="20">Z_STREAM_ERROR<pos:position pos:line="571" pos:column="34"/></name></expr>;<pos:position pos:line="571" pos:column="35"/></return>
        }<pos:position pos:line="572" pos:column="10"/></block></switch></block></for>

    <comment type="block" pos:line="574" pos:column="5">/*
       Return from inflate(), updating the total counts and the check value.
       If there was no progress during the inflate() call, return a buffer
       error.  Call updatewindow() to create and/or update the window state.
       Note: a memory error from inflate() is non-recoverable.
     */</comment>
  <label><name pos:line="580" pos:column="3">inf_leave<pos:position pos:line="580" pos:column="12"/></name>:<pos:position pos:line="580" pos:column="13"/></label>
    <expr_stmt><expr><call><name pos:line="581" pos:column="5">RESTORE<pos:position pos:line="581" pos:column="12"/></name><argument_list pos:line="581" pos:column="12">()<pos:position pos:line="581" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="581" pos:column="15"/></expr_stmt>
    <if pos:line="582" pos:column="5">if <condition pos:line="582" pos:column="8">(<expr><name><name pos:line="582" pos:column="9">state<pos:position pos:line="582" pos:column="14"/></name><operator pos:line="582" pos:column="14">-&gt;<pos:position pos:line="582" pos:column="19"/></operator><name pos:line="582" pos:column="16">wsize<pos:position pos:line="582" pos:column="21"/></name></name> <operator pos:line="582" pos:column="22">||<pos:position pos:line="582" pos:column="24"/></operator> <operator pos:line="582" pos:column="25">(<pos:position pos:line="582" pos:column="26"/></operator><name><name pos:line="582" pos:column="26">state<pos:position pos:line="582" pos:column="31"/></name><operator pos:line="582" pos:column="31">-&gt;<pos:position pos:line="582" pos:column="36"/></operator><name pos:line="582" pos:column="33">mode<pos:position pos:line="582" pos:column="37"/></name></name> <operator pos:line="582" pos:column="38">&lt;<pos:position pos:line="582" pos:column="42"/></operator> <name pos:line="582" pos:column="40">CHECK<pos:position pos:line="582" pos:column="45"/></name> <operator pos:line="582" pos:column="46">&amp;&amp;<pos:position pos:line="582" pos:column="56"/></operator> <name pos:line="582" pos:column="49">out<pos:position pos:line="582" pos:column="52"/></name> <operator pos:line="582" pos:column="53">!=<pos:position pos:line="582" pos:column="55"/></operator> <name><name pos:line="582" pos:column="56">strm<pos:position pos:line="582" pos:column="60"/></name><operator pos:line="582" pos:column="60">-&gt;<pos:position pos:line="582" pos:column="65"/></operator><name pos:line="582" pos:column="62">avail_out<pos:position pos:line="582" pos:column="71"/></name></name><operator pos:line="582" pos:column="71">)<pos:position pos:line="582" pos:column="72"/></operator></expr>)<pos:position pos:line="582" pos:column="73"/></condition><then pos:line="582" pos:column="73">
        <block type="pseudo"><if pos:line="583" pos:column="9">if <condition pos:line="583" pos:column="12">(<expr><call><name pos:line="583" pos:column="13">updatewindow<pos:position pos:line="583" pos:column="25"/></name><argument_list pos:line="583" pos:column="25">(<argument><expr><name pos:line="583" pos:column="26">strm<pos:position pos:line="583" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="583" pos:column="32">out<pos:position pos:line="583" pos:column="35"/></name></expr></argument>)<pos:position pos:line="583" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="583" pos:column="37"/></condition><then pos:line="583" pos:column="37"> <block pos:line="583" pos:column="38">{
            <expr_stmt><expr><name><name pos:line="584" pos:column="13">state<pos:position pos:line="584" pos:column="18"/></name><operator pos:line="584" pos:column="18">-&gt;<pos:position pos:line="584" pos:column="23"/></operator><name pos:line="584" pos:column="20">mode<pos:position pos:line="584" pos:column="24"/></name></name> <operator pos:line="584" pos:column="25">=<pos:position pos:line="584" pos:column="26"/></operator> <name pos:line="584" pos:column="27">MEM<pos:position pos:line="584" pos:column="30"/></name></expr>;<pos:position pos:line="584" pos:column="31"/></expr_stmt>
            <return pos:line="585" pos:column="13">return <expr><name pos:line="585" pos:column="20">Z_MEM_ERROR<pos:position pos:line="585" pos:column="31"/></name></expr>;<pos:position pos:line="585" pos:column="32"/></return>
        }<pos:position pos:line="586" pos:column="10"/></block></then></if></block></then></if>
    <expr_stmt><expr><name pos:line="587" pos:column="5">in<pos:position pos:line="587" pos:column="7"/></name> <operator pos:line="587" pos:column="8">-=<pos:position pos:line="587" pos:column="10"/></operator> <name><name pos:line="587" pos:column="11">strm<pos:position pos:line="587" pos:column="15"/></name><operator pos:line="587" pos:column="15">-&gt;<pos:position pos:line="587" pos:column="20"/></operator><name pos:line="587" pos:column="17">avail_in<pos:position pos:line="587" pos:column="25"/></name></name></expr>;<pos:position pos:line="587" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="588" pos:column="5">out<pos:position pos:line="588" pos:column="8"/></name> <operator pos:line="588" pos:column="9">-=<pos:position pos:line="588" pos:column="11"/></operator> <name><name pos:line="588" pos:column="12">strm<pos:position pos:line="588" pos:column="16"/></name><operator pos:line="588" pos:column="16">-&gt;<pos:position pos:line="588" pos:column="21"/></operator><name pos:line="588" pos:column="18">avail_out<pos:position pos:line="588" pos:column="27"/></name></name></expr>;<pos:position pos:line="588" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="589" pos:column="5">strm<pos:position pos:line="589" pos:column="9"/></name><operator pos:line="589" pos:column="9">-&gt;<pos:position pos:line="589" pos:column="14"/></operator><name pos:line="589" pos:column="11">total_in<pos:position pos:line="589" pos:column="19"/></name></name> <operator pos:line="589" pos:column="20">+=<pos:position pos:line="589" pos:column="22"/></operator> <name pos:line="589" pos:column="23">in<pos:position pos:line="589" pos:column="25"/></name></expr>;<pos:position pos:line="589" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="590" pos:column="5">strm<pos:position pos:line="590" pos:column="9"/></name><operator pos:line="590" pos:column="9">-&gt;<pos:position pos:line="590" pos:column="14"/></operator><name pos:line="590" pos:column="11">total_out<pos:position pos:line="590" pos:column="20"/></name></name> <operator pos:line="590" pos:column="21">+=<pos:position pos:line="590" pos:column="23"/></operator> <name pos:line="590" pos:column="24">out<pos:position pos:line="590" pos:column="27"/></name></expr>;<pos:position pos:line="590" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="591" pos:column="5">state<pos:position pos:line="591" pos:column="10"/></name><operator pos:line="591" pos:column="10">-&gt;<pos:position pos:line="591" pos:column="15"/></operator><name pos:line="591" pos:column="12">total<pos:position pos:line="591" pos:column="17"/></name></name> <operator pos:line="591" pos:column="18">+=<pos:position pos:line="591" pos:column="20"/></operator> <name pos:line="591" pos:column="21">out<pos:position pos:line="591" pos:column="24"/></name></expr>;<pos:position pos:line="591" pos:column="25"/></expr_stmt>
    <if pos:line="592" pos:column="5">if <condition pos:line="592" pos:column="8">(<expr><name><name pos:line="592" pos:column="9">state<pos:position pos:line="592" pos:column="14"/></name><operator pos:line="592" pos:column="14">-&gt;<pos:position pos:line="592" pos:column="19"/></operator><name pos:line="592" pos:column="16">wrap<pos:position pos:line="592" pos:column="20"/></name></name> <operator pos:line="592" pos:column="21">&amp;&amp;<pos:position pos:line="592" pos:column="31"/></operator> <name pos:line="592" pos:column="24">out<pos:position pos:line="592" pos:column="27"/></name></expr>)<pos:position pos:line="592" pos:column="28"/></condition><then pos:line="592" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="593" pos:column="9">strm<pos:position pos:line="593" pos:column="13"/></name><operator pos:line="593" pos:column="13">-&gt;<pos:position pos:line="593" pos:column="18"/></operator><name pos:line="593" pos:column="15">adler<pos:position pos:line="593" pos:column="20"/></name></name> <operator pos:line="593" pos:column="21">=<pos:position pos:line="593" pos:column="22"/></operator> <name><name pos:line="593" pos:column="23">state<pos:position pos:line="593" pos:column="28"/></name><operator pos:line="593" pos:column="28">-&gt;<pos:position pos:line="593" pos:column="33"/></operator><name pos:line="593" pos:column="30">check<pos:position pos:line="593" pos:column="35"/></name></name> <operator pos:line="593" pos:column="36">=<pos:position pos:line="593" pos:column="37"/></operator>
            <call><name pos:line="594" pos:column="13">UPDATE<pos:position pos:line="594" pos:column="19"/></name><argument_list pos:line="594" pos:column="19">(<argument><expr><name><name pos:line="594" pos:column="20">state<pos:position pos:line="594" pos:column="25"/></name><operator pos:line="594" pos:column="25">-&gt;<pos:position pos:line="594" pos:column="30"/></operator><name pos:line="594" pos:column="27">check<pos:position pos:line="594" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="594" pos:column="34">strm<pos:position pos:line="594" pos:column="38"/></name><operator pos:line="594" pos:column="38">-&gt;<pos:position pos:line="594" pos:column="43"/></operator><name pos:line="594" pos:column="40">next_out<pos:position pos:line="594" pos:column="48"/></name></name> <operator pos:line="594" pos:column="49">-<pos:position pos:line="594" pos:column="50"/></operator> <name pos:line="594" pos:column="51">out<pos:position pos:line="594" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="594" pos:column="56">out<pos:position pos:line="594" pos:column="59"/></name></expr></argument>)<pos:position pos:line="594" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="61"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="595" pos:column="5">strm<pos:position pos:line="595" pos:column="9"/></name><operator pos:line="595" pos:column="9">-&gt;<pos:position pos:line="595" pos:column="14"/></operator><name pos:line="595" pos:column="11">data_type<pos:position pos:line="595" pos:column="20"/></name></name> <operator pos:line="595" pos:column="21">=<pos:position pos:line="595" pos:column="22"/></operator> <name><name pos:line="595" pos:column="23">state<pos:position pos:line="595" pos:column="28"/></name><operator pos:line="595" pos:column="28">-&gt;<pos:position pos:line="595" pos:column="33"/></operator><name pos:line="595" pos:column="30">bits<pos:position pos:line="595" pos:column="34"/></name></name> <operator pos:line="595" pos:column="35">+<pos:position pos:line="595" pos:column="36"/></operator> <operator pos:line="595" pos:column="37">(<pos:position pos:line="595" pos:column="38"/></operator><ternary><condition><expr><name><name pos:line="595" pos:column="38">state<pos:position pos:line="595" pos:column="43"/></name><operator pos:line="595" pos:column="43">-&gt;<pos:position pos:line="595" pos:column="48"/></operator><name pos:line="595" pos:column="45">last<pos:position pos:line="595" pos:column="49"/></name></name></expr> ?<pos:position pos:line="595" pos:column="51"/></condition><then pos:line="595" pos:column="51"> <expr><literal type="number" pos:line="595" pos:column="52">64<pos:position pos:line="595" pos:column="54"/></literal></expr> <pos:position pos:line="595" pos:column="55"/></then><else pos:line="595" pos:column="55">: <expr><literal type="number" pos:line="595" pos:column="57">0<pos:position pos:line="595" pos:column="58"/></literal></expr></else></ternary><operator pos:line="595" pos:column="58">)<pos:position pos:line="595" pos:column="59"/></operator> <operator pos:line="595" pos:column="60">+<pos:position pos:line="595" pos:column="61"/></operator>
                      <operator pos:line="596" pos:column="23">(<pos:position pos:line="596" pos:column="24"/></operator><ternary><condition><expr><name><name pos:line="596" pos:column="24">state<pos:position pos:line="596" pos:column="29"/></name><operator pos:line="596" pos:column="29">-&gt;<pos:position pos:line="596" pos:column="34"/></operator><name pos:line="596" pos:column="31">mode<pos:position pos:line="596" pos:column="35"/></name></name> <operator pos:line="596" pos:column="36">==<pos:position pos:line="596" pos:column="38"/></operator> <name pos:line="596" pos:column="39">TYPE<pos:position pos:line="596" pos:column="43"/></name></expr> ?<pos:position pos:line="596" pos:column="45"/></condition><then pos:line="596" pos:column="45"> <expr><literal type="number" pos:line="596" pos:column="46">128<pos:position pos:line="596" pos:column="49"/></literal></expr> <pos:position pos:line="596" pos:column="50"/></then><else pos:line="596" pos:column="50">: <expr><literal type="number" pos:line="596" pos:column="52">0<pos:position pos:line="596" pos:column="53"/></literal></expr></else></ternary><operator pos:line="596" pos:column="53">)<pos:position pos:line="596" pos:column="54"/></operator></expr>;<pos:position pos:line="596" pos:column="55"/></expr_stmt>
    <if pos:line="597" pos:column="5">if <condition pos:line="597" pos:column="8">(<expr><operator pos:line="597" pos:column="9">(<pos:position pos:line="597" pos:column="10"/></operator><operator pos:line="597" pos:column="10">(<pos:position pos:line="597" pos:column="11"/></operator><name pos:line="597" pos:column="11">in<pos:position pos:line="597" pos:column="13"/></name> <operator pos:line="597" pos:column="14">==<pos:position pos:line="597" pos:column="16"/></operator> <literal type="number" pos:line="597" pos:column="17">0<pos:position pos:line="597" pos:column="18"/></literal> <operator pos:line="597" pos:column="19">&amp;&amp;<pos:position pos:line="597" pos:column="29"/></operator> <name pos:line="597" pos:column="22">out<pos:position pos:line="597" pos:column="25"/></name> <operator pos:line="597" pos:column="26">==<pos:position pos:line="597" pos:column="28"/></operator> <literal type="number" pos:line="597" pos:column="29">0<pos:position pos:line="597" pos:column="30"/></literal><operator pos:line="597" pos:column="30">)<pos:position pos:line="597" pos:column="31"/></operator> <operator pos:line="597" pos:column="32">||<pos:position pos:line="597" pos:column="34"/></operator> <name pos:line="597" pos:column="35">flush<pos:position pos:line="597" pos:column="40"/></name> <operator pos:line="597" pos:column="41">==<pos:position pos:line="597" pos:column="43"/></operator> <name pos:line="597" pos:column="44">Z_FINISH<pos:position pos:line="597" pos:column="52"/></name><operator pos:line="597" pos:column="52">)<pos:position pos:line="597" pos:column="53"/></operator> <operator pos:line="597" pos:column="54">&amp;&amp;<pos:position pos:line="597" pos:column="64"/></operator> <name pos:line="597" pos:column="57">ret<pos:position pos:line="597" pos:column="60"/></name> <operator pos:line="597" pos:column="61">==<pos:position pos:line="597" pos:column="63"/></operator> <name pos:line="597" pos:column="64">Z_OK<pos:position pos:line="597" pos:column="68"/></name></expr>)<pos:position pos:line="597" pos:column="69"/></condition><then pos:line="597" pos:column="69">
        <block type="pseudo"><expr_stmt><expr><name pos:line="598" pos:column="9">ret<pos:position pos:line="598" pos:column="12"/></name> <operator pos:line="598" pos:column="13">=<pos:position pos:line="598" pos:column="14"/></operator> <name pos:line="598" pos:column="15">Z_BUF_ERROR<pos:position pos:line="598" pos:column="26"/></name></expr>;<pos:position pos:line="598" pos:column="27"/></expr_stmt></block></then></if>
    <return pos:line="599" pos:column="5">return <expr><name pos:line="599" pos:column="12">ret<pos:position pos:line="599" pos:column="15"/></name></expr>;<pos:position pos:line="599" pos:column="16"/></return>
}<pos:position pos:line="600" pos:column="2"/></block></function_decl></unit>

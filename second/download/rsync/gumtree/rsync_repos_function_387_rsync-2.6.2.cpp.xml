<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_387_rsync-2.6.2.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">inflate_blocks_statef<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">inflate_blocks_new<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">z<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">c<pos:position pos:line="1" pos:column="47"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">w<pos:position pos:line="1" pos:column="50"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">z<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">check_func<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">c<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">uInt<pos:position pos:line="4" pos:column="5"/></name></type> <name pos:line="4" pos:column="6">w<pos:position pos:line="4" pos:column="7"/></name></decl>;<pos:position pos:line="4" pos:column="8"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">inflate_blocks_statef<pos:position pos:line="6" pos:column="24"/></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">s<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">s<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">inflate_blocks_statef<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator><call><name pos:line="8" pos:column="37">ZALLOC<pos:position pos:line="8" pos:column="43"/></name>
       <argument_list pos:line="9" pos:column="8">(<argument><expr><name pos:line="9" pos:column="9">z<pos:position pos:line="9" pos:column="10"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="9" pos:column="11">1<pos:position pos:line="9" pos:column="12"/></literal></expr></argument>,<argument><expr><sizeof pos:line="9" pos:column="13">sizeof<argument_list pos:line="9" pos:column="19">(<argument><expr pos:line="9" pos:column="20">struct <name pos:line="9" pos:column="27">inflate_blocks_state<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator> <operator pos:line="9" pos:column="51">==<pos:position pos:line="9" pos:column="53"/></operator> <name pos:line="9" pos:column="54">Z_NULL<pos:position pos:line="9" pos:column="60"/></name></expr>)<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">s<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name><name pos:line="11" pos:column="8">s<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">hufts<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator>
       <operator pos:line="12" pos:column="8">(<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="9">inflate_huft<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator><call><name pos:line="12" pos:column="24">ZALLOC<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">z<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="34">sizeof<argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">inflate_huft<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="56">MANY<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call><operator pos:line="12" pos:column="61">)<pos:position pos:line="12" pos:column="62"/></operator> <operator pos:line="12" pos:column="63">==<pos:position pos:line="12" pos:column="65"/></operator> <name pos:line="12" pos:column="66">Z_NULL<pos:position pos:line="12" pos:column="72"/></name></expr>)<pos:position pos:line="12" pos:column="73"/></condition><then pos:line="12" pos:column="73">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ZFREE<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">z<pos:position pos:line="14" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="14">s<pos:position pos:line="14" pos:column="15"/></name></expr></argument>)<pos:position pos:line="14" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">Z_NULL<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name><name pos:line="17" pos:column="8">s<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">window<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">Bytef<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></operator><operator pos:line="17" pos:column="28">)<pos:position pos:line="17" pos:column="29"/></operator><call><name pos:line="17" pos:column="29">ZALLOC<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">z<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="39">1<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">w<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator> <operator pos:line="17" pos:column="46">==<pos:position pos:line="17" pos:column="48"/></operator> <name pos:line="17" pos:column="49">Z_NULL<pos:position pos:line="17" pos:column="55"/></name></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ZFREE<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">z<pos:position pos:line="19" pos:column="12"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="14">s<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">hufts<pos:position pos:line="19" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ZFREE<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">z<pos:position pos:line="20" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="14">s<pos:position pos:line="20" pos:column="15"/></name></expr></argument>)<pos:position pos:line="20" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">Z_NULL<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">s<pos:position pos:line="23" pos:column="4"/></name><operator pos:line="23" pos:column="4">-&gt;<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="6">end<pos:position pos:line="23" pos:column="9"/></name></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <name><name pos:line="23" pos:column="12">s<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">window<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">+<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">w<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">s<pos:position pos:line="24" pos:column="4"/></name><operator pos:line="24" pos:column="4">-&gt;<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="6">checkfn<pos:position pos:line="24" pos:column="13"/></name></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">c<pos:position pos:line="24" pos:column="17"/></name></expr>;<pos:position pos:line="24" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="25" pos:column="3">s<pos:position pos:line="25" pos:column="4"/></name><operator pos:line="25" pos:column="4">-&gt;<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="6">mode<pos:position pos:line="25" pos:column="10"/></name></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">TYPE<pos:position pos:line="25" pos:column="17"/></name></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">Tracev<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">stderr<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">,<pos:position pos:line="26" pos:column="18"/></operator> <literal type="string" pos:line="26" pos:column="19">"inflate:   blocks allocated\n"<pos:position pos:line="26" pos:column="50"/></literal><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">inflate_blocks_reset<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">s<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">z<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">Z_NULL<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
  <return pos:line="28" pos:column="3">return <expr><name pos:line="28" pos:column="10">s<pos:position pos:line="28" pos:column="11"/></name></expr>;<pos:position pos:line="28" pos:column="12"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function_decl></unit>

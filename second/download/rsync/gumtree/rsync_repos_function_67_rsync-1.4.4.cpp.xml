<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_67_rsync-1.4.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name><name pos:line="1" pos:column="25">argv<pos:position pos:line="1" pos:column="29"/></name><index pos:line="1" pos:column="29">[]<pos:position pos:line="1" pos:column="31"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">sum<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">SUM_LENGTH<pos:position pos:line="3" pos:column="22"/></name></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="9">j<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">checksum_init<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">()<pos:position pos:line="6" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><expr><name pos:line="8" pos:column="8">i<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator><literal type="number" pos:line="8" pos:column="10">1<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></init><condition><expr><name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">&lt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">argc<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></condition><incr><expr><name pos:line="8" pos:column="19">i<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">++<pos:position pos:line="8" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="23"/></control> <block pos:line="8" pos:column="24">{
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">stat<pos:position pos:line="9" pos:column="16"/></name></name></type> <name pos:line="9" pos:column="17">st<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">stat<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">argv<pos:position pos:line="10" pos:column="18"/></name><index pos:line="10" pos:column="18">[<expr><name pos:line="10" pos:column="19">i<pos:position pos:line="10" pos:column="20"/></name></expr>]<pos:position pos:line="10" pos:column="21"/></index></name></expr></argument>,<argument><expr><operator pos:line="10" pos:column="22">&amp;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="23">st<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call> <operator pos:line="10" pos:column="27">==<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <block pos:line="10" pos:column="33">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">file_checksum<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name><name pos:line="11" pos:column="21">argv<pos:position pos:line="11" pos:column="25"/></name><index pos:line="11" pos:column="25">[<expr><name pos:line="11" pos:column="26">i<pos:position pos:line="11" pos:column="27"/></name></expr>]<pos:position pos:line="11" pos:column="28"/></index></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="29">sum<pos:position pos:line="11" pos:column="32"/></name></expr></argument>,<argument><expr><name><name pos:line="11" pos:column="33">st<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">st_size<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
      <for pos:line="12" pos:column="7">for <control pos:line="12" pos:column="11">(<init><expr><name pos:line="12" pos:column="12">j<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></init><condition><expr><name pos:line="12" pos:column="16">j<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">SUM_LENGTH<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></condition><incr><expr><name pos:line="12" pos:column="29">j<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">++<pos:position pos:line="12" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="33"/></control>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">printf<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"%02X"<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>,<argument><expr><operator pos:line="13" pos:column="23">(<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">unsigned<pos:position pos:line="13" pos:column="32"/></name> <name pos:line="13" pos:column="33">char<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator><name><name pos:line="13" pos:column="38">sum<pos:position pos:line="13" pos:column="41"/></name><index pos:line="13" pos:column="41">[<expr><name pos:line="13" pos:column="42">j<pos:position pos:line="13" pos:column="43"/></name></expr>]<pos:position pos:line="13" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt></block></for>
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">printf<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><literal type="string" pos:line="14" pos:column="14">"  %s\n"<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>,<argument><expr><name><name pos:line="14" pos:column="23">argv<pos:position pos:line="14" pos:column="27"/></name><index pos:line="14" pos:column="27">[<expr><name pos:line="14" pos:column="28">i<pos:position pos:line="14" pos:column="29"/></name></expr>]<pos:position pos:line="14" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></for>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_35_rsync-2.0.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">recv_exclude_list<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">f<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">line<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">MAXPATHLEN<pos:position pos:line="3" pos:column="23"/></name></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">l<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>
  <while pos:line="5" pos:column="3">while <condition pos:line="5" pos:column="9">(<expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">l<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">read_int<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">f<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call><operator pos:line="5" pos:column="24">)<pos:position pos:line="5" pos:column="25"/></operator></expr>)<pos:position pos:line="5" pos:column="26"/></condition> <block pos:line="5" pos:column="27">{
	  <if pos:line="6" pos:column="11">if <condition pos:line="6" pos:column="14">(<expr><name pos:line="6" pos:column="15">l<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&gt;=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="20">MAXPATHLEN<pos:position pos:line="6" pos:column="30"/></name></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="32">overflow<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><literal type="string" pos:line="6" pos:column="41">"recv_exclude_list"<pos:position pos:line="6" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="7" pos:column="11">read_sbuf<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">f<pos:position pos:line="7" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="23">line<pos:position pos:line="7" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="28">l<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="8" pos:column="11">add_exclude<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">line<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></while>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

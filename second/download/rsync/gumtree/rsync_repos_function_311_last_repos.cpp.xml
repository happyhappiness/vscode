<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_311_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">try_dests_reg<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">file_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">file<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">fname<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">ndx<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">cmpbuf<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">stat_x<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">sxp<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">find_exact_for_existing<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="3" pos:column="26">int<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">itemizing<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="41">enum<pos:position pos:line="3" pos:column="45"/></name> <name pos:line="3" pos:column="46">logcode<pos:position pos:line="3" pos:column="53"/></name></name></type> <name pos:line="3" pos:column="54">code<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">STRUCT_STAT<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">real_st<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name><name pos:line="5" pos:column="31">sxp<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">-&gt;<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="36">st<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">best_match<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><operator pos:line="6" pos:column="26">-<pos:position pos:line="6" pos:column="27"/></operator><literal type="number" pos:line="6" pos:column="27">1<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">match_level<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">j<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

	<do pos:line="10" pos:column="9">do <block pos:line="10" pos:column="12">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">pathjoin<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">cmpbuf<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">MAXPATHLEN<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="46">basis_dir<pos:position pos:line="11" pos:column="55"/></name><index pos:line="11" pos:column="55">[<expr><name pos:line="11" pos:column="56">j<pos:position pos:line="11" pos:column="57"/></name></expr>]<pos:position pos:line="11" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">fname<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><call><name pos:line="12" pos:column="21">link_stat<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">cmpbuf<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name><name pos:line="12" pos:column="40">sxp<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">st<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="49">0<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call> <operator pos:line="12" pos:column="52">&lt;<pos:position pos:line="12" pos:column="56"/></operator> <literal type="number" pos:line="12" pos:column="54">0<pos:position pos:line="12" pos:column="55"/></literal> <operator pos:line="12" pos:column="56">||<pos:position pos:line="12" pos:column="58"/></operator> <operator pos:line="12" pos:column="59">!<pos:position pos:line="12" pos:column="60"/></operator><call><name pos:line="12" pos:column="60">S_ISREG<pos:position pos:line="12" pos:column="67"/></name><argument_list pos:line="12" pos:column="67">(<argument><expr><name><name pos:line="12" pos:column="68">sxp<pos:position pos:line="12" pos:column="71"/></name><operator pos:line="12" pos:column="71">-&gt;<pos:position pos:line="12" pos:column="76"/></operator><name pos:line="12" pos:column="73">st<pos:position pos:line="12" pos:column="75"/></name><operator pos:line="12" pos:column="75">.<pos:position pos:line="12" pos:column="76"/></operator><name pos:line="12" pos:column="76">st_mode<pos:position pos:line="12" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="85"/></condition><then pos:line="12" pos:column="85">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<switch pos:line="14" pos:column="17">switch <condition pos:line="14" pos:column="24">(<expr><name pos:line="14" pos:column="25">match_level<pos:position pos:line="14" pos:column="36"/></name></expr>)<pos:position pos:line="14" pos:column="37"/></condition> <block pos:line="14" pos:column="38">{
		<case pos:line="15" pos:column="17">case <expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>:<pos:position pos:line="15" pos:column="24"/></case>
			<expr_stmt><expr><name pos:line="16" pos:column="25">best_match<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">=<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">j<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="17" pos:column="25">match_level<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">=<pos:position pos:line="17" pos:column="38"/></operator> <literal type="number" pos:line="17" pos:column="39">1<pos:position pos:line="17" pos:column="40"/></literal></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
			<comment type="block" pos:line="18" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="19" pos:column="17">case <expr><literal type="number" pos:line="19" pos:column="22">1<pos:position pos:line="19" pos:column="23"/></literal></expr>:<pos:position pos:line="19" pos:column="24"/></case>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><call><name pos:line="20" pos:column="30">unchanged_file<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><name pos:line="20" pos:column="45">cmpbuf<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">file<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="59">&amp;<pos:position pos:line="20" pos:column="64"/></operator><name><name pos:line="20" pos:column="60">sxp<pos:position pos:line="20" pos:column="63"/></name><operator pos:line="20" pos:column="63">-&gt;<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="65">st<pos:position pos:line="20" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="69"/></condition><then pos:line="20" pos:column="69">
				<block type="pseudo"><continue pos:line="21" pos:column="33">continue;<pos:position pos:line="21" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="22" pos:column="25">best_match<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">j<pos:position pos:line="22" pos:column="39"/></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">match_level<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">=<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">2<pos:position pos:line="23" pos:column="40"/></literal></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
			<comment type="block" pos:line="24" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="25" pos:column="17">case <expr><literal type="number" pos:line="25" pos:column="22">2<pos:position pos:line="25" pos:column="23"/></literal></expr>:<pos:position pos:line="25" pos:column="24"/></case>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><operator pos:line="26" pos:column="29">!<pos:position pos:line="26" pos:column="30"/></operator><call><name pos:line="26" pos:column="30">unchanged_attrs<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name pos:line="26" pos:column="46">cmpbuf<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">file<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">sxp<pos:position pos:line="26" pos:column="63"/></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="65"/></condition><then pos:line="26" pos:column="65"> <block pos:line="26" pos:column="66">{
				<expr_stmt><expr><call><name pos:line="27" pos:column="33">free_stat_x<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">sxp<pos:position pos:line="27" pos:column="48"/></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
				<continue pos:line="28" pos:column="33">continue;<pos:position pos:line="28" pos:column="42"/></continue>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="30" pos:column="25">best_match<pos:position pos:line="30" pos:column="35"/></name> <operator pos:line="30" pos:column="36">=<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">j<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="31" pos:column="25">match_level<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">=<pos:position pos:line="31" pos:column="38"/></operator> <literal type="number" pos:line="31" pos:column="39">3<pos:position pos:line="31" pos:column="40"/></literal></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>
			<break pos:line="32" pos:column="25">break;<pos:position pos:line="32" pos:column="31"/></break>
		}<pos:position pos:line="33" pos:column="18"/></block></switch>
		<break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
	}<pos:position pos:line="35" pos:column="10"/></block> while <condition pos:line="35" pos:column="17">(<expr><name><name pos:line="35" pos:column="18">basis_dir<pos:position pos:line="35" pos:column="27"/></name><index pos:line="35" pos:column="27">[<expr><operator pos:line="35" pos:column="28">++<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">j<pos:position pos:line="35" pos:column="31"/></name></expr>]<pos:position pos:line="35" pos:column="32"/></index></name> <operator pos:line="35" pos:column="33">!=<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">NULL<pos:position pos:line="35" pos:column="40"/></name></expr>)<pos:position pos:line="35" pos:column="41"/></condition>;<pos:position pos:line="35" pos:column="42"/></do>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">match_level<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26">
		<block type="pseudo"><goto pos:line="38" pos:column="17">goto <name pos:line="38" pos:column="22">got_nothing_for_ya<pos:position pos:line="38" pos:column="40"/></name>;<pos:position pos:line="38" pos:column="41"/></goto></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">j<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">!=<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">best_match<pos:position pos:line="40" pos:column="28"/></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block pos:line="40" pos:column="30">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">j<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">best_match<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">pathjoin<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">cmpbuf<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">MAXPATHLEN<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="46">basis_dir<pos:position pos:line="42" pos:column="55"/></name><index pos:line="42" pos:column="55">[<expr><name pos:line="42" pos:column="56">j<pos:position pos:line="42" pos:column="57"/></name></expr>]<pos:position pos:line="42" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">fname<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><call><name pos:line="43" pos:column="21">link_stat<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">cmpbuf<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="39">&amp;<pos:position pos:line="43" pos:column="44"/></operator><name><name pos:line="43" pos:column="40">sxp<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">st<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="49">0<pos:position pos:line="43" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call> <operator pos:line="43" pos:column="52">&lt;<pos:position pos:line="43" pos:column="56"/></operator> <literal type="number" pos:line="43" pos:column="54">0<pos:position pos:line="43" pos:column="55"/></literal></expr>)<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56">
			<block type="pseudo"><goto pos:line="44" pos:column="25">goto <name pos:line="44" pos:column="30">got_nothing_for_ya<pos:position pos:line="44" pos:column="48"/></name>;<pos:position pos:line="44" pos:column="49"/></goto></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">match_level<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">==<pos:position pos:line="47" pos:column="27"/></operator> <literal type="number" pos:line="47" pos:column="28">3<pos:position pos:line="47" pos:column="29"/></literal> <operator pos:line="47" pos:column="30">&amp;&amp;<pos:position pos:line="47" pos:column="40"/></operator> <operator pos:line="47" pos:column="33">!<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">copy_dest<pos:position pos:line="47" pos:column="43"/></name></expr>)<pos:position pos:line="47" pos:column="44"/></condition><then pos:line="47" pos:column="44"> <block pos:line="47" pos:column="45">{
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">find_exact_for_existing<pos:position pos:line="48" pos:column="44"/></name></expr>)<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45"> <block pos:line="48" pos:column="46">{
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">link_dest<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">&amp;&amp;<pos:position pos:line="49" pos:column="49"/></operator> <name><name pos:line="49" pos:column="42">real_st<pos:position pos:line="49" pos:column="49"/></name><operator pos:line="49" pos:column="49">.<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="50">st_dev<pos:position pos:line="49" pos:column="56"/></name></name> <operator pos:line="49" pos:column="57">==<pos:position pos:line="49" pos:column="59"/></operator> <name><name pos:line="49" pos:column="60">sxp<pos:position pos:line="49" pos:column="63"/></name><operator pos:line="49" pos:column="63">-&gt;<pos:position pos:line="49" pos:column="68"/></operator><name pos:line="49" pos:column="65">st<pos:position pos:line="49" pos:column="67"/></name><operator pos:line="49" pos:column="67">.<pos:position pos:line="49" pos:column="68"/></operator><name pos:line="49" pos:column="68">st_dev<pos:position pos:line="49" pos:column="74"/></name></name> <operator pos:line="49" pos:column="75">&amp;&amp;<pos:position pos:line="49" pos:column="85"/></operator> <name><name pos:line="49" pos:column="78">real_st<pos:position pos:line="49" pos:column="85"/></name><operator pos:line="49" pos:column="85">.<pos:position pos:line="49" pos:column="86"/></operator><name pos:line="49" pos:column="86">st_ino<pos:position pos:line="49" pos:column="92"/></name></name> <operator pos:line="49" pos:column="93">==<pos:position pos:line="49" pos:column="95"/></operator> <name><name pos:line="49" pos:column="96">sxp<pos:position pos:line="49" pos:column="99"/></name><operator pos:line="49" pos:column="99">-&gt;<pos:position pos:line="49" pos:column="104"/></operator><name pos:line="49" pos:column="101">st<pos:position pos:line="49" pos:column="103"/></name><operator pos:line="49" pos:column="103">.<pos:position pos:line="49" pos:column="104"/></operator><name pos:line="49" pos:column="104">st_ino<pos:position pos:line="49" pos:column="110"/></name></name></expr>)<pos:position pos:line="49" pos:column="111"/></condition><then pos:line="49" pos:column="111">
				<block type="pseudo"><return pos:line="50" pos:column="33">return <expr><operator pos:line="50" pos:column="40">-<pos:position pos:line="50" pos:column="41"/></operator><literal type="number" pos:line="50" pos:column="41">1<pos:position pos:line="50" pos:column="42"/></literal></expr>;<pos:position pos:line="50" pos:column="43"/></return></block></then></if>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><call><name pos:line="51" pos:column="29">do_unlink<pos:position pos:line="51" pos:column="38"/></name><argument_list pos:line="51" pos:column="38">(<argument><expr><name pos:line="51" pos:column="39">fname<pos:position pos:line="51" pos:column="44"/></name></expr></argument>)<pos:position pos:line="51" pos:column="45"/></argument_list></call> <operator pos:line="51" pos:column="46">&lt;<pos:position pos:line="51" pos:column="50"/></operator> <literal type="number" pos:line="51" pos:column="48">0<pos:position pos:line="51" pos:column="49"/></literal> <operator pos:line="51" pos:column="50">&amp;&amp;<pos:position pos:line="51" pos:column="60"/></operator> <name pos:line="51" pos:column="53">errno<pos:position pos:line="51" pos:column="58"/></name> <operator pos:line="51" pos:column="59">!=<pos:position pos:line="51" pos:column="61"/></operator> <name pos:line="51" pos:column="62">ENOENT<pos:position pos:line="51" pos:column="68"/></name></expr>)<pos:position pos:line="51" pos:column="69"/></condition><then pos:line="51" pos:column="69">
				<block type="pseudo"><goto pos:line="52" pos:column="33">goto <name pos:line="52" pos:column="38">got_nothing_for_ya<pos:position pos:line="52" pos:column="56"/></name>;<pos:position pos:line="52" pos:column="57"/></goto></block></then></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="54" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">link_dest<pos:position pos:line="55" pos:column="30"/></name></expr>)<pos:position pos:line="55" pos:column="31"/></condition><then pos:line="55" pos:column="31"> <block pos:line="55" pos:column="32">{
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><operator pos:line="56" pos:column="29">!<pos:position pos:line="56" pos:column="30"/></operator><call><name pos:line="56" pos:column="30">hard_link_one<pos:position pos:line="56" pos:column="43"/></name><argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">file<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="50">fname<pos:position pos:line="56" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="57">cmpbuf<pos:position pos:line="56" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="65">1<pos:position pos:line="56" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="68"/></condition><then pos:line="56" pos:column="68">
				<block type="pseudo"><goto pos:line="57" pos:column="33">goto <name pos:line="57" pos:column="38">try_a_copy<pos:position pos:line="57" pos:column="48"/></name>;<pos:position pos:line="57" pos:column="49"/></goto></block></then></if>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><name pos:line="58" pos:column="29">preserve_hard_links<pos:position pos:line="58" pos:column="48"/></name> <operator pos:line="58" pos:column="49">&amp;&amp;<pos:position pos:line="58" pos:column="59"/></operator> <call><name pos:line="58" pos:column="52">F_IS_HLINKED<pos:position pos:line="58" pos:column="64"/></name><argument_list pos:line="58" pos:column="64">(<argument><expr><name pos:line="58" pos:column="65">file<pos:position pos:line="58" pos:column="69"/></name></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="71"/></condition><then pos:line="58" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="33">finish_hard_link<pos:position pos:line="59" pos:column="49"/></name><argument_list pos:line="59" pos:column="49">(<argument><expr><name pos:line="59" pos:column="50">file<pos:position pos:line="59" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="56">fname<pos:position pos:line="59" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="63">ndx<pos:position pos:line="59" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="68">&amp;<pos:position pos:line="59" pos:column="73"/></operator><name><name pos:line="59" pos:column="69">sxp<pos:position pos:line="59" pos:column="72"/></name><operator pos:line="59" pos:column="72">-&gt;<pos:position pos:line="59" pos:column="77"/></operator><name pos:line="59" pos:column="74">st<pos:position pos:line="59" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="78">itemizing<pos:position pos:line="59" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="89">code<pos:position pos:line="59" pos:column="93"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="95">j<pos:position pos:line="59" pos:column="96"/></name></expr></argument>)<pos:position pos:line="59" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="98"/></expr_stmt></block></then></if>
			<if pos:line="60" pos:column="25">if <condition pos:line="60" pos:column="28">(<expr><operator pos:line="60" pos:column="29">!<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="30">maybe_ATTRS_REPORT<pos:position pos:line="60" pos:column="48"/></name> <operator pos:line="60" pos:column="49">&amp;&amp;<pos:position pos:line="60" pos:column="59"/></operator> <operator pos:line="60" pos:column="52">(<pos:position pos:line="60" pos:column="53"/></operator><call><name pos:line="60" pos:column="53">INFO_GTE<pos:position pos:line="60" pos:column="61"/></name><argument_list pos:line="60" pos:column="61">(<argument><expr><name pos:line="60" pos:column="62">NAME<pos:position pos:line="60" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="68">2<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call> <operator pos:line="60" pos:column="71">||<pos:position pos:line="60" pos:column="73"/></operator> <name pos:line="60" pos:column="74">stdout_format_has_i<pos:position pos:line="60" pos:column="93"/></name> <operator pos:line="60" pos:column="94">&gt;<pos:position pos:line="60" pos:column="98"/></operator> <literal type="number" pos:line="60" pos:column="96">1<pos:position pos:line="60" pos:column="97"/></literal><operator pos:line="60" pos:column="97">)<pos:position pos:line="60" pos:column="98"/></operator></expr>)<pos:position pos:line="60" pos:column="99"/></condition><then pos:line="60" pos:column="99"> <block pos:line="60" pos:column="100">{
				<expr_stmt><expr><call><name pos:line="61" pos:column="33">itemize<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">cmpbuf<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">file<pos:position pos:line="61" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="55">ndx<pos:position pos:line="61" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="60">1<pos:position pos:line="61" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="63">sxp<pos:position pos:line="61" pos:column="66"/></name></expr></argument>,
					<argument><expr><name pos:line="62" pos:column="41">ITEM_LOCAL_CHANGE<pos:position pos:line="62" pos:column="58"/></name> <operator pos:line="62" pos:column="59">|<pos:position pos:line="62" pos:column="60"/></operator> <name pos:line="62" pos:column="61">ITEM_XNAME_FOLLOWS<pos:position pos:line="62" pos:column="79"/></name></expr></argument>,
					<argument><expr><literal type="number" pos:line="63" pos:column="41">0<pos:position pos:line="63" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="44">""<pos:position pos:line="63" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="64" pos:column="26"/></block></then></if>
		}<pos:position pos:line="65" pos:column="18"/></block></then> <else pos:line="65" pos:column="19">else
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
		<block pos:line="67" pos:column="17">{
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><name pos:line="68" pos:column="29">itemizing<pos:position pos:line="68" pos:column="38"/></name></expr>)<pos:position pos:line="68" pos:column="39"/></condition><then pos:line="68" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="33">itemize<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name pos:line="69" pos:column="41">cmpbuf<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="49">file<pos:position pos:line="69" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="55">ndx<pos:position pos:line="69" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="60">0<pos:position pos:line="69" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="63">sxp<pos:position pos:line="69" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="68">0<pos:position pos:line="69" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="71">0<pos:position pos:line="69" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="74">NULL<pos:position pos:line="69" pos:column="78"/></name></expr></argument>)<pos:position pos:line="69" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="80"/></expr_stmt></block></then></if>
		}<pos:position pos:line="70" pos:column="18"/></block></else></if>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><call><name pos:line="71" pos:column="21">INFO_GTE<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><name pos:line="71" pos:column="30">NAME<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="36">2<pos:position pos:line="71" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="38"/></argument_list></call> <operator pos:line="71" pos:column="39">&amp;&amp;<pos:position pos:line="71" pos:column="49"/></operator> <name pos:line="71" pos:column="42">maybe_ATTRS_REPORT<pos:position pos:line="71" pos:column="60"/></name></expr>)<pos:position pos:line="71" pos:column="61"/></condition><then pos:line="71" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="25">rprintf<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><name pos:line="72" pos:column="33">FCLIENT<pos:position pos:line="72" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="42">"%s is uptodate\n"<pos:position pos:line="72" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="62">fname<pos:position pos:line="72" pos:column="67"/></name></expr></argument>)<pos:position pos:line="72" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="69"/></expr_stmt></block></then></if>
		<return pos:line="73" pos:column="17">return <expr><operator pos:line="73" pos:column="24">-<pos:position pos:line="73" pos:column="25"/></operator><literal type="number" pos:line="73" pos:column="25">2<pos:position pos:line="73" pos:column="26"/></literal></expr>;<pos:position pos:line="73" pos:column="27"/></return>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>

	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">find_exact_for_existing<pos:position pos:line="76" pos:column="36"/></name></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37">
		<block type="pseudo"><goto pos:line="77" pos:column="17">goto <name pos:line="77" pos:column="22">got_nothing_for_ya<pos:position pos:line="77" pos:column="40"/></name>;<pos:position pos:line="77" pos:column="41"/></goto></block></then></if>

	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">match_level<pos:position pos:line="79" pos:column="24"/></name> <operator pos:line="79" pos:column="25">&gt;=<pos:position pos:line="79" pos:column="30"/></operator> <literal type="number" pos:line="79" pos:column="28">2<pos:position pos:line="79" pos:column="29"/></literal></expr>)<pos:position pos:line="79" pos:column="30"/></condition><then pos:line="79" pos:column="30"> <block pos:line="79" pos:column="31">{
<cpp:ifdef pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">ifdef<pos:position pos:line="80" pos:column="7"/></cpp:directive> <name pos:line="80" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="80" pos:column="26"/></name></cpp:ifdef>
	  <label><name pos:line="81" pos:column="11">try_a_copy<pos:position pos:line="81" pos:column="21"/></name>:<pos:position pos:line="81" pos:column="22"/></label> <comment type="block" pos:line="81" pos:column="23">/* Copy the file locally. */</comment>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><operator pos:line="83" pos:column="21">!<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="22">dry_run<pos:position pos:line="83" pos:column="29"/></name> <operator pos:line="83" pos:column="30">&amp;&amp;<pos:position pos:line="83" pos:column="40"/></operator> <call><name pos:line="83" pos:column="33">copy_altdest_file<pos:position pos:line="83" pos:column="50"/></name><argument_list pos:line="83" pos:column="50">(<argument><expr><name pos:line="83" pos:column="51">cmpbuf<pos:position pos:line="83" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="59">fname<pos:position pos:line="83" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="66">file<pos:position pos:line="83" pos:column="70"/></name></expr></argument>)<pos:position pos:line="83" pos:column="71"/></argument_list></call> <operator pos:line="83" pos:column="72">&lt;<pos:position pos:line="83" pos:column="76"/></operator> <literal type="number" pos:line="83" pos:column="74">0<pos:position pos:line="83" pos:column="75"/></literal></expr>)<pos:position pos:line="83" pos:column="76"/></condition><then pos:line="83" pos:column="76"> <block pos:line="83" pos:column="77">{
			<if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><name pos:line="84" pos:column="29">find_exact_for_existing<pos:position pos:line="84" pos:column="52"/></name></expr>)<pos:position pos:line="84" pos:column="53"/></condition><then pos:line="84" pos:column="53"> <comment type="block" pos:line="84" pos:column="54">/* Can get here via hard-link failure */</comment>
				<block type="pseudo"><goto pos:line="85" pos:column="33">goto <name pos:line="85" pos:column="38">got_nothing_for_ya<pos:position pos:line="85" pos:column="56"/></name>;<pos:position pos:line="85" pos:column="57"/></goto></block></then></if>
			<return pos:line="86" pos:column="25">return <expr><operator pos:line="86" pos:column="32">-<pos:position pos:line="86" pos:column="33"/></operator><literal type="number" pos:line="86" pos:column="33">1<pos:position pos:line="86" pos:column="34"/></literal></expr>;<pos:position pos:line="86" pos:column="35"/></return>
		}<pos:position pos:line="87" pos:column="18"/></block></then></if>
		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><name pos:line="88" pos:column="21">itemizing<pos:position pos:line="88" pos:column="30"/></name></expr>)<pos:position pos:line="88" pos:column="31"/></condition><then pos:line="88" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="25">itemize<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name pos:line="89" pos:column="33">cmpbuf<pos:position pos:line="89" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="41">file<pos:position pos:line="89" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="47">ndx<pos:position pos:line="89" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="52">0<pos:position pos:line="89" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="55">sxp<pos:position pos:line="89" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="60">ITEM_LOCAL_CHANGE<pos:position pos:line="89" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="79">0<pos:position pos:line="89" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="82">NULL<pos:position pos:line="89" pos:column="86"/></name></expr></argument>)<pos:position pos:line="89" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="88"/></expr_stmt></block></then></if>
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">maybe_ATTRS_REPORT<pos:position pos:line="90" pos:column="39"/></name>
		 <operator pos:line="91" pos:column="18">&amp;&amp;<pos:position pos:line="91" pos:column="28"/></operator> <operator pos:line="91" pos:column="21">(<pos:position pos:line="91" pos:column="22"/></operator><operator pos:line="91" pos:column="22">(<pos:position pos:line="91" pos:column="23"/></operator><operator pos:line="91" pos:column="23">!<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="24">itemizing<pos:position pos:line="91" pos:column="33"/></name> <operator pos:line="91" pos:column="34">&amp;&amp;<pos:position pos:line="91" pos:column="44"/></operator> <call><name pos:line="91" pos:column="37">INFO_GTE<pos:position pos:line="91" pos:column="45"/></name><argument_list pos:line="91" pos:column="45">(<argument><expr><name pos:line="91" pos:column="46">NAME<pos:position pos:line="91" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="52">1<pos:position pos:line="91" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call> <operator pos:line="91" pos:column="55">&amp;&amp;<pos:position pos:line="91" pos:column="65"/></operator> <name pos:line="91" pos:column="58">match_level<pos:position pos:line="91" pos:column="69"/></name> <operator pos:line="91" pos:column="70">==<pos:position pos:line="91" pos:column="72"/></operator> <literal type="number" pos:line="91" pos:column="73">2<pos:position pos:line="91" pos:column="74"/></literal><operator pos:line="91" pos:column="74">)<pos:position pos:line="91" pos:column="75"/></operator>
		  <operator pos:line="92" pos:column="19">||<pos:position pos:line="92" pos:column="21"/></operator> <operator pos:line="92" pos:column="22">(<pos:position pos:line="92" pos:column="23"/></operator><call><name pos:line="92" pos:column="23">INFO_GTE<pos:position pos:line="92" pos:column="31"/></name><argument_list pos:line="92" pos:column="31">(<argument><expr><name pos:line="92" pos:column="32">NAME<pos:position pos:line="92" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="38">2<pos:position pos:line="92" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="40"/></argument_list></call> <operator pos:line="92" pos:column="41">&amp;&amp;<pos:position pos:line="92" pos:column="51"/></operator> <name pos:line="92" pos:column="44">match_level<pos:position pos:line="92" pos:column="55"/></name> <operator pos:line="92" pos:column="56">==<pos:position pos:line="92" pos:column="58"/></operator> <literal type="number" pos:line="92" pos:column="59">3<pos:position pos:line="92" pos:column="60"/></literal><operator pos:line="92" pos:column="60">)<pos:position pos:line="92" pos:column="61"/></operator><operator pos:line="92" pos:column="61">)<pos:position pos:line="92" pos:column="62"/></operator></expr>)<pos:position pos:line="92" pos:column="63"/></condition><then pos:line="92" pos:column="63"> <block pos:line="92" pos:column="64">{
			<expr_stmt><expr><name pos:line="93" pos:column="25">code<pos:position pos:line="93" pos:column="29"/></name> <operator pos:line="93" pos:column="30">=<pos:position pos:line="93" pos:column="31"/></operator> <ternary><condition><expr><name pos:line="93" pos:column="32">match_level<pos:position pos:line="93" pos:column="43"/></name> <operator pos:line="93" pos:column="44">==<pos:position pos:line="93" pos:column="46"/></operator> <literal type="number" pos:line="93" pos:column="47">3<pos:position pos:line="93" pos:column="48"/></literal></expr> ?<pos:position pos:line="93" pos:column="50"/></condition><then pos:line="93" pos:column="50"> <expr><name pos:line="93" pos:column="51">FCLIENT<pos:position pos:line="93" pos:column="58"/></name></expr> <pos:position pos:line="93" pos:column="59"/></then><else pos:line="93" pos:column="59">: <expr><name pos:line="93" pos:column="61">FINFO<pos:position pos:line="93" pos:column="66"/></name></expr></else></ternary></expr>;<pos:position pos:line="93" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">rprintf<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">code<pos:position pos:line="94" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="39">"%s%s\n"<pos:position pos:line="94" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="49">fname<pos:position pos:line="94" pos:column="54"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="95" pos:column="33">match_level<pos:position pos:line="95" pos:column="44"/></name> <operator pos:line="95" pos:column="45">==<pos:position pos:line="95" pos:column="47"/></operator> <literal type="number" pos:line="95" pos:column="48">3<pos:position pos:line="95" pos:column="49"/></literal></expr> ?<pos:position pos:line="95" pos:column="51"/></condition><then pos:line="95" pos:column="51"> <expr><literal type="string" pos:line="95" pos:column="52">" is uptodate"<pos:position pos:line="95" pos:column="66"/></literal></expr> <pos:position pos:line="95" pos:column="67"/></then><else pos:line="95" pos:column="67">: <expr><literal type="string" pos:line="95" pos:column="69">""<pos:position pos:line="95" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="95" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="96" pos:column="18"/></block></then></if>
<cpp:ifdef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifdef<pos:position pos:line="97" pos:column="7"/></cpp:directive> <name pos:line="97" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="97" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">preserve_hard_links<pos:position pos:line="98" pos:column="40"/></name> <operator pos:line="98" pos:column="41">&amp;&amp;<pos:position pos:line="98" pos:column="51"/></operator> <call><name pos:line="98" pos:column="44">F_IS_HLINKED<pos:position pos:line="98" pos:column="56"/></name><argument_list pos:line="98" pos:column="56">(<argument><expr><name pos:line="98" pos:column="57">file<pos:position pos:line="98" pos:column="61"/></name></expr></argument>)<pos:position pos:line="98" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="63"/></condition><then pos:line="98" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="25">finish_hard_link<pos:position pos:line="99" pos:column="41"/></name><argument_list pos:line="99" pos:column="41">(<argument><expr><name pos:line="99" pos:column="42">file<pos:position pos:line="99" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="48">fname<pos:position pos:line="99" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="55">ndx<pos:position pos:line="99" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="60">&amp;<pos:position pos:line="99" pos:column="65"/></operator><name><name pos:line="99" pos:column="61">sxp<pos:position pos:line="99" pos:column="64"/></name><operator pos:line="99" pos:column="64">-&gt;<pos:position pos:line="99" pos:column="69"/></operator><name pos:line="99" pos:column="66">st<pos:position pos:line="99" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="70">itemizing<pos:position pos:line="99" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="81">code<pos:position pos:line="99" pos:column="85"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="87">-<pos:position pos:line="99" pos:column="88"/></operator><literal type="number" pos:line="99" pos:column="88">1<pos:position pos:line="99" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="91"/></expr_stmt></block></then></if>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
		<return pos:line="101" pos:column="17">return <expr><operator pos:line="101" pos:column="24">-<pos:position pos:line="101" pos:column="25"/></operator><literal type="number" pos:line="101" pos:column="25">2<pos:position pos:line="101" pos:column="26"/></literal></expr>;<pos:position pos:line="101" pos:column="27"/></return>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if>

	<return pos:line="104" pos:column="9">return <expr><name pos:line="104" pos:column="16">FNAMECMP_BASIS_DIR_LOW<pos:position pos:line="104" pos:column="38"/></name> <operator pos:line="104" pos:column="39">+<pos:position pos:line="104" pos:column="40"/></operator> <name pos:line="104" pos:column="41">j<pos:position pos:line="104" pos:column="42"/></name></expr>;<pos:position pos:line="104" pos:column="43"/></return>

<label><name pos:line="106" pos:column="1">got_nothing_for_ya<pos:position pos:line="106" pos:column="19"/></name>:<pos:position pos:line="106" pos:column="20"/></label>
	<expr_stmt><expr><name><name pos:line="107" pos:column="9">sxp<pos:position pos:line="107" pos:column="12"/></name><operator pos:line="107" pos:column="12">-&gt;<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="14">st<pos:position pos:line="107" pos:column="16"/></name></name> <operator pos:line="107" pos:column="17">=<pos:position pos:line="107" pos:column="18"/></operator> <name pos:line="107" pos:column="19">real_st<pos:position pos:line="107" pos:column="26"/></name></expr>;<pos:position pos:line="107" pos:column="27"/></expr_stmt>
	<return pos:line="108" pos:column="9">return <expr><operator pos:line="108" pos:column="16">-<pos:position pos:line="108" pos:column="17"/></operator><literal type="number" pos:line="108" pos:column="17">1<pos:position pos:line="108" pos:column="18"/></literal></expr>;<pos:position pos:line="108" pos:column="19"/></return>
}<pos:position pos:line="109" pos:column="2"/></block></function></unit>

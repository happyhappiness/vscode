<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_278_rsync-2.6.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">bitbag_set_bit<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">bitbag<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">bb<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">ndx<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">slot<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">ndx<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">/<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">BB_PER_SLOT_BITS<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
	<expr_stmt><expr><name pos:line="4" pos:column="9">ndx<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">%=<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">BB_PER_SLOT_BITS<pos:position pos:line="4" pos:column="32"/></name></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">bb<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">bits<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><name pos:line="6" pos:column="23">slot<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><operator pos:line="7" pos:column="22">(<pos:position pos:line="7" pos:column="23"/></operator><name><name pos:line="7" pos:column="23">bb<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">-&gt;<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="27">bits<pos:position pos:line="7" pos:column="31"/></name><index pos:line="7" pos:column="31">[<expr><name pos:line="7" pos:column="32">slot<pos:position pos:line="7" pos:column="36"/></name></expr>]<pos:position pos:line="7" pos:column="37"/></index></name> <operator pos:line="7" pos:column="38">=<pos:position pos:line="7" pos:column="39"/></operator> <operator pos:line="7" pos:column="40">(<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">uint32<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">*<pos:position pos:line="7" pos:column="48"/></operator><operator pos:line="7" pos:column="48">)<pos:position pos:line="7" pos:column="49"/></operator><call><name pos:line="7" pos:column="49">calloc<pos:position pos:line="7" pos:column="55"/></name><argument_list pos:line="7" pos:column="55">(<argument><expr><name pos:line="7" pos:column="56">BB_PER_SLOT_INTS<pos:position pos:line="7" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="74">4<pos:position pos:line="7" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call><operator pos:line="7" pos:column="76">)<pos:position pos:line="7" pos:column="77"/></operator></expr>)<pos:position pos:line="7" pos:column="78"/></condition><then pos:line="7" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">out_of_memory<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="string" pos:line="8" pos:column="39">"bitbag_set_bit"<pos:position pos:line="8" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">bb<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">bits<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><name pos:line="11" pos:column="18">slot<pos:position pos:line="11" pos:column="22"/></name></expr>]<pos:position pos:line="11" pos:column="23"/></index><index pos:line="11" pos:column="23">[<expr><name pos:line="11" pos:column="24">ndx<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">/<pos:position pos:line="11" pos:column="28"/></operator><literal type="number" pos:line="11" pos:column="28">32<pos:position pos:line="11" pos:column="30"/></literal></expr>]<pos:position pos:line="11" pos:column="31"/></index></name> <operator pos:line="11" pos:column="32">|=<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="35">1u<pos:position pos:line="11" pos:column="37"/></literal> <operator pos:line="11" pos:column="38">&lt;&lt;<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="41">(<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">ndx<pos:position pos:line="11" pos:column="45"/></name> <operator pos:line="11" pos:column="46">%<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">32<pos:position pos:line="11" pos:column="50"/></literal><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

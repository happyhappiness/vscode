<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_251_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">auth_client<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">fd<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">user<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">challenge<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">pass<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">pass2<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><literal type="number" pos:line="4" pos:column="20">30<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">extern<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">char<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">password_file<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">user<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">||<pos:position pos:line="7" pos:column="21"/></operator> <operator pos:line="7" pos:column="22">!<pos:position pos:line="7" pos:column="23"/></operator><operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">user<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block type="pseudo"><return pos:line="7" pos:column="30">return;<pos:position pos:line="7" pos:column="37"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">(<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">pass<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator><call><name pos:line="9" pos:column="20">getpassf<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">password_file<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call><operator pos:line="9" pos:column="43">)<pos:position pos:line="9" pos:column="44"/></operator> <operator pos:line="9" pos:column="45">&amp;&amp;<pos:position pos:line="9" pos:column="55"/></operator> <operator pos:line="9" pos:column="48">!<pos:position pos:line="9" pos:column="49"/></operator><operator pos:line="9" pos:column="49">(<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">pass<pos:position pos:line="9" pos:column="54"/></name><operator pos:line="9" pos:column="54">=<pos:position pos:line="9" pos:column="55"/></operator><call><name pos:line="9" pos:column="55">getenv<pos:position pos:line="9" pos:column="61"/></name><argument_list pos:line="9" pos:column="61">(<argument><expr><literal type="string" pos:line="9" pos:column="62">"RSYNC_PASSWORD"<pos:position pos:line="9" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call><operator pos:line="9" pos:column="79">)<pos:position pos:line="9" pos:column="80"/></operator></expr>)<pos:position pos:line="9" pos:column="81"/></condition><then pos:line="9" pos:column="81"> <block pos:line="9" pos:column="82">{
		<comment type="block" pos:line="10" pos:column="17">/* XXX: cyeoh says that getpass is deprecated, because
		   it may return a truncated password on some systems,
		   and it is not in the LSB. */</comment>
		<expr_stmt><expr><name pos:line="13" pos:column="17">pass<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">getpass<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><literal type="string" pos:line="13" pos:column="32">"Password: "<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">pass<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">||<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="22">!<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">pass<pos:position pos:line="16" pos:column="28"/></name></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29"> <block pos:line="16" pos:column="30">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">pass<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <literal type="string" pos:line="17" pos:column="24">""<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">generate_hash<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">pass<pos:position pos:line="20" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="29">challenge<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">pass2<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">io_printf<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">fd<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"%s %s\n"<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">user<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="40">pass2<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

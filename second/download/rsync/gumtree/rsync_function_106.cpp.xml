<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_106.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">get_checksum2<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">buf<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">len<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">sum<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">MDstruct<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">MD<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="5" pos:column="3">static<pos:position pos:line="5" pos:column="9"/></specifier> <type><name pos:line="5" pos:column="10">char<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">buf1<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="6" pos:column="3">static<pos:position pos:line="6" pos:column="9"/></specifier> <type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">len1<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">len<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">&gt;<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="13">len1<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">buf1<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="15">free<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">buf1<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">buf1<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">char<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">*<pos:position pos:line="10" pos:column="19"/></operator><operator pos:line="10" pos:column="19">)<pos:position pos:line="10" pos:column="20"/></operator><call><name pos:line="10" pos:column="20">malloc<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">len<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">+<pos:position pos:line="10" pos:column="31"/></operator><literal type="number" pos:line="10" pos:column="31">4<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">len1<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">len<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">buf1<pos:position pos:line="12" pos:column="14"/></name></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="16">out_of_memory<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><literal type="string" pos:line="12" pos:column="30">"get_checksum2"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">MDbegin<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><operator pos:line="15" pos:column="11">&amp;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="12">MD<pos:position pos:line="15" pos:column="14"/></name></expr></argument>)<pos:position pos:line="15" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">bcopy<pos:position pos:line="17" pos:column="8"/></name><argument_list pos:line="17" pos:column="8">(<argument><expr><name pos:line="17" pos:column="9">buf<pos:position pos:line="17" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="13">buf1<pos:position pos:line="17" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="18">len<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">checksum_seed<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">SIVAL<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">buf1<pos:position pos:line="19" pos:column="15"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="16">len<pos:position pos:line="19" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="20">checksum_seed<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">len<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">+=<pos:position pos:line="20" pos:column="11"/></operator> <literal type="number" pos:line="20" pos:column="12">4<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <for pos:line="23" pos:column="3">for<control pos:line="23" pos:column="6">(<init><expr><name pos:line="23" pos:column="7">i<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <literal type="number" pos:line="23" pos:column="11">0<pos:position pos:line="23" pos:column="12"/></literal></expr>;<pos:position pos:line="23" pos:column="13"/></init> <condition><expr><name pos:line="23" pos:column="14">i<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">+<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">CSUM_CHUNK<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">&lt;=<pos:position pos:line="23" pos:column="34"/></operator> <name pos:line="23" pos:column="32">len<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></condition> <incr><expr><name pos:line="23" pos:column="37">i<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">+=<pos:position pos:line="23" pos:column="41"/></operator> <name pos:line="23" pos:column="42">CSUM_CHUNK<pos:position pos:line="23" pos:column="52"/></name></expr></incr>)<pos:position pos:line="23" pos:column="53"/></control> <block pos:line="23" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">MDupdate<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><operator pos:line="24" pos:column="14">&amp;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="15">MD<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="19">buf1<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">+<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">i<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">CSUM_CHUNK<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></operator><literal type="number" pos:line="24" pos:column="38">8<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">MDupdate<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><operator pos:line="26" pos:column="12">&amp;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="13">MD<pos:position pos:line="26" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="17">buf1<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">+<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">i<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">len<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">i<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">)<pos:position pos:line="26" pos:column="32"/></operator><operator pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></operator><literal type="number" pos:line="26" pos:column="33">8<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sum_put<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><operator pos:line="28" pos:column="11">&amp;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="12">MD<pos:position pos:line="28" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="28" pos:column="15">sum<pos:position pos:line="28" pos:column="18"/></name></expr></argument>)<pos:position pos:line="28" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

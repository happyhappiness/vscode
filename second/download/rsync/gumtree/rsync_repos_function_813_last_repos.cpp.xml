<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_813_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sys_acl_get_entry<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">( <parameter><decl><type><name pos:line="1" pos:column="24">SMB_ACL_T<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">theacl<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">entry_id<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">SMB_ACL_ENTRY_T<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">entry_p<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">acl_entry_link<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">link<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">new_acl_entry<pos:position pos:line="4" pos:column="29"/></name></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">entry<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">keep_going<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">entry_id<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">==<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">SMB_ACL_FIRST_ENTRY<pos:position pos:line="7" pos:column="44"/></name></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="17">theacl<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">count<pos:position pos:line="8" pos:column="30"/></name></name> <operator pos:line="8" pos:column="31">=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt></block></then>
	<elseif pos:line="9" pos:column="9">else <if pos:line="9" pos:column="14">if <condition pos:line="9" pos:column="17">(<expr><name pos:line="9" pos:column="18">entry_id<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">!=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">SMB_ACL_NEXT_ENTRY<pos:position pos:line="9" pos:column="48"/></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">errno<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">EINVAL<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">DEBUG<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><literal type="number" pos:line="14" pos:column="15">10<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><literal type="string" pos:line="14" pos:column="19">"This is the count: %d\n"<pos:position pos:line="14" pos:column="44"/></literal><operator pos:line="14" pos:column="44">,<pos:position pos:line="14" pos:column="45"/></operator><name><name pos:line="14" pos:column="45">theacl<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">-&gt;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="53">count<pos:position pos:line="14" pos:column="58"/></name></name><operator pos:line="14" pos:column="58">)<pos:position pos:line="14" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* Check if count was previously set to -1. *
	 * If it was, that means we reached the end *
	 * of the acl last time.                    */</comment>
	<if pos:line="19" pos:column="9">if<condition pos:line="19" pos:column="11">(<expr><name><name pos:line="19" pos:column="12">theacl<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">count<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">==<pos:position pos:line="19" pos:column="28"/></operator> <operator pos:line="19" pos:column="29">-<pos:position pos:line="19" pos:column="30"/></operator><literal type="number" pos:line="19" pos:column="30">1<pos:position pos:line="19" pos:column="31"/></literal></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32">
		<block type="pseudo"><return pos:line="20" pos:column="17">return<expr><operator pos:line="20" pos:column="23">(<pos:position pos:line="20" pos:column="24"/></operator><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal><operator pos:line="20" pos:column="25">)<pos:position pos:line="20" pos:column="26"/></operator></expr>;<pos:position pos:line="20" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="22" pos:column="9">link<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">theacl<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
	<comment type="block" pos:line="23" pos:column="9">/* To get to the next acl, traverse linked list until index *
	 * of acl matches the count we are keeping.  This count is  *
	 * incremented each time we return an acl entry.            */</comment>

	<for pos:line="27" pos:column="9">for<control pos:line="27" pos:column="12">(<init><expr><name pos:line="27" pos:column="13">keep_going<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></init> <condition><expr><name pos:line="27" pos:column="29">keep_going<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">&lt;<pos:position pos:line="27" pos:column="44"/></operator> <name><name pos:line="27" pos:column="42">theacl<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">-&gt;<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="50">count<pos:position pos:line="27" pos:column="55"/></name></name></expr>;<pos:position pos:line="27" pos:column="56"/></condition> <incr><expr><name pos:line="27" pos:column="57">keep_going<pos:position pos:line="27" pos:column="67"/></name><operator pos:line="27" pos:column="67">++<pos:position pos:line="27" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="70"/></control>
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">link<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <name><name pos:line="28" pos:column="24">link<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">nextp<pos:position pos:line="28" pos:column="35"/></name></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="30" pos:column="9">entry<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">entry_p<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator>  <name><name pos:line="30" pos:column="29">link<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">entryp<pos:position pos:line="30" pos:column="41"/></name></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">DEBUG<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><literal type="number" pos:line="32" pos:column="15">10<pos:position pos:line="32" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="32" pos:column="18">(<pos:position pos:line="32" pos:column="19"/></operator><literal type="string" pos:line="32" pos:column="19">"*entry_p is %d\n"<pos:position pos:line="32" pos:column="37"/></literal><operator pos:line="32" pos:column="37">,<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">entry_p<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">)<pos:position pos:line="32" pos:column="46"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="33" pos:column="9">DEBUG<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><literal type="number" pos:line="33" pos:column="15">10<pos:position pos:line="33" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="33" pos:column="18">(<pos:position pos:line="33" pos:column="19"/></operator><literal type="string" pos:line="33" pos:column="19">"*entry_p-&gt;ace_access is %d\n"<pos:position pos:line="33" pos:column="52"/></literal><operator pos:line="33" pos:column="49">,<pos:position pos:line="33" pos:column="50"/></operator><name><name pos:line="33" pos:column="50">entry<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">ace_access<pos:position pos:line="33" pos:column="67"/></name></name><operator pos:line="33" pos:column="67">)<pos:position pos:line="33" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>

	<comment type="block" pos:line="35" pos:column="9">/* Increment count */</comment>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">theacl<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">count<pos:position pos:line="36" pos:column="22"/></name></name><operator pos:line="36" pos:column="22">++<pos:position pos:line="36" pos:column="24"/></operator></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
	<if pos:line="37" pos:column="9">if<condition pos:line="37" pos:column="11">(<expr><name><name pos:line="37" pos:column="12">link<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">nextp<pos:position pos:line="37" pos:column="23"/></name></name> <operator pos:line="37" pos:column="24">==<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">NULL<pos:position pos:line="37" pos:column="31"/></name></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="17">theacl<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">count<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <operator pos:line="38" pos:column="33">-<pos:position pos:line="38" pos:column="34"/></operator><literal type="number" pos:line="38" pos:column="34">1<pos:position pos:line="38" pos:column="35"/></literal></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt></block></then></if>

	<return pos:line="40" pos:column="9">return<expr><operator pos:line="40" pos:column="15">(<pos:position pos:line="40" pos:column="16"/></operator><literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal><operator pos:line="40" pos:column="17">)<pos:position pos:line="40" pos:column="18"/></operator></expr>;<pos:position pos:line="40" pos:column="19"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_854.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">match_hard_links<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">file_list<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">flist<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">list_only<pos:position pos:line="3" pos:column="23"/></name></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24"> <block pos:line="3" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="24">ndx_count<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><literal type="number" pos:line="4" pos:column="36">0<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">int32<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">ndx_list<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><operator pos:line="7" pos:column="22">(<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">ndx_list<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">=<pos:position pos:line="7" pos:column="33"/></operator> <call><name pos:line="7" pos:column="34">new_array<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">int32<pos:position pos:line="7" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="51">flist<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">used<pos:position pos:line="7" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call><operator pos:line="7" pos:column="63">)<pos:position pos:line="7" pos:column="64"/></operator></expr>)<pos:position pos:line="7" pos:column="65"/></condition><then pos:line="7" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">out_of_memory<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="string" pos:line="8" pos:column="39">"match_hard_links"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt></block></then></if>

		<for pos:line="10" pos:column="17">for <control pos:line="10" pos:column="21">(<init><expr><name pos:line="10" pos:column="22">i<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr>;<pos:position pos:line="10" pos:column="28"/></init> <condition><expr><name pos:line="10" pos:column="29">i<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">&lt;<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="33">flist<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">used<pos:position pos:line="10" pos:column="44"/></name></name></expr>;<pos:position pos:line="10" pos:column="45"/></condition> <incr><expr><name pos:line="10" pos:column="46">i<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">++<pos:position pos:line="10" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="50"/></control> <block pos:line="10" pos:column="51">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><call><name pos:line="11" pos:column="29">F_IS_HLINKED<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">flist<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">sorted<pos:position pos:line="11" pos:column="55"/></name><index pos:line="11" pos:column="55">[<expr><name pos:line="11" pos:column="56">i<pos:position pos:line="11" pos:column="57"/></name></expr>]<pos:position pos:line="11" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="33">ndx_list<pos:position pos:line="12" pos:column="41"/></name><index pos:line="12" pos:column="41">[<expr><name pos:line="12" pos:column="42">ndx_count<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">++<pos:position pos:line="12" pos:column="53"/></operator></expr>]<pos:position pos:line="12" pos:column="54"/></index></name> <operator pos:line="12" pos:column="55">=<pos:position pos:line="12" pos:column="56"/></operator> <name pos:line="12" pos:column="57">i<pos:position pos:line="12" pos:column="58"/></name></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt></block></then></if>
		}<pos:position pos:line="13" pos:column="18"/></block></for>

		<expr_stmt><expr><name pos:line="15" pos:column="17">hlink_flist<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="31">flist<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">ndx_count<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="25">match_gnums<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">ndx_list<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">ndx_count<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="20" pos:column="17">free<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">ndx_list<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">protocol_version<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&lt;<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="32">30<pos:position pos:line="22" pos:column="34"/></literal></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">idev_destroy<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">()<pos:position pos:line="23" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt></block></then></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

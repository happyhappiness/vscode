<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_99_rsync-2.6.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">read_loop<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">fd<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">size_t<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">len<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<while pos:line="3" pos:column="9">while <condition pos:line="3" pos:column="15">(<expr><name pos:line="3" pos:column="16">len<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition> <block pos:line="3" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">int<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">n<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name pos:line="4" pos:column="25">read_timeout<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">(<argument><expr><name pos:line="4" pos:column="38">fd<pos:position pos:line="4" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="42">buf<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="47">len<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>

		<expr_stmt><expr><name pos:line="6" pos:column="17">buf<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">+=<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">n<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">len<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">-=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">n<pos:position pos:line="7" pos:column="25"/></name></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></while>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

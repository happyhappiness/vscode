<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_227_rsync-2.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unsafe_symlink<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">dest<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">src<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name></decl>, <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="28">slash<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">depth<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* all absolute and null symlinks are unsafe */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">dest<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">||<pos:position pos:line="7" pos:column="21"/></operator> <operator pos:line="7" pos:column="22">!<pos:position pos:line="7" pos:column="23"/></operator><operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">dest<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">||<pos:position pos:line="7" pos:column="31"/></operator> <operator pos:line="7" pos:column="32">*<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">dest<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">==<pos:position pos:line="7" pos:column="40"/></operator> <literal type="char" pos:line="7" pos:column="41">'/'<pos:position pos:line="7" pos:column="44"/></literal></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block type="pseudo"><return pos:line="7" pos:column="46">return <expr><literal type="number" pos:line="7" pos:column="53">1<pos:position pos:line="7" pos:column="54"/></literal></expr>;<pos:position pos:line="7" pos:column="55"/></return></block></then></if>

	<comment type="block" pos:line="9" pos:column="9">/* find out what our safety margin is */</comment>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">name<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">src<pos:position pos:line="10" pos:column="24"/></name></expr>;<pos:position pos:line="10" pos:column="25"/></init> <condition><expr><operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">slash<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">=<pos:position pos:line="10" pos:column="34"/></operator> <call><name pos:line="10" pos:column="35">strchr<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">name<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="10" pos:column="48">'/'<pos:position pos:line="10" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call><operator pos:line="10" pos:column="52">)<pos:position pos:line="10" pos:column="53"/></operator> <operator pos:line="10" pos:column="54">!=<pos:position pos:line="10" pos:column="56"/></operator> <literal type="number" pos:line="10" pos:column="57">0<pos:position pos:line="10" pos:column="58"/></literal></expr>;<pos:position pos:line="10" pos:column="59"/></condition> <incr><expr><name pos:line="10" pos:column="60">name<pos:position pos:line="10" pos:column="64"/></name> <operator pos:line="10" pos:column="65">=<pos:position pos:line="10" pos:column="66"/></operator> <name pos:line="10" pos:column="67">slash<pos:position pos:line="10" pos:column="72"/></name><operator pos:line="10" pos:column="72">+<pos:position pos:line="10" pos:column="73"/></operator><literal type="number" pos:line="10" pos:column="73">1<pos:position pos:line="10" pos:column="74"/></literal></expr></incr>)<pos:position pos:line="10" pos:column="75"/></control> <block pos:line="10" pos:column="76">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">strncmp<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">name<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"../"<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="42">3<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call> <operator pos:line="11" pos:column="45">==<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">0<pos:position pos:line="11" pos:column="49"/></literal></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50"> <block pos:line="11" pos:column="51">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">depth<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">=<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then> <elseif pos:line="13" pos:column="19">else <if pos:line="13" pos:column="24">if <condition pos:line="13" pos:column="27">(<expr><call><name pos:line="13" pos:column="28">strncmp<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">name<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"./"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="48">2<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call> <operator pos:line="13" pos:column="51">==<pos:position pos:line="13" pos:column="53"/></operator> <literal type="number" pos:line="13" pos:column="54">0<pos:position pos:line="13" pos:column="55"/></literal></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56"> <block pos:line="13" pos:column="57">{
			<comment type="block" pos:line="14" pos:column="25">/* nothing */</comment>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if></elseif> <else pos:line="15" pos:column="19">else <block pos:line="15" pos:column="24">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">depth<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">++<pos:position pos:line="16" pos:column="32"/></operator></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="17" pos:column="18"/></block></else></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">strcmp<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">name<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">".."<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call> <operator pos:line="19" pos:column="32">==<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">depth<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt></block></then></if>

	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">name<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">dest<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></init> <condition><expr><operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">slash<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <call><name pos:line="22" pos:column="36">strchr<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">name<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="49">'/'<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call><operator pos:line="22" pos:column="53">)<pos:position pos:line="22" pos:column="54"/></operator> <operator pos:line="22" pos:column="55">!=<pos:position pos:line="22" pos:column="57"/></operator> <literal type="number" pos:line="22" pos:column="58">0<pos:position pos:line="22" pos:column="59"/></literal></expr>;<pos:position pos:line="22" pos:column="60"/></condition> <incr><expr><name pos:line="22" pos:column="61">name<pos:position pos:line="22" pos:column="65"/></name> <operator pos:line="22" pos:column="66">=<pos:position pos:line="22" pos:column="67"/></operator> <name pos:line="22" pos:column="68">slash<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">+<pos:position pos:line="22" pos:column="74"/></operator><literal type="number" pos:line="22" pos:column="74">1<pos:position pos:line="22" pos:column="75"/></literal></expr></incr>)<pos:position pos:line="22" pos:column="76"/></control> <block pos:line="22" pos:column="77">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">strncmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">name<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="35">"../"<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="42">3<pos:position pos:line="23" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call> <operator pos:line="23" pos:column="45">==<pos:position pos:line="23" pos:column="47"/></operator> <literal type="number" pos:line="23" pos:column="48">0<pos:position pos:line="23" pos:column="49"/></literal></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <block pos:line="23" pos:column="51">{
			<comment type="block" pos:line="24" pos:column="25">/* if at any point we go outside the current directory
			   then stop - it is unsafe */</comment>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><operator pos:line="26" pos:column="29">--<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">depth<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">&lt;<pos:position pos:line="26" pos:column="41"/></operator> <literal type="number" pos:line="26" pos:column="39">0<pos:position pos:line="26" pos:column="40"/></literal></expr>)<pos:position pos:line="26" pos:column="41"/></condition><then pos:line="26" pos:column="41">
				<block type="pseudo"><return pos:line="27" pos:column="33">return <expr><literal type="number" pos:line="27" pos:column="40">1<pos:position pos:line="27" pos:column="41"/></literal></expr>;<pos:position pos:line="27" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="28" pos:column="18"/></block></then> <elseif pos:line="28" pos:column="19">else <if pos:line="28" pos:column="24">if <condition pos:line="28" pos:column="27">(<expr><call><name pos:line="28" pos:column="28">strncmp<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">name<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="42">"./"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="48">2<pos:position pos:line="28" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call> <operator pos:line="28" pos:column="51">==<pos:position pos:line="28" pos:column="53"/></operator> <literal type="number" pos:line="28" pos:column="54">0<pos:position pos:line="28" pos:column="55"/></literal></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56"> <block pos:line="28" pos:column="57">{
			<comment type="block" pos:line="29" pos:column="25">/* nothing */</comment>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if></elseif> <else pos:line="30" pos:column="19">else <block pos:line="30" pos:column="24">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">depth<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">++<pos:position pos:line="31" pos:column="32"/></operator></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></else></if>
	}<pos:position pos:line="33" pos:column="10"/></block></for>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">strcmp<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">name<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="26">".."<pos:position pos:line="34" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call> <operator pos:line="34" pos:column="32">==<pos:position pos:line="34" pos:column="34"/></operator> <literal type="number" pos:line="34" pos:column="35">0<pos:position pos:line="34" pos:column="36"/></literal></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">depth<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">--<pos:position pos:line="35" pos:column="24"/></operator></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt></block></then></if>

	<return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">depth<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&lt;<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="25">0<pos:position pos:line="37" pos:column="26"/></literal><operator pos:line="37" pos:column="26">)<pos:position pos:line="37" pos:column="27"/></operator></expr>;<pos:position pos:line="37" pos:column="28"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

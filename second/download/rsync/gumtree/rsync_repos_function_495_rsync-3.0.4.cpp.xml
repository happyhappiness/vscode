<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_495_rsync-3.0.4.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">recv_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">file_list<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">flist<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">dstart<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">flags<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int64<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">start_read<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">first_flist<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">rprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FLOG<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"receiving file list\n"<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">show_filelist_p<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">()<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">start_filelist_progress<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">(<argument><expr><literal type="string" pos:line="10" pos:column="41">"receiving file list"<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt></block></then>
	<elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><name pos:line="11" pos:column="18">inc_recurse<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">&amp;&amp;<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="33">verbose<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <operator pos:line="11" pos:column="44">!<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">am_server<pos:position pos:line="11" pos:column="54"/></name> <operator pos:line="11" pos:column="55">&amp;&amp;<pos:position pos:line="11" pos:column="65"/></operator> <operator pos:line="11" pos:column="58">!<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="59">first_flist<pos:position pos:line="11" pos:column="70"/></name></expr>)<pos:position pos:line="11" pos:column="71"/></condition><then pos:line="11" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">rprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FCLIENT<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"receiving incremental file list\n"<pos:position pos:line="12" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">start_read<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">stats<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">total_read<pos:position pos:line="14" pos:column="38"/></name></name></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>

<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="16" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">preserve_hard_links<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">&amp;&amp;<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="36">!<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">first_flist<pos:position pos:line="17" pos:column="48"/></name></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">init_hard_links<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">()<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="21" pos:column="9">flist<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">flist_new<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><literal type="number" pos:line="21" pos:column="27">0<pos:position pos:line="21" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="30">"recv_file_list"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">inc_recurse<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">flist<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">ndx_start<pos:position pos:line="24" pos:column="37"/></name></name> <operator pos:line="24" pos:column="38">==<pos:position pos:line="24" pos:column="40"/></operator> <literal type="number" pos:line="24" pos:column="41">1<pos:position pos:line="24" pos:column="42"/></literal></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">dir_flist<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <call><name pos:line="25" pos:column="37">flist_new<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">(<argument><expr><name pos:line="25" pos:column="47">FLIST_TEMP<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="59">"recv_file_list"<pos:position pos:line="25" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="26" pos:column="17">dstart<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="26">dir_flist<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">used<pos:position pos:line="26" pos:column="41"/></name></name></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">dir_flist<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">flist<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">dstart<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></else></if>

	<while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">flags<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">read_byte<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">f<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call><operator pos:line="32" pos:column="37">)<pos:position pos:line="32" pos:column="38"/></operator> <operator pos:line="32" pos:column="39">!=<pos:position pos:line="32" pos:column="41"/></operator> <literal type="number" pos:line="32" pos:column="42">0<pos:position pos:line="32" pos:column="43"/></literal></expr>)<pos:position pos:line="32" pos:column="44"/></condition> <block pos:line="32" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="33" pos:column="17">struct<pos:position pos:line="33" pos:column="23"/></name> <name pos:line="33" pos:column="24">file_struct<pos:position pos:line="33" pos:column="35"/></name></name> <modifier pos:line="33" pos:column="36">*<pos:position pos:line="33" pos:column="37"/></modifier></type><name pos:line="33" pos:column="37">file<pos:position pos:line="33" pos:column="41"/></name></decl>;<pos:position pos:line="33" pos:column="42"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="35" pos:column="17">flist_expand<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">flist<pos:position pos:line="35" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="37">1<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">protocol_version<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">&gt;=<pos:position pos:line="37" pos:column="43"/></operator> <literal type="number" pos:line="37" pos:column="41">28<pos:position pos:line="37" pos:column="43"/></literal> <operator pos:line="37" pos:column="44">&amp;&amp;<pos:position pos:line="37" pos:column="54"/></operator> <operator pos:line="37" pos:column="47">(<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="48">flags<pos:position pos:line="37" pos:column="53"/></name> <operator pos:line="37" pos:column="54">&amp;<pos:position pos:line="37" pos:column="59"/></operator> <name pos:line="37" pos:column="56">XMIT_EXTENDED_FLAGS<pos:position pos:line="37" pos:column="75"/></name><operator pos:line="37" pos:column="75">)<pos:position pos:line="37" pos:column="76"/></operator></expr>)<pos:position pos:line="37" pos:column="77"/></condition><then pos:line="37" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">flags<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">|=<pos:position pos:line="38" pos:column="33"/></operator> <call><name pos:line="38" pos:column="34">read_byte<pos:position pos:line="38" pos:column="43"/></name><argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">f<pos:position pos:line="38" pos:column="45"/></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call> <operator pos:line="38" pos:column="47">&lt;&lt;<pos:position pos:line="38" pos:column="55"/></operator> <literal type="number" pos:line="38" pos:column="50">8<pos:position pos:line="38" pos:column="51"/></literal></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="39" pos:column="17">file<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">=<pos:position pos:line="39" pos:column="23"/></operator> <call><name pos:line="39" pos:column="24">recv_file_entry<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">flist<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="47">flags<pos:position pos:line="39" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">f<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="57"/></expr_stmt>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><name pos:line="41" pos:column="21">inc_recurse<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">&amp;&amp;<pos:position pos:line="41" pos:column="43"/></operator> <call><name pos:line="41" pos:column="36">S_ISDIR<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name><name pos:line="41" pos:column="44">file<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">-&gt;<pos:position pos:line="41" pos:column="53"/></operator><name pos:line="41" pos:column="50">mode<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <block pos:line="41" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">flist_expand<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">dir_flist<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="49">1<pos:position pos:line="42" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="43" pos:column="25">dir_flist<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">files<pos:position pos:line="43" pos:column="41"/></name><index pos:line="43" pos:column="41">[<expr><name><name pos:line="43" pos:column="42">dir_flist<pos:position pos:line="43" pos:column="51"/></name><operator pos:line="43" pos:column="51">-&gt;<pos:position pos:line="43" pos:column="56"/></operator><name pos:line="43" pos:column="53">used<pos:position pos:line="43" pos:column="57"/></name></name><operator pos:line="43" pos:column="57">++<pos:position pos:line="43" pos:column="59"/></operator></expr>]<pos:position pos:line="43" pos:column="60"/></index></name> <operator pos:line="43" pos:column="61">=<pos:position pos:line="43" pos:column="62"/></operator> <name pos:line="43" pos:column="63">file<pos:position pos:line="43" pos:column="67"/></name></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="46" pos:column="17">flist<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">-&gt;<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="24">files<pos:position pos:line="46" pos:column="29"/></name><index pos:line="46" pos:column="29">[<expr><name><name pos:line="46" pos:column="30">flist<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">used<pos:position pos:line="46" pos:column="41"/></name></name><operator pos:line="46" pos:column="41">++<pos:position pos:line="46" pos:column="43"/></operator></expr>]<pos:position pos:line="46" pos:column="44"/></index></name> <operator pos:line="46" pos:column="45">=<pos:position pos:line="46" pos:column="46"/></operator> <name pos:line="46" pos:column="47">file<pos:position pos:line="46" pos:column="51"/></name></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="48" pos:column="17">maybe_emit_filelist_progress<pos:position pos:line="48" pos:column="45"/></name><argument_list pos:line="48" pos:column="45">(<argument><expr><name><name pos:line="48" pos:column="46">flist<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">-&gt;<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="53">used<pos:position pos:line="48" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">verbose<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">&gt;<pos:position pos:line="50" pos:column="33"/></operator> <literal type="number" pos:line="50" pos:column="31">2<pos:position pos:line="50" pos:column="32"/></literal></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33"> <block pos:line="50" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="51" pos:column="25">char<pos:position pos:line="51" pos:column="29"/></name> <modifier pos:line="51" pos:column="30">*<pos:position pos:line="51" pos:column="31"/></modifier></type><name pos:line="51" pos:column="31">name<pos:position pos:line="51" pos:column="35"/></name> <init pos:line="51" pos:column="36">= <expr><call><name pos:line="51" pos:column="38">f_name<pos:position pos:line="51" pos:column="44"/></name><argument_list pos:line="51" pos:column="44">(<argument><expr><name pos:line="51" pos:column="45">file<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="51">NULL<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="57"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">rprintf<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">FINFO<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="40">"recv_file_name(%s)\n"<pos:position pos:line="52" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="64">NS<pos:position pos:line="52" pos:column="66"/></name><argument_list pos:line="52" pos:column="66">(<argument><expr><name pos:line="52" pos:column="67">name<pos:position pos:line="52" pos:column="71"/></name></expr></argument>)<pos:position pos:line="52" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="55" pos:column="9">file_total<pos:position pos:line="55" pos:column="19"/></name> <operator pos:line="55" pos:column="20">+=<pos:position pos:line="55" pos:column="22"/></operator> <name><name pos:line="55" pos:column="23">flist<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">used<pos:position pos:line="55" pos:column="34"/></name></name></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">verbose<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">&gt;<pos:position pos:line="57" pos:column="25"/></operator> <literal type="number" pos:line="57" pos:column="23">2<pos:position pos:line="57" pos:column="24"/></literal></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="17">rprintf<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">FINFO<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="32">"received %d names\n"<pos:position pos:line="58" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="55">flist<pos:position pos:line="58" pos:column="60"/></name><operator pos:line="58" pos:column="60">-&gt;<pos:position pos:line="58" pos:column="65"/></operator><name pos:line="58" pos:column="62">used<pos:position pos:line="58" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt></block></then></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><call><name pos:line="60" pos:column="13">show_filelist_p<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">()<pos:position pos:line="60" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">finish_filelist_progress<pos:position pos:line="61" pos:column="41"/></name><argument_list pos:line="61" pos:column="41">(<argument><expr><name pos:line="61" pos:column="42">flist<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt></block></then></if>

	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">need_unsorted_flist<pos:position pos:line="63" pos:column="32"/></name></expr>)<pos:position pos:line="63" pos:column="33"/></condition><then pos:line="63" pos:column="33"> <block pos:line="63" pos:column="34">{
		<comment type="block" pos:line="64" pos:column="17">/* Create an extra array of index pointers that we can sort for
		 * the generator's use (for wading through the files in sorted
		 * order and for calling flist_find()).  We keep the "files"
		 * list unsorted for our exchange of index numbers with the
		 * other side (since their names may not sort the same). */</comment>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">!<pos:position pos:line="69" pos:column="22"/></operator><operator pos:line="69" pos:column="22">(<pos:position pos:line="69" pos:column="23"/></operator><name><name pos:line="69" pos:column="23">flist<pos:position pos:line="69" pos:column="28"/></name><operator pos:line="69" pos:column="28">-&gt;<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="30">sorted<pos:position pos:line="69" pos:column="36"/></name></name> <operator pos:line="69" pos:column="37">=<pos:position pos:line="69" pos:column="38"/></operator> <call><name pos:line="69" pos:column="39">new_array<pos:position pos:line="69" pos:column="48"/></name><argument_list pos:line="69" pos:column="48">(<argument><expr pos:line="69" pos:column="49">struct <name pos:line="69" pos:column="56">file_struct<pos:position pos:line="69" pos:column="67"/></name> <operator pos:line="69" pos:column="68">*<pos:position pos:line="69" pos:column="69"/></operator></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="71">flist<pos:position pos:line="69" pos:column="76"/></name><operator pos:line="69" pos:column="76">-&gt;<pos:position pos:line="69" pos:column="81"/></operator><name pos:line="69" pos:column="78">used<pos:position pos:line="69" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="83"/></argument_list></call><operator pos:line="69" pos:column="83">)<pos:position pos:line="69" pos:column="84"/></operator></expr>)<pos:position pos:line="69" pos:column="85"/></condition><then pos:line="69" pos:column="85">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="25">out_of_memory<pos:position pos:line="70" pos:column="38"/></name><argument_list pos:line="70" pos:column="38">(<argument><expr><literal type="string" pos:line="70" pos:column="39">"recv_file_list"<pos:position pos:line="70" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="57"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">memcpy<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name><name pos:line="71" pos:column="24">flist<pos:position pos:line="71" pos:column="29"/></name><operator pos:line="71" pos:column="29">-&gt;<pos:position pos:line="71" pos:column="34"/></operator><name pos:line="71" pos:column="31">sorted<pos:position pos:line="71" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="39">flist<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">-&gt;<pos:position pos:line="71" pos:column="49"/></operator><name pos:line="71" pos:column="46">files<pos:position pos:line="71" pos:column="51"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="72" pos:column="24">flist<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">-&gt;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="31">used<pos:position pos:line="72" pos:column="35"/></name></name> <operator pos:line="72" pos:column="36">*<pos:position pos:line="72" pos:column="37"/></operator> <sizeof pos:line="72" pos:column="38">sizeof <argument_list pos:line="72" pos:column="45">(<argument><expr pos:line="72" pos:column="46">struct <name pos:line="72" pos:column="53">file_struct<pos:position pos:line="72" pos:column="64"/></name><operator pos:line="72" pos:column="64">*<pos:position pos:line="72" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="68"/></expr_stmt>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">inc_recurse<pos:position pos:line="73" pos:column="32"/></name> <operator pos:line="73" pos:column="33">&amp;&amp;<pos:position pos:line="73" pos:column="43"/></operator> <name><name pos:line="73" pos:column="36">dir_flist<pos:position pos:line="73" pos:column="45"/></name><operator pos:line="73" pos:column="45">-&gt;<pos:position pos:line="73" pos:column="50"/></operator><name pos:line="73" pos:column="47">used<pos:position pos:line="73" pos:column="51"/></name></name> <operator pos:line="73" pos:column="52">&gt;<pos:position pos:line="73" pos:column="56"/></operator> <name pos:line="73" pos:column="54">dstart<pos:position pos:line="73" pos:column="60"/></name></expr>)<pos:position pos:line="73" pos:column="61"/></condition><then pos:line="73" pos:column="61"> <block pos:line="73" pos:column="62">{
			<decl_stmt><decl><specifier pos:line="74" pos:column="25">static<pos:position pos:line="74" pos:column="31"/></specifier> <type><name pos:line="74" pos:column="32">int<pos:position pos:line="74" pos:column="35"/></name></type> <name pos:line="74" pos:column="36">dir_flist_malloced<pos:position pos:line="74" pos:column="54"/></name> <init pos:line="74" pos:column="55">= <expr><literal type="number" pos:line="74" pos:column="57">0<pos:position pos:line="74" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="74" pos:column="59"/></decl_stmt>
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name pos:line="75" pos:column="29">dir_flist_malloced<pos:position pos:line="75" pos:column="47"/></name> <operator pos:line="75" pos:column="48">&lt;<pos:position pos:line="75" pos:column="52"/></operator> <name><name pos:line="75" pos:column="50">dir_flist<pos:position pos:line="75" pos:column="59"/></name><operator pos:line="75" pos:column="59">-&gt;<pos:position pos:line="75" pos:column="64"/></operator><name pos:line="75" pos:column="61">malloced<pos:position pos:line="75" pos:column="69"/></name></name></expr>)<pos:position pos:line="75" pos:column="70"/></condition><then pos:line="75" pos:column="70"> <block pos:line="75" pos:column="71">{
				<expr_stmt><expr><name><name pos:line="76" pos:column="33">dir_flist<pos:position pos:line="76" pos:column="42"/></name><operator pos:line="76" pos:column="42">-&gt;<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="44">sorted<pos:position pos:line="76" pos:column="50"/></name></name> <operator pos:line="76" pos:column="51">=<pos:position pos:line="76" pos:column="52"/></operator> <call><name pos:line="76" pos:column="53">realloc_array<pos:position pos:line="76" pos:column="66"/></name><argument_list pos:line="76" pos:column="66">(<argument><expr><name><name pos:line="76" pos:column="67">dir_flist<pos:position pos:line="76" pos:column="76"/></name><operator pos:line="76" pos:column="76">-&gt;<pos:position pos:line="76" pos:column="81"/></operator><name pos:line="76" pos:column="78">sorted<pos:position pos:line="76" pos:column="84"/></name></name></expr></argument>,
							<argument><expr pos:line="77" pos:column="57">struct <name pos:line="77" pos:column="64">file_struct<pos:position pos:line="77" pos:column="75"/></name> <operator pos:line="77" pos:column="76">*<pos:position pos:line="77" pos:column="77"/></operator></expr></argument>,
							<argument><expr><name><name pos:line="78" pos:column="57">dir_flist<pos:position pos:line="78" pos:column="66"/></name><operator pos:line="78" pos:column="66">-&gt;<pos:position pos:line="78" pos:column="71"/></operator><name pos:line="78" pos:column="68">malloced<pos:position pos:line="78" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="78"/></expr_stmt>
				<expr_stmt><expr><name pos:line="79" pos:column="33">dir_flist_malloced<pos:position pos:line="79" pos:column="51"/></name> <operator pos:line="79" pos:column="52">=<pos:position pos:line="79" pos:column="53"/></operator> <name><name pos:line="79" pos:column="54">dir_flist<pos:position pos:line="79" pos:column="63"/></name><operator pos:line="79" pos:column="63">-&gt;<pos:position pos:line="79" pos:column="68"/></operator><name pos:line="79" pos:column="65">malloced<pos:position pos:line="79" pos:column="73"/></name></name></expr>;<pos:position pos:line="79" pos:column="74"/></expr_stmt>
			}<pos:position pos:line="80" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="81" pos:column="25">memcpy<pos:position pos:line="81" pos:column="31"/></name><argument_list pos:line="81" pos:column="31">(<argument><expr><name><name pos:line="81" pos:column="32">dir_flist<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">-&gt;<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="43">sorted<pos:position pos:line="81" pos:column="49"/></name></name> <operator pos:line="81" pos:column="50">+<pos:position pos:line="81" pos:column="51"/></operator> <name pos:line="81" pos:column="52">dstart<pos:position pos:line="81" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="60">dir_flist<pos:position pos:line="81" pos:column="69"/></name><operator pos:line="81" pos:column="69">-&gt;<pos:position pos:line="81" pos:column="74"/></operator><name pos:line="81" pos:column="71">files<pos:position pos:line="81" pos:column="76"/></name></name> <operator pos:line="81" pos:column="77">+<pos:position pos:line="81" pos:column="78"/></operator> <name pos:line="81" pos:column="79">dstart<pos:position pos:line="81" pos:column="85"/></name></expr></argument>,
			       <argument><expr><operator pos:line="82" pos:column="32">(<pos:position pos:line="82" pos:column="33"/></operator><name><name pos:line="82" pos:column="33">dir_flist<pos:position pos:line="82" pos:column="42"/></name><operator pos:line="82" pos:column="42">-&gt;<pos:position pos:line="82" pos:column="47"/></operator><name pos:line="82" pos:column="44">used<pos:position pos:line="82" pos:column="48"/></name></name> <operator pos:line="82" pos:column="49">-<pos:position pos:line="82" pos:column="50"/></operator> <name pos:line="82" pos:column="51">dstart<pos:position pos:line="82" pos:column="57"/></name><operator pos:line="82" pos:column="57">)<pos:position pos:line="82" pos:column="58"/></operator> <operator pos:line="82" pos:column="59">*<pos:position pos:line="82" pos:column="60"/></operator> <sizeof pos:line="82" pos:column="61">sizeof <argument_list pos:line="82" pos:column="68">(<argument><expr pos:line="82" pos:column="69">struct <name pos:line="82" pos:column="76">file_struct<pos:position pos:line="82" pos:column="87"/></name><operator pos:line="82" pos:column="87">*<pos:position pos:line="82" pos:column="88"/></operator></expr></argument>)<pos:position pos:line="82" pos:column="89"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="91"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">fsort<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name><name pos:line="83" pos:column="31">dir_flist<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">-&gt;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="42">sorted<pos:position pos:line="83" pos:column="48"/></name></name> <operator pos:line="83" pos:column="49">+<pos:position pos:line="83" pos:column="50"/></operator> <name pos:line="83" pos:column="51">dstart<pos:position pos:line="83" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="59">dir_flist<pos:position pos:line="83" pos:column="68"/></name><operator pos:line="83" pos:column="68">-&gt;<pos:position pos:line="83" pos:column="73"/></operator><name pos:line="83" pos:column="70">used<pos:position pos:line="83" pos:column="74"/></name></name> <operator pos:line="83" pos:column="75">-<pos:position pos:line="83" pos:column="76"/></operator> <name pos:line="83" pos:column="77">dstart<pos:position pos:line="83" pos:column="83"/></name></expr></argument>)<pos:position pos:line="83" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then></if>
	}<pos:position pos:line="85" pos:column="10"/></block></then> <else pos:line="85" pos:column="11">else <block pos:line="85" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="86" pos:column="17">flist<pos:position pos:line="86" pos:column="22"/></name><operator pos:line="86" pos:column="22">-&gt;<pos:position pos:line="86" pos:column="27"/></operator><name pos:line="86" pos:column="24">sorted<pos:position pos:line="86" pos:column="30"/></name></name> <operator pos:line="86" pos:column="31">=<pos:position pos:line="86" pos:column="32"/></operator> <name><name pos:line="86" pos:column="33">flist<pos:position pos:line="86" pos:column="38"/></name><operator pos:line="86" pos:column="38">-&gt;<pos:position pos:line="86" pos:column="43"/></operator><name pos:line="86" pos:column="40">files<pos:position pos:line="86" pos:column="45"/></name></name></expr>;<pos:position pos:line="86" pos:column="46"/></expr_stmt>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">inc_recurse<pos:position pos:line="87" pos:column="32"/></name> <operator pos:line="87" pos:column="33">&amp;&amp;<pos:position pos:line="87" pos:column="43"/></operator> <name><name pos:line="87" pos:column="36">dir_flist<pos:position pos:line="87" pos:column="45"/></name><operator pos:line="87" pos:column="45">-&gt;<pos:position pos:line="87" pos:column="50"/></operator><name pos:line="87" pos:column="47">used<pos:position pos:line="87" pos:column="51"/></name></name> <operator pos:line="87" pos:column="52">&gt;<pos:position pos:line="87" pos:column="56"/></operator> <name pos:line="87" pos:column="54">dstart<pos:position pos:line="87" pos:column="60"/></name></expr>)<pos:position pos:line="87" pos:column="61"/></condition><then pos:line="87" pos:column="61"> <block pos:line="87" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="88" pos:column="25">dir_flist<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">-&gt;<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="36">sorted<pos:position pos:line="88" pos:column="42"/></name></name> <operator pos:line="88" pos:column="43">=<pos:position pos:line="88" pos:column="44"/></operator> <name><name pos:line="88" pos:column="45">dir_flist<pos:position pos:line="88" pos:column="54"/></name><operator pos:line="88" pos:column="54">-&gt;<pos:position pos:line="88" pos:column="59"/></operator><name pos:line="88" pos:column="56">files<pos:position pos:line="88" pos:column="61"/></name></name></expr>;<pos:position pos:line="88" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">fsort<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><name><name pos:line="89" pos:column="31">dir_flist<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">-&gt;<pos:position pos:line="89" pos:column="45"/></operator><name pos:line="89" pos:column="42">sorted<pos:position pos:line="89" pos:column="48"/></name></name> <operator pos:line="89" pos:column="49">+<pos:position pos:line="89" pos:column="50"/></operator> <name pos:line="89" pos:column="51">dstart<pos:position pos:line="89" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="59">dir_flist<pos:position pos:line="89" pos:column="68"/></name><operator pos:line="89" pos:column="68">-&gt;<pos:position pos:line="89" pos:column="73"/></operator><name pos:line="89" pos:column="70">used<pos:position pos:line="89" pos:column="74"/></name></name> <operator pos:line="89" pos:column="75">-<pos:position pos:line="89" pos:column="76"/></operator> <name pos:line="89" pos:column="77">dstart<pos:position pos:line="89" pos:column="83"/></name></expr></argument>)<pos:position pos:line="89" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>
	}<pos:position pos:line="91" pos:column="10"/></block></else></if>

	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">inc_recurse<pos:position pos:line="93" pos:column="24"/></name></expr>)<pos:position pos:line="93" pos:column="25"/></condition><then pos:line="93" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="17">flist_done_allocating<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">flist<pos:position pos:line="94" pos:column="44"/></name></expr></argument>)<pos:position pos:line="94" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="46"/></expr_stmt></block></then>
	<elseif pos:line="95" pos:column="9">else <if pos:line="95" pos:column="14">if <condition pos:line="95" pos:column="17">(<expr><name pos:line="95" pos:column="18">f<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">&gt;=<pos:position pos:line="95" pos:column="25"/></operator> <literal type="number" pos:line="95" pos:column="23">0<pos:position pos:line="95" pos:column="24"/></literal></expr>)<pos:position pos:line="95" pos:column="25"/></condition><then pos:line="95" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="17">recv_id_list<pos:position pos:line="96" pos:column="29"/></name><argument_list pos:line="96" pos:column="29">(<argument><expr><name pos:line="96" pos:column="30">f<pos:position pos:line="96" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="33">flist<pos:position pos:line="96" pos:column="38"/></name></expr></argument>)<pos:position pos:line="96" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="40"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="98" pos:column="9">flist_sort_and_clean<pos:position pos:line="98" pos:column="29"/></name><argument_list pos:line="98" pos:column="29">(<argument><expr><name pos:line="98" pos:column="30">flist<pos:position pos:line="98" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="37">relative_paths<pos:position pos:line="98" pos:column="51"/></name></expr></argument>)<pos:position pos:line="98" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="53"/></expr_stmt>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">protocol_version<pos:position pos:line="100" pos:column="29"/></name> <operator pos:line="100" pos:column="30">&lt;<pos:position pos:line="100" pos:column="34"/></operator> <literal type="number" pos:line="100" pos:column="32">30<pos:position pos:line="100" pos:column="34"/></literal></expr>)<pos:position pos:line="100" pos:column="35"/></condition><then pos:line="100" pos:column="35"> <block pos:line="100" pos:column="36">{
		<comment type="block" pos:line="101" pos:column="17">/* Recv the io_error flag */</comment>
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">ignore_errors<pos:position pos:line="102" pos:column="34"/></name></expr>)<pos:position pos:line="102" pos:column="35"/></condition><then pos:line="102" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="25">read_int<pos:position pos:line="103" pos:column="33"/></name><argument_list pos:line="103" pos:column="33">(<argument><expr><name pos:line="103" pos:column="34">f<pos:position pos:line="103" pos:column="35"/></name></expr></argument>)<pos:position pos:line="103" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt></block></then>
		<else pos:line="104" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="25">io_error<pos:position pos:line="105" pos:column="33"/></name> <operator pos:line="105" pos:column="34">|=<pos:position pos:line="105" pos:column="36"/></operator> <call><name pos:line="105" pos:column="37">read_int<pos:position pos:line="105" pos:column="45"/></name><argument_list pos:line="105" pos:column="45">(<argument><expr><name pos:line="105" pos:column="46">f<pos:position pos:line="105" pos:column="47"/></name></expr></argument>)<pos:position pos:line="105" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="49"/></expr_stmt></block></else></if>
	}<pos:position pos:line="106" pos:column="10"/></block></then> <elseif pos:line="106" pos:column="11">else <if pos:line="106" pos:column="16">if <condition pos:line="106" pos:column="19">(<expr><name pos:line="106" pos:column="20">inc_recurse<pos:position pos:line="106" pos:column="31"/></name> <operator pos:line="106" pos:column="32">&amp;&amp;<pos:position pos:line="106" pos:column="42"/></operator> <name><name pos:line="106" pos:column="35">flist<pos:position pos:line="106" pos:column="40"/></name><operator pos:line="106" pos:column="40">-&gt;<pos:position pos:line="106" pos:column="45"/></operator><name pos:line="106" pos:column="42">ndx_start<pos:position pos:line="106" pos:column="51"/></name></name> <operator pos:line="106" pos:column="52">==<pos:position pos:line="106" pos:column="54"/></operator> <literal type="number" pos:line="106" pos:column="55">1<pos:position pos:line="106" pos:column="56"/></literal></expr>)<pos:position pos:line="106" pos:column="57"/></condition><then pos:line="106" pos:column="57"> <block pos:line="106" pos:column="58">{
		<if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><operator pos:line="107" pos:column="21">!<pos:position pos:line="107" pos:column="22"/></operator><name pos:line="107" pos:column="22">file_total<pos:position pos:line="107" pos:column="32"/></name> <operator pos:line="107" pos:column="33">||<pos:position pos:line="107" pos:column="35"/></operator> <call><name pos:line="107" pos:column="36">strcmp<pos:position pos:line="107" pos:column="42"/></name><argument_list pos:line="107" pos:column="42">(<argument><expr><name><name pos:line="107" pos:column="43">flist<pos:position pos:line="107" pos:column="48"/></name><operator pos:line="107" pos:column="48">-&gt;<pos:position pos:line="107" pos:column="53"/></operator><name pos:line="107" pos:column="50">sorted<pos:position pos:line="107" pos:column="56"/></name><index pos:line="107" pos:column="56">[<expr><name><name pos:line="107" pos:column="57">flist<pos:position pos:line="107" pos:column="62"/></name><operator pos:line="107" pos:column="62">-&gt;<pos:position pos:line="107" pos:column="67"/></operator><name pos:line="107" pos:column="64">low<pos:position pos:line="107" pos:column="67"/></name></name></expr>]<pos:position pos:line="107" pos:column="68"/></index></name><operator pos:line="107" pos:column="68">-&gt;<pos:position pos:line="107" pos:column="73"/></operator><name pos:line="107" pos:column="70">basename<pos:position pos:line="107" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="80">"."<pos:position pos:line="107" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="84"/></argument_list></call> <operator pos:line="107" pos:column="85">!=<pos:position pos:line="107" pos:column="87"/></operator> <literal type="number" pos:line="107" pos:column="88">0<pos:position pos:line="107" pos:column="89"/></literal></expr>)<pos:position pos:line="107" pos:column="90"/></condition><then pos:line="107" pos:column="90">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="108" pos:column="25">flist<pos:position pos:line="108" pos:column="30"/></name><operator pos:line="108" pos:column="30">-&gt;<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="32">parent_ndx<pos:position pos:line="108" pos:column="42"/></name></name> <operator pos:line="108" pos:column="43">=<pos:position pos:line="108" pos:column="44"/></operator> <operator pos:line="108" pos:column="45">-<pos:position pos:line="108" pos:column="46"/></operator><literal type="number" pos:line="108" pos:column="46">1<pos:position pos:line="108" pos:column="47"/></literal></expr>;<pos:position pos:line="108" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="109" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">verbose<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">&gt;<pos:position pos:line="111" pos:column="25"/></operator> <literal type="number" pos:line="111" pos:column="23">3<pos:position pos:line="111" pos:column="24"/></literal></expr>)<pos:position pos:line="111" pos:column="25"/></condition><then pos:line="111" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="17">output_flist<pos:position pos:line="112" pos:column="29"/></name><argument_list pos:line="112" pos:column="29">(<argument><expr><name pos:line="112" pos:column="30">flist<pos:position pos:line="112" pos:column="35"/></name></expr></argument>)<pos:position pos:line="112" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="37"/></expr_stmt></block></then></if>

	<if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name pos:line="114" pos:column="13">verbose<pos:position pos:line="114" pos:column="20"/></name> <operator pos:line="114" pos:column="21">&gt;<pos:position pos:line="114" pos:column="25"/></operator> <literal type="number" pos:line="114" pos:column="23">2<pos:position pos:line="114" pos:column="24"/></literal></expr>)<pos:position pos:line="114" pos:column="25"/></condition><then pos:line="114" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="17">rprintf<pos:position pos:line="115" pos:column="24"/></name><argument_list pos:line="115" pos:column="24">(<argument><expr><name pos:line="115" pos:column="25">FINFO<pos:position pos:line="115" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="32">"recv_file_list done\n"<pos:position pos:line="115" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="117" pos:column="9">stats<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">.<pos:position pos:line="117" pos:column="15"/></operator><name pos:line="117" pos:column="15">flist_size<pos:position pos:line="117" pos:column="25"/></name></name> <operator pos:line="117" pos:column="26">+=<pos:position pos:line="117" pos:column="28"/></operator> <name><name pos:line="117" pos:column="29">stats<pos:position pos:line="117" pos:column="34"/></name><operator pos:line="117" pos:column="34">.<pos:position pos:line="117" pos:column="35"/></operator><name pos:line="117" pos:column="35">total_read<pos:position pos:line="117" pos:column="45"/></name></name> <operator pos:line="117" pos:column="46">-<pos:position pos:line="117" pos:column="47"/></operator> <name pos:line="117" pos:column="48">start_read<pos:position pos:line="117" pos:column="58"/></name></expr>;<pos:position pos:line="117" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="118" pos:column="9">stats<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">.<pos:position pos:line="118" pos:column="15"/></operator><name pos:line="118" pos:column="15">num_files<pos:position pos:line="118" pos:column="24"/></name></name> <operator pos:line="118" pos:column="25">+=<pos:position pos:line="118" pos:column="27"/></operator> <name><name pos:line="118" pos:column="28">flist<pos:position pos:line="118" pos:column="33"/></name><operator pos:line="118" pos:column="33">-&gt;<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="35">used<pos:position pos:line="118" pos:column="39"/></name></name></expr>;<pos:position pos:line="118" pos:column="40"/></expr_stmt>

	<return pos:line="120" pos:column="9">return <expr><name pos:line="120" pos:column="16">flist<pos:position pos:line="120" pos:column="21"/></name></expr>;<pos:position pos:line="120" pos:column="22"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

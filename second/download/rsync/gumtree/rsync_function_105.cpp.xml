<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_105.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">checksum_init<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><name pos:line="3" pos:column="3">tmpchunk<pos:position pos:line="3" pos:column="11"/></name> <operator pos:line="3" pos:column="12">=<pos:position pos:line="3" pos:column="13"/></operator> <operator pos:line="3" pos:column="14">(<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></operator><operator pos:line="3" pos:column="21">)<pos:position pos:line="3" pos:column="22"/></operator><call><name pos:line="3" pos:column="22">malloc<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">CSUM_CHUNK<pos:position pos:line="3" pos:column="39"/></name></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="41"/></expr_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">tmpchunk<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="18">out_of_memory<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><literal type="string" pos:line="4" pos:column="32">"checksum_init"<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt></block></then></if>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

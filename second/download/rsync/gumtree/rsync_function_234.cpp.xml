<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_234.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_recv<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f_in<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">f_out<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">file_list<pos:position pos:line="1" pos:column="55"/></name></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">flist<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">local_name<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">pid<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name><init pos:line="4" pos:column="13">=<expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name><name pos:line="5" pos:column="7">recv_pipe<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><literal type="number" pos:line="5" pos:column="17">2<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">preserve_hard_links<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="5">init_hard_links<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">flist<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">pipe<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">recv_pipe<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27"> <block pos:line="10" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">fprintf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">FERROR<pos:position pos:line="11" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="20">"pipe failed in do_recv\n"<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">exit<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><literal type="number" pos:line="12" pos:column="10">1<pos:position pos:line="12" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>
  

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">(<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">pid<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator><call><name pos:line="16" pos:column="12">fork<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">()<pos:position pos:line="16" pos:column="18"/></argument_list></call><operator pos:line="16" pos:column="18">)<pos:position pos:line="16" pos:column="19"/></operator> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">recv_files<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">f_in<pos:position pos:line="17" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="21">flist<pos:position pos:line="17" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="27">local_name<pos:position pos:line="17" pos:column="37"/></name></expr></argument>,<argument><expr><name><name pos:line="17" pos:column="38">recv_pipe<pos:position pos:line="17" pos:column="47"/></name><index pos:line="17" pos:column="47">[<expr><literal type="number" pos:line="17" pos:column="48">1<pos:position pos:line="17" pos:column="49"/></literal></expr>]<pos:position pos:line="17" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">preserve_hard_links<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="7">do_hard_links<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">flist<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt></block></then></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">verbose<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&gt;<pos:position pos:line="20" pos:column="21"/></operator> <literal type="number" pos:line="20" pos:column="19">2<pos:position pos:line="20" pos:column="20"/></literal></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="7">fprintf<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">FERROR<pos:position pos:line="21" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="21" pos:column="22">"receiver read %d\n"<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>,<argument><expr><call><name pos:line="21" pos:column="43">read_total<pos:position pos:line="21" pos:column="53"/></name><argument_list pos:line="21" pos:column="53">()<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">exit_cleanup<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">generate_files<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name pos:line="25" pos:column="18">f_out<pos:position pos:line="25" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="25" pos:column="24">flist<pos:position pos:line="25" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="25" pos:column="30">local_name<pos:position pos:line="25" pos:column="40"/></name></expr></argument>,<argument><expr><name><name pos:line="25" pos:column="41">recv_pipe<pos:position pos:line="25" pos:column="50"/></name><index pos:line="25" pos:column="50">[<expr><literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr>]<pos:position pos:line="25" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">waitpid<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><name pos:line="27" pos:column="11">pid<pos:position pos:line="27" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="16">&amp;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="17">status<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>

  <return pos:line="29" pos:column="3">return <expr><name pos:line="29" pos:column="10">status<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_64_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">die_from_readerr<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">err<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* this prevents us trying to write errors on a dead socket */</comment>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">io_multiplexing_close<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">()<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
				
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">rprintf<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">FERROR<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="25">"%s: read error: %s\n"<pos:position pos:line="6" pos:column="47"/></literal></expr></argument>,
		<argument><expr><name pos:line="7" pos:column="17">RSYNC_NAME<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="29">strerror<pos:position pos:line="7" pos:column="37"/></name> <argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">err<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">exit_cleanup<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">RERR_STREAMIO<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

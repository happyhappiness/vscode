<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_38_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_exclude_list<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">pattern<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">exclude_struct<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier><modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">list<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="75">int<pos:position pos:line="1" pos:column="78"/></name></type> <name pos:line="1" pos:column="79">include<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name><init pos:line="3" pos:column="16">=<expr><literal type="number" pos:line="3" pos:column="17">0<pos:position pos:line="3" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">list<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">&amp;&amp;<pos:position pos:line="4" pos:column="28"/></operator> <operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">list<pos:position pos:line="4" pos:column="26"/></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27">
		<block type="pseudo"><for pos:line="5" pos:column="17">for <control pos:line="5" pos:column="21">(<init pos:line="5" pos:column="22">;<pos:position pos:line="5" pos:column="23"/></init> <condition><expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator><operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">list<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">)<pos:position pos:line="5" pos:column="31"/></operator><index pos:line="5" pos:column="31">[<expr><name pos:line="5" pos:column="32">len<pos:position pos:line="5" pos:column="35"/></name></expr>]<pos:position pos:line="5" pos:column="36"/></index></expr>;<pos:position pos:line="5" pos:column="37"/></condition> <incr><expr><name pos:line="5" pos:column="38">len<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">++<pos:position pos:line="5" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="44"/></control> <block type="pseudo"><empty_stmt pos:line="5" pos:column="45">;<pos:position pos:line="5" pos:column="46"/></empty_stmt></block></for></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">strcmp<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">pattern<pos:position pos:line="7" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="28">"!"<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call> <operator pos:line="7" pos:column="33">==<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="36">0<pos:position pos:line="7" pos:column="37"/></literal></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38"> <block pos:line="7" pos:column="39">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">verbose<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&gt;<pos:position pos:line="8" pos:column="33"/></operator> <literal type="number" pos:line="8" pos:column="31">2<pos:position pos:line="8" pos:column="32"/></literal></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">rprintf<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">FINFO<pos:position pos:line="9" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="9" pos:column="39">"clearing exclude list\n"<pos:position pos:line="9" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt></block></then></if>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">len<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">)<pos:position pos:line="10" pos:column="29"/></operator><operator pos:line="10" pos:column="29">--<pos:position pos:line="10" pos:column="31"/></operator></expr>)<pos:position pos:line="10" pos:column="32"/></condition> <block pos:line="10" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">free_exclude<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><operator pos:line="11" pos:column="38">(<pos:position pos:line="11" pos:column="39"/></operator><operator pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">list<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator><index pos:line="11" pos:column="45">[<expr><name pos:line="11" pos:column="46">len<pos:position pos:line="11" pos:column="49"/></name></expr>]<pos:position pos:line="11" pos:column="50"/></index></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="12" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">free<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><operator pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">list<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">)<pos:position pos:line="13" pos:column="29"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">list<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">NULL<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">list<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <operator pos:line="18" pos:column="17">(<pos:position pos:line="18" pos:column="18"/></operator>struct <name pos:line="18" pos:column="25">exclude_struct<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">*<pos:position pos:line="18" pos:column="41"/></operator><operator pos:line="18" pos:column="41">*<pos:position pos:line="18" pos:column="42"/></operator><operator pos:line="18" pos:column="42">)<pos:position pos:line="18" pos:column="43"/></operator><call><name pos:line="18" pos:column="43">Realloc<pos:position pos:line="18" pos:column="50"/></name><argument_list pos:line="18" pos:column="50">(<argument><expr><operator pos:line="18" pos:column="51">*<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="52">list<pos:position pos:line="18" pos:column="56"/></name></expr></argument>,<argument><expr><sizeof pos:line="18" pos:column="57">sizeof<argument_list pos:line="18" pos:column="63">(<argument><expr pos:line="18" pos:column="64">struct <name pos:line="18" pos:column="71">exclude_struct<pos:position pos:line="18" pos:column="85"/></name> <operator pos:line="18" pos:column="86">*<pos:position pos:line="18" pos:column="87"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="88"/></argument_list></sizeof><operator pos:line="18" pos:column="88">*<pos:position pos:line="18" pos:column="89"/></operator><operator pos:line="18" pos:column="89">(<pos:position pos:line="18" pos:column="90"/></operator><name pos:line="18" pos:column="90">len<pos:position pos:line="18" pos:column="93"/></name><operator pos:line="18" pos:column="93">+<pos:position pos:line="18" pos:column="94"/></operator><literal type="number" pos:line="18" pos:column="94">2<pos:position pos:line="18" pos:column="95"/></literal><operator pos:line="18" pos:column="95">)<pos:position pos:line="18" pos:column="96"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="98"/></expr_stmt>
	
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><operator pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">list<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">||<pos:position pos:line="20" pos:column="22"/></operator> <operator pos:line="20" pos:column="23">!<pos:position pos:line="20" pos:column="24"/></operator><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">(<pos:position pos:line="20" pos:column="26"/></operator><operator pos:line="20" pos:column="26">*<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">list<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator><index pos:line="20" pos:column="32">[<expr><name pos:line="20" pos:column="33">len<pos:position pos:line="20" pos:column="36"/></name></expr>]<pos:position pos:line="20" pos:column="37"/></index> <operator pos:line="20" pos:column="38">=<pos:position pos:line="20" pos:column="39"/></operator> <call><name pos:line="20" pos:column="40">make_exclude<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">(<argument><expr><name pos:line="20" pos:column="53">pattern<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">include<pos:position pos:line="20" pos:column="69"/></name></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call><operator pos:line="20" pos:column="70">)<pos:position pos:line="20" pos:column="71"/></operator></expr>)<pos:position pos:line="20" pos:column="72"/></condition><then pos:line="20" pos:column="72">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">out_of_memory<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">"add_exclude"<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt></block></then></if>
	
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">verbose<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&gt;<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="23">2<pos:position pos:line="23" pos:column="24"/></literal></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">rprintf<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">FINFO<pos:position pos:line="24" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="24" pos:column="31">"add_exclude(%s,%s)\n"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>,<argument><expr><name pos:line="24" pos:column="54">pattern<pos:position pos:line="24" pos:column="61"/></name></expr></argument>,
			      <argument><expr><ternary><condition><expr><name pos:line="25" pos:column="31">include<pos:position pos:line="25" pos:column="38"/></name></expr> ?<pos:position pos:line="25" pos:column="40"/></condition><then pos:line="25" pos:column="40"> <expr><literal type="string" pos:line="25" pos:column="41">"include"<pos:position pos:line="25" pos:column="50"/></literal></expr> <pos:position pos:line="25" pos:column="51"/></then><else pos:line="25" pos:column="51">: <expr><literal type="string" pos:line="25" pos:column="53">"exclude"<pos:position pos:line="25" pos:column="62"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">*<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">list<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator><index pos:line="28" pos:column="16">[<expr><name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">+<pos:position pos:line="28" pos:column="21"/></operator><literal type="number" pos:line="28" pos:column="21">1<pos:position pos:line="28" pos:column="22"/></literal></expr>]<pos:position pos:line="28" pos:column="23"/></index> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">NULL<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

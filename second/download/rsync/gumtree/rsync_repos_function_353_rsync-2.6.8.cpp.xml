<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_353_rsync-2.6.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">file_struct<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">receive_file_entry<pos:position pos:line="1" pos:column="46"/></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">file_list<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">flist<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
					      <parameter><decl><type><name pos:line="2" pos:column="47">unsigned<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">short<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">flags<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">int<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">f<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">time_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">modtime<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">mode_t<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">mode<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int64<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">dev<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">dev_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">rdev<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">uint32<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">rdev_major<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">uid_t<pos:position pos:line="9" pos:column="21"/></name></type> <name pos:line="9" pos:column="22">uid<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">gid_t<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">gid<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">static<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name></type> <name><name pos:line="11" pos:column="21">lastname<pos:position pos:line="11" pos:column="29"/></name><index pos:line="11" pos:column="29">[<expr><name pos:line="11" pos:column="30">MAXPATHLEN<pos:position pos:line="11" pos:column="40"/></name></expr>]<pos:position pos:line="11" pos:column="41"/></index></name></decl>, <modifier pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="11" pos:column="44">lastdir<pos:position pos:line="11" pos:column="51"/></name></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="12" pos:column="9">static<pos:position pos:line="12" pos:column="15"/></specifier> <type><name pos:line="12" pos:column="16">int<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">lastdir_depth<pos:position pos:line="12" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="35">lastdir_len<pos:position pos:line="12" pos:column="46"/></name> <init pos:line="12" pos:column="47">= <expr><operator pos:line="12" pos:column="49">-<pos:position pos:line="12" pos:column="50"/></operator><literal type="number" pos:line="12" pos:column="50">1<pos:position pos:line="12" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">static<pos:position pos:line="13" pos:column="15"/></specifier> <type><name pos:line="13" pos:column="16">unsigned<pos:position pos:line="13" pos:column="24"/></name> <name pos:line="13" pos:column="25">int<pos:position pos:line="13" pos:column="28"/></name></type> <name pos:line="13" pos:column="29">del_hier_name_len<pos:position pos:line="13" pos:column="46"/></name> <init pos:line="13" pos:column="47">= <expr><literal type="number" pos:line="13" pos:column="49">0<pos:position pos:line="13" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="14" pos:column="9">static<pos:position pos:line="14" pos:column="15"/></specifier> <type><name pos:line="14" pos:column="16">int<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">in_del_hier<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><literal type="number" pos:line="14" pos:column="34">0<pos:position pos:line="14" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">thisname<pos:position pos:line="15" pos:column="22"/></name><index pos:line="15" pos:column="22">[<expr><name pos:line="15" pos:column="23">MAXPATHLEN<pos:position pos:line="15" pos:column="33"/></name></expr>]<pos:position pos:line="15" pos:column="34"/></index></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">unsigned<pos:position pos:line="16" pos:column="17"/></name> <name pos:line="16" pos:column="18">int<pos:position pos:line="16" pos:column="21"/></name></type> <name pos:line="16" pos:column="22">l1<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="30">l2<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><literal type="number" pos:line="16" pos:column="35">0<pos:position pos:line="16" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">alloc_len<pos:position pos:line="17" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="24">basename_len<pos:position pos:line="17" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="38">dirname_len<pos:position pos:line="17" pos:column="49"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="51">linkname_len<pos:position pos:line="17" pos:column="63"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="65">sum_len<pos:position pos:line="17" pos:column="72"/></name></decl>;<pos:position pos:line="17" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">OFF_T<pos:position pos:line="18" pos:column="14"/></name></type> <name pos:line="18" pos:column="15">file_length<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">basename<pos:position pos:line="19" pos:column="23"/></name></decl>, <modifier pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="26">dirname<pos:position pos:line="19" pos:column="33"/></name></decl>, <modifier pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="36">bp<pos:position pos:line="19" pos:column="38"/></name></decl>;<pos:position pos:line="19" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="20" pos:column="9">struct<pos:position pos:line="20" pos:column="15"/></name> <name pos:line="20" pos:column="16">file_struct<pos:position pos:line="20" pos:column="27"/></name></name> <modifier pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></modifier></type><name pos:line="20" pos:column="29">file<pos:position pos:line="20" pos:column="33"/></name></decl>;<pos:position pos:line="20" pos:column="34"/></decl_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">flist<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20"> <block pos:line="22" pos:column="21">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">modtime<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr><operator pos:line="23" pos:column="28">,<pos:position pos:line="23" pos:column="29"/></operator> <expr><name pos:line="23" pos:column="30">mode<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">=<pos:position pos:line="23" pos:column="36"/></operator> <literal type="number" pos:line="23" pos:column="37">0<pos:position pos:line="23" pos:column="38"/></literal></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">dev<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr><operator pos:line="24" pos:column="24">,<pos:position pos:line="24" pos:column="25"/></operator> <expr><name pos:line="24" pos:column="26">rdev<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">=<pos:position pos:line="24" pos:column="32"/></operator> <call><name pos:line="24" pos:column="33">makedev<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><literal type="number" pos:line="24" pos:column="41">0<pos:position pos:line="24" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="44">0<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">rdev_major<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">uid<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="23">0<pos:position pos:line="26" pos:column="24"/></literal></expr><operator pos:line="26" pos:column="24">,<pos:position pos:line="26" pos:column="25"/></operator> <expr><name pos:line="26" pos:column="26">gid<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <literal type="number" pos:line="26" pos:column="32">0<pos:position pos:line="26" pos:column="33"/></literal></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">lastname<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="char" pos:line="27" pos:column="29">'\0'<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">lastdir_len<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">-<pos:position pos:line="28" pos:column="32"/></operator><literal type="number" pos:line="28" pos:column="32">1<pos:position pos:line="28" pos:column="33"/></literal></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">in_del_hier<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">=<pos:position pos:line="29" pos:column="30"/></operator> <literal type="number" pos:line="29" pos:column="31">0<pos:position pos:line="29" pos:column="32"/></literal></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">flags<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">&amp;<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="21">XMIT_SAME_NAME<pos:position pos:line="33" pos:column="35"/></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">l1<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">read_byte<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">f<pos:position pos:line="34" pos:column="33"/></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">flags<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&amp;<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="21">XMIT_LONG_NAME<pos:position pos:line="36" pos:column="35"/></name></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">l2<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">read_int<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">f<pos:position pos:line="37" pos:column="32"/></name></expr></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="38" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="17">l2<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <call><name pos:line="39" pos:column="22">read_byte<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">f<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt></block></else></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">l2<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">&gt;=<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="19">MAXPATHLEN<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">-<pos:position pos:line="41" pos:column="31"/></operator> <name pos:line="41" pos:column="32">l1<pos:position pos:line="41" pos:column="34"/></name></expr>)<pos:position pos:line="41" pos:column="35"/></condition><then pos:line="41" pos:column="35"> <block pos:line="41" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">rprintf<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">FERROR<pos:position pos:line="42" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="43" pos:column="25">"overflow: flags=0x%x l1=%d l2=%d lastname=%s\n"<pos:position pos:line="43" pos:column="73"/></literal></expr></argument>,
			<argument><expr><name pos:line="44" pos:column="25">flags<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="32">l1<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">l2<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">lastname<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">overflow_exit<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><literal type="string" pos:line="45" pos:column="31">"receive_file_entry"<pos:position pos:line="45" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">strlcpy<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">thisname<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">lastname<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">l1<pos:position pos:line="48" pos:column="39"/></name> <operator pos:line="48" pos:column="40">+<pos:position pos:line="48" pos:column="41"/></operator> <literal type="number" pos:line="48" pos:column="42">1<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">read_sbuf<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">f<pos:position pos:line="49" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="22">&amp;<pos:position pos:line="49" pos:column="27"/></operator><name><name pos:line="49" pos:column="23">thisname<pos:position pos:line="49" pos:column="31"/></name><index pos:line="49" pos:column="31">[<expr><name pos:line="49" pos:column="32">l1<pos:position pos:line="49" pos:column="34"/></name></expr>]<pos:position pos:line="49" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="37">l2<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">thisname<pos:position pos:line="50" pos:column="17"/></name><index pos:line="50" pos:column="17">[<expr><name pos:line="50" pos:column="18">l1<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">+<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">l2<pos:position pos:line="50" pos:column="25"/></name></expr>]<pos:position pos:line="50" pos:column="26"/></index></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <literal type="number" pos:line="50" pos:column="29">0<pos:position pos:line="50" pos:column="30"/></literal></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">strlcpy<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">lastname<pos:position pos:line="52" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="27">thisname<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">MAXPATHLEN<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="54" pos:column="9">clean_fname<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">thisname<pos:position pos:line="54" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="31">0<pos:position pos:line="54" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">sanitize_paths<pos:position pos:line="56" pos:column="27"/></name></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="17">sanitize_path<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">thisname<pos:position pos:line="57" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">thisname<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="51">""<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="55">0<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt></block></then></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">(<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">basename<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <call><name pos:line="59" pos:column="25">strrchr<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">thisname<pos:position pos:line="59" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="59" pos:column="43">'/'<pos:position pos:line="59" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call><operator pos:line="59" pos:column="47">)<pos:position pos:line="59" pos:column="48"/></operator> <operator pos:line="59" pos:column="49">!=<pos:position pos:line="59" pos:column="51"/></operator> <name pos:line="59" pos:column="52">NULL<pos:position pos:line="59" pos:column="56"/></name></expr>)<pos:position pos:line="59" pos:column="57"/></condition><then pos:line="59" pos:column="57"> <block pos:line="59" pos:column="58">{
		<expr_stmt><expr><name pos:line="60" pos:column="17">dirname_len<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <operator pos:line="60" pos:column="31">++<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="33">basename<pos:position pos:line="60" pos:column="41"/></name> <operator pos:line="60" pos:column="42">-<pos:position pos:line="60" pos:column="43"/></operator> <name pos:line="60" pos:column="44">thisname<pos:position pos:line="60" pos:column="52"/></name></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt> <comment type="block" pos:line="60" pos:column="54">/* counts future '\0' */</comment>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">lastdir_len<pos:position pos:line="61" pos:column="32"/></name> <operator pos:line="61" pos:column="33">==<pos:position pos:line="61" pos:column="35"/></operator> <name pos:line="61" pos:column="36">dirname_len<pos:position pos:line="61" pos:column="47"/></name> <operator pos:line="61" pos:column="48">-<pos:position pos:line="61" pos:column="49"/></operator> <literal type="number" pos:line="61" pos:column="50">1<pos:position pos:line="61" pos:column="51"/></literal>
		    <operator pos:line="62" pos:column="21">&amp;&amp;<pos:position pos:line="62" pos:column="31"/></operator> <call><name pos:line="62" pos:column="24">strncmp<pos:position pos:line="62" pos:column="31"/></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">thisname<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">lastdir<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">lastdir_len<pos:position pos:line="62" pos:column="62"/></name></expr></argument>)<pos:position pos:line="62" pos:column="63"/></argument_list></call> <operator pos:line="62" pos:column="64">==<pos:position pos:line="62" pos:column="66"/></operator> <literal type="number" pos:line="62" pos:column="67">0<pos:position pos:line="62" pos:column="68"/></literal></expr>)<pos:position pos:line="62" pos:column="69"/></condition><then pos:line="62" pos:column="69"> <block pos:line="62" pos:column="70">{
			<expr_stmt><expr><name pos:line="63" pos:column="25">dirname<pos:position pos:line="63" pos:column="32"/></name> <operator pos:line="63" pos:column="33">=<pos:position pos:line="63" pos:column="34"/></operator> <name pos:line="63" pos:column="35">lastdir<pos:position pos:line="63" pos:column="42"/></name></expr>;<pos:position pos:line="63" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="64" pos:column="25">dirname_len<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">=<pos:position pos:line="64" pos:column="38"/></operator> <literal type="number" pos:line="64" pos:column="39">0<pos:position pos:line="64" pos:column="40"/></literal></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt> <comment type="block" pos:line="64" pos:column="42">/* indicates no copy is needed */</comment>
		}<pos:position pos:line="65" pos:column="18"/></block></then> <else pos:line="65" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="25">dirname<pos:position pos:line="66" pos:column="32"/></name> <operator pos:line="66" pos:column="33">=<pos:position pos:line="66" pos:column="34"/></operator> <name pos:line="66" pos:column="35">thisname<pos:position pos:line="66" pos:column="43"/></name></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt></block></else></if>
	}<pos:position pos:line="67" pos:column="10"/></block></then> <else pos:line="67" pos:column="11">else <block pos:line="67" pos:column="16">{
		<expr_stmt><expr><name pos:line="68" pos:column="17">basename<pos:position pos:line="68" pos:column="25"/></name> <operator pos:line="68" pos:column="26">=<pos:position pos:line="68" pos:column="27"/></operator> <name pos:line="68" pos:column="28">thisname<pos:position pos:line="68" pos:column="36"/></name></expr>;<pos:position pos:line="68" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="69" pos:column="17">dirname<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">=<pos:position pos:line="69" pos:column="26"/></operator> <name pos:line="69" pos:column="27">NULL<pos:position pos:line="69" pos:column="31"/></name></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="70" pos:column="17">dirname_len<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <literal type="number" pos:line="70" pos:column="31">0<pos:position pos:line="70" pos:column="32"/></literal></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="72" pos:column="9">basename_len<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <call><name pos:line="72" pos:column="24">strlen<pos:position pos:line="72" pos:column="30"/></name><argument_list pos:line="72" pos:column="30">(<argument><expr><name pos:line="72" pos:column="31">basename<pos:position pos:line="72" pos:column="39"/></name></expr></argument>)<pos:position pos:line="72" pos:column="40"/></argument_list></call> <operator pos:line="72" pos:column="41">+<pos:position pos:line="72" pos:column="42"/></operator> <literal type="number" pos:line="72" pos:column="43">1<pos:position pos:line="72" pos:column="44"/></literal></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt> <comment type="block" pos:line="72" pos:column="46">/* count the '\0' */</comment>

	<expr_stmt><expr><name pos:line="74" pos:column="9">file_length<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <call><name pos:line="74" pos:column="23">read_longint<pos:position pos:line="74" pos:column="35"/></name><argument_list pos:line="74" pos:column="35">(<argument><expr><name pos:line="74" pos:column="36">f<pos:position pos:line="74" pos:column="37"/></name></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><operator pos:line="75" pos:column="13">!<pos:position pos:line="75" pos:column="14"/></operator><operator pos:line="75" pos:column="14">(<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="15">flags<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">&amp;<pos:position pos:line="75" pos:column="26"/></operator> <name pos:line="75" pos:column="23">XMIT_SAME_TIME<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">)<pos:position pos:line="75" pos:column="38"/></operator></expr>)<pos:position pos:line="75" pos:column="39"/></condition><then pos:line="75" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="17">modtime<pos:position pos:line="76" pos:column="24"/></name> <operator pos:line="76" pos:column="25">=<pos:position pos:line="76" pos:column="26"/></operator> <operator pos:line="76" pos:column="27">(<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="28">time_t<pos:position pos:line="76" pos:column="34"/></name><operator pos:line="76" pos:column="34">)<pos:position pos:line="76" pos:column="35"/></operator><call><name pos:line="76" pos:column="35">read_int<pos:position pos:line="76" pos:column="43"/></name><argument_list pos:line="76" pos:column="43">(<argument><expr><name pos:line="76" pos:column="44">f<pos:position pos:line="76" pos:column="45"/></name></expr></argument>)<pos:position pos:line="76" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="47"/></expr_stmt></block></then></if>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><operator pos:line="77" pos:column="13">!<pos:position pos:line="77" pos:column="14"/></operator><operator pos:line="77" pos:column="14">(<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="15">flags<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">&amp;<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="23">XMIT_SAME_MODE<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">)<pos:position pos:line="77" pos:column="38"/></operator></expr>)<pos:position pos:line="77" pos:column="39"/></condition><then pos:line="77" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="17">mode<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <call><name pos:line="78" pos:column="24">from_wire_mode<pos:position pos:line="78" pos:column="38"/></name><argument_list pos:line="78" pos:column="38">(<argument><expr><call><name pos:line="78" pos:column="39">read_int<pos:position pos:line="78" pos:column="47"/></name><argument_list pos:line="78" pos:column="47">(<argument><expr><name pos:line="78" pos:column="48">f<pos:position pos:line="78" pos:column="49"/></name></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">chmod_modes<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">&amp;&amp;<pos:position pos:line="80" pos:column="35"/></operator> <operator pos:line="80" pos:column="28">!<pos:position pos:line="80" pos:column="29"/></operator><call><name pos:line="80" pos:column="29">S_ISLNK<pos:position pos:line="80" pos:column="36"/></name><argument_list pos:line="80" pos:column="36">(<argument><expr><name pos:line="80" pos:column="37">mode<pos:position pos:line="80" pos:column="41"/></name></expr></argument>)<pos:position pos:line="80" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="43"/></condition><then pos:line="80" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="17">mode<pos:position pos:line="81" pos:column="21"/></name> <operator pos:line="81" pos:column="22">=<pos:position pos:line="81" pos:column="23"/></operator> <call><name pos:line="81" pos:column="24">tweak_mode<pos:position pos:line="81" pos:column="34"/></name><argument_list pos:line="81" pos:column="34">(<argument><expr><name pos:line="81" pos:column="35">mode<pos:position pos:line="81" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="41">chmod_modes<pos:position pos:line="81" pos:column="52"/></name></expr></argument>)<pos:position pos:line="81" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">preserve_uid<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">&amp;&amp;<pos:position pos:line="83" pos:column="36"/></operator> <operator pos:line="83" pos:column="29">!<pos:position pos:line="83" pos:column="30"/></operator><operator pos:line="83" pos:column="30">(<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="31">flags<pos:position pos:line="83" pos:column="36"/></name> <operator pos:line="83" pos:column="37">&amp;<pos:position pos:line="83" pos:column="42"/></operator> <name pos:line="83" pos:column="39">XMIT_SAME_UID<pos:position pos:line="83" pos:column="52"/></name><operator pos:line="83" pos:column="52">)<pos:position pos:line="83" pos:column="53"/></operator></expr>)<pos:position pos:line="83" pos:column="54"/></condition><then pos:line="83" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="17">uid<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <operator pos:line="84" pos:column="23">(<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="24">uid_t<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">)<pos:position pos:line="84" pos:column="30"/></operator><call><name pos:line="84" pos:column="30">read_int<pos:position pos:line="84" pos:column="38"/></name><argument_list pos:line="84" pos:column="38">(<argument><expr><name pos:line="84" pos:column="39">f<pos:position pos:line="84" pos:column="40"/></name></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt></block></then></if>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">preserve_gid<pos:position pos:line="85" pos:column="25"/></name> <operator pos:line="85" pos:column="26">&amp;&amp;<pos:position pos:line="85" pos:column="36"/></operator> <operator pos:line="85" pos:column="29">!<pos:position pos:line="85" pos:column="30"/></operator><operator pos:line="85" pos:column="30">(<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="31">flags<pos:position pos:line="85" pos:column="36"/></name> <operator pos:line="85" pos:column="37">&amp;<pos:position pos:line="85" pos:column="42"/></operator> <name pos:line="85" pos:column="39">XMIT_SAME_GID<pos:position pos:line="85" pos:column="52"/></name><operator pos:line="85" pos:column="52">)<pos:position pos:line="85" pos:column="53"/></operator></expr>)<pos:position pos:line="85" pos:column="54"/></condition><then pos:line="85" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="17">gid<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <operator pos:line="86" pos:column="23">(<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="24">gid_t<pos:position pos:line="86" pos:column="29"/></name><operator pos:line="86" pos:column="29">)<pos:position pos:line="86" pos:column="30"/></operator><call><name pos:line="86" pos:column="30">read_int<pos:position pos:line="86" pos:column="38"/></name><argument_list pos:line="86" pos:column="38">(<argument><expr><name pos:line="86" pos:column="39">f<pos:position pos:line="86" pos:column="40"/></name></expr></argument>)<pos:position pos:line="86" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt></block></then></if>

	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><operator pos:line="88" pos:column="13">(<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="14">preserve_devices<pos:position pos:line="88" pos:column="30"/></name> <operator pos:line="88" pos:column="31">&amp;&amp;<pos:position pos:line="88" pos:column="41"/></operator> <call><name pos:line="88" pos:column="34">IS_DEVICE<pos:position pos:line="88" pos:column="43"/></name><argument_list pos:line="88" pos:column="43">(<argument><expr><name pos:line="88" pos:column="44">mode<pos:position pos:line="88" pos:column="48"/></name></expr></argument>)<pos:position pos:line="88" pos:column="49"/></argument_list></call><operator pos:line="88" pos:column="49">)<pos:position pos:line="88" pos:column="50"/></operator>
	 <operator pos:line="89" pos:column="10">||<pos:position pos:line="89" pos:column="12"/></operator> <operator pos:line="89" pos:column="13">(<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="14">preserve_specials<pos:position pos:line="89" pos:column="31"/></name> <operator pos:line="89" pos:column="32">&amp;&amp;<pos:position pos:line="89" pos:column="42"/></operator> <call><name pos:line="89" pos:column="35">IS_SPECIAL<pos:position pos:line="89" pos:column="45"/></name><argument_list pos:line="89" pos:column="45">(<argument><expr><name pos:line="89" pos:column="46">mode<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></call><operator pos:line="89" pos:column="51">)<pos:position pos:line="89" pos:column="52"/></operator></expr>)<pos:position pos:line="89" pos:column="53"/></condition><then pos:line="89" pos:column="53"> <block pos:line="89" pos:column="54">{
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">protocol_version<pos:position pos:line="90" pos:column="37"/></name> <operator pos:line="90" pos:column="38">&lt;<pos:position pos:line="90" pos:column="42"/></operator> <literal type="number" pos:line="90" pos:column="40">28<pos:position pos:line="90" pos:column="42"/></literal></expr>)<pos:position pos:line="90" pos:column="43"/></condition><then pos:line="90" pos:column="43"> <block pos:line="90" pos:column="44">{
			<if pos:line="91" pos:column="25">if <condition pos:line="91" pos:column="28">(<expr><operator pos:line="91" pos:column="29">!<pos:position pos:line="91" pos:column="30"/></operator><operator pos:line="91" pos:column="30">(<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="31">flags<pos:position pos:line="91" pos:column="36"/></name> <operator pos:line="91" pos:column="37">&amp;<pos:position pos:line="91" pos:column="42"/></operator> <name pos:line="91" pos:column="39">XMIT_SAME_RDEV_pre28<pos:position pos:line="91" pos:column="59"/></name><operator pos:line="91" pos:column="59">)<pos:position pos:line="91" pos:column="60"/></operator></expr>)<pos:position pos:line="91" pos:column="61"/></condition><then pos:line="91" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="33">rdev<pos:position pos:line="92" pos:column="37"/></name> <operator pos:line="92" pos:column="38">=<pos:position pos:line="92" pos:column="39"/></operator> <operator pos:line="92" pos:column="40">(<pos:position pos:line="92" pos:column="41"/></operator><name pos:line="92" pos:column="41">dev_t<pos:position pos:line="92" pos:column="46"/></name><operator pos:line="92" pos:column="46">)<pos:position pos:line="92" pos:column="47"/></operator><call><name pos:line="92" pos:column="47">read_int<pos:position pos:line="92" pos:column="55"/></name><argument_list pos:line="92" pos:column="55">(<argument><expr><name pos:line="92" pos:column="56">f<pos:position pos:line="92" pos:column="57"/></name></expr></argument>)<pos:position pos:line="92" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="59"/></expr_stmt></block></then></if>
		}<pos:position pos:line="93" pos:column="18"/></block></then> <else pos:line="93" pos:column="19">else <block pos:line="93" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="94" pos:column="25">uint32<pos:position pos:line="94" pos:column="31"/></name></type> <name pos:line="94" pos:column="32">rdev_minor<pos:position pos:line="94" pos:column="42"/></name></decl>;<pos:position pos:line="94" pos:column="43"/></decl_stmt>
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><operator pos:line="95" pos:column="29">!<pos:position pos:line="95" pos:column="30"/></operator><operator pos:line="95" pos:column="30">(<pos:position pos:line="95" pos:column="31"/></operator><name pos:line="95" pos:column="31">flags<pos:position pos:line="95" pos:column="36"/></name> <operator pos:line="95" pos:column="37">&amp;<pos:position pos:line="95" pos:column="42"/></operator> <name pos:line="95" pos:column="39">XMIT_SAME_RDEV_MAJOR<pos:position pos:line="95" pos:column="59"/></name><operator pos:line="95" pos:column="59">)<pos:position pos:line="95" pos:column="60"/></operator></expr>)<pos:position pos:line="95" pos:column="61"/></condition><then pos:line="95" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="33">rdev_major<pos:position pos:line="96" pos:column="43"/></name> <operator pos:line="96" pos:column="44">=<pos:position pos:line="96" pos:column="45"/></operator> <call><name pos:line="96" pos:column="46">read_int<pos:position pos:line="96" pos:column="54"/></name><argument_list pos:line="96" pos:column="54">(<argument><expr><name pos:line="96" pos:column="55">f<pos:position pos:line="96" pos:column="56"/></name></expr></argument>)<pos:position pos:line="96" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="58"/></expr_stmt></block></then></if>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><name pos:line="97" pos:column="29">flags<pos:position pos:line="97" pos:column="34"/></name> <operator pos:line="97" pos:column="35">&amp;<pos:position pos:line="97" pos:column="40"/></operator> <name pos:line="97" pos:column="37">XMIT_RDEV_MINOR_IS_SMALL<pos:position pos:line="97" pos:column="61"/></name></expr>)<pos:position pos:line="97" pos:column="62"/></condition><then pos:line="97" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="33">rdev_minor<pos:position pos:line="98" pos:column="43"/></name> <operator pos:line="98" pos:column="44">=<pos:position pos:line="98" pos:column="45"/></operator> <call><name pos:line="98" pos:column="46">read_byte<pos:position pos:line="98" pos:column="55"/></name><argument_list pos:line="98" pos:column="55">(<argument><expr><name pos:line="98" pos:column="56">f<pos:position pos:line="98" pos:column="57"/></name></expr></argument>)<pos:position pos:line="98" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="59"/></expr_stmt></block></then>
			<else pos:line="99" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="33">rdev_minor<pos:position pos:line="100" pos:column="43"/></name> <operator pos:line="100" pos:column="44">=<pos:position pos:line="100" pos:column="45"/></operator> <call><name pos:line="100" pos:column="46">read_int<pos:position pos:line="100" pos:column="54"/></name><argument_list pos:line="100" pos:column="54">(<argument><expr><name pos:line="100" pos:column="55">f<pos:position pos:line="100" pos:column="56"/></name></expr></argument>)<pos:position pos:line="100" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="58"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="101" pos:column="25">rdev<pos:position pos:line="101" pos:column="29"/></name> <operator pos:line="101" pos:column="30">=<pos:position pos:line="101" pos:column="31"/></operator> <call><name pos:line="101" pos:column="32">makedev<pos:position pos:line="101" pos:column="39"/></name><argument_list pos:line="101" pos:column="39">(<argument><expr><name pos:line="101" pos:column="40">rdev_major<pos:position pos:line="101" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="52">rdev_minor<pos:position pos:line="101" pos:column="62"/></name></expr></argument>)<pos:position pos:line="101" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="102" pos:column="18"/></block></else></if>
	}<pos:position pos:line="103" pos:column="10"/></block></then> <elseif pos:line="103" pos:column="11">else <if pos:line="103" pos:column="16">if <condition pos:line="103" pos:column="19">(<expr><name pos:line="103" pos:column="20">protocol_version<pos:position pos:line="103" pos:column="36"/></name> <operator pos:line="103" pos:column="37">&lt;<pos:position pos:line="103" pos:column="41"/></operator> <literal type="number" pos:line="103" pos:column="39">28<pos:position pos:line="103" pos:column="41"/></literal></expr>)<pos:position pos:line="103" pos:column="42"/></condition><then pos:line="103" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="17">rdev<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <call><name pos:line="104" pos:column="24">makedev<pos:position pos:line="104" pos:column="31"/></name><argument_list pos:line="104" pos:column="31">(<argument><expr><literal type="number" pos:line="104" pos:column="32">0<pos:position pos:line="104" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="35">0<pos:position pos:line="104" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt></block></then></if></elseif></if>

<cpp:ifdef pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">ifdef<pos:position pos:line="106" pos:column="7"/></cpp:directive> <name pos:line="106" pos:column="8">SUPPORT_LINKS<pos:position pos:line="106" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">preserve_links<pos:position pos:line="107" pos:column="27"/></name> <operator pos:line="107" pos:column="28">&amp;&amp;<pos:position pos:line="107" pos:column="38"/></operator> <call><name pos:line="107" pos:column="31">S_ISLNK<pos:position pos:line="107" pos:column="38"/></name><argument_list pos:line="107" pos:column="38">(<argument><expr><name pos:line="107" pos:column="39">mode<pos:position pos:line="107" pos:column="43"/></name></expr></argument>)<pos:position pos:line="107" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="45"/></condition><then pos:line="107" pos:column="45"> <block pos:line="107" pos:column="46">{
		<expr_stmt><expr><name pos:line="108" pos:column="17">linkname_len<pos:position pos:line="108" pos:column="29"/></name> <operator pos:line="108" pos:column="30">=<pos:position pos:line="108" pos:column="31"/></operator> <call><name pos:line="108" pos:column="32">read_int<pos:position pos:line="108" pos:column="40"/></name><argument_list pos:line="108" pos:column="40">(<argument><expr><name pos:line="108" pos:column="41">f<pos:position pos:line="108" pos:column="42"/></name></expr></argument>)<pos:position pos:line="108" pos:column="43"/></argument_list></call> <operator pos:line="108" pos:column="44">+<pos:position pos:line="108" pos:column="45"/></operator> <literal type="number" pos:line="108" pos:column="46">1<pos:position pos:line="108" pos:column="47"/></literal></expr>;<pos:position pos:line="108" pos:column="48"/></expr_stmt> <comment type="block" pos:line="108" pos:column="49">/* count the '\0' */</comment>
		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name pos:line="109" pos:column="21">linkname_len<pos:position pos:line="109" pos:column="33"/></name> <operator pos:line="109" pos:column="34">&lt;=<pos:position pos:line="109" pos:column="39"/></operator> <literal type="number" pos:line="109" pos:column="37">0<pos:position pos:line="109" pos:column="38"/></literal> <operator pos:line="109" pos:column="39">||<pos:position pos:line="109" pos:column="41"/></operator> <name pos:line="109" pos:column="42">linkname_len<pos:position pos:line="109" pos:column="54"/></name> <operator pos:line="109" pos:column="55">&gt;<pos:position pos:line="109" pos:column="59"/></operator> <name pos:line="109" pos:column="57">MAXPATHLEN<pos:position pos:line="109" pos:column="67"/></name></expr>)<pos:position pos:line="109" pos:column="68"/></condition><then pos:line="109" pos:column="68"> <block pos:line="109" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">rprintf<pos:position pos:line="110" pos:column="32"/></name><argument_list pos:line="110" pos:column="32">(<argument><expr><name pos:line="110" pos:column="33">FERROR<pos:position pos:line="110" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="41">"overflow: linkname_len=%d\n"<pos:position pos:line="110" pos:column="70"/></literal></expr></argument>,
				<argument><expr><name pos:line="111" pos:column="33">linkname_len<pos:position pos:line="111" pos:column="45"/></name> <operator pos:line="111" pos:column="46">-<pos:position pos:line="111" pos:column="47"/></operator> <literal type="number" pos:line="111" pos:column="48">1<pos:position pos:line="111" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="112" pos:column="25">overflow_exit<pos:position pos:line="112" pos:column="38"/></name><argument_list pos:line="112" pos:column="38">(<argument><expr><literal type="string" pos:line="112" pos:column="39">"receive_file_entry"<pos:position pos:line="112" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="113" pos:column="18"/></block></then></if>
	}<pos:position pos:line="114" pos:column="10"/></block></then>
	<else pos:line="115" pos:column="9">else
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif<pos:position pos:line="116" pos:column="7"/></cpp:directive></cpp:endif>
		<block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="17">linkname_len<pos:position pos:line="117" pos:column="29"/></name> <operator pos:line="117" pos:column="30">=<pos:position pos:line="117" pos:column="31"/></operator> <literal type="number" pos:line="117" pos:column="32">0<pos:position pos:line="117" pos:column="33"/></literal></expr>;<pos:position pos:line="117" pos:column="34"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="119" pos:column="9">sum_len<pos:position pos:line="119" pos:column="16"/></name> <operator pos:line="119" pos:column="17">=<pos:position pos:line="119" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="119" pos:column="19">always_checksum<pos:position pos:line="119" pos:column="34"/></name> <operator pos:line="119" pos:column="35">&amp;&amp;<pos:position pos:line="119" pos:column="45"/></operator> <call><name pos:line="119" pos:column="38">S_ISREG<pos:position pos:line="119" pos:column="45"/></name><argument_list pos:line="119" pos:column="45">(<argument><expr><name pos:line="119" pos:column="46">mode<pos:position pos:line="119" pos:column="50"/></name></expr></argument>)<pos:position pos:line="119" pos:column="51"/></argument_list></call></expr> ?<pos:position pos:line="119" pos:column="53"/></condition><then pos:line="119" pos:column="53"> <expr><name pos:line="119" pos:column="54">MD4_SUM_LENGTH<pos:position pos:line="119" pos:column="68"/></name></expr> <pos:position pos:line="119" pos:column="69"/></then><else pos:line="119" pos:column="69">: <expr><literal type="number" pos:line="119" pos:column="71">0<pos:position pos:line="119" pos:column="72"/></literal></expr></else></ternary></expr>;<pos:position pos:line="119" pos:column="73"/></expr_stmt>

	<expr_stmt><expr><name pos:line="121" pos:column="9">alloc_len<pos:position pos:line="121" pos:column="18"/></name> <operator pos:line="121" pos:column="19">=<pos:position pos:line="121" pos:column="20"/></operator> <name pos:line="121" pos:column="21">file_struct_len<pos:position pos:line="121" pos:column="36"/></name> <operator pos:line="121" pos:column="37">+<pos:position pos:line="121" pos:column="38"/></operator> <name pos:line="121" pos:column="39">dirname_len<pos:position pos:line="121" pos:column="50"/></name> <operator pos:line="121" pos:column="51">+<pos:position pos:line="121" pos:column="52"/></operator> <name pos:line="121" pos:column="53">basename_len<pos:position pos:line="121" pos:column="65"/></name>
		  <operator pos:line="122" pos:column="19">+<pos:position pos:line="122" pos:column="20"/></operator> <name pos:line="122" pos:column="21">linkname_len<pos:position pos:line="122" pos:column="33"/></name> <operator pos:line="122" pos:column="34">+<pos:position pos:line="122" pos:column="35"/></operator> <name pos:line="122" pos:column="36">sum_len<pos:position pos:line="122" pos:column="43"/></name></expr>;<pos:position pos:line="122" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="123" pos:column="9">bp<pos:position pos:line="123" pos:column="11"/></name> <operator pos:line="123" pos:column="12">=<pos:position pos:line="123" pos:column="13"/></operator> <call><name pos:line="123" pos:column="14">pool_alloc<pos:position pos:line="123" pos:column="24"/></name><argument_list pos:line="123" pos:column="24">(<argument><expr><name><name pos:line="123" pos:column="25">flist<pos:position pos:line="123" pos:column="30"/></name><operator pos:line="123" pos:column="30">-&gt;<pos:position pos:line="123" pos:column="35"/></operator><name pos:line="123" pos:column="32">file_pool<pos:position pos:line="123" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="43">alloc_len<pos:position pos:line="123" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="54">"receive_file_entry"<pos:position pos:line="123" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="76"/></expr_stmt>

	<expr_stmt><expr><name pos:line="125" pos:column="9">file<pos:position pos:line="125" pos:column="13"/></name> <operator pos:line="125" pos:column="14">=<pos:position pos:line="125" pos:column="15"/></operator> <operator pos:line="125" pos:column="16">(<pos:position pos:line="125" pos:column="17"/></operator>struct <name pos:line="125" pos:column="24">file_struct<pos:position pos:line="125" pos:column="35"/></name> <operator pos:line="125" pos:column="36">*<pos:position pos:line="125" pos:column="37"/></operator><operator pos:line="125" pos:column="37">)<pos:position pos:line="125" pos:column="38"/></operator><name pos:line="125" pos:column="38">bp<pos:position pos:line="125" pos:column="40"/></name></expr>;<pos:position pos:line="125" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">memset<pos:position pos:line="126" pos:column="15"/></name><argument_list pos:line="126" pos:column="15">(<argument><expr><name pos:line="126" pos:column="16">bp<pos:position pos:line="126" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="126" pos:column="20">0<pos:position pos:line="126" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="23">file_struct_len<pos:position pos:line="126" pos:column="38"/></name></expr></argument>)<pos:position pos:line="126" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="127" pos:column="9">bp<pos:position pos:line="127" pos:column="11"/></name> <operator pos:line="127" pos:column="12">+=<pos:position pos:line="127" pos:column="14"/></operator> <name pos:line="127" pos:column="15">file_struct_len<pos:position pos:line="127" pos:column="30"/></name></expr>;<pos:position pos:line="127" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="129" pos:column="9">file<pos:position pos:line="129" pos:column="13"/></name><operator pos:line="129" pos:column="13">-&gt;<pos:position pos:line="129" pos:column="18"/></operator><name pos:line="129" pos:column="15">modtime<pos:position pos:line="129" pos:column="22"/></name></name> <operator pos:line="129" pos:column="23">=<pos:position pos:line="129" pos:column="24"/></operator> <name pos:line="129" pos:column="25">modtime<pos:position pos:line="129" pos:column="32"/></name></expr>;<pos:position pos:line="129" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="130" pos:column="9">file<pos:position pos:line="130" pos:column="13"/></name><operator pos:line="130" pos:column="13">-&gt;<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="15">length<pos:position pos:line="130" pos:column="21"/></name></name> <operator pos:line="130" pos:column="22">=<pos:position pos:line="130" pos:column="23"/></operator> <name pos:line="130" pos:column="24">file_length<pos:position pos:line="130" pos:column="35"/></name></expr>;<pos:position pos:line="130" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="131" pos:column="9">file<pos:position pos:line="131" pos:column="13"/></name><operator pos:line="131" pos:column="13">-&gt;<pos:position pos:line="131" pos:column="18"/></operator><name pos:line="131" pos:column="15">mode<pos:position pos:line="131" pos:column="19"/></name></name> <operator pos:line="131" pos:column="20">=<pos:position pos:line="131" pos:column="21"/></operator> <name pos:line="131" pos:column="22">mode<pos:position pos:line="131" pos:column="26"/></name></expr>;<pos:position pos:line="131" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="132" pos:column="9">file<pos:position pos:line="132" pos:column="13"/></name><operator pos:line="132" pos:column="13">-&gt;<pos:position pos:line="132" pos:column="18"/></operator><name pos:line="132" pos:column="15">uid<pos:position pos:line="132" pos:column="18"/></name></name> <operator pos:line="132" pos:column="19">=<pos:position pos:line="132" pos:column="20"/></operator> <name pos:line="132" pos:column="21">uid<pos:position pos:line="132" pos:column="24"/></name></expr>;<pos:position pos:line="132" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="133" pos:column="9">file<pos:position pos:line="133" pos:column="13"/></name><operator pos:line="133" pos:column="13">-&gt;<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="15">gid<pos:position pos:line="133" pos:column="18"/></name></name> <operator pos:line="133" pos:column="19">=<pos:position pos:line="133" pos:column="20"/></operator> <name pos:line="133" pos:column="21">gid<pos:position pos:line="133" pos:column="24"/></name></expr>;<pos:position pos:line="133" pos:column="25"/></expr_stmt>

	<if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">dirname_len<pos:position pos:line="135" pos:column="24"/></name></expr>)<pos:position pos:line="135" pos:column="25"/></condition><then pos:line="135" pos:column="25"> <block pos:line="135" pos:column="26">{
		<expr_stmt><expr><name><name pos:line="136" pos:column="17">file<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">dirname<pos:position pos:line="136" pos:column="30"/></name></name> <operator pos:line="136" pos:column="31">=<pos:position pos:line="136" pos:column="32"/></operator> <name pos:line="136" pos:column="33">lastdir<pos:position pos:line="136" pos:column="40"/></name> <operator pos:line="136" pos:column="41">=<pos:position pos:line="136" pos:column="42"/></operator> <name pos:line="136" pos:column="43">bp<pos:position pos:line="136" pos:column="45"/></name></expr>;<pos:position pos:line="136" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="137" pos:column="17">lastdir_len<pos:position pos:line="137" pos:column="28"/></name> <operator pos:line="137" pos:column="29">=<pos:position pos:line="137" pos:column="30"/></operator> <name pos:line="137" pos:column="31">dirname_len<pos:position pos:line="137" pos:column="42"/></name> <operator pos:line="137" pos:column="43">-<pos:position pos:line="137" pos:column="44"/></operator> <literal type="number" pos:line="137" pos:column="45">1<pos:position pos:line="137" pos:column="46"/></literal></expr>;<pos:position pos:line="137" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="138" pos:column="17">memcpy<pos:position pos:line="138" pos:column="23"/></name><argument_list pos:line="138" pos:column="23">(<argument><expr><name pos:line="138" pos:column="24">bp<pos:position pos:line="138" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="28">dirname<pos:position pos:line="138" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="37">dirname_len<pos:position pos:line="138" pos:column="48"/></name> <operator pos:line="138" pos:column="49">-<pos:position pos:line="138" pos:column="50"/></operator> <literal type="number" pos:line="138" pos:column="51">1<pos:position pos:line="138" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="139" pos:column="17">bp<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">+=<pos:position pos:line="139" pos:column="22"/></operator> <name pos:line="139" pos:column="23">dirname_len<pos:position pos:line="139" pos:column="34"/></name></expr>;<pos:position pos:line="139" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="140" pos:column="17">bp<pos:position pos:line="140" pos:column="19"/></name><index pos:line="140" pos:column="19">[<expr><operator pos:line="140" pos:column="20">-<pos:position pos:line="140" pos:column="21"/></operator><literal type="number" pos:line="140" pos:column="21">1<pos:position pos:line="140" pos:column="22"/></literal></expr>]<pos:position pos:line="140" pos:column="23"/></index></name> <operator pos:line="140" pos:column="24">=<pos:position pos:line="140" pos:column="25"/></operator> <literal type="char" pos:line="140" pos:column="26">'\0'<pos:position pos:line="140" pos:column="30"/></literal></expr>;<pos:position pos:line="140" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="141" pos:column="17">lastdir_depth<pos:position pos:line="141" pos:column="30"/></name> <operator pos:line="141" pos:column="31">=<pos:position pos:line="141" pos:column="32"/></operator> <call><name pos:line="141" pos:column="33">count_dir_elements<pos:position pos:line="141" pos:column="51"/></name><argument_list pos:line="141" pos:column="51">(<argument><expr><name pos:line="141" pos:column="52">lastdir<pos:position pos:line="141" pos:column="59"/></name></expr></argument>)<pos:position pos:line="141" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="142" pos:column="17">file<pos:position pos:line="142" pos:column="21"/></name><operator pos:line="142" pos:column="21">-&gt;<pos:position pos:line="142" pos:column="26"/></operator><name pos:line="142" pos:column="23">dir<pos:position pos:line="142" pos:column="26"/></name><operator pos:line="142" pos:column="26">.<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="27">depth<pos:position pos:line="142" pos:column="32"/></name></name> <operator pos:line="142" pos:column="33">=<pos:position pos:line="142" pos:column="34"/></operator> <name pos:line="142" pos:column="35">lastdir_depth<pos:position pos:line="142" pos:column="48"/></name> <operator pos:line="142" pos:column="49">+<pos:position pos:line="142" pos:column="50"/></operator> <literal type="number" pos:line="142" pos:column="51">1<pos:position pos:line="142" pos:column="52"/></literal></expr>;<pos:position pos:line="142" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="143" pos:column="10"/></block></then> <elseif pos:line="143" pos:column="11">else <if pos:line="143" pos:column="16">if <condition pos:line="143" pos:column="19">(<expr><name pos:line="143" pos:column="20">dirname<pos:position pos:line="143" pos:column="27"/></name></expr>)<pos:position pos:line="143" pos:column="28"/></condition><then pos:line="143" pos:column="28"> <block pos:line="143" pos:column="29">{
		<expr_stmt><expr><name><name pos:line="144" pos:column="17">file<pos:position pos:line="144" pos:column="21"/></name><operator pos:line="144" pos:column="21">-&gt;<pos:position pos:line="144" pos:column="26"/></operator><name pos:line="144" pos:column="23">dirname<pos:position pos:line="144" pos:column="30"/></name></name> <operator pos:line="144" pos:column="31">=<pos:position pos:line="144" pos:column="32"/></operator> <name pos:line="144" pos:column="33">dirname<pos:position pos:line="144" pos:column="40"/></name></expr>;<pos:position pos:line="144" pos:column="41"/></expr_stmt> <comment type="block" pos:line="144" pos:column="42">/* we're reusing lastname */</comment>
		<expr_stmt><expr><name><name pos:line="145" pos:column="17">file<pos:position pos:line="145" pos:column="21"/></name><operator pos:line="145" pos:column="21">-&gt;<pos:position pos:line="145" pos:column="26"/></operator><name pos:line="145" pos:column="23">dir<pos:position pos:line="145" pos:column="26"/></name><operator pos:line="145" pos:column="26">.<pos:position pos:line="145" pos:column="27"/></operator><name pos:line="145" pos:column="27">depth<pos:position pos:line="145" pos:column="32"/></name></name> <operator pos:line="145" pos:column="33">=<pos:position pos:line="145" pos:column="34"/></operator> <name pos:line="145" pos:column="35">lastdir_depth<pos:position pos:line="145" pos:column="48"/></name> <operator pos:line="145" pos:column="49">+<pos:position pos:line="145" pos:column="50"/></operator> <literal type="number" pos:line="145" pos:column="51">1<pos:position pos:line="145" pos:column="52"/></literal></expr>;<pos:position pos:line="145" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="146" pos:column="10"/></block></then></if></elseif> <else pos:line="146" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="147" pos:column="17">file<pos:position pos:line="147" pos:column="21"/></name><operator pos:line="147" pos:column="21">-&gt;<pos:position pos:line="147" pos:column="26"/></operator><name pos:line="147" pos:column="23">dir<pos:position pos:line="147" pos:column="26"/></name><operator pos:line="147" pos:column="26">.<pos:position pos:line="147" pos:column="27"/></operator><name pos:line="147" pos:column="27">depth<pos:position pos:line="147" pos:column="32"/></name></name> <operator pos:line="147" pos:column="33">=<pos:position pos:line="147" pos:column="34"/></operator> <literal type="number" pos:line="147" pos:column="35">1<pos:position pos:line="147" pos:column="36"/></literal></expr>;<pos:position pos:line="147" pos:column="37"/></expr_stmt></block></else></if>

	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><call><name pos:line="149" pos:column="13">S_ISDIR<pos:position pos:line="149" pos:column="20"/></name><argument_list pos:line="149" pos:column="20">(<argument><expr><name pos:line="149" pos:column="21">mode<pos:position pos:line="149" pos:column="25"/></name></expr></argument>)<pos:position pos:line="149" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="149" pos:column="27"/></condition><then pos:line="149" pos:column="27"> <block pos:line="149" pos:column="28">{
		<if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><name pos:line="150" pos:column="21">basename_len<pos:position pos:line="150" pos:column="33"/></name> <operator pos:line="150" pos:column="34">==<pos:position pos:line="150" pos:column="36"/></operator> <literal type="number" pos:line="150" pos:column="37">1<pos:position pos:line="150" pos:column="38"/></literal><operator pos:line="150" pos:column="38">+<pos:position pos:line="150" pos:column="39"/></operator><literal type="number" pos:line="150" pos:column="39">1<pos:position pos:line="150" pos:column="40"/></literal> <operator pos:line="150" pos:column="41">&amp;&amp;<pos:position pos:line="150" pos:column="51"/></operator> <operator pos:line="150" pos:column="44">*<pos:position pos:line="150" pos:column="45"/></operator><name pos:line="150" pos:column="45">basename<pos:position pos:line="150" pos:column="53"/></name> <operator pos:line="150" pos:column="54">==<pos:position pos:line="150" pos:column="56"/></operator> <literal type="char" pos:line="150" pos:column="57">'.'<pos:position pos:line="150" pos:column="60"/></literal></expr>)<pos:position pos:line="150" pos:column="61"/></condition><then pos:line="150" pos:column="61"> <comment type="block" pos:line="150" pos:column="62">/* +1 for '\0' */</comment>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="151" pos:column="25">file<pos:position pos:line="151" pos:column="29"/></name><operator pos:line="151" pos:column="29">-&gt;<pos:position pos:line="151" pos:column="34"/></operator><name pos:line="151" pos:column="31">dir<pos:position pos:line="151" pos:column="34"/></name><operator pos:line="151" pos:column="34">.<pos:position pos:line="151" pos:column="35"/></operator><name pos:line="151" pos:column="35">depth<pos:position pos:line="151" pos:column="40"/></name></name><operator pos:line="151" pos:column="40">--<pos:position pos:line="151" pos:column="42"/></operator></expr>;<pos:position pos:line="151" pos:column="43"/></expr_stmt></block></then></if>
		<if pos:line="152" pos:column="17">if <condition pos:line="152" pos:column="20">(<expr><name pos:line="152" pos:column="21">flags<pos:position pos:line="152" pos:column="26"/></name> <operator pos:line="152" pos:column="27">&amp;<pos:position pos:line="152" pos:column="32"/></operator> <name pos:line="152" pos:column="29">XMIT_TOP_DIR<pos:position pos:line="152" pos:column="41"/></name></expr>)<pos:position pos:line="152" pos:column="42"/></condition><then pos:line="152" pos:column="42"> <block pos:line="152" pos:column="43">{
			<expr_stmt><expr><name pos:line="153" pos:column="25">in_del_hier<pos:position pos:line="153" pos:column="36"/></name> <operator pos:line="153" pos:column="37">=<pos:position pos:line="153" pos:column="38"/></operator> <name pos:line="153" pos:column="39">recurse<pos:position pos:line="153" pos:column="46"/></name></expr>;<pos:position pos:line="153" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="154" pos:column="25">del_hier_name_len<pos:position pos:line="154" pos:column="42"/></name> <operator pos:line="154" pos:column="43">=<pos:position pos:line="154" pos:column="44"/></operator> <ternary><condition><expr><name><name pos:line="154" pos:column="45">file<pos:position pos:line="154" pos:column="49"/></name><operator pos:line="154" pos:column="49">-&gt;<pos:position pos:line="154" pos:column="54"/></operator><name pos:line="154" pos:column="51">dir<pos:position pos:line="154" pos:column="54"/></name><operator pos:line="154" pos:column="54">.<pos:position pos:line="154" pos:column="55"/></operator><name pos:line="154" pos:column="55">depth<pos:position pos:line="154" pos:column="60"/></name></name> <operator pos:line="154" pos:column="61">==<pos:position pos:line="154" pos:column="63"/></operator> <literal type="number" pos:line="154" pos:column="64">0<pos:position pos:line="154" pos:column="65"/></literal></expr> ?<pos:position pos:line="154" pos:column="67"/></condition><then pos:line="154" pos:column="67"> <expr><literal type="number" pos:line="154" pos:column="68">0<pos:position pos:line="154" pos:column="69"/></literal></expr> <pos:position pos:line="154" pos:column="70"/></then><else pos:line="154" pos:column="70">: <expr><name pos:line="154" pos:column="72">l1<pos:position pos:line="154" pos:column="74"/></name> <operator pos:line="154" pos:column="75">+<pos:position pos:line="154" pos:column="76"/></operator> <name pos:line="154" pos:column="77">l2<pos:position pos:line="154" pos:column="79"/></name></expr></else></ternary></expr>;<pos:position pos:line="154" pos:column="80"/></expr_stmt>
			<if pos:line="155" pos:column="25">if <condition pos:line="155" pos:column="28">(<expr><name pos:line="155" pos:column="29">relative_paths<pos:position pos:line="155" pos:column="43"/></name> <operator pos:line="155" pos:column="44">&amp;&amp;<pos:position pos:line="155" pos:column="54"/></operator> <name pos:line="155" pos:column="47">del_hier_name_len<pos:position pos:line="155" pos:column="64"/></name> <operator pos:line="155" pos:column="65">&gt;<pos:position pos:line="155" pos:column="69"/></operator> <literal type="number" pos:line="155" pos:column="67">2<pos:position pos:line="155" pos:column="68"/></literal>
			    <operator pos:line="156" pos:column="29">&amp;&amp;<pos:position pos:line="156" pos:column="39"/></operator> <name><name pos:line="156" pos:column="32">lastname<pos:position pos:line="156" pos:column="40"/></name><index pos:line="156" pos:column="40">[<expr><name pos:line="156" pos:column="41">del_hier_name_len<pos:position pos:line="156" pos:column="58"/></name><operator pos:line="156" pos:column="58">-<pos:position pos:line="156" pos:column="59"/></operator><literal type="number" pos:line="156" pos:column="59">1<pos:position pos:line="156" pos:column="60"/></literal></expr>]<pos:position pos:line="156" pos:column="61"/></index></name> <operator pos:line="156" pos:column="62">==<pos:position pos:line="156" pos:column="64"/></operator> <literal type="char" pos:line="156" pos:column="65">'.'<pos:position pos:line="156" pos:column="68"/></literal>
			    <operator pos:line="157" pos:column="29">&amp;&amp;<pos:position pos:line="157" pos:column="39"/></operator> <name><name pos:line="157" pos:column="32">lastname<pos:position pos:line="157" pos:column="40"/></name><index pos:line="157" pos:column="40">[<expr><name pos:line="157" pos:column="41">del_hier_name_len<pos:position pos:line="157" pos:column="58"/></name><operator pos:line="157" pos:column="58">-<pos:position pos:line="157" pos:column="59"/></operator><literal type="number" pos:line="157" pos:column="59">2<pos:position pos:line="157" pos:column="60"/></literal></expr>]<pos:position pos:line="157" pos:column="61"/></index></name> <operator pos:line="157" pos:column="62">==<pos:position pos:line="157" pos:column="64"/></operator> <literal type="char" pos:line="157" pos:column="65">'/'<pos:position pos:line="157" pos:column="68"/></literal></expr>)<pos:position pos:line="157" pos:column="69"/></condition><then pos:line="157" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="158" pos:column="33">del_hier_name_len<pos:position pos:line="158" pos:column="50"/></name> <operator pos:line="158" pos:column="51">-=<pos:position pos:line="158" pos:column="53"/></operator> <literal type="number" pos:line="158" pos:column="54">2<pos:position pos:line="158" pos:column="55"/></literal></expr>;<pos:position pos:line="158" pos:column="56"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="159" pos:column="25">file<pos:position pos:line="159" pos:column="29"/></name><operator pos:line="159" pos:column="29">-&gt;<pos:position pos:line="159" pos:column="34"/></operator><name pos:line="159" pos:column="31">flags<pos:position pos:line="159" pos:column="36"/></name></name> <operator pos:line="159" pos:column="37">|=<pos:position pos:line="159" pos:column="39"/></operator> <name pos:line="159" pos:column="40">FLAG_TOP_DIR<pos:position pos:line="159" pos:column="52"/></name> <operator pos:line="159" pos:column="53">|<pos:position pos:line="159" pos:column="54"/></operator> <name pos:line="159" pos:column="55">FLAG_DEL_HERE<pos:position pos:line="159" pos:column="68"/></name></expr>;<pos:position pos:line="159" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="160" pos:column="18"/></block></then> <elseif pos:line="160" pos:column="19">else <if pos:line="160" pos:column="24">if <condition pos:line="160" pos:column="27">(<expr><name pos:line="160" pos:column="28">in_del_hier<pos:position pos:line="160" pos:column="39"/></name></expr>)<pos:position pos:line="160" pos:column="40"/></condition><then pos:line="160" pos:column="40"> <block pos:line="160" pos:column="41">{
			<if pos:line="161" pos:column="25">if <condition pos:line="161" pos:column="28">(<expr><operator pos:line="161" pos:column="29">!<pos:position pos:line="161" pos:column="30"/></operator><name pos:line="161" pos:column="30">relative_paths<pos:position pos:line="161" pos:column="44"/></name> <operator pos:line="161" pos:column="45">||<pos:position pos:line="161" pos:column="47"/></operator> <operator pos:line="161" pos:column="48">!<pos:position pos:line="161" pos:column="49"/></operator><name pos:line="161" pos:column="49">del_hier_name_len<pos:position pos:line="161" pos:column="66"/></name>
			 <operator pos:line="162" pos:column="26">||<pos:position pos:line="162" pos:column="28"/></operator> <operator pos:line="162" pos:column="29">(<pos:position pos:line="162" pos:column="30"/></operator><name pos:line="162" pos:column="30">l1<pos:position pos:line="162" pos:column="32"/></name> <operator pos:line="162" pos:column="33">&gt;=<pos:position pos:line="162" pos:column="38"/></operator> <name pos:line="162" pos:column="36">del_hier_name_len<pos:position pos:line="162" pos:column="53"/></name>
			  <operator pos:line="163" pos:column="27">&amp;&amp;<pos:position pos:line="163" pos:column="37"/></operator> <name><name pos:line="163" pos:column="30">lastname<pos:position pos:line="163" pos:column="38"/></name><index pos:line="163" pos:column="38">[<expr><name pos:line="163" pos:column="39">del_hier_name_len<pos:position pos:line="163" pos:column="56"/></name></expr>]<pos:position pos:line="163" pos:column="57"/></index></name> <operator pos:line="163" pos:column="58">==<pos:position pos:line="163" pos:column="60"/></operator> <literal type="char" pos:line="163" pos:column="61">'/'<pos:position pos:line="163" pos:column="64"/></literal><operator pos:line="163" pos:column="64">)<pos:position pos:line="163" pos:column="65"/></operator></expr>)<pos:position pos:line="163" pos:column="66"/></condition><then pos:line="163" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="164" pos:column="33">file<pos:position pos:line="164" pos:column="37"/></name><operator pos:line="164" pos:column="37">-&gt;<pos:position pos:line="164" pos:column="42"/></operator><name pos:line="164" pos:column="39">flags<pos:position pos:line="164" pos:column="44"/></name></name> <operator pos:line="164" pos:column="45">|=<pos:position pos:line="164" pos:column="47"/></operator> <name pos:line="164" pos:column="48">FLAG_DEL_HERE<pos:position pos:line="164" pos:column="61"/></name></expr>;<pos:position pos:line="164" pos:column="62"/></expr_stmt></block></then>
			<else pos:line="165" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="166" pos:column="33">in_del_hier<pos:position pos:line="166" pos:column="44"/></name> <operator pos:line="166" pos:column="45">=<pos:position pos:line="166" pos:column="46"/></operator> <literal type="number" pos:line="166" pos:column="47">0<pos:position pos:line="166" pos:column="48"/></literal></expr>;<pos:position pos:line="166" pos:column="49"/></expr_stmt></block></else></if>
		}<pos:position pos:line="167" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="168" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="170" pos:column="9">file<pos:position pos:line="170" pos:column="13"/></name><operator pos:line="170" pos:column="13">-&gt;<pos:position pos:line="170" pos:column="18"/></operator><name pos:line="170" pos:column="15">basename<pos:position pos:line="170" pos:column="23"/></name></name> <operator pos:line="170" pos:column="24">=<pos:position pos:line="170" pos:column="25"/></operator> <name pos:line="170" pos:column="26">bp<pos:position pos:line="170" pos:column="28"/></name></expr>;<pos:position pos:line="170" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="171" pos:column="9">memcpy<pos:position pos:line="171" pos:column="15"/></name><argument_list pos:line="171" pos:column="15">(<argument><expr><name pos:line="171" pos:column="16">bp<pos:position pos:line="171" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="20">basename<pos:position pos:line="171" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="30">basename_len<pos:position pos:line="171" pos:column="42"/></name></expr></argument>)<pos:position pos:line="171" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="172" pos:column="9">bp<pos:position pos:line="172" pos:column="11"/></name> <operator pos:line="172" pos:column="12">+=<pos:position pos:line="172" pos:column="14"/></operator> <name pos:line="172" pos:column="15">basename_len<pos:position pos:line="172" pos:column="27"/></name></expr>;<pos:position pos:line="172" pos:column="28"/></expr_stmt>

	<if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><operator pos:line="174" pos:column="13">(<pos:position pos:line="174" pos:column="14"/></operator><name pos:line="174" pos:column="14">preserve_devices<pos:position pos:line="174" pos:column="30"/></name> <operator pos:line="174" pos:column="31">&amp;&amp;<pos:position pos:line="174" pos:column="41"/></operator> <call><name pos:line="174" pos:column="34">IS_DEVICE<pos:position pos:line="174" pos:column="43"/></name><argument_list pos:line="174" pos:column="43">(<argument><expr><name pos:line="174" pos:column="44">mode<pos:position pos:line="174" pos:column="48"/></name></expr></argument>)<pos:position pos:line="174" pos:column="49"/></argument_list></call><operator pos:line="174" pos:column="49">)<pos:position pos:line="174" pos:column="50"/></operator>
	 <operator pos:line="175" pos:column="10">||<pos:position pos:line="175" pos:column="12"/></operator> <operator pos:line="175" pos:column="13">(<pos:position pos:line="175" pos:column="14"/></operator><name pos:line="175" pos:column="14">preserve_specials<pos:position pos:line="175" pos:column="31"/></name> <operator pos:line="175" pos:column="32">&amp;&amp;<pos:position pos:line="175" pos:column="42"/></operator> <call><name pos:line="175" pos:column="35">IS_SPECIAL<pos:position pos:line="175" pos:column="45"/></name><argument_list pos:line="175" pos:column="45">(<argument><expr><name pos:line="175" pos:column="46">mode<pos:position pos:line="175" pos:column="50"/></name></expr></argument>)<pos:position pos:line="175" pos:column="51"/></argument_list></call><operator pos:line="175" pos:column="51">)<pos:position pos:line="175" pos:column="52"/></operator></expr>)<pos:position pos:line="175" pos:column="53"/></condition><then pos:line="175" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="176" pos:column="17">file<pos:position pos:line="176" pos:column="21"/></name><operator pos:line="176" pos:column="21">-&gt;<pos:position pos:line="176" pos:column="26"/></operator><name pos:line="176" pos:column="23">u<pos:position pos:line="176" pos:column="24"/></name><operator pos:line="176" pos:column="24">.<pos:position pos:line="176" pos:column="25"/></operator><name pos:line="176" pos:column="25">rdev<pos:position pos:line="176" pos:column="29"/></name></name> <operator pos:line="176" pos:column="30">=<pos:position pos:line="176" pos:column="31"/></operator> <name pos:line="176" pos:column="32">rdev<pos:position pos:line="176" pos:column="36"/></name></expr>;<pos:position pos:line="176" pos:column="37"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">ifdef<pos:position pos:line="178" pos:column="7"/></cpp:directive> <name pos:line="178" pos:column="8">SUPPORT_LINKS<pos:position pos:line="178" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">linkname_len<pos:position pos:line="179" pos:column="25"/></name></expr>)<pos:position pos:line="179" pos:column="26"/></condition><then pos:line="179" pos:column="26"> <block pos:line="179" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="180" pos:column="17">file<pos:position pos:line="180" pos:column="21"/></name><operator pos:line="180" pos:column="21">-&gt;<pos:position pos:line="180" pos:column="26"/></operator><name pos:line="180" pos:column="23">u<pos:position pos:line="180" pos:column="24"/></name><operator pos:line="180" pos:column="24">.<pos:position pos:line="180" pos:column="25"/></operator><name pos:line="180" pos:column="25">link<pos:position pos:line="180" pos:column="29"/></name></name> <operator pos:line="180" pos:column="30">=<pos:position pos:line="180" pos:column="31"/></operator> <name pos:line="180" pos:column="32">bp<pos:position pos:line="180" pos:column="34"/></name></expr>;<pos:position pos:line="180" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="181" pos:column="17">read_sbuf<pos:position pos:line="181" pos:column="26"/></name><argument_list pos:line="181" pos:column="26">(<argument><expr><name pos:line="181" pos:column="27">f<pos:position pos:line="181" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="30">bp<pos:position pos:line="181" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="34">linkname_len<pos:position pos:line="181" pos:column="46"/></name> <operator pos:line="181" pos:column="47">-<pos:position pos:line="181" pos:column="48"/></operator> <literal type="number" pos:line="181" pos:column="49">1<pos:position pos:line="181" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="52"/></expr_stmt>
		<if pos:line="182" pos:column="17">if <condition pos:line="182" pos:column="20">(<expr><name pos:line="182" pos:column="21">sanitize_paths<pos:position pos:line="182" pos:column="35"/></name></expr>)<pos:position pos:line="182" pos:column="36"/></condition><then pos:line="182" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="183" pos:column="25">sanitize_path<pos:position pos:line="183" pos:column="38"/></name><argument_list pos:line="183" pos:column="38">(<argument><expr><name pos:line="183" pos:column="39">bp<pos:position pos:line="183" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="43">bp<pos:position pos:line="183" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="47">""<pos:position pos:line="183" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="183" pos:column="51">lastdir_depth<pos:position pos:line="183" pos:column="64"/></name></expr></argument>)<pos:position pos:line="183" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="66"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="184" pos:column="17">bp<pos:position pos:line="184" pos:column="19"/></name> <operator pos:line="184" pos:column="20">+=<pos:position pos:line="184" pos:column="22"/></operator> <name pos:line="184" pos:column="23">linkname_len<pos:position pos:line="184" pos:column="35"/></name></expr>;<pos:position pos:line="184" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="185" pos:column="10"/></block></then></if>
<cpp:endif pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">endif<pos:position pos:line="186" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">ifdef<pos:position pos:line="188" pos:column="7"/></cpp:directive> <name pos:line="188" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="188" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name pos:line="189" pos:column="13">preserve_hard_links<pos:position pos:line="189" pos:column="32"/></name> <operator pos:line="189" pos:column="33">&amp;&amp;<pos:position pos:line="189" pos:column="43"/></operator> <name pos:line="189" pos:column="36">protocol_version<pos:position pos:line="189" pos:column="52"/></name> <operator pos:line="189" pos:column="53">&lt;<pos:position pos:line="189" pos:column="57"/></operator> <literal type="number" pos:line="189" pos:column="55">28<pos:position pos:line="189" pos:column="57"/></literal> <operator pos:line="189" pos:column="58">&amp;&amp;<pos:position pos:line="189" pos:column="68"/></operator> <call><name pos:line="189" pos:column="61">S_ISREG<pos:position pos:line="189" pos:column="68"/></name><argument_list pos:line="189" pos:column="68">(<argument><expr><name pos:line="189" pos:column="69">mode<pos:position pos:line="189" pos:column="73"/></name></expr></argument>)<pos:position pos:line="189" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="189" pos:column="75"/></condition><then pos:line="189" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><name pos:line="190" pos:column="17">flags<pos:position pos:line="190" pos:column="22"/></name> <operator pos:line="190" pos:column="23">|=<pos:position pos:line="190" pos:column="25"/></operator> <name pos:line="190" pos:column="26">XMIT_HAS_IDEV_DATA<pos:position pos:line="190" pos:column="44"/></name></expr>;<pos:position pos:line="190" pos:column="45"/></expr_stmt></block></then></if>
	<if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><name pos:line="191" pos:column="13">flags<pos:position pos:line="191" pos:column="18"/></name> <operator pos:line="191" pos:column="19">&amp;<pos:position pos:line="191" pos:column="24"/></operator> <name pos:line="191" pos:column="21">XMIT_HAS_IDEV_DATA<pos:position pos:line="191" pos:column="39"/></name></expr>)<pos:position pos:line="191" pos:column="40"/></condition><then pos:line="191" pos:column="40"> <block pos:line="191" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="192" pos:column="17">int64<pos:position pos:line="192" pos:column="22"/></name></type> <name pos:line="192" pos:column="23">inode<pos:position pos:line="192" pos:column="28"/></name></decl>;<pos:position pos:line="192" pos:column="29"/></decl_stmt>
		<if pos:line="193" pos:column="17">if <condition pos:line="193" pos:column="20">(<expr><name pos:line="193" pos:column="21">protocol_version<pos:position pos:line="193" pos:column="37"/></name> <operator pos:line="193" pos:column="38">&lt;<pos:position pos:line="193" pos:column="42"/></operator> <literal type="number" pos:line="193" pos:column="40">26<pos:position pos:line="193" pos:column="42"/></literal></expr>)<pos:position pos:line="193" pos:column="43"/></condition><then pos:line="193" pos:column="43"> <block pos:line="193" pos:column="44">{
			<expr_stmt><expr><name pos:line="194" pos:column="25">dev<pos:position pos:line="194" pos:column="28"/></name> <operator pos:line="194" pos:column="29">=<pos:position pos:line="194" pos:column="30"/></operator> <call><name pos:line="194" pos:column="31">read_int<pos:position pos:line="194" pos:column="39"/></name><argument_list pos:line="194" pos:column="39">(<argument><expr><name pos:line="194" pos:column="40">f<pos:position pos:line="194" pos:column="41"/></name></expr></argument>)<pos:position pos:line="194" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="195" pos:column="25">inode<pos:position pos:line="195" pos:column="30"/></name> <operator pos:line="195" pos:column="31">=<pos:position pos:line="195" pos:column="32"/></operator> <call><name pos:line="195" pos:column="33">read_int<pos:position pos:line="195" pos:column="41"/></name><argument_list pos:line="195" pos:column="41">(<argument><expr><name pos:line="195" pos:column="42">f<pos:position pos:line="195" pos:column="43"/></name></expr></argument>)<pos:position pos:line="195" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="196" pos:column="18"/></block></then> <else pos:line="196" pos:column="19">else <block pos:line="196" pos:column="24">{
			<if pos:line="197" pos:column="25">if <condition pos:line="197" pos:column="28">(<expr><operator pos:line="197" pos:column="29">!<pos:position pos:line="197" pos:column="30"/></operator><operator pos:line="197" pos:column="30">(<pos:position pos:line="197" pos:column="31"/></operator><name pos:line="197" pos:column="31">flags<pos:position pos:line="197" pos:column="36"/></name> <operator pos:line="197" pos:column="37">&amp;<pos:position pos:line="197" pos:column="42"/></operator> <name pos:line="197" pos:column="39">XMIT_SAME_DEV<pos:position pos:line="197" pos:column="52"/></name><operator pos:line="197" pos:column="52">)<pos:position pos:line="197" pos:column="53"/></operator></expr>)<pos:position pos:line="197" pos:column="54"/></condition><then pos:line="197" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><name pos:line="198" pos:column="33">dev<pos:position pos:line="198" pos:column="36"/></name> <operator pos:line="198" pos:column="37">=<pos:position pos:line="198" pos:column="38"/></operator> <call><name pos:line="198" pos:column="39">read_longint<pos:position pos:line="198" pos:column="51"/></name><argument_list pos:line="198" pos:column="51">(<argument><expr><name pos:line="198" pos:column="52">f<pos:position pos:line="198" pos:column="53"/></name></expr></argument>)<pos:position pos:line="198" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="199" pos:column="25">inode<pos:position pos:line="199" pos:column="30"/></name> <operator pos:line="199" pos:column="31">=<pos:position pos:line="199" pos:column="32"/></operator> <call><name pos:line="199" pos:column="33">read_longint<pos:position pos:line="199" pos:column="45"/></name><argument_list pos:line="199" pos:column="45">(<argument><expr><name pos:line="199" pos:column="46">f<pos:position pos:line="199" pos:column="47"/></name></expr></argument>)<pos:position pos:line="199" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="200" pos:column="18"/></block></else></if>
		<if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><name><name pos:line="201" pos:column="21">flist<pos:position pos:line="201" pos:column="26"/></name><operator pos:line="201" pos:column="26">-&gt;<pos:position pos:line="201" pos:column="31"/></operator><name pos:line="201" pos:column="28">hlink_pool<pos:position pos:line="201" pos:column="38"/></name></name></expr>)<pos:position pos:line="201" pos:column="39"/></condition><then pos:line="201" pos:column="39"> <block pos:line="201" pos:column="40">{
			<expr_stmt><expr><name><name pos:line="202" pos:column="25">file<pos:position pos:line="202" pos:column="29"/></name><operator pos:line="202" pos:column="29">-&gt;<pos:position pos:line="202" pos:column="34"/></operator><name pos:line="202" pos:column="31">link_u<pos:position pos:line="202" pos:column="37"/></name><operator pos:line="202" pos:column="37">.<pos:position pos:line="202" pos:column="38"/></operator><name pos:line="202" pos:column="38">idev<pos:position pos:line="202" pos:column="42"/></name></name> <operator pos:line="202" pos:column="43">=<pos:position pos:line="202" pos:column="44"/></operator> <call><name pos:line="202" pos:column="45">pool_talloc<pos:position pos:line="202" pos:column="56"/></name><argument_list pos:line="202" pos:column="56">(<argument><expr><name><name pos:line="202" pos:column="57">flist<pos:position pos:line="202" pos:column="62"/></name><operator pos:line="202" pos:column="62">-&gt;<pos:position pos:line="202" pos:column="67"/></operator><name pos:line="202" pos:column="64">hlink_pool<pos:position pos:line="202" pos:column="74"/></name></name></expr></argument>,
			    <argument><expr pos:line="203" pos:column="29">struct <name pos:line="203" pos:column="36">idev<pos:position pos:line="203" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="203" pos:column="42">1<pos:position pos:line="203" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="45">"inode_table"<pos:position pos:line="203" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="204" pos:column="25">file<pos:position pos:line="204" pos:column="29"/></name><operator pos:line="204" pos:column="29">-&gt;<pos:position pos:line="204" pos:column="34"/></operator><name pos:line="204" pos:column="31">F_INODE<pos:position pos:line="204" pos:column="38"/></name></name> <operator pos:line="204" pos:column="39">=<pos:position pos:line="204" pos:column="40"/></operator> <name pos:line="204" pos:column="41">inode<pos:position pos:line="204" pos:column="46"/></name></expr>;<pos:position pos:line="204" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="205" pos:column="25">file<pos:position pos:line="205" pos:column="29"/></name><operator pos:line="205" pos:column="29">-&gt;<pos:position pos:line="205" pos:column="34"/></operator><name pos:line="205" pos:column="31">F_DEV<pos:position pos:line="205" pos:column="36"/></name></name> <operator pos:line="205" pos:column="37">=<pos:position pos:line="205" pos:column="38"/></operator> <name pos:line="205" pos:column="39">dev<pos:position pos:line="205" pos:column="42"/></name></expr>;<pos:position pos:line="205" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="206" pos:column="18"/></block></then></if>
	}<pos:position pos:line="207" pos:column="10"/></block></then></if>
<cpp:endif pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">endif<pos:position pos:line="208" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><name pos:line="210" pos:column="13">always_checksum<pos:position pos:line="210" pos:column="28"/></name> <operator pos:line="210" pos:column="29">&amp;&amp;<pos:position pos:line="210" pos:column="39"/></operator> <operator pos:line="210" pos:column="32">(<pos:position pos:line="210" pos:column="33"/></operator><name pos:line="210" pos:column="33">sum_len<pos:position pos:line="210" pos:column="40"/></name> <operator pos:line="210" pos:column="41">||<pos:position pos:line="210" pos:column="43"/></operator> <name pos:line="210" pos:column="44">protocol_version<pos:position pos:line="210" pos:column="60"/></name> <operator pos:line="210" pos:column="61">&lt;<pos:position pos:line="210" pos:column="65"/></operator> <literal type="number" pos:line="210" pos:column="63">28<pos:position pos:line="210" pos:column="65"/></literal><operator pos:line="210" pos:column="65">)<pos:position pos:line="210" pos:column="66"/></operator></expr>)<pos:position pos:line="210" pos:column="67"/></condition><then pos:line="210" pos:column="67"> <block pos:line="210" pos:column="68">{
		<decl_stmt><decl><type><name pos:line="211" pos:column="17">char<pos:position pos:line="211" pos:column="21"/></name> <modifier pos:line="211" pos:column="22">*<pos:position pos:line="211" pos:column="23"/></modifier></type><name pos:line="211" pos:column="23">sum<pos:position pos:line="211" pos:column="26"/></name></decl>;<pos:position pos:line="211" pos:column="27"/></decl_stmt>
		<if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><name pos:line="212" pos:column="21">sum_len<pos:position pos:line="212" pos:column="28"/></name></expr>)<pos:position pos:line="212" pos:column="29"/></condition><then pos:line="212" pos:column="29"> <block pos:line="212" pos:column="30">{
			<expr_stmt><expr><name><name pos:line="213" pos:column="25">file<pos:position pos:line="213" pos:column="29"/></name><operator pos:line="213" pos:column="29">-&gt;<pos:position pos:line="213" pos:column="34"/></operator><name pos:line="213" pos:column="31">u<pos:position pos:line="213" pos:column="32"/></name><operator pos:line="213" pos:column="32">.<pos:position pos:line="213" pos:column="33"/></operator><name pos:line="213" pos:column="33">sum<pos:position pos:line="213" pos:column="36"/></name></name> <operator pos:line="213" pos:column="37">=<pos:position pos:line="213" pos:column="38"/></operator> <name pos:line="213" pos:column="39">sum<pos:position pos:line="213" pos:column="42"/></name> <operator pos:line="213" pos:column="43">=<pos:position pos:line="213" pos:column="44"/></operator> <name pos:line="213" pos:column="45">bp<pos:position pos:line="213" pos:column="47"/></name></expr>;<pos:position pos:line="213" pos:column="48"/></expr_stmt>
			<comment type="block" pos:line="214" pos:column="25">/*bp += sum_len;*/</comment>
		}<pos:position pos:line="215" pos:column="18"/></block></then> <else pos:line="215" pos:column="19">else <block pos:line="215" pos:column="24">{
			<comment type="block" pos:line="216" pos:column="25">/* Prior to 28, we get a useless set of nulls. */</comment>
			<expr_stmt><expr><name pos:line="217" pos:column="25">sum<pos:position pos:line="217" pos:column="28"/></name> <operator pos:line="217" pos:column="29">=<pos:position pos:line="217" pos:column="30"/></operator> <name pos:line="217" pos:column="31">empty_sum<pos:position pos:line="217" pos:column="40"/></name></expr>;<pos:position pos:line="217" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="218" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="219" pos:column="17">read_buf<pos:position pos:line="219" pos:column="25"/></name><argument_list pos:line="219" pos:column="25">(<argument><expr><name pos:line="219" pos:column="26">f<pos:position pos:line="219" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="29">sum<pos:position pos:line="219" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="34">checksum_len<pos:position pos:line="219" pos:column="46"/></name></expr></argument>)<pos:position pos:line="219" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="220" pos:column="10"/></block></then></if>

	<return pos:line="222" pos:column="9">return <expr><name pos:line="222" pos:column="16">file<pos:position pos:line="222" pos:column="20"/></name></expr>;<pos:position pos:line="222" pos:column="21"/></return>
}<pos:position pos:line="223" pos:column="2"/></block></function></unit>

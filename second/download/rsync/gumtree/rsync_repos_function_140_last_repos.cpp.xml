<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_140_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">send_msg_int<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">enum<pos:position pos:line="1" pos:column="23"/></name> <name pos:line="1" pos:column="24">msgcode<pos:position pos:line="1" pos:column="31"/></name></name></type> <name pos:line="1" pos:column="32">code<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">num<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">numbuf<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">4<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">DEBUG_GTE<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">IO<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">rprintf<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">FINFO<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"[%s] send_msg_int(%d, %d)\n"<pos:position pos:line="6" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="63">who_am_i<pos:position pos:line="6" pos:column="71"/></name><argument_list pos:line="6" pos:column="71">()<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="6" pos:column="75">(<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="76">int<pos:position pos:line="6" pos:column="79"/></name><operator pos:line="6" pos:column="79">)<pos:position pos:line="6" pos:column="80"/></operator><name pos:line="6" pos:column="80">code<pos:position pos:line="6" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="86">num<pos:position pos:line="6" pos:column="89"/></name></expr></argument>)<pos:position pos:line="6" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="91"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">SIVAL<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">numbuf<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="26">num<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">send_msg<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">code<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">numbuf<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="32">4<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator><literal type="number" pos:line="9" pos:column="36">1<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_242_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">see_deflate_token<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int32<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">len<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifndef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifndef<pos:position pos:line="3" pos:column="8"/></cpp:directive> <name pos:line="3" pos:column="9">EXTERNAL_ZLIB<pos:position pos:line="3" pos:column="22"/></name></cpp:ifndef>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">r<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int32<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">blklen<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">hdr<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[<expr><literal type="number" pos:line="6" pos:column="27">5<pos:position pos:line="6" pos:column="28"/></literal></expr>]<pos:position pos:line="6" pos:column="29"/></index></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="8" pos:column="9">rx_strm<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">avail_in<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">blklen<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">hdr<pos:position pos:line="10" pos:column="12"/></name><index pos:line="10" pos:column="12">[<expr><literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr>]<pos:position pos:line="10" pos:column="15"/></index></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
	<do pos:line="11" pos:column="9">do <block pos:line="11" pos:column="12">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">rx_strm<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">.<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">avail_in<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">==<pos:position pos:line="12" pos:column="40"/></operator> <literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal> <operator pos:line="12" pos:column="43">&amp;&amp;<pos:position pos:line="12" pos:column="53"/></operator> <name pos:line="12" pos:column="46">len<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">!=<pos:position pos:line="12" pos:column="52"/></operator> <literal type="number" pos:line="12" pos:column="53">0<pos:position pos:line="12" pos:column="54"/></literal></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55"> <block pos:line="12" pos:column="56">{
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name pos:line="13" pos:column="29">blklen<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <block pos:line="13" pos:column="42">{
				<comment type="block" pos:line="14" pos:column="33">/* Give it a fake stored-block header. */</comment>
				<expr_stmt><expr><name><name pos:line="15" pos:column="33">rx_strm<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">.<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">next_in<pos:position pos:line="15" pos:column="48"/></name></name> <operator pos:line="15" pos:column="49">=<pos:position pos:line="15" pos:column="50"/></operator> <operator pos:line="15" pos:column="51">(<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="52">Bytef<pos:position pos:line="15" pos:column="57"/></name> <operator pos:line="15" pos:column="58">*<pos:position pos:line="15" pos:column="59"/></operator><operator pos:line="15" pos:column="59">)<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">hdr<pos:position pos:line="15" pos:column="63"/></name></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="16" pos:column="33">rx_strm<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">.<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">avail_in<pos:position pos:line="16" pos:column="49"/></name></name> <operator pos:line="16" pos:column="50">=<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="52">5<pos:position pos:line="16" pos:column="53"/></literal></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name pos:line="17" pos:column="33">blklen<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">=<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="42">len<pos:position pos:line="17" pos:column="45"/></name></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
				<if pos:line="18" pos:column="33">if <condition pos:line="18" pos:column="36">(<expr><name pos:line="18" pos:column="37">blklen<pos:position pos:line="18" pos:column="43"/></name> <operator pos:line="18" pos:column="44">&gt;<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="46">0xffff<pos:position pos:line="18" pos:column="52"/></literal></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53">
					<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="41">blklen<pos:position pos:line="19" pos:column="47"/></name> <operator pos:line="19" pos:column="48">=<pos:position pos:line="19" pos:column="49"/></operator> <literal type="number" pos:line="19" pos:column="50">0xffff<pos:position pos:line="19" pos:column="56"/></literal></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="20" pos:column="33">hdr<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><literal type="number" pos:line="20" pos:column="37">1<pos:position pos:line="20" pos:column="38"/></literal></expr>]<pos:position pos:line="20" pos:column="39"/></index></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="42">blklen<pos:position pos:line="20" pos:column="48"/></name></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="21" pos:column="33">hdr<pos:position pos:line="21" pos:column="36"/></name><index pos:line="21" pos:column="36">[<expr><literal type="number" pos:line="21" pos:column="37">2<pos:position pos:line="21" pos:column="38"/></literal></expr>]<pos:position pos:line="21" pos:column="39"/></index></name> <operator pos:line="21" pos:column="40">=<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="42">blklen<pos:position pos:line="21" pos:column="48"/></name> <operator pos:line="21" pos:column="49">&gt;&gt;<pos:position pos:line="21" pos:column="54"/></operator> <literal type="number" pos:line="21" pos:column="52">8<pos:position pos:line="21" pos:column="53"/></literal></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="22" pos:column="33">hdr<pos:position pos:line="22" pos:column="36"/></name><index pos:line="22" pos:column="36">[<expr><literal type="number" pos:line="22" pos:column="37">3<pos:position pos:line="22" pos:column="38"/></literal></expr>]<pos:position pos:line="22" pos:column="39"/></index></name> <operator pos:line="22" pos:column="40">=<pos:position pos:line="22" pos:column="41"/></operator> <operator pos:line="22" pos:column="42">~<pos:position pos:line="22" pos:column="43"/></operator><name><name pos:line="22" pos:column="43">hdr<pos:position pos:line="22" pos:column="46"/></name><index pos:line="22" pos:column="46">[<expr><literal type="number" pos:line="22" pos:column="47">1<pos:position pos:line="22" pos:column="48"/></literal></expr>]<pos:position pos:line="22" pos:column="49"/></index></name></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="23" pos:column="33">hdr<pos:position pos:line="23" pos:column="36"/></name><index pos:line="23" pos:column="36">[<expr><literal type="number" pos:line="23" pos:column="37">4<pos:position pos:line="23" pos:column="38"/></literal></expr>]<pos:position pos:line="23" pos:column="39"/></index></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <operator pos:line="23" pos:column="42">~<pos:position pos:line="23" pos:column="43"/></operator><name><name pos:line="23" pos:column="43">hdr<pos:position pos:line="23" pos:column="46"/></name><index pos:line="23" pos:column="46">[<expr><literal type="number" pos:line="23" pos:column="47">2<pos:position pos:line="23" pos:column="48"/></literal></expr>]<pos:position pos:line="23" pos:column="49"/></index></name></expr>;<pos:position pos:line="23" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="24" pos:column="26"/></block></then> <else pos:line="24" pos:column="27">else <block pos:line="24" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="25" pos:column="33">rx_strm<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">.<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">next_in<pos:position pos:line="25" pos:column="48"/></name></name> <operator pos:line="25" pos:column="49">=<pos:position pos:line="25" pos:column="50"/></operator> <operator pos:line="25" pos:column="51">(<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">Bytef<pos:position pos:line="25" pos:column="57"/></name> <operator pos:line="25" pos:column="58">*<pos:position pos:line="25" pos:column="59"/></operator><operator pos:line="25" pos:column="59">)<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">buf<pos:position pos:line="25" pos:column="63"/></name></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="26" pos:column="33">rx_strm<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">.<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">avail_in<pos:position pos:line="26" pos:column="49"/></name></name> <operator pos:line="26" pos:column="50">=<pos:position pos:line="26" pos:column="51"/></operator> <name pos:line="26" pos:column="52">blklen<pos:position pos:line="26" pos:column="58"/></name></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
				<if pos:line="27" pos:column="33">if <condition pos:line="27" pos:column="36">(<expr><name pos:line="27" pos:column="37">protocol_version<pos:position pos:line="27" pos:column="53"/></name> <operator pos:line="27" pos:column="54">&gt;=<pos:position pos:line="27" pos:column="59"/></operator> <literal type="number" pos:line="27" pos:column="57">31<pos:position pos:line="27" pos:column="59"/></literal></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60"> <comment type="block" pos:line="27" pos:column="61">/* Newer protocols avoid a data-duplicating bug */</comment>
					<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="41">buf<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">+=<pos:position pos:line="28" pos:column="47"/></operator> <name pos:line="28" pos:column="48">blklen<pos:position pos:line="28" pos:column="54"/></name></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="29" pos:column="33">len<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">-=<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="40">blklen<pos:position pos:line="29" pos:column="46"/></name></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="30" pos:column="33">blklen<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">=<pos:position pos:line="30" pos:column="41"/></operator> <literal type="number" pos:line="30" pos:column="42">0<pos:position pos:line="30" pos:column="43"/></literal></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="31" pos:column="26"/></block></else></if>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">rx_strm<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">next_out<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <operator pos:line="33" pos:column="36">(<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">Bytef<pos:position pos:line="33" pos:column="42"/></name> <operator pos:line="33" pos:column="43">*<pos:position pos:line="33" pos:column="44"/></operator><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">dbuf<pos:position pos:line="33" pos:column="49"/></name></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">rx_strm<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">avail_out<pos:position pos:line="34" pos:column="34"/></name></name> <operator pos:line="34" pos:column="35">=<pos:position pos:line="34" pos:column="36"/></operator> <call><name pos:line="34" pos:column="37">AVAIL_OUT_SIZE<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">CHUNK_SIZE<pos:position pos:line="34" pos:column="62"/></name></expr></argument>)<pos:position pos:line="34" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">r<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">inflate<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="30">rx_strm<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">Z_SYNC_FLUSH<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">r<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">!=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">Z_OK<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&amp;&amp;<pos:position pos:line="36" pos:column="41"/></operator> <name pos:line="36" pos:column="34">r<pos:position pos:line="36" pos:column="35"/></name> <operator pos:line="36" pos:column="36">!=<pos:position pos:line="36" pos:column="38"/></operator> <name pos:line="36" pos:column="39">Z_BUF_ERROR<pos:position pos:line="36" pos:column="50"/></name></expr>)<pos:position pos:line="36" pos:column="51"/></condition><then pos:line="36" pos:column="51"> <block pos:line="36" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">rprintf<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">FERROR<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="41">"inflate (token) returned %d\n"<pos:position pos:line="37" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="74">r<pos:position pos:line="37" pos:column="75"/></name></expr></argument>)<pos:position pos:line="37" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">exit_cleanup<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">RERR_STREAMIO<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block> while <condition pos:line="40" pos:column="17">(<expr><name pos:line="40" pos:column="18">len<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">||<pos:position pos:line="40" pos:column="24"/></operator> <name><name pos:line="40" pos:column="25">rx_strm<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">.<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">avail_out<pos:position pos:line="40" pos:column="42"/></name></name> <operator pos:line="40" pos:column="43">==<pos:position pos:line="40" pos:column="45"/></operator> <literal type="number" pos:line="40" pos:column="46">0<pos:position pos:line="40" pos:column="47"/></literal></expr>)<pos:position pos:line="40" pos:column="48"/></condition>;<pos:position pos:line="40" pos:column="49"/></do>
<cpp:else pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">else<pos:position pos:line="41" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="42" pos:column="9">buf<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">++<pos:position pos:line="42" pos:column="14"/></operator></expr>;<pos:position pos:line="42" pos:column="15"/></expr_stmt> <expr_stmt><expr><name pos:line="42" pos:column="16">len<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">++<pos:position pos:line="42" pos:column="21"/></operator></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">rprintf<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">FERROR<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="25">"Impossible error in external-zlib code (2).\n"<pos:position pos:line="43" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">exit_cleanup<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">RERR_STREAMIO<pos:position pos:line="44" pos:column="35"/></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

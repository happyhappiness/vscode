<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_518_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">readlink_stat<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">path<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">STRUCT_STAT<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">stp<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">char<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">linkbuf<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">SUPPORT_LINKS<pos:position pos:line="3" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">link_stat<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">path<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="29">stp<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="34">copy_dirlinks<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call> <operator pos:line="4" pos:column="49">&lt;<pos:position pos:line="4" pos:column="53"/></operator> <literal type="number" pos:line="4" pos:column="51">0<pos:position pos:line="4" pos:column="52"/></literal></expr>)<pos:position pos:line="4" pos:column="53"/></condition><then pos:line="4" pos:column="53">
		<block type="pseudo"><return pos:line="5" pos:column="17">return <expr><operator pos:line="5" pos:column="24">-<pos:position pos:line="5" pos:column="25"/></operator><literal type="number" pos:line="5" pos:column="25">1<pos:position pos:line="5" pos:column="26"/></literal></expr>;<pos:position pos:line="5" pos:column="27"/></return></block></then></if>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">S_ISLNK<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name><name pos:line="6" pos:column="21">stp<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">st_mode<pos:position pos:line="6" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35"> <block pos:line="6" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">llen<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><call><name pos:line="7" pos:column="28">do_readlink<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">path<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">linkbuf<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">MAXPATHLEN<pos:position pos:line="7" pos:column="65"/></name> <operator pos:line="7" pos:column="66">-<pos:position pos:line="7" pos:column="67"/></operator> <literal type="number" pos:line="7" pos:column="68">1<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="71"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">llen<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">&lt;<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
			<block type="pseudo"><return pos:line="9" pos:column="25">return <expr><operator pos:line="9" pos:column="32">-<pos:position pos:line="9" pos:column="33"/></operator><literal type="number" pos:line="9" pos:column="33">1<pos:position pos:line="9" pos:column="34"/></literal></expr>;<pos:position pos:line="9" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">linkbuf<pos:position pos:line="10" pos:column="24"/></name><index pos:line="10" pos:column="24">[<expr><name pos:line="10" pos:column="25">llen<pos:position pos:line="10" pos:column="29"/></name></expr>]<pos:position pos:line="10" pos:column="30"/></index></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <literal type="char" pos:line="10" pos:column="33">'\0'<pos:position pos:line="10" pos:column="37"/></literal></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">copy_unsafe_links<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&amp;&amp;<pos:position pos:line="11" pos:column="49"/></operator> <call><name pos:line="11" pos:column="42">unsafe_symlink<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><name pos:line="11" pos:column="57">linkbuf<pos:position pos:line="11" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="66">path<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="72"/></condition><then pos:line="11" pos:column="72"> <block pos:line="11" pos:column="73">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">INFO_GTE<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">SYMSAFE<pos:position pos:line="12" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="47">1<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <block pos:line="12" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="13" pos:column="33">rprintf<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">FINFO<pos:position pos:line="13" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="13" pos:column="47">"copying unsafe symlink \"%s\" -&gt; \"%s\"\n"<pos:position pos:line="13" pos:column="93"/></literal></expr></argument>,
					<argument><expr><name pos:line="14" pos:column="41">path<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">linkbuf<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
			}<pos:position pos:line="15" pos:column="26"/></block></then></if>
			<return pos:line="16" pos:column="25">return <expr><call><name pos:line="16" pos:column="32">x_stat<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">path<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">stp<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">NULL<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></return>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">munge_symlinks<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">&amp;&amp;<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="39">am_sender<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">&amp;&amp;<pos:position pos:line="18" pos:column="59"/></operator> <name pos:line="18" pos:column="52">llen<pos:position pos:line="18" pos:column="56"/></name> <operator pos:line="18" pos:column="57">&gt;<pos:position pos:line="18" pos:column="61"/></operator> <name pos:line="18" pos:column="59">SYMLINK_PREFIX_LEN<pos:position pos:line="18" pos:column="77"/></name>
		 <operator pos:line="19" pos:column="18">&amp;&amp;<pos:position pos:line="19" pos:column="28"/></operator> <call><name pos:line="19" pos:column="21">strncmp<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">linkbuf<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">SYMLINK_PREFIX<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">SYMLINK_PREFIX_LEN<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call> <operator pos:line="19" pos:column="74">==<pos:position pos:line="19" pos:column="76"/></operator> <literal type="number" pos:line="19" pos:column="77">0<pos:position pos:line="19" pos:column="78"/></literal></expr>)<pos:position pos:line="19" pos:column="79"/></condition><then pos:line="19" pos:column="79"> <block pos:line="19" pos:column="80">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">memmove<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">linkbuf<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="42">linkbuf<pos:position pos:line="20" pos:column="49"/></name> <operator pos:line="20" pos:column="50">+<pos:position pos:line="20" pos:column="51"/></operator> <name pos:line="20" pos:column="52">SYMLINK_PREFIX_LEN<pos:position pos:line="20" pos:column="70"/></name></expr></argument>,
				<argument><expr><name pos:line="21" pos:column="33">llen<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">-<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">SYMLINK_PREFIX_LEN<pos:position pos:line="21" pos:column="58"/></name> <operator pos:line="21" pos:column="59">+<pos:position pos:line="21" pos:column="60"/></operator> <literal type="number" pos:line="21" pos:column="61">1<pos:position pos:line="21" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
	<return pos:line="26" pos:column="9">return <expr><call><name pos:line="26" pos:column="16">x_stat<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">path<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">stp<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">NULL<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></return>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

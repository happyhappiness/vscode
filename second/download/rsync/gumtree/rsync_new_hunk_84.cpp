void recv_exclude_list(int f);
void add_cvs_excludes(void);
struct file_list *send_file_list(int f,int recurse,int argc,char *argv[]);
struct file_list *recv_file_list(int f);
int flist_find(struct file_list *flist,struct file_struct *f);
void clean_flist(struct file_list *flist);
int write_total(void);
int read_total(void);
void setup_nonblocking(int f_in,int f_out);
int read_int(int f);
void read_buf(int f,char *buf,int len);
int read_write(int fd_in,int fd_out,int size);
void write_int(int f,int x);
void write_buf(int f,char *buf,int len);
void write_flush(int f);
int do_cmd(char *cmd,char *machine,char *user,char *path,int *f_in,int *f_out);
void do_server_sender(int argc,char *argv[]);
void do_server_recv(int argc,char *argv[]);
int main(int argc,char *argv[]);
void match_sums(int f,struct sum_struct *s,char *buf,off_t len);
void match_report(void);
void recv_generator(char *fname,struct file_list *flist,int i,int f_out);
void sig_int(void);
int recv_files(int f_in,struct file_list *flist,char *local_name);
off_t send_files(struct file_list *flist,int f_out,int f_in);
void generate_files(int f,struct file_list *flist,char *local_name);
int num_waiting(int fd);
char *map_file(int fd,off_t len);
void unmap_file(char *buf,off_t len);
int piped_child(char **command,int *f_in,int *f_out);
void out_of_memory(char *str);
int set_modtime(char *fname,time_t modtime);
int set_blocking(int fd, int set);

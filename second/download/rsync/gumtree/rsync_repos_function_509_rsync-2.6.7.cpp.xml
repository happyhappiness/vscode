<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_509_rsync-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">inet_ntop4<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">unsigned<pos:position pos:line="2" pos:column="26"/></name> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">src<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">dst<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">size_t<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">size<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <name pos:line="4" pos:column="22">char<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">fmt<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><literal type="string" pos:line="4" pos:column="34">"%u.%u.%u.%u"<pos:position pos:line="4" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <name><name pos:line="5" pos:column="14">tmp<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><sizeof pos:line="5" pos:column="18">sizeof <name><pos:position pos:line="5" pos:column="25"/></name></sizeof></expr></index></name>"255.255.255.255"]<pos:position pos:line="5" pos:column="43"/></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">size_t<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">)<pos:position pos:line="7" pos:column="21"/></operator><call><name pos:line="7" pos:column="21">sprintf<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">tmp<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">fmt<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="39">src<pos:position pos:line="7" pos:column="42"/></name><index pos:line="7" pos:column="42">[<expr><literal type="number" pos:line="7" pos:column="43">0<pos:position pos:line="7" pos:column="44"/></literal></expr>]<pos:position pos:line="7" pos:column="45"/></index></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="47">src<pos:position pos:line="7" pos:column="50"/></name><index pos:line="7" pos:column="50">[<expr><literal type="number" pos:line="7" pos:column="51">1<pos:position pos:line="7" pos:column="52"/></literal></expr>]<pos:position pos:line="7" pos:column="53"/></index></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="55">src<pos:position pos:line="7" pos:column="58"/></name><index pos:line="7" pos:column="58">[<expr><literal type="number" pos:line="7" pos:column="59">2<pos:position pos:line="7" pos:column="60"/></literal></expr>]<pos:position pos:line="7" pos:column="61"/></index></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="63">src<pos:position pos:line="7" pos:column="66"/></name><index pos:line="7" pos:column="66">[<expr><literal type="number" pos:line="7" pos:column="67">3<pos:position pos:line="7" pos:column="68"/></literal></expr>]<pos:position pos:line="7" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call> <operator pos:line="7" pos:column="71">&gt;=<pos:position pos:line="7" pos:column="76"/></operator> <name pos:line="7" pos:column="74">size<pos:position pos:line="7" pos:column="78"/></name></expr>)<pos:position pos:line="7" pos:column="79"/></condition><then pos:line="7" pos:column="79">
	<block pos:line="8" pos:column="9">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">errno<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">ENOSPC<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator></expr>;<pos:position pos:line="10" pos:column="31"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">strcpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">dst<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="21">tmp<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>

	<return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">(<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">dst<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator></expr>;<pos:position pos:line="14" pos:column="22"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

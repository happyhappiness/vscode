<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_904_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">invokeCallbacksPOST<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">poptContext<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">con<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name><name pos:line="1" pos:column="56">struct<pos:position pos:line="1" pos:column="62"/></name> <name pos:line="1" pos:column="63">poptOption<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type> <name pos:line="1" pos:column="76">opt<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
	<comment type="block" pos:line="2" pos:column="9">/*@globals internalState@*/</comment>
	<comment type="block" pos:line="3" pos:column="9">/*@modifies internalState@*/</comment>
<block pos:line="4" pos:column="1">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">opt<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">!=<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
    <block type="pseudo"><for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init pos:line="6" pos:column="10">;<pos:position pos:line="6" pos:column="11"/></init> <condition><expr><name><name pos:line="6" pos:column="12">opt<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">longName<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">||<pos:position pos:line="6" pos:column="28"/></operator> <name><name pos:line="6" pos:column="29">opt<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">shortName<pos:position pos:line="6" pos:column="43"/></name></name> <operator pos:line="6" pos:column="44">||<pos:position pos:line="6" pos:column="46"/></operator> <name><name pos:line="6" pos:column="47">opt<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">-&gt;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="52">arg<pos:position pos:line="6" pos:column="55"/></name></name></expr>;<pos:position pos:line="6" pos:column="56"/></condition> <incr><expr><name pos:line="6" pos:column="57">opt<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">++<pos:position pos:line="6" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="63"/></control> <block pos:line="6" pos:column="64">{
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">opt<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">arg<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">==<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30"> <block type="pseudo"><continue pos:line="7" pos:column="31">continue;<pos:position pos:line="7" pos:column="40"/></continue></block></then></if>		<comment type="block" pos:line="7" pos:column="49">/* XXX program error. */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">opt<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">argInfo<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">&amp;<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="29">POPT_ARG_MASK<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">==<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">POPT_ARG_INCLUDE_TABLE<pos:position pos:line="8" pos:column="69"/></name></expr>)<pos:position pos:line="8" pos:column="70"/></condition><then pos:line="8" pos:column="70"> <block pos:line="8" pos:column="71">{
	    <decl_stmt><decl><type><name pos:line="9" pos:column="13">void<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type> <name pos:line="9" pos:column="20">arg<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name><name pos:line="9" pos:column="26">opt<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">arg<pos:position pos:line="9" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
<comment type="block" pos:line="10" pos:column="1">/*@-branchstate@*/</comment>
	    <comment type="block" pos:line="11" pos:column="13">/* XXX sick hack to preserve pretense of ABI. */</comment>
	    <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name pos:line="12" pos:column="17">arg<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">poptHelpOptions<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="41">arg<pos:position pos:line="12" pos:column="44"/></name> <operator pos:line="12" pos:column="45">=<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="47">poptHelpOptionsI18N<pos:position pos:line="12" pos:column="66"/></name></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt></block></then></if>
<comment type="block" pos:line="13" pos:column="1">/*@=branchstate@*/</comment>
	    <comment type="block" pos:line="14" pos:column="13">/* Recurse on included sub-tables. */</comment>
	    <expr_stmt><expr><call><name pos:line="15" pos:column="13">invokeCallbacksPOST<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">con<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">arg<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><operator pos:line="16" pos:column="20">(<pos:position pos:line="16" pos:column="21"/></operator><name><name pos:line="16" pos:column="21">opt<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">argInfo<pos:position pos:line="16" pos:column="33"/></name></name> <operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="36">POPT_ARG_MASK<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">)<pos:position pos:line="16" pos:column="50"/></operator> <operator pos:line="16" pos:column="51">==<pos:position pos:line="16" pos:column="53"/></operator> <name pos:line="16" pos:column="54">POPT_ARG_CALLBACK<pos:position pos:line="16" pos:column="71"/></name> <operator pos:line="16" pos:column="72">&amp;&amp;<pos:position pos:line="16" pos:column="82"/></operator>
		   <operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><name><name pos:line="17" pos:column="21">opt<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">argInfo<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">&amp;<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="36">POPT_CBFLAG_POST<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54">
	<block pos:line="18" pos:column="9">{   <comment type="block" pos:line="18" pos:column="13">/*@-castfcnptr@*/</comment>
	    <decl_stmt><decl><type><name pos:line="19" pos:column="13">poptCallbackType<pos:position pos:line="19" pos:column="29"/></name></type> <name pos:line="19" pos:column="30">cb<pos:position pos:line="19" pos:column="32"/></name> <init pos:line="19" pos:column="33">= <expr><operator pos:line="19" pos:column="35">(<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">poptCallbackType<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">)<pos:position pos:line="19" pos:column="53"/></operator><name><name pos:line="19" pos:column="53">opt<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">arg<pos:position pos:line="19" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="62"/></decl_stmt>
	    <comment type="block" pos:line="20" pos:column="13">/*@=castfcnptr@*/</comment>
	    <comment type="block" pos:line="21" pos:column="13">/* Perform callback. */</comment>
	    <comment type="block" pos:line="22" pos:column="13">/*@-noeffectuncon @*/</comment>
	    <expr_stmt><expr><call><name pos:line="23" pos:column="13">cb<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">con<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="21">POPT_CALLBACK_REASON_POST<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">NULL<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="54">NULL<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="60">opt<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">-&gt;<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="65">descrip<pos:position pos:line="23" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
	    <comment type="block" pos:line="24" pos:column="13">/*@=noeffectuncon @*/</comment>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="26" pos:column="6"/></block></for></block></then></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

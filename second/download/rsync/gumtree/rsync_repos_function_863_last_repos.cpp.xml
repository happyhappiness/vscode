<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_863_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">sys_lgetxattr<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">path<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">name<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">void<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">value<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="72">size_t<pos:position pos:line="1" pos:column="78"/></name></type> <name pos:line="1" pos:column="79">size<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ssize_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">len<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">getxattr<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><name pos:line="3" pos:column="32">path<pos:position pos:line="3" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="38">name<pos:position pos:line="3" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="44">value<pos:position pos:line="3" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="51">size<pos:position pos:line="3" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="57">0<pos:position pos:line="3" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="60">XATTR_NOFOLLOW<pos:position pos:line="3" pos:column="74"/></name></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="76"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* If we're retrieving data, handle resource forks &gt; 64MB specially */</comment>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">value<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">!=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&amp;&amp;<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="30">len<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <name pos:line="6" pos:column="37">GETXATTR_FETCH_LIMIT<pos:position pos:line="6" pos:column="57"/></name> <operator pos:line="6" pos:column="58">&amp;&amp;<pos:position pos:line="6" pos:column="68"/></operator> <operator pos:line="6" pos:column="61">(<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="62">size_t<pos:position pos:line="6" pos:column="68"/></name><operator pos:line="6" pos:column="68">)<pos:position pos:line="6" pos:column="69"/></operator><name pos:line="6" pos:column="69">len<pos:position pos:line="6" pos:column="72"/></name> <operator pos:line="6" pos:column="73">&lt;<pos:position pos:line="6" pos:column="77"/></operator> <name pos:line="6" pos:column="75">size<pos:position pos:line="6" pos:column="79"/></name></expr>)<pos:position pos:line="6" pos:column="80"/></condition><then pos:line="6" pos:column="80"> <block pos:line="6" pos:column="81">{
		<comment type="block" pos:line="7" pos:column="17">/* getxattr will only return 64MB of data at a time, need to call again with a new offset */</comment>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">u_int32_t<pos:position pos:line="8" pos:column="26"/></name></type> <name pos:line="8" pos:column="27">offset<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">len<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">size_t<pos:position pos:line="9" pos:column="23"/></name></type> <name pos:line="9" pos:column="24">data_retrieved<pos:position pos:line="9" pos:column="38"/></name> <init pos:line="9" pos:column="39">= <expr><name pos:line="9" pos:column="41">len<pos:position pos:line="9" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><name pos:line="10" pos:column="24">data_retrieved<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">&lt;<pos:position pos:line="10" pos:column="43"/></operator> <name pos:line="10" pos:column="41">size<pos:position pos:line="10" pos:column="45"/></name></expr>)<pos:position pos:line="10" pos:column="46"/></condition> <block pos:line="10" pos:column="47">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">len<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">getxattr<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">path<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">name<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">value<pos:position pos:line="11" pos:column="57"/></name> <operator pos:line="11" pos:column="58">+<pos:position pos:line="11" pos:column="59"/></operator> <name pos:line="11" pos:column="60">offset<pos:position pos:line="11" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="68">size<pos:position pos:line="11" pos:column="72"/></name> <operator pos:line="11" pos:column="73">-<pos:position pos:line="11" pos:column="74"/></operator> <name pos:line="11" pos:column="75">data_retrieved<pos:position pos:line="11" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="91">offset<pos:position pos:line="11" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="99">XATTR_NOFOLLOW<pos:position pos:line="11" pos:column="113"/></name></expr></argument>)<pos:position pos:line="11" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="115"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">len<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">&lt;=<pos:position pos:line="12" pos:column="38"/></operator> <literal type="number" pos:line="12" pos:column="36">0<pos:position pos:line="12" pos:column="37"/></literal></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
				<block type="pseudo"><break pos:line="13" pos:column="33">break;<pos:position pos:line="13" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="14" pos:column="25">data_retrieved<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">+=<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">len<pos:position pos:line="14" pos:column="46"/></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">offset<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">+=<pos:position pos:line="15" pos:column="34"/></operator> <operator pos:line="15" pos:column="35">(<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">u_int32_t<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">len<pos:position pos:line="15" pos:column="49"/></name></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></while>
		<expr_stmt><expr><name pos:line="17" pos:column="17">len<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">data_retrieved<pos:position pos:line="17" pos:column="37"/></name></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">len<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

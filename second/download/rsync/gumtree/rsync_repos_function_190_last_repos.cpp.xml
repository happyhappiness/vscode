<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_190_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">io_start_multiplex_in<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">fd<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">msgs2stderr<pos:position pos:line="3" pos:column="24"/></name> <operator pos:line="3" pos:column="25">&amp;&amp;<pos:position pos:line="3" pos:column="35"/></operator> <call><name pos:line="3" pos:column="28">DEBUG_GTE<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><name pos:line="3" pos:column="38">IO<pos:position pos:line="3" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="42">2<pos:position pos:line="3" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="45"/></condition><then pos:line="3" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">rprintf<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">FINFO<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="32">"[%s] io_start_multiplex_in(%d)\n"<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name pos:line="4" pos:column="68">who_am_i<pos:position pos:line="4" pos:column="76"/></name><argument_list pos:line="4" pos:column="76">()<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="4" pos:column="80">fd<pos:position pos:line="4" pos:column="82"/></name></expr></argument>)<pos:position pos:line="4" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="84"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="6" pos:column="9">iobuf<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">in_multiplexed<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="32">1<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt> <comment type="block" pos:line="6" pos:column="35">/* See also IN_MULTIPLEXED */</comment>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">io_start_buffering_in<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">fd<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

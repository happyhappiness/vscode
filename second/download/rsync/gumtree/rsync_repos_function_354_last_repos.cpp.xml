<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_354_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">hard_link_check<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">file_struct<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">file<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">ndx<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">fname<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">statret<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">stat_x<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">sxp<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">itemizing<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="3" pos:column="21">enum<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">logcode<pos:position pos:line="3" pos:column="33"/></name></name></type> <name pos:line="3" pos:column="34">code<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="39"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">STRUCT_STAT<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">prev_st<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">namebuf<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><name pos:line="6" pos:column="22">MAXPATHLEN<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="35">altbuf<pos:position pos:line="6" pos:column="41"/></name><index pos:line="6" pos:column="41">[<expr><name pos:line="6" pos:column="42">MAXPATHLEN<pos:position pos:line="6" pos:column="52"/></name></expr>]<pos:position pos:line="6" pos:column="53"/></index></name></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">realname<pos:position pos:line="7" pos:column="23"/></name></decl>, <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="26">prev_name<pos:position pos:line="7" pos:column="35"/></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">file_list<pos:position pos:line="8" pos:column="25"/></name></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">flist<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">gnum<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><ternary><condition><expr><name pos:line="9" pos:column="20">inc_recurse<pos:position pos:line="9" pos:column="31"/></name></expr> ?<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <expr><call><name pos:line="9" pos:column="34">F_HL_GNUM<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">file<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr> <pos:position pos:line="9" pos:column="50"/></then><else pos:line="9" pos:column="50">: <expr><operator pos:line="9" pos:column="52">-<pos:position pos:line="9" pos:column="53"/></operator><literal type="number" pos:line="9" pos:column="53">1<pos:position pos:line="9" pos:column="54"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">prev_ndx<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">prev_name<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">realname<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">check_prior<pos:position pos:line="12" pos:column="43"/></name><argument_list pos:line="12" pos:column="43">(<argument><expr><name pos:line="12" pos:column="44">file<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">gnum<pos:position pos:line="12" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="56">&amp;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="57">prev_ndx<pos:position pos:line="12" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="67">&amp;<pos:position pos:line="12" pos:column="72"/></operator><name pos:line="12" pos:column="68">flist<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">prev_name<pos:position pos:line="14" pos:column="23"/></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24"> <block pos:line="14" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="15" pos:column="17">struct<pos:position pos:line="15" pos:column="23"/></name> <name pos:line="15" pos:column="24">file_struct<pos:position pos:line="15" pos:column="35"/></name></name> <modifier pos:line="15" pos:column="36">*<pos:position pos:line="15" pos:column="37"/></modifier></type><name pos:line="15" pos:column="37">prev_file<pos:position pos:line="15" pos:column="46"/></name></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">flist<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28"> <block pos:line="17" pos:column="29">{
			<comment type="block" pos:line="18" pos:column="25">/* The previous file was skipped, so this one is
			 * treated as if it were the first in its group. */</comment>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><call><name pos:line="20" pos:column="29">DEBUG_GTE<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">HLINK<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="46">2<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="49"/></condition><then pos:line="20" pos:column="49"> <block pos:line="20" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="21" pos:column="33">rprintf<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">FINFO<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="48">"hlink for %d (%s,%d): virtual first\n"<pos:position pos:line="21" pos:column="87"/></literal></expr></argument>,
					<argument><expr><name pos:line="22" pos:column="41">ndx<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="46">f_name<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name pos:line="22" pos:column="53">file<pos:position pos:line="22" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="59">NULL<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">gnum<pos:position pos:line="22" pos:column="70"/></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then></if>
			<return pos:line="24" pos:column="25">return <expr><literal type="number" pos:line="24" pos:column="32">0<pos:position pos:line="24" pos:column="33"/></literal></expr>;<pos:position pos:line="24" pos:column="34"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="27" pos:column="17">prev_file<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name><name pos:line="27" pos:column="29">flist<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">files<pos:position pos:line="27" pos:column="41"/></name><index pos:line="27" pos:column="41">[<expr><name pos:line="27" pos:column="42">prev_ndx<pos:position pos:line="27" pos:column="50"/></name> <operator pos:line="27" pos:column="51">-<pos:position pos:line="27" pos:column="52"/></operator> <name><name pos:line="27" pos:column="53">flist<pos:position pos:line="27" pos:column="58"/></name><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><name pos:line="27" pos:column="60">ndx_start<pos:position pos:line="27" pos:column="69"/></name></name></expr>]<pos:position pos:line="27" pos:column="70"/></index></name></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>

		<comment type="block" pos:line="29" pos:column="17">/* Is the previous link not complete yet? */</comment>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><name><name pos:line="30" pos:column="23">prev_file<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">flags<pos:position pos:line="30" pos:column="39"/></name></name> <operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator> <name pos:line="30" pos:column="42">FLAG_HLINK_DONE<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">)<pos:position pos:line="30" pos:column="58"/></operator></expr>)<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59"> <block pos:line="30" pos:column="60">{
			<comment type="block" pos:line="31" pos:column="25">/* Is the previous link being transferred? */</comment>
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><name><name pos:line="32" pos:column="29">prev_file<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">flags<pos:position pos:line="32" pos:column="45"/></name></name> <operator pos:line="32" pos:column="46">&amp;<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="48">FLAG_FILE_SENT<pos:position pos:line="32" pos:column="62"/></name></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63"> <block pos:line="32" pos:column="64">{
				<comment type="block" pos:line="33" pos:column="33">/* Add ourselves to the list of files that will
				 * be updated when the transfer completes, and
				 * mark ourself as waiting for the transfer. */</comment>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">F_HL_PREV<pos:position pos:line="36" pos:column="42"/></name><argument_list pos:line="36" pos:column="42">(<argument><expr><name pos:line="36" pos:column="43">file<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call> <operator pos:line="36" pos:column="49">=<pos:position pos:line="36" pos:column="50"/></operator> <call><name pos:line="36" pos:column="51">F_HL_PREV<pos:position pos:line="36" pos:column="60"/></name><argument_list pos:line="36" pos:column="60">(<argument><expr><name pos:line="36" pos:column="61">prev_file<pos:position pos:line="36" pos:column="70"/></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">F_HL_PREV<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name pos:line="37" pos:column="43">prev_file<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call> <operator pos:line="37" pos:column="54">=<pos:position pos:line="37" pos:column="55"/></operator> <name pos:line="37" pos:column="56">ndx<pos:position pos:line="37" pos:column="59"/></name></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="38" pos:column="33">file<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">flags<pos:position pos:line="38" pos:column="44"/></name></name> <operator pos:line="38" pos:column="45">|=<pos:position pos:line="38" pos:column="47"/></operator> <name pos:line="38" pos:column="48">FLAG_FILE_SENT<pos:position pos:line="38" pos:column="62"/></name></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="39" pos:column="33">cur_flist<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">-&gt;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="44">in_progress<pos:position pos:line="39" pos:column="55"/></name></name><operator pos:line="39" pos:column="55">++<pos:position pos:line="39" pos:column="57"/></operator></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
				<if pos:line="40" pos:column="33">if <condition pos:line="40" pos:column="36">(<expr><call><name pos:line="40" pos:column="37">DEBUG_GTE<pos:position pos:line="40" pos:column="46"/></name><argument_list pos:line="40" pos:column="46">(<argument><expr><name pos:line="40" pos:column="47">HLINK<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="54">2<pos:position pos:line="40" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="57"/></condition><then pos:line="40" pos:column="57"> <block pos:line="40" pos:column="58">{
					<expr_stmt><expr><call><name pos:line="41" pos:column="41">rprintf<pos:position pos:line="41" pos:column="48"/></name><argument_list pos:line="41" pos:column="48">(<argument><expr><name pos:line="41" pos:column="49">FINFO<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="56">"hlink for %d (%s,%d): waiting for %d\n"<pos:position pos:line="41" pos:column="96"/></literal></expr></argument>,
						<argument><expr><name pos:line="42" pos:column="49">ndx<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="54">f_name<pos:position pos:line="42" pos:column="60"/></name><argument_list pos:line="42" pos:column="60">(<argument><expr><name pos:line="42" pos:column="61">file<pos:position pos:line="42" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="67">NULL<pos:position pos:line="42" pos:column="71"/></name></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="74">gnum<pos:position pos:line="42" pos:column="78"/></name></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="80">F_HL_PREV<pos:position pos:line="42" pos:column="89"/></name><argument_list pos:line="42" pos:column="89">(<argument><expr><name pos:line="42" pos:column="90">file<pos:position pos:line="42" pos:column="94"/></name></expr></argument>)<pos:position pos:line="42" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="97"/></expr_stmt>
				}<pos:position pos:line="43" pos:column="34"/></block></then></if>
				<return pos:line="44" pos:column="33">return <expr><literal type="number" pos:line="44" pos:column="40">1<pos:position pos:line="44" pos:column="41"/></literal></expr>;<pos:position pos:line="44" pos:column="42"/></return>
			}<pos:position pos:line="45" pos:column="26"/></block></then></if>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><call><name pos:line="46" pos:column="29">DEBUG_GTE<pos:position pos:line="46" pos:column="38"/></name><argument_list pos:line="46" pos:column="38">(<argument><expr><name pos:line="46" pos:column="39">HLINK<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="46">2<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49"> <block pos:line="46" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="47" pos:column="33">rprintf<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">FINFO<pos:position pos:line="47" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="48">"hlink for %d (%s,%d): looking for a leader\n"<pos:position pos:line="47" pos:column="94"/></literal></expr></argument>,
					<argument><expr><name pos:line="48" pos:column="41">ndx<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="46">f_name<pos:position pos:line="48" pos:column="52"/></name><argument_list pos:line="48" pos:column="52">(<argument><expr><name pos:line="48" pos:column="53">file<pos:position pos:line="48" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">NULL<pos:position pos:line="48" pos:column="63"/></name></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="66">gnum<pos:position pos:line="48" pos:column="70"/></name></expr></argument>)<pos:position pos:line="48" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
			<return pos:line="50" pos:column="25">return <expr><literal type="number" pos:line="50" pos:column="32">0<pos:position pos:line="50" pos:column="33"/></literal></expr>;<pos:position pos:line="50" pos:column="34"/></return>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="53" pos:column="17">/* There is a finished file to link with! */</comment>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><operator pos:line="54" pos:column="21">!<pos:position pos:line="54" pos:column="22"/></operator><operator pos:line="54" pos:column="22">(<pos:position pos:line="54" pos:column="23"/></operator><name><name pos:line="54" pos:column="23">prev_file<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">flags<pos:position pos:line="54" pos:column="39"/></name></name> <operator pos:line="54" pos:column="40">&amp;<pos:position pos:line="54" pos:column="45"/></operator> <name pos:line="54" pos:column="42">FLAG_HLINK_FIRST<pos:position pos:line="54" pos:column="58"/></name><operator pos:line="54" pos:column="58">)<pos:position pos:line="54" pos:column="59"/></operator></expr>)<pos:position pos:line="54" pos:column="60"/></condition><then pos:line="54" pos:column="60"> <block pos:line="54" pos:column="61">{
			<comment type="block" pos:line="55" pos:column="25">/* The previous previous is FIRST when prev is not. */</comment>
			<expr_stmt><expr><name pos:line="56" pos:column="25">prev_name<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">=<pos:position pos:line="56" pos:column="36"/></operator> <name pos:line="56" pos:column="37">realname<pos:position pos:line="56" pos:column="45"/></name> <operator pos:line="56" pos:column="46">=<pos:position pos:line="56" pos:column="47"/></operator> <call><name pos:line="56" pos:column="48">check_prior<pos:position pos:line="56" pos:column="59"/></name><argument_list pos:line="56" pos:column="59">(<argument><expr><name pos:line="56" pos:column="60">prev_file<pos:position pos:line="56" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="71">gnum<pos:position pos:line="56" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="77">&amp;<pos:position pos:line="56" pos:column="82"/></operator><name pos:line="56" pos:column="78">prev_ndx<pos:position pos:line="56" pos:column="86"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="88">&amp;<pos:position pos:line="56" pos:column="93"/></operator><name pos:line="56" pos:column="89">flist<pos:position pos:line="56" pos:column="94"/></name></expr></argument>)<pos:position pos:line="56" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="96"/></expr_stmt>
			<comment type="block" pos:line="57" pos:column="25">/* Update our previous pointer to point to the FIRST. */</comment>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">F_HL_PREV<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">file<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call> <operator pos:line="58" pos:column="41">=<pos:position pos:line="58" pos:column="42"/></operator> <name pos:line="58" pos:column="43">prev_ndx<pos:position pos:line="58" pos:column="51"/></name></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><operator pos:line="61" pos:column="21">!<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">prev_name<pos:position pos:line="61" pos:column="31"/></name></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32"> <block pos:line="61" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="62" pos:column="25">int<pos:position pos:line="62" pos:column="28"/></name></type> <name pos:line="62" pos:column="29">alt_dest<pos:position pos:line="62" pos:column="37"/></name></decl>;<pos:position pos:line="62" pos:column="38"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="64" pos:column="25">assert<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">(<argument><expr><name pos:line="64" pos:column="32">flist<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">!=<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">NULL<pos:position pos:line="64" pos:column="45"/></name></expr></argument>)<pos:position pos:line="64" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="65" pos:column="25">prev_file<pos:position pos:line="65" pos:column="34"/></name> <operator pos:line="65" pos:column="35">=<pos:position pos:line="65" pos:column="36"/></operator> <name><name pos:line="65" pos:column="37">flist<pos:position pos:line="65" pos:column="42"/></name><operator pos:line="65" pos:column="42">-&gt;<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="44">files<pos:position pos:line="65" pos:column="49"/></name><index pos:line="65" pos:column="49">[<expr><name pos:line="65" pos:column="50">prev_ndx<pos:position pos:line="65" pos:column="58"/></name> <operator pos:line="65" pos:column="59">-<pos:position pos:line="65" pos:column="60"/></operator> <name><name pos:line="65" pos:column="61">flist<pos:position pos:line="65" pos:column="66"/></name><operator pos:line="65" pos:column="66">-&gt;<pos:position pos:line="65" pos:column="71"/></operator><name pos:line="65" pos:column="68">ndx_start<pos:position pos:line="65" pos:column="77"/></name></name></expr>]<pos:position pos:line="65" pos:column="78"/></index></name></expr>;<pos:position pos:line="65" pos:column="79"/></expr_stmt>
			<comment type="block" pos:line="66" pos:column="25">/* F_HL_PREV() is alt_dest value when DONE &amp;&amp; FIRST. */</comment>
			<expr_stmt><expr><name pos:line="67" pos:column="25">alt_dest<pos:position pos:line="67" pos:column="33"/></name> <operator pos:line="67" pos:column="34">=<pos:position pos:line="67" pos:column="35"/></operator> <call><name pos:line="67" pos:column="36">F_HL_PREV<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">(<argument><expr><name pos:line="67" pos:column="46">prev_file<pos:position pos:line="67" pos:column="55"/></name></expr></argument>)<pos:position pos:line="67" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="57"/></expr_stmt>
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><call><name pos:line="68" pos:column="29">DEBUG_GTE<pos:position pos:line="68" pos:column="38"/></name><argument_list pos:line="68" pos:column="38">(<argument><expr><name pos:line="68" pos:column="39">HLINK<pos:position pos:line="68" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="46">2<pos:position pos:line="68" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="49"/></condition><then pos:line="68" pos:column="49"> <block pos:line="68" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="69" pos:column="33">rprintf<pos:position pos:line="69" pos:column="40"/></name><argument_list pos:line="69" pos:column="40">(<argument><expr><name pos:line="69" pos:column="41">FINFO<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="48">"hlink for %d (%s,%d): found flist match (alt %d)\n"<pos:position pos:line="69" pos:column="100"/></literal></expr></argument>,
					<argument><expr><name pos:line="70" pos:column="41">ndx<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="46">f_name<pos:position pos:line="70" pos:column="52"/></name><argument_list pos:line="70" pos:column="52">(<argument><expr><name pos:line="70" pos:column="53">file<pos:position pos:line="70" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="59">NULL<pos:position pos:line="70" pos:column="63"/></name></expr></argument>)<pos:position pos:line="70" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="70" pos:column="66">gnum<pos:position pos:line="70" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="72">alt_dest<pos:position pos:line="70" pos:column="80"/></name></expr></argument>)<pos:position pos:line="70" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="71" pos:column="26"/></block></then></if>

			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><name pos:line="73" pos:column="29">alt_dest<pos:position pos:line="73" pos:column="37"/></name> <operator pos:line="73" pos:column="38">&gt;=<pos:position pos:line="73" pos:column="43"/></operator> <literal type="number" pos:line="73" pos:column="41">0<pos:position pos:line="73" pos:column="42"/></literal> <operator pos:line="73" pos:column="43">&amp;&amp;<pos:position pos:line="73" pos:column="53"/></operator> <name pos:line="73" pos:column="46">dry_run<pos:position pos:line="73" pos:column="53"/></name></expr>)<pos:position pos:line="73" pos:column="54"/></condition><then pos:line="73" pos:column="54"> <block pos:line="73" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="74" pos:column="33">pathjoin<pos:position pos:line="74" pos:column="41"/></name><argument_list pos:line="74" pos:column="41">(<argument><expr><name pos:line="74" pos:column="42">namebuf<pos:position pos:line="74" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">MAXPATHLEN<pos:position pos:line="74" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="63">basis_dir<pos:position pos:line="74" pos:column="72"/></name><index pos:line="74" pos:column="72">[<expr><name pos:line="74" pos:column="73">alt_dest<pos:position pos:line="74" pos:column="81"/></name></expr>]<pos:position pos:line="74" pos:column="82"/></index></name></expr></argument>,
					 <argument><expr><call><name pos:line="75" pos:column="42">f_name<pos:position pos:line="75" pos:column="48"/></name><argument_list pos:line="75" pos:column="48">(<argument><expr><name pos:line="75" pos:column="49">prev_file<pos:position pos:line="75" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="60">NULL<pos:position pos:line="75" pos:column="64"/></name></expr></argument>)<pos:position pos:line="75" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><name pos:line="76" pos:column="33">prev_name<pos:position pos:line="76" pos:column="42"/></name> <operator pos:line="76" pos:column="43">=<pos:position pos:line="76" pos:column="44"/></operator> <name pos:line="76" pos:column="45">namebuf<pos:position pos:line="76" pos:column="52"/></name></expr>;<pos:position pos:line="76" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="77" pos:column="33">realname<pos:position pos:line="77" pos:column="41"/></name> <operator pos:line="77" pos:column="42">=<pos:position pos:line="77" pos:column="43"/></operator> <call><name pos:line="77" pos:column="44">f_name<pos:position pos:line="77" pos:column="50"/></name><argument_list pos:line="77" pos:column="50">(<argument><expr><name pos:line="77" pos:column="51">prev_file<pos:position pos:line="77" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="62">altbuf<pos:position pos:line="77" pos:column="68"/></name></expr></argument>)<pos:position pos:line="77" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="78" pos:column="26"/></block></then> <else pos:line="78" pos:column="27">else <block pos:line="78" pos:column="32">{
				<expr_stmt><expr><name pos:line="79" pos:column="33">prev_name<pos:position pos:line="79" pos:column="42"/></name> <operator pos:line="79" pos:column="43">=<pos:position pos:line="79" pos:column="44"/></operator> <call><name pos:line="79" pos:column="45">f_name<pos:position pos:line="79" pos:column="51"/></name><argument_list pos:line="79" pos:column="51">(<argument><expr><name pos:line="79" pos:column="52">prev_file<pos:position pos:line="79" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="63">namebuf<pos:position pos:line="79" pos:column="70"/></name></expr></argument>)<pos:position pos:line="79" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><name pos:line="80" pos:column="33">realname<pos:position pos:line="80" pos:column="41"/></name> <operator pos:line="80" pos:column="42">=<pos:position pos:line="80" pos:column="43"/></operator> <name pos:line="80" pos:column="44">prev_name<pos:position pos:line="80" pos:column="53"/></name></expr>;<pos:position pos:line="80" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="81" pos:column="26"/></block></else></if>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name pos:line="85" pos:column="13">DEBUG_GTE<pos:position pos:line="85" pos:column="22"/></name><argument_list pos:line="85" pos:column="22">(<argument><expr><name pos:line="85" pos:column="23">HLINK<pos:position pos:line="85" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="30">2<pos:position pos:line="85" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="33"/></condition><then pos:line="85" pos:column="33"> <block pos:line="85" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">rprintf<pos:position pos:line="86" pos:column="24"/></name><argument_list pos:line="86" pos:column="24">(<argument><expr><name pos:line="86" pos:column="25">FINFO<pos:position pos:line="86" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="32">"hlink for %d (%s,%d): leader is %d (%s)\n"<pos:position pos:line="86" pos:column="75"/></literal></expr></argument>,
			<argument><expr><name pos:line="87" pos:column="25">ndx<pos:position pos:line="87" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="30">f_name<pos:position pos:line="87" pos:column="36"/></name><argument_list pos:line="87" pos:column="36">(<argument><expr><name pos:line="87" pos:column="37">file<pos:position pos:line="87" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="43">NULL<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">gnum<pos:position pos:line="87" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="56">prev_ndx<pos:position pos:line="87" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="66">prev_name<pos:position pos:line="87" pos:column="75"/></name></expr></argument>)<pos:position pos:line="87" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if>

	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><call><name pos:line="90" pos:column="13">link_stat<pos:position pos:line="90" pos:column="22"/></name><argument_list pos:line="90" pos:column="22">(<argument><expr><name pos:line="90" pos:column="23">prev_name<pos:position pos:line="90" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="34">&amp;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="35">prev_st<pos:position pos:line="90" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="44">0<pos:position pos:line="90" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="46"/></argument_list></call> <operator pos:line="90" pos:column="47">&lt;<pos:position pos:line="90" pos:column="51"/></operator> <literal type="number" pos:line="90" pos:column="49">0<pos:position pos:line="90" pos:column="50"/></literal></expr>)<pos:position pos:line="90" pos:column="51"/></condition><then pos:line="90" pos:column="51"> <block pos:line="90" pos:column="52">{
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><operator pos:line="91" pos:column="21">!<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">dry_run<pos:position pos:line="91" pos:column="29"/></name> <operator pos:line="91" pos:column="30">||<pos:position pos:line="91" pos:column="32"/></operator> <name pos:line="91" pos:column="33">errno<pos:position pos:line="91" pos:column="38"/></name> <operator pos:line="91" pos:column="39">!=<pos:position pos:line="91" pos:column="41"/></operator> <name pos:line="91" pos:column="42">ENOENT<pos:position pos:line="91" pos:column="48"/></name></expr>)<pos:position pos:line="91" pos:column="49"/></condition><then pos:line="91" pos:column="49"> <block pos:line="91" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">rsyserr<pos:position pos:line="92" pos:column="32"/></name><argument_list pos:line="92" pos:column="32">(<argument><expr><name pos:line="92" pos:column="33">FERROR_XFER<pos:position pos:line="92" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">errno<pos:position pos:line="92" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="53">"stat %s failed"<pos:position pos:line="92" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="92" pos:column="71">full_fname<pos:position pos:line="92" pos:column="81"/></name><argument_list pos:line="92" pos:column="81">(<argument><expr><name pos:line="92" pos:column="82">prev_name<pos:position pos:line="92" pos:column="91"/></name></expr></argument>)<pos:position pos:line="92" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="94"/></expr_stmt>
			<return pos:line="93" pos:column="25">return <expr><operator pos:line="93" pos:column="32">-<pos:position pos:line="93" pos:column="33"/></operator><literal type="number" pos:line="93" pos:column="33">1<pos:position pos:line="93" pos:column="34"/></literal></expr>;<pos:position pos:line="93" pos:column="35"/></return>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="95" pos:column="17">/* A new hard-link will get a new dev &amp; inode, so approximate
		 * those values in dry-run mode by zeroing them. */</comment>
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">memset<pos:position pos:line="97" pos:column="23"/></name><argument_list pos:line="97" pos:column="23">(<argument><expr><operator pos:line="97" pos:column="24">&amp;<pos:position pos:line="97" pos:column="29"/></operator><name pos:line="97" pos:column="25">prev_st<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="34">0<pos:position pos:line="97" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="37">sizeof <name pos:line="97" pos:column="44">prev_st<pos:position pos:line="97" pos:column="51"/></name></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">statret<pos:position pos:line="100" pos:column="20"/></name> <operator pos:line="100" pos:column="21">&lt;<pos:position pos:line="100" pos:column="25"/></operator> <literal type="number" pos:line="100" pos:column="23">0<pos:position pos:line="100" pos:column="24"/></literal> <operator pos:line="100" pos:column="25">&amp;&amp;<pos:position pos:line="100" pos:column="35"/></operator> <name><name pos:line="100" pos:column="28">basis_dir<pos:position pos:line="100" pos:column="37"/></name><index pos:line="100" pos:column="37">[<expr><literal type="number" pos:line="100" pos:column="38">0<pos:position pos:line="100" pos:column="39"/></literal></expr>]<pos:position pos:line="100" pos:column="40"/></index></name> <operator pos:line="100" pos:column="41">!=<pos:position pos:line="100" pos:column="43"/></operator> <name pos:line="100" pos:column="44">NULL<pos:position pos:line="100" pos:column="48"/></name></expr>)<pos:position pos:line="100" pos:column="49"/></condition><then pos:line="100" pos:column="49"> <block pos:line="100" pos:column="50">{
		<comment type="block" pos:line="101" pos:column="17">/* If we match an alt-dest item, we don't output this as a change. */</comment>
		<decl_stmt><decl><type><name pos:line="102" pos:column="17">char<pos:position pos:line="102" pos:column="21"/></name></type> <name><name pos:line="102" pos:column="22">cmpbuf<pos:position pos:line="102" pos:column="28"/></name><index pos:line="102" pos:column="28">[<expr><name pos:line="102" pos:column="29">MAXPATHLEN<pos:position pos:line="102" pos:column="39"/></name></expr>]<pos:position pos:line="102" pos:column="40"/></index></name></decl>;<pos:position pos:line="102" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">stat_x<pos:position pos:line="103" pos:column="23"/></name></type> <name pos:line="103" pos:column="24">alt_sx<pos:position pos:line="103" pos:column="30"/></name></decl>;<pos:position pos:line="103" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="104" pos:column="17">int<pos:position pos:line="104" pos:column="20"/></name></type> <name pos:line="104" pos:column="21">j<pos:position pos:line="104" pos:column="22"/></name> <init pos:line="104" pos:column="23">= <expr><literal type="number" pos:line="104" pos:column="25">0<pos:position pos:line="104" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="104" pos:column="27"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">init_stat_x<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><operator pos:line="105" pos:column="29">&amp;<pos:position pos:line="105" pos:column="34"/></operator><name pos:line="105" pos:column="30">alt_sx<pos:position pos:line="105" pos:column="36"/></name></expr></argument>)<pos:position pos:line="105" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="38"/></expr_stmt>
		<do pos:line="106" pos:column="17">do <block pos:line="106" pos:column="20">{
			<expr_stmt><expr><call><name pos:line="107" pos:column="25">pathjoin<pos:position pos:line="107" pos:column="33"/></name><argument_list pos:line="107" pos:column="33">(<argument><expr><name pos:line="107" pos:column="34">cmpbuf<pos:position pos:line="107" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="42">MAXPATHLEN<pos:position pos:line="107" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="54">basis_dir<pos:position pos:line="107" pos:column="63"/></name><index pos:line="107" pos:column="63">[<expr><name pos:line="107" pos:column="64">j<pos:position pos:line="107" pos:column="65"/></name></expr>]<pos:position pos:line="107" pos:column="66"/></index></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="68">fname<pos:position pos:line="107" pos:column="73"/></name></expr></argument>)<pos:position pos:line="107" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="75"/></expr_stmt>
			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><call><name pos:line="108" pos:column="29">link_stat<pos:position pos:line="108" pos:column="38"/></name><argument_list pos:line="108" pos:column="38">(<argument><expr><name pos:line="108" pos:column="39">cmpbuf<pos:position pos:line="108" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="47">&amp;<pos:position pos:line="108" pos:column="52"/></operator><name><name pos:line="108" pos:column="48">alt_sx<pos:position pos:line="108" pos:column="54"/></name><operator pos:line="108" pos:column="54">.<pos:position pos:line="108" pos:column="55"/></operator><name pos:line="108" pos:column="55">st<pos:position pos:line="108" pos:column="57"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="59">0<pos:position pos:line="108" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="61"/></argument_list></call> <operator pos:line="108" pos:column="62">&lt;<pos:position pos:line="108" pos:column="66"/></operator> <literal type="number" pos:line="108" pos:column="64">0<pos:position pos:line="108" pos:column="65"/></literal></expr>)<pos:position pos:line="108" pos:column="66"/></condition><then pos:line="108" pos:column="66">
				<block type="pseudo"><continue pos:line="109" pos:column="33">continue;<pos:position pos:line="109" pos:column="42"/></continue></block></then></if>
			<if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><name pos:line="110" pos:column="29">link_dest<pos:position pos:line="110" pos:column="38"/></name></expr>)<pos:position pos:line="110" pos:column="39"/></condition><then pos:line="110" pos:column="39"> <block pos:line="110" pos:column="40">{
				<if pos:line="111" pos:column="33">if <condition pos:line="111" pos:column="36">(<expr><name><name pos:line="111" pos:column="37">prev_st<pos:position pos:line="111" pos:column="44"/></name><operator pos:line="111" pos:column="44">.<pos:position pos:line="111" pos:column="45"/></operator><name pos:line="111" pos:column="45">st_dev<pos:position pos:line="111" pos:column="51"/></name></name> <operator pos:line="111" pos:column="52">!=<pos:position pos:line="111" pos:column="54"/></operator> <name><name pos:line="111" pos:column="55">alt_sx<pos:position pos:line="111" pos:column="61"/></name><operator pos:line="111" pos:column="61">.<pos:position pos:line="111" pos:column="62"/></operator><name pos:line="111" pos:column="62">st<pos:position pos:line="111" pos:column="64"/></name><operator pos:line="111" pos:column="64">.<pos:position pos:line="111" pos:column="65"/></operator><name pos:line="111" pos:column="65">st_dev<pos:position pos:line="111" pos:column="71"/></name></name>
				 <operator pos:line="112" pos:column="34">||<pos:position pos:line="112" pos:column="36"/></operator> <name><name pos:line="112" pos:column="37">prev_st<pos:position pos:line="112" pos:column="44"/></name><operator pos:line="112" pos:column="44">.<pos:position pos:line="112" pos:column="45"/></operator><name pos:line="112" pos:column="45">st_ino<pos:position pos:line="112" pos:column="51"/></name></name> <operator pos:line="112" pos:column="52">!=<pos:position pos:line="112" pos:column="54"/></operator> <name><name pos:line="112" pos:column="55">alt_sx<pos:position pos:line="112" pos:column="61"/></name><operator pos:line="112" pos:column="61">.<pos:position pos:line="112" pos:column="62"/></operator><name pos:line="112" pos:column="62">st<pos:position pos:line="112" pos:column="64"/></name><operator pos:line="112" pos:column="64">.<pos:position pos:line="112" pos:column="65"/></operator><name pos:line="112" pos:column="65">st_ino<pos:position pos:line="112" pos:column="71"/></name></name></expr>)<pos:position pos:line="112" pos:column="72"/></condition><then pos:line="112" pos:column="72">
					<block type="pseudo"><continue pos:line="113" pos:column="41">continue;<pos:position pos:line="113" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><name pos:line="114" pos:column="33">statret<pos:position pos:line="114" pos:column="40"/></name> <operator pos:line="114" pos:column="41">=<pos:position pos:line="114" pos:column="42"/></operator> <literal type="number" pos:line="114" pos:column="43">1<pos:position pos:line="114" pos:column="44"/></literal></expr>;<pos:position pos:line="114" pos:column="45"/></expr_stmt>
				<if pos:line="115" pos:column="33">if <condition pos:line="115" pos:column="36">(<expr><name pos:line="115" pos:column="37">stdout_format_has_i<pos:position pos:line="115" pos:column="56"/></name> <operator pos:line="115" pos:column="57">==<pos:position pos:line="115" pos:column="59"/></operator> <literal type="number" pos:line="115" pos:column="60">0<pos:position pos:line="115" pos:column="61"/></literal>
				 <operator pos:line="116" pos:column="34">||<pos:position pos:line="116" pos:column="36"/></operator> <operator pos:line="116" pos:column="37">(<pos:position pos:line="116" pos:column="38"/></operator><operator pos:line="116" pos:column="38">!<pos:position pos:line="116" pos:column="39"/></operator><call><name pos:line="116" pos:column="39">INFO_GTE<pos:position pos:line="116" pos:column="47"/></name><argument_list pos:line="116" pos:column="47">(<argument><expr><name pos:line="116" pos:column="48">NAME<pos:position pos:line="116" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="54">2<pos:position pos:line="116" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="56"/></argument_list></call> <operator pos:line="116" pos:column="57">&amp;&amp;<pos:position pos:line="116" pos:column="67"/></operator> <name pos:line="116" pos:column="60">stdout_format_has_i<pos:position pos:line="116" pos:column="79"/></name> <operator pos:line="116" pos:column="80">&lt;<pos:position pos:line="116" pos:column="84"/></operator> <literal type="number" pos:line="116" pos:column="82">2<pos:position pos:line="116" pos:column="83"/></literal><operator pos:line="116" pos:column="83">)<pos:position pos:line="116" pos:column="84"/></operator></expr>)<pos:position pos:line="116" pos:column="85"/></condition><then pos:line="116" pos:column="85"> <block pos:line="116" pos:column="86">{
					<expr_stmt><expr><name pos:line="117" pos:column="41">itemizing<pos:position pos:line="117" pos:column="50"/></name> <operator pos:line="117" pos:column="51">=<pos:position pos:line="117" pos:column="52"/></operator> <literal type="number" pos:line="117" pos:column="53">0<pos:position pos:line="117" pos:column="54"/></literal></expr>;<pos:position pos:line="117" pos:column="55"/></expr_stmt>
					<expr_stmt><expr><name pos:line="118" pos:column="41">code<pos:position pos:line="118" pos:column="45"/></name> <operator pos:line="118" pos:column="46">=<pos:position pos:line="118" pos:column="47"/></operator> <name pos:line="118" pos:column="48">FNONE<pos:position pos:line="118" pos:column="53"/></name></expr>;<pos:position pos:line="118" pos:column="54"/></expr_stmt>
					<if pos:line="119" pos:column="41">if <condition pos:line="119" pos:column="44">(<expr><call><name pos:line="119" pos:column="45">INFO_GTE<pos:position pos:line="119" pos:column="53"/></name><argument_list pos:line="119" pos:column="53">(<argument><expr><name pos:line="119" pos:column="54">NAME<pos:position pos:line="119" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="60">2<pos:position pos:line="119" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="62"/></argument_list></call> <operator pos:line="119" pos:column="63">&amp;&amp;<pos:position pos:line="119" pos:column="73"/></operator> <name pos:line="119" pos:column="66">maybe_ATTRS_REPORT<pos:position pos:line="119" pos:column="84"/></name></expr>)<pos:position pos:line="119" pos:column="85"/></condition><then pos:line="119" pos:column="85">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="49">rprintf<pos:position pos:line="120" pos:column="56"/></name><argument_list pos:line="120" pos:column="56">(<argument><expr><name pos:line="120" pos:column="57">FCLIENT<pos:position pos:line="120" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="66">"%s is uptodate\n"<pos:position pos:line="120" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="120" pos:column="86">fname<pos:position pos:line="120" pos:column="91"/></name></expr></argument>)<pos:position pos:line="120" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="93"/></expr_stmt></block></then></if>
				}<pos:position pos:line="121" pos:column="34"/></block></then></if>
				<break pos:line="122" pos:column="33">break;<pos:position pos:line="122" pos:column="39"/></break>
			}<pos:position pos:line="123" pos:column="26"/></block></then></if>
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><operator pos:line="124" pos:column="29">!<pos:position pos:line="124" pos:column="30"/></operator><call><name pos:line="124" pos:column="30">unchanged_file<pos:position pos:line="124" pos:column="44"/></name><argument_list pos:line="124" pos:column="44">(<argument><expr><name pos:line="124" pos:column="45">cmpbuf<pos:position pos:line="124" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="53">file<pos:position pos:line="124" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="124" pos:column="59">&amp;<pos:position pos:line="124" pos:column="64"/></operator><name><name pos:line="124" pos:column="60">alt_sx<pos:position pos:line="124" pos:column="66"/></name><operator pos:line="124" pos:column="66">.<pos:position pos:line="124" pos:column="67"/></operator><name pos:line="124" pos:column="67">st<pos:position pos:line="124" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="71"/></condition><then pos:line="124" pos:column="71">
				<block type="pseudo"><continue pos:line="125" pos:column="33">continue;<pos:position pos:line="125" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="126" pos:column="25">statret<pos:position pos:line="126" pos:column="32"/></name> <operator pos:line="126" pos:column="33">=<pos:position pos:line="126" pos:column="34"/></operator> <literal type="number" pos:line="126" pos:column="35">1<pos:position pos:line="126" pos:column="36"/></literal></expr>;<pos:position pos:line="126" pos:column="37"/></expr_stmt>
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><call><name pos:line="127" pos:column="29">unchanged_attrs<pos:position pos:line="127" pos:column="44"/></name><argument_list pos:line="127" pos:column="44">(<argument><expr><name pos:line="127" pos:column="45">cmpbuf<pos:position pos:line="127" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="53">file<pos:position pos:line="127" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="127" pos:column="59">&amp;<pos:position pos:line="127" pos:column="64"/></operator><name pos:line="127" pos:column="60">alt_sx<pos:position pos:line="127" pos:column="66"/></name></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="68"/></condition><then pos:line="127" pos:column="68">
				<block type="pseudo"><break pos:line="128" pos:column="33">break;<pos:position pos:line="128" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="129" pos:column="18"/></block> while <condition pos:line="129" pos:column="25">(<expr><name><name pos:line="129" pos:column="26">basis_dir<pos:position pos:line="129" pos:column="35"/></name><index pos:line="129" pos:column="35">[<expr><operator pos:line="129" pos:column="36">++<pos:position pos:line="129" pos:column="38"/></operator><name pos:line="129" pos:column="38">j<pos:position pos:line="129" pos:column="39"/></name></expr>]<pos:position pos:line="129" pos:column="40"/></index></name> <operator pos:line="129" pos:column="41">!=<pos:position pos:line="129" pos:column="43"/></operator> <name pos:line="129" pos:column="44">NULL<pos:position pos:line="129" pos:column="48"/></name></expr>)<pos:position pos:line="129" pos:column="49"/></condition>;<pos:position pos:line="129" pos:column="50"/></do>
		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><name pos:line="130" pos:column="21">statret<pos:position pos:line="130" pos:column="28"/></name> <operator pos:line="130" pos:column="29">==<pos:position pos:line="130" pos:column="31"/></operator> <literal type="number" pos:line="130" pos:column="32">1<pos:position pos:line="130" pos:column="33"/></literal></expr>)<pos:position pos:line="130" pos:column="34"/></condition><then pos:line="130" pos:column="34"> <block pos:line="130" pos:column="35">{
			<expr_stmt><expr><name><name pos:line="131" pos:column="25">sxp<pos:position pos:line="131" pos:column="28"/></name><operator pos:line="131" pos:column="28">-&gt;<pos:position pos:line="131" pos:column="33"/></operator><name pos:line="131" pos:column="30">st<pos:position pos:line="131" pos:column="32"/></name></name> <operator pos:line="131" pos:column="33">=<pos:position pos:line="131" pos:column="34"/></operator> <name><name pos:line="131" pos:column="35">alt_sx<pos:position pos:line="131" pos:column="41"/></name><operator pos:line="131" pos:column="41">.<pos:position pos:line="131" pos:column="42"/></operator><name pos:line="131" pos:column="42">st<pos:position pos:line="131" pos:column="44"/></name></name></expr>;<pos:position pos:line="131" pos:column="45"/></expr_stmt>
<cpp:ifdef pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">ifdef<pos:position pos:line="132" pos:column="7"/></cpp:directive> <name pos:line="132" pos:column="8">SUPPORT_ACLS<pos:position pos:line="132" pos:column="20"/></name></cpp:ifdef>
			<if pos:line="133" pos:column="25">if <condition pos:line="133" pos:column="28">(<expr><name pos:line="133" pos:column="29">preserve_acls<pos:position pos:line="133" pos:column="42"/></name> <operator pos:line="133" pos:column="43">&amp;&amp;<pos:position pos:line="133" pos:column="53"/></operator> <operator pos:line="133" pos:column="46">!<pos:position pos:line="133" pos:column="47"/></operator><call><name pos:line="133" pos:column="47">S_ISLNK<pos:position pos:line="133" pos:column="54"/></name><argument_list pos:line="133" pos:column="54">(<argument><expr><name><name pos:line="133" pos:column="55">file<pos:position pos:line="133" pos:column="59"/></name><operator pos:line="133" pos:column="59">-&gt;<pos:position pos:line="133" pos:column="64"/></operator><name pos:line="133" pos:column="61">mode<pos:position pos:line="133" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="67"/></condition><then pos:line="133" pos:column="67"> <block pos:line="133" pos:column="68">{
				<expr_stmt><expr><call><name pos:line="134" pos:column="33">free_acl<pos:position pos:line="134" pos:column="41"/></name><argument_list pos:line="134" pos:column="41">(<argument><expr><name pos:line="134" pos:column="42">sxp<pos:position pos:line="134" pos:column="45"/></name></expr></argument>)<pos:position pos:line="134" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="47"/></expr_stmt>
				<if pos:line="135" pos:column="33">if <condition pos:line="135" pos:column="36">(<expr><operator pos:line="135" pos:column="37">!<pos:position pos:line="135" pos:column="38"/></operator><call><name pos:line="135" pos:column="38">ACL_READY<pos:position pos:line="135" pos:column="47"/></name><argument_list pos:line="135" pos:column="47">(<argument><expr><name pos:line="135" pos:column="48">alt_sx<pos:position pos:line="135" pos:column="54"/></name></expr></argument>)<pos:position pos:line="135" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="56"/></condition><then pos:line="135" pos:column="56">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="41">get_acl<pos:position pos:line="136" pos:column="48"/></name><argument_list pos:line="136" pos:column="48">(<argument><expr><name pos:line="136" pos:column="49">cmpbuf<pos:position pos:line="136" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="57">sxp<pos:position pos:line="136" pos:column="60"/></name></expr></argument>)<pos:position pos:line="136" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="62"/></expr_stmt></block></then>
				<else pos:line="137" pos:column="33">else <block pos:line="137" pos:column="38">{
					<expr_stmt><expr><name><name pos:line="138" pos:column="41">sxp<pos:position pos:line="138" pos:column="44"/></name><operator pos:line="138" pos:column="44">-&gt;<pos:position pos:line="138" pos:column="49"/></operator><name pos:line="138" pos:column="46">acc_acl<pos:position pos:line="138" pos:column="53"/></name></name> <operator pos:line="138" pos:column="54">=<pos:position pos:line="138" pos:column="55"/></operator> <name><name pos:line="138" pos:column="56">alt_sx<pos:position pos:line="138" pos:column="62"/></name><operator pos:line="138" pos:column="62">.<pos:position pos:line="138" pos:column="63"/></operator><name pos:line="138" pos:column="63">acc_acl<pos:position pos:line="138" pos:column="70"/></name></name></expr>;<pos:position pos:line="138" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="139" pos:column="41">sxp<pos:position pos:line="139" pos:column="44"/></name><operator pos:line="139" pos:column="44">-&gt;<pos:position pos:line="139" pos:column="49"/></operator><name pos:line="139" pos:column="46">def_acl<pos:position pos:line="139" pos:column="53"/></name></name> <operator pos:line="139" pos:column="54">=<pos:position pos:line="139" pos:column="55"/></operator> <name><name pos:line="139" pos:column="56">alt_sx<pos:position pos:line="139" pos:column="62"/></name><operator pos:line="139" pos:column="62">.<pos:position pos:line="139" pos:column="63"/></operator><name pos:line="139" pos:column="63">def_acl<pos:position pos:line="139" pos:column="70"/></name></name></expr>;<pos:position pos:line="139" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="140" pos:column="41">alt_sx<pos:position pos:line="140" pos:column="47"/></name><operator pos:line="140" pos:column="47">.<pos:position pos:line="140" pos:column="48"/></operator><name pos:line="140" pos:column="48">acc_acl<pos:position pos:line="140" pos:column="55"/></name></name> <operator pos:line="140" pos:column="56">=<pos:position pos:line="140" pos:column="57"/></operator> <name><name pos:line="140" pos:column="58">alt_sx<pos:position pos:line="140" pos:column="64"/></name><operator pos:line="140" pos:column="64">.<pos:position pos:line="140" pos:column="65"/></operator><name pos:line="140" pos:column="65">def_acl<pos:position pos:line="140" pos:column="72"/></name></name> <operator pos:line="140" pos:column="73">=<pos:position pos:line="140" pos:column="74"/></operator> <name pos:line="140" pos:column="75">NULL<pos:position pos:line="140" pos:column="79"/></name></expr>;<pos:position pos:line="140" pos:column="80"/></expr_stmt>
				}<pos:position pos:line="141" pos:column="34"/></block></else></if>
			}<pos:position pos:line="142" pos:column="26"/></block></then></if>
<cpp:endif pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">endif<pos:position pos:line="143" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">ifdef<pos:position pos:line="144" pos:column="7"/></cpp:directive> <name pos:line="144" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="144" pos:column="22"/></name></cpp:ifdef>
			<if pos:line="145" pos:column="25">if <condition pos:line="145" pos:column="28">(<expr><name pos:line="145" pos:column="29">preserve_xattrs<pos:position pos:line="145" pos:column="44"/></name></expr>)<pos:position pos:line="145" pos:column="45"/></condition><then pos:line="145" pos:column="45"> <block pos:line="145" pos:column="46">{
				<expr_stmt><expr><call><name pos:line="146" pos:column="33">free_xattr<pos:position pos:line="146" pos:column="43"/></name><argument_list pos:line="146" pos:column="43">(<argument><expr><name pos:line="146" pos:column="44">sxp<pos:position pos:line="146" pos:column="47"/></name></expr></argument>)<pos:position pos:line="146" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="49"/></expr_stmt>
				<if pos:line="147" pos:column="33">if <condition pos:line="147" pos:column="36">(<expr><operator pos:line="147" pos:column="37">!<pos:position pos:line="147" pos:column="38"/></operator><call><name pos:line="147" pos:column="38">XATTR_READY<pos:position pos:line="147" pos:column="49"/></name><argument_list pos:line="147" pos:column="49">(<argument><expr><name pos:line="147" pos:column="50">alt_sx<pos:position pos:line="147" pos:column="56"/></name></expr></argument>)<pos:position pos:line="147" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="58"/></condition><then pos:line="147" pos:column="58">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="148" pos:column="41">get_xattr<pos:position pos:line="148" pos:column="50"/></name><argument_list pos:line="148" pos:column="50">(<argument><expr><name pos:line="148" pos:column="51">cmpbuf<pos:position pos:line="148" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="59">sxp<pos:position pos:line="148" pos:column="62"/></name></expr></argument>)<pos:position pos:line="148" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="64"/></expr_stmt></block></then>
				<else pos:line="149" pos:column="33">else <block pos:line="149" pos:column="38">{
					<expr_stmt><expr><name><name pos:line="150" pos:column="41">sxp<pos:position pos:line="150" pos:column="44"/></name><operator pos:line="150" pos:column="44">-&gt;<pos:position pos:line="150" pos:column="49"/></operator><name pos:line="150" pos:column="46">xattr<pos:position pos:line="150" pos:column="51"/></name></name> <operator pos:line="150" pos:column="52">=<pos:position pos:line="150" pos:column="53"/></operator> <name><name pos:line="150" pos:column="54">alt_sx<pos:position pos:line="150" pos:column="60"/></name><operator pos:line="150" pos:column="60">.<pos:position pos:line="150" pos:column="61"/></operator><name pos:line="150" pos:column="61">xattr<pos:position pos:line="150" pos:column="66"/></name></name></expr>;<pos:position pos:line="150" pos:column="67"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="151" pos:column="41">alt_sx<pos:position pos:line="151" pos:column="47"/></name><operator pos:line="151" pos:column="47">.<pos:position pos:line="151" pos:column="48"/></operator><name pos:line="151" pos:column="48">xattr<pos:position pos:line="151" pos:column="53"/></name></name> <operator pos:line="151" pos:column="54">=<pos:position pos:line="151" pos:column="55"/></operator> <name pos:line="151" pos:column="56">NULL<pos:position pos:line="151" pos:column="60"/></name></expr>;<pos:position pos:line="151" pos:column="61"/></expr_stmt>
				}<pos:position pos:line="152" pos:column="34"/></block></else></if>
			}<pos:position pos:line="153" pos:column="26"/></block></then></if>
<cpp:endif pos:line="154" pos:column="1">#<cpp:directive pos:line="154" pos:column="2">endif<pos:position pos:line="154" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="155" pos:column="18"/></block></then> <else pos:line="155" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="156" pos:column="25">free_stat_x<pos:position pos:line="156" pos:column="36"/></name><argument_list pos:line="156" pos:column="36">(<argument><expr><operator pos:line="156" pos:column="37">&amp;<pos:position pos:line="156" pos:column="42"/></operator><name pos:line="156" pos:column="38">alt_sx<pos:position pos:line="156" pos:column="44"/></name></expr></argument>)<pos:position pos:line="156" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="46"/></expr_stmt></block></else></if>
	}<pos:position pos:line="157" pos:column="10"/></block></then></if>

	<if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><call><name pos:line="159" pos:column="13">maybe_hard_link<pos:position pos:line="159" pos:column="28"/></name><argument_list pos:line="159" pos:column="28">(<argument><expr><name pos:line="159" pos:column="29">file<pos:position pos:line="159" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="35">ndx<pos:position pos:line="159" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="40">fname<pos:position pos:line="159" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="47">statret<pos:position pos:line="159" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="56">sxp<pos:position pos:line="159" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="61">prev_name<pos:position pos:line="159" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="159" pos:column="72">&amp;<pos:position pos:line="159" pos:column="77"/></operator><name pos:line="159" pos:column="73">prev_st<pos:position pos:line="159" pos:column="80"/></name></expr></argument>,
			    <argument><expr><name pos:line="160" pos:column="29">realname<pos:position pos:line="160" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="39">itemizing<pos:position pos:line="160" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="50">code<pos:position pos:line="160" pos:column="54"/></name></expr></argument>)<pos:position pos:line="160" pos:column="55"/></argument_list></call> <operator pos:line="160" pos:column="56">&lt;<pos:position pos:line="160" pos:column="60"/></operator> <literal type="number" pos:line="160" pos:column="58">0<pos:position pos:line="160" pos:column="59"/></literal></expr>)<pos:position pos:line="160" pos:column="60"/></condition><then pos:line="160" pos:column="60">
		<block type="pseudo"><return pos:line="161" pos:column="17">return <expr><operator pos:line="161" pos:column="24">-<pos:position pos:line="161" pos:column="25"/></operator><literal type="number" pos:line="161" pos:column="25">1<pos:position pos:line="161" pos:column="26"/></literal></expr>;<pos:position pos:line="161" pos:column="27"/></return></block></then></if>

	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name pos:line="163" pos:column="13">remove_source_files<pos:position pos:line="163" pos:column="32"/></name> <operator pos:line="163" pos:column="33">==<pos:position pos:line="163" pos:column="35"/></operator> <literal type="number" pos:line="163" pos:column="36">1<pos:position pos:line="163" pos:column="37"/></literal> <operator pos:line="163" pos:column="38">&amp;&amp;<pos:position pos:line="163" pos:column="48"/></operator> <name pos:line="163" pos:column="41">do_xfers<pos:position pos:line="163" pos:column="49"/></name></expr>)<pos:position pos:line="163" pos:column="50"/></condition><then pos:line="163" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="17">send_msg_int<pos:position pos:line="164" pos:column="29"/></name><argument_list pos:line="164" pos:column="29">(<argument><expr><name pos:line="164" pos:column="30">MSG_SUCCESS<pos:position pos:line="164" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="43">ndx<pos:position pos:line="164" pos:column="46"/></name></expr></argument>)<pos:position pos:line="164" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="48"/></expr_stmt></block></then></if>

	<return pos:line="166" pos:column="9">return <expr><literal type="number" pos:line="166" pos:column="16">1<pos:position pos:line="166" pos:column="17"/></literal></expr>;<pos:position pos:line="166" pos:column="18"/></return>
}<pos:position pos:line="167" pos:column="2"/></block></function></unit>

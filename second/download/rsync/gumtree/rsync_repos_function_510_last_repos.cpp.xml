<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_510_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">default_perms_for_dir<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">dir<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">rsync_acl<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">racl<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">SMB_ACL_T<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">sacl<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">BOOL<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">ok<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">perms<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">dir<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">dir<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <literal type="string" pos:line="9" pos:column="23">"."<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="10" pos:column="9">perms<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">ACCESSPERMS<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator> <operator pos:line="10" pos:column="31">~<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">orig_umask<pos:position pos:line="10" pos:column="42"/></name></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
	<comment type="block" pos:line="11" pos:column="9">/* Read the directory's default ACL.  If it has none, this will successfully return an empty ACL. */</comment>
	<expr_stmt><expr><name pos:line="12" pos:column="9">sacl<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">sys_acl_get_file<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">dir<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">SMB_ACL_TYPE_DEFAULT<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">sacl<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
		<comment type="block" pos:line="14" pos:column="17">/* Couldn't get an ACL.  Darn. */</comment>
		<switch pos:line="15" pos:column="17">switch <condition pos:line="15" pos:column="24">(<expr><name pos:line="15" pos:column="25">errno<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition> <block pos:line="15" pos:column="32">{
		<case pos:line="16" pos:column="17">case <expr><name pos:line="16" pos:column="22">EINVAL<pos:position pos:line="16" pos:column="28"/></name></expr>:<pos:position pos:line="16" pos:column="29"/></case>
			<comment type="block" pos:line="17" pos:column="25">/* If SMB_ACL_TYPE_DEFAULT isn't valid, then the ACLs must be non-POSIX. */</comment>
			<break pos:line="18" pos:column="25">break;<pos:position pos:line="18" pos:column="31"/></break>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">ENOTSUP<pos:position pos:line="19" pos:column="15"/></name></cpp:ifdef>
		<case pos:line="20" pos:column="17">case <expr><name pos:line="20" pos:column="22">ENOTSUP<pos:position pos:line="20" pos:column="29"/></name></expr>:<pos:position pos:line="20" pos:column="30"/></case>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
		<case pos:line="22" pos:column="17">case <expr><name pos:line="22" pos:column="22">ENOSYS<pos:position pos:line="22" pos:column="28"/></name></expr>:<pos:position pos:line="22" pos:column="29"/></case>
			<comment type="block" pos:line="23" pos:column="25">/* No ACLs are available. */</comment>
			<break pos:line="24" pos:column="25">break;<pos:position pos:line="24" pos:column="31"/></break>
		<case pos:line="25" pos:column="17">case <expr><name pos:line="25" pos:column="22">ENOENT<pos:position pos:line="25" pos:column="28"/></name></expr>:<pos:position pos:line="25" pos:column="29"/></case>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">dry_run<pos:position pos:line="26" pos:column="36"/></name></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37"> <block pos:line="26" pos:column="38">{
				<comment type="block" pos:line="27" pos:column="33">/* We're doing a dry run, so the containing directory
				 * wasn't actually created.  Don't worry about it. */</comment>
				<break pos:line="29" pos:column="33">break;<pos:position pos:line="29" pos:column="39"/></break>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="31" pos:column="25">/* Otherwise fall through. */</comment>
		<default pos:line="32" pos:column="17">default:<pos:position pos:line="32" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">rprintf<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">FWARNING<pos:position pos:line="33" pos:column="41"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="34" pos:column="33">"default_perms_for_dir: sys_acl_get_file(%s, %s): %s, falling back on umask\n"<pos:position pos:line="34" pos:column="111"/></literal></expr></argument>,
				<argument><expr><name pos:line="35" pos:column="33">dir<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="38">str_acl_type<pos:position pos:line="35" pos:column="50"/></name><argument_list pos:line="35" pos:column="50">(<argument><expr><name pos:line="35" pos:column="51">SMB_ACL_TYPE_DEFAULT<pos:position pos:line="35" pos:column="71"/></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="74">strerror<pos:position pos:line="35" pos:column="82"/></name><argument_list pos:line="35" pos:column="82">(<argument><expr><name pos:line="35" pos:column="83">errno<pos:position pos:line="35" pos:column="88"/></name></expr></argument>)<pos:position pos:line="35" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="91"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></switch>
		<return pos:line="37" pos:column="17">return <expr><name pos:line="37" pos:column="24">perms<pos:position pos:line="37" pos:column="29"/></name></expr>;<pos:position pos:line="37" pos:column="30"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="40" pos:column="9">/* Convert it. */</comment>
	<expr_stmt><expr><name pos:line="41" pos:column="9">racl<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">empty_rsync_acl<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="42" pos:column="9">ok<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">unpack_smb_acl<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">sacl<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="35">&amp;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="36">racl<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">sys_acl_free_acl<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">sacl<pos:position pos:line="43" pos:column="30"/></name></expr></argument>)<pos:position pos:line="43" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">ok<pos:position pos:line="44" pos:column="16"/></name></expr>)<pos:position pos:line="44" pos:column="17"/></condition><then pos:line="44" pos:column="17"> <block pos:line="44" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">rprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">FWARNING<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"default_perms_for_dir: unpack_smb_acl failed, falling back on umask\n"<pos:position pos:line="45" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="108"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><name pos:line="46" pos:column="24">perms<pos:position pos:line="46" pos:column="29"/></name></expr>;<pos:position pos:line="46" pos:column="30"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="49" pos:column="9">/* Apply the permission-bit entries of the default ACL, if any. */</comment>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">racl<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">user_obj<pos:position pos:line="50" pos:column="26"/></name></name> <operator pos:line="50" pos:column="27">!=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">NO_ENTRY<pos:position pos:line="50" pos:column="38"/></name></expr>)<pos:position pos:line="50" pos:column="39"/></condition><then pos:line="50" pos:column="39"> <block pos:line="50" pos:column="40">{
		<expr_stmt><expr><name pos:line="51" pos:column="17">perms<pos:position pos:line="51" pos:column="22"/></name> <operator pos:line="51" pos:column="23">=<pos:position pos:line="51" pos:column="24"/></operator> <call><name pos:line="51" pos:column="25">rsync_acl_get_perms<pos:position pos:line="51" pos:column="44"/></name><argument_list pos:line="51" pos:column="44">(<argument><expr><operator pos:line="51" pos:column="45">&amp;<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="46">racl<pos:position pos:line="51" pos:column="50"/></name></expr></argument>)<pos:position pos:line="51" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="52"/></expr_stmt>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><call><name pos:line="52" pos:column="21">DEBUG_GTE<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">ACL<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="36">1<pos:position pos:line="52" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="39"/></condition><then pos:line="52" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="25">rprintf<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">FINFO<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="40">"got ACL-based default perms %o for directory %s\n"<pos:position pos:line="53" pos:column="91"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="93">perms<pos:position pos:line="53" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="100">dir<pos:position pos:line="53" pos:column="103"/></name></expr></argument>)<pos:position pos:line="53" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="105"/></expr_stmt></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">rsync_acl_free<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><operator pos:line="56" pos:column="24">&amp;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="25">racl<pos:position pos:line="56" pos:column="29"/></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
	<return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">perms<pos:position pos:line="57" pos:column="21"/></name></expr>;<pos:position pos:line="57" pos:column="22"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

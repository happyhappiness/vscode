<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_55_rsync-2.0.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">readfd<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">fd<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buffer<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">N<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type>  <name pos:line="3" pos:column="14">ret<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">total<pos:position pos:line="4" pos:column="18"/></name><init pos:line="4" pos:column="18">=<expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>  
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">timeval<pos:position pos:line="5" pos:column="23"/></name></name></type> <name pos:line="5" pos:column="24">tv<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">read_buffer_len<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">&lt;<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="31">N<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">read_check<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">buffer_f_in<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt></block></then></if>
	
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name pos:line="10" pos:column="16">total<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&lt;<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="24">N<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition> <block pos:line="10" pos:column="27">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">read_buffer_len<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&gt;<pos:position pos:line="11" pos:column="41"/></operator> <literal type="number" pos:line="11" pos:column="39">0<pos:position pos:line="11" pos:column="40"/></literal> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="44">buffer_f_in<pos:position pos:line="11" pos:column="55"/></name> <operator pos:line="11" pos:column="56">==<pos:position pos:line="11" pos:column="58"/></operator> <name pos:line="11" pos:column="59">fd<pos:position pos:line="11" pos:column="61"/></name></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62"> <block pos:line="11" pos:column="63">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">ret<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">=<pos:position pos:line="12" pos:column="30"/></operator> <call><name pos:line="12" pos:column="31">MIN<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">read_buffer_len<pos:position pos:line="12" pos:column="50"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="51">N<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">total<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">memcpy<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">buffer<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">+<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">total<pos:position pos:line="13" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="45">read_buffer_p<pos:position pos:line="13" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="59">ret<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">read_buffer_p<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">+=<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">ret<pos:position pos:line="14" pos:column="45"/></name></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">read_buffer_len<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">-=<pos:position pos:line="15" pos:column="43"/></operator> <name pos:line="15" pos:column="44">ret<pos:position pos:line="15" pos:column="47"/></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">total<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">+=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">ret<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
			<continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if> 

		<while pos:line="20" pos:column="17">while <condition pos:line="20" pos:column="23">(<expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">ret<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">read<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">fd<pos:position pos:line="20" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="39">buffer<pos:position pos:line="20" pos:column="45"/></name> <operator pos:line="20" pos:column="46">+<pos:position pos:line="20" pos:column="47"/></operator> <name pos:line="20" pos:column="48">total<pos:position pos:line="20" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="54">N<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">-<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="56">total<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call><operator pos:line="20" pos:column="62">)<pos:position pos:line="20" pos:column="63"/></operator> <operator pos:line="20" pos:column="64">==<pos:position pos:line="20" pos:column="66"/></operator> <operator pos:line="20" pos:column="67">-<pos:position pos:line="20" pos:column="68"/></operator><literal type="number" pos:line="20" pos:column="68">1<pos:position pos:line="20" pos:column="69"/></literal></expr>)<pos:position pos:line="20" pos:column="70"/></condition> <block pos:line="20" pos:column="71">{
			<decl_stmt><decl><type><name pos:line="21" pos:column="25">fd_set<pos:position pos:line="21" pos:column="31"/></name></type> <name pos:line="21" pos:column="32">fds<pos:position pos:line="21" pos:column="35"/></name></decl>;<pos:position pos:line="21" pos:column="36"/></decl_stmt>

			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><name pos:line="23" pos:column="29">errno<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">!=<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">EAGAIN<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">&amp;&amp;<pos:position pos:line="23" pos:column="55"/></operator> <name pos:line="23" pos:column="48">errno<pos:position pos:line="23" pos:column="53"/></name> <operator pos:line="23" pos:column="54">!=<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="57">EWOULDBLOCK<pos:position pos:line="23" pos:column="68"/></name></expr>)<pos:position pos:line="23" pos:column="69"/></condition><then pos:line="23" pos:column="69">
				<block type="pseudo"><return pos:line="24" pos:column="33">return <expr><operator pos:line="24" pos:column="40">-<pos:position pos:line="24" pos:column="41"/></operator><literal type="number" pos:line="24" pos:column="41">1<pos:position pos:line="24" pos:column="42"/></literal></expr>;<pos:position pos:line="24" pos:column="43"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">FD_ZERO<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><operator pos:line="25" pos:column="33">&amp;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="34">fds<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">FD_SET<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">fd<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="37">fds<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">tv<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">tv_sec<pos:position pos:line="27" pos:column="34"/></name></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">io_timeout<pos:position pos:line="27" pos:column="47"/></name></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">tv<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">tv_usec<pos:position pos:line="28" pos:column="35"/></name></name> <operator pos:line="28" pos:column="36">=<pos:position pos:line="28" pos:column="37"/></operator> <literal type="number" pos:line="28" pos:column="38">0<pos:position pos:line="28" pos:column="39"/></literal></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>

			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><call><name pos:line="30" pos:column="29">select<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">fd<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">+<pos:position pos:line="30" pos:column="39"/></operator><literal type="number" pos:line="30" pos:column="39">1<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="42">&amp;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="43">fds<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">NULL<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">NULL<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, 
				   <argument><expr><ternary><condition><expr><name pos:line="31" pos:column="36">io_timeout<pos:position pos:line="31" pos:column="46"/></name></expr>?<pos:position pos:line="31" pos:column="47"/></condition><then><expr><operator pos:line="31" pos:column="47">&amp;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="48">tv<pos:position pos:line="31" pos:column="50"/></name></expr></then><else pos:line="31" pos:column="50">:<expr><name pos:line="31" pos:column="51">NULL<pos:position pos:line="31" pos:column="55"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call> <operator pos:line="31" pos:column="57">!=<pos:position pos:line="31" pos:column="59"/></operator> <literal type="number" pos:line="31" pos:column="60">1<pos:position pos:line="31" pos:column="61"/></literal></expr>)<pos:position pos:line="31" pos:column="62"/></condition><then pos:line="31" pos:column="62"> <block pos:line="31" pos:column="63">{
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">check_timeout<pos:position pos:line="32" pos:column="46"/></name><argument_list pos:line="32" pos:column="46">()<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>
		}<pos:position pos:line="34" pos:column="18"/></block></while>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">ret<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">&lt;=<pos:position pos:line="36" pos:column="30"/></operator> <literal type="number" pos:line="36" pos:column="28">0<pos:position pos:line="36" pos:column="29"/></literal></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30">
			<block type="pseudo"><return pos:line="37" pos:column="25">return <expr><name pos:line="37" pos:column="32">total<pos:position pos:line="37" pos:column="37"/></name></expr>;<pos:position pos:line="37" pos:column="38"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">total<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">+=<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">ret<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></while>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">io_timeout<pos:position pos:line="41" pos:column="23"/></name></expr>)<pos:position pos:line="41" pos:column="24"/></condition><then pos:line="41" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">last_io<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <call><name pos:line="42" pos:column="27">time<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">NULL<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt></block></then></if>
	<return pos:line="43" pos:column="9">return <expr><name pos:line="43" pos:column="16">total<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

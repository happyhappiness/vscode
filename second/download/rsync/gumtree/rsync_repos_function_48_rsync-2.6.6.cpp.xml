<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_48_rsync-2.6.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">parse_rule_tok<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">p<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">uint32<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">mflags<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">xflags<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">unsigned<pos:position pos:line="2" pos:column="43"/></name> <name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">len_ptr<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">uint32<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">mflags_ptr<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">uchar<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">s<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier> <name pos:line="4" pos:column="33">uchar<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">p<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">new_mflags<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">len<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">mflags<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&amp;<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="22">MATCHFLG_WORD_SPLIT<pos:position pos:line="8" pos:column="41"/></name></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42"> <block pos:line="8" pos:column="43">{
		<comment type="block" pos:line="9" pos:column="17">/* Skip over any initial whitespace. */</comment>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><call><name pos:line="10" pos:column="24">isspace<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">s<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="36"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">s<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">++<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt></block></while>
		<comment type="block" pos:line="12" pos:column="17">/* Update to point to real start of rule. */</comment>
		<expr_stmt><expr><name pos:line="13" pos:column="17">p<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><specifier pos:line="13" pos:column="22">const<pos:position pos:line="13" pos:column="27"/></specifier> <name pos:line="13" pos:column="28">char<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></operator><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">s<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">s<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">new_mflags<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name pos:line="18" pos:column="22">mflags<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">&amp;<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="31">MATCHFLGS_FROM_CONTAINER<pos:position pos:line="18" pos:column="55"/></name></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* Figure out what kind of a filter rule "s" is pointing at.  Note
	 * that if MATCHFLG_NO_PREFIXES is set, the rule is either an include
	 * or an exclude based on the inheritance of the MATCHFLG_INCLUDE
	 * flag (above).  XFLG_OLD_PREFIXES indicates a compatibility mode
	 * for old include/exclude patterns where just "+ " and "- " are
	 * allowed as optional prefixes.  */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">mflags<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="22">MATCHFLG_NO_PREFIXES<pos:position pos:line="26" pos:column="42"/></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">*<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">s<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">==<pos:position pos:line="27" pos:column="26"/></operator> <literal type="char" pos:line="27" pos:column="27">'!'<pos:position pos:line="27" pos:column="30"/></literal> <operator pos:line="27" pos:column="31">&amp;&amp;<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="34">mflags<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">&amp;<pos:position pos:line="27" pos:column="46"/></operator> <name pos:line="27" pos:column="43">MATCHFLG_CVS_IGNORE<pos:position pos:line="27" pos:column="62"/></name></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">new_mflags<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">|=<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="39">MATCHFLG_CLEAR_LIST<pos:position pos:line="28" pos:column="58"/></name></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt></block></then></if> <comment type="block" pos:line="28" pos:column="60">/* Tentative! */</comment>
	}<pos:position pos:line="29" pos:column="10"/></block></then> <elseif pos:line="29" pos:column="11">else <if pos:line="29" pos:column="16">if <condition pos:line="29" pos:column="19">(<expr><name pos:line="29" pos:column="20">xflags<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">&amp;<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="29">XFLG_OLD_PREFIXES<pos:position pos:line="29" pos:column="46"/></name></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47"> <block pos:line="29" pos:column="48">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">s<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator> <literal type="char" pos:line="30" pos:column="27">'-'<pos:position pos:line="30" pos:column="30"/></literal> <operator pos:line="30" pos:column="31">&amp;&amp;<pos:position pos:line="30" pos:column="41"/></operator> <name><name pos:line="30" pos:column="34">s<pos:position pos:line="30" pos:column="35"/></name><index pos:line="30" pos:column="35">[<expr><literal type="number" pos:line="30" pos:column="36">1<pos:position pos:line="30" pos:column="37"/></literal></expr>]<pos:position pos:line="30" pos:column="38"/></index></name> <operator pos:line="30" pos:column="39">==<pos:position pos:line="30" pos:column="41"/></operator> <literal type="char" pos:line="30" pos:column="42">' '<pos:position pos:line="30" pos:column="45"/></literal></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46"> <block pos:line="30" pos:column="47">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">new_mflags<pos:position pos:line="31" pos:column="35"/></name> <operator pos:line="31" pos:column="36">&amp;=<pos:position pos:line="31" pos:column="42"/></operator> <operator pos:line="31" pos:column="39">~<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="40">MATCHFLG_INCLUDE<pos:position pos:line="31" pos:column="56"/></name></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="32" pos:column="25">s<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">+=<pos:position pos:line="32" pos:column="29"/></operator> <literal type="number" pos:line="32" pos:column="30">2<pos:position pos:line="32" pos:column="31"/></literal></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then> <elseif pos:line="33" pos:column="19">else <if pos:line="33" pos:column="24">if <condition pos:line="33" pos:column="27">(<expr><operator pos:line="33" pos:column="28">*<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="29">s<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">==<pos:position pos:line="33" pos:column="33"/></operator> <literal type="char" pos:line="33" pos:column="34">'+'<pos:position pos:line="33" pos:column="37"/></literal> <operator pos:line="33" pos:column="38">&amp;&amp;<pos:position pos:line="33" pos:column="48"/></operator> <name><name pos:line="33" pos:column="41">s<pos:position pos:line="33" pos:column="42"/></name><index pos:line="33" pos:column="42">[<expr><literal type="number" pos:line="33" pos:column="43">1<pos:position pos:line="33" pos:column="44"/></literal></expr>]<pos:position pos:line="33" pos:column="45"/></index></name> <operator pos:line="33" pos:column="46">==<pos:position pos:line="33" pos:column="48"/></operator> <literal type="char" pos:line="33" pos:column="49">' '<pos:position pos:line="33" pos:column="52"/></literal></expr>)<pos:position pos:line="33" pos:column="53"/></condition><then pos:line="33" pos:column="53"> <block pos:line="33" pos:column="54">{
			<expr_stmt><expr><name pos:line="34" pos:column="25">new_mflags<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">|=<pos:position pos:line="34" pos:column="38"/></operator> <name pos:line="34" pos:column="39">MATCHFLG_INCLUDE<pos:position pos:line="34" pos:column="55"/></name></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="35" pos:column="25">s<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">+=<pos:position pos:line="35" pos:column="29"/></operator> <literal type="number" pos:line="35" pos:column="30">2<pos:position pos:line="35" pos:column="31"/></literal></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if></elseif> <elseif pos:line="36" pos:column="19">else <if pos:line="36" pos:column="24">if <condition pos:line="36" pos:column="27">(<expr><operator pos:line="36" pos:column="28">*<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">s<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">==<pos:position pos:line="36" pos:column="33"/></operator> <literal type="char" pos:line="36" pos:column="34">'!'<pos:position pos:line="36" pos:column="37"/></literal></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">new_mflags<pos:position pos:line="37" pos:column="35"/></name> <operator pos:line="37" pos:column="36">|=<pos:position pos:line="37" pos:column="38"/></operator> <name pos:line="37" pos:column="39">MATCHFLG_CLEAR_LIST<pos:position pos:line="37" pos:column="58"/></name></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="37" pos:column="60">/* Tentative! */</comment>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif> <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">char<pos:position pos:line="39" pos:column="21"/></name></type> <name pos:line="39" pos:column="22">ch<pos:position pos:line="39" pos:column="24"/></name> <init pos:line="39" pos:column="25">= <expr><literal type="number" pos:line="39" pos:column="27">0<pos:position pos:line="39" pos:column="28"/></literal></expr></init></decl>, <modifier pos:line="39" pos:column="30">*<pos:position pos:line="39" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="39" pos:column="31">mods<pos:position pos:line="39" pos:column="35"/></name> <init pos:line="39" pos:column="36">= <expr><literal type="string" pos:line="39" pos:column="38">""<pos:position pos:line="39" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="41"/></decl_stmt>
		<switch pos:line="40" pos:column="17">switch <condition pos:line="40" pos:column="24">(<expr><operator pos:line="40" pos:column="25">*<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">s<pos:position pos:line="40" pos:column="27"/></name></expr>)<pos:position pos:line="40" pos:column="28"/></condition> <block pos:line="40" pos:column="29">{
		<case pos:line="41" pos:column="17">case <expr><literal type="char" pos:line="41" pos:column="22">'c'<pos:position pos:line="41" pos:column="25"/></literal></expr>:<pos:position pos:line="41" pos:column="26"/></case>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">(<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">s<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <call><name pos:line="42" pos:column="34">RULE_STRCMP<pos:position pos:line="42" pos:column="45"/></name><argument_list pos:line="42" pos:column="45">(<argument><expr><name pos:line="42" pos:column="46">s<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="49">"clear"<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call><operator pos:line="42" pos:column="57">)<pos:position pos:line="42" pos:column="58"/></operator> <operator pos:line="42" pos:column="59">!=<pos:position pos:line="42" pos:column="61"/></operator> <name pos:line="42" pos:column="62">NULL<pos:position pos:line="42" pos:column="66"/></name></expr>)<pos:position pos:line="42" pos:column="67"/></condition><then pos:line="42" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="33">ch<pos:position pos:line="43" pos:column="35"/></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <literal type="char" pos:line="43" pos:column="38">'!'<pos:position pos:line="43" pos:column="41"/></literal></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="44" pos:column="25">break;<pos:position pos:line="44" pos:column="31"/></break>
		<case pos:line="45" pos:column="17">case <expr><literal type="char" pos:line="45" pos:column="22">'d'<pos:position pos:line="45" pos:column="25"/></literal></expr>:<pos:position pos:line="45" pos:column="26"/></case>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><operator pos:line="46" pos:column="29">(<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">s<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <call><name pos:line="46" pos:column="34">RULE_STRCMP<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">s<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="49">"dir-merge"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call><operator pos:line="46" pos:column="61">)<pos:position pos:line="46" pos:column="62"/></operator> <operator pos:line="46" pos:column="63">!=<pos:position pos:line="46" pos:column="65"/></operator> <name pos:line="46" pos:column="66">NULL<pos:position pos:line="46" pos:column="70"/></name></expr>)<pos:position pos:line="46" pos:column="71"/></condition><then pos:line="46" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="33">ch<pos:position pos:line="47" pos:column="35"/></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <literal type="char" pos:line="47" pos:column="38">':'<pos:position pos:line="47" pos:column="41"/></literal></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="48" pos:column="25">break;<pos:position pos:line="48" pos:column="31"/></break>
		<case pos:line="49" pos:column="17">case <expr><literal type="char" pos:line="49" pos:column="22">'e'<pos:position pos:line="49" pos:column="25"/></literal></expr>:<pos:position pos:line="49" pos:column="26"/></case>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">(<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">s<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <call><name pos:line="50" pos:column="34">RULE_STRCMP<pos:position pos:line="50" pos:column="45"/></name><argument_list pos:line="50" pos:column="45">(<argument><expr><name pos:line="50" pos:column="46">s<pos:position pos:line="50" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="49">"exclude"<pos:position pos:line="50" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call><operator pos:line="50" pos:column="59">)<pos:position pos:line="50" pos:column="60"/></operator> <operator pos:line="50" pos:column="61">!=<pos:position pos:line="50" pos:column="63"/></operator> <name pos:line="50" pos:column="64">NULL<pos:position pos:line="50" pos:column="68"/></name></expr>)<pos:position pos:line="50" pos:column="69"/></condition><then pos:line="50" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">ch<pos:position pos:line="51" pos:column="35"/></name> <operator pos:line="51" pos:column="36">=<pos:position pos:line="51" pos:column="37"/></operator> <literal type="char" pos:line="51" pos:column="38">'-'<pos:position pos:line="51" pos:column="41"/></literal></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="52" pos:column="25">break;<pos:position pos:line="52" pos:column="31"/></break>
		<case pos:line="53" pos:column="17">case <expr><literal type="char" pos:line="53" pos:column="22">'h'<pos:position pos:line="53" pos:column="25"/></literal></expr>:<pos:position pos:line="53" pos:column="26"/></case>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><operator pos:line="54" pos:column="29">(<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">s<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <call><name pos:line="54" pos:column="34">RULE_STRCMP<pos:position pos:line="54" pos:column="45"/></name><argument_list pos:line="54" pos:column="45">(<argument><expr><name pos:line="54" pos:column="46">s<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="49">"hide"<pos:position pos:line="54" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="56"/></argument_list></call><operator pos:line="54" pos:column="56">)<pos:position pos:line="54" pos:column="57"/></operator> <operator pos:line="54" pos:column="58">!=<pos:position pos:line="54" pos:column="60"/></operator> <name pos:line="54" pos:column="61">NULL<pos:position pos:line="54" pos:column="65"/></name></expr>)<pos:position pos:line="54" pos:column="66"/></condition><then pos:line="54" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="33">ch<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">=<pos:position pos:line="55" pos:column="37"/></operator> <literal type="char" pos:line="55" pos:column="38">'H'<pos:position pos:line="55" pos:column="41"/></literal></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="56" pos:column="25">break;<pos:position pos:line="56" pos:column="31"/></break>
		<case pos:line="57" pos:column="17">case <expr><literal type="char" pos:line="57" pos:column="22">'i'<pos:position pos:line="57" pos:column="25"/></literal></expr>:<pos:position pos:line="57" pos:column="26"/></case>
			<if pos:line="58" pos:column="25">if <condition pos:line="58" pos:column="28">(<expr><operator pos:line="58" pos:column="29">(<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">s<pos:position pos:line="58" pos:column="31"/></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <call><name pos:line="58" pos:column="34">RULE_STRCMP<pos:position pos:line="58" pos:column="45"/></name><argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">s<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="49">"include"<pos:position pos:line="58" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="59"/></argument_list></call><operator pos:line="58" pos:column="59">)<pos:position pos:line="58" pos:column="60"/></operator> <operator pos:line="58" pos:column="61">!=<pos:position pos:line="58" pos:column="63"/></operator> <name pos:line="58" pos:column="64">NULL<pos:position pos:line="58" pos:column="68"/></name></expr>)<pos:position pos:line="58" pos:column="69"/></condition><then pos:line="58" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="33">ch<pos:position pos:line="59" pos:column="35"/></name> <operator pos:line="59" pos:column="36">=<pos:position pos:line="59" pos:column="37"/></operator> <literal type="char" pos:line="59" pos:column="38">'+'<pos:position pos:line="59" pos:column="41"/></literal></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="60" pos:column="25">break;<pos:position pos:line="60" pos:column="31"/></break>
		<case pos:line="61" pos:column="17">case <expr><literal type="char" pos:line="61" pos:column="22">'m'<pos:position pos:line="61" pos:column="25"/></literal></expr>:<pos:position pos:line="61" pos:column="26"/></case>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><operator pos:line="62" pos:column="29">(<pos:position pos:line="62" pos:column="30"/></operator><name pos:line="62" pos:column="30">s<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">=<pos:position pos:line="62" pos:column="33"/></operator> <call><name pos:line="62" pos:column="34">RULE_STRCMP<pos:position pos:line="62" pos:column="45"/></name><argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">s<pos:position pos:line="62" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="49">"merge"<pos:position pos:line="62" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call><operator pos:line="62" pos:column="57">)<pos:position pos:line="62" pos:column="58"/></operator> <operator pos:line="62" pos:column="59">!=<pos:position pos:line="62" pos:column="61"/></operator> <name pos:line="62" pos:column="62">NULL<pos:position pos:line="62" pos:column="66"/></name></expr>)<pos:position pos:line="62" pos:column="67"/></condition><then pos:line="62" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="33">ch<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <literal type="char" pos:line="63" pos:column="38">'.'<pos:position pos:line="63" pos:column="41"/></literal></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="64" pos:column="25">break;<pos:position pos:line="64" pos:column="31"/></break>
		<case pos:line="65" pos:column="17">case <expr><literal type="char" pos:line="65" pos:column="22">'p'<pos:position pos:line="65" pos:column="25"/></literal></expr>:<pos:position pos:line="65" pos:column="26"/></case>
			<if pos:line="66" pos:column="25">if <condition pos:line="66" pos:column="28">(<expr><operator pos:line="66" pos:column="29">(<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">s<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">=<pos:position pos:line="66" pos:column="33"/></operator> <call><name pos:line="66" pos:column="34">RULE_STRCMP<pos:position pos:line="66" pos:column="45"/></name><argument_list pos:line="66" pos:column="45">(<argument><expr><name pos:line="66" pos:column="46">s<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="49">"protect"<pos:position pos:line="66" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call><operator pos:line="66" pos:column="59">)<pos:position pos:line="66" pos:column="60"/></operator> <operator pos:line="66" pos:column="61">!=<pos:position pos:line="66" pos:column="63"/></operator> <name pos:line="66" pos:column="64">NULL<pos:position pos:line="66" pos:column="68"/></name></expr>)<pos:position pos:line="66" pos:column="69"/></condition><then pos:line="66" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="33">ch<pos:position pos:line="67" pos:column="35"/></name> <operator pos:line="67" pos:column="36">=<pos:position pos:line="67" pos:column="37"/></operator> <literal type="char" pos:line="67" pos:column="38">'P'<pos:position pos:line="67" pos:column="41"/></literal></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="68" pos:column="25">break;<pos:position pos:line="68" pos:column="31"/></break>
		<case pos:line="69" pos:column="17">case <expr><literal type="char" pos:line="69" pos:column="22">'r'<pos:position pos:line="69" pos:column="25"/></literal></expr>:<pos:position pos:line="69" pos:column="26"/></case>
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><operator pos:line="70" pos:column="29">(<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="30">s<pos:position pos:line="70" pos:column="31"/></name> <operator pos:line="70" pos:column="32">=<pos:position pos:line="70" pos:column="33"/></operator> <call><name pos:line="70" pos:column="34">RULE_STRCMP<pos:position pos:line="70" pos:column="45"/></name><argument_list pos:line="70" pos:column="45">(<argument><expr><name pos:line="70" pos:column="46">s<pos:position pos:line="70" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="49">"risk"<pos:position pos:line="70" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="56"/></argument_list></call><operator pos:line="70" pos:column="56">)<pos:position pos:line="70" pos:column="57"/></operator> <operator pos:line="70" pos:column="58">!=<pos:position pos:line="70" pos:column="60"/></operator> <name pos:line="70" pos:column="61">NULL<pos:position pos:line="70" pos:column="65"/></name></expr>)<pos:position pos:line="70" pos:column="66"/></condition><then pos:line="70" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="33">ch<pos:position pos:line="71" pos:column="35"/></name> <operator pos:line="71" pos:column="36">=<pos:position pos:line="71" pos:column="37"/></operator> <literal type="char" pos:line="71" pos:column="38">'R'<pos:position pos:line="71" pos:column="41"/></literal></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="72" pos:column="25">break;<pos:position pos:line="72" pos:column="31"/></break>
		<case pos:line="73" pos:column="17">case <expr><literal type="char" pos:line="73" pos:column="22">'s'<pos:position pos:line="73" pos:column="25"/></literal></expr>:<pos:position pos:line="73" pos:column="26"/></case>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><operator pos:line="74" pos:column="29">(<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="30">s<pos:position pos:line="74" pos:column="31"/></name> <operator pos:line="74" pos:column="32">=<pos:position pos:line="74" pos:column="33"/></operator> <call><name pos:line="74" pos:column="34">RULE_STRCMP<pos:position pos:line="74" pos:column="45"/></name><argument_list pos:line="74" pos:column="45">(<argument><expr><name pos:line="74" pos:column="46">s<pos:position pos:line="74" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="49">"show"<pos:position pos:line="74" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call><operator pos:line="74" pos:column="56">)<pos:position pos:line="74" pos:column="57"/></operator> <operator pos:line="74" pos:column="58">!=<pos:position pos:line="74" pos:column="60"/></operator> <name pos:line="74" pos:column="61">NULL<pos:position pos:line="74" pos:column="65"/></name></expr>)<pos:position pos:line="74" pos:column="66"/></condition><then pos:line="74" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="33">ch<pos:position pos:line="75" pos:column="35"/></name> <operator pos:line="75" pos:column="36">=<pos:position pos:line="75" pos:column="37"/></operator> <literal type="char" pos:line="75" pos:column="38">'S'<pos:position pos:line="75" pos:column="41"/></literal></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="76" pos:column="25">break;<pos:position pos:line="76" pos:column="31"/></break>
		<default pos:line="77" pos:column="17">default:<pos:position pos:line="77" pos:column="25"/></default>
			<expr_stmt><expr><name pos:line="78" pos:column="25">ch<pos:position pos:line="78" pos:column="27"/></name> <operator pos:line="78" pos:column="28">=<pos:position pos:line="78" pos:column="29"/></operator> <operator pos:line="78" pos:column="30">*<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="31">s<pos:position pos:line="78" pos:column="32"/></name></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><name><name pos:line="79" pos:column="29">s<pos:position pos:line="79" pos:column="30"/></name><index pos:line="79" pos:column="30">[<expr><literal type="number" pos:line="79" pos:column="31">1<pos:position pos:line="79" pos:column="32"/></literal></expr>]<pos:position pos:line="79" pos:column="33"/></index></name> <operator pos:line="79" pos:column="34">==<pos:position pos:line="79" pos:column="36"/></operator> <literal type="char" pos:line="79" pos:column="37">','<pos:position pos:line="79" pos:column="40"/></literal></expr>)<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="33">s<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">++<pos:position pos:line="80" pos:column="36"/></operator></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt></block></then></if>
			<break pos:line="81" pos:column="25">break;<pos:position pos:line="81" pos:column="31"/></break>
		}<pos:position pos:line="82" pos:column="18"/></block></switch>
		<switch pos:line="83" pos:column="17">switch <condition pos:line="83" pos:column="24">(<expr><name pos:line="83" pos:column="25">ch<pos:position pos:line="83" pos:column="27"/></name></expr>)<pos:position pos:line="83" pos:column="28"/></condition> <block pos:line="83" pos:column="29">{
		<case pos:line="84" pos:column="17">case <expr><literal type="char" pos:line="84" pos:column="22">':'<pos:position pos:line="84" pos:column="25"/></literal></expr>:<pos:position pos:line="84" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="85" pos:column="25">new_mflags<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">|=<pos:position pos:line="85" pos:column="38"/></operator> <name pos:line="85" pos:column="39">MATCHFLG_PERDIR_MERGE<pos:position pos:line="85" pos:column="60"/></name>
				    <operator pos:line="86" pos:column="37">|<pos:position pos:line="86" pos:column="38"/></operator> <name pos:line="86" pos:column="39">MATCHFLG_FINISH_SETUP<pos:position pos:line="86" pos:column="60"/></name></expr>;<pos:position pos:line="86" pos:column="61"/></expr_stmt>
			<comment type="block" pos:line="87" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="88" pos:column="17">case <expr><literal type="char" pos:line="88" pos:column="22">'.'<pos:position pos:line="88" pos:column="25"/></literal></expr>:<pos:position pos:line="88" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="89" pos:column="25">new_mflags<pos:position pos:line="89" pos:column="35"/></name> <operator pos:line="89" pos:column="36">|=<pos:position pos:line="89" pos:column="38"/></operator> <name pos:line="89" pos:column="39">MATCHFLG_MERGE_FILE<pos:position pos:line="89" pos:column="58"/></name></expr>;<pos:position pos:line="89" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="90" pos:column="25">mods<pos:position pos:line="90" pos:column="29"/></name> <operator pos:line="90" pos:column="30">=<pos:position pos:line="90" pos:column="31"/></operator> <name pos:line="90" pos:column="32">MODIFIERS_INCL_EXCL<pos:position pos:line="90" pos:column="51"/></name> <name pos:line="90" pos:column="52">MODIFIERS_MERGE_FILE<pos:position pos:line="90" pos:column="72"/></name></expr>;<pos:position pos:line="90" pos:column="73"/></expr_stmt>
			<break pos:line="91" pos:column="25">break;<pos:position pos:line="91" pos:column="31"/></break>
		<case pos:line="92" pos:column="17">case <expr><literal type="char" pos:line="92" pos:column="22">'+'<pos:position pos:line="92" pos:column="25"/></literal></expr>:<pos:position pos:line="92" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="93" pos:column="25">new_mflags<pos:position pos:line="93" pos:column="35"/></name> <operator pos:line="93" pos:column="36">|=<pos:position pos:line="93" pos:column="38"/></operator> <name pos:line="93" pos:column="39">MATCHFLG_INCLUDE<pos:position pos:line="93" pos:column="55"/></name></expr>;<pos:position pos:line="93" pos:column="56"/></expr_stmt>
			<comment type="block" pos:line="94" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="95" pos:column="17">case <expr><literal type="char" pos:line="95" pos:column="22">'-'<pos:position pos:line="95" pos:column="25"/></literal></expr>:<pos:position pos:line="95" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="96" pos:column="25">mods<pos:position pos:line="96" pos:column="29"/></name> <operator pos:line="96" pos:column="30">=<pos:position pos:line="96" pos:column="31"/></operator> <name pos:line="96" pos:column="32">MODIFIERS_INCL_EXCL<pos:position pos:line="96" pos:column="51"/></name></expr>;<pos:position pos:line="96" pos:column="52"/></expr_stmt>
			<break pos:line="97" pos:column="25">break;<pos:position pos:line="97" pos:column="31"/></break>
		<case pos:line="98" pos:column="17">case <expr><literal type="char" pos:line="98" pos:column="22">'S'<pos:position pos:line="98" pos:column="25"/></literal></expr>:<pos:position pos:line="98" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="99" pos:column="25">new_mflags<pos:position pos:line="99" pos:column="35"/></name> <operator pos:line="99" pos:column="36">|=<pos:position pos:line="99" pos:column="38"/></operator> <name pos:line="99" pos:column="39">MATCHFLG_INCLUDE<pos:position pos:line="99" pos:column="55"/></name></expr>;<pos:position pos:line="99" pos:column="56"/></expr_stmt>
			<comment type="block" pos:line="100" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="101" pos:column="17">case <expr><literal type="char" pos:line="101" pos:column="22">'H'<pos:position pos:line="101" pos:column="25"/></literal></expr>:<pos:position pos:line="101" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="102" pos:column="25">new_mflags<pos:position pos:line="102" pos:column="35"/></name> <operator pos:line="102" pos:column="36">|=<pos:position pos:line="102" pos:column="38"/></operator> <name pos:line="102" pos:column="39">MATCHFLG_SENDER_SIDE<pos:position pos:line="102" pos:column="59"/></name></expr>;<pos:position pos:line="102" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="103" pos:column="25">mods<pos:position pos:line="103" pos:column="29"/></name> <operator pos:line="103" pos:column="30">=<pos:position pos:line="103" pos:column="31"/></operator> <name pos:line="103" pos:column="32">MODIFIERS_HIDE_PROTECT<pos:position pos:line="103" pos:column="54"/></name></expr>;<pos:position pos:line="103" pos:column="55"/></expr_stmt>
			<break pos:line="104" pos:column="25">break;<pos:position pos:line="104" pos:column="31"/></break>
		<case pos:line="105" pos:column="17">case <expr><literal type="char" pos:line="105" pos:column="22">'R'<pos:position pos:line="105" pos:column="25"/></literal></expr>:<pos:position pos:line="105" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="106" pos:column="25">new_mflags<pos:position pos:line="106" pos:column="35"/></name> <operator pos:line="106" pos:column="36">|=<pos:position pos:line="106" pos:column="38"/></operator> <name pos:line="106" pos:column="39">MATCHFLG_INCLUDE<pos:position pos:line="106" pos:column="55"/></name></expr>;<pos:position pos:line="106" pos:column="56"/></expr_stmt>
			<comment type="block" pos:line="107" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="108" pos:column="17">case <expr><literal type="char" pos:line="108" pos:column="22">'P'<pos:position pos:line="108" pos:column="25"/></literal></expr>:<pos:position pos:line="108" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="109" pos:column="25">new_mflags<pos:position pos:line="109" pos:column="35"/></name> <operator pos:line="109" pos:column="36">|=<pos:position pos:line="109" pos:column="38"/></operator> <name pos:line="109" pos:column="39">MATCHFLG_RECEIVER_SIDE<pos:position pos:line="109" pos:column="61"/></name></expr>;<pos:position pos:line="109" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="110" pos:column="25">mods<pos:position pos:line="110" pos:column="29"/></name> <operator pos:line="110" pos:column="30">=<pos:position pos:line="110" pos:column="31"/></operator> <name pos:line="110" pos:column="32">MODIFIERS_HIDE_PROTECT<pos:position pos:line="110" pos:column="54"/></name></expr>;<pos:position pos:line="110" pos:column="55"/></expr_stmt>
			<break pos:line="111" pos:column="25">break;<pos:position pos:line="111" pos:column="31"/></break>
		<case pos:line="112" pos:column="17">case <expr><literal type="char" pos:line="112" pos:column="22">'!'<pos:position pos:line="112" pos:column="25"/></literal></expr>:<pos:position pos:line="112" pos:column="26"/></case>
			<expr_stmt><expr><name pos:line="113" pos:column="25">new_mflags<pos:position pos:line="113" pos:column="35"/></name> <operator pos:line="113" pos:column="36">|=<pos:position pos:line="113" pos:column="38"/></operator> <name pos:line="113" pos:column="39">MATCHFLG_CLEAR_LIST<pos:position pos:line="113" pos:column="58"/></name></expr>;<pos:position pos:line="113" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="114" pos:column="25">mods<pos:position pos:line="114" pos:column="29"/></name> <operator pos:line="114" pos:column="30">=<pos:position pos:line="114" pos:column="31"/></operator> <name pos:line="114" pos:column="32">NULL<pos:position pos:line="114" pos:column="36"/></name></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
			<break pos:line="115" pos:column="25">break;<pos:position pos:line="115" pos:column="31"/></break>
		<default pos:line="116" pos:column="17">default:<pos:position pos:line="116" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="117" pos:column="25">rprintf<pos:position pos:line="117" pos:column="32"/></name><argument_list pos:line="117" pos:column="32">(<argument><expr><name pos:line="117" pos:column="33">FERROR<pos:position pos:line="117" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="41">"Unknown filter rule: `%s'\n"<pos:position pos:line="117" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="72">p<pos:position pos:line="117" pos:column="73"/></name></expr></argument>)<pos:position pos:line="117" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="118" pos:column="25">exit_cleanup<pos:position pos:line="118" pos:column="37"/></name><argument_list pos:line="118" pos:column="37">(<argument><expr><name pos:line="118" pos:column="38">RERR_SYNTAX<pos:position pos:line="118" pos:column="49"/></name></expr></argument>)<pos:position pos:line="118" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="119" pos:column="18"/></block></switch>
		<while pos:line="120" pos:column="17">while <condition pos:line="120" pos:column="23">(<expr><name pos:line="120" pos:column="24">mods<pos:position pos:line="120" pos:column="28"/></name> <operator pos:line="120" pos:column="29">&amp;&amp;<pos:position pos:line="120" pos:column="39"/></operator> <operator pos:line="120" pos:column="32">*<pos:position pos:line="120" pos:column="33"/></operator><operator pos:line="120" pos:column="33">++<pos:position pos:line="120" pos:column="35"/></operator><name pos:line="120" pos:column="35">s<pos:position pos:line="120" pos:column="36"/></name> <operator pos:line="120" pos:column="37">&amp;&amp;<pos:position pos:line="120" pos:column="47"/></operator> <operator pos:line="120" pos:column="40">*<pos:position pos:line="120" pos:column="41"/></operator><name pos:line="120" pos:column="41">s<pos:position pos:line="120" pos:column="42"/></name> <operator pos:line="120" pos:column="43">!=<pos:position pos:line="120" pos:column="45"/></operator> <literal type="char" pos:line="120" pos:column="46">' '<pos:position pos:line="120" pos:column="49"/></literal> <operator pos:line="120" pos:column="50">&amp;&amp;<pos:position pos:line="120" pos:column="60"/></operator> <operator pos:line="120" pos:column="53">*<pos:position pos:line="120" pos:column="54"/></operator><name pos:line="120" pos:column="54">s<pos:position pos:line="120" pos:column="55"/></name> <operator pos:line="120" pos:column="56">!=<pos:position pos:line="120" pos:column="58"/></operator> <literal type="char" pos:line="120" pos:column="59">'_'<pos:position pos:line="120" pos:column="62"/></literal></expr>)<pos:position pos:line="120" pos:column="63"/></condition> <block pos:line="120" pos:column="64">{
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><call><name pos:line="121" pos:column="29">strchr<pos:position pos:line="121" pos:column="35"/></name><argument_list pos:line="121" pos:column="35">(<argument><expr><name pos:line="121" pos:column="36">mods<pos:position pos:line="121" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="42">*<pos:position pos:line="121" pos:column="43"/></operator><name pos:line="121" pos:column="43">s<pos:position pos:line="121" pos:column="44"/></name></expr></argument>)<pos:position pos:line="121" pos:column="45"/></argument_list></call> <operator pos:line="121" pos:column="46">==<pos:position pos:line="121" pos:column="48"/></operator> <name pos:line="121" pos:column="49">NULL<pos:position pos:line="121" pos:column="53"/></name></expr>)<pos:position pos:line="121" pos:column="54"/></condition><then pos:line="121" pos:column="54"> <block pos:line="121" pos:column="55">{
				<if pos:line="122" pos:column="33">if <condition pos:line="122" pos:column="36">(<expr><name pos:line="122" pos:column="37">mflags<pos:position pos:line="122" pos:column="43"/></name> <operator pos:line="122" pos:column="44">&amp;<pos:position pos:line="122" pos:column="49"/></operator> <name pos:line="122" pos:column="46">MATCHFLG_WORD_SPLIT<pos:position pos:line="122" pos:column="65"/></name> <operator pos:line="122" pos:column="66">&amp;&amp;<pos:position pos:line="122" pos:column="76"/></operator> <call><name pos:line="122" pos:column="69">isspace<pos:position pos:line="122" pos:column="76"/></name><argument_list pos:line="122" pos:column="76">(<argument><expr><operator pos:line="122" pos:column="77">*<pos:position pos:line="122" pos:column="78"/></operator><name pos:line="122" pos:column="78">s<pos:position pos:line="122" pos:column="79"/></name></expr></argument>)<pos:position pos:line="122" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="81"/></condition><then pos:line="122" pos:column="81"> <block pos:line="122" pos:column="82">{
					<expr_stmt><expr><name pos:line="123" pos:column="41">s<pos:position pos:line="123" pos:column="42"/></name><operator pos:line="123" pos:column="42">--<pos:position pos:line="123" pos:column="44"/></operator></expr>;<pos:position pos:line="123" pos:column="45"/></expr_stmt>
					<break pos:line="124" pos:column="41">break;<pos:position pos:line="124" pos:column="47"/></break>
				}<pos:position pos:line="125" pos:column="34"/></block></then></if>
			    <label><name pos:line="126" pos:column="29">invalid<pos:position pos:line="126" pos:column="36"/></name>:<pos:position pos:line="126" pos:column="37"/></label>
				<expr_stmt><expr><call><name pos:line="127" pos:column="33">rprintf<pos:position pos:line="127" pos:column="40"/></name><argument_list pos:line="127" pos:column="40">(<argument><expr><name pos:line="127" pos:column="41">FERROR<pos:position pos:line="127" pos:column="47"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="128" pos:column="41">"invalid modifier sequence at '%c' in filter rule: %s\n"<pos:position pos:line="128" pos:column="97"/></literal></expr></argument>,
					<argument><expr><operator pos:line="129" pos:column="41">*<pos:position pos:line="129" pos:column="42"/></operator><name pos:line="129" pos:column="42">s<pos:position pos:line="129" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="45">p<pos:position pos:line="129" pos:column="46"/></name></expr></argument>)<pos:position pos:line="129" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="130" pos:column="33">exit_cleanup<pos:position pos:line="130" pos:column="45"/></name><argument_list pos:line="130" pos:column="45">(<argument><expr><name pos:line="130" pos:column="46">RERR_SYNTAX<pos:position pos:line="130" pos:column="57"/></name></expr></argument>)<pos:position pos:line="130" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="131" pos:column="26"/></block></then></if>
			<switch pos:line="132" pos:column="25">switch <condition pos:line="132" pos:column="32">(<expr><operator pos:line="132" pos:column="33">*<pos:position pos:line="132" pos:column="34"/></operator><name pos:line="132" pos:column="34">s<pos:position pos:line="132" pos:column="35"/></name></expr>)<pos:position pos:line="132" pos:column="36"/></condition> <block pos:line="132" pos:column="37">{
			<case pos:line="133" pos:column="25">case <expr><literal type="char" pos:line="133" pos:column="30">'-'<pos:position pos:line="133" pos:column="33"/></literal></expr>:<pos:position pos:line="133" pos:column="34"/></case>
				<if pos:line="134" pos:column="33">if <condition pos:line="134" pos:column="36">(<expr><name pos:line="134" pos:column="37">new_mflags<pos:position pos:line="134" pos:column="47"/></name> <operator pos:line="134" pos:column="48">&amp;<pos:position pos:line="134" pos:column="53"/></operator> <name pos:line="134" pos:column="50">MATCHFLG_NO_PREFIXES<pos:position pos:line="134" pos:column="70"/></name></expr>)<pos:position pos:line="134" pos:column="71"/></condition><then pos:line="134" pos:column="71">
				    <block type="pseudo"><goto pos:line="135" pos:column="37">goto <name pos:line="135" pos:column="42">invalid<pos:position pos:line="135" pos:column="49"/></name>;<pos:position pos:line="135" pos:column="50"/></goto></block></then></if>
				<expr_stmt><expr><name pos:line="136" pos:column="33">new_mflags<pos:position pos:line="136" pos:column="43"/></name> <operator pos:line="136" pos:column="44">|=<pos:position pos:line="136" pos:column="46"/></operator> <name pos:line="136" pos:column="47">MATCHFLG_NO_PREFIXES<pos:position pos:line="136" pos:column="67"/></name></expr>;<pos:position pos:line="136" pos:column="68"/></expr_stmt>
				<break pos:line="137" pos:column="33">break;<pos:position pos:line="137" pos:column="39"/></break>
			<case pos:line="138" pos:column="25">case <expr><literal type="char" pos:line="138" pos:column="30">'+'<pos:position pos:line="138" pos:column="33"/></literal></expr>:<pos:position pos:line="138" pos:column="34"/></case>
				<if pos:line="139" pos:column="33">if <condition pos:line="139" pos:column="36">(<expr><name pos:line="139" pos:column="37">new_mflags<pos:position pos:line="139" pos:column="47"/></name> <operator pos:line="139" pos:column="48">&amp;<pos:position pos:line="139" pos:column="53"/></operator> <name pos:line="139" pos:column="50">MATCHFLG_NO_PREFIXES<pos:position pos:line="139" pos:column="70"/></name></expr>)<pos:position pos:line="139" pos:column="71"/></condition><then pos:line="139" pos:column="71">
				    <block type="pseudo"><goto pos:line="140" pos:column="37">goto <name pos:line="140" pos:column="42">invalid<pos:position pos:line="140" pos:column="49"/></name>;<pos:position pos:line="140" pos:column="50"/></goto></block></then></if>
				<expr_stmt><expr><name pos:line="141" pos:column="33">new_mflags<pos:position pos:line="141" pos:column="43"/></name> <operator pos:line="141" pos:column="44">|=<pos:position pos:line="141" pos:column="46"/></operator> <name pos:line="141" pos:column="47">MATCHFLG_NO_PREFIXES<pos:position pos:line="141" pos:column="67"/></name>
					    <operator pos:line="142" pos:column="45">|<pos:position pos:line="142" pos:column="46"/></operator> <name pos:line="142" pos:column="47">MATCHFLG_INCLUDE<pos:position pos:line="142" pos:column="63"/></name></expr>;<pos:position pos:line="142" pos:column="64"/></expr_stmt>
				<break pos:line="143" pos:column="33">break;<pos:position pos:line="143" pos:column="39"/></break>
			<case pos:line="144" pos:column="25">case <expr><literal type="char" pos:line="144" pos:column="30">'/'<pos:position pos:line="144" pos:column="33"/></literal></expr>:<pos:position pos:line="144" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="145" pos:column="33">new_mflags<pos:position pos:line="145" pos:column="43"/></name> <operator pos:line="145" pos:column="44">|=<pos:position pos:line="145" pos:column="46"/></operator> <name pos:line="145" pos:column="47">MATCHFLG_ABS_PATH<pos:position pos:line="145" pos:column="64"/></name></expr>;<pos:position pos:line="145" pos:column="65"/></expr_stmt>
				<break pos:line="146" pos:column="33">break;<pos:position pos:line="146" pos:column="39"/></break>
			<case pos:line="147" pos:column="25">case <expr><literal type="char" pos:line="147" pos:column="30">'!'<pos:position pos:line="147" pos:column="33"/></literal></expr>:<pos:position pos:line="147" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="148" pos:column="33">new_mflags<pos:position pos:line="148" pos:column="43"/></name> <operator pos:line="148" pos:column="44">|=<pos:position pos:line="148" pos:column="46"/></operator> <name pos:line="148" pos:column="47">MATCHFLG_NEGATE<pos:position pos:line="148" pos:column="62"/></name></expr>;<pos:position pos:line="148" pos:column="63"/></expr_stmt>
				<break pos:line="149" pos:column="33">break;<pos:position pos:line="149" pos:column="39"/></break>
			<case pos:line="150" pos:column="25">case <expr><literal type="char" pos:line="150" pos:column="30">'C'<pos:position pos:line="150" pos:column="33"/></literal></expr>:<pos:position pos:line="150" pos:column="34"/></case>
				<if pos:line="151" pos:column="33">if <condition pos:line="151" pos:column="36">(<expr><name pos:line="151" pos:column="37">new_mflags<pos:position pos:line="151" pos:column="47"/></name> <operator pos:line="151" pos:column="48">&amp;<pos:position pos:line="151" pos:column="53"/></operator> <name pos:line="151" pos:column="50">MATCHFLG_NO_PREFIXES<pos:position pos:line="151" pos:column="70"/></name></expr>)<pos:position pos:line="151" pos:column="71"/></condition><then pos:line="151" pos:column="71">
				    <block type="pseudo"><goto pos:line="152" pos:column="37">goto <name pos:line="152" pos:column="42">invalid<pos:position pos:line="152" pos:column="49"/></name>;<pos:position pos:line="152" pos:column="50"/></goto></block></then></if>
				<expr_stmt><expr><name pos:line="153" pos:column="33">new_mflags<pos:position pos:line="153" pos:column="43"/></name> <operator pos:line="153" pos:column="44">|=<pos:position pos:line="153" pos:column="46"/></operator> <name pos:line="153" pos:column="47">MATCHFLG_NO_PREFIXES<pos:position pos:line="153" pos:column="67"/></name>
					    <operator pos:line="154" pos:column="45">|<pos:position pos:line="154" pos:column="46"/></operator> <name pos:line="154" pos:column="47">MATCHFLG_WORD_SPLIT<pos:position pos:line="154" pos:column="66"/></name>
					    <operator pos:line="155" pos:column="45">|<pos:position pos:line="155" pos:column="46"/></operator> <name pos:line="155" pos:column="47">MATCHFLG_NO_INHERIT<pos:position pos:line="155" pos:column="66"/></name>
					    <operator pos:line="156" pos:column="45">|<pos:position pos:line="156" pos:column="46"/></operator> <name pos:line="156" pos:column="47">MATCHFLG_CVS_IGNORE<pos:position pos:line="156" pos:column="66"/></name></expr>;<pos:position pos:line="156" pos:column="67"/></expr_stmt>
				<break pos:line="157" pos:column="33">break;<pos:position pos:line="157" pos:column="39"/></break>
			<case pos:line="158" pos:column="25">case <expr><literal type="char" pos:line="158" pos:column="30">'e'<pos:position pos:line="158" pos:column="33"/></literal></expr>:<pos:position pos:line="158" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="159" pos:column="33">new_mflags<pos:position pos:line="159" pos:column="43"/></name> <operator pos:line="159" pos:column="44">|=<pos:position pos:line="159" pos:column="46"/></operator> <name pos:line="159" pos:column="47">MATCHFLG_EXCLUDE_SELF<pos:position pos:line="159" pos:column="68"/></name></expr>;<pos:position pos:line="159" pos:column="69"/></expr_stmt>
				<break pos:line="160" pos:column="33">break;<pos:position pos:line="160" pos:column="39"/></break>
			<case pos:line="161" pos:column="25">case <expr><literal type="char" pos:line="161" pos:column="30">'n'<pos:position pos:line="161" pos:column="33"/></literal></expr>:<pos:position pos:line="161" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="162" pos:column="33">new_mflags<pos:position pos:line="162" pos:column="43"/></name> <operator pos:line="162" pos:column="44">|=<pos:position pos:line="162" pos:column="46"/></operator> <name pos:line="162" pos:column="47">MATCHFLG_NO_INHERIT<pos:position pos:line="162" pos:column="66"/></name></expr>;<pos:position pos:line="162" pos:column="67"/></expr_stmt>
				<break pos:line="163" pos:column="33">break;<pos:position pos:line="163" pos:column="39"/></break>
			<case pos:line="164" pos:column="25">case <expr><literal type="char" pos:line="164" pos:column="30">'r'<pos:position pos:line="164" pos:column="33"/></literal></expr>:<pos:position pos:line="164" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="165" pos:column="33">new_mflags<pos:position pos:line="165" pos:column="43"/></name> <operator pos:line="165" pos:column="44">|=<pos:position pos:line="165" pos:column="46"/></operator> <name pos:line="165" pos:column="47">MATCHFLG_RECEIVER_SIDE<pos:position pos:line="165" pos:column="69"/></name></expr>;<pos:position pos:line="165" pos:column="70"/></expr_stmt>
				<break pos:line="166" pos:column="33">break;<pos:position pos:line="166" pos:column="39"/></break>
			<case pos:line="167" pos:column="25">case <expr><literal type="char" pos:line="167" pos:column="30">'s'<pos:position pos:line="167" pos:column="33"/></literal></expr>:<pos:position pos:line="167" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="168" pos:column="33">new_mflags<pos:position pos:line="168" pos:column="43"/></name> <operator pos:line="168" pos:column="44">|=<pos:position pos:line="168" pos:column="46"/></operator> <name pos:line="168" pos:column="47">MATCHFLG_SENDER_SIDE<pos:position pos:line="168" pos:column="67"/></name></expr>;<pos:position pos:line="168" pos:column="68"/></expr_stmt>
				<break pos:line="169" pos:column="33">break;<pos:position pos:line="169" pos:column="39"/></break>
			<case pos:line="170" pos:column="25">case <expr><literal type="char" pos:line="170" pos:column="30">'w'<pos:position pos:line="170" pos:column="33"/></literal></expr>:<pos:position pos:line="170" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="171" pos:column="33">new_mflags<pos:position pos:line="171" pos:column="43"/></name> <operator pos:line="171" pos:column="44">|=<pos:position pos:line="171" pos:column="46"/></operator> <name pos:line="171" pos:column="47">MATCHFLG_WORD_SPLIT<pos:position pos:line="171" pos:column="66"/></name></expr>;<pos:position pos:line="171" pos:column="67"/></expr_stmt>
				<break pos:line="172" pos:column="33">break;<pos:position pos:line="172" pos:column="39"/></break>
			}<pos:position pos:line="173" pos:column="26"/></block></switch>
		}<pos:position pos:line="174" pos:column="18"/></block></while>
		<if pos:line="175" pos:column="17">if <condition pos:line="175" pos:column="20">(<expr><operator pos:line="175" pos:column="21">*<pos:position pos:line="175" pos:column="22"/></operator><name pos:line="175" pos:column="22">s<pos:position pos:line="175" pos:column="23"/></name></expr>)<pos:position pos:line="175" pos:column="24"/></condition><then pos:line="175" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><name pos:line="176" pos:column="25">s<pos:position pos:line="176" pos:column="26"/></name><operator pos:line="176" pos:column="26">++<pos:position pos:line="176" pos:column="28"/></operator></expr>;<pos:position pos:line="176" pos:column="29"/></expr_stmt></block></then></if>
	}<pos:position pos:line="177" pos:column="10"/></block></else></if>

	<if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">mflags<pos:position pos:line="179" pos:column="19"/></name> <operator pos:line="179" pos:column="20">&amp;<pos:position pos:line="179" pos:column="25"/></operator> <name pos:line="179" pos:column="22">MATCHFLG_WORD_SPLIT<pos:position pos:line="179" pos:column="41"/></name></expr>)<pos:position pos:line="179" pos:column="42"/></condition><then pos:line="179" pos:column="42"> <block pos:line="179" pos:column="43">{
		<decl_stmt><decl><type><specifier pos:line="180" pos:column="17">const<pos:position pos:line="180" pos:column="22"/></specifier> <name pos:line="180" pos:column="23">uchar<pos:position pos:line="180" pos:column="28"/></name> <modifier pos:line="180" pos:column="29">*<pos:position pos:line="180" pos:column="30"/></modifier></type><name pos:line="180" pos:column="30">cp<pos:position pos:line="180" pos:column="32"/></name> <init pos:line="180" pos:column="33">= <expr><name pos:line="180" pos:column="35">s<pos:position pos:line="180" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="180" pos:column="37"/></decl_stmt>
		<comment type="block" pos:line="181" pos:column="17">/* Token ends at whitespace or the end of the string. */</comment>
		<while pos:line="182" pos:column="17">while <condition pos:line="182" pos:column="23">(<expr><operator pos:line="182" pos:column="24">!<pos:position pos:line="182" pos:column="25"/></operator><call><name pos:line="182" pos:column="25">isspace<pos:position pos:line="182" pos:column="32"/></name><argument_list pos:line="182" pos:column="32">(<argument><expr><operator pos:line="182" pos:column="33">*<pos:position pos:line="182" pos:column="34"/></operator><name pos:line="182" pos:column="34">cp<pos:position pos:line="182" pos:column="36"/></name></expr></argument>)<pos:position pos:line="182" pos:column="37"/></argument_list></call> <operator pos:line="182" pos:column="38">&amp;&amp;<pos:position pos:line="182" pos:column="48"/></operator> <operator pos:line="182" pos:column="41">*<pos:position pos:line="182" pos:column="42"/></operator><name pos:line="182" pos:column="42">cp<pos:position pos:line="182" pos:column="44"/></name> <operator pos:line="182" pos:column="45">!=<pos:position pos:line="182" pos:column="47"/></operator> <literal type="char" pos:line="182" pos:column="48">'\0'<pos:position pos:line="182" pos:column="52"/></literal></expr>)<pos:position pos:line="182" pos:column="53"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="183" pos:column="25">cp<pos:position pos:line="183" pos:column="27"/></name><operator pos:line="183" pos:column="27">++<pos:position pos:line="183" pos:column="29"/></operator></expr>;<pos:position pos:line="183" pos:column="30"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="184" pos:column="17">len<pos:position pos:line="184" pos:column="20"/></name> <operator pos:line="184" pos:column="21">=<pos:position pos:line="184" pos:column="22"/></operator> <name pos:line="184" pos:column="23">cp<pos:position pos:line="184" pos:column="25"/></name> <operator pos:line="184" pos:column="26">-<pos:position pos:line="184" pos:column="27"/></operator> <name pos:line="184" pos:column="28">s<pos:position pos:line="184" pos:column="29"/></name></expr>;<pos:position pos:line="184" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="185" pos:column="10"/></block></then> <else pos:line="185" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="186" pos:column="17">len<pos:position pos:line="186" pos:column="20"/></name> <operator pos:line="186" pos:column="21">=<pos:position pos:line="186" pos:column="22"/></operator> <call><name pos:line="186" pos:column="23">strlen<pos:position pos:line="186" pos:column="29"/></name><argument_list pos:line="186" pos:column="29">(<argument><expr><operator pos:line="186" pos:column="30">(<pos:position pos:line="186" pos:column="31"/></operator><name pos:line="186" pos:column="31">char<pos:position pos:line="186" pos:column="35"/></name><operator pos:line="186" pos:column="35">*<pos:position pos:line="186" pos:column="36"/></operator><operator pos:line="186" pos:column="36">)<pos:position pos:line="186" pos:column="37"/></operator><name pos:line="186" pos:column="37">s<pos:position pos:line="186" pos:column="38"/></name></expr></argument>)<pos:position pos:line="186" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="40"/></expr_stmt></block></else></if>

	<if pos:line="188" pos:column="9">if <condition pos:line="188" pos:column="12">(<expr><name pos:line="188" pos:column="13">new_mflags<pos:position pos:line="188" pos:column="23"/></name> <operator pos:line="188" pos:column="24">&amp;<pos:position pos:line="188" pos:column="29"/></operator> <name pos:line="188" pos:column="26">MATCHFLG_CLEAR_LIST<pos:position pos:line="188" pos:column="45"/></name></expr>)<pos:position pos:line="188" pos:column="46"/></condition><then pos:line="188" pos:column="46"> <block pos:line="188" pos:column="47">{
		<if pos:line="189" pos:column="17">if <condition pos:line="189" pos:column="20">(<expr><operator pos:line="189" pos:column="21">!<pos:position pos:line="189" pos:column="22"/></operator><operator pos:line="189" pos:column="22">(<pos:position pos:line="189" pos:column="23"/></operator><name pos:line="189" pos:column="23">xflags<pos:position pos:line="189" pos:column="29"/></name> <operator pos:line="189" pos:column="30">&amp;<pos:position pos:line="189" pos:column="35"/></operator> <name pos:line="189" pos:column="32">XFLG_OLD_PREFIXES<pos:position pos:line="189" pos:column="49"/></name><operator pos:line="189" pos:column="49">)<pos:position pos:line="189" pos:column="50"/></operator> <operator pos:line="189" pos:column="51">&amp;&amp;<pos:position pos:line="189" pos:column="61"/></operator> <name pos:line="189" pos:column="54">len<pos:position pos:line="189" pos:column="57"/></name></expr>)<pos:position pos:line="189" pos:column="58"/></condition><then pos:line="189" pos:column="58"> <block pos:line="189" pos:column="59">{
			<expr_stmt><expr><call><name pos:line="190" pos:column="25">rprintf<pos:position pos:line="190" pos:column="32"/></name><argument_list pos:line="190" pos:column="32">(<argument><expr><name pos:line="190" pos:column="33">FERROR<pos:position pos:line="190" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="191" pos:column="33">"'!' rule has trailing characters: %s\n"<pos:position pos:line="191" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="75">p<pos:position pos:line="191" pos:column="76"/></name></expr></argument>)<pos:position pos:line="191" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="78"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="192" pos:column="25">exit_cleanup<pos:position pos:line="192" pos:column="37"/></name><argument_list pos:line="192" pos:column="37">(<argument><expr><name pos:line="192" pos:column="38">RERR_SYNTAX<pos:position pos:line="192" pos:column="49"/></name></expr></argument>)<pos:position pos:line="192" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="193" pos:column="18"/></block></then></if>
		<if pos:line="194" pos:column="17">if <condition pos:line="194" pos:column="20">(<expr><name pos:line="194" pos:column="21">len<pos:position pos:line="194" pos:column="24"/></name> <operator pos:line="194" pos:column="25">&gt;<pos:position pos:line="194" pos:column="29"/></operator> <literal type="number" pos:line="194" pos:column="27">1<pos:position pos:line="194" pos:column="28"/></literal></expr>)<pos:position pos:line="194" pos:column="29"/></condition><then pos:line="194" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="195" pos:column="25">new_mflags<pos:position pos:line="195" pos:column="35"/></name> <operator pos:line="195" pos:column="36">&amp;=<pos:position pos:line="195" pos:column="42"/></operator> <operator pos:line="195" pos:column="39">~<pos:position pos:line="195" pos:column="40"/></operator><name pos:line="195" pos:column="40">MATCHFLG_CLEAR_LIST<pos:position pos:line="195" pos:column="59"/></name></expr>;<pos:position pos:line="195" pos:column="60"/></expr_stmt></block></then></if>
	}<pos:position pos:line="196" pos:column="10"/></block></then> <elseif pos:line="196" pos:column="11">else <if pos:line="196" pos:column="16">if <condition pos:line="196" pos:column="19">(<expr><operator pos:line="196" pos:column="20">!<pos:position pos:line="196" pos:column="21"/></operator><name pos:line="196" pos:column="21">len<pos:position pos:line="196" pos:column="24"/></name> <operator pos:line="196" pos:column="25">&amp;&amp;<pos:position pos:line="196" pos:column="35"/></operator> <operator pos:line="196" pos:column="28">!<pos:position pos:line="196" pos:column="29"/></operator><operator pos:line="196" pos:column="29">(<pos:position pos:line="196" pos:column="30"/></operator><name pos:line="196" pos:column="30">new_mflags<pos:position pos:line="196" pos:column="40"/></name> <operator pos:line="196" pos:column="41">&amp;<pos:position pos:line="196" pos:column="46"/></operator> <name pos:line="196" pos:column="43">MATCHFLG_CVS_IGNORE<pos:position pos:line="196" pos:column="62"/></name><operator pos:line="196" pos:column="62">)<pos:position pos:line="196" pos:column="63"/></operator></expr>)<pos:position pos:line="196" pos:column="64"/></condition><then pos:line="196" pos:column="64"> <block pos:line="196" pos:column="65">{
		<expr_stmt><expr><call><name pos:line="197" pos:column="17">rprintf<pos:position pos:line="197" pos:column="24"/></name><argument_list pos:line="197" pos:column="24">(<argument><expr><name pos:line="197" pos:column="25">FERROR<pos:position pos:line="197" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="33">"unexpected end of filter rule: %s\n"<pos:position pos:line="197" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="72">p<pos:position pos:line="197" pos:column="73"/></name></expr></argument>)<pos:position pos:line="197" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="198" pos:column="17">exit_cleanup<pos:position pos:line="198" pos:column="29"/></name><argument_list pos:line="198" pos:column="29">(<argument><expr><name pos:line="198" pos:column="30">RERR_SYNTAX<pos:position pos:line="198" pos:column="41"/></name></expr></argument>)<pos:position pos:line="198" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="199" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><operator pos:line="201" pos:column="9">*<pos:position pos:line="201" pos:column="10"/></operator><name pos:line="201" pos:column="10">len_ptr<pos:position pos:line="201" pos:column="17"/></name> <operator pos:line="201" pos:column="18">=<pos:position pos:line="201" pos:column="19"/></operator> <name pos:line="201" pos:column="20">len<pos:position pos:line="201" pos:column="23"/></name></expr>;<pos:position pos:line="201" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="202" pos:column="9">*<pos:position pos:line="202" pos:column="10"/></operator><name pos:line="202" pos:column="10">mflags_ptr<pos:position pos:line="202" pos:column="20"/></name> <operator pos:line="202" pos:column="21">=<pos:position pos:line="202" pos:column="22"/></operator> <name pos:line="202" pos:column="23">new_mflags<pos:position pos:line="202" pos:column="33"/></name></expr>;<pos:position pos:line="202" pos:column="34"/></expr_stmt>
	<return pos:line="203" pos:column="9">return <expr><operator pos:line="203" pos:column="16">(<pos:position pos:line="203" pos:column="17"/></operator><specifier pos:line="203" pos:column="17">const<pos:position pos:line="203" pos:column="22"/></specifier> <name pos:line="203" pos:column="23">char<pos:position pos:line="203" pos:column="27"/></name> <operator pos:line="203" pos:column="28">*<pos:position pos:line="203" pos:column="29"/></operator><operator pos:line="203" pos:column="29">)<pos:position pos:line="203" pos:column="30"/></operator><name pos:line="203" pos:column="30">s<pos:position pos:line="203" pos:column="31"/></name></expr>;<pos:position pos:line="203" pos:column="32"/></return>
}<pos:position pos:line="204" pos:column="2"/></block></function></unit>

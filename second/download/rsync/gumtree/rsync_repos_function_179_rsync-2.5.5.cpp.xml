<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_179_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">init_hard_links<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name><name pos:line="1" pos:column="22">struct<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">file_list<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">flist<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">SUPPORT_HARD_LINKS<pos:position pos:line="3" pos:column="23"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">flist<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">count<pos:position pos:line="5" pos:column="25"/></name></name> <operator pos:line="5" pos:column="26">&lt;<pos:position pos:line="5" pos:column="30"/></operator> <literal type="number" pos:line="5" pos:column="28">2<pos:position pos:line="5" pos:column="29"/></literal></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">hlink_list<pos:position pos:line="8" pos:column="23"/></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">free<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">hlink_list<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">hlink_list<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator>
	      <operator pos:line="12" pos:column="15">(<pos:position pos:line="12" pos:column="16"/></operator>struct <name pos:line="12" pos:column="23">file_struct<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">*<pos:position pos:line="12" pos:column="36"/></operator><operator pos:line="12" pos:column="36">)<pos:position pos:line="12" pos:column="37"/></operator> <call><name pos:line="12" pos:column="38">malloc<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><sizeof pos:line="12" pos:column="45">sizeof<argument_list pos:line="12" pos:column="51">(<argument><expr><name><name pos:line="12" pos:column="52">hlink_list<pos:position pos:line="12" pos:column="62"/></name><index pos:line="12" pos:column="62">[<expr><literal type="number" pos:line="12" pos:column="63">0<pos:position pos:line="12" pos:column="64"/></literal></expr>]<pos:position pos:line="12" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></sizeof> <operator pos:line="12" pos:column="67">*<pos:position pos:line="12" pos:column="68"/></operator>
					    <name><name pos:line="13" pos:column="45">flist<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">-&gt;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="52">count<pos:position pos:line="13" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call><operator pos:line="13" pos:column="58">)<pos:position pos:line="13" pos:column="59"/></operator></expr>)<pos:position pos:line="13" pos:column="60"/></condition><then pos:line="13" pos:column="60">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">out_of_memory<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><literal type="string" pos:line="14" pos:column="31">"init_hard_links"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt></block></then></if>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init> <condition><expr><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="25">flist<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">count<pos:position pos:line="16" pos:column="37"/></name></name></expr>;<pos:position pos:line="16" pos:column="38"/></condition> <incr><expr><name pos:line="16" pos:column="39">i<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">++<pos:position pos:line="16" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="43"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">memcpy<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">&amp;<pos:position pos:line="17" pos:column="29"/></operator><name><name pos:line="17" pos:column="25">hlink_list<pos:position pos:line="17" pos:column="35"/></name><index pos:line="17" pos:column="35">[<expr><name pos:line="17" pos:column="36">i<pos:position pos:line="17" pos:column="37"/></name></expr>]<pos:position pos:line="17" pos:column="38"/></index></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="40">flist<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">files<pos:position pos:line="17" pos:column="52"/></name><index pos:line="17" pos:column="52">[<expr><name pos:line="17" pos:column="53">i<pos:position pos:line="17" pos:column="54"/></name></expr>]<pos:position pos:line="17" pos:column="55"/></index></name></expr></argument>,
		       <argument><expr><sizeof pos:line="18" pos:column="24">sizeof<argument_list pos:line="18" pos:column="30">(<argument><expr><name><name pos:line="18" pos:column="31">hlink_list<pos:position pos:line="18" pos:column="41"/></name><index pos:line="18" pos:column="41">[<expr><literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr>]<pos:position pos:line="18" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt></block></for>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">qsort<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">hlink_list<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="27">flist<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">count<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>,
	      <argument><expr><sizeof pos:line="21" pos:column="15">sizeof<argument_list pos:line="21" pos:column="21">(<argument><expr><name><name pos:line="21" pos:column="22">hlink_list<pos:position pos:line="21" pos:column="32"/></name><index pos:line="21" pos:column="32">[<expr><literal type="number" pos:line="21" pos:column="33">0<pos:position pos:line="21" pos:column="34"/></literal></expr>]<pos:position pos:line="21" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="21" pos:column="38">(<pos:position pos:line="21" pos:column="39"/></operator><call><call><name pos:line="21" pos:column="39">int<pos:position pos:line="21" pos:column="42"/></name> <argument_list pos:line="21" pos:column="43">(<argument><expr><operator pos:line="21" pos:column="44">*<pos:position pos:line="21" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call><argument_list pos:line="21" pos:column="46">()<pos:position pos:line="21" pos:column="48"/></argument_list></call><operator pos:line="21" pos:column="48">)<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">hlink_compare<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>

	<expr_stmt><expr><name pos:line="23" pos:column="9">hlink_count<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name><name pos:line="23" pos:column="23">flist<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">count<pos:position pos:line="23" pos:column="35"/></name></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_424_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">recv_files<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f_in<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">f_out<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">local_name<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd1<pos:position pos:line="3" pos:column="16"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="17">fd2<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">STRUCT_STAT<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">iflags<pos:position pos:line="5" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">xlen<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">fname<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="22">fbuf<pos:position pos:line="6" pos:column="26"/></name><index pos:line="6" pos:column="26">[<expr><name pos:line="6" pos:column="27">MAXPATHLEN<pos:position pos:line="6" pos:column="37"/></name></expr>]<pos:position pos:line="6" pos:column="38"/></index></name></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">xname<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><name pos:line="7" pos:column="20">MAXPATHLEN<pos:position pos:line="7" pos:column="30"/></name></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">fnametmp<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">MAXPATHLEN<pos:position pos:line="8" pos:column="33"/></name></expr>]<pos:position pos:line="8" pos:column="34"/></index></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">fnamecmp<pos:position pos:line="9" pos:column="23"/></name></decl>, <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="26">partialptr<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">fnamecmpbuf<pos:position pos:line="10" pos:column="25"/></name><index pos:line="10" pos:column="25">[<expr><name pos:line="10" pos:column="26">MAXPATHLEN<pos:position pos:line="10" pos:column="36"/></name></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">uchar<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">fnamecmp_type<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">file_struct<pos:position pos:line="12" pos:column="27"/></name></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">file<pos:position pos:line="12" pos:column="33"/></name></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">itemizing<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><ternary><condition><expr><name pos:line="13" pos:column="25">am_server<pos:position pos:line="13" pos:column="34"/></name></expr> ?<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <expr><name pos:line="13" pos:column="37">logfile_format_has_i<pos:position pos:line="13" pos:column="57"/></name></expr> <pos:position pos:line="13" pos:column="58"/></then><else pos:line="13" pos:column="58">: <expr><name pos:line="13" pos:column="60">stdout_format_has_i<pos:position pos:line="13" pos:column="79"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="80"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">enum<pos:position pos:line="14" pos:column="13"/></name> <name pos:line="14" pos:column="14">logcode<pos:position pos:line="14" pos:column="21"/></name></name></type> <name pos:line="14" pos:column="22">log_code<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><ternary><condition><expr><name pos:line="14" pos:column="33">log_before_transfer<pos:position pos:line="14" pos:column="52"/></name></expr> ?<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54"> <expr><name pos:line="14" pos:column="55">FLOG<pos:position pos:line="14" pos:column="59"/></name></expr> <pos:position pos:line="14" pos:column="60"/></then><else pos:line="14" pos:column="60">: <expr><name pos:line="14" pos:column="62">FINFO<pos:position pos:line="14" pos:column="67"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="14" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">max_phase<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><ternary><condition><expr><name pos:line="15" pos:column="25">protocol_version<pos:position pos:line="15" pos:column="41"/></name> <operator pos:line="15" pos:column="42">&gt;=<pos:position pos:line="15" pos:column="47"/></operator> <literal type="number" pos:line="15" pos:column="45">29<pos:position pos:line="15" pos:column="47"/></literal></expr> ?<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49"> <expr><literal type="number" pos:line="15" pos:column="50">2<pos:position pos:line="15" pos:column="51"/></literal></expr> <pos:position pos:line="15" pos:column="52"/></then><else pos:line="15" pos:column="52">: <expr><literal type="number" pos:line="15" pos:column="54">1<pos:position pos:line="15" pos:column="55"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="15" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">dflt_perms<pos:position pos:line="16" pos:column="23"/></name> <init pos:line="16" pos:column="24">= <expr><operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">ACCESSPERMS<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">&amp;<pos:position pos:line="16" pos:column="44"/></operator> <operator pos:line="16" pos:column="41">~<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">orig_umask<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">)<pos:position pos:line="16" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="16" pos:column="54"/></decl_stmt>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">SUPPORT_ACLS<pos:position pos:line="17" pos:column="20"/></name></cpp:ifdef>
	<decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">char<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">parent_dirname<pos:position pos:line="18" pos:column="35"/></name> <init pos:line="18" pos:column="36">= <expr><literal type="string" pos:line="18" pos:column="38">""<pos:position pos:line="18" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="41"/></decl_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">ndx<pos:position pos:line="20" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="20" pos:column="18">recv_ok<pos:position pos:line="20" pos:column="25"/></name></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">DEBUG_GTE<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">RECV<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="29">1<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">rprintf<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">FINFO<pos:position pos:line="23" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="32">"recv_files(%d) starting\n"<pos:position pos:line="23" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="61">cur_flist<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">-&gt;<pos:position pos:line="23" pos:column="75"/></operator><name pos:line="23" pos:column="72">used<pos:position pos:line="23" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">delay_updates<pos:position pos:line="25" pos:column="26"/></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">delayed_bits<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">=<pos:position pos:line="26" pos:column="31"/></operator> <call><name pos:line="26" pos:column="32">bitbag_create<pos:position pos:line="26" pos:column="45"/></name><argument_list pos:line="26" pos:column="45">(<argument><expr><name><name pos:line="26" pos:column="46">cur_flist<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-&gt;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="57">used<pos:position pos:line="26" pos:column="61"/></name></name> <operator pos:line="26" pos:column="62">+<pos:position pos:line="26" pos:column="63"/></operator> <literal type="number" pos:line="26" pos:column="64">1<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt></block></then></if>

	<while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal></expr>)<pos:position pos:line="28" pos:column="18"/></condition> <block pos:line="28" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">cleanup_disable<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">()<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>

		<comment type="block" pos:line="31" pos:column="17">/* This call also sets cur_flist. */</comment>
		<expr_stmt><expr><name pos:line="32" pos:column="17">ndx<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <call><name pos:line="32" pos:column="23">read_ndx_and_attrs<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">f_in<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="48">f_out<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="55">&amp;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="56">iflags<pos:position pos:line="32" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="64">&amp;<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="65">fnamecmp_type<pos:position pos:line="32" pos:column="78"/></name></expr></argument>,
					 <argument><expr><name pos:line="33" pos:column="42">xname<pos:position pos:line="33" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="49">&amp;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="50">xlen<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">ndx<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">==<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">NDX_DONE<pos:position pos:line="34" pos:column="36"/></name></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37"> <block pos:line="34" pos:column="38">{
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><operator pos:line="35" pos:column="29">!<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">am_server<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">&amp;&amp;<pos:position pos:line="35" pos:column="50"/></operator> <call><name pos:line="35" pos:column="43">INFO_GTE<pos:position pos:line="35" pos:column="51"/></name><argument_list pos:line="35" pos:column="51">(<argument><expr><name pos:line="35" pos:column="52">PROGRESS<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="62">2<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call> <operator pos:line="35" pos:column="65">&amp;&amp;<pos:position pos:line="35" pos:column="75"/></operator> <name pos:line="35" pos:column="68">cur_flist<pos:position pos:line="35" pos:column="77"/></name></expr>)<pos:position pos:line="35" pos:column="78"/></condition><then pos:line="35" pos:column="78"> <block pos:line="35" pos:column="79">{
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">set_current_file_index<pos:position pos:line="36" pos:column="55"/></name><argument_list pos:line="36" pos:column="55">(<argument><expr><name pos:line="36" pos:column="56">NULL<pos:position pos:line="36" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="62">0<pos:position pos:line="36" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">end_progress<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><literal type="number" pos:line="37" pos:column="46">0<pos:position pos:line="37" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">inc_recurse<pos:position pos:line="39" pos:column="40"/></name> <operator pos:line="39" pos:column="41">&amp;&amp;<pos:position pos:line="39" pos:column="51"/></operator> <name pos:line="39" pos:column="44">first_flist<pos:position pos:line="39" pos:column="55"/></name></expr>)<pos:position pos:line="39" pos:column="56"/></condition><then pos:line="39" pos:column="56"> <block pos:line="39" pos:column="57">{
				<if pos:line="40" pos:column="33">if <condition pos:line="40" pos:column="36">(<expr><name pos:line="40" pos:column="37">read_batch<pos:position pos:line="40" pos:column="47"/></name></expr>)<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48"> <block pos:line="40" pos:column="49">{
					<expr_stmt><expr><name pos:line="41" pos:column="41">ndx<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">=<pos:position pos:line="41" pos:column="46"/></operator> <name><name pos:line="41" pos:column="47">first_flist<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">-&gt;<pos:position pos:line="41" pos:column="63"/></operator><name pos:line="41" pos:column="60">used<pos:position pos:line="41" pos:column="64"/></name></name> <operator pos:line="41" pos:column="65">+<pos:position pos:line="41" pos:column="66"/></operator> <name><name pos:line="41" pos:column="67">first_flist<pos:position pos:line="41" pos:column="78"/></name><operator pos:line="41" pos:column="78">-&gt;<pos:position pos:line="41" pos:column="83"/></operator><name pos:line="41" pos:column="80">ndx_start<pos:position pos:line="41" pos:column="89"/></name></name></expr>;<pos:position pos:line="41" pos:column="90"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="42" pos:column="41">gen_wants_ndx<pos:position pos:line="42" pos:column="54"/></name><argument_list pos:line="42" pos:column="54">(<argument><expr><name pos:line="42" pos:column="55">ndx<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="60">first_flist<pos:position pos:line="42" pos:column="71"/></name><operator pos:line="42" pos:column="71">-&gt;<pos:position pos:line="42" pos:column="76"/></operator><name pos:line="42" pos:column="73">flist_num<pos:position pos:line="42" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="84"/></expr_stmt>
				}<pos:position pos:line="43" pos:column="34"/></block></then></if>
				<expr_stmt><expr><call><name pos:line="44" pos:column="33">flist_free<pos:position pos:line="44" pos:column="43"/></name><argument_list pos:line="44" pos:column="43">(<argument><expr><name pos:line="44" pos:column="44">first_flist<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
				<if pos:line="45" pos:column="33">if <condition pos:line="45" pos:column="36">(<expr><name pos:line="45" pos:column="37">first_flist<pos:position pos:line="45" pos:column="48"/></name></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49">
					<block type="pseudo"><continue pos:line="46" pos:column="41">continue;<pos:position pos:line="46" pos:column="50"/></continue></block></then></if>
			}<pos:position pos:line="47" pos:column="26"/></block></then> <elseif pos:line="47" pos:column="27">else <if pos:line="47" pos:column="32">if <condition pos:line="47" pos:column="35">(<expr><name pos:line="47" pos:column="36">read_batch<pos:position pos:line="47" pos:column="46"/></name> <operator pos:line="47" pos:column="47">&amp;&amp;<pos:position pos:line="47" pos:column="57"/></operator> <name pos:line="47" pos:column="50">first_flist<pos:position pos:line="47" pos:column="61"/></name></expr>)<pos:position pos:line="47" pos:column="62"/></condition><then pos:line="47" pos:column="62"> <block pos:line="47" pos:column="63">{
				<expr_stmt><expr><name pos:line="48" pos:column="33">ndx<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">=<pos:position pos:line="48" pos:column="38"/></operator> <name><name pos:line="48" pos:column="39">first_flist<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">-&gt;<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="52">used<pos:position pos:line="48" pos:column="56"/></name></name></expr>;<pos:position pos:line="48" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="49" pos:column="33">gen_wants_ndx<pos:position pos:line="49" pos:column="46"/></name><argument_list pos:line="49" pos:column="46">(<argument><expr><name pos:line="49" pos:column="47">ndx<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="52">first_flist<pos:position pos:line="49" pos:column="63"/></name><operator pos:line="49" pos:column="63">-&gt;<pos:position pos:line="49" pos:column="68"/></operator><name pos:line="49" pos:column="65">flist_num<pos:position pos:line="49" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="50" pos:column="26"/></block></then></if></elseif></if>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><operator pos:line="51" pos:column="29">++<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="31">phase<pos:position pos:line="51" pos:column="36"/></name> <operator pos:line="51" pos:column="37">&gt;<pos:position pos:line="51" pos:column="41"/></operator> <name pos:line="51" pos:column="39">max_phase<pos:position pos:line="51" pos:column="48"/></name></expr>)<pos:position pos:line="51" pos:column="49"/></condition><then pos:line="51" pos:column="49">
				<block type="pseudo"><break pos:line="52" pos:column="33">break;<pos:position pos:line="52" pos:column="39"/></break></block></then></if>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><call><name pos:line="53" pos:column="29">DEBUG_GTE<pos:position pos:line="53" pos:column="38"/></name><argument_list pos:line="53" pos:column="38">(<argument><expr><name pos:line="53" pos:column="39">RECV<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="45">1<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="48"/></condition><then pos:line="53" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="33">rprintf<pos:position pos:line="54" pos:column="40"/></name><argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">FINFO<pos:position pos:line="54" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="48">"recv_files phase=%d\n"<pos:position pos:line="54" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="73">phase<pos:position pos:line="54" pos:column="78"/></name></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt></block></then></if>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">phase<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">==<pos:position pos:line="55" pos:column="37"/></operator> <literal type="number" pos:line="55" pos:column="38">2<pos:position pos:line="55" pos:column="39"/></literal> <operator pos:line="55" pos:column="40">&amp;&amp;<pos:position pos:line="55" pos:column="50"/></operator> <name pos:line="55" pos:column="43">delay_updates<pos:position pos:line="55" pos:column="56"/></name></expr>)<pos:position pos:line="55" pos:column="57"/></condition><then pos:line="55" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">handle_delayed_updates<pos:position pos:line="56" pos:column="55"/></name><argument_list pos:line="56" pos:column="55">(<argument><expr><name pos:line="56" pos:column="56">local_name<pos:position pos:line="56" pos:column="66"/></name></expr></argument>)<pos:position pos:line="56" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="68"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">write_int<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><name pos:line="57" pos:column="35">f_out<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="42">NDX_DONE<pos:position pos:line="57" pos:column="50"/></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>
			<continue pos:line="58" pos:column="25">continue;<pos:position pos:line="58" pos:column="34"/></continue>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>

		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">ndx<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">-<pos:position pos:line="61" pos:column="26"/></operator> <name><name pos:line="61" pos:column="27">cur_flist<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">-&gt;<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="38">ndx_start<pos:position pos:line="61" pos:column="47"/></name></name> <operator pos:line="61" pos:column="48">&gt;=<pos:position pos:line="61" pos:column="53"/></operator> <literal type="number" pos:line="61" pos:column="51">0<pos:position pos:line="61" pos:column="52"/></literal></expr>)<pos:position pos:line="61" pos:column="53"/></condition><then pos:line="61" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="25">file<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">=<pos:position pos:line="62" pos:column="31"/></operator> <name><name pos:line="62" pos:column="32">cur_flist<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">-&gt;<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="43">files<pos:position pos:line="62" pos:column="48"/></name><index pos:line="62" pos:column="48">[<expr><name pos:line="62" pos:column="49">ndx<pos:position pos:line="62" pos:column="52"/></name> <operator pos:line="62" pos:column="53">-<pos:position pos:line="62" pos:column="54"/></operator> <name><name pos:line="62" pos:column="55">cur_flist<pos:position pos:line="62" pos:column="64"/></name><operator pos:line="62" pos:column="64">-&gt;<pos:position pos:line="62" pos:column="69"/></operator><name pos:line="62" pos:column="66">ndx_start<pos:position pos:line="62" pos:column="75"/></name></name></expr>]<pos:position pos:line="62" pos:column="76"/></index></name></expr>;<pos:position pos:line="62" pos:column="77"/></expr_stmt></block></then>
		<else pos:line="63" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="25">file<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">=<pos:position pos:line="64" pos:column="31"/></operator> <name><name pos:line="64" pos:column="32">dir_flist<pos:position pos:line="64" pos:column="41"/></name><operator pos:line="64" pos:column="41">-&gt;<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="43">files<pos:position pos:line="64" pos:column="48"/></name><index pos:line="64" pos:column="48">[<expr><name><name pos:line="64" pos:column="49">cur_flist<pos:position pos:line="64" pos:column="58"/></name><operator pos:line="64" pos:column="58">-&gt;<pos:position pos:line="64" pos:column="63"/></operator><name pos:line="64" pos:column="60">parent_ndx<pos:position pos:line="64" pos:column="70"/></name></name></expr>]<pos:position pos:line="64" pos:column="71"/></index></name></expr>;<pos:position pos:line="64" pos:column="72"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="65" pos:column="17">fname<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="65" pos:column="25">local_name<pos:position pos:line="65" pos:column="35"/></name></expr> ?<pos:position pos:line="65" pos:column="37"/></condition><then pos:line="65" pos:column="37"> <expr><name pos:line="65" pos:column="38">local_name<pos:position pos:line="65" pos:column="48"/></name></expr> <pos:position pos:line="65" pos:column="49"/></then><else pos:line="65" pos:column="49">: <expr><call><name pos:line="65" pos:column="51">f_name<pos:position pos:line="65" pos:column="57"/></name><argument_list pos:line="65" pos:column="57">(<argument><expr><name pos:line="65" pos:column="58">file<pos:position pos:line="65" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">fbuf<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt>

		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><call><name pos:line="67" pos:column="21">DEBUG_GTE<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">RECV<pos:position pos:line="67" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="37">1<pos:position pos:line="67" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="40"/></condition><then pos:line="67" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="25">rprintf<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">FINFO<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="40">"recv_files(%s)\n"<pos:position pos:line="68" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="60">fname<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">ifdef<pos:position pos:line="70" pos:column="7"/></cpp:directive> <name pos:line="70" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="70" pos:column="22"/></name></cpp:ifdef>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">preserve_xattrs<pos:position pos:line="71" pos:column="36"/></name> <operator pos:line="71" pos:column="37">&amp;&amp;<pos:position pos:line="71" pos:column="47"/></operator> <name pos:line="71" pos:column="40">iflags<pos:position pos:line="71" pos:column="46"/></name> <operator pos:line="71" pos:column="47">&amp;<pos:position pos:line="71" pos:column="52"/></operator> <name pos:line="71" pos:column="49">ITEM_REPORT_XATTR<pos:position pos:line="71" pos:column="66"/></name> <operator pos:line="71" pos:column="67">&amp;&amp;<pos:position pos:line="71" pos:column="77"/></operator> <name pos:line="71" pos:column="70">do_xfers<pos:position pos:line="71" pos:column="78"/></name>
		 <operator pos:line="72" pos:column="18">&amp;&amp;<pos:position pos:line="72" pos:column="28"/></operator> <operator pos:line="72" pos:column="21">!<pos:position pos:line="72" pos:column="22"/></operator><operator pos:line="72" pos:column="22">(<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="23">want_xattr_optim<pos:position pos:line="72" pos:column="39"/></name> <operator pos:line="72" pos:column="40">&amp;&amp;<pos:position pos:line="72" pos:column="50"/></operator> <call><name pos:line="72" pos:column="43">BITS_SET<pos:position pos:line="72" pos:column="51"/></name><argument_list pos:line="72" pos:column="51">(<argument><expr><name pos:line="72" pos:column="52">iflags<pos:position pos:line="72" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="60">ITEM_XNAME_FOLLOWS<pos:position pos:line="72" pos:column="78"/></name><operator pos:line="72" pos:column="78">|<pos:position pos:line="72" pos:column="79"/></operator><name pos:line="72" pos:column="79">ITEM_LOCAL_CHANGE<pos:position pos:line="72" pos:column="96"/></name></expr></argument>)<pos:position pos:line="72" pos:column="97"/></argument_list></call><operator pos:line="72" pos:column="97">)<pos:position pos:line="72" pos:column="98"/></operator></expr>)<pos:position pos:line="72" pos:column="99"/></condition><then pos:line="72" pos:column="99">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="25">recv_xattr_request<pos:position pos:line="73" pos:column="43"/></name><argument_list pos:line="73" pos:column="43">(<argument><expr><name pos:line="73" pos:column="44">file<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="50">f_in<pos:position pos:line="73" pos:column="54"/></name></expr></argument>)<pos:position pos:line="73" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>

		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><operator pos:line="76" pos:column="21">!<pos:position pos:line="76" pos:column="22"/></operator><operator pos:line="76" pos:column="22">(<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">iflags<pos:position pos:line="76" pos:column="29"/></name> <operator pos:line="76" pos:column="30">&amp;<pos:position pos:line="76" pos:column="35"/></operator> <name pos:line="76" pos:column="32">ITEM_TRANSFER<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">)<pos:position pos:line="76" pos:column="46"/></operator></expr>)<pos:position pos:line="76" pos:column="47"/></condition><then pos:line="76" pos:column="47"> <block pos:line="76" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">maybe_log_item<pos:position pos:line="77" pos:column="39"/></name><argument_list pos:line="77" pos:column="39">(<argument><expr><name pos:line="77" pos:column="40">file<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">iflags<pos:position pos:line="77" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="54">itemizing<pos:position pos:line="77" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="65">xname<pos:position pos:line="77" pos:column="70"/></name></expr></argument>)<pos:position pos:line="77" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="72"/></expr_stmt>
<cpp:ifdef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifdef<pos:position pos:line="78" pos:column="7"/></cpp:directive> <name pos:line="78" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="78" pos:column="22"/></name></cpp:ifdef>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><name pos:line="79" pos:column="29">preserve_xattrs<pos:position pos:line="79" pos:column="44"/></name> <operator pos:line="79" pos:column="45">&amp;&amp;<pos:position pos:line="79" pos:column="55"/></operator> <name pos:line="79" pos:column="48">iflags<pos:position pos:line="79" pos:column="54"/></name> <operator pos:line="79" pos:column="55">&amp;<pos:position pos:line="79" pos:column="60"/></operator> <name pos:line="79" pos:column="57">ITEM_REPORT_XATTR<pos:position pos:line="79" pos:column="74"/></name> <operator pos:line="79" pos:column="75">&amp;&amp;<pos:position pos:line="79" pos:column="85"/></operator> <name pos:line="79" pos:column="78">do_xfers<pos:position pos:line="79" pos:column="86"/></name>
			 <operator pos:line="80" pos:column="26">&amp;&amp;<pos:position pos:line="80" pos:column="36"/></operator> <operator pos:line="80" pos:column="29">!<pos:position pos:line="80" pos:column="30"/></operator><call><name pos:line="80" pos:column="30">BITS_SET<pos:position pos:line="80" pos:column="38"/></name><argument_list pos:line="80" pos:column="38">(<argument><expr><name pos:line="80" pos:column="39">iflags<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="47">ITEM_XNAME_FOLLOWS<pos:position pos:line="80" pos:column="65"/></name><operator pos:line="80" pos:column="65">|<pos:position pos:line="80" pos:column="66"/></operator><name pos:line="80" pos:column="66">ITEM_LOCAL_CHANGE<pos:position pos:line="80" pos:column="83"/></name></expr></argument>)<pos:position pos:line="80" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="85"/></condition><then pos:line="80" pos:column="85">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="33">set_file_attrs<pos:position pos:line="81" pos:column="47"/></name><argument_list pos:line="81" pos:column="47">(<argument><expr><name pos:line="81" pos:column="48">fname<pos:position pos:line="81" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="55">file<pos:position pos:line="81" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="61">NULL<pos:position pos:line="81" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="67">fname<pos:position pos:line="81" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="74">0<pos:position pos:line="81" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="77"/></expr_stmt></block></then></if>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
			<if pos:line="83" pos:column="25">if <condition pos:line="83" pos:column="28">(<expr><name pos:line="83" pos:column="29">iflags<pos:position pos:line="83" pos:column="35"/></name> <operator pos:line="83" pos:column="36">&amp;<pos:position pos:line="83" pos:column="41"/></operator> <name pos:line="83" pos:column="38">ITEM_IS_NEW<pos:position pos:line="83" pos:column="49"/></name></expr>)<pos:position pos:line="83" pos:column="50"/></condition><then pos:line="83" pos:column="50"> <block pos:line="83" pos:column="51">{
				<expr_stmt><expr><name><name pos:line="84" pos:column="33">stats<pos:position pos:line="84" pos:column="38"/></name><operator pos:line="84" pos:column="38">.<pos:position pos:line="84" pos:column="39"/></operator><name pos:line="84" pos:column="39">created_files<pos:position pos:line="84" pos:column="52"/></name></name><operator pos:line="84" pos:column="52">++<pos:position pos:line="84" pos:column="54"/></operator></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt>
				<if pos:line="85" pos:column="33">if <condition pos:line="85" pos:column="36">(<expr><call><name pos:line="85" pos:column="37">S_ISREG<pos:position pos:line="85" pos:column="44"/></name><argument_list pos:line="85" pos:column="44">(<argument><expr><name><name pos:line="85" pos:column="45">file<pos:position pos:line="85" pos:column="49"/></name><operator pos:line="85" pos:column="49">-&gt;<pos:position pos:line="85" pos:column="54"/></operator><name pos:line="85" pos:column="51">mode<pos:position pos:line="85" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="57"/></condition><then pos:line="85" pos:column="57"> <block pos:line="85" pos:column="58">{
					<comment type="block" pos:line="86" pos:column="41">/* Nothing further to count. */</comment>
				}<pos:position pos:line="87" pos:column="34"/></block></then> <elseif pos:line="87" pos:column="35">else <if pos:line="87" pos:column="40">if <condition pos:line="87" pos:column="43">(<expr><call><name pos:line="87" pos:column="44">S_ISDIR<pos:position pos:line="87" pos:column="51"/></name><argument_list pos:line="87" pos:column="51">(<argument><expr><name><name pos:line="87" pos:column="52">file<pos:position pos:line="87" pos:column="56"/></name><operator pos:line="87" pos:column="56">-&gt;<pos:position pos:line="87" pos:column="61"/></operator><name pos:line="87" pos:column="58">mode<pos:position pos:line="87" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="64"/></condition><then pos:line="87" pos:column="64">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="88" pos:column="41">stats<pos:position pos:line="88" pos:column="46"/></name><operator pos:line="88" pos:column="46">.<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="47">created_dirs<pos:position pos:line="88" pos:column="59"/></name></name><operator pos:line="88" pos:column="59">++<pos:position pos:line="88" pos:column="61"/></operator></expr>;<pos:position pos:line="88" pos:column="62"/></expr_stmt></block></then></if></elseif>
<cpp:ifdef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifdef<pos:position pos:line="89" pos:column="7"/></cpp:directive> <name pos:line="89" pos:column="8">SUPPORT_LINKS<pos:position pos:line="89" pos:column="21"/></name></cpp:ifdef>
				<elseif pos:line="90" pos:column="33">else <if pos:line="90" pos:column="38">if <condition pos:line="90" pos:column="41">(<expr><call><name pos:line="90" pos:column="42">S_ISLNK<pos:position pos:line="90" pos:column="49"/></name><argument_list pos:line="90" pos:column="49">(<argument><expr><name><name pos:line="90" pos:column="50">file<pos:position pos:line="90" pos:column="54"/></name><operator pos:line="90" pos:column="54">-&gt;<pos:position pos:line="90" pos:column="59"/></operator><name pos:line="90" pos:column="56">mode<pos:position pos:line="90" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="62"/></condition><then pos:line="90" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="91" pos:column="41">stats<pos:position pos:line="91" pos:column="46"/></name><operator pos:line="91" pos:column="46">.<pos:position pos:line="91" pos:column="47"/></operator><name pos:line="91" pos:column="47">created_symlinks<pos:position pos:line="91" pos:column="63"/></name></name><operator pos:line="91" pos:column="63">++<pos:position pos:line="91" pos:column="65"/></operator></expr>;<pos:position pos:line="91" pos:column="66"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>
				<elseif pos:line="93" pos:column="33">else <if pos:line="93" pos:column="38">if <condition pos:line="93" pos:column="41">(<expr><call><name pos:line="93" pos:column="42">IS_DEVICE<pos:position pos:line="93" pos:column="51"/></name><argument_list pos:line="93" pos:column="51">(<argument><expr><name><name pos:line="93" pos:column="52">file<pos:position pos:line="93" pos:column="56"/></name><operator pos:line="93" pos:column="56">-&gt;<pos:position pos:line="93" pos:column="61"/></operator><name pos:line="93" pos:column="58">mode<pos:position pos:line="93" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="64"/></condition><then pos:line="93" pos:column="64">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="94" pos:column="41">stats<pos:position pos:line="94" pos:column="46"/></name><operator pos:line="94" pos:column="46">.<pos:position pos:line="94" pos:column="47"/></operator><name pos:line="94" pos:column="47">created_devices<pos:position pos:line="94" pos:column="62"/></name></name><operator pos:line="94" pos:column="62">++<pos:position pos:line="94" pos:column="64"/></operator></expr>;<pos:position pos:line="94" pos:column="65"/></expr_stmt></block></then></if></elseif>
				<else pos:line="95" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="96" pos:column="41">stats<pos:position pos:line="96" pos:column="46"/></name><operator pos:line="96" pos:column="46">.<pos:position pos:line="96" pos:column="47"/></operator><name pos:line="96" pos:column="47">created_specials<pos:position pos:line="96" pos:column="63"/></name></name><operator pos:line="96" pos:column="63">++<pos:position pos:line="96" pos:column="65"/></operator></expr>;<pos:position pos:line="96" pos:column="66"/></expr_stmt></block></else></if>
			}<pos:position pos:line="97" pos:column="26"/></block></then></if>
			<continue pos:line="98" pos:column="25">continue;<pos:position pos:line="98" pos:column="34"/></continue>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if>
		<if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name pos:line="100" pos:column="21">phase<pos:position pos:line="100" pos:column="26"/></name> <operator pos:line="100" pos:column="27">==<pos:position pos:line="100" pos:column="29"/></operator> <literal type="number" pos:line="100" pos:column="30">2<pos:position pos:line="100" pos:column="31"/></literal></expr>)<pos:position pos:line="100" pos:column="32"/></condition><then pos:line="100" pos:column="32"> <block pos:line="100" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="101" pos:column="25">rprintf<pos:position pos:line="101" pos:column="32"/></name><argument_list pos:line="101" pos:column="32">(<argument><expr><name pos:line="101" pos:column="33">FERROR<pos:position pos:line="101" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="102" pos:column="33">"got transfer request in phase 2 [%s]\n"<pos:position pos:line="102" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="103" pos:column="33">who_am_i<pos:position pos:line="103" pos:column="41"/></name><argument_list pos:line="103" pos:column="41">()<pos:position pos:line="103" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="103" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">exit_cleanup<pos:position pos:line="104" pos:column="37"/></name><argument_list pos:line="104" pos:column="37">(<argument><expr><name pos:line="104" pos:column="38">RERR_PROTOCOL<pos:position pos:line="104" pos:column="51"/></name></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="105" pos:column="18"/></block></then></if>

		<if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><name><name pos:line="107" pos:column="21">file<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">-&gt;<pos:position pos:line="107" pos:column="30"/></operator><name pos:line="107" pos:column="27">flags<pos:position pos:line="107" pos:column="32"/></name></name> <operator pos:line="107" pos:column="33">&amp;<pos:position pos:line="107" pos:column="38"/></operator> <name pos:line="107" pos:column="35">FLAG_FILE_SENT<pos:position pos:line="107" pos:column="49"/></name></expr>)<pos:position pos:line="107" pos:column="50"/></condition><then pos:line="107" pos:column="50"> <block pos:line="107" pos:column="51">{
			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><name pos:line="108" pos:column="29">csum_length<pos:position pos:line="108" pos:column="40"/></name> <operator pos:line="108" pos:column="41">==<pos:position pos:line="108" pos:column="43"/></operator> <name pos:line="108" pos:column="44">SHORT_SUM_LENGTH<pos:position pos:line="108" pos:column="60"/></name></expr>)<pos:position pos:line="108" pos:column="61"/></condition><then pos:line="108" pos:column="61"> <block pos:line="108" pos:column="62">{
				<if pos:line="109" pos:column="33">if <condition pos:line="109" pos:column="36">(<expr><name pos:line="109" pos:column="37">keep_partial<pos:position pos:line="109" pos:column="49"/></name> <operator pos:line="109" pos:column="50">&amp;&amp;<pos:position pos:line="109" pos:column="60"/></operator> <operator pos:line="109" pos:column="53">!<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="54">partial_dir<pos:position pos:line="109" pos:column="65"/></name></expr>)<pos:position pos:line="109" pos:column="66"/></condition><then pos:line="109" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><name pos:line="110" pos:column="41">make_backups<pos:position pos:line="110" pos:column="53"/></name> <operator pos:line="110" pos:column="54">=<pos:position pos:line="110" pos:column="55"/></operator> <operator pos:line="110" pos:column="56">-<pos:position pos:line="110" pos:column="57"/></operator><name pos:line="110" pos:column="57">make_backups<pos:position pos:line="110" pos:column="69"/></name></expr>;<pos:position pos:line="110" pos:column="70"/></expr_stmt></block></then></if> <comment type="block" pos:line="110" pos:column="71">/* prevents double backup */</comment>
				<if pos:line="111" pos:column="33">if <condition pos:line="111" pos:column="36">(<expr><name pos:line="111" pos:column="37">append_mode<pos:position pos:line="111" pos:column="48"/></name></expr>)<pos:position pos:line="111" pos:column="49"/></condition><then pos:line="111" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><name pos:line="112" pos:column="41">sparse_files<pos:position pos:line="112" pos:column="53"/></name> <operator pos:line="112" pos:column="54">=<pos:position pos:line="112" pos:column="55"/></operator> <operator pos:line="112" pos:column="56">-<pos:position pos:line="112" pos:column="57"/></operator><name pos:line="112" pos:column="57">sparse_files<pos:position pos:line="112" pos:column="69"/></name></expr>;<pos:position pos:line="112" pos:column="70"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="113" pos:column="33">append_mode<pos:position pos:line="113" pos:column="44"/></name> <operator pos:line="113" pos:column="45">=<pos:position pos:line="113" pos:column="46"/></operator> <operator pos:line="113" pos:column="47">-<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="48">append_mode<pos:position pos:line="113" pos:column="59"/></name></expr>;<pos:position pos:line="113" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="114" pos:column="33">csum_length<pos:position pos:line="114" pos:column="44"/></name> <operator pos:line="114" pos:column="45">=<pos:position pos:line="114" pos:column="46"/></operator> <name pos:line="114" pos:column="47">SUM_LENGTH<pos:position pos:line="114" pos:column="57"/></name></expr>;<pos:position pos:line="114" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="115" pos:column="33">redoing<pos:position pos:line="115" pos:column="40"/></name> <operator pos:line="115" pos:column="41">=<pos:position pos:line="115" pos:column="42"/></operator> <literal type="number" pos:line="115" pos:column="43">1<pos:position pos:line="115" pos:column="44"/></literal></expr>;<pos:position pos:line="115" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="116" pos:column="26"/></block></then></if>
		}<pos:position pos:line="117" pos:column="18"/></block></then> <else pos:line="117" pos:column="19">else <block pos:line="117" pos:column="24">{
			<if pos:line="118" pos:column="25">if <condition pos:line="118" pos:column="28">(<expr><name pos:line="118" pos:column="29">csum_length<pos:position pos:line="118" pos:column="40"/></name> <operator pos:line="118" pos:column="41">!=<pos:position pos:line="118" pos:column="43"/></operator> <name pos:line="118" pos:column="44">SHORT_SUM_LENGTH<pos:position pos:line="118" pos:column="60"/></name></expr>)<pos:position pos:line="118" pos:column="61"/></condition><then pos:line="118" pos:column="61"> <block pos:line="118" pos:column="62">{
				<if pos:line="119" pos:column="33">if <condition pos:line="119" pos:column="36">(<expr><name pos:line="119" pos:column="37">keep_partial<pos:position pos:line="119" pos:column="49"/></name> <operator pos:line="119" pos:column="50">&amp;&amp;<pos:position pos:line="119" pos:column="60"/></operator> <operator pos:line="119" pos:column="53">!<pos:position pos:line="119" pos:column="54"/></operator><name pos:line="119" pos:column="54">partial_dir<pos:position pos:line="119" pos:column="65"/></name></expr>)<pos:position pos:line="119" pos:column="66"/></condition><then pos:line="119" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><name pos:line="120" pos:column="41">make_backups<pos:position pos:line="120" pos:column="53"/></name> <operator pos:line="120" pos:column="54">=<pos:position pos:line="120" pos:column="55"/></operator> <operator pos:line="120" pos:column="56">-<pos:position pos:line="120" pos:column="57"/></operator><name pos:line="120" pos:column="57">make_backups<pos:position pos:line="120" pos:column="69"/></name></expr>;<pos:position pos:line="120" pos:column="70"/></expr_stmt></block></then></if>
				<if pos:line="121" pos:column="33">if <condition pos:line="121" pos:column="36">(<expr><name pos:line="121" pos:column="37">append_mode<pos:position pos:line="121" pos:column="48"/></name></expr>)<pos:position pos:line="121" pos:column="49"/></condition><then pos:line="121" pos:column="49">
					<block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="41">sparse_files<pos:position pos:line="122" pos:column="53"/></name> <operator pos:line="122" pos:column="54">=<pos:position pos:line="122" pos:column="55"/></operator> <operator pos:line="122" pos:column="56">-<pos:position pos:line="122" pos:column="57"/></operator><name pos:line="122" pos:column="57">sparse_files<pos:position pos:line="122" pos:column="69"/></name></expr>;<pos:position pos:line="122" pos:column="70"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="123" pos:column="33">append_mode<pos:position pos:line="123" pos:column="44"/></name> <operator pos:line="123" pos:column="45">=<pos:position pos:line="123" pos:column="46"/></operator> <operator pos:line="123" pos:column="47">-<pos:position pos:line="123" pos:column="48"/></operator><name pos:line="123" pos:column="48">append_mode<pos:position pos:line="123" pos:column="59"/></name></expr>;<pos:position pos:line="123" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="124" pos:column="33">csum_length<pos:position pos:line="124" pos:column="44"/></name> <operator pos:line="124" pos:column="45">=<pos:position pos:line="124" pos:column="46"/></operator> <name pos:line="124" pos:column="47">SHORT_SUM_LENGTH<pos:position pos:line="124" pos:column="63"/></name></expr>;<pos:position pos:line="124" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><name pos:line="125" pos:column="33">redoing<pos:position pos:line="125" pos:column="40"/></name> <operator pos:line="125" pos:column="41">=<pos:position pos:line="125" pos:column="42"/></operator> <literal type="number" pos:line="125" pos:column="43">0<pos:position pos:line="125" pos:column="44"/></literal></expr>;<pos:position pos:line="125" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="126" pos:column="26"/></block></then></if>
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><name pos:line="127" pos:column="29">iflags<pos:position pos:line="127" pos:column="35"/></name> <operator pos:line="127" pos:column="36">&amp;<pos:position pos:line="127" pos:column="41"/></operator> <name pos:line="127" pos:column="38">ITEM_IS_NEW<pos:position pos:line="127" pos:column="49"/></name></expr>)<pos:position pos:line="127" pos:column="50"/></condition><then pos:line="127" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="128" pos:column="33">stats<pos:position pos:line="128" pos:column="38"/></name><operator pos:line="128" pos:column="38">.<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="39">created_files<pos:position pos:line="128" pos:column="52"/></name></name><operator pos:line="128" pos:column="52">++<pos:position pos:line="128" pos:column="54"/></operator></expr>;<pos:position pos:line="128" pos:column="55"/></expr_stmt></block></then></if>
		}<pos:position pos:line="129" pos:column="18"/></block></else></if>

		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><operator pos:line="131" pos:column="21">!<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="22">am_server<pos:position pos:line="131" pos:column="31"/></name> <operator pos:line="131" pos:column="32">&amp;&amp;<pos:position pos:line="131" pos:column="42"/></operator> <call><name pos:line="131" pos:column="35">INFO_GTE<pos:position pos:line="131" pos:column="43"/></name><argument_list pos:line="131" pos:column="43">(<argument><expr><name pos:line="131" pos:column="44">PROGRESS<pos:position pos:line="131" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="54">1<pos:position pos:line="131" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="57"/></condition><then pos:line="131" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="25">set_current_file_index<pos:position pos:line="132" pos:column="47"/></name><argument_list pos:line="132" pos:column="47">(<argument><expr><name pos:line="132" pos:column="48">file<pos:position pos:line="132" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="54">ndx<pos:position pos:line="132" pos:column="57"/></name></expr></argument>)<pos:position pos:line="132" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="133" pos:column="17">stats<pos:position pos:line="133" pos:column="22"/></name><operator pos:line="133" pos:column="22">.<pos:position pos:line="133" pos:column="23"/></operator><name pos:line="133" pos:column="23">xferred_files<pos:position pos:line="133" pos:column="36"/></name></name><operator pos:line="133" pos:column="36">++<pos:position pos:line="133" pos:column="38"/></operator></expr>;<pos:position pos:line="133" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="134" pos:column="17">stats<pos:position pos:line="134" pos:column="22"/></name><operator pos:line="134" pos:column="22">.<pos:position pos:line="134" pos:column="23"/></operator><name pos:line="134" pos:column="23">total_transferred_size<pos:position pos:line="134" pos:column="45"/></name></name> <operator pos:line="134" pos:column="46">+=<pos:position pos:line="134" pos:column="48"/></operator> <call><name pos:line="134" pos:column="49">F_LENGTH<pos:position pos:line="134" pos:column="57"/></name><argument_list pos:line="134" pos:column="57">(<argument><expr><name pos:line="134" pos:column="58">file<pos:position pos:line="134" pos:column="62"/></name></expr></argument>)<pos:position pos:line="134" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="64"/></expr_stmt>

		<expr_stmt><expr><name pos:line="136" pos:column="17">cleanup_got_literal<pos:position pos:line="136" pos:column="36"/></name> <operator pos:line="136" pos:column="37">=<pos:position pos:line="136" pos:column="38"/></operator> <literal type="number" pos:line="136" pos:column="39">0<pos:position pos:line="136" pos:column="40"/></literal></expr>;<pos:position pos:line="136" pos:column="41"/></expr_stmt>

		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name><name pos:line="138" pos:column="21">daemon_filter_list<pos:position pos:line="138" pos:column="39"/></name><operator pos:line="138" pos:column="39">.<pos:position pos:line="138" pos:column="40"/></operator><name pos:line="138" pos:column="40">head<pos:position pos:line="138" pos:column="44"/></name></name>
		    <operator pos:line="139" pos:column="21">&amp;&amp;<pos:position pos:line="139" pos:column="31"/></operator> <call><name pos:line="139" pos:column="24">check_filter<pos:position pos:line="139" pos:column="36"/></name><argument_list pos:line="139" pos:column="36">(<argument><expr><operator pos:line="139" pos:column="37">&amp;<pos:position pos:line="139" pos:column="42"/></operator><name pos:line="139" pos:column="38">daemon_filter_list<pos:position pos:line="139" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="58">FLOG<pos:position pos:line="139" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="64">fname<pos:position pos:line="139" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="71">0<pos:position pos:line="139" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="73"/></argument_list></call> <operator pos:line="139" pos:column="74">&lt;<pos:position pos:line="139" pos:column="78"/></operator> <literal type="number" pos:line="139" pos:column="76">0<pos:position pos:line="139" pos:column="77"/></literal></expr>)<pos:position pos:line="139" pos:column="78"/></condition><then pos:line="139" pos:column="78"> <block pos:line="139" pos:column="79">{
			<expr_stmt><expr><call><name pos:line="140" pos:column="25">rprintf<pos:position pos:line="140" pos:column="32"/></name><argument_list pos:line="140" pos:column="32">(<argument><expr><name pos:line="140" pos:column="33">FERROR<pos:position pos:line="140" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="41">"attempt to hack rsync failed.\n"<pos:position pos:line="140" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="141" pos:column="25">exit_cleanup<pos:position pos:line="141" pos:column="37"/></name><argument_list pos:line="141" pos:column="37">(<argument><expr><name pos:line="141" pos:column="38">RERR_PROTOCOL<pos:position pos:line="141" pos:column="51"/></name></expr></argument>)<pos:position pos:line="141" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="142" pos:column="18"/></block></then></if>

		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name pos:line="144" pos:column="21">read_batch<pos:position pos:line="144" pos:column="31"/></name></expr>)<pos:position pos:line="144" pos:column="32"/></condition><then pos:line="144" pos:column="32"> <block pos:line="144" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="145" pos:column="25">int<pos:position pos:line="145" pos:column="28"/></name></type> <name pos:line="145" pos:column="29">wanted<pos:position pos:line="145" pos:column="35"/></name> <init pos:line="145" pos:column="36">= <expr><ternary><condition><expr><name pos:line="145" pos:column="38">redoing<pos:position pos:line="145" pos:column="45"/></name></expr>
				   ?<pos:position pos:line="146" pos:column="37"/></condition><then pos:line="146" pos:column="37"> <expr><call><name pos:line="146" pos:column="38">we_want_redo<pos:position pos:line="146" pos:column="50"/></name><argument_list pos:line="146" pos:column="50">(<argument><expr><name pos:line="146" pos:column="51">ndx<pos:position pos:line="146" pos:column="54"/></name></expr></argument>)<pos:position pos:line="146" pos:column="55"/></argument_list></call></expr>
				   <pos:position pos:line="147" pos:column="8"/></then><else pos:line="147" pos:column="36">: <expr><call><name pos:line="147" pos:column="38">gen_wants_ndx<pos:position pos:line="147" pos:column="51"/></name><argument_list pos:line="147" pos:column="51">(<argument><expr><name pos:line="147" pos:column="52">ndx<pos:position pos:line="147" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="57">cur_flist<pos:position pos:line="147" pos:column="66"/></name><operator pos:line="147" pos:column="66">-&gt;<pos:position pos:line="147" pos:column="71"/></operator><name pos:line="147" pos:column="68">flist_num<pos:position pos:line="147" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="78"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="147" pos:column="79"/></decl_stmt>
			<if pos:line="148" pos:column="25">if <condition pos:line="148" pos:column="28">(<expr><operator pos:line="148" pos:column="29">!<pos:position pos:line="148" pos:column="30"/></operator><name pos:line="148" pos:column="30">wanted<pos:position pos:line="148" pos:column="36"/></name></expr>)<pos:position pos:line="148" pos:column="37"/></condition><then pos:line="148" pos:column="37"> <block pos:line="148" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="149" pos:column="33">rprintf<pos:position pos:line="149" pos:column="40"/></name><argument_list pos:line="149" pos:column="40">(<argument><expr><name pos:line="149" pos:column="41">FINFO<pos:position pos:line="149" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="150" pos:column="41">"(Skipping batched update for%s \"%s\")\n"<pos:position pos:line="150" pos:column="83"/></literal></expr></argument>,
					<argument><expr><ternary><condition><expr><name pos:line="151" pos:column="41">redoing<pos:position pos:line="151" pos:column="48"/></name></expr> ?<pos:position pos:line="151" pos:column="50"/></condition><then pos:line="151" pos:column="50"> <expr><literal type="string" pos:line="151" pos:column="51">" resend of"<pos:position pos:line="151" pos:column="63"/></literal></expr> <pos:position pos:line="151" pos:column="64"/></then><else pos:line="151" pos:column="64">: <expr><literal type="string" pos:line="151" pos:column="66">""<pos:position pos:line="151" pos:column="68"/></literal></expr></else></ternary></expr></argument>,
					<argument><expr><name pos:line="152" pos:column="41">fname<pos:position pos:line="152" pos:column="46"/></name></expr></argument>)<pos:position pos:line="152" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="153" pos:column="33">discard_receive_data<pos:position pos:line="153" pos:column="53"/></name><argument_list pos:line="153" pos:column="53">(<argument><expr><name pos:line="153" pos:column="54">f_in<pos:position pos:line="153" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="153" pos:column="60">F_LENGTH<pos:position pos:line="153" pos:column="68"/></name><argument_list pos:line="153" pos:column="68">(<argument><expr><name pos:line="153" pos:column="69">file<pos:position pos:line="153" pos:column="73"/></name></expr></argument>)<pos:position pos:line="153" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="153" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="154" pos:column="33">file<pos:position pos:line="154" pos:column="37"/></name><operator pos:line="154" pos:column="37">-&gt;<pos:position pos:line="154" pos:column="42"/></operator><name pos:line="154" pos:column="39">flags<pos:position pos:line="154" pos:column="44"/></name></name> <operator pos:line="154" pos:column="45">|=<pos:position pos:line="154" pos:column="47"/></operator> <name pos:line="154" pos:column="48">FLAG_FILE_SENT<pos:position pos:line="154" pos:column="62"/></name></expr>;<pos:position pos:line="154" pos:column="63"/></expr_stmt>
				<continue pos:line="155" pos:column="33">continue;<pos:position pos:line="155" pos:column="42"/></continue>
			}<pos:position pos:line="156" pos:column="26"/></block></then></if>
		}<pos:position pos:line="157" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="159" pos:column="17">remember_initial_stats<pos:position pos:line="159" pos:column="39"/></name><argument_list pos:line="159" pos:column="39">()<pos:position pos:line="159" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="42"/></expr_stmt>

		<if pos:line="161" pos:column="17">if <condition pos:line="161" pos:column="20">(<expr><operator pos:line="161" pos:column="21">!<pos:position pos:line="161" pos:column="22"/></operator><name pos:line="161" pos:column="22">do_xfers<pos:position pos:line="161" pos:column="30"/></name></expr>)<pos:position pos:line="161" pos:column="31"/></condition><then pos:line="161" pos:column="31"> <block pos:line="161" pos:column="32">{ <comment type="block" pos:line="161" pos:column="34">/* log the transfer */</comment>
			<expr_stmt><expr><call><name pos:line="162" pos:column="25">log_item<pos:position pos:line="162" pos:column="33"/></name><argument_list pos:line="162" pos:column="33">(<argument><expr><name pos:line="162" pos:column="34">FCLIENT<pos:position pos:line="162" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="43">file<pos:position pos:line="162" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="49">iflags<pos:position pos:line="162" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="57">NULL<pos:position pos:line="162" pos:column="61"/></name></expr></argument>)<pos:position pos:line="162" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="63"/></expr_stmt>
			<if pos:line="163" pos:column="25">if <condition pos:line="163" pos:column="28">(<expr><name pos:line="163" pos:column="29">read_batch<pos:position pos:line="163" pos:column="39"/></name></expr>)<pos:position pos:line="163" pos:column="40"/></condition><then pos:line="163" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="164" pos:column="33">discard_receive_data<pos:position pos:line="164" pos:column="53"/></name><argument_list pos:line="164" pos:column="53">(<argument><expr><name pos:line="164" pos:column="54">f_in<pos:position pos:line="164" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="164" pos:column="60">F_LENGTH<pos:position pos:line="164" pos:column="68"/></name><argument_list pos:line="164" pos:column="68">(<argument><expr><name pos:line="164" pos:column="69">file<pos:position pos:line="164" pos:column="73"/></name></expr></argument>)<pos:position pos:line="164" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="164" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="76"/></expr_stmt></block></then></if>
			<continue pos:line="165" pos:column="25">continue;<pos:position pos:line="165" pos:column="34"/></continue>
		}<pos:position pos:line="166" pos:column="18"/></block></then></if>
		<if pos:line="167" pos:column="17">if <condition pos:line="167" pos:column="20">(<expr><name pos:line="167" pos:column="21">write_batch<pos:position pos:line="167" pos:column="32"/></name> <operator pos:line="167" pos:column="33">&lt;<pos:position pos:line="167" pos:column="37"/></operator> <literal type="number" pos:line="167" pos:column="35">0<pos:position pos:line="167" pos:column="36"/></literal></expr>)<pos:position pos:line="167" pos:column="37"/></condition><then pos:line="167" pos:column="37"> <block pos:line="167" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="168" pos:column="25">log_item<pos:position pos:line="168" pos:column="33"/></name><argument_list pos:line="168" pos:column="33">(<argument><expr><name pos:line="168" pos:column="34">FCLIENT<pos:position pos:line="168" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="43">file<pos:position pos:line="168" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="49">iflags<pos:position pos:line="168" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="57">NULL<pos:position pos:line="168" pos:column="61"/></name></expr></argument>)<pos:position pos:line="168" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="63"/></expr_stmt>
			<if pos:line="169" pos:column="25">if <condition pos:line="169" pos:column="28">(<expr><operator pos:line="169" pos:column="29">!<pos:position pos:line="169" pos:column="30"/></operator><name pos:line="169" pos:column="30">am_server<pos:position pos:line="169" pos:column="39"/></name></expr>)<pos:position pos:line="169" pos:column="40"/></condition><then pos:line="169" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="33">discard_receive_data<pos:position pos:line="170" pos:column="53"/></name><argument_list pos:line="170" pos:column="53">(<argument><expr><name pos:line="170" pos:column="54">f_in<pos:position pos:line="170" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="170" pos:column="60">F_LENGTH<pos:position pos:line="170" pos:column="68"/></name><argument_list pos:line="170" pos:column="68">(<argument><expr><name pos:line="170" pos:column="69">file<pos:position pos:line="170" pos:column="73"/></name></expr></argument>)<pos:position pos:line="170" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="170" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="76"/></expr_stmt></block></then></if>
			<if pos:line="171" pos:column="25">if <condition pos:line="171" pos:column="28">(<expr><name pos:line="171" pos:column="29">inc_recurse<pos:position pos:line="171" pos:column="40"/></name></expr>)<pos:position pos:line="171" pos:column="41"/></condition><then pos:line="171" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="172" pos:column="33">send_msg_int<pos:position pos:line="172" pos:column="45"/></name><argument_list pos:line="172" pos:column="45">(<argument><expr><name pos:line="172" pos:column="46">MSG_SUCCESS<pos:position pos:line="172" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="59">ndx<pos:position pos:line="172" pos:column="62"/></name></expr></argument>)<pos:position pos:line="172" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="64"/></expr_stmt></block></then></if>
			<continue pos:line="173" pos:column="25">continue;<pos:position pos:line="173" pos:column="34"/></continue>
		}<pos:position pos:line="174" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="176" pos:column="17">partialptr<pos:position pos:line="176" pos:column="27"/></name> <operator pos:line="176" pos:column="28">=<pos:position pos:line="176" pos:column="29"/></operator> <ternary><condition><expr><name pos:line="176" pos:column="30">partial_dir<pos:position pos:line="176" pos:column="41"/></name></expr> ?<pos:position pos:line="176" pos:column="43"/></condition><then pos:line="176" pos:column="43"> <expr><call><name pos:line="176" pos:column="44">partial_dir_fname<pos:position pos:line="176" pos:column="61"/></name><argument_list pos:line="176" pos:column="61">(<argument><expr><name pos:line="176" pos:column="62">fname<pos:position pos:line="176" pos:column="67"/></name></expr></argument>)<pos:position pos:line="176" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="176" pos:column="69"/></then><else pos:line="176" pos:column="69">: <expr><name pos:line="176" pos:column="71">fname<pos:position pos:line="176" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="176" pos:column="77"/></expr_stmt>

		<if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><name pos:line="178" pos:column="21">protocol_version<pos:position pos:line="178" pos:column="37"/></name> <operator pos:line="178" pos:column="38">&gt;=<pos:position pos:line="178" pos:column="43"/></operator> <literal type="number" pos:line="178" pos:column="41">29<pos:position pos:line="178" pos:column="43"/></literal></expr>)<pos:position pos:line="178" pos:column="44"/></condition><then pos:line="178" pos:column="44"> <block pos:line="178" pos:column="45">{
			<switch pos:line="179" pos:column="25">switch <condition pos:line="179" pos:column="32">(<expr><name pos:line="179" pos:column="33">fnamecmp_type<pos:position pos:line="179" pos:column="46"/></name></expr>)<pos:position pos:line="179" pos:column="47"/></condition> <block pos:line="179" pos:column="48">{
			<case pos:line="180" pos:column="25">case <expr><name pos:line="180" pos:column="30">FNAMECMP_FNAME<pos:position pos:line="180" pos:column="44"/></name></expr>:<pos:position pos:line="180" pos:column="45"/></case>
				<expr_stmt><expr><name pos:line="181" pos:column="33">fnamecmp<pos:position pos:line="181" pos:column="41"/></name> <operator pos:line="181" pos:column="42">=<pos:position pos:line="181" pos:column="43"/></operator> <name pos:line="181" pos:column="44">fname<pos:position pos:line="181" pos:column="49"/></name></expr>;<pos:position pos:line="181" pos:column="50"/></expr_stmt>
				<break pos:line="182" pos:column="33">break;<pos:position pos:line="182" pos:column="39"/></break>
			<case pos:line="183" pos:column="25">case <expr><name pos:line="183" pos:column="30">FNAMECMP_PARTIAL_DIR<pos:position pos:line="183" pos:column="50"/></name></expr>:<pos:position pos:line="183" pos:column="51"/></case>
				<expr_stmt><expr><name pos:line="184" pos:column="33">fnamecmp<pos:position pos:line="184" pos:column="41"/></name> <operator pos:line="184" pos:column="42">=<pos:position pos:line="184" pos:column="43"/></operator> <name pos:line="184" pos:column="44">partialptr<pos:position pos:line="184" pos:column="54"/></name></expr>;<pos:position pos:line="184" pos:column="55"/></expr_stmt>
				<break pos:line="185" pos:column="33">break;<pos:position pos:line="185" pos:column="39"/></break>
			<case pos:line="186" pos:column="25">case <expr><name pos:line="186" pos:column="30">FNAMECMP_BACKUP<pos:position pos:line="186" pos:column="45"/></name></expr>:<pos:position pos:line="186" pos:column="46"/></case>
				<expr_stmt><expr><name pos:line="187" pos:column="33">fnamecmp<pos:position pos:line="187" pos:column="41"/></name> <operator pos:line="187" pos:column="42">=<pos:position pos:line="187" pos:column="43"/></operator> <call><name pos:line="187" pos:column="44">get_backup_name<pos:position pos:line="187" pos:column="59"/></name><argument_list pos:line="187" pos:column="59">(<argument><expr><name pos:line="187" pos:column="60">fname<pos:position pos:line="187" pos:column="65"/></name></expr></argument>)<pos:position pos:line="187" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="67"/></expr_stmt>
				<break pos:line="188" pos:column="33">break;<pos:position pos:line="188" pos:column="39"/></break>
			<case pos:line="189" pos:column="25">case <expr><name pos:line="189" pos:column="30">FNAMECMP_FUZZY<pos:position pos:line="189" pos:column="44"/></name></expr>:<pos:position pos:line="189" pos:column="45"/></case>
				<if pos:line="190" pos:column="33">if <condition pos:line="190" pos:column="36">(<expr><name><name pos:line="190" pos:column="37">file<pos:position pos:line="190" pos:column="41"/></name><operator pos:line="190" pos:column="41">-&gt;<pos:position pos:line="190" pos:column="46"/></operator><name pos:line="190" pos:column="43">dirname<pos:position pos:line="190" pos:column="50"/></name></name></expr>)<pos:position pos:line="190" pos:column="51"/></condition><then pos:line="190" pos:column="51"> <block pos:line="190" pos:column="52">{
					<expr_stmt><expr><call><name pos:line="191" pos:column="41">pathjoin<pos:position pos:line="191" pos:column="49"/></name><argument_list pos:line="191" pos:column="49">(<argument><expr><name pos:line="191" pos:column="50">fnamecmpbuf<pos:position pos:line="191" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="191" pos:column="63">sizeof <name pos:line="191" pos:column="70">fnamecmpbuf<pos:position pos:line="191" pos:column="81"/></name></sizeof></expr></argument>, <argument><expr><name><name pos:line="191" pos:column="83">file<pos:position pos:line="191" pos:column="87"/></name><operator pos:line="191" pos:column="87">-&gt;<pos:position pos:line="191" pos:column="92"/></operator><name pos:line="191" pos:column="89">dirname<pos:position pos:line="191" pos:column="96"/></name></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="98">xname<pos:position pos:line="191" pos:column="103"/></name></expr></argument>)<pos:position pos:line="191" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="105"/></expr_stmt>
					<expr_stmt><expr><name pos:line="192" pos:column="41">fnamecmp<pos:position pos:line="192" pos:column="49"/></name> <operator pos:line="192" pos:column="50">=<pos:position pos:line="192" pos:column="51"/></operator> <name pos:line="192" pos:column="52">fnamecmpbuf<pos:position pos:line="192" pos:column="63"/></name></expr>;<pos:position pos:line="192" pos:column="64"/></expr_stmt>
				}<pos:position pos:line="193" pos:column="34"/></block></then> <else pos:line="193" pos:column="35">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="194" pos:column="41">fnamecmp<pos:position pos:line="194" pos:column="49"/></name> <operator pos:line="194" pos:column="50">=<pos:position pos:line="194" pos:column="51"/></operator> <name pos:line="194" pos:column="52">xname<pos:position pos:line="194" pos:column="57"/></name></expr>;<pos:position pos:line="194" pos:column="58"/></expr_stmt></block></else></if>
				<break pos:line="195" pos:column="33">break;<pos:position pos:line="195" pos:column="39"/></break>
			<default pos:line="196" pos:column="25">default:<pos:position pos:line="196" pos:column="33"/></default>
				<if pos:line="197" pos:column="33">if <condition pos:line="197" pos:column="36">(<expr><name pos:line="197" pos:column="37">fnamecmp_type<pos:position pos:line="197" pos:column="50"/></name> <operator pos:line="197" pos:column="51">&gt;<pos:position pos:line="197" pos:column="55"/></operator> <name pos:line="197" pos:column="53">FNAMECMP_FUZZY<pos:position pos:line="197" pos:column="67"/></name> <operator pos:line="197" pos:column="68">&amp;&amp;<pos:position pos:line="197" pos:column="78"/></operator> <name pos:line="197" pos:column="71">fnamecmp_type<pos:position pos:line="197" pos:column="84"/></name><operator pos:line="197" pos:column="84">-<pos:position pos:line="197" pos:column="85"/></operator><name pos:line="197" pos:column="85">FNAMECMP_FUZZY<pos:position pos:line="197" pos:column="99"/></name> <operator pos:line="197" pos:column="100">&lt;=<pos:position pos:line="197" pos:column="105"/></operator> <name pos:line="197" pos:column="103">basis_dir_cnt<pos:position pos:line="197" pos:column="116"/></name></expr>)<pos:position pos:line="197" pos:column="117"/></condition><then pos:line="197" pos:column="117"> <block pos:line="197" pos:column="118">{
					<expr_stmt><expr><name pos:line="198" pos:column="41">fnamecmp_type<pos:position pos:line="198" pos:column="54"/></name> <operator pos:line="198" pos:column="55">-=<pos:position pos:line="198" pos:column="57"/></operator> <name pos:line="198" pos:column="58">FNAMECMP_FUZZY<pos:position pos:line="198" pos:column="72"/></name> <operator pos:line="198" pos:column="73">+<pos:position pos:line="198" pos:column="74"/></operator> <literal type="number" pos:line="198" pos:column="75">1<pos:position pos:line="198" pos:column="76"/></literal></expr>;<pos:position pos:line="198" pos:column="77"/></expr_stmt>
					<if pos:line="199" pos:column="41">if <condition pos:line="199" pos:column="44">(<expr><name><name pos:line="199" pos:column="45">file<pos:position pos:line="199" pos:column="49"/></name><operator pos:line="199" pos:column="49">-&gt;<pos:position pos:line="199" pos:column="54"/></operator><name pos:line="199" pos:column="51">dirname<pos:position pos:line="199" pos:column="58"/></name></name></expr>)<pos:position pos:line="199" pos:column="59"/></condition><then pos:line="199" pos:column="59"> <block pos:line="199" pos:column="60">{
						<expr_stmt><expr><call><name pos:line="200" pos:column="49">stringjoin<pos:position pos:line="200" pos:column="59"/></name><argument_list pos:line="200" pos:column="59">(<argument><expr><name pos:line="200" pos:column="60">fnamecmpbuf<pos:position pos:line="200" pos:column="71"/></name></expr></argument>, <argument><expr><sizeof pos:line="200" pos:column="73">sizeof <name pos:line="200" pos:column="80">fnamecmpbuf<pos:position pos:line="200" pos:column="91"/></name></sizeof></expr></argument>,
							   <argument><expr><name><name pos:line="201" pos:column="60">basis_dir<pos:position pos:line="201" pos:column="69"/></name><index pos:line="201" pos:column="69">[<expr><name pos:line="201" pos:column="70">fnamecmp_type<pos:position pos:line="201" pos:column="83"/></name></expr>]<pos:position pos:line="201" pos:column="84"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="86">"/"<pos:position pos:line="201" pos:column="89"/></literal></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="91">file<pos:position pos:line="201" pos:column="95"/></name><operator pos:line="201" pos:column="95">-&gt;<pos:position pos:line="201" pos:column="100"/></operator><name pos:line="201" pos:column="97">dirname<pos:position pos:line="201" pos:column="104"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="106">"/"<pos:position pos:line="201" pos:column="109"/></literal></expr></argument>, <argument><expr><name pos:line="201" pos:column="111">xname<pos:position pos:line="201" pos:column="116"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="118">NULL<pos:position pos:line="201" pos:column="122"/></name></expr></argument>)<pos:position pos:line="201" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="124"/></expr_stmt>
					}<pos:position pos:line="202" pos:column="42"/></block></then> <else pos:line="202" pos:column="43">else
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="203" pos:column="49">pathjoin<pos:position pos:line="203" pos:column="57"/></name><argument_list pos:line="203" pos:column="57">(<argument><expr><name pos:line="203" pos:column="58">fnamecmpbuf<pos:position pos:line="203" pos:column="69"/></name></expr></argument>, <argument><expr><sizeof pos:line="203" pos:column="71">sizeof <name pos:line="203" pos:column="78">fnamecmpbuf<pos:position pos:line="203" pos:column="89"/></name></sizeof></expr></argument>, <argument><expr><name><name pos:line="203" pos:column="91">basis_dir<pos:position pos:line="203" pos:column="100"/></name><index pos:line="203" pos:column="100">[<expr><name pos:line="203" pos:column="101">fnamecmp_type<pos:position pos:line="203" pos:column="114"/></name></expr>]<pos:position pos:line="203" pos:column="115"/></index></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="117">xname<pos:position pos:line="203" pos:column="122"/></name></expr></argument>)<pos:position pos:line="203" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="124"/></expr_stmt></block></else></if>
				}<pos:position pos:line="204" pos:column="34"/></block></then> <elseif pos:line="204" pos:column="35">else <if pos:line="204" pos:column="40">if <condition pos:line="204" pos:column="43">(<expr><name pos:line="204" pos:column="44">fnamecmp_type<pos:position pos:line="204" pos:column="57"/></name> <operator pos:line="204" pos:column="58">&gt;=<pos:position pos:line="204" pos:column="63"/></operator> <name pos:line="204" pos:column="61">basis_dir_cnt<pos:position pos:line="204" pos:column="74"/></name></expr>)<pos:position pos:line="204" pos:column="75"/></condition><then pos:line="204" pos:column="75"> <block pos:line="204" pos:column="76">{
					<expr_stmt><expr><call><name pos:line="205" pos:column="41">rprintf<pos:position pos:line="205" pos:column="48"/></name><argument_list pos:line="205" pos:column="48">(<argument><expr><name pos:line="205" pos:column="49">FERROR<pos:position pos:line="205" pos:column="55"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="206" pos:column="49">"invalid basis_dir index: %d.\n"<pos:position pos:line="206" pos:column="81"/></literal></expr></argument>,
						<argument><expr><name pos:line="207" pos:column="49">fnamecmp_type<pos:position pos:line="207" pos:column="62"/></name></expr></argument>)<pos:position pos:line="207" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="64"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="208" pos:column="41">exit_cleanup<pos:position pos:line="208" pos:column="53"/></name><argument_list pos:line="208" pos:column="53">(<argument><expr><name pos:line="208" pos:column="54">RERR_PROTOCOL<pos:position pos:line="208" pos:column="67"/></name></expr></argument>)<pos:position pos:line="208" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="69"/></expr_stmt>
				}<pos:position pos:line="209" pos:column="34"/></block></then></if></elseif> <else pos:line="209" pos:column="35">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="210" pos:column="41">pathjoin<pos:position pos:line="210" pos:column="49"/></name><argument_list pos:line="210" pos:column="49">(<argument><expr><name pos:line="210" pos:column="50">fnamecmpbuf<pos:position pos:line="210" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="210" pos:column="63">sizeof <name pos:line="210" pos:column="70">fnamecmpbuf<pos:position pos:line="210" pos:column="81"/></name></sizeof></expr></argument>, <argument><expr><name><name pos:line="210" pos:column="83">basis_dir<pos:position pos:line="210" pos:column="92"/></name><index pos:line="210" pos:column="92">[<expr><name pos:line="210" pos:column="93">fnamecmp_type<pos:position pos:line="210" pos:column="106"/></name></expr>]<pos:position pos:line="210" pos:column="107"/></index></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="109">fname<pos:position pos:line="210" pos:column="114"/></name></expr></argument>)<pos:position pos:line="210" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="116"/></expr_stmt></block></else></if>
				<expr_stmt><expr><name pos:line="211" pos:column="33">fnamecmp<pos:position pos:line="211" pos:column="41"/></name> <operator pos:line="211" pos:column="42">=<pos:position pos:line="211" pos:column="43"/></operator> <name pos:line="211" pos:column="44">fnamecmpbuf<pos:position pos:line="211" pos:column="55"/></name></expr>;<pos:position pos:line="211" pos:column="56"/></expr_stmt>
				<break pos:line="212" pos:column="33">break;<pos:position pos:line="212" pos:column="39"/></break>
			}<pos:position pos:line="213" pos:column="26"/></block></switch>
			<if pos:line="214" pos:column="25">if <condition pos:line="214" pos:column="28">(<expr><operator pos:line="214" pos:column="29">!<pos:position pos:line="214" pos:column="30"/></operator><name pos:line="214" pos:column="30">fnamecmp<pos:position pos:line="214" pos:column="38"/></name> <operator pos:line="214" pos:column="39">||<pos:position pos:line="214" pos:column="41"/></operator> <operator pos:line="214" pos:column="42">(<pos:position pos:line="214" pos:column="43"/></operator><name><name pos:line="214" pos:column="43">daemon_filter_list<pos:position pos:line="214" pos:column="61"/></name><operator pos:line="214" pos:column="61">.<pos:position pos:line="214" pos:column="62"/></operator><name pos:line="214" pos:column="62">head<pos:position pos:line="214" pos:column="66"/></name></name>
			  <operator pos:line="215" pos:column="27">&amp;&amp;<pos:position pos:line="215" pos:column="37"/></operator> <call><name pos:line="215" pos:column="30">check_filter<pos:position pos:line="215" pos:column="42"/></name><argument_list pos:line="215" pos:column="42">(<argument><expr><operator pos:line="215" pos:column="43">&amp;<pos:position pos:line="215" pos:column="48"/></operator><name pos:line="215" pos:column="44">daemon_filter_list<pos:position pos:line="215" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="64">FLOG<pos:position pos:line="215" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="70">fname<pos:position pos:line="215" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="215" pos:column="77">0<pos:position pos:line="215" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="79"/></argument_list></call> <operator pos:line="215" pos:column="80">&lt;<pos:position pos:line="215" pos:column="84"/></operator> <literal type="number" pos:line="215" pos:column="82">0<pos:position pos:line="215" pos:column="83"/></literal><operator pos:line="215" pos:column="83">)<pos:position pos:line="215" pos:column="84"/></operator></expr>)<pos:position pos:line="215" pos:column="85"/></condition><then pos:line="215" pos:column="85"> <block pos:line="215" pos:column="86">{
				<expr_stmt><expr><name pos:line="216" pos:column="33">fnamecmp<pos:position pos:line="216" pos:column="41"/></name> <operator pos:line="216" pos:column="42">=<pos:position pos:line="216" pos:column="43"/></operator> <name pos:line="216" pos:column="44">fname<pos:position pos:line="216" pos:column="49"/></name></expr>;<pos:position pos:line="216" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="217" pos:column="33">fnamecmp_type<pos:position pos:line="217" pos:column="46"/></name> <operator pos:line="217" pos:column="47">=<pos:position pos:line="217" pos:column="48"/></operator> <name pos:line="217" pos:column="49">FNAMECMP_FNAME<pos:position pos:line="217" pos:column="63"/></name></expr>;<pos:position pos:line="217" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="218" pos:column="26"/></block></then></if>
		}<pos:position pos:line="219" pos:column="18"/></block></then> <else pos:line="219" pos:column="19">else <block pos:line="219" pos:column="24">{
			<comment type="block" pos:line="220" pos:column="25">/* Reminder: --inplace &amp;&amp; --partial-dir are never
			 * enabled at the same time. */</comment>
			<if pos:line="222" pos:column="25">if <condition pos:line="222" pos:column="28">(<expr><name pos:line="222" pos:column="29">inplace<pos:position pos:line="222" pos:column="36"/></name> <operator pos:line="222" pos:column="37">&amp;&amp;<pos:position pos:line="222" pos:column="47"/></operator> <name pos:line="222" pos:column="40">make_backups<pos:position pos:line="222" pos:column="52"/></name> <operator pos:line="222" pos:column="53">&gt;<pos:position pos:line="222" pos:column="57"/></operator> <literal type="number" pos:line="222" pos:column="55">0<pos:position pos:line="222" pos:column="56"/></literal></expr>)<pos:position pos:line="222" pos:column="57"/></condition><then pos:line="222" pos:column="57"> <block pos:line="222" pos:column="58">{
				<if pos:line="223" pos:column="33">if <condition pos:line="223" pos:column="36">(<expr><operator pos:line="223" pos:column="37">!<pos:position pos:line="223" pos:column="38"/></operator><operator pos:line="223" pos:column="38">(<pos:position pos:line="223" pos:column="39"/></operator><name pos:line="223" pos:column="39">fnamecmp<pos:position pos:line="223" pos:column="47"/></name> <operator pos:line="223" pos:column="48">=<pos:position pos:line="223" pos:column="49"/></operator> <call><name pos:line="223" pos:column="50">get_backup_name<pos:position pos:line="223" pos:column="65"/></name><argument_list pos:line="223" pos:column="65">(<argument><expr><name pos:line="223" pos:column="66">fname<pos:position pos:line="223" pos:column="71"/></name></expr></argument>)<pos:position pos:line="223" pos:column="72"/></argument_list></call><operator pos:line="223" pos:column="72">)<pos:position pos:line="223" pos:column="73"/></operator></expr>)<pos:position pos:line="223" pos:column="74"/></condition><then pos:line="223" pos:column="74">
					<block type="pseudo"><expr_stmt><expr><name pos:line="224" pos:column="41">fnamecmp<pos:position pos:line="224" pos:column="49"/></name> <operator pos:line="224" pos:column="50">=<pos:position pos:line="224" pos:column="51"/></operator> <name pos:line="224" pos:column="52">fname<pos:position pos:line="224" pos:column="57"/></name></expr>;<pos:position pos:line="224" pos:column="58"/></expr_stmt></block></then>
				<else pos:line="225" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="226" pos:column="41">fnamecmp_type<pos:position pos:line="226" pos:column="54"/></name> <operator pos:line="226" pos:column="55">=<pos:position pos:line="226" pos:column="56"/></operator> <name pos:line="226" pos:column="57">FNAMECMP_BACKUP<pos:position pos:line="226" pos:column="72"/></name></expr>;<pos:position pos:line="226" pos:column="73"/></expr_stmt></block></else></if>
			}<pos:position pos:line="227" pos:column="26"/></block></then> <elseif pos:line="227" pos:column="27">else <if pos:line="227" pos:column="32">if <condition pos:line="227" pos:column="35">(<expr><name pos:line="227" pos:column="36">partial_dir<pos:position pos:line="227" pos:column="47"/></name> <operator pos:line="227" pos:column="48">&amp;&amp;<pos:position pos:line="227" pos:column="58"/></operator> <name pos:line="227" pos:column="51">partialptr<pos:position pos:line="227" pos:column="61"/></name></expr>)<pos:position pos:line="227" pos:column="62"/></condition><then pos:line="227" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="228" pos:column="33">fnamecmp<pos:position pos:line="228" pos:column="41"/></name> <operator pos:line="228" pos:column="42">=<pos:position pos:line="228" pos:column="43"/></operator> <name pos:line="228" pos:column="44">partialptr<pos:position pos:line="228" pos:column="54"/></name></expr>;<pos:position pos:line="228" pos:column="55"/></expr_stmt></block></then></if></elseif>
			<else pos:line="229" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="230" pos:column="33">fnamecmp<pos:position pos:line="230" pos:column="41"/></name> <operator pos:line="230" pos:column="42">=<pos:position pos:line="230" pos:column="43"/></operator> <name pos:line="230" pos:column="44">fname<pos:position pos:line="230" pos:column="49"/></name></expr>;<pos:position pos:line="230" pos:column="50"/></expr_stmt></block></else></if>
		}<pos:position pos:line="231" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="233" pos:column="17">/* open the file */</comment>
		<expr_stmt><expr><name pos:line="234" pos:column="17">fd1<pos:position pos:line="234" pos:column="20"/></name> <operator pos:line="234" pos:column="21">=<pos:position pos:line="234" pos:column="22"/></operator> <call><name pos:line="234" pos:column="23">do_open<pos:position pos:line="234" pos:column="30"/></name><argument_list pos:line="234" pos:column="30">(<argument><expr><name pos:line="234" pos:column="31">fnamecmp<pos:position pos:line="234" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="41">O_RDONLY<pos:position pos:line="234" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="234" pos:column="51">0<pos:position pos:line="234" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="54"/></expr_stmt>

		<if pos:line="236" pos:column="17">if <condition pos:line="236" pos:column="20">(<expr><name pos:line="236" pos:column="21">fd1<pos:position pos:line="236" pos:column="24"/></name> <operator pos:line="236" pos:column="25">==<pos:position pos:line="236" pos:column="27"/></operator> <operator pos:line="236" pos:column="28">-<pos:position pos:line="236" pos:column="29"/></operator><literal type="number" pos:line="236" pos:column="29">1<pos:position pos:line="236" pos:column="30"/></literal> <operator pos:line="236" pos:column="31">&amp;&amp;<pos:position pos:line="236" pos:column="41"/></operator> <name pos:line="236" pos:column="34">protocol_version<pos:position pos:line="236" pos:column="50"/></name> <operator pos:line="236" pos:column="51">&lt;<pos:position pos:line="236" pos:column="55"/></operator> <literal type="number" pos:line="236" pos:column="53">29<pos:position pos:line="236" pos:column="55"/></literal></expr>)<pos:position pos:line="236" pos:column="56"/></condition><then pos:line="236" pos:column="56"> <block pos:line="236" pos:column="57">{
			<if pos:line="237" pos:column="25">if <condition pos:line="237" pos:column="28">(<expr><name pos:line="237" pos:column="29">fnamecmp<pos:position pos:line="237" pos:column="37"/></name> <operator pos:line="237" pos:column="38">!=<pos:position pos:line="237" pos:column="40"/></operator> <name pos:line="237" pos:column="41">fname<pos:position pos:line="237" pos:column="46"/></name></expr>)<pos:position pos:line="237" pos:column="47"/></condition><then pos:line="237" pos:column="47"> <block pos:line="237" pos:column="48">{
				<expr_stmt><expr><name pos:line="238" pos:column="33">fnamecmp<pos:position pos:line="238" pos:column="41"/></name> <operator pos:line="238" pos:column="42">=<pos:position pos:line="238" pos:column="43"/></operator> <name pos:line="238" pos:column="44">fname<pos:position pos:line="238" pos:column="49"/></name></expr>;<pos:position pos:line="238" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="239" pos:column="33">fd1<pos:position pos:line="239" pos:column="36"/></name> <operator pos:line="239" pos:column="37">=<pos:position pos:line="239" pos:column="38"/></operator> <call><name pos:line="239" pos:column="39">do_open<pos:position pos:line="239" pos:column="46"/></name><argument_list pos:line="239" pos:column="46">(<argument><expr><name pos:line="239" pos:column="47">fnamecmp<pos:position pos:line="239" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="57">O_RDONLY<pos:position pos:line="239" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="239" pos:column="67">0<pos:position pos:line="239" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="240" pos:column="26"/></block></then></if>

			<if pos:line="242" pos:column="25">if <condition pos:line="242" pos:column="28">(<expr><name pos:line="242" pos:column="29">fd1<pos:position pos:line="242" pos:column="32"/></name> <operator pos:line="242" pos:column="33">==<pos:position pos:line="242" pos:column="35"/></operator> <operator pos:line="242" pos:column="36">-<pos:position pos:line="242" pos:column="37"/></operator><literal type="number" pos:line="242" pos:column="37">1<pos:position pos:line="242" pos:column="38"/></literal> <operator pos:line="242" pos:column="39">&amp;&amp;<pos:position pos:line="242" pos:column="49"/></operator> <name><name pos:line="242" pos:column="42">basis_dir<pos:position pos:line="242" pos:column="51"/></name><index pos:line="242" pos:column="51">[<expr><literal type="number" pos:line="242" pos:column="52">0<pos:position pos:line="242" pos:column="53"/></literal></expr>]<pos:position pos:line="242" pos:column="54"/></index></name></expr>)<pos:position pos:line="242" pos:column="55"/></condition><then pos:line="242" pos:column="55"> <block pos:line="242" pos:column="56">{
				<comment type="block" pos:line="243" pos:column="33">/* pre-29 allowed only one alternate basis */</comment>
				<expr_stmt><expr><call><name pos:line="244" pos:column="33">pathjoin<pos:position pos:line="244" pos:column="41"/></name><argument_list pos:line="244" pos:column="41">(<argument><expr><name pos:line="244" pos:column="42">fnamecmpbuf<pos:position pos:line="244" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="244" pos:column="55">sizeof <name pos:line="244" pos:column="62">fnamecmpbuf<pos:position pos:line="244" pos:column="73"/></name></sizeof></expr></argument>,
					 <argument><expr><name><name pos:line="245" pos:column="42">basis_dir<pos:position pos:line="245" pos:column="51"/></name><index pos:line="245" pos:column="51">[<expr><literal type="number" pos:line="245" pos:column="52">0<pos:position pos:line="245" pos:column="53"/></literal></expr>]<pos:position pos:line="245" pos:column="54"/></index></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="56">fname<pos:position pos:line="245" pos:column="61"/></name></expr></argument>)<pos:position pos:line="245" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name pos:line="246" pos:column="33">fnamecmp<pos:position pos:line="246" pos:column="41"/></name> <operator pos:line="246" pos:column="42">=<pos:position pos:line="246" pos:column="43"/></operator> <name pos:line="246" pos:column="44">fnamecmpbuf<pos:position pos:line="246" pos:column="55"/></name></expr>;<pos:position pos:line="246" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="247" pos:column="33">fd1<pos:position pos:line="247" pos:column="36"/></name> <operator pos:line="247" pos:column="37">=<pos:position pos:line="247" pos:column="38"/></operator> <call><name pos:line="247" pos:column="39">do_open<pos:position pos:line="247" pos:column="46"/></name><argument_list pos:line="247" pos:column="46">(<argument><expr><name pos:line="247" pos:column="47">fnamecmp<pos:position pos:line="247" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="57">O_RDONLY<pos:position pos:line="247" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="247" pos:column="67">0<pos:position pos:line="247" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="248" pos:column="26"/></block></then></if>
		}<pos:position pos:line="249" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="251" pos:column="17">updating_basis_or_equiv<pos:position pos:line="251" pos:column="40"/></name> <operator pos:line="251" pos:column="41">=<pos:position pos:line="251" pos:column="42"/></operator> <name pos:line="251" pos:column="43">inplace<pos:position pos:line="251" pos:column="50"/></name>
		    <operator pos:line="252" pos:column="21">&amp;&amp;<pos:position pos:line="252" pos:column="31"/></operator> <operator pos:line="252" pos:column="24">(<pos:position pos:line="252" pos:column="25"/></operator><name pos:line="252" pos:column="25">fnamecmp<pos:position pos:line="252" pos:column="33"/></name> <operator pos:line="252" pos:column="34">==<pos:position pos:line="252" pos:column="36"/></operator> <name pos:line="252" pos:column="37">fname<pos:position pos:line="252" pos:column="42"/></name> <operator pos:line="252" pos:column="43">||<pos:position pos:line="252" pos:column="45"/></operator> <name pos:line="252" pos:column="46">fnamecmp_type<pos:position pos:line="252" pos:column="59"/></name> <operator pos:line="252" pos:column="60">==<pos:position pos:line="252" pos:column="62"/></operator> <name pos:line="252" pos:column="63">FNAMECMP_BACKUP<pos:position pos:line="252" pos:column="78"/></name><operator pos:line="252" pos:column="78">)<pos:position pos:line="252" pos:column="79"/></operator></expr>;<pos:position pos:line="252" pos:column="80"/></expr_stmt>

		<if pos:line="254" pos:column="17">if <condition pos:line="254" pos:column="20">(<expr><name pos:line="254" pos:column="21">fd1<pos:position pos:line="254" pos:column="24"/></name> <operator pos:line="254" pos:column="25">==<pos:position pos:line="254" pos:column="27"/></operator> <operator pos:line="254" pos:column="28">-<pos:position pos:line="254" pos:column="29"/></operator><literal type="number" pos:line="254" pos:column="29">1<pos:position pos:line="254" pos:column="30"/></literal></expr>)<pos:position pos:line="254" pos:column="31"/></condition><then pos:line="254" pos:column="31"> <block pos:line="254" pos:column="32">{
			<expr_stmt><expr><name><name pos:line="255" pos:column="25">st<pos:position pos:line="255" pos:column="27"/></name><operator pos:line="255" pos:column="27">.<pos:position pos:line="255" pos:column="28"/></operator><name pos:line="255" pos:column="28">st_mode<pos:position pos:line="255" pos:column="35"/></name></name> <operator pos:line="255" pos:column="36">=<pos:position pos:line="255" pos:column="37"/></operator> <literal type="number" pos:line="255" pos:column="38">0<pos:position pos:line="255" pos:column="39"/></literal></expr>;<pos:position pos:line="255" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="256" pos:column="25">st<pos:position pos:line="256" pos:column="27"/></name><operator pos:line="256" pos:column="27">.<pos:position pos:line="256" pos:column="28"/></operator><name pos:line="256" pos:column="28">st_size<pos:position pos:line="256" pos:column="35"/></name></name> <operator pos:line="256" pos:column="36">=<pos:position pos:line="256" pos:column="37"/></operator> <literal type="number" pos:line="256" pos:column="38">0<pos:position pos:line="256" pos:column="39"/></literal></expr>;<pos:position pos:line="256" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="257" pos:column="18"/></block></then> <elseif pos:line="257" pos:column="19">else <if pos:line="257" pos:column="24">if <condition pos:line="257" pos:column="27">(<expr><call><name pos:line="257" pos:column="28">do_fstat<pos:position pos:line="257" pos:column="36"/></name><argument_list pos:line="257" pos:column="36">(<argument><expr><name pos:line="257" pos:column="37">fd1<pos:position pos:line="257" pos:column="40"/></name></expr></argument>,<argument><expr><operator pos:line="257" pos:column="41">&amp;<pos:position pos:line="257" pos:column="46"/></operator><name pos:line="257" pos:column="42">st<pos:position pos:line="257" pos:column="44"/></name></expr></argument>)<pos:position pos:line="257" pos:column="45"/></argument_list></call> <operator pos:line="257" pos:column="46">!=<pos:position pos:line="257" pos:column="48"/></operator> <literal type="number" pos:line="257" pos:column="49">0<pos:position pos:line="257" pos:column="50"/></literal></expr>)<pos:position pos:line="257" pos:column="51"/></condition><then pos:line="257" pos:column="51"> <block pos:line="257" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="258" pos:column="25">rsyserr<pos:position pos:line="258" pos:column="32"/></name><argument_list pos:line="258" pos:column="32">(<argument><expr><name pos:line="258" pos:column="33">FERROR_XFER<pos:position pos:line="258" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="258" pos:column="46">errno<pos:position pos:line="258" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="53">"fstat %s failed"<pos:position pos:line="258" pos:column="70"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="259" pos:column="33">full_fname<pos:position pos:line="259" pos:column="43"/></name><argument_list pos:line="259" pos:column="43">(<argument><expr><name pos:line="259" pos:column="44">fnamecmp<pos:position pos:line="259" pos:column="52"/></name></expr></argument>)<pos:position pos:line="259" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="259" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="260" pos:column="25">discard_receive_data<pos:position pos:line="260" pos:column="45"/></name><argument_list pos:line="260" pos:column="45">(<argument><expr><name pos:line="260" pos:column="46">f_in<pos:position pos:line="260" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="260" pos:column="52">F_LENGTH<pos:position pos:line="260" pos:column="60"/></name><argument_list pos:line="260" pos:column="60">(<argument><expr><name pos:line="260" pos:column="61">file<pos:position pos:line="260" pos:column="65"/></name></expr></argument>)<pos:position pos:line="260" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="260" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="261" pos:column="25">close<pos:position pos:line="261" pos:column="30"/></name><argument_list pos:line="261" pos:column="30">(<argument><expr><name pos:line="261" pos:column="31">fd1<pos:position pos:line="261" pos:column="34"/></name></expr></argument>)<pos:position pos:line="261" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="36"/></expr_stmt>
			<if pos:line="262" pos:column="25">if <condition pos:line="262" pos:column="28">(<expr><name pos:line="262" pos:column="29">inc_recurse<pos:position pos:line="262" pos:column="40"/></name></expr>)<pos:position pos:line="262" pos:column="41"/></condition><then pos:line="262" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="263" pos:column="33">send_msg_int<pos:position pos:line="263" pos:column="45"/></name><argument_list pos:line="263" pos:column="45">(<argument><expr><name pos:line="263" pos:column="46">MSG_NO_SEND<pos:position pos:line="263" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="59">ndx<pos:position pos:line="263" pos:column="62"/></name></expr></argument>)<pos:position pos:line="263" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="64"/></expr_stmt></block></then></if>
			<continue pos:line="264" pos:column="25">continue;<pos:position pos:line="264" pos:column="34"/></continue>
		}<pos:position pos:line="265" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="267" pos:column="17">if <condition pos:line="267" pos:column="20">(<expr><name pos:line="267" pos:column="21">fd1<pos:position pos:line="267" pos:column="24"/></name> <operator pos:line="267" pos:column="25">!=<pos:position pos:line="267" pos:column="27"/></operator> <operator pos:line="267" pos:column="28">-<pos:position pos:line="267" pos:column="29"/></operator><literal type="number" pos:line="267" pos:column="29">1<pos:position pos:line="267" pos:column="30"/></literal> <operator pos:line="267" pos:column="31">&amp;&amp;<pos:position pos:line="267" pos:column="41"/></operator> <call><name pos:line="267" pos:column="34">S_ISDIR<pos:position pos:line="267" pos:column="41"/></name><argument_list pos:line="267" pos:column="41">(<argument><expr><name><name pos:line="267" pos:column="42">st<pos:position pos:line="267" pos:column="44"/></name><operator pos:line="267" pos:column="44">.<pos:position pos:line="267" pos:column="45"/></operator><name pos:line="267" pos:column="45">st_mode<pos:position pos:line="267" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="53"/></argument_list></call> <operator pos:line="267" pos:column="54">&amp;&amp;<pos:position pos:line="267" pos:column="64"/></operator> <name pos:line="267" pos:column="57">fnamecmp<pos:position pos:line="267" pos:column="65"/></name> <operator pos:line="267" pos:column="66">==<pos:position pos:line="267" pos:column="68"/></operator> <name pos:line="267" pos:column="69">fname<pos:position pos:line="267" pos:column="74"/></name></expr>)<pos:position pos:line="267" pos:column="75"/></condition><then pos:line="267" pos:column="75"> <block pos:line="267" pos:column="76">{
			<comment type="block" pos:line="268" pos:column="25">/* this special handling for directories
			 * wouldn't be necessary if robust_rename()
			 * and the underlying robust_unlink could cope
			 * with directories
			 */</comment>
			<expr_stmt><expr><call><name pos:line="273" pos:column="25">rprintf<pos:position pos:line="273" pos:column="32"/></name><argument_list pos:line="273" pos:column="32">(<argument><expr><name pos:line="273" pos:column="33">FERROR_XFER<pos:position pos:line="273" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="46">"recv_files: %s is a directory\n"<pos:position pos:line="273" pos:column="79"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="274" pos:column="33">full_fname<pos:position pos:line="274" pos:column="43"/></name><argument_list pos:line="274" pos:column="43">(<argument><expr><name pos:line="274" pos:column="44">fnamecmp<pos:position pos:line="274" pos:column="52"/></name></expr></argument>)<pos:position pos:line="274" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="274" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="275" pos:column="25">discard_receive_data<pos:position pos:line="275" pos:column="45"/></name><argument_list pos:line="275" pos:column="45">(<argument><expr><name pos:line="275" pos:column="46">f_in<pos:position pos:line="275" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="275" pos:column="52">F_LENGTH<pos:position pos:line="275" pos:column="60"/></name><argument_list pos:line="275" pos:column="60">(<argument><expr><name pos:line="275" pos:column="61">file<pos:position pos:line="275" pos:column="65"/></name></expr></argument>)<pos:position pos:line="275" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="275" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="276" pos:column="25">close<pos:position pos:line="276" pos:column="30"/></name><argument_list pos:line="276" pos:column="30">(<argument><expr><name pos:line="276" pos:column="31">fd1<pos:position pos:line="276" pos:column="34"/></name></expr></argument>)<pos:position pos:line="276" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="36"/></expr_stmt>
			<if pos:line="277" pos:column="25">if <condition pos:line="277" pos:column="28">(<expr><name pos:line="277" pos:column="29">inc_recurse<pos:position pos:line="277" pos:column="40"/></name></expr>)<pos:position pos:line="277" pos:column="41"/></condition><then pos:line="277" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="278" pos:column="33">send_msg_int<pos:position pos:line="278" pos:column="45"/></name><argument_list pos:line="278" pos:column="45">(<argument><expr><name pos:line="278" pos:column="46">MSG_NO_SEND<pos:position pos:line="278" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="59">ndx<pos:position pos:line="278" pos:column="62"/></name></expr></argument>)<pos:position pos:line="278" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="64"/></expr_stmt></block></then></if>
			<continue pos:line="279" pos:column="25">continue;<pos:position pos:line="279" pos:column="34"/></continue>
		}<pos:position pos:line="280" pos:column="18"/></block></then></if>

		<if pos:line="282" pos:column="17">if <condition pos:line="282" pos:column="20">(<expr><name pos:line="282" pos:column="21">fd1<pos:position pos:line="282" pos:column="24"/></name> <operator pos:line="282" pos:column="25">!=<pos:position pos:line="282" pos:column="27"/></operator> <operator pos:line="282" pos:column="28">-<pos:position pos:line="282" pos:column="29"/></operator><literal type="number" pos:line="282" pos:column="29">1<pos:position pos:line="282" pos:column="30"/></literal> <operator pos:line="282" pos:column="31">&amp;&amp;<pos:position pos:line="282" pos:column="41"/></operator> <operator pos:line="282" pos:column="34">!<pos:position pos:line="282" pos:column="35"/></operator><call><name pos:line="282" pos:column="35">S_ISREG<pos:position pos:line="282" pos:column="42"/></name><argument_list pos:line="282" pos:column="42">(<argument><expr><name><name pos:line="282" pos:column="43">st<pos:position pos:line="282" pos:column="45"/></name><operator pos:line="282" pos:column="45">.<pos:position pos:line="282" pos:column="46"/></operator><name pos:line="282" pos:column="46">st_mode<pos:position pos:line="282" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="282" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="282" pos:column="55"/></condition><then pos:line="282" pos:column="55"> <block pos:line="282" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="283" pos:column="25">close<pos:position pos:line="283" pos:column="30"/></name><argument_list pos:line="283" pos:column="30">(<argument><expr><name pos:line="283" pos:column="31">fd1<pos:position pos:line="283" pos:column="34"/></name></expr></argument>)<pos:position pos:line="283" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="284" pos:column="25">fd1<pos:position pos:line="284" pos:column="28"/></name> <operator pos:line="284" pos:column="29">=<pos:position pos:line="284" pos:column="30"/></operator> <operator pos:line="284" pos:column="31">-<pos:position pos:line="284" pos:column="32"/></operator><literal type="number" pos:line="284" pos:column="32">1<pos:position pos:line="284" pos:column="33"/></literal></expr>;<pos:position pos:line="284" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="285" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="287" pos:column="17">/* If we're not preserving permissions, change the file-list's
		 * mode based on the local permissions and some heuristics. */</comment>
		<if pos:line="289" pos:column="17">if <condition pos:line="289" pos:column="20">(<expr><operator pos:line="289" pos:column="21">!<pos:position pos:line="289" pos:column="22"/></operator><name pos:line="289" pos:column="22">preserve_perms<pos:position pos:line="289" pos:column="36"/></name></expr>)<pos:position pos:line="289" pos:column="37"/></condition><then pos:line="289" pos:column="37"> <block pos:line="289" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="290" pos:column="25">int<pos:position pos:line="290" pos:column="28"/></name></type> <name pos:line="290" pos:column="29">exists<pos:position pos:line="290" pos:column="35"/></name> <init pos:line="290" pos:column="36">= <expr><name pos:line="290" pos:column="38">fd1<pos:position pos:line="290" pos:column="41"/></name> <operator pos:line="290" pos:column="42">!=<pos:position pos:line="290" pos:column="44"/></operator> <operator pos:line="290" pos:column="45">-<pos:position pos:line="290" pos:column="46"/></operator><literal type="number" pos:line="290" pos:column="46">1<pos:position pos:line="290" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="290" pos:column="48"/></decl_stmt>
<cpp:ifdef pos:line="291" pos:column="1">#<cpp:directive pos:line="291" pos:column="2">ifdef<pos:position pos:line="291" pos:column="7"/></cpp:directive> <name pos:line="291" pos:column="8">SUPPORT_ACLS<pos:position pos:line="291" pos:column="20"/></name></cpp:ifdef>
			<decl_stmt><decl><type><specifier pos:line="292" pos:column="25">const<pos:position pos:line="292" pos:column="30"/></specifier> <name pos:line="292" pos:column="31">char<pos:position pos:line="292" pos:column="35"/></name> <modifier pos:line="292" pos:column="36">*<pos:position pos:line="292" pos:column="37"/></modifier></type><name pos:line="292" pos:column="37">dn<pos:position pos:line="292" pos:column="39"/></name> <init pos:line="292" pos:column="40">= <expr><ternary><condition><expr><name><name pos:line="292" pos:column="42">file<pos:position pos:line="292" pos:column="46"/></name><operator pos:line="292" pos:column="46">-&gt;<pos:position pos:line="292" pos:column="51"/></operator><name pos:line="292" pos:column="48">dirname<pos:position pos:line="292" pos:column="55"/></name></name></expr> ?<pos:position pos:line="292" pos:column="57"/></condition><then pos:line="292" pos:column="57"> <expr><name><name pos:line="292" pos:column="58">file<pos:position pos:line="292" pos:column="62"/></name><operator pos:line="292" pos:column="62">-&gt;<pos:position pos:line="292" pos:column="67"/></operator><name pos:line="292" pos:column="64">dirname<pos:position pos:line="292" pos:column="71"/></name></name></expr> <pos:position pos:line="292" pos:column="72"/></then><else pos:line="292" pos:column="72">: <expr><literal type="string" pos:line="292" pos:column="74">"."<pos:position pos:line="292" pos:column="77"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="292" pos:column="78"/></decl_stmt>
			<if pos:line="293" pos:column="25">if <condition pos:line="293" pos:column="28">(<expr><name pos:line="293" pos:column="29">parent_dirname<pos:position pos:line="293" pos:column="43"/></name> <operator pos:line="293" pos:column="44">!=<pos:position pos:line="293" pos:column="46"/></operator> <name pos:line="293" pos:column="47">dn<pos:position pos:line="293" pos:column="49"/></name>
			 <operator pos:line="294" pos:column="26">&amp;&amp;<pos:position pos:line="294" pos:column="36"/></operator> <call><name pos:line="294" pos:column="29">strcmp<pos:position pos:line="294" pos:column="35"/></name><argument_list pos:line="294" pos:column="35">(<argument><expr><name pos:line="294" pos:column="36">parent_dirname<pos:position pos:line="294" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="52">dn<pos:position pos:line="294" pos:column="54"/></name></expr></argument>)<pos:position pos:line="294" pos:column="55"/></argument_list></call> <operator pos:line="294" pos:column="56">!=<pos:position pos:line="294" pos:column="58"/></operator> <literal type="number" pos:line="294" pos:column="59">0<pos:position pos:line="294" pos:column="60"/></literal></expr>)<pos:position pos:line="294" pos:column="61"/></condition><then pos:line="294" pos:column="61"> <block pos:line="294" pos:column="62">{
				<expr_stmt><expr><name pos:line="295" pos:column="33">dflt_perms<pos:position pos:line="295" pos:column="43"/></name> <operator pos:line="295" pos:column="44">=<pos:position pos:line="295" pos:column="45"/></operator> <call><name pos:line="295" pos:column="46">default_perms_for_dir<pos:position pos:line="295" pos:column="67"/></name><argument_list pos:line="295" pos:column="67">(<argument><expr><name pos:line="295" pos:column="68">dn<pos:position pos:line="295" pos:column="70"/></name></expr></argument>)<pos:position pos:line="295" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><name pos:line="296" pos:column="33">parent_dirname<pos:position pos:line="296" pos:column="47"/></name> <operator pos:line="296" pos:column="48">=<pos:position pos:line="296" pos:column="49"/></operator> <name pos:line="296" pos:column="50">dn<pos:position pos:line="296" pos:column="52"/></name></expr>;<pos:position pos:line="296" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="297" pos:column="26"/></block></then></if>
<cpp:endif pos:line="298" pos:column="1">#<cpp:directive pos:line="298" pos:column="2">endif<pos:position pos:line="298" pos:column="7"/></cpp:directive></cpp:endif>
			<expr_stmt><expr><name><name pos:line="299" pos:column="25">file<pos:position pos:line="299" pos:column="29"/></name><operator pos:line="299" pos:column="29">-&gt;<pos:position pos:line="299" pos:column="34"/></operator><name pos:line="299" pos:column="31">mode<pos:position pos:line="299" pos:column="35"/></name></name> <operator pos:line="299" pos:column="36">=<pos:position pos:line="299" pos:column="37"/></operator> <call><name pos:line="299" pos:column="38">dest_mode<pos:position pos:line="299" pos:column="47"/></name><argument_list pos:line="299" pos:column="47">(<argument><expr><name><name pos:line="299" pos:column="48">file<pos:position pos:line="299" pos:column="52"/></name><operator pos:line="299" pos:column="52">-&gt;<pos:position pos:line="299" pos:column="57"/></operator><name pos:line="299" pos:column="54">mode<pos:position pos:line="299" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="299" pos:column="60">st<pos:position pos:line="299" pos:column="62"/></name><operator pos:line="299" pos:column="62">.<pos:position pos:line="299" pos:column="63"/></operator><name pos:line="299" pos:column="63">st_mode<pos:position pos:line="299" pos:column="70"/></name></name></expr></argument>,
					       <argument><expr><name pos:line="300" pos:column="48">dflt_perms<pos:position pos:line="300" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="300" pos:column="60">exists<pos:position pos:line="300" pos:column="66"/></name></expr></argument>)<pos:position pos:line="300" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="301" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="303" pos:column="17">/* We now check to see if we are writing the file "inplace" */</comment>
		<if pos:line="304" pos:column="17">if <condition pos:line="304" pos:column="20">(<expr><name pos:line="304" pos:column="21">inplace<pos:position pos:line="304" pos:column="28"/></name></expr>)<pos:position pos:line="304" pos:column="29"/></condition><then pos:line="304" pos:column="29">  <block pos:line="304" pos:column="31">{
			<expr_stmt><expr><name pos:line="305" pos:column="25">fd2<pos:position pos:line="305" pos:column="28"/></name> <operator pos:line="305" pos:column="29">=<pos:position pos:line="305" pos:column="30"/></operator> <call><name pos:line="305" pos:column="31">do_open<pos:position pos:line="305" pos:column="38"/></name><argument_list pos:line="305" pos:column="38">(<argument><expr><name pos:line="305" pos:column="39">fname<pos:position pos:line="305" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="46">O_WRONLY<pos:position pos:line="305" pos:column="54"/></name><operator pos:line="305" pos:column="54">|<pos:position pos:line="305" pos:column="55"/></operator><name pos:line="305" pos:column="55">O_CREAT<pos:position pos:line="305" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="305" pos:column="64">0600<pos:position pos:line="305" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="70"/></expr_stmt>
			<if pos:line="306" pos:column="25">if <condition pos:line="306" pos:column="28">(<expr><name pos:line="306" pos:column="29">fd2<pos:position pos:line="306" pos:column="32"/></name> <operator pos:line="306" pos:column="33">==<pos:position pos:line="306" pos:column="35"/></operator> <operator pos:line="306" pos:column="36">-<pos:position pos:line="306" pos:column="37"/></operator><literal type="number" pos:line="306" pos:column="37">1<pos:position pos:line="306" pos:column="38"/></literal></expr>)<pos:position pos:line="306" pos:column="39"/></condition><then pos:line="306" pos:column="39"> <block pos:line="306" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="307" pos:column="33">rsyserr<pos:position pos:line="307" pos:column="40"/></name><argument_list pos:line="307" pos:column="40">(<argument><expr><name pos:line="307" pos:column="41">FERROR_XFER<pos:position pos:line="307" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="307" pos:column="54">errno<pos:position pos:line="307" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="61">"open %s failed"<pos:position pos:line="307" pos:column="77"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="308" pos:column="41">full_fname<pos:position pos:line="308" pos:column="51"/></name><argument_list pos:line="308" pos:column="51">(<argument><expr><name pos:line="308" pos:column="52">fname<pos:position pos:line="308" pos:column="57"/></name></expr></argument>)<pos:position pos:line="308" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="308" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="309" pos:column="26"/></block></then> <elseif pos:line="309" pos:column="27">else <if pos:line="309" pos:column="32">if <condition pos:line="309" pos:column="35">(<expr><name pos:line="309" pos:column="36">updating_basis_or_equiv<pos:position pos:line="309" pos:column="59"/></name></expr>)<pos:position pos:line="309" pos:column="60"/></condition><then pos:line="309" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="310" pos:column="33">cleanup_set<pos:position pos:line="310" pos:column="44"/></name><argument_list pos:line="310" pos:column="44">(<argument><expr><name pos:line="310" pos:column="45">NULL<pos:position pos:line="310" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="51">NULL<pos:position pos:line="310" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="57">file<pos:position pos:line="310" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="63">fd1<pos:position pos:line="310" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="68">fd2<pos:position pos:line="310" pos:column="71"/></name></expr></argument>)<pos:position pos:line="310" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="73"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="311" pos:column="18"/></block></then> <else pos:line="311" pos:column="19">else <block pos:line="311" pos:column="24">{
			<expr_stmt><expr><name pos:line="312" pos:column="25">fd2<pos:position pos:line="312" pos:column="28"/></name> <operator pos:line="312" pos:column="29">=<pos:position pos:line="312" pos:column="30"/></operator> <call><name pos:line="312" pos:column="31">open_tmpfile<pos:position pos:line="312" pos:column="43"/></name><argument_list pos:line="312" pos:column="43">(<argument><expr><name pos:line="312" pos:column="44">fnametmp<pos:position pos:line="312" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="54">fname<pos:position pos:line="312" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="61">file<pos:position pos:line="312" pos:column="65"/></name></expr></argument>)<pos:position pos:line="312" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="67"/></expr_stmt>
			<if pos:line="313" pos:column="25">if <condition pos:line="313" pos:column="28">(<expr><name pos:line="313" pos:column="29">fd2<pos:position pos:line="313" pos:column="32"/></name> <operator pos:line="313" pos:column="33">!=<pos:position pos:line="313" pos:column="35"/></operator> <operator pos:line="313" pos:column="36">-<pos:position pos:line="313" pos:column="37"/></operator><literal type="number" pos:line="313" pos:column="37">1<pos:position pos:line="313" pos:column="38"/></literal></expr>)<pos:position pos:line="313" pos:column="39"/></condition><then pos:line="313" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="314" pos:column="33">cleanup_set<pos:position pos:line="314" pos:column="44"/></name><argument_list pos:line="314" pos:column="44">(<argument><expr><name pos:line="314" pos:column="45">fnametmp<pos:position pos:line="314" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="55">partialptr<pos:position pos:line="314" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="67">file<pos:position pos:line="314" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="73">fd1<pos:position pos:line="314" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="78">fd2<pos:position pos:line="314" pos:column="81"/></name></expr></argument>)<pos:position pos:line="314" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="83"/></expr_stmt></block></then></if>
		}<pos:position pos:line="315" pos:column="18"/></block></else></if>

		<if pos:line="317" pos:column="17">if <condition pos:line="317" pos:column="20">(<expr><name pos:line="317" pos:column="21">fd2<pos:position pos:line="317" pos:column="24"/></name> <operator pos:line="317" pos:column="25">==<pos:position pos:line="317" pos:column="27"/></operator> <operator pos:line="317" pos:column="28">-<pos:position pos:line="317" pos:column="29"/></operator><literal type="number" pos:line="317" pos:column="29">1<pos:position pos:line="317" pos:column="30"/></literal></expr>)<pos:position pos:line="317" pos:column="31"/></condition><then pos:line="317" pos:column="31"> <block pos:line="317" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="318" pos:column="25">discard_receive_data<pos:position pos:line="318" pos:column="45"/></name><argument_list pos:line="318" pos:column="45">(<argument><expr><name pos:line="318" pos:column="46">f_in<pos:position pos:line="318" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="318" pos:column="52">F_LENGTH<pos:position pos:line="318" pos:column="60"/></name><argument_list pos:line="318" pos:column="60">(<argument><expr><name pos:line="318" pos:column="61">file<pos:position pos:line="318" pos:column="65"/></name></expr></argument>)<pos:position pos:line="318" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="318" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="68"/></expr_stmt>
			<if pos:line="319" pos:column="25">if <condition pos:line="319" pos:column="28">(<expr><name pos:line="319" pos:column="29">fd1<pos:position pos:line="319" pos:column="32"/></name> <operator pos:line="319" pos:column="33">!=<pos:position pos:line="319" pos:column="35"/></operator> <operator pos:line="319" pos:column="36">-<pos:position pos:line="319" pos:column="37"/></operator><literal type="number" pos:line="319" pos:column="37">1<pos:position pos:line="319" pos:column="38"/></literal></expr>)<pos:position pos:line="319" pos:column="39"/></condition><then pos:line="319" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="320" pos:column="33">close<pos:position pos:line="320" pos:column="38"/></name><argument_list pos:line="320" pos:column="38">(<argument><expr><name pos:line="320" pos:column="39">fd1<pos:position pos:line="320" pos:column="42"/></name></expr></argument>)<pos:position pos:line="320" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="44"/></expr_stmt></block></then></if>
			<if pos:line="321" pos:column="25">if <condition pos:line="321" pos:column="28">(<expr><name pos:line="321" pos:column="29">inc_recurse<pos:position pos:line="321" pos:column="40"/></name></expr>)<pos:position pos:line="321" pos:column="41"/></condition><then pos:line="321" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="322" pos:column="33">send_msg_int<pos:position pos:line="322" pos:column="45"/></name><argument_list pos:line="322" pos:column="45">(<argument><expr><name pos:line="322" pos:column="46">MSG_NO_SEND<pos:position pos:line="322" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="59">ndx<pos:position pos:line="322" pos:column="62"/></name></expr></argument>)<pos:position pos:line="322" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="64"/></expr_stmt></block></then></if>
			<continue pos:line="323" pos:column="25">continue;<pos:position pos:line="323" pos:column="34"/></continue>
		}<pos:position pos:line="324" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="326" pos:column="17">/* log the transfer */</comment>
		<if pos:line="327" pos:column="17">if <condition pos:line="327" pos:column="20">(<expr><name pos:line="327" pos:column="21">log_before_transfer<pos:position pos:line="327" pos:column="40"/></name></expr>)<pos:position pos:line="327" pos:column="41"/></condition><then pos:line="327" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="328" pos:column="25">log_item<pos:position pos:line="328" pos:column="33"/></name><argument_list pos:line="328" pos:column="33">(<argument><expr><name pos:line="328" pos:column="34">FCLIENT<pos:position pos:line="328" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="43">file<pos:position pos:line="328" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="49">iflags<pos:position pos:line="328" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="57">NULL<pos:position pos:line="328" pos:column="61"/></name></expr></argument>)<pos:position pos:line="328" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="63"/></expr_stmt></block></then>
		<elseif pos:line="329" pos:column="17">else <if pos:line="329" pos:column="22">if <condition pos:line="329" pos:column="25">(<expr><operator pos:line="329" pos:column="26">!<pos:position pos:line="329" pos:column="27"/></operator><name pos:line="329" pos:column="27">am_server<pos:position pos:line="329" pos:column="36"/></name> <operator pos:line="329" pos:column="37">&amp;&amp;<pos:position pos:line="329" pos:column="47"/></operator> <call><name pos:line="329" pos:column="40">INFO_GTE<pos:position pos:line="329" pos:column="48"/></name><argument_list pos:line="329" pos:column="48">(<argument><expr><name pos:line="329" pos:column="49">NAME<pos:position pos:line="329" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="329" pos:column="55">1<pos:position pos:line="329" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="57"/></argument_list></call> <operator pos:line="329" pos:column="58">&amp;&amp;<pos:position pos:line="329" pos:column="68"/></operator> <call><name pos:line="329" pos:column="61">INFO_EQ<pos:position pos:line="329" pos:column="68"/></name><argument_list pos:line="329" pos:column="68">(<argument><expr><name pos:line="329" pos:column="69">PROGRESS<pos:position pos:line="329" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="329" pos:column="79">1<pos:position pos:line="329" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="329" pos:column="82"/></condition><then pos:line="329" pos:column="82">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="330" pos:column="25">rprintf<pos:position pos:line="330" pos:column="32"/></name><argument_list pos:line="330" pos:column="32">(<argument><expr><name pos:line="330" pos:column="33">FINFO<pos:position pos:line="330" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="330" pos:column="40">"%s\n"<pos:position pos:line="330" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="330" pos:column="48">fname<pos:position pos:line="330" pos:column="53"/></name></expr></argument>)<pos:position pos:line="330" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="55"/></expr_stmt></block></then></if></elseif></if>

		<comment type="block" pos:line="332" pos:column="17">/* recv file data */</comment>
		<expr_stmt><expr><name pos:line="333" pos:column="17">recv_ok<pos:position pos:line="333" pos:column="24"/></name> <operator pos:line="333" pos:column="25">=<pos:position pos:line="333" pos:column="26"/></operator> <call><name pos:line="333" pos:column="27">receive_data<pos:position pos:line="333" pos:column="39"/></name><argument_list pos:line="333" pos:column="39">(<argument><expr><name pos:line="333" pos:column="40">f_in<pos:position pos:line="333" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="333" pos:column="46">fnamecmp<pos:position pos:line="333" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="333" pos:column="56">fd1<pos:position pos:line="333" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="333" pos:column="61">st<pos:position pos:line="333" pos:column="63"/></name><operator pos:line="333" pos:column="63">.<pos:position pos:line="333" pos:column="64"/></operator><name pos:line="333" pos:column="64">st_size<pos:position pos:line="333" pos:column="71"/></name></name></expr></argument>,
				       <argument><expr><name pos:line="334" pos:column="40">fname<pos:position pos:line="334" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="47">fd2<pos:position pos:line="334" pos:column="50"/></name></expr></argument>, <argument><expr><call><name pos:line="334" pos:column="52">F_LENGTH<pos:position pos:line="334" pos:column="60"/></name><argument_list pos:line="334" pos:column="60">(<argument><expr><name pos:line="334" pos:column="61">file<pos:position pos:line="334" pos:column="65"/></name></expr></argument>)<pos:position pos:line="334" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="334" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="68"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="336" pos:column="17">log_item<pos:position pos:line="336" pos:column="25"/></name><argument_list pos:line="336" pos:column="25">(<argument><expr><name pos:line="336" pos:column="26">log_code<pos:position pos:line="336" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="36">file<pos:position pos:line="336" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="42">iflags<pos:position pos:line="336" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="50">NULL<pos:position pos:line="336" pos:column="54"/></name></expr></argument>)<pos:position pos:line="336" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="56"/></expr_stmt>

		<if pos:line="338" pos:column="17">if <condition pos:line="338" pos:column="20">(<expr><name pos:line="338" pos:column="21">fd1<pos:position pos:line="338" pos:column="24"/></name> <operator pos:line="338" pos:column="25">!=<pos:position pos:line="338" pos:column="27"/></operator> <operator pos:line="338" pos:column="28">-<pos:position pos:line="338" pos:column="29"/></operator><literal type="number" pos:line="338" pos:column="29">1<pos:position pos:line="338" pos:column="30"/></literal></expr>)<pos:position pos:line="338" pos:column="31"/></condition><then pos:line="338" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="339" pos:column="25">close<pos:position pos:line="339" pos:column="30"/></name><argument_list pos:line="339" pos:column="30">(<argument><expr><name pos:line="339" pos:column="31">fd1<pos:position pos:line="339" pos:column="34"/></name></expr></argument>)<pos:position pos:line="339" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="36"/></expr_stmt></block></then></if>
		<if pos:line="340" pos:column="17">if <condition pos:line="340" pos:column="20">(<expr><call><name pos:line="340" pos:column="21">close<pos:position pos:line="340" pos:column="26"/></name><argument_list pos:line="340" pos:column="26">(<argument><expr><name pos:line="340" pos:column="27">fd2<pos:position pos:line="340" pos:column="30"/></name></expr></argument>)<pos:position pos:line="340" pos:column="31"/></argument_list></call> <operator pos:line="340" pos:column="32">&lt;<pos:position pos:line="340" pos:column="36"/></operator> <literal type="number" pos:line="340" pos:column="34">0<pos:position pos:line="340" pos:column="35"/></literal></expr>)<pos:position pos:line="340" pos:column="36"/></condition><then pos:line="340" pos:column="36"> <block pos:line="340" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="341" pos:column="25">rsyserr<pos:position pos:line="341" pos:column="32"/></name><argument_list pos:line="341" pos:column="32">(<argument><expr><name pos:line="341" pos:column="33">FERROR<pos:position pos:line="341" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="41">errno<pos:position pos:line="341" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="341" pos:column="48">"close failed on %s"<pos:position pos:line="341" pos:column="68"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="342" pos:column="33">full_fname<pos:position pos:line="342" pos:column="43"/></name><argument_list pos:line="342" pos:column="43">(<argument><expr><name pos:line="342" pos:column="44">fnametmp<pos:position pos:line="342" pos:column="52"/></name></expr></argument>)<pos:position pos:line="342" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="342" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="343" pos:column="25">exit_cleanup<pos:position pos:line="343" pos:column="37"/></name><argument_list pos:line="343" pos:column="37">(<argument><expr><name pos:line="343" pos:column="38">RERR_FILEIO<pos:position pos:line="343" pos:column="49"/></name></expr></argument>)<pos:position pos:line="343" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="344" pos:column="18"/></block></then></if>

		<if pos:line="346" pos:column="17">if <condition pos:line="346" pos:column="20">(<expr><operator pos:line="346" pos:column="21">(<pos:position pos:line="346" pos:column="22"/></operator><name pos:line="346" pos:column="22">recv_ok<pos:position pos:line="346" pos:column="29"/></name> <operator pos:line="346" pos:column="30">&amp;&amp;<pos:position pos:line="346" pos:column="40"/></operator> <operator pos:line="346" pos:column="33">(<pos:position pos:line="346" pos:column="34"/></operator><operator pos:line="346" pos:column="34">!<pos:position pos:line="346" pos:column="35"/></operator><name pos:line="346" pos:column="35">delay_updates<pos:position pos:line="346" pos:column="48"/></name> <operator pos:line="346" pos:column="49">||<pos:position pos:line="346" pos:column="51"/></operator> <operator pos:line="346" pos:column="52">!<pos:position pos:line="346" pos:column="53"/></operator><name pos:line="346" pos:column="53">partialptr<pos:position pos:line="346" pos:column="63"/></name><operator pos:line="346" pos:column="63">)<pos:position pos:line="346" pos:column="64"/></operator><operator pos:line="346" pos:column="64">)<pos:position pos:line="346" pos:column="65"/></operator> <operator pos:line="346" pos:column="66">||<pos:position pos:line="346" pos:column="68"/></operator> <name pos:line="346" pos:column="69">inplace<pos:position pos:line="346" pos:column="76"/></name></expr>)<pos:position pos:line="346" pos:column="77"/></condition><then pos:line="346" pos:column="77"> <block pos:line="346" pos:column="78">{
			<if pos:line="347" pos:column="25">if <condition pos:line="347" pos:column="28">(<expr><name pos:line="347" pos:column="29">partialptr<pos:position pos:line="347" pos:column="39"/></name> <operator pos:line="347" pos:column="40">==<pos:position pos:line="347" pos:column="42"/></operator> <name pos:line="347" pos:column="43">fname<pos:position pos:line="347" pos:column="48"/></name></expr>)<pos:position pos:line="347" pos:column="49"/></condition><then pos:line="347" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name pos:line="348" pos:column="33">partialptr<pos:position pos:line="348" pos:column="43"/></name> <operator pos:line="348" pos:column="44">=<pos:position pos:line="348" pos:column="45"/></operator> <name pos:line="348" pos:column="46">NULL<pos:position pos:line="348" pos:column="50"/></name></expr>;<pos:position pos:line="348" pos:column="51"/></expr_stmt></block></then></if>
			<if pos:line="349" pos:column="25">if <condition pos:line="349" pos:column="28">(<expr><operator pos:line="349" pos:column="29">!<pos:position pos:line="349" pos:column="30"/></operator><call><name pos:line="349" pos:column="30">finish_transfer<pos:position pos:line="349" pos:column="45"/></name><argument_list pos:line="349" pos:column="45">(<argument><expr><name pos:line="349" pos:column="46">fname<pos:position pos:line="349" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="53">fnametmp<pos:position pos:line="349" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="63">fnamecmp<pos:position pos:line="349" pos:column="71"/></name></expr></argument>,
					     <argument><expr><name pos:line="350" pos:column="46">partialptr<pos:position pos:line="350" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="58">file<pos:position pos:line="350" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="64">recv_ok<pos:position pos:line="350" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="350" pos:column="73">1<pos:position pos:line="350" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="350" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="350" pos:column="76"/></condition><then pos:line="350" pos:column="76">
				<block type="pseudo"><expr_stmt><expr><name pos:line="351" pos:column="33">recv_ok<pos:position pos:line="351" pos:column="40"/></name> <operator pos:line="351" pos:column="41">=<pos:position pos:line="351" pos:column="42"/></operator> <operator pos:line="351" pos:column="43">-<pos:position pos:line="351" pos:column="44"/></operator><literal type="number" pos:line="351" pos:column="44">1<pos:position pos:line="351" pos:column="45"/></literal></expr>;<pos:position pos:line="351" pos:column="46"/></expr_stmt></block></then>
			<elseif pos:line="352" pos:column="25">else <if pos:line="352" pos:column="30">if <condition pos:line="352" pos:column="33">(<expr><name pos:line="352" pos:column="34">fnamecmp<pos:position pos:line="352" pos:column="42"/></name> <operator pos:line="352" pos:column="43">==<pos:position pos:line="352" pos:column="45"/></operator> <name pos:line="352" pos:column="46">partialptr<pos:position pos:line="352" pos:column="56"/></name></expr>)<pos:position pos:line="352" pos:column="57"/></condition><then pos:line="352" pos:column="57"> <block pos:line="352" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="353" pos:column="33">do_unlink<pos:position pos:line="353" pos:column="42"/></name><argument_list pos:line="353" pos:column="42">(<argument><expr><name pos:line="353" pos:column="43">partialptr<pos:position pos:line="353" pos:column="53"/></name></expr></argument>)<pos:position pos:line="353" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="354" pos:column="33">handle_partial_dir<pos:position pos:line="354" pos:column="51"/></name><argument_list pos:line="354" pos:column="51">(<argument><expr><name pos:line="354" pos:column="52">partialptr<pos:position pos:line="354" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="354" pos:column="64">PDIR_DELETE<pos:position pos:line="354" pos:column="75"/></name></expr></argument>)<pos:position pos:line="354" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="355" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="356" pos:column="18"/></block></then> <elseif pos:line="356" pos:column="19">else <if pos:line="356" pos:column="24">if <condition pos:line="356" pos:column="27">(<expr><name pos:line="356" pos:column="28">keep_partial<pos:position pos:line="356" pos:column="40"/></name> <operator pos:line="356" pos:column="41">&amp;&amp;<pos:position pos:line="356" pos:column="51"/></operator> <name pos:line="356" pos:column="44">partialptr<pos:position pos:line="356" pos:column="54"/></name></expr>)<pos:position pos:line="356" pos:column="55"/></condition><then pos:line="356" pos:column="55"> <block pos:line="356" pos:column="56">{
			<if pos:line="357" pos:column="25">if <condition pos:line="357" pos:column="28">(<expr><operator pos:line="357" pos:column="29">!<pos:position pos:line="357" pos:column="30"/></operator><call><name pos:line="357" pos:column="30">handle_partial_dir<pos:position pos:line="357" pos:column="48"/></name><argument_list pos:line="357" pos:column="48">(<argument><expr><name pos:line="357" pos:column="49">partialptr<pos:position pos:line="357" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="357" pos:column="61">PDIR_CREATE<pos:position pos:line="357" pos:column="72"/></name></expr></argument>)<pos:position pos:line="357" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="357" pos:column="74"/></condition><then pos:line="357" pos:column="74"> <block pos:line="357" pos:column="75">{
				<expr_stmt><expr><call><name pos:line="358" pos:column="33">rprintf<pos:position pos:line="358" pos:column="40"/></name><argument_list pos:line="358" pos:column="40">(<argument><expr><name pos:line="358" pos:column="41">FERROR<pos:position pos:line="358" pos:column="47"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="359" pos:column="37">"Unable to create partial-dir for %s -- discarding %s.\n"<pos:position pos:line="359" pos:column="94"/></literal></expr></argument>,
				    <argument><expr><ternary><condition><expr><name pos:line="360" pos:column="37">local_name<pos:position pos:line="360" pos:column="47"/></name></expr> ?<pos:position pos:line="360" pos:column="49"/></condition><then pos:line="360" pos:column="49"> <expr><name pos:line="360" pos:column="50">local_name<pos:position pos:line="360" pos:column="60"/></name></expr> <pos:position pos:line="360" pos:column="61"/></then><else pos:line="360" pos:column="61">: <expr><call><name pos:line="360" pos:column="63">f_name<pos:position pos:line="360" pos:column="69"/></name><argument_list pos:line="360" pos:column="69">(<argument><expr><name pos:line="360" pos:column="70">file<pos:position pos:line="360" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="360" pos:column="76">NULL<pos:position pos:line="360" pos:column="80"/></name></expr></argument>)<pos:position pos:line="360" pos:column="81"/></argument_list></call></expr></else></ternary></expr></argument>,
				    <argument><expr><ternary><condition><expr><name pos:line="361" pos:column="37">recv_ok<pos:position pos:line="361" pos:column="44"/></name></expr> ?<pos:position pos:line="361" pos:column="46"/></condition><then pos:line="361" pos:column="46"> <expr><literal type="string" pos:line="361" pos:column="47">"completed file"<pos:position pos:line="361" pos:column="63"/></literal></expr> <pos:position pos:line="361" pos:column="64"/></then><else pos:line="361" pos:column="64">: <expr><literal type="string" pos:line="361" pos:column="66">"partial file"<pos:position pos:line="361" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="361" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="82"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="362" pos:column="33">do_unlink<pos:position pos:line="362" pos:column="42"/></name><argument_list pos:line="362" pos:column="42">(<argument><expr><name pos:line="362" pos:column="43">fnametmp<pos:position pos:line="362" pos:column="51"/></name></expr></argument>)<pos:position pos:line="362" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="363" pos:column="33">recv_ok<pos:position pos:line="363" pos:column="40"/></name> <operator pos:line="363" pos:column="41">=<pos:position pos:line="363" pos:column="42"/></operator> <operator pos:line="363" pos:column="43">-<pos:position pos:line="363" pos:column="44"/></operator><literal type="number" pos:line="363" pos:column="44">1<pos:position pos:line="363" pos:column="45"/></literal></expr>;<pos:position pos:line="363" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="364" pos:column="26"/></block></then> <elseif pos:line="364" pos:column="27">else <if pos:line="364" pos:column="32">if <condition pos:line="364" pos:column="35">(<expr><operator pos:line="364" pos:column="36">!<pos:position pos:line="364" pos:column="37"/></operator><call><name pos:line="364" pos:column="37">finish_transfer<pos:position pos:line="364" pos:column="52"/></name><argument_list pos:line="364" pos:column="52">(<argument><expr><name pos:line="364" pos:column="53">partialptr<pos:position pos:line="364" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="65">fnametmp<pos:position pos:line="364" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="75">fnamecmp<pos:position pos:line="364" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="364" pos:column="85">NULL<pos:position pos:line="364" pos:column="89"/></name></expr></argument>,
						    <argument><expr><name pos:line="365" pos:column="53">file<pos:position pos:line="365" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="59">recv_ok<pos:position pos:line="365" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="365" pos:column="68">!<pos:position pos:line="365" pos:column="69"/></operator><name pos:line="365" pos:column="69">partial_dir<pos:position pos:line="365" pos:column="80"/></name></expr></argument>)<pos:position pos:line="365" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="365" pos:column="82"/></condition><then pos:line="365" pos:column="82">
				<block type="pseudo"><expr_stmt><expr><name pos:line="366" pos:column="33">recv_ok<pos:position pos:line="366" pos:column="40"/></name> <operator pos:line="366" pos:column="41">=<pos:position pos:line="366" pos:column="42"/></operator> <operator pos:line="366" pos:column="43">-<pos:position pos:line="366" pos:column="44"/></operator><literal type="number" pos:line="366" pos:column="44">1<pos:position pos:line="366" pos:column="45"/></literal></expr>;<pos:position pos:line="366" pos:column="46"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="367" pos:column="25">else <if pos:line="367" pos:column="30">if <condition pos:line="367" pos:column="33">(<expr><name pos:line="367" pos:column="34">delay_updates<pos:position pos:line="367" pos:column="47"/></name> <operator pos:line="367" pos:column="48">&amp;&amp;<pos:position pos:line="367" pos:column="58"/></operator> <name pos:line="367" pos:column="51">recv_ok<pos:position pos:line="367" pos:column="58"/></name></expr>)<pos:position pos:line="367" pos:column="59"/></condition><then pos:line="367" pos:column="59"> <block pos:line="367" pos:column="60">{
				<expr_stmt><expr><call><name pos:line="368" pos:column="33">bitbag_set_bit<pos:position pos:line="368" pos:column="47"/></name><argument_list pos:line="368" pos:column="47">(<argument><expr><name pos:line="368" pos:column="48">delayed_bits<pos:position pos:line="368" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="62">ndx<pos:position pos:line="368" pos:column="65"/></name></expr></argument>)<pos:position pos:line="368" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><name pos:line="369" pos:column="33">recv_ok<pos:position pos:line="369" pos:column="40"/></name> <operator pos:line="369" pos:column="41">=<pos:position pos:line="369" pos:column="42"/></operator> <literal type="number" pos:line="369" pos:column="43">2<pos:position pos:line="369" pos:column="44"/></literal></expr>;<pos:position pos:line="369" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="370" pos:column="26"/></block></then></if></elseif> <else pos:line="370" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="371" pos:column="33">partialptr<pos:position pos:line="371" pos:column="43"/></name> <operator pos:line="371" pos:column="44">=<pos:position pos:line="371" pos:column="45"/></operator> <name pos:line="371" pos:column="46">NULL<pos:position pos:line="371" pos:column="50"/></name></expr>;<pos:position pos:line="371" pos:column="51"/></expr_stmt></block></else></if>
		}<pos:position pos:line="372" pos:column="18"/></block></then></if></elseif> <else pos:line="372" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="373" pos:column="25">do_unlink<pos:position pos:line="373" pos:column="34"/></name><argument_list pos:line="373" pos:column="34">(<argument><expr><name pos:line="373" pos:column="35">fnametmp<pos:position pos:line="373" pos:column="43"/></name></expr></argument>)<pos:position pos:line="373" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="45"/></expr_stmt></block></else></if>

		<expr_stmt><expr><call><name pos:line="375" pos:column="17">cleanup_disable<pos:position pos:line="375" pos:column="32"/></name><argument_list pos:line="375" pos:column="32">()<pos:position pos:line="375" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="35"/></expr_stmt>

		<if pos:line="377" pos:column="17">if <condition pos:line="377" pos:column="20">(<expr><name pos:line="377" pos:column="21">read_batch<pos:position pos:line="377" pos:column="31"/></name></expr>)<pos:position pos:line="377" pos:column="32"/></condition><then pos:line="377" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="378" pos:column="25">file<pos:position pos:line="378" pos:column="29"/></name><operator pos:line="378" pos:column="29">-&gt;<pos:position pos:line="378" pos:column="34"/></operator><name pos:line="378" pos:column="31">flags<pos:position pos:line="378" pos:column="36"/></name></name> <operator pos:line="378" pos:column="37">|=<pos:position pos:line="378" pos:column="39"/></operator> <name pos:line="378" pos:column="40">FLAG_FILE_SENT<pos:position pos:line="378" pos:column="54"/></name></expr>;<pos:position pos:line="378" pos:column="55"/></expr_stmt></block></then></if>

		<switch pos:line="380" pos:column="17">switch <condition pos:line="380" pos:column="24">(<expr><name pos:line="380" pos:column="25">recv_ok<pos:position pos:line="380" pos:column="32"/></name></expr>)<pos:position pos:line="380" pos:column="33"/></condition> <block pos:line="380" pos:column="34">{
		<case pos:line="381" pos:column="17">case <expr><literal type="number" pos:line="381" pos:column="22">2<pos:position pos:line="381" pos:column="23"/></literal></expr>:<pos:position pos:line="381" pos:column="24"/></case>
			<break pos:line="382" pos:column="25">break;<pos:position pos:line="382" pos:column="31"/></break>
		<case pos:line="383" pos:column="17">case <expr><literal type="number" pos:line="383" pos:column="22">1<pos:position pos:line="383" pos:column="23"/></literal></expr>:<pos:position pos:line="383" pos:column="24"/></case>
			<if pos:line="384" pos:column="25">if <condition pos:line="384" pos:column="28">(<expr><name pos:line="384" pos:column="29">remove_source_files<pos:position pos:line="384" pos:column="48"/></name> <operator pos:line="384" pos:column="49">||<pos:position pos:line="384" pos:column="51"/></operator> <name pos:line="384" pos:column="52">inc_recurse<pos:position pos:line="384" pos:column="63"/></name>
			 <operator pos:line="385" pos:column="26">||<pos:position pos:line="385" pos:column="28"/></operator> <operator pos:line="385" pos:column="29">(<pos:position pos:line="385" pos:column="30"/></operator><name pos:line="385" pos:column="30">preserve_hard_links<pos:position pos:line="385" pos:column="49"/></name> <operator pos:line="385" pos:column="50">&amp;&amp;<pos:position pos:line="385" pos:column="60"/></operator> <call><name pos:line="385" pos:column="53">F_IS_HLINKED<pos:position pos:line="385" pos:column="65"/></name><argument_list pos:line="385" pos:column="65">(<argument><expr><name pos:line="385" pos:column="66">file<pos:position pos:line="385" pos:column="70"/></name></expr></argument>)<pos:position pos:line="385" pos:column="71"/></argument_list></call><operator pos:line="385" pos:column="71">)<pos:position pos:line="385" pos:column="72"/></operator></expr>)<pos:position pos:line="385" pos:column="73"/></condition><then pos:line="385" pos:column="73">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="386" pos:column="33">send_msg_int<pos:position pos:line="386" pos:column="45"/></name><argument_list pos:line="386" pos:column="45">(<argument><expr><name pos:line="386" pos:column="46">MSG_SUCCESS<pos:position pos:line="386" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="59">ndx<pos:position pos:line="386" pos:column="62"/></name></expr></argument>)<pos:position pos:line="386" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="64"/></expr_stmt></block></then></if>
			<break pos:line="387" pos:column="25">break;<pos:position pos:line="387" pos:column="31"/></break>
		<case pos:line="388" pos:column="17">case <expr><literal type="number" pos:line="388" pos:column="22">0<pos:position pos:line="388" pos:column="23"/></literal></expr>:<pos:position pos:line="388" pos:column="24"/></case> <block pos:line="388" pos:column="25">{
			<decl_stmt><decl><type><name><name pos:line="389" pos:column="25">enum<pos:position pos:line="389" pos:column="29"/></name> <name pos:line="389" pos:column="30">logcode<pos:position pos:line="389" pos:column="37"/></name></name></type> <name pos:line="389" pos:column="38">msgtype<pos:position pos:line="389" pos:column="45"/></name> <init pos:line="389" pos:column="46">= <expr><ternary><condition><expr><name pos:line="389" pos:column="48">redoing<pos:position pos:line="389" pos:column="55"/></name></expr> ?<pos:position pos:line="389" pos:column="57"/></condition><then pos:line="389" pos:column="57"> <expr><name pos:line="389" pos:column="58">FERROR_XFER<pos:position pos:line="389" pos:column="69"/></name></expr> <pos:position pos:line="389" pos:column="70"/></then><else pos:line="389" pos:column="70">: <expr><name pos:line="389" pos:column="72">FWARNING<pos:position pos:line="389" pos:column="80"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="389" pos:column="81"/></decl_stmt>
			<if pos:line="390" pos:column="25">if <condition pos:line="390" pos:column="28">(<expr><name pos:line="390" pos:column="29">msgtype<pos:position pos:line="390" pos:column="36"/></name> <operator pos:line="390" pos:column="37">==<pos:position pos:line="390" pos:column="39"/></operator> <name pos:line="390" pos:column="40">FERROR_XFER<pos:position pos:line="390" pos:column="51"/></name> <operator pos:line="390" pos:column="52">||<pos:position pos:line="390" pos:column="54"/></operator> <call><name pos:line="390" pos:column="55">INFO_GTE<pos:position pos:line="390" pos:column="63"/></name><argument_list pos:line="390" pos:column="63">(<argument><expr><name pos:line="390" pos:column="64">NAME<pos:position pos:line="390" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="390" pos:column="70">1<pos:position pos:line="390" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="390" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="390" pos:column="73"/></condition><then pos:line="390" pos:column="73"> <block pos:line="390" pos:column="74">{
				<decl_stmt><decl><type><name pos:line="391" pos:column="33">char<pos:position pos:line="391" pos:column="37"/></name> <modifier pos:line="391" pos:column="38">*<pos:position pos:line="391" pos:column="39"/></modifier></type><name pos:line="391" pos:column="39">errstr<pos:position pos:line="391" pos:column="45"/></name></decl>, <modifier pos:line="391" pos:column="47">*<pos:position pos:line="391" pos:column="48"/></modifier><decl><type ref="prev"/><name pos:line="391" pos:column="48">redostr<pos:position pos:line="391" pos:column="55"/></name></decl>, <modifier pos:line="391" pos:column="57">*<pos:position pos:line="391" pos:column="58"/></modifier><decl><type ref="prev"/><name pos:line="391" pos:column="58">keptstr<pos:position pos:line="391" pos:column="65"/></name></decl>;<pos:position pos:line="391" pos:column="66"/></decl_stmt>
				<if pos:line="392" pos:column="33">if <condition pos:line="392" pos:column="36">(<expr><operator pos:line="392" pos:column="37">!<pos:position pos:line="392" pos:column="38"/></operator><operator pos:line="392" pos:column="38">(<pos:position pos:line="392" pos:column="39"/></operator><name pos:line="392" pos:column="39">keep_partial<pos:position pos:line="392" pos:column="51"/></name> <operator pos:line="392" pos:column="52">&amp;&amp;<pos:position pos:line="392" pos:column="62"/></operator> <name pos:line="392" pos:column="55">partialptr<pos:position pos:line="392" pos:column="65"/></name><operator pos:line="392" pos:column="65">)<pos:position pos:line="392" pos:column="66"/></operator> <operator pos:line="392" pos:column="67">&amp;&amp;<pos:position pos:line="392" pos:column="77"/></operator> <operator pos:line="392" pos:column="70">!<pos:position pos:line="392" pos:column="71"/></operator><name pos:line="392" pos:column="71">inplace<pos:position pos:line="392" pos:column="78"/></name></expr>)<pos:position pos:line="392" pos:column="79"/></condition><then pos:line="392" pos:column="79">
					<block type="pseudo"><expr_stmt><expr><name pos:line="393" pos:column="41">keptstr<pos:position pos:line="393" pos:column="48"/></name> <operator pos:line="393" pos:column="49">=<pos:position pos:line="393" pos:column="50"/></operator> <literal type="string" pos:line="393" pos:column="51">"discarded"<pos:position pos:line="393" pos:column="62"/></literal></expr>;<pos:position pos:line="393" pos:column="63"/></expr_stmt></block></then>
				<elseif pos:line="394" pos:column="33">else <if pos:line="394" pos:column="38">if <condition pos:line="394" pos:column="41">(<expr><name pos:line="394" pos:column="42">partial_dir<pos:position pos:line="394" pos:column="53"/></name></expr>)<pos:position pos:line="394" pos:column="54"/></condition><then pos:line="394" pos:column="54">
					<block type="pseudo"><expr_stmt><expr><name pos:line="395" pos:column="41">keptstr<pos:position pos:line="395" pos:column="48"/></name> <operator pos:line="395" pos:column="49">=<pos:position pos:line="395" pos:column="50"/></operator> <literal type="string" pos:line="395" pos:column="51">"put into partial-dir"<pos:position pos:line="395" pos:column="73"/></literal></expr>;<pos:position pos:line="395" pos:column="74"/></expr_stmt></block></then></if></elseif>
				<else pos:line="396" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="397" pos:column="41">keptstr<pos:position pos:line="397" pos:column="48"/></name> <operator pos:line="397" pos:column="49">=<pos:position pos:line="397" pos:column="50"/></operator> <literal type="string" pos:line="397" pos:column="51">"retained"<pos:position pos:line="397" pos:column="61"/></literal></expr>;<pos:position pos:line="397" pos:column="62"/></expr_stmt></block></else></if>
				<if pos:line="398" pos:column="33">if <condition pos:line="398" pos:column="36">(<expr><name pos:line="398" pos:column="37">msgtype<pos:position pos:line="398" pos:column="44"/></name> <operator pos:line="398" pos:column="45">==<pos:position pos:line="398" pos:column="47"/></operator> <name pos:line="398" pos:column="48">FERROR_XFER<pos:position pos:line="398" pos:column="59"/></name></expr>)<pos:position pos:line="398" pos:column="60"/></condition><then pos:line="398" pos:column="60"> <block pos:line="398" pos:column="61">{
					<expr_stmt><expr><name pos:line="399" pos:column="41">errstr<pos:position pos:line="399" pos:column="47"/></name> <operator pos:line="399" pos:column="48">=<pos:position pos:line="399" pos:column="49"/></operator> <literal type="string" pos:line="399" pos:column="50">"ERROR"<pos:position pos:line="399" pos:column="57"/></literal></expr>;<pos:position pos:line="399" pos:column="58"/></expr_stmt>
					<expr_stmt><expr><name pos:line="400" pos:column="41">redostr<pos:position pos:line="400" pos:column="48"/></name> <operator pos:line="400" pos:column="49">=<pos:position pos:line="400" pos:column="50"/></operator> <literal type="string" pos:line="400" pos:column="51">""<pos:position pos:line="400" pos:column="53"/></literal></expr>;<pos:position pos:line="400" pos:column="54"/></expr_stmt>
				}<pos:position pos:line="401" pos:column="34"/></block></then> <else pos:line="401" pos:column="35">else <block pos:line="401" pos:column="40">{
					<expr_stmt><expr><name pos:line="402" pos:column="41">errstr<pos:position pos:line="402" pos:column="47"/></name> <operator pos:line="402" pos:column="48">=<pos:position pos:line="402" pos:column="49"/></operator> <literal type="string" pos:line="402" pos:column="50">"WARNING"<pos:position pos:line="402" pos:column="59"/></literal></expr>;<pos:position pos:line="402" pos:column="60"/></expr_stmt>
					<expr_stmt><expr><name pos:line="403" pos:column="41">redostr<pos:position pos:line="403" pos:column="48"/></name> <operator pos:line="403" pos:column="49">=<pos:position pos:line="403" pos:column="50"/></operator> <ternary><condition><expr><name pos:line="403" pos:column="51">read_batch<pos:position pos:line="403" pos:column="61"/></name></expr> ?<pos:position pos:line="403" pos:column="63"/></condition><then pos:line="403" pos:column="63"> <expr><literal type="string" pos:line="403" pos:column="64">" (may try again)"<pos:position pos:line="403" pos:column="82"/></literal></expr>
							     <pos:position pos:line="404" pos:column="13"/></then><else pos:line="404" pos:column="62">: <expr><literal type="string" pos:line="404" pos:column="64">" (will try again)"<pos:position pos:line="404" pos:column="83"/></literal></expr></else></ternary></expr>;<pos:position pos:line="404" pos:column="84"/></expr_stmt>
				}<pos:position pos:line="405" pos:column="34"/></block></else></if>
				<expr_stmt><expr><call><name pos:line="406" pos:column="33">rprintf<pos:position pos:line="406" pos:column="40"/></name><argument_list pos:line="406" pos:column="40">(<argument><expr><name pos:line="406" pos:column="41">msgtype<pos:position pos:line="406" pos:column="48"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="407" pos:column="41">"%s: %s failed verification -- update %s%s.\n"<pos:position pos:line="407" pos:column="87"/></literal></expr></argument>,
					<argument><expr><name pos:line="408" pos:column="41">errstr<pos:position pos:line="408" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="408" pos:column="49">local_name<pos:position pos:line="408" pos:column="59"/></name></expr> ?<pos:position pos:line="408" pos:column="61"/></condition><then pos:line="408" pos:column="61"> <expr><call><name pos:line="408" pos:column="62">f_name<pos:position pos:line="408" pos:column="68"/></name><argument_list pos:line="408" pos:column="68">(<argument><expr><name pos:line="408" pos:column="69">file<pos:position pos:line="408" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="408" pos:column="75">NULL<pos:position pos:line="408" pos:column="79"/></name></expr></argument>)<pos:position pos:line="408" pos:column="80"/></argument_list></call></expr> <pos:position pos:line="408" pos:column="81"/></then><else pos:line="408" pos:column="81">: <expr><name pos:line="408" pos:column="83">fname<pos:position pos:line="408" pos:column="88"/></name></expr></else></ternary></expr></argument>,
					<argument><expr><name pos:line="409" pos:column="41">keptstr<pos:position pos:line="409" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="50">redostr<pos:position pos:line="409" pos:column="57"/></name></expr></argument>)<pos:position pos:line="409" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="410" pos:column="26"/></block></then></if>
			<if pos:line="411" pos:column="25">if <condition pos:line="411" pos:column="28">(<expr><operator pos:line="411" pos:column="29">!<pos:position pos:line="411" pos:column="30"/></operator><name pos:line="411" pos:column="30">redoing<pos:position pos:line="411" pos:column="37"/></name></expr>)<pos:position pos:line="411" pos:column="38"/></condition><then pos:line="411" pos:column="38"> <block pos:line="411" pos:column="39">{
				<if pos:line="412" pos:column="33">if <condition pos:line="412" pos:column="36">(<expr><name pos:line="412" pos:column="37">read_batch<pos:position pos:line="412" pos:column="47"/></name></expr>)<pos:position pos:line="412" pos:column="48"/></condition><then pos:line="412" pos:column="48">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="413" pos:column="41">flist_ndx_push<pos:position pos:line="413" pos:column="55"/></name><argument_list pos:line="413" pos:column="55">(<argument><expr><operator pos:line="413" pos:column="56">&amp;<pos:position pos:line="413" pos:column="61"/></operator><name pos:line="413" pos:column="57">batch_redo_list<pos:position pos:line="413" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="413" pos:column="74">ndx<pos:position pos:line="413" pos:column="77"/></name></expr></argument>)<pos:position pos:line="413" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="79"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="414" pos:column="33">send_msg_int<pos:position pos:line="414" pos:column="45"/></name><argument_list pos:line="414" pos:column="45">(<argument><expr><name pos:line="414" pos:column="46">MSG_REDO<pos:position pos:line="414" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="414" pos:column="56">ndx<pos:position pos:line="414" pos:column="59"/></name></expr></argument>)<pos:position pos:line="414" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="414" pos:column="61"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="415" pos:column="33">file<pos:position pos:line="415" pos:column="37"/></name><operator pos:line="415" pos:column="37">-&gt;<pos:position pos:line="415" pos:column="42"/></operator><name pos:line="415" pos:column="39">flags<pos:position pos:line="415" pos:column="44"/></name></name> <operator pos:line="415" pos:column="45">|=<pos:position pos:line="415" pos:column="47"/></operator> <name pos:line="415" pos:column="48">FLAG_FILE_SENT<pos:position pos:line="415" pos:column="62"/></name></expr>;<pos:position pos:line="415" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="416" pos:column="26"/></block></then> <elseif pos:line="416" pos:column="27">else <if pos:line="416" pos:column="32">if <condition pos:line="416" pos:column="35">(<expr><name pos:line="416" pos:column="36">inc_recurse<pos:position pos:line="416" pos:column="47"/></name></expr>)<pos:position pos:line="416" pos:column="48"/></condition><then pos:line="416" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="417" pos:column="33">send_msg_int<pos:position pos:line="417" pos:column="45"/></name><argument_list pos:line="417" pos:column="45">(<argument><expr><name pos:line="417" pos:column="46">MSG_NO_SEND<pos:position pos:line="417" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="417" pos:column="59">ndx<pos:position pos:line="417" pos:column="62"/></name></expr></argument>)<pos:position pos:line="417" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="64"/></expr_stmt></block></then></if></elseif></if>
			<break pos:line="418" pos:column="25">break;<pos:position pos:line="418" pos:column="31"/></break>
		    }<pos:position pos:line="419" pos:column="22"/></block>
		<case pos:line="420" pos:column="17">case <expr><operator pos:line="420" pos:column="22">-<pos:position pos:line="420" pos:column="23"/></operator><literal type="number" pos:line="420" pos:column="23">1<pos:position pos:line="420" pos:column="24"/></literal></expr>:<pos:position pos:line="420" pos:column="25"/></case>
			<if pos:line="421" pos:column="25">if <condition pos:line="421" pos:column="28">(<expr><name pos:line="421" pos:column="29">inc_recurse<pos:position pos:line="421" pos:column="40"/></name></expr>)<pos:position pos:line="421" pos:column="41"/></condition><then pos:line="421" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="422" pos:column="33">send_msg_int<pos:position pos:line="422" pos:column="45"/></name><argument_list pos:line="422" pos:column="45">(<argument><expr><name pos:line="422" pos:column="46">MSG_NO_SEND<pos:position pos:line="422" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="422" pos:column="59">ndx<pos:position pos:line="422" pos:column="62"/></name></expr></argument>)<pos:position pos:line="422" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="64"/></expr_stmt></block></then></if>
			<break pos:line="423" pos:column="25">break;<pos:position pos:line="423" pos:column="31"/></break>
		}<pos:position pos:line="424" pos:column="18"/></block></switch>
	}<pos:position pos:line="425" pos:column="10"/></block></while>
	<if pos:line="426" pos:column="9">if <condition pos:line="426" pos:column="12">(<expr><name pos:line="426" pos:column="13">make_backups<pos:position pos:line="426" pos:column="25"/></name> <operator pos:line="426" pos:column="26">&lt;<pos:position pos:line="426" pos:column="30"/></operator> <literal type="number" pos:line="426" pos:column="28">0<pos:position pos:line="426" pos:column="29"/></literal></expr>)<pos:position pos:line="426" pos:column="30"/></condition><then pos:line="426" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="427" pos:column="17">make_backups<pos:position pos:line="427" pos:column="29"/></name> <operator pos:line="427" pos:column="30">=<pos:position pos:line="427" pos:column="31"/></operator> <operator pos:line="427" pos:column="32">-<pos:position pos:line="427" pos:column="33"/></operator><name pos:line="427" pos:column="33">make_backups<pos:position pos:line="427" pos:column="45"/></name></expr>;<pos:position pos:line="427" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="429" pos:column="9">if <condition pos:line="429" pos:column="12">(<expr><name pos:line="429" pos:column="13">phase<pos:position pos:line="429" pos:column="18"/></name> <operator pos:line="429" pos:column="19">==<pos:position pos:line="429" pos:column="21"/></operator> <literal type="number" pos:line="429" pos:column="22">2<pos:position pos:line="429" pos:column="23"/></literal> <operator pos:line="429" pos:column="24">&amp;&amp;<pos:position pos:line="429" pos:column="34"/></operator> <name pos:line="429" pos:column="27">delay_updates<pos:position pos:line="429" pos:column="40"/></name></expr>)<pos:position pos:line="429" pos:column="41"/></condition><then pos:line="429" pos:column="41"> <comment type="block" pos:line="429" pos:column="42">/* for protocol_version &lt; 29 */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="430" pos:column="17">handle_delayed_updates<pos:position pos:line="430" pos:column="39"/></name><argument_list pos:line="430" pos:column="39">(<argument><expr><name pos:line="430" pos:column="40">local_name<pos:position pos:line="430" pos:column="50"/></name></expr></argument>)<pos:position pos:line="430" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="432" pos:column="9">if <condition pos:line="432" pos:column="12">(<expr><call><name pos:line="432" pos:column="13">DEBUG_GTE<pos:position pos:line="432" pos:column="22"/></name><argument_list pos:line="432" pos:column="22">(<argument><expr><name pos:line="432" pos:column="23">RECV<pos:position pos:line="432" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="432" pos:column="29">1<pos:position pos:line="432" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="432" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="432" pos:column="32"/></condition><then pos:line="432" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="433" pos:column="17">rprintf<pos:position pos:line="433" pos:column="24"/></name><argument_list pos:line="433" pos:column="24">(<argument><expr><name pos:line="433" pos:column="25">FINFO<pos:position pos:line="433" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="433" pos:column="31">"recv_files finished\n"<pos:position pos:line="433" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="433" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="56"/></expr_stmt></block></then></if>

	<return pos:line="435" pos:column="9">return <expr><literal type="number" pos:line="435" pos:column="16">0<pos:position pos:line="435" pos:column="17"/></literal></expr>;<pos:position pos:line="435" pos:column="18"/></return>
}<pos:position pos:line="436" pos:column="2"/></block></function></unit>

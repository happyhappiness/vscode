<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_448.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">writefd<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">fd<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">len<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">total<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">fd_set<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">w_fds<pos:position pos:line="4" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="17">r_fds<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">fd_count<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">count<pos:position pos:line="5" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">got_select<pos:position pos:line="5" pos:column="34"/></name><init pos:line="5" pos:column="34">=<expr><literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">timeval<pos:position pos:line="6" pos:column="17"/></name></name></type> <name pos:line="6" pos:column="18">tv<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">buffer_f_in<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="22">-<pos:position pos:line="8" pos:column="23"/></operator><literal type="number" pos:line="8" pos:column="23">1<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> 
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><call><name pos:line="9" pos:column="12">write<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">fd<pos:position pos:line="9" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="21">buf<pos:position pos:line="9" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="25">len<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></return></block></then></if>

  <while pos:line="11" pos:column="3">while <condition pos:line="11" pos:column="9">(<expr><name pos:line="11" pos:column="10">total<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&lt;<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="18">len<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition> <block pos:line="11" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">ret<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><call><name pos:line="12" pos:column="15">write<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">fd<pos:position pos:line="12" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="24">buf<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">+<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">total<pos:position pos:line="12" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="34">len<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">total<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="45"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18"> <block type="pseudo"><return pos:line="14" pos:column="19">return <expr><name pos:line="14" pos:column="26">total<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></return></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">==<pos:position pos:line="16" pos:column="15"/></operator> <operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator><literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal> <operator pos:line="16" pos:column="19">&amp;&amp;<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="22">!<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">errno<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">EWOULDBLOCK<pos:position pos:line="16" pos:column="44"/></name> <operator pos:line="16" pos:column="45">||<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">errno<pos:position pos:line="16" pos:column="53"/></name> <operator pos:line="16" pos:column="54">==<pos:position pos:line="16" pos:column="56"/></operator> <name pos:line="16" pos:column="57">EAGAIN<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">)<pos:position pos:line="16" pos:column="64"/></operator></expr>)<pos:position pos:line="16" pos:column="65"/></condition><then pos:line="16" pos:column="65"> 
      <block type="pseudo"><return pos:line="17" pos:column="7">return <expr><operator pos:line="17" pos:column="14">-<pos:position pos:line="17" pos:column="15"/></operator><literal type="number" pos:line="17" pos:column="15">1<pos:position pos:line="17" pos:column="16"/></literal></expr>;<pos:position pos:line="17" pos:column="17"/></return></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">ret<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">==<pos:position pos:line="19" pos:column="15"/></operator> <operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal> <operator pos:line="19" pos:column="19">&amp;&amp;<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="22">got_select<pos:position pos:line="19" pos:column="32"/></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
	    <comment type="block" pos:line="20" pos:column="13">/* hmmm, we got a write select on the fd and then failed to write.
	       Why doesn't that mean that the fd is dead? It doesn't on some
	       systems it seems (eg. IRIX) */</comment>
	    <expr_stmt><expr><call><name pos:line="23" pos:column="13">u_sleep<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="number" pos:line="23" pos:column="21">1000<pos:position pos:line="23" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="24" pos:column="5">0<pos:position pos:line="24" pos:column="6"/></literal></expr></cpp:if>
	    fprintf(FERROR,"write exception\n");
	    exit_cleanup(1);
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="30" pos:column="5">got_select<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>


    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">ret<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">==<pos:position pos:line="33" pos:column="15"/></operator> <operator pos:line="33" pos:column="16">-<pos:position pos:line="33" pos:column="17"/></operator><literal type="number" pos:line="33" pos:column="17">1<pos:position pos:line="33" pos:column="18"/></literal></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">read_check<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">buffer_f_in<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><name pos:line="36" pos:column="7">fd_count<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">fd<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">+<pos:position pos:line="36" pos:column="21"/></operator><literal type="number" pos:line="36" pos:column="21">1<pos:position pos:line="36" pos:column="22"/></literal></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">FD_ZERO<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><operator pos:line="37" pos:column="15">&amp;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="16">w_fds<pos:position pos:line="37" pos:column="21"/></name></expr></argument>)<pos:position pos:line="37" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">FD_ZERO<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><operator pos:line="38" pos:column="15">&amp;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="16">r_fds<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">FD_SET<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">fd<pos:position pos:line="39" pos:column="16"/></name></expr></argument>,<argument><expr><operator pos:line="39" pos:column="17">&amp;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="18">w_fds<pos:position pos:line="39" pos:column="23"/></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">buffer_f_in<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">!=<pos:position pos:line="40" pos:column="25"/></operator> <operator pos:line="40" pos:column="26">-<pos:position pos:line="40" pos:column="27"/></operator><literal type="number" pos:line="40" pos:column="27">1<pos:position pos:line="40" pos:column="28"/></literal></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block pos:line="40" pos:column="30">{
	      <expr_stmt><expr><call><name pos:line="41" pos:column="15">FD_SET<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">buffer_f_in<pos:position pos:line="41" pos:column="33"/></name></expr></argument>,<argument><expr><operator pos:line="41" pos:column="34">&amp;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="35">r_fds<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
	      <if pos:line="42" pos:column="15">if <condition pos:line="42" pos:column="18">(<expr><name pos:line="42" pos:column="19">buffer_f_in<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">&gt;<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="33">fd<pos:position pos:line="42" pos:column="35"/></name></expr>)<pos:position pos:line="42" pos:column="36"/></condition><then pos:line="42" pos:column="36"> 
		      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="23">fd_count<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">buffer_f_in<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">+<pos:position pos:line="43" pos:column="46"/></operator><literal type="number" pos:line="43" pos:column="46">1<pos:position pos:line="43" pos:column="47"/></literal></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt></block></then></if>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name><name pos:line="46" pos:column="7">tv<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">.<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">tv_sec<pos:position pos:line="46" pos:column="16"/></name></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <name pos:line="46" pos:column="19">BLOCKING_TIMEOUT<pos:position pos:line="46" pos:column="35"/></name></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="47" pos:column="7">tv<pos:position pos:line="47" pos:column="9"/></name><operator pos:line="47" pos:column="9">.<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">tv_usec<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <literal type="number" pos:line="47" pos:column="20">0<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name pos:line="48" pos:column="7">count<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">=<pos:position pos:line="48" pos:column="14"/></operator> <call><name pos:line="48" pos:column="15">select<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">fd_count<pos:position pos:line="48" pos:column="30"/></name></expr></argument>,<argument><expr><ternary><condition><expr><name pos:line="48" pos:column="31">buffer_f_in<pos:position pos:line="48" pos:column="42"/></name> <operator pos:line="48" pos:column="43">==<pos:position pos:line="48" pos:column="45"/></operator> <operator pos:line="48" pos:column="46">-<pos:position pos:line="48" pos:column="47"/></operator><literal type="number" pos:line="48" pos:column="47">1<pos:position pos:line="48" pos:column="48"/></literal></expr>?<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49"> <expr><name pos:line="48" pos:column="50">NULL<pos:position pos:line="48" pos:column="54"/></name></expr></then><else pos:line="48" pos:column="54">: <expr><operator pos:line="48" pos:column="56">&amp;<pos:position pos:line="48" pos:column="61"/></operator><name pos:line="48" pos:column="57">r_fds<pos:position pos:line="48" pos:column="62"/></name></expr></else></ternary></expr></argument>,
		     <argument><expr><operator pos:line="49" pos:column="22">&amp;<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="23">w_fds<pos:position pos:line="49" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="49" pos:column="29">NULL<pos:position pos:line="49" pos:column="33"/></name></expr></argument>,<argument><expr><operator pos:line="49" pos:column="34">&amp;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="35">tv<pos:position pos:line="49" pos:column="37"/></name></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
      <if pos:line="50" pos:column="7">if <condition pos:line="50" pos:column="10">(<expr><name pos:line="50" pos:column="11">count<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">==<pos:position pos:line="50" pos:column="19"/></operator> <operator pos:line="50" pos:column="20">-<pos:position pos:line="50" pos:column="21"/></operator><literal type="number" pos:line="50" pos:column="21">1<pos:position pos:line="50" pos:column="22"/></literal> <operator pos:line="50" pos:column="23">&amp;&amp;<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="26">errno<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">!=<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="35">EINTR<pos:position pos:line="50" pos:column="40"/></name></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41"> <block pos:line="50" pos:column="42">{
	      <if pos:line="51" pos:column="15">if <condition pos:line="51" pos:column="18">(<expr><name pos:line="51" pos:column="19">verbose<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">&gt;<pos:position pos:line="51" pos:column="31"/></operator> <literal type="number" pos:line="51" pos:column="29">1<pos:position pos:line="51" pos:column="30"/></literal></expr>)<pos:position pos:line="51" pos:column="31"/></condition><then pos:line="51" pos:column="31"> 
		      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="23">fprintf<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">FERROR<pos:position pos:line="52" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="52" pos:column="38">"select error: %s\n"<pos:position pos:line="52" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="60">strerror<pos:position pos:line="52" pos:column="68"/></name><argument_list pos:line="52" pos:column="68">(<argument><expr><name pos:line="52" pos:column="69">errno<pos:position pos:line="52" pos:column="74"/></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt></block></then></if>
	      <expr_stmt><expr><call><name pos:line="53" pos:column="15">exit_cleanup<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><literal type="number" pos:line="53" pos:column="28">1<pos:position pos:line="53" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt>
      }<pos:position pos:line="54" pos:column="8"/></block></then></if>

      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">count<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">==<pos:position pos:line="56" pos:column="19"/></operator> <literal type="number" pos:line="56" pos:column="20">0<pos:position pos:line="56" pos:column="21"/></literal></expr>)<pos:position pos:line="56" pos:column="22"/></condition><then pos:line="56" pos:column="22"> <block pos:line="56" pos:column="23">{
	      <expr_stmt><expr><call><name pos:line="57" pos:column="15">check_timeout<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">()<pos:position pos:line="57" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt>
	      <continue pos:line="58" pos:column="15">continue;<pos:position pos:line="58" pos:column="24"/></continue>
      }<pos:position pos:line="59" pos:column="8"/></block></then></if>
      
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><call><name pos:line="61" pos:column="11">FD_ISSET<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><name pos:line="61" pos:column="20">fd<pos:position pos:line="61" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="24">&amp;<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="25">w_fds<pos:position pos:line="61" pos:column="30"/></name></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32"> <block pos:line="61" pos:column="33">{
	      <expr_stmt><expr><name pos:line="62" pos:column="15">got_select<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">=<pos:position pos:line="62" pos:column="27"/></operator> <literal type="number" pos:line="62" pos:column="28">1<pos:position pos:line="62" pos:column="29"/></literal></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="63" pos:column="8"/></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></then> <else pos:line="64" pos:column="7">else <block pos:line="64" pos:column="12">{
      <expr_stmt><expr><name pos:line="65" pos:column="7">total<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">+=<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="16">ret<pos:position pos:line="65" pos:column="19"/></name></expr>;<pos:position pos:line="65" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>
  }<pos:position pos:line="67" pos:column="4"/></block></while>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">io_timeout<pos:position pos:line="69" pos:column="17"/></name></expr>)<pos:position pos:line="69" pos:column="18"/></condition><then pos:line="69" pos:column="18">
	  <block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="11">last_io<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <call><name pos:line="70" pos:column="21">time<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">NULL<pos:position pos:line="70" pos:column="30"/></name></expr></argument>)<pos:position pos:line="70" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt></block></then></if>

  <return pos:line="72" pos:column="3">return <expr><name pos:line="72" pos:column="10">total<pos:position pos:line="72" pos:column="15"/></name></expr>;<pos:position pos:line="72" pos:column="16"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

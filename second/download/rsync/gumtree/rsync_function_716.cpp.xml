<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_716.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">showShortOptions<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">poptOption<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">opt<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">FILE<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type> <name pos:line="1" pos:column="67">f<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, 
			    <parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">str<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list> <block pos:line="2" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">s<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><literal type="number" pos:line="3" pos:column="12">300<pos:position pos:line="3" pos:column="15"/></literal></expr>]<pos:position pos:line="3" pos:column="16"/></index></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>		<comment type="block" pos:line="3" pos:column="33">/* this is larger then the ascii set, so
				   it should do just fine */</comment>

    <expr_stmt><expr><name><name pos:line="6" pos:column="5">s<pos:position pos:line="6" pos:column="6"/></name><index pos:line="6" pos:column="6">[<expr><literal type="number" pos:line="6" pos:column="7">0<pos:position pos:line="6" pos:column="8"/></literal></expr>]<pos:position pos:line="6" pos:column="9"/></index></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <literal type="char" pos:line="6" pos:column="12">'\0'<pos:position pos:line="6" pos:column="16"/></literal></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">str<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">==<pos:position pos:line="7" pos:column="15"/></operator> <name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21"> <block pos:line="7" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">memset<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">s<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="22">sizeof<argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">s<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">str<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">s<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name><name pos:line="12" pos:column="12">opt<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">longName<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <name><name pos:line="12" pos:column="29">opt<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">shortName<pos:position pos:line="12" pos:column="43"/></name></name> <operator pos:line="12" pos:column="44">||<pos:position pos:line="12" pos:column="46"/></operator> <name><name pos:line="12" pos:column="47">opt<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">arg<pos:position pos:line="12" pos:column="55"/></name></name></expr>)<pos:position pos:line="12" pos:column="56"/></condition> <block pos:line="12" pos:column="57">{
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">opt<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">shortName<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">&amp;&amp;<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="31">!<pos:position pos:line="13" pos:column="32"/></operator><operator pos:line="13" pos:column="32">(<pos:position pos:line="13" pos:column="33"/></operator><name><name pos:line="13" pos:column="33">opt<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">argInfo<pos:position pos:line="13" pos:column="45"/></name></name> <operator pos:line="13" pos:column="46">&amp;<pos:position pos:line="13" pos:column="51"/></operator> <name pos:line="13" pos:column="48">POPT_ARG_MASK<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">)<pos:position pos:line="13" pos:column="62"/></operator></expr>)<pos:position pos:line="13" pos:column="63"/></condition><then pos:line="13" pos:column="63">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="13">str<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><call><name pos:line="14" pos:column="17">strlen<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">str<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>]<pos:position pos:line="14" pos:column="29"/></index></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <name><name pos:line="14" pos:column="32">opt<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">shortName<pos:position pos:line="14" pos:column="46"/></name></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt></block></then>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name><name pos:line="15" pos:column="19">opt<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">argInfo<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="34">POPT_ARG_MASK<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator> <operator pos:line="15" pos:column="49">==<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">POPT_ARG_INCLUDE_TABLE<pos:position pos:line="15" pos:column="74"/></name></expr>)<pos:position pos:line="15" pos:column="75"/></condition><then pos:line="15" pos:column="75">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="13">showShortOptions<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name><name pos:line="16" pos:column="30">opt<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">arg<pos:position pos:line="16" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">f<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">str<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">opt<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">++<pos:position pos:line="18" pos:column="14"/></operator></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></while> 

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">s<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">!=<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">str<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">||<pos:position pos:line="21" pos:column="20"/></operator> <operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><operator pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">s<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
	<block type="pseudo"><return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">fprintf<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">f<pos:position pos:line="24" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="16">" [-%s]"<pos:position pos:line="24" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="26">s<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><call><name pos:line="25" pos:column="12">strlen<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">s<pos:position pos:line="25" pos:column="20"/></name></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></call> <operator pos:line="25" pos:column="22">+<pos:position pos:line="25" pos:column="23"/></operator> <literal type="number" pos:line="25" pos:column="24">4<pos:position pos:line="25" pos:column="25"/></literal></expr>;<pos:position pos:line="25" pos:column="26"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_392_rsync-2.5.5.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">voidpf<pos:position pos:line="1" pos:column="7"/></name></type> <name pos:line="1" pos:column="8">zcalloc<pos:position pos:line="1" pos:column="15"/></name> <parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">opaque<pos:position pos:line="1" pos:column="23"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="25">items<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">size<pos:position pos:line="1" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">voidpf<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">opaque<pos:position pos:line="2" pos:column="18"/></name></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">items<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">size<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">opaque<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">items<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">+=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">size<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">-<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">size<pos:position pos:line="6" pos:column="37"/></name></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt></block></then></if> <comment type="block" pos:line="6" pos:column="39">/* make compiler happy */</comment>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">voidpf<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">)<pos:position pos:line="7" pos:column="20"/></operator><call><name pos:line="7" pos:column="20">calloc<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">items<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">size<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function_decl></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_334_rsync-2.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_malloc_stats<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_MALLINFO<pos:position pos:line="3" pos:column="21"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">mallinfo<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">mi<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">mi<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">mallinfo<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">()<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">rprintf<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">FINFO<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="24">"\n"<pos:position pos:line="8" pos:column="28"/></literal> <name pos:line="8" pos:column="29">RSYNC_NAME<pos:position pos:line="8" pos:column="39"/></name> <literal type="string" pos:line="8" pos:column="40">"[%d] (%s%s%s) heap statistics:\n"<pos:position pos:line="8" pos:column="74"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="9" pos:column="17">getpid<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">()<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="10" pos:column="17">am_server<pos:position pos:line="10" pos:column="26"/></name></expr> ?<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <expr><literal type="string" pos:line="10" pos:column="29">"server "<pos:position pos:line="10" pos:column="38"/></literal></expr> <pos:position pos:line="10" pos:column="39"/></then><else pos:line="10" pos:column="39">: <expr><literal type="string" pos:line="10" pos:column="41">""<pos:position pos:line="10" pos:column="43"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="11" pos:column="17">am_daemon<pos:position pos:line="11" pos:column="26"/></name></expr> ?<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <expr><literal type="string" pos:line="11" pos:column="29">"daemon "<pos:position pos:line="11" pos:column="38"/></literal></expr> <pos:position pos:line="11" pos:column="39"/></then><else pos:line="11" pos:column="39">: <expr><literal type="string" pos:line="11" pos:column="41">""<pos:position pos:line="11" pos:column="43"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><call><name pos:line="12" pos:column="17">who_am_i<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">()<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">rprintf<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">FINFO<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="24">"  arena:     %10d   (bytes from sbrk)\n"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="67">mi<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">.<pos:position pos:line="13" pos:column="70"/></operator><name pos:line="13" pos:column="70">arena<pos:position pos:line="13" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="77"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">rprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">FINFO<pos:position pos:line="14" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="24">"  ordblks:   %10d   (chunks not in use)\n"<pos:position pos:line="14" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="69">mi<pos:position pos:line="14" pos:column="71"/></name><operator pos:line="14" pos:column="71">.<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="72">ordblks<pos:position pos:line="14" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">rprintf<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">FINFO<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="24">"  smblks:    %10d\n"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="47">mi<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">.<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">smblks<pos:position pos:line="15" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">rprintf<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">FINFO<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="24">"  hblks:     %10d   (chunks from mmap)\n"<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="68">mi<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">.<pos:position pos:line="16" pos:column="71"/></operator><name pos:line="16" pos:column="71">hblks<pos:position pos:line="16" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">rprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">FINFO<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="24">"  hblkhd:    %10d   (bytes from mmap)\n"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="67">mi<pos:position pos:line="17" pos:column="69"/></name><operator pos:line="17" pos:column="69">.<pos:position pos:line="17" pos:column="70"/></operator><name pos:line="17" pos:column="70">hblkhd<pos:position pos:line="17" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">rprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">FINFO<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="24">"  allmem:    %10d   (bytes from sbrk + mmap)\n"<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="19" pos:column="13">mi<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">.<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">arena<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">+<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="24">mi<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">hblkhd<pos:position pos:line="19" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">rprintf<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">FINFO<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="24">"  usmblks:   %10d\n"<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="47">mi<pos:position pos:line="20" pos:column="49"/></name><operator pos:line="20" pos:column="49">.<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">usmblks<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">rprintf<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">FINFO<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="24">"  fsmblks:   %10d\n"<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="47">mi<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">.<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">fsmblks<pos:position pos:line="21" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">rprintf<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">FINFO<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="24">"  uordblks:  %10d   (bytes used)\n"<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="62">mi<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">.<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="65">uordblks<pos:position pos:line="22" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">rprintf<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><name pos:line="23" pos:column="17">FINFO<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="24">"  fordblks:  %10d   (bytes free)\n"<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="62">mi<pos:position pos:line="23" pos:column="64"/></name><operator pos:line="23" pos:column="64">.<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="65">fordblks<pos:position pos:line="23" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">rprintf<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">FINFO<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="24">"  keepcost:  %10d   (bytes in releasable chunk)\n"<pos:position pos:line="24" pos:column="75"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="77">mi<pos:position pos:line="24" pos:column="79"/></name><operator pos:line="24" pos:column="79">.<pos:position pos:line="24" pos:column="80"/></operator><name pos:line="24" pos:column="80">keepcost<pos:position pos:line="24" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="90"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="25" pos:column="8">/* HAVE_MALLINFO */</comment>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

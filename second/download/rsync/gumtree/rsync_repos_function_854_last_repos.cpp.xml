<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_854_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">md5_update<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">md_context<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">ctx<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">uchar<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">input<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">uint32<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">length<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">left<pos:position pos:line="3" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="22">fill<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">length<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
		<block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="8" pos:column="9">left<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name><name pos:line="8" pos:column="16">ctx<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">totalN<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator> <literal type="number" pos:line="8" pos:column="30">0x3F<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">fill<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">CSUM_CHUNK<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">-<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">left<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="11" pos:column="9">ctx<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">totalN<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">+=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">length<pos:position pos:line="11" pos:column="30"/></name></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">ctx<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">totalN<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">&amp;=<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="24">0xFFFFFFFF<pos:position pos:line="12" pos:column="34"/></literal></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">ctx<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">totalN<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">&lt;<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="27">length<pos:position pos:line="14" pos:column="33"/></name></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="17">ctx<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">totalN2<pos:position pos:line="15" pos:column="29"/></name></name><operator pos:line="15" pos:column="29">++<pos:position pos:line="15" pos:column="31"/></operator></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">left<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&amp;&amp;<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="21">length<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&gt;=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="31">fill<pos:position pos:line="17" pos:column="35"/></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">memcpy<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">ctx<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">buffer<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">+<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">left<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">input<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">fill<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">md5_process<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">ctx<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="34">ctx<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">buffer<pos:position pos:line="19" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">length<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">-=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">fill<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">input<pos:position pos:line="21" pos:column="22"/></name>  <operator pos:line="21" pos:column="24">+=<pos:position pos:line="21" pos:column="26"/></operator> <name pos:line="21" pos:column="27">fill<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">left<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">length<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&gt;=<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="26">CSUM_CHUNK<pos:position pos:line="25" pos:column="36"/></name></expr>)<pos:position pos:line="25" pos:column="37"/></condition> <block pos:line="25" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">md5_process<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">ctx<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">input<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">length<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">-=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">CSUM_CHUNK<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">input<pos:position pos:line="28" pos:column="22"/></name>  <operator pos:line="28" pos:column="24">+=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">CSUM_CHUNK<pos:position pos:line="28" pos:column="37"/></name></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></while>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">length<pos:position pos:line="31" pos:column="19"/></name></expr>)<pos:position pos:line="31" pos:column="20"/></condition><then pos:line="31" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">memcpy<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name><name pos:line="32" pos:column="24">ctx<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">buffer<pos:position pos:line="32" pos:column="35"/></name></name> <operator pos:line="32" pos:column="36">+<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">left<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="44">input<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">length<pos:position pos:line="32" pos:column="57"/></name></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt></block></then></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_127_rsync-2.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write_batch_csum_info<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">flist_entry<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">sum_struct<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">s<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">int_count<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">filename<pos:position pos:line="5" pos:column="22"/></name><index pos:line="5" pos:column="22">[<expr><name pos:line="5" pos:column="23">MAXPATHLEN<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">f_csums<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">stringjoin<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">filename<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="38">sizeof <name pos:line="8" pos:column="45">filename<pos:position pos:line="8" pos:column="53"/></name></sizeof></expr></argument>,
		    <argument><expr><name pos:line="9" pos:column="21">batch_prefix<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">rsync_csums_file<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">NULL<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>

		<expr_stmt><expr><name pos:line="11" pos:column="17">f_csums<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <call><name pos:line="11" pos:column="27">do_open<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">filename<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">O_WRONLY<pos:position pos:line="11" pos:column="53"/></name> <operator pos:line="11" pos:column="54">|<pos:position pos:line="11" pos:column="55"/></operator> <name pos:line="11" pos:column="56">O_CREAT<pos:position pos:line="11" pos:column="63"/></name> <operator pos:line="11" pos:column="64">|<pos:position pos:line="11" pos:column="65"/></operator> <name pos:line="11" pos:column="66">O_TRUNC<pos:position pos:line="11" pos:column="73"/></name></expr></argument>,
		    <argument><expr><name pos:line="12" pos:column="21">S_IRUSR<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">|<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">S_IWUSR<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">f_csums<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">&lt;<pos:position pos:line="13" pos:column="33"/></operator> <literal type="number" pos:line="13" pos:column="31">0<pos:position pos:line="13" pos:column="32"/></literal></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33"> <block pos:line="13" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">rprintf<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">FERROR<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="41">"Batch file %s open error: %s\n"<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>,
			    <argument><expr><name pos:line="15" pos:column="29">filename<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="39">strerror<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><name pos:line="15" pos:column="48">errno<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">close<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">f_csums<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">exit_cleanup<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><literal type="number" pos:line="17" pos:column="38">1<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">write_batch_csums_file<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">flist_entry<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="45">sizeof <argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">int<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">int_count<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <ternary><condition><expr><name pos:line="22" pos:column="21">s<pos:position pos:line="22" pos:column="22"/></name></expr> ?<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <expr><operator pos:line="22" pos:column="25">(<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">int<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">)<pos:position pos:line="22" pos:column="30"/></operator> <name><name pos:line="22" pos:column="31">s<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">count<pos:position pos:line="22" pos:column="39"/></name></name></expr> <pos:position pos:line="22" pos:column="40"/></then><else pos:line="22" pos:column="40">: <expr><literal type="number" pos:line="22" pos:column="42">0<pos:position pos:line="22" pos:column="43"/></literal></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">write_batch_csums_file<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><operator pos:line="23" pos:column="32">&amp;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="33">int_count<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="44">sizeof <name pos:line="23" pos:column="51">int_count<pos:position pos:line="23" pos:column="60"/></name></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">s<pos:position pos:line="25" pos:column="14"/></name></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15"> <block pos:line="25" pos:column="16">{
		<for pos:line="26" pos:column="17">for <control pos:line="26" pos:column="21">(<init><expr><name pos:line="26" pos:column="22">i<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></init> <condition><expr><name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">&lt;<pos:position pos:line="26" pos:column="35"/></operator> <name><name pos:line="26" pos:column="33">s<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">count<pos:position pos:line="26" pos:column="41"/></name></name></expr>;<pos:position pos:line="26" pos:column="42"/></condition> <incr><expr><name pos:line="26" pos:column="43">i<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">++<pos:position pos:line="26" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="47"/></control> <block pos:line="26" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">write_batch_csums_file<pos:position pos:line="27" pos:column="47"/></name><argument_list pos:line="27" pos:column="47">(<argument><expr><operator pos:line="27" pos:column="48">&amp;<pos:position pos:line="27" pos:column="53"/></operator><name><name pos:line="27" pos:column="49">s<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">-&gt;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="52">sums<pos:position pos:line="27" pos:column="56"/></name><index pos:line="27" pos:column="56">[<expr><name pos:line="27" pos:column="57">i<pos:position pos:line="27" pos:column="58"/></name></expr>]<pos:position pos:line="27" pos:column="59"/></index></name><operator pos:line="27" pos:column="59">.<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="60">sum1<pos:position pos:line="27" pos:column="64"/></name></expr></argument>,
			    <argument><expr><sizeof pos:line="28" pos:column="29">sizeof <argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">uint32<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">write_batch_csums_file<pos:position pos:line="29" pos:column="47"/></name><argument_list pos:line="29" pos:column="47">(<argument><expr><name><name pos:line="29" pos:column="48">s<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">sums<pos:position pos:line="29" pos:column="55"/></name><index pos:line="29" pos:column="55">[<expr><name pos:line="29" pos:column="56">i<pos:position pos:line="29" pos:column="57"/></name></expr>]<pos:position pos:line="29" pos:column="58"/></index></name><operator pos:line="29" pos:column="58">.<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="59">sum2<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">csum_length<pos:position pos:line="29" pos:column="76"/></name></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></for>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

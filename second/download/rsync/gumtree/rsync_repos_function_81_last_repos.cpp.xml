<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_81_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">add_rule<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">filter_rule_list<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">listp<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">pat<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">unsigned<pos:position pos:line="1" pos:column="72"/></name> <name pos:line="1" pos:column="73">int<pos:position pos:line="1" pos:column="76"/></name></type> <name pos:line="1" pos:column="77">pat_len<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>,
		     <parameter><decl><type><name pos:line="2" pos:column="22">filter_rule<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">rule<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">xflags<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">cp<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">pre_len<pos:position pos:line="5" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="31">suf_len<pos:position pos:line="5" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="40">slash_cnt<pos:position pos:line="5" pos:column="49"/></name> <init pos:line="5" pos:column="50">= <expr><literal type="number" pos:line="5" pos:column="52">0<pos:position pos:line="5" pos:column="53"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">DEBUG_GTE<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">FILTER<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="31">2<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">rprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FINFO<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"[%s] add_rule(%s%.*s%s)%s\n"<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="9" pos:column="25">who_am_i<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">()<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="37">get_rule_prefix<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">rule<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="59">pat<pos:position pos:line="9" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="64">0<pos:position pos:line="9" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="67">NULL<pos:position pos:line="9" pos:column="71"/></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr></argument>,
			<argument><expr><operator pos:line="10" pos:column="25">(<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">int<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">pat_len<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">pat<pos:position pos:line="10" pos:column="42"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><name><name pos:line="11" pos:column="26">rule<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">rflags<pos:position pos:line="11" pos:column="38"/></name></name> <operator pos:line="11" pos:column="39">&amp;<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="41">FILTRULE_DIRECTORY<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">)<pos:position pos:line="11" pos:column="60"/></operator></expr> ?<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62"> <expr><literal type="string" pos:line="11" pos:column="63">"/"<pos:position pos:line="11" pos:column="66"/></literal></expr> <pos:position pos:line="11" pos:column="67"/></then><else pos:line="11" pos:column="67">: <expr><literal type="string" pos:line="11" pos:column="69">""<pos:position pos:line="11" pos:column="71"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><name><name pos:line="12" pos:column="25">listp<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">debug_type<pos:position pos:line="12" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* These flags also indicate that we're reading a list that
	 * needs to be filtered now, not post-filtered later. */</comment>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">xflags<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator> <operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">XFLG_ANCHORED2ABS<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">|<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">XFLG_ABS_IF_SLASH<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">)<pos:position pos:line="17" pos:column="59"/></operator>
		<operator pos:line="18" pos:column="17">&amp;&amp;<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="20">(<pos:position pos:line="18" pos:column="21"/></operator><name><name pos:line="18" pos:column="21">rule<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">rflags<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">&amp;<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="36">FILTRULES_SIDES<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">)<pos:position pos:line="18" pos:column="52"/></operator>
			<operator pos:line="19" pos:column="25">==<pos:position pos:line="19" pos:column="27"/></operator> <operator pos:line="19" pos:column="28">(<pos:position pos:line="19" pos:column="29"/></operator><ternary><condition><expr><name pos:line="19" pos:column="29">am_sender<pos:position pos:line="19" pos:column="38"/></name></expr> ?<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40"> <expr><name pos:line="19" pos:column="41">FILTRULE_RECEIVER_SIDE<pos:position pos:line="19" pos:column="63"/></name></expr> <pos:position pos:line="19" pos:column="64"/></then><else pos:line="19" pos:column="64">: <expr><name pos:line="19" pos:column="66">FILTRULE_SENDER_SIDE<pos:position pos:line="19" pos:column="86"/></name></expr></else></ternary><operator pos:line="19" pos:column="86">)<pos:position pos:line="19" pos:column="87"/></operator></expr>)<pos:position pos:line="19" pos:column="88"/></condition><then pos:line="19" pos:column="88"> <block pos:line="19" pos:column="89">{
		<comment type="block" pos:line="20" pos:column="17">/* This filter applies only to the other side.  Drop it. */</comment>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">free_filter<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">rule<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
		<return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">pat_len<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&gt;<pos:position pos:line="25" pos:column="25"/></operator> <literal type="number" pos:line="25" pos:column="23">1<pos:position pos:line="25" pos:column="24"/></literal> <operator pos:line="25" pos:column="25">&amp;&amp;<pos:position pos:line="25" pos:column="35"/></operator> <name><name pos:line="25" pos:column="28">pat<pos:position pos:line="25" pos:column="31"/></name><index pos:line="25" pos:column="31">[<expr><name pos:line="25" pos:column="32">pat_len<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-<pos:position pos:line="25" pos:column="40"/></operator><literal type="number" pos:line="25" pos:column="40">1<pos:position pos:line="25" pos:column="41"/></literal></expr>]<pos:position pos:line="25" pos:column="42"/></index></name> <operator pos:line="25" pos:column="43">==<pos:position pos:line="25" pos:column="45"/></operator> <literal type="char" pos:line="25" pos:column="46">'/'<pos:position pos:line="25" pos:column="49"/></literal></expr>)<pos:position pos:line="25" pos:column="50"/></condition><then pos:line="25" pos:column="50"> <block pos:line="25" pos:column="51">{
		<expr_stmt><expr><name pos:line="26" pos:column="17">pat_len<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">--<pos:position pos:line="26" pos:column="26"/></operator></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">rule<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">rflags<pos:position pos:line="27" pos:column="29"/></name></name> <operator pos:line="27" pos:column="30">|=<pos:position pos:line="27" pos:column="32"/></operator> <name pos:line="27" pos:column="33">FILTRULE_DIRECTORY<pos:position pos:line="27" pos:column="51"/></name></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">cp<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">pat<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></init> <condition><expr><name pos:line="30" pos:column="24">cp<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">&lt;<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="29">pat<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">+<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">pat_len<pos:position pos:line="30" pos:column="42"/></name></expr>;<pos:position pos:line="30" pos:column="43"/></condition> <incr><expr><name pos:line="30" pos:column="44">cp<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">++<pos:position pos:line="30" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="49"/></control> <block pos:line="30" pos:column="50">{
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">cp<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">==<pos:position pos:line="31" pos:column="27"/></operator> <literal type="char" pos:line="31" pos:column="28">'/'<pos:position pos:line="31" pos:column="31"/></literal></expr>)<pos:position pos:line="31" pos:column="32"/></condition><then pos:line="31" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="25">slash_cnt<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">++<pos:position pos:line="32" pos:column="36"/></operator></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></for>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><name><name pos:line="35" pos:column="15">rule<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">rflags<pos:position pos:line="35" pos:column="27"/></name></name> <operator pos:line="35" pos:column="28">&amp;<pos:position pos:line="35" pos:column="33"/></operator> <operator pos:line="35" pos:column="30">(<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">FILTRULE_ABS_PATH<pos:position pos:line="35" pos:column="48"/></name> <operator pos:line="35" pos:column="49">|<pos:position pos:line="35" pos:column="50"/></operator> <name pos:line="35" pos:column="51">FILTRULE_MERGE_FILE<pos:position pos:line="35" pos:column="70"/></name><operator pos:line="35" pos:column="70">)<pos:position pos:line="35" pos:column="71"/></operator><operator pos:line="35" pos:column="71">)<pos:position pos:line="35" pos:column="72"/></operator>
	 <operator pos:line="36" pos:column="10">&amp;&amp;<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">xflags<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">&amp;<pos:position pos:line="36" pos:column="27"/></operator> <operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">XFLG_ANCHORED2ABS<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">|<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">XFLG_ABS_IF_SLASH<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">)<pos:position pos:line="36" pos:column="61"/></operator> <operator pos:line="36" pos:column="62">&amp;&amp;<pos:position pos:line="36" pos:column="72"/></operator> <operator pos:line="36" pos:column="65">*<pos:position pos:line="36" pos:column="66"/></operator><name pos:line="36" pos:column="66">pat<pos:position pos:line="36" pos:column="69"/></name> <operator pos:line="36" pos:column="70">==<pos:position pos:line="36" pos:column="72"/></operator> <literal type="char" pos:line="36" pos:column="73">'/'<pos:position pos:line="36" pos:column="76"/></literal><operator pos:line="36" pos:column="76">)<pos:position pos:line="36" pos:column="77"/></operator>
	  <operator pos:line="37" pos:column="11">||<pos:position pos:line="37" pos:column="13"/></operator> <operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">xflags<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="24">XFLG_ABS_IF_SLASH<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">&amp;&amp;<pos:position pos:line="37" pos:column="52"/></operator> <name pos:line="37" pos:column="45">slash_cnt<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">)<pos:position pos:line="37" pos:column="55"/></operator><operator pos:line="37" pos:column="55">)<pos:position pos:line="37" pos:column="56"/></operator></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57"> <block pos:line="37" pos:column="58">{
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">rule<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">rflags<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">|=<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="33">FILTRULE_ABS_PATH<pos:position pos:line="38" pos:column="50"/></name></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">*<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">pat<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">==<pos:position pos:line="39" pos:column="28"/></operator> <literal type="char" pos:line="39" pos:column="29">'/'<pos:position pos:line="39" pos:column="32"/></literal></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">pre_len<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">dirbuf_len<pos:position pos:line="40" pos:column="45"/></name> <operator pos:line="40" pos:column="46">-<pos:position pos:line="40" pos:column="47"/></operator> <name pos:line="40" pos:column="48">module_dirlen<pos:position pos:line="40" pos:column="61"/></name> <operator pos:line="40" pos:column="62">-<pos:position pos:line="40" pos:column="63"/></operator> <literal type="number" pos:line="40" pos:column="64">1<pos:position pos:line="40" pos:column="65"/></literal></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt></block></then>
		<else pos:line="41" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">pre_len<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <literal type="number" pos:line="42" pos:column="35">0<pos:position pos:line="42" pos:column="36"/></literal></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt></block></else></if>
	}<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">pre_len<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="27">0<pos:position pos:line="44" pos:column="28"/></literal></expr>;<pos:position pos:line="44" pos:column="29"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="46" pos:column="9">/* The daemon wants dir-exclude rules to get an appended "/" + "***". */</comment>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">xflags<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">&amp;<pos:position pos:line="47" pos:column="25"/></operator> <name pos:line="47" pos:column="22">XFLG_DIR2WILD3<pos:position pos:line="47" pos:column="36"/></name>
	 <operator pos:line="48" pos:column="10">&amp;&amp;<pos:position pos:line="48" pos:column="20"/></operator> <call><name pos:line="48" pos:column="13">BITS_SETnUNSET<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name><name pos:line="48" pos:column="28">rule<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">rflags<pos:position pos:line="48" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">FILTRULE_DIRECTORY<pos:position pos:line="48" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="62">FILTRULE_INCLUDE<pos:position pos:line="48" pos:column="78"/></name></expr></argument>)<pos:position pos:line="48" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="80"/></condition><then pos:line="48" pos:column="80"> <block pos:line="48" pos:column="81">{
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">rule<pos:position pos:line="49" pos:column="21"/></name><operator pos:line="49" pos:column="21">-&gt;<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="23">rflags<pos:position pos:line="49" pos:column="29"/></name></name> <operator pos:line="49" pos:column="30">&amp;=<pos:position pos:line="49" pos:column="36"/></operator> <operator pos:line="49" pos:column="33">~<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="34">FILTRULE_DIRECTORY<pos:position pos:line="49" pos:column="52"/></name></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="50" pos:column="17">suf_len<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <sizeof pos:line="50" pos:column="27">sizeof <name pos:line="50" pos:column="34">SLASH_WILD3_SUFFIX<pos:position pos:line="50" pos:column="52"/></name></sizeof> <operator pos:line="50" pos:column="53">-<pos:position pos:line="50" pos:column="54"/></operator> <literal type="number" pos:line="50" pos:column="55">1<pos:position pos:line="50" pos:column="56"/></literal></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then> <else pos:line="51" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="17">suf_len<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">=<pos:position pos:line="52" pos:column="26"/></operator> <literal type="number" pos:line="52" pos:column="27">0<pos:position pos:line="52" pos:column="28"/></literal></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt></block></else></if>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><operator pos:line="54" pos:column="13">!<pos:position pos:line="54" pos:column="14"/></operator><operator pos:line="54" pos:column="14">(<pos:position pos:line="54" pos:column="15"/></operator><name><name pos:line="54" pos:column="15">rule<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">-&gt;<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="21">pattern<pos:position pos:line="54" pos:column="28"/></name></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <call><name pos:line="54" pos:column="31">new_array<pos:position pos:line="54" pos:column="40"/></name><argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">char<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="47">pre_len<pos:position pos:line="54" pos:column="54"/></name> <operator pos:line="54" pos:column="55">+<pos:position pos:line="54" pos:column="56"/></operator> <name pos:line="54" pos:column="57">pat_len<pos:position pos:line="54" pos:column="64"/></name> <operator pos:line="54" pos:column="65">+<pos:position pos:line="54" pos:column="66"/></operator> <name pos:line="54" pos:column="67">suf_len<pos:position pos:line="54" pos:column="74"/></name> <operator pos:line="54" pos:column="75">+<pos:position pos:line="54" pos:column="76"/></operator> <literal type="number" pos:line="54" pos:column="77">1<pos:position pos:line="54" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call><operator pos:line="54" pos:column="79">)<pos:position pos:line="54" pos:column="80"/></operator></expr>)<pos:position pos:line="54" pos:column="81"/></condition><then pos:line="54" pos:column="81">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="17">out_of_memory<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><literal type="string" pos:line="55" pos:column="31">"add_rule"<pos:position pos:line="55" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">pre_len<pos:position pos:line="56" pos:column="20"/></name></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21"> <block pos:line="56" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">memcpy<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><name><name pos:line="57" pos:column="24">rule<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">pattern<pos:position pos:line="57" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">dirbuf<pos:position pos:line="57" pos:column="45"/></name> <operator pos:line="57" pos:column="46">+<pos:position pos:line="57" pos:column="47"/></operator> <name pos:line="57" pos:column="48">module_dirlen<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="63">pre_len<pos:position pos:line="57" pos:column="70"/></name></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="72"/></expr_stmt>
		<for pos:line="58" pos:column="17">for <control pos:line="58" pos:column="21">(<init><expr><name pos:line="58" pos:column="22">cp<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">=<pos:position pos:line="58" pos:column="26"/></operator> <name><name pos:line="58" pos:column="27">rule<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">-&gt;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="33">pattern<pos:position pos:line="58" pos:column="40"/></name></name></expr>;<pos:position pos:line="58" pos:column="41"/></init> <condition><expr><name pos:line="58" pos:column="42">cp<pos:position pos:line="58" pos:column="44"/></name> <operator pos:line="58" pos:column="45">&lt;<pos:position pos:line="58" pos:column="49"/></operator> <name><name pos:line="58" pos:column="47">rule<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">-&gt;<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="53">pattern<pos:position pos:line="58" pos:column="60"/></name></name> <operator pos:line="58" pos:column="61">+<pos:position pos:line="58" pos:column="62"/></operator> <name pos:line="58" pos:column="63">pre_len<pos:position pos:line="58" pos:column="70"/></name></expr>;<pos:position pos:line="58" pos:column="71"/></condition> <incr><expr><name pos:line="58" pos:column="72">cp<pos:position pos:line="58" pos:column="74"/></name><operator pos:line="58" pos:column="74">++<pos:position pos:line="58" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="77"/></control> <block pos:line="58" pos:column="78">{
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><operator pos:line="59" pos:column="29">*<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="30">cp<pos:position pos:line="59" pos:column="32"/></name> <operator pos:line="59" pos:column="33">==<pos:position pos:line="59" pos:column="35"/></operator> <literal type="char" pos:line="59" pos:column="36">'/'<pos:position pos:line="59" pos:column="39"/></literal></expr>)<pos:position pos:line="59" pos:column="40"/></condition><then pos:line="59" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="33">slash_cnt<pos:position pos:line="60" pos:column="42"/></name><operator pos:line="60" pos:column="42">++<pos:position pos:line="60" pos:column="44"/></operator></expr>;<pos:position pos:line="60" pos:column="45"/></expr_stmt></block></then></if>
		}<pos:position pos:line="61" pos:column="18"/></block></for>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">strlcpy<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name><name pos:line="63" pos:column="17">rule<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">-&gt;<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="23">pattern<pos:position pos:line="63" pos:column="30"/></name></name> <operator pos:line="63" pos:column="31">+<pos:position pos:line="63" pos:column="32"/></operator> <name pos:line="63" pos:column="33">pre_len<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="42">pat<pos:position pos:line="63" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="47">pat_len<pos:position pos:line="63" pos:column="54"/></name> <operator pos:line="63" pos:column="55">+<pos:position pos:line="63" pos:column="56"/></operator> <literal type="number" pos:line="63" pos:column="57">1<pos:position pos:line="63" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="64" pos:column="9">pat_len<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">+=<pos:position pos:line="64" pos:column="19"/></operator> <name pos:line="64" pos:column="20">pre_len<pos:position pos:line="64" pos:column="27"/></name></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">suf_len<pos:position pos:line="65" pos:column="20"/></name></expr>)<pos:position pos:line="65" pos:column="21"/></condition><then pos:line="65" pos:column="21"> <block pos:line="65" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">memcpy<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><name><name pos:line="66" pos:column="24">rule<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">-&gt;<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="30">pattern<pos:position pos:line="66" pos:column="37"/></name></name> <operator pos:line="66" pos:column="38">+<pos:position pos:line="66" pos:column="39"/></operator> <name pos:line="66" pos:column="40">pat_len<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="49">SLASH_WILD3_SUFFIX<pos:position pos:line="66" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="69">suf_len<pos:position pos:line="66" pos:column="76"/></name><operator pos:line="66" pos:column="76">+<pos:position pos:line="66" pos:column="77"/></operator><literal type="number" pos:line="66" pos:column="77">1<pos:position pos:line="66" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name pos:line="67" pos:column="17">pat_len<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">+=<pos:position pos:line="67" pos:column="27"/></operator> <name pos:line="67" pos:column="28">suf_len<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="68" pos:column="17">slash_cnt<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">++<pos:position pos:line="68" pos:column="28"/></operator></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>

	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><call><name pos:line="71" pos:column="13">strpbrk<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">(<argument><expr><name><name pos:line="71" pos:column="21">rule<pos:position pos:line="71" pos:column="25"/></name><operator pos:line="71" pos:column="25">-&gt;<pos:position pos:line="71" pos:column="30"/></operator><name pos:line="71" pos:column="27">pattern<pos:position pos:line="71" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="36">"*[?"<pos:position pos:line="71" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="43"/></condition><then pos:line="71" pos:column="43"> <block pos:line="71" pos:column="44">{
		<expr_stmt><expr><name><name pos:line="72" pos:column="17">rule<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">-&gt;<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="23">rflags<pos:position pos:line="72" pos:column="29"/></name></name> <operator pos:line="72" pos:column="30">|=<pos:position pos:line="72" pos:column="32"/></operator> <name pos:line="72" pos:column="33">FILTRULE_WILD<pos:position pos:line="72" pos:column="46"/></name></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><operator pos:line="73" pos:column="21">(<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">cp<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <call><name pos:line="73" pos:column="27">strstr<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name><name pos:line="73" pos:column="34">rule<pos:position pos:line="73" pos:column="38"/></name><operator pos:line="73" pos:column="38">-&gt;<pos:position pos:line="73" pos:column="43"/></operator><name pos:line="73" pos:column="40">pattern<pos:position pos:line="73" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="49">"**"<pos:position pos:line="73" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="54"/></argument_list></call><operator pos:line="73" pos:column="54">)<pos:position pos:line="73" pos:column="55"/></operator> <operator pos:line="73" pos:column="56">!=<pos:position pos:line="73" pos:column="58"/></operator> <name pos:line="73" pos:column="59">NULL<pos:position pos:line="73" pos:column="63"/></name></expr>)<pos:position pos:line="73" pos:column="64"/></condition><then pos:line="73" pos:column="64"> <block pos:line="73" pos:column="65">{
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">rule<pos:position pos:line="74" pos:column="29"/></name><operator pos:line="74" pos:column="29">-&gt;<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="31">rflags<pos:position pos:line="74" pos:column="37"/></name></name> <operator pos:line="74" pos:column="38">|=<pos:position pos:line="74" pos:column="40"/></operator> <name pos:line="74" pos:column="41">FILTRULE_WILD2<pos:position pos:line="74" pos:column="55"/></name></expr>;<pos:position pos:line="74" pos:column="56"/></expr_stmt>
			<comment type="block" pos:line="75" pos:column="25">/* If the pattern starts with **, note that. */</comment>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">cp<pos:position pos:line="76" pos:column="31"/></name> <operator pos:line="76" pos:column="32">==<pos:position pos:line="76" pos:column="34"/></operator> <name><name pos:line="76" pos:column="35">rule<pos:position pos:line="76" pos:column="39"/></name><operator pos:line="76" pos:column="39">-&gt;<pos:position pos:line="76" pos:column="44"/></operator><name pos:line="76" pos:column="41">pattern<pos:position pos:line="76" pos:column="48"/></name></name></expr>)<pos:position pos:line="76" pos:column="49"/></condition><then pos:line="76" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="33">rule<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">-&gt;<pos:position pos:line="77" pos:column="42"/></operator><name pos:line="77" pos:column="39">rflags<pos:position pos:line="77" pos:column="45"/></name></name> <operator pos:line="77" pos:column="46">|=<pos:position pos:line="77" pos:column="48"/></operator> <name pos:line="77" pos:column="49">FILTRULE_WILD2_PREFIX<pos:position pos:line="77" pos:column="70"/></name></expr>;<pos:position pos:line="77" pos:column="71"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="78" pos:column="25">/* If the pattern ends with ***, note that. */</comment>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><name pos:line="79" pos:column="29">pat_len<pos:position pos:line="79" pos:column="36"/></name> <operator pos:line="79" pos:column="37">&gt;=<pos:position pos:line="79" pos:column="42"/></operator> <literal type="number" pos:line="79" pos:column="40">3<pos:position pos:line="79" pos:column="41"/></literal>
			 <operator pos:line="80" pos:column="26">&amp;&amp;<pos:position pos:line="80" pos:column="36"/></operator> <name><name pos:line="80" pos:column="29">rule<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">-&gt;<pos:position pos:line="80" pos:column="38"/></operator><name pos:line="80" pos:column="35">pattern<pos:position pos:line="80" pos:column="42"/></name><index pos:line="80" pos:column="42">[<expr><name pos:line="80" pos:column="43">pat_len<pos:position pos:line="80" pos:column="50"/></name><operator pos:line="80" pos:column="50">-<pos:position pos:line="80" pos:column="51"/></operator><literal type="number" pos:line="80" pos:column="51">3<pos:position pos:line="80" pos:column="52"/></literal></expr>]<pos:position pos:line="80" pos:column="53"/></index></name> <operator pos:line="80" pos:column="54">==<pos:position pos:line="80" pos:column="56"/></operator> <literal type="char" pos:line="80" pos:column="57">'*'<pos:position pos:line="80" pos:column="60"/></literal>
			 <operator pos:line="81" pos:column="26">&amp;&amp;<pos:position pos:line="81" pos:column="36"/></operator> <name><name pos:line="81" pos:column="29">rule<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">-&gt;<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="35">pattern<pos:position pos:line="81" pos:column="42"/></name><index pos:line="81" pos:column="42">[<expr><name pos:line="81" pos:column="43">pat_len<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">-<pos:position pos:line="81" pos:column="51"/></operator><literal type="number" pos:line="81" pos:column="51">2<pos:position pos:line="81" pos:column="52"/></literal></expr>]<pos:position pos:line="81" pos:column="53"/></index></name> <operator pos:line="81" pos:column="54">==<pos:position pos:line="81" pos:column="56"/></operator> <literal type="char" pos:line="81" pos:column="57">'*'<pos:position pos:line="81" pos:column="60"/></literal>
			 <operator pos:line="82" pos:column="26">&amp;&amp;<pos:position pos:line="82" pos:column="36"/></operator> <name><name pos:line="82" pos:column="29">rule<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">-&gt;<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="35">pattern<pos:position pos:line="82" pos:column="42"/></name><index pos:line="82" pos:column="42">[<expr><name pos:line="82" pos:column="43">pat_len<pos:position pos:line="82" pos:column="50"/></name><operator pos:line="82" pos:column="50">-<pos:position pos:line="82" pos:column="51"/></operator><literal type="number" pos:line="82" pos:column="51">1<pos:position pos:line="82" pos:column="52"/></literal></expr>]<pos:position pos:line="82" pos:column="53"/></index></name> <operator pos:line="82" pos:column="54">==<pos:position pos:line="82" pos:column="56"/></operator> <literal type="char" pos:line="82" pos:column="57">'*'<pos:position pos:line="82" pos:column="60"/></literal></expr>)<pos:position pos:line="82" pos:column="61"/></condition><then pos:line="82" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="83" pos:column="33">rule<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">-&gt;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="39">rflags<pos:position pos:line="83" pos:column="45"/></name></name> <operator pos:line="83" pos:column="46">|=<pos:position pos:line="83" pos:column="48"/></operator> <name pos:line="83" pos:column="49">FILTRULE_WILD3_SUFFIX<pos:position pos:line="83" pos:column="70"/></name></expr>;<pos:position pos:line="83" pos:column="71"/></expr_stmt></block></then></if>
		}<pos:position pos:line="84" pos:column="18"/></block></then></if>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>

	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name><name pos:line="87" pos:column="13">rule<pos:position pos:line="87" pos:column="17"/></name><operator pos:line="87" pos:column="17">-&gt;<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="19">rflags<pos:position pos:line="87" pos:column="25"/></name></name> <operator pos:line="87" pos:column="26">&amp;<pos:position pos:line="87" pos:column="31"/></operator> <name pos:line="87" pos:column="28">FILTRULE_PERDIR_MERGE<pos:position pos:line="87" pos:column="49"/></name></expr>)<pos:position pos:line="87" pos:column="50"/></condition><then pos:line="87" pos:column="50"> <block pos:line="87" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="88" pos:column="17">filter_rule_list<pos:position pos:line="88" pos:column="33"/></name> <modifier pos:line="88" pos:column="34">*<pos:position pos:line="88" pos:column="35"/></modifier></type><name pos:line="88" pos:column="35">lp<pos:position pos:line="88" pos:column="37"/></name></decl>;<pos:position pos:line="88" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="89" pos:column="17">unsigned<pos:position pos:line="89" pos:column="25"/></name> <name pos:line="89" pos:column="26">int<pos:position pos:line="89" pos:column="29"/></name></type> <name pos:line="89" pos:column="30">len<pos:position pos:line="89" pos:column="33"/></name></decl>;<pos:position pos:line="89" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="90" pos:column="17">int<pos:position pos:line="90" pos:column="20"/></name></type> <name pos:line="90" pos:column="21">i<pos:position pos:line="90" pos:column="22"/></name></decl>;<pos:position pos:line="90" pos:column="23"/></decl_stmt>

		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><operator pos:line="92" pos:column="21">(<pos:position pos:line="92" pos:column="22"/></operator><name pos:line="92" pos:column="22">cp<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">=<pos:position pos:line="92" pos:column="26"/></operator> <call><name pos:line="92" pos:column="27">strrchr<pos:position pos:line="92" pos:column="34"/></name><argument_list pos:line="92" pos:column="34">(<argument><expr><name><name pos:line="92" pos:column="35">rule<pos:position pos:line="92" pos:column="39"/></name><operator pos:line="92" pos:column="39">-&gt;<pos:position pos:line="92" pos:column="44"/></operator><name pos:line="92" pos:column="41">pattern<pos:position pos:line="92" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="92" pos:column="50">'/'<pos:position pos:line="92" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="54"/></argument_list></call><operator pos:line="92" pos:column="54">)<pos:position pos:line="92" pos:column="55"/></operator> <operator pos:line="92" pos:column="56">!=<pos:position pos:line="92" pos:column="58"/></operator> <name pos:line="92" pos:column="59">NULL<pos:position pos:line="92" pos:column="63"/></name></expr>)<pos:position pos:line="92" pos:column="64"/></condition><then pos:line="92" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><name pos:line="93" pos:column="25">cp<pos:position pos:line="93" pos:column="27"/></name><operator pos:line="93" pos:column="27">++<pos:position pos:line="93" pos:column="29"/></operator></expr>;<pos:position pos:line="93" pos:column="30"/></expr_stmt></block></then>
		<else pos:line="94" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="25">cp<pos:position pos:line="95" pos:column="27"/></name> <operator pos:line="95" pos:column="28">=<pos:position pos:line="95" pos:column="29"/></operator> <name><name pos:line="95" pos:column="30">rule<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">pattern<pos:position pos:line="95" pos:column="43"/></name></name></expr>;<pos:position pos:line="95" pos:column="44"/></expr_stmt></block></else></if>

		<comment type="block" pos:line="97" pos:column="17">/* If the local merge file was already mentioned, don't
		 * add it again. */</comment>
		<for pos:line="99" pos:column="17">for <control pos:line="99" pos:column="21">(<init><expr><name pos:line="99" pos:column="22">i<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="number" pos:line="99" pos:column="26">0<pos:position pos:line="99" pos:column="27"/></literal></expr>;<pos:position pos:line="99" pos:column="28"/></init> <condition><expr><name pos:line="99" pos:column="29">i<pos:position pos:line="99" pos:column="30"/></name> <operator pos:line="99" pos:column="31">&lt;<pos:position pos:line="99" pos:column="35"/></operator> <name pos:line="99" pos:column="33">mergelist_cnt<pos:position pos:line="99" pos:column="46"/></name></expr>;<pos:position pos:line="99" pos:column="47"/></condition> <incr><expr><name pos:line="99" pos:column="48">i<pos:position pos:line="99" pos:column="49"/></name><operator pos:line="99" pos:column="49">++<pos:position pos:line="99" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="99" pos:column="52"/></control> <block pos:line="99" pos:column="53">{
			<decl_stmt><decl><type><name pos:line="100" pos:column="25">filter_rule<pos:position pos:line="100" pos:column="36"/></name> <modifier pos:line="100" pos:column="37">*<pos:position pos:line="100" pos:column="38"/></modifier></type><name pos:line="100" pos:column="38">ex<pos:position pos:line="100" pos:column="40"/></name> <init pos:line="100" pos:column="41">= <expr><name><name pos:line="100" pos:column="43">mergelist_parents<pos:position pos:line="100" pos:column="60"/></name><index pos:line="100" pos:column="60">[<expr><name pos:line="100" pos:column="61">i<pos:position pos:line="100" pos:column="62"/></name></expr>]<pos:position pos:line="100" pos:column="63"/></index></name></expr></init></decl>;<pos:position pos:line="100" pos:column="64"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="101" pos:column="25">const<pos:position pos:line="101" pos:column="30"/></specifier> <name pos:line="101" pos:column="31">char<pos:position pos:line="101" pos:column="35"/></name> <modifier pos:line="101" pos:column="36">*<pos:position pos:line="101" pos:column="37"/></modifier></type><name pos:line="101" pos:column="37">s<pos:position pos:line="101" pos:column="38"/></name></decl>;<pos:position pos:line="101" pos:column="39"/></decl_stmt>
			<if pos:line="102" pos:column="25">if <condition pos:line="102" pos:column="28">(<expr><operator pos:line="102" pos:column="29">!<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="30">ex<pos:position pos:line="102" pos:column="32"/></name></expr>)<pos:position pos:line="102" pos:column="33"/></condition><then pos:line="102" pos:column="33">
				<block type="pseudo"><continue pos:line="103" pos:column="33">continue;<pos:position pos:line="103" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name pos:line="104" pos:column="25">s<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <call><name pos:line="104" pos:column="29">strrchr<pos:position pos:line="104" pos:column="36"/></name><argument_list pos:line="104" pos:column="36">(<argument><expr><name><name pos:line="104" pos:column="37">ex<pos:position pos:line="104" pos:column="39"/></name><operator pos:line="104" pos:column="39">-&gt;<pos:position pos:line="104" pos:column="44"/></operator><name pos:line="104" pos:column="41">pattern<pos:position pos:line="104" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="104" pos:column="50">'/'<pos:position pos:line="104" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><name pos:line="105" pos:column="29">s<pos:position pos:line="105" pos:column="30"/></name></expr>)<pos:position pos:line="105" pos:column="31"/></condition><then pos:line="105" pos:column="31">
				<block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="33">s<pos:position pos:line="106" pos:column="34"/></name><operator pos:line="106" pos:column="34">++<pos:position pos:line="106" pos:column="36"/></operator></expr>;<pos:position pos:line="106" pos:column="37"/></expr_stmt></block></then>
			<else pos:line="107" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="108" pos:column="33">s<pos:position pos:line="108" pos:column="34"/></name> <operator pos:line="108" pos:column="35">=<pos:position pos:line="108" pos:column="36"/></operator> <name><name pos:line="108" pos:column="37">ex<pos:position pos:line="108" pos:column="39"/></name><operator pos:line="108" pos:column="39">-&gt;<pos:position pos:line="108" pos:column="44"/></operator><name pos:line="108" pos:column="41">pattern<pos:position pos:line="108" pos:column="48"/></name></name></expr>;<pos:position pos:line="108" pos:column="49"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="109" pos:column="25">len<pos:position pos:line="109" pos:column="28"/></name> <operator pos:line="109" pos:column="29">=<pos:position pos:line="109" pos:column="30"/></operator> <call><name pos:line="109" pos:column="31">strlen<pos:position pos:line="109" pos:column="37"/></name><argument_list pos:line="109" pos:column="37">(<argument><expr><name pos:line="109" pos:column="38">s<pos:position pos:line="109" pos:column="39"/></name></expr></argument>)<pos:position pos:line="109" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="41"/></expr_stmt>
			<if pos:line="110" pos:column="25">if <condition pos:line="110" pos:column="28">(<expr><name pos:line="110" pos:column="29">len<pos:position pos:line="110" pos:column="32"/></name> <operator pos:line="110" pos:column="33">==<pos:position pos:line="110" pos:column="35"/></operator> <name pos:line="110" pos:column="36">pat_len<pos:position pos:line="110" pos:column="43"/></name> <operator pos:line="110" pos:column="44">-<pos:position pos:line="110" pos:column="45"/></operator> <operator pos:line="110" pos:column="46">(<pos:position pos:line="110" pos:column="47"/></operator><name pos:line="110" pos:column="47">cp<pos:position pos:line="110" pos:column="49"/></name> <operator pos:line="110" pos:column="50">-<pos:position pos:line="110" pos:column="51"/></operator> <name><name pos:line="110" pos:column="52">rule<pos:position pos:line="110" pos:column="56"/></name><operator pos:line="110" pos:column="56">-&gt;<pos:position pos:line="110" pos:column="61"/></operator><name pos:line="110" pos:column="58">pattern<pos:position pos:line="110" pos:column="65"/></name></name><operator pos:line="110" pos:column="65">)<pos:position pos:line="110" pos:column="66"/></operator> <operator pos:line="110" pos:column="67">&amp;&amp;<pos:position pos:line="110" pos:column="77"/></operator> <call><name pos:line="110" pos:column="70">memcmp<pos:position pos:line="110" pos:column="76"/></name><argument_list pos:line="110" pos:column="76">(<argument><expr><name pos:line="110" pos:column="77">s<pos:position pos:line="110" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="80">cp<pos:position pos:line="110" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="84">len<pos:position pos:line="110" pos:column="87"/></name></expr></argument>)<pos:position pos:line="110" pos:column="88"/></argument_list></call> <operator pos:line="110" pos:column="89">==<pos:position pos:line="110" pos:column="91"/></operator> <literal type="number" pos:line="110" pos:column="92">0<pos:position pos:line="110" pos:column="93"/></literal></expr>)<pos:position pos:line="110" pos:column="94"/></condition><then pos:line="110" pos:column="94"> <block pos:line="110" pos:column="95">{
				<expr_stmt><expr><call><name pos:line="111" pos:column="33">free_filter<pos:position pos:line="111" pos:column="44"/></name><argument_list pos:line="111" pos:column="44">(<argument><expr><name pos:line="111" pos:column="45">rule<pos:position pos:line="111" pos:column="49"/></name></expr></argument>)<pos:position pos:line="111" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="51"/></expr_stmt>
				<return pos:line="112" pos:column="33">return;<pos:position pos:line="112" pos:column="40"/></return>
			}<pos:position pos:line="113" pos:column="26"/></block></then></if>
		}<pos:position pos:line="114" pos:column="18"/></block></for>

		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><operator pos:line="116" pos:column="21">!<pos:position pos:line="116" pos:column="22"/></operator><operator pos:line="116" pos:column="22">(<pos:position pos:line="116" pos:column="23"/></operator><name pos:line="116" pos:column="23">lp<pos:position pos:line="116" pos:column="25"/></name> <operator pos:line="116" pos:column="26">=<pos:position pos:line="116" pos:column="27"/></operator> <call><name pos:line="116" pos:column="28">new_array0<pos:position pos:line="116" pos:column="38"/></name><argument_list pos:line="116" pos:column="38">(<argument><expr><name pos:line="116" pos:column="39">filter_rule_list<pos:position pos:line="116" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="57">1<pos:position pos:line="116" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="59"/></argument_list></call><operator pos:line="116" pos:column="59">)<pos:position pos:line="116" pos:column="60"/></operator></expr>)<pos:position pos:line="116" pos:column="61"/></condition><then pos:line="116" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="25">out_of_memory<pos:position pos:line="117" pos:column="38"/></name><argument_list pos:line="117" pos:column="38">(<argument><expr><literal type="string" pos:line="117" pos:column="39">"add_rule"<pos:position pos:line="117" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="51"/></expr_stmt></block></then></if>
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><call><name pos:line="118" pos:column="21">asprintf<pos:position pos:line="118" pos:column="29"/></name><argument_list pos:line="118" pos:column="29">(<argument><expr><operator pos:line="118" pos:column="30">&amp;<pos:position pos:line="118" pos:column="35"/></operator><name><name pos:line="118" pos:column="31">lp<pos:position pos:line="118" pos:column="33"/></name><operator pos:line="118" pos:column="33">-&gt;<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="35">debug_type<pos:position pos:line="118" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="47">" [per-dir %s]"<pos:position pos:line="118" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="64">cp<pos:position pos:line="118" pos:column="66"/></name></expr></argument>)<pos:position pos:line="118" pos:column="67"/></argument_list></call> <operator pos:line="118" pos:column="68">&lt;<pos:position pos:line="118" pos:column="72"/></operator> <literal type="number" pos:line="118" pos:column="70">0<pos:position pos:line="118" pos:column="71"/></literal></expr>)<pos:position pos:line="118" pos:column="72"/></condition><then pos:line="118" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="25">out_of_memory<pos:position pos:line="119" pos:column="38"/></name><argument_list pos:line="119" pos:column="38">(<argument><expr><literal type="string" pos:line="119" pos:column="39">"add_rule"<pos:position pos:line="119" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="120" pos:column="17">rule<pos:position pos:line="120" pos:column="21"/></name><operator pos:line="120" pos:column="21">-&gt;<pos:position pos:line="120" pos:column="26"/></operator><name pos:line="120" pos:column="23">u<pos:position pos:line="120" pos:column="24"/></name><operator pos:line="120" pos:column="24">.<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="25">mergelist<pos:position pos:line="120" pos:column="34"/></name></name> <operator pos:line="120" pos:column="35">=<pos:position pos:line="120" pos:column="36"/></operator> <name pos:line="120" pos:column="37">lp<pos:position pos:line="120" pos:column="39"/></name></expr>;<pos:position pos:line="120" pos:column="40"/></expr_stmt>

		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><name pos:line="122" pos:column="21">mergelist_cnt<pos:position pos:line="122" pos:column="34"/></name> <operator pos:line="122" pos:column="35">==<pos:position pos:line="122" pos:column="37"/></operator> <name pos:line="122" pos:column="38">mergelist_size<pos:position pos:line="122" pos:column="52"/></name></expr>)<pos:position pos:line="122" pos:column="53"/></condition><then pos:line="122" pos:column="53"> <block pos:line="122" pos:column="54">{
			<expr_stmt><expr><name pos:line="123" pos:column="25">mergelist_size<pos:position pos:line="123" pos:column="39"/></name> <operator pos:line="123" pos:column="40">+=<pos:position pos:line="123" pos:column="42"/></operator> <literal type="number" pos:line="123" pos:column="43">5<pos:position pos:line="123" pos:column="44"/></literal></expr>;<pos:position pos:line="123" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="124" pos:column="25">mergelist_parents<pos:position pos:line="124" pos:column="42"/></name> <operator pos:line="124" pos:column="43">=<pos:position pos:line="124" pos:column="44"/></operator> <call><name pos:line="124" pos:column="45">realloc_array<pos:position pos:line="124" pos:column="58"/></name><argument_list pos:line="124" pos:column="58">(<argument><expr><name pos:line="124" pos:column="59">mergelist_parents<pos:position pos:line="124" pos:column="76"/></name></expr></argument>,
						<argument><expr><name pos:line="125" pos:column="49">filter_rule<pos:position pos:line="125" pos:column="60"/></name> <operator pos:line="125" pos:column="61">*<pos:position pos:line="125" pos:column="62"/></operator></expr></argument>,
						<argument><expr><name pos:line="126" pos:column="49">mergelist_size<pos:position pos:line="126" pos:column="63"/></name></expr></argument>)<pos:position pos:line="126" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="65"/></expr_stmt>
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><operator pos:line="127" pos:column="29">!<pos:position pos:line="127" pos:column="30"/></operator><name pos:line="127" pos:column="30">mergelist_parents<pos:position pos:line="127" pos:column="47"/></name></expr>)<pos:position pos:line="127" pos:column="48"/></condition><then pos:line="127" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="33">out_of_memory<pos:position pos:line="128" pos:column="46"/></name><argument_list pos:line="128" pos:column="46">(<argument><expr><literal type="string" pos:line="128" pos:column="47">"add_rule"<pos:position pos:line="128" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="59"/></expr_stmt></block></then></if>
		}<pos:position pos:line="129" pos:column="18"/></block></then></if>
		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><call><name pos:line="130" pos:column="21">DEBUG_GTE<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">FILTER<pos:position pos:line="130" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="39">2<pos:position pos:line="130" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="42"/></condition><then pos:line="130" pos:column="42"> <block pos:line="130" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="131" pos:column="25">rprintf<pos:position pos:line="131" pos:column="32"/></name><argument_list pos:line="131" pos:column="32">(<argument><expr><name pos:line="131" pos:column="33">FINFO<pos:position pos:line="131" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="40">"[%s] activating mergelist #%d%s\n"<pos:position pos:line="131" pos:column="75"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="132" pos:column="33">who_am_i<pos:position pos:line="132" pos:column="41"/></name><argument_list pos:line="132" pos:column="41">()<pos:position pos:line="132" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="132" pos:column="45">mergelist_cnt<pos:position pos:line="132" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="60">lp<pos:position pos:line="132" pos:column="62"/></name><operator pos:line="132" pos:column="62">-&gt;<pos:position pos:line="132" pos:column="67"/></operator><name pos:line="132" pos:column="64">debug_type<pos:position pos:line="132" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="133" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="134" pos:column="17">mergelist_parents<pos:position pos:line="134" pos:column="34"/></name><index pos:line="134" pos:column="34">[<expr><name pos:line="134" pos:column="35">mergelist_cnt<pos:position pos:line="134" pos:column="48"/></name><operator pos:line="134" pos:column="48">++<pos:position pos:line="134" pos:column="50"/></operator></expr>]<pos:position pos:line="134" pos:column="51"/></index></name> <operator pos:line="134" pos:column="52">=<pos:position pos:line="134" pos:column="53"/></operator> <name pos:line="134" pos:column="54">rule<pos:position pos:line="134" pos:column="58"/></name></expr>;<pos:position pos:line="134" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="135" pos:column="10"/></block></then> <else pos:line="135" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="17">rule<pos:position pos:line="136" pos:column="21"/></name><operator pos:line="136" pos:column="21">-&gt;<pos:position pos:line="136" pos:column="26"/></operator><name pos:line="136" pos:column="23">u<pos:position pos:line="136" pos:column="24"/></name><operator pos:line="136" pos:column="24">.<pos:position pos:line="136" pos:column="25"/></operator><name pos:line="136" pos:column="25">slash_cnt<pos:position pos:line="136" pos:column="34"/></name></name> <operator pos:line="136" pos:column="35">=<pos:position pos:line="136" pos:column="36"/></operator> <name pos:line="136" pos:column="37">slash_cnt<pos:position pos:line="136" pos:column="46"/></name></expr>;<pos:position pos:line="136" pos:column="47"/></expr_stmt></block></else></if>

	<if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><operator pos:line="138" pos:column="13">!<pos:position pos:line="138" pos:column="14"/></operator><name><name pos:line="138" pos:column="14">listp<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">-&gt;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="21">tail<pos:position pos:line="138" pos:column="25"/></name></name></expr>)<pos:position pos:line="138" pos:column="26"/></condition><then pos:line="138" pos:column="26"> <block pos:line="138" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="139" pos:column="17">rule<pos:position pos:line="139" pos:column="21"/></name><operator pos:line="139" pos:column="21">-&gt;<pos:position pos:line="139" pos:column="26"/></operator><name pos:line="139" pos:column="23">next<pos:position pos:line="139" pos:column="27"/></name></name> <operator pos:line="139" pos:column="28">=<pos:position pos:line="139" pos:column="29"/></operator> <name><name pos:line="139" pos:column="30">listp<pos:position pos:line="139" pos:column="35"/></name><operator pos:line="139" pos:column="35">-&gt;<pos:position pos:line="139" pos:column="40"/></operator><name pos:line="139" pos:column="37">head<pos:position pos:line="139" pos:column="41"/></name></name></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="140" pos:column="17">listp<pos:position pos:line="140" pos:column="22"/></name><operator pos:line="140" pos:column="22">-&gt;<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="24">head<pos:position pos:line="140" pos:column="28"/></name></name> <operator pos:line="140" pos:column="29">=<pos:position pos:line="140" pos:column="30"/></operator> <name><name pos:line="140" pos:column="31">listp<pos:position pos:line="140" pos:column="36"/></name><operator pos:line="140" pos:column="36">-&gt;<pos:position pos:line="140" pos:column="41"/></operator><name pos:line="140" pos:column="38">tail<pos:position pos:line="140" pos:column="42"/></name></name> <operator pos:line="140" pos:column="43">=<pos:position pos:line="140" pos:column="44"/></operator> <name pos:line="140" pos:column="45">rule<pos:position pos:line="140" pos:column="49"/></name></expr>;<pos:position pos:line="140" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="141" pos:column="10"/></block></then> <else pos:line="141" pos:column="11">else <block pos:line="141" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="142" pos:column="17">rule<pos:position pos:line="142" pos:column="21"/></name><operator pos:line="142" pos:column="21">-&gt;<pos:position pos:line="142" pos:column="26"/></operator><name pos:line="142" pos:column="23">next<pos:position pos:line="142" pos:column="27"/></name></name> <operator pos:line="142" pos:column="28">=<pos:position pos:line="142" pos:column="29"/></operator> <name><name pos:line="142" pos:column="30">listp<pos:position pos:line="142" pos:column="35"/></name><operator pos:line="142" pos:column="35">-&gt;<pos:position pos:line="142" pos:column="40"/></operator><name pos:line="142" pos:column="37">tail<pos:position pos:line="142" pos:column="41"/></name><operator pos:line="142" pos:column="41">-&gt;<pos:position pos:line="142" pos:column="46"/></operator><name pos:line="142" pos:column="43">next<pos:position pos:line="142" pos:column="47"/></name></name></expr>;<pos:position pos:line="142" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="143" pos:column="17">listp<pos:position pos:line="143" pos:column="22"/></name><operator pos:line="143" pos:column="22">-&gt;<pos:position pos:line="143" pos:column="27"/></operator><name pos:line="143" pos:column="24">tail<pos:position pos:line="143" pos:column="28"/></name><operator pos:line="143" pos:column="28">-&gt;<pos:position pos:line="143" pos:column="33"/></operator><name pos:line="143" pos:column="30">next<pos:position pos:line="143" pos:column="34"/></name></name> <operator pos:line="143" pos:column="35">=<pos:position pos:line="143" pos:column="36"/></operator> <name pos:line="143" pos:column="37">rule<pos:position pos:line="143" pos:column="41"/></name></expr>;<pos:position pos:line="143" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="144" pos:column="17">listp<pos:position pos:line="144" pos:column="22"/></name><operator pos:line="144" pos:column="22">-&gt;<pos:position pos:line="144" pos:column="27"/></operator><name pos:line="144" pos:column="24">tail<pos:position pos:line="144" pos:column="28"/></name></name> <operator pos:line="144" pos:column="29">=<pos:position pos:line="144" pos:column="30"/></operator> <name pos:line="144" pos:column="31">rule<pos:position pos:line="144" pos:column="35"/></name></expr>;<pos:position pos:line="144" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="145" pos:column="10"/></block></else></if>
}<pos:position pos:line="146" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_287_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">get_stat_xattr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fname<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">fd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">STRUCT_STAT<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">fst<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">STRUCT_STAT<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">xst<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="82"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">mode<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">rdev_major<pos:position pos:line="3" pos:column="29"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="31">rdev_minor<pos:position pos:line="3" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="43">uid<pos:position pos:line="3" pos:column="46"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="48">gid<pos:position pos:line="3" pos:column="51"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="53">len<pos:position pos:line="3" pos:column="56"/></name></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buf<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">256<pos:position pos:line="4" pos:column="21"/></literal></expr>]<pos:position pos:line="4" pos:column="22"/></index></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">am_root<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&gt;=<pos:position pos:line="6" pos:column="26"/></operator> <literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal> <operator pos:line="6" pos:column="26">||<pos:position pos:line="6" pos:column="28"/></operator> <call><name pos:line="6" pos:column="29">IS_DEVICE<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">(<argument><expr><name><name pos:line="6" pos:column="39">fst<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">st_mode<pos:position pos:line="6" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call> <operator pos:line="6" pos:column="53">||<pos:position pos:line="6" pos:column="55"/></operator> <call><name pos:line="6" pos:column="56">IS_SPECIAL<pos:position pos:line="6" pos:column="66"/></name><argument_list pos:line="6" pos:column="66">(<argument><expr><name><name pos:line="6" pos:column="67">fst<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">-&gt;<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="72">st_mode<pos:position pos:line="6" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="81"/></condition><then pos:line="6" pos:column="81">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">xst<pos:position pos:line="9" pos:column="16"/></name></expr>)<pos:position pos:line="9" pos:column="17"/></condition><then pos:line="9" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="17">*<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">xst<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">fst<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></then>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">xst<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">fst<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt></block></else></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">fname<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">fd<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">-<pos:position pos:line="14" pos:column="23"/></operator><literal type="number" pos:line="14" pos:column="23">1<pos:position pos:line="14" pos:column="24"/></literal></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">len<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">sys_lgetxattr<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">fname<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">XSTAT_ATTR<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="56">buf<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="61">sizeof <name pos:line="15" pos:column="68">buf<pos:position pos:line="15" pos:column="71"/></name></sizeof> <operator pos:line="15" pos:column="72">-<pos:position pos:line="15" pos:column="73"/></operator> <literal type="number" pos:line="15" pos:column="74">1<pos:position pos:line="15" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">fname<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <literal type="string" pos:line="17" pos:column="25">"fd"<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">len<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <call><name pos:line="18" pos:column="23">sys_fgetxattr<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">fd<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">XSTAT_ATTR<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">buf<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="58">sizeof <name pos:line="18" pos:column="65">buf<pos:position pos:line="18" pos:column="68"/></name></sizeof> <operator pos:line="18" pos:column="69">-<pos:position pos:line="18" pos:column="70"/></operator> <literal type="number" pos:line="18" pos:column="71">1<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">len<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&gt;=<pos:position pos:line="20" pos:column="22"/></operator> <operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">int<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator><sizeof pos:line="20" pos:column="25">sizeof <name pos:line="20" pos:column="32">buf<pos:position pos:line="20" pos:column="35"/></name></sizeof></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36"> <block pos:line="20" pos:column="37">{
		<expr_stmt><expr><name pos:line="21" pos:column="17">len<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">-<pos:position pos:line="21" pos:column="24"/></operator><literal type="number" pos:line="21" pos:column="24">1<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">errno<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">ERANGE<pos:position pos:line="22" pos:column="31"/></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">len<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&lt;<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21"> <block pos:line="24" pos:column="22">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">errno<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">==<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">ENOTSUP<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">||<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">errno<pos:position pos:line="25" pos:column="46"/></name> <operator pos:line="25" pos:column="47">==<pos:position pos:line="25" pos:column="49"/></operator> <name pos:line="25" pos:column="50">ENOATTR<pos:position pos:line="25" pos:column="57"/></name></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><operator pos:line="26" pos:column="32">-<pos:position pos:line="26" pos:column="33"/></operator><literal type="number" pos:line="26" pos:column="33">1<pos:position pos:line="26" pos:column="34"/></literal></expr>;<pos:position pos:line="26" pos:column="35"/></return></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">errno<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">==<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">EPERM<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">&amp;&amp;<pos:position pos:line="27" pos:column="46"/></operator> <call><name pos:line="27" pos:column="39">S_ISLNK<pos:position pos:line="27" pos:column="46"/></name><argument_list pos:line="27" pos:column="46">(<argument><expr><name><name pos:line="27" pos:column="47">fst<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">-&gt;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="52">st_mode<pos:position pos:line="27" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="61"/></condition><then pos:line="27" pos:column="61"> <block pos:line="27" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">xst<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">st_uid<pos:position pos:line="28" pos:column="36"/></name></name> <operator pos:line="28" pos:column="37">=<pos:position pos:line="28" pos:column="38"/></operator> <literal type="number" pos:line="28" pos:column="39">0<pos:position pos:line="28" pos:column="40"/></literal></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">xst<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">-&gt;<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="30">st_gid<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="number" pos:line="29" pos:column="39">0<pos:position pos:line="29" pos:column="40"/></literal></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
			<return pos:line="30" pos:column="25">return <expr><literal type="number" pos:line="30" pos:column="32">0<pos:position pos:line="30" pos:column="33"/></literal></expr>;<pos:position pos:line="30" pos:column="34"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">rsyserr<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">FERROR_XFER<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">errno<pos:position pos:line="32" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="45">"failed to read xattr %s for %s"<pos:position pos:line="32" pos:column="77"/></literal></expr></argument>,
			<argument><expr><name pos:line="33" pos:column="25">XSTAT_ATTR<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="37">full_fname<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><name pos:line="33" pos:column="48">fname<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
		<return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">-<pos:position pos:line="34" pos:column="25"/></operator><literal type="number" pos:line="34" pos:column="25">1<pos:position pos:line="34" pos:column="26"/></literal></expr>;<pos:position pos:line="34" pos:column="27"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">buf<pos:position pos:line="36" pos:column="12"/></name><index pos:line="36" pos:column="12">[<expr><name pos:line="36" pos:column="13">len<pos:position pos:line="36" pos:column="16"/></name></expr>]<pos:position pos:line="36" pos:column="17"/></index></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <literal type="char" pos:line="36" pos:column="20">'\0'<pos:position pos:line="36" pos:column="24"/></literal></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">sscanf<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">buf<pos:position pos:line="38" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="25">"%o %d,%d %d:%d"<pos:position pos:line="38" pos:column="41"/></literal></expr></argument>,
		   <argument><expr><operator pos:line="39" pos:column="20">&amp;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="21">mode<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="27">&amp;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="28">rdev_major<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="40">&amp;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="41">rdev_minor<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="53">&amp;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="54">uid<pos:position pos:line="39" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="59">&amp;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="60">gid<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call> <operator pos:line="39" pos:column="65">!=<pos:position pos:line="39" pos:column="67"/></operator> <literal type="number" pos:line="39" pos:column="68">5<pos:position pos:line="39" pos:column="69"/></literal></expr>)<pos:position pos:line="39" pos:column="70"/></condition><then pos:line="39" pos:column="70"> <block pos:line="39" pos:column="71">{
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">rprintf<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">FERROR<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"Corrupt %s xattr attached to %s: \"%s\"\n"<pos:position pos:line="40" pos:column="76"/></literal></expr></argument>,
			<argument><expr><name pos:line="41" pos:column="25">XSTAT_ATTR<pos:position pos:line="41" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="37">full_fname<pos:position pos:line="41" pos:column="47"/></name><argument_list pos:line="41" pos:column="47">(<argument><expr><name pos:line="41" pos:column="48">fname<pos:position pos:line="41" pos:column="53"/></name></expr></argument>)<pos:position pos:line="41" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">buf<pos:position pos:line="41" pos:column="59"/></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">exit_cleanup<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">RERR_FILEIO<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="45" pos:column="9">xst<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">st_mode<pos:position pos:line="45" pos:column="21"/></name></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <call><name pos:line="45" pos:column="24">from_wire_mode<pos:position pos:line="45" pos:column="38"/></name><argument_list pos:line="45" pos:column="38">(<argument><expr><name pos:line="45" pos:column="39">mode<pos:position pos:line="45" pos:column="43"/></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">xst<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">st_rdev<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <call><name pos:line="46" pos:column="24">MAKEDEV<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">rdev_major<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">rdev_minor<pos:position pos:line="46" pos:column="54"/></name></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">xst<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">st_uid<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">uid<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">xst<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">st_gid<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <name pos:line="48" pos:column="23">gid<pos:position pos:line="48" pos:column="26"/></name></expr>;<pos:position pos:line="48" pos:column="27"/></expr_stmt>

	<return pos:line="50" pos:column="9">return <expr><literal type="number" pos:line="50" pos:column="16">0<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

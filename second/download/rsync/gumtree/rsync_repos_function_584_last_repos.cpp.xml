<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_584_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">show_malloc_stats<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_MALLINFO<pos:position pos:line="3" pos:column="21"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">mallinfo<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">mi<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">mi<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">mallinfo<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">()<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">rprintf<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">FCLIENT<pos:position pos:line="8" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="26">"\n"<pos:position pos:line="8" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">rprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">FINFO<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">RSYNC_NAME<pos:position pos:line="9" pos:column="34"/></name> <literal type="string" pos:line="9" pos:column="35">"[%d] (%s%s%s) heap statistics:\n"<pos:position pos:line="9" pos:column="69"/></literal></expr></argument>,
		<argument><expr><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">int<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">)<pos:position pos:line="10" pos:column="22"/></operator><call><name pos:line="10" pos:column="22">getpid<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">()<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="10" pos:column="32">am_server<pos:position pos:line="10" pos:column="41"/></name></expr> ?<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <expr><literal type="string" pos:line="10" pos:column="44">"server "<pos:position pos:line="10" pos:column="53"/></literal></expr> <pos:position pos:line="10" pos:column="54"/></then><else pos:line="10" pos:column="54">: <expr><literal type="string" pos:line="10" pos:column="56">""<pos:position pos:line="10" pos:column="58"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="11" pos:column="17">am_daemon<pos:position pos:line="11" pos:column="26"/></name></expr> ?<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <expr><literal type="string" pos:line="11" pos:column="29">"daemon "<pos:position pos:line="11" pos:column="38"/></literal></expr> <pos:position pos:line="11" pos:column="39"/></then><else pos:line="11" pos:column="39">: <expr><literal type="string" pos:line="11" pos:column="41">""<pos:position pos:line="11" pos:column="43"/></literal></expr></else></ternary></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="45">who_am_i<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">()<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">rprintf<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">FINFO<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="24">"  arena:     %10ld   (bytes from sbrk)\n"<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>,
		<argument><expr><operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">long<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator><name><name pos:line="13" pos:column="23">mi<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">.<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">arena<pos:position pos:line="13" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">rprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">FINFO<pos:position pos:line="14" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="24">"  ordblks:   %10ld   (chunks not in use)\n"<pos:position pos:line="14" pos:column="68"/></literal></expr></argument>,
		<argument><expr><operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">long<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">)<pos:position pos:line="15" pos:column="23"/></operator><name><name pos:line="15" pos:column="23">mi<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">.<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">ordblks<pos:position pos:line="15" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">rprintf<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">FINFO<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="24">"  smblks:    %10ld\n"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>,
		<argument><expr><operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">long<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator><name><name pos:line="17" pos:column="23">mi<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">smblks<pos:position pos:line="17" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">rprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">FINFO<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="24">"  hblks:     %10ld   (chunks from mmap)\n"<pos:position pos:line="18" pos:column="67"/></literal></expr></argument>,
		<argument><expr><operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">long<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">)<pos:position pos:line="19" pos:column="23"/></operator><name><name pos:line="19" pos:column="23">mi<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">hblks<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">rprintf<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">FINFO<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="24">"  hblkhd:    %10ld   (bytes from mmap)\n"<pos:position pos:line="20" pos:column="66"/></literal></expr></argument>,
		<argument><expr><operator pos:line="21" pos:column="17">(<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">long<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">)<pos:position pos:line="21" pos:column="23"/></operator><name><name pos:line="21" pos:column="23">mi<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">hblkhd<pos:position pos:line="21" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">rprintf<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">FINFO<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="24">"  allmem:    %10ld   (bytes from sbrk + mmap)\n"<pos:position pos:line="22" pos:column="73"/></literal></expr></argument>,
		<argument><expr><operator pos:line="23" pos:column="17">(<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">long<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">)<pos:position pos:line="23" pos:column="23"/></operator><name><name pos:line="23" pos:column="23">mi<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">.<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">arena<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">+<pos:position pos:line="23" pos:column="33"/></operator> <name><name pos:line="23" pos:column="34">mi<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">.<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">hblkhd<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">rprintf<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">FINFO<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="24">"  usmblks:   %10ld\n"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>,
		<argument><expr><operator pos:line="25" pos:column="17">(<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">long<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">)<pos:position pos:line="25" pos:column="23"/></operator><name><name pos:line="25" pos:column="23">mi<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">usmblks<pos:position pos:line="25" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">rprintf<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">FINFO<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">"  fsmblks:   %10ld\n"<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>,
		<argument><expr><operator pos:line="27" pos:column="17">(<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">long<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">)<pos:position pos:line="27" pos:column="23"/></operator><name><name pos:line="27" pos:column="23">mi<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">fsmblks<pos:position pos:line="27" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">rprintf<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">FINFO<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="24">"  uordblks:  %10ld   (bytes used)\n"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>,
		<argument><expr><operator pos:line="29" pos:column="17">(<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">long<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">)<pos:position pos:line="29" pos:column="23"/></operator><name><name pos:line="29" pos:column="23">mi<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">.<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">uordblks<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">rprintf<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">FINFO<pos:position pos:line="30" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="24">"  fordblks:  %10ld   (bytes free)\n"<pos:position pos:line="30" pos:column="61"/></literal></expr></argument>,
		<argument><expr><operator pos:line="31" pos:column="17">(<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">long<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">)<pos:position pos:line="31" pos:column="23"/></operator><name><name pos:line="31" pos:column="23">mi<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">.<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">fordblks<pos:position pos:line="31" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">rprintf<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">FINFO<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="24">"  keepcost:  %10ld   (bytes in releasable chunk)\n"<pos:position pos:line="32" pos:column="76"/></literal></expr></argument>,
		<argument><expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">long<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">)<pos:position pos:line="33" pos:column="23"/></operator><name><name pos:line="33" pos:column="23">mi<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">.<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">keepcost<pos:position pos:line="33" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="34" pos:column="8">/* HAVE_MALLINFO */</comment>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_342_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">start_client<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">argc<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name><index pos:line="1" pos:column="45">[]<pos:position pos:line="1" pos:column="47"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">shell_machine<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">shell_path<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">shell_user<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">pid_t<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">pid<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">f_in<pos:position pos:line="9" pos:column="17"/></name></decl>,<decl><type ref="prev"/><name pos:line="9" pos:column="18">f_out<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">extern<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">int<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">local_server<pos:position pos:line="10" pos:column="32"/></name></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">extern<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name pos:line="11" pos:column="22">shell_cmd<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="12" pos:column="9">extern<pos:position pos:line="12" pos:column="15"/></specifier> <type><name pos:line="12" pos:column="16">int<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">rsync_port<pos:position pos:line="12" pos:column="30"/></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">extern<pos:position pos:line="13" pos:column="15"/></specifier> <type><name pos:line="13" pos:column="16">int<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">daemon_over_rsh<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="14" pos:column="9">extern<pos:position pos:line="14" pos:column="15"/></specifier> <type><name pos:line="14" pos:column="16">int<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">read_batch<pos:position pos:line="14" pos:column="30"/></name></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">rc<pos:position pos:line="15" pos:column="15"/></name></decl>;<pos:position pos:line="15" pos:column="16"/></decl_stmt>

	<comment type="block" pos:line="17" pos:column="9">/* Don't clobber argv[] so that ps(1) can still show the right
	 * command line. */</comment>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">rc<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">copy_argv<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">argv<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call><operator pos:line="19" pos:column="34">)<pos:position pos:line="19" pos:column="35"/></operator></expr>)<pos:position pos:line="19" pos:column="36"/></condition><then pos:line="19" pos:column="36">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">rc<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* rsync:// always uses rsync server over direct socket connection */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strncasecmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">URL_PREFIX<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="37">argv<pos:position pos:line="23" pos:column="41"/></name><index pos:line="23" pos:column="41">[<expr><literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr>]<pos:position pos:line="23" pos:column="44"/></index></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="46">strlen<pos:position pos:line="23" pos:column="52"/></name><argument_list pos:line="23" pos:column="52">(<argument><expr><name pos:line="23" pos:column="53">URL_PREFIX<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call> <operator pos:line="23" pos:column="66">==<pos:position pos:line="23" pos:column="68"/></operator> <literal type="number" pos:line="23" pos:column="69">0<pos:position pos:line="23" pos:column="70"/></literal></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71"> <block pos:line="23" pos:column="72">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">char<pos:position pos:line="24" pos:column="21"/></name> <modifier pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></modifier></type><name pos:line="24" pos:column="23">host<pos:position pos:line="24" pos:column="27"/></name></decl>, <modifier pos:line="24" pos:column="29">*<pos:position pos:line="24" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="24" pos:column="30">path<pos:position pos:line="24" pos:column="34"/></name></decl>;<pos:position pos:line="24" pos:column="35"/></decl_stmt>

		<expr_stmt><expr><name pos:line="26" pos:column="17">host<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name><name pos:line="26" pos:column="24">argv<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><literal type="number" pos:line="26" pos:column="29">0<pos:position pos:line="26" pos:column="30"/></literal></expr>]<pos:position pos:line="26" pos:column="31"/></index></name> <operator pos:line="26" pos:column="32">+<pos:position pos:line="26" pos:column="33"/></operator> <call><name pos:line="26" pos:column="34">strlen<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">URL_PREFIX<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">strchr<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">host<pos:position pos:line="27" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="27" pos:column="33">'/'<pos:position pos:line="27" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">p<pos:position pos:line="28" pos:column="22"/></name></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block pos:line="28" pos:column="24">{
			<expr_stmt><expr><operator pos:line="29" pos:column="25">*<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">p<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">path<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">p<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">+<pos:position pos:line="30" pos:column="34"/></operator><literal type="number" pos:line="30" pos:column="34">1<pos:position pos:line="30" pos:column="35"/></literal></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then> <else pos:line="31" pos:column="19">else <block pos:line="31" pos:column="24">{
			<expr_stmt><expr><name pos:line="32" pos:column="25">path<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <literal type="string" pos:line="32" pos:column="32">""<pos:position pos:line="32" pos:column="34"/></literal></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="34" pos:column="17">p<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <call><name pos:line="34" pos:column="21">strchr<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">host<pos:position pos:line="34" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="34" pos:column="33">':'<pos:position pos:line="34" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">p<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <block pos:line="35" pos:column="24">{
			<expr_stmt><expr><name pos:line="36" pos:column="25">rsync_port<pos:position pos:line="36" pos:column="35"/></name> <operator pos:line="36" pos:column="36">=<pos:position pos:line="36" pos:column="37"/></operator> <call><name pos:line="36" pos:column="38">atoi<pos:position pos:line="36" pos:column="42"/></name><argument_list pos:line="36" pos:column="42">(<argument><expr><name pos:line="36" pos:column="43">p<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">+<pos:position pos:line="36" pos:column="45"/></operator><literal type="number" pos:line="36" pos:column="45">1<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="37" pos:column="25">*<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">p<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="30">0<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
		<return pos:line="39" pos:column="17">return <expr><call><name pos:line="39" pos:column="24">start_socket_client<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">host<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="50">path<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">argc<pos:position pos:line="39" pos:column="60"/></name><operator pos:line="39" pos:column="60">-<pos:position pos:line="39" pos:column="61"/></operator><literal type="number" pos:line="39" pos:column="61">1<pos:position pos:line="39" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">argv<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">+<pos:position pos:line="39" pos:column="69"/></operator><literal type="number" pos:line="39" pos:column="69">1<pos:position pos:line="39" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="72"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">read_batch<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
		<expr_stmt><expr><name pos:line="43" pos:column="17">p<pos:position pos:line="43" pos:column="18"/></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <call><name pos:line="43" pos:column="21">find_colon<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name><name pos:line="43" pos:column="32">argv<pos:position pos:line="43" pos:column="36"/></name><index pos:line="43" pos:column="36">[<expr><literal type="number" pos:line="43" pos:column="37">0<pos:position pos:line="43" pos:column="38"/></literal></expr>]<pos:position pos:line="43" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">p<pos:position pos:line="44" pos:column="22"/></name></expr>)<pos:position pos:line="44" pos:column="23"/></condition><then pos:line="44" pos:column="23"> <block pos:line="44" pos:column="24">{
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">remote_filesfrom_file<pos:position pos:line="45" pos:column="50"/></name>
			 <operator pos:line="46" pos:column="26">&amp;&amp;<pos:position pos:line="46" pos:column="36"/></operator> <name pos:line="46" pos:column="29">remote_filesfrom_file<pos:position pos:line="46" pos:column="50"/></name> <operator pos:line="46" pos:column="51">!=<pos:position pos:line="46" pos:column="53"/></operator> <name pos:line="46" pos:column="54">files_from<pos:position pos:line="46" pos:column="64"/></name> <operator pos:line="46" pos:column="65">+<pos:position pos:line="46" pos:column="66"/></operator> <literal type="number" pos:line="46" pos:column="67">1<pos:position pos:line="46" pos:column="68"/></literal>
			 <operator pos:line="47" pos:column="26">&amp;&amp;<pos:position pos:line="47" pos:column="36"/></operator> <call><name pos:line="47" pos:column="29">strncmp<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">files_from<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="49">argv<pos:position pos:line="47" pos:column="53"/></name><index pos:line="47" pos:column="53">[<expr><literal type="number" pos:line="47" pos:column="54">0<pos:position pos:line="47" pos:column="55"/></literal></expr>]<pos:position pos:line="47" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="58">p<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">-<pos:position pos:line="47" pos:column="60"/></operator><name><name pos:line="47" pos:column="60">argv<pos:position pos:line="47" pos:column="64"/></name><index pos:line="47" pos:column="64">[<expr><literal type="number" pos:line="47" pos:column="65">0<pos:position pos:line="47" pos:column="66"/></literal></expr>]<pos:position pos:line="47" pos:column="67"/></index></name><operator pos:line="47" pos:column="67">+<pos:position pos:line="47" pos:column="68"/></operator><literal type="number" pos:line="47" pos:column="68">1<pos:position pos:line="47" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="70"/></argument_list></call> <operator pos:line="47" pos:column="71">!=<pos:position pos:line="47" pos:column="73"/></operator> <literal type="number" pos:line="47" pos:column="74">0<pos:position pos:line="47" pos:column="75"/></literal></expr>)<pos:position pos:line="47" pos:column="76"/></condition><then pos:line="47" pos:column="76"> <block pos:line="47" pos:column="77">{
				<expr_stmt><expr><call><name pos:line="48" pos:column="33">rprintf<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name pos:line="48" pos:column="41">FERROR<pos:position pos:line="48" pos:column="47"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="49" pos:column="41">"--files-from hostname is not transfer hostname\n"<pos:position pos:line="49" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="93"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="50" pos:column="33">exit_cleanup<pos:position pos:line="50" pos:column="45"/></name><argument_list pos:line="50" pos:column="45">(<argument><expr><name pos:line="50" pos:column="46">RERR_SYNTAX<pos:position pos:line="50" pos:column="57"/></name></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="51" pos:column="26"/></block></then></if>
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name><name pos:line="52" pos:column="29">p<pos:position pos:line="52" pos:column="30"/></name><index pos:line="52" pos:column="30">[<expr><literal type="number" pos:line="52" pos:column="31">1<pos:position pos:line="52" pos:column="32"/></literal></expr>]<pos:position pos:line="52" pos:column="33"/></index></name> <operator pos:line="52" pos:column="34">==<pos:position pos:line="52" pos:column="36"/></operator> <literal type="char" pos:line="52" pos:column="37">':'<pos:position pos:line="52" pos:column="40"/></literal></expr>)<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <block pos:line="52" pos:column="42">{ <comment type="block" pos:line="52" pos:column="44">/* double colon */</comment>
				<expr_stmt><expr><operator pos:line="53" pos:column="33">*<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="34">p<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">=<pos:position pos:line="53" pos:column="37"/></operator> <literal type="number" pos:line="53" pos:column="38">0<pos:position pos:line="53" pos:column="39"/></literal></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
				<if pos:line="54" pos:column="33">if <condition pos:line="54" pos:column="36">(<expr><operator pos:line="54" pos:column="37">!<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="38">shell_cmd<pos:position pos:line="54" pos:column="47"/></name></expr>)<pos:position pos:line="54" pos:column="48"/></condition><then pos:line="54" pos:column="48"> <block pos:line="54" pos:column="49">{
					<return pos:line="55" pos:column="41">return <expr><call><name pos:line="55" pos:column="48">start_socket_client<pos:position pos:line="55" pos:column="67"/></name><argument_list pos:line="55" pos:column="67">(<argument><expr><name><name pos:line="55" pos:column="68">argv<pos:position pos:line="55" pos:column="72"/></name><index pos:line="55" pos:column="72">[<expr><literal type="number" pos:line="55" pos:column="73">0<pos:position pos:line="55" pos:column="74"/></literal></expr>]<pos:position pos:line="55" pos:column="75"/></index></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="77">p<pos:position pos:line="55" pos:column="78"/></name><operator pos:line="55" pos:column="78">+<pos:position pos:line="55" pos:column="79"/></operator><literal type="number" pos:line="55" pos:column="79">2<pos:position pos:line="55" pos:column="80"/></literal></expr></argument>,
								   <argument><expr><name pos:line="56" pos:column="68">argc<pos:position pos:line="56" pos:column="72"/></name><operator pos:line="56" pos:column="72">-<pos:position pos:line="56" pos:column="73"/></operator><literal type="number" pos:line="56" pos:column="73">1<pos:position pos:line="56" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="76">argv<pos:position pos:line="56" pos:column="80"/></name><operator pos:line="56" pos:column="80">+<pos:position pos:line="56" pos:column="81"/></operator><literal type="number" pos:line="56" pos:column="81">1<pos:position pos:line="56" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="84"/></return>
				}<pos:position pos:line="57" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name pos:line="58" pos:column="33">p<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">++<pos:position pos:line="58" pos:column="36"/></operator></expr>;<pos:position pos:line="58" pos:column="37"/></expr_stmt>
				<expr_stmt><expr><name pos:line="59" pos:column="33">daemon_over_rsh<pos:position pos:line="59" pos:column="48"/></name> <operator pos:line="59" pos:column="49">=<pos:position pos:line="59" pos:column="50"/></operator> <literal type="number" pos:line="59" pos:column="51">1<pos:position pos:line="59" pos:column="52"/></literal></expr>;<pos:position pos:line="59" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="60" pos:column="26"/></block></then></if>

			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><name pos:line="62" pos:column="29">argc<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">&lt;<pos:position pos:line="62" pos:column="38"/></operator> <literal type="number" pos:line="62" pos:column="36">1<pos:position pos:line="62" pos:column="37"/></literal></expr>)<pos:position pos:line="62" pos:column="38"/></condition><then pos:line="62" pos:column="38"> <block pos:line="62" pos:column="39">{
				<expr_stmt><expr><call><name pos:line="63" pos:column="33">usage<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">FERROR<pos:position pos:line="63" pos:column="45"/></name></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="64" pos:column="33">exit_cleanup<pos:position pos:line="64" pos:column="45"/></name><argument_list pos:line="64" pos:column="45">(<argument><expr><name pos:line="64" pos:column="46">RERR_SYNTAX<pos:position pos:line="64" pos:column="57"/></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="65" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="67" pos:column="25">am_sender<pos:position pos:line="67" pos:column="34"/></name> <operator pos:line="67" pos:column="35">=<pos:position pos:line="67" pos:column="36"/></operator> <literal type="number" pos:line="67" pos:column="37">0<pos:position pos:line="67" pos:column="38"/></literal></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="68" pos:column="25">*<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">p<pos:position pos:line="68" pos:column="27"/></name> <operator pos:line="68" pos:column="28">=<pos:position pos:line="68" pos:column="29"/></operator> <literal type="number" pos:line="68" pos:column="30">0<pos:position pos:line="68" pos:column="31"/></literal></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="69" pos:column="25">shell_machine<pos:position pos:line="69" pos:column="38"/></name> <operator pos:line="69" pos:column="39">=<pos:position pos:line="69" pos:column="40"/></operator> <name><name pos:line="69" pos:column="41">argv<pos:position pos:line="69" pos:column="45"/></name><index pos:line="69" pos:column="45">[<expr><literal type="number" pos:line="69" pos:column="46">0<pos:position pos:line="69" pos:column="47"/></literal></expr>]<pos:position pos:line="69" pos:column="48"/></index></name></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">shell_path<pos:position pos:line="70" pos:column="35"/></name> <operator pos:line="70" pos:column="36">=<pos:position pos:line="70" pos:column="37"/></operator> <name pos:line="70" pos:column="38">p<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">+<pos:position pos:line="70" pos:column="40"/></operator><literal type="number" pos:line="70" pos:column="40">1<pos:position pos:line="70" pos:column="41"/></literal></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">argc<pos:position pos:line="71" pos:column="29"/></name><operator pos:line="71" pos:column="29">--<pos:position pos:line="71" pos:column="31"/></operator></expr>;<pos:position pos:line="71" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="72" pos:column="25">argv<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">++<pos:position pos:line="72" pos:column="31"/></operator></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="73" pos:column="18"/></block></then> <else pos:line="73" pos:column="19">else <block pos:line="73" pos:column="24">{
			<expr_stmt><expr><name pos:line="74" pos:column="25">am_sender<pos:position pos:line="74" pos:column="34"/></name> <operator pos:line="74" pos:column="35">=<pos:position pos:line="74" pos:column="36"/></operator> <literal type="number" pos:line="74" pos:column="37">1<pos:position pos:line="74" pos:column="38"/></literal></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>

			<comment type="block" pos:line="76" pos:column="25">/* rsync:// destination uses rsync server over direct socket */</comment>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><call><name pos:line="77" pos:column="29">strncasecmp<pos:position pos:line="77" pos:column="40"/></name><argument_list pos:line="77" pos:column="40">(<argument><expr><name pos:line="77" pos:column="41">URL_PREFIX<pos:position pos:line="77" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="53">argv<pos:position pos:line="77" pos:column="57"/></name><index pos:line="77" pos:column="57">[<expr><name pos:line="77" pos:column="58">argc<pos:position pos:line="77" pos:column="62"/></name><operator pos:line="77" pos:column="62">-<pos:position pos:line="77" pos:column="63"/></operator><literal type="number" pos:line="77" pos:column="63">1<pos:position pos:line="77" pos:column="64"/></literal></expr>]<pos:position pos:line="77" pos:column="65"/></index></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="67">strlen<pos:position pos:line="77" pos:column="73"/></name><argument_list pos:line="77" pos:column="73">(<argument><expr><name pos:line="77" pos:column="74">URL_PREFIX<pos:position pos:line="77" pos:column="84"/></name></expr></argument>)<pos:position pos:line="77" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="86"/></argument_list></call> <operator pos:line="77" pos:column="87">==<pos:position pos:line="77" pos:column="89"/></operator> <literal type="number" pos:line="77" pos:column="90">0<pos:position pos:line="77" pos:column="91"/></literal></expr>)<pos:position pos:line="77" pos:column="92"/></condition><then pos:line="77" pos:column="92"> <block pos:line="77" pos:column="93">{
				<decl_stmt><decl><type><name pos:line="78" pos:column="33">char<pos:position pos:line="78" pos:column="37"/></name> <modifier pos:line="78" pos:column="38">*<pos:position pos:line="78" pos:column="39"/></modifier></type><name pos:line="78" pos:column="39">host<pos:position pos:line="78" pos:column="43"/></name></decl>, <modifier pos:line="78" pos:column="45">*<pos:position pos:line="78" pos:column="46"/></modifier><decl><type ref="prev"/><name pos:line="78" pos:column="46">path<pos:position pos:line="78" pos:column="50"/></name></decl>;<pos:position pos:line="78" pos:column="51"/></decl_stmt>

				<expr_stmt><expr><name pos:line="80" pos:column="33">host<pos:position pos:line="80" pos:column="37"/></name> <operator pos:line="80" pos:column="38">=<pos:position pos:line="80" pos:column="39"/></operator> <name><name pos:line="80" pos:column="40">argv<pos:position pos:line="80" pos:column="44"/></name><index pos:line="80" pos:column="44">[<expr><name pos:line="80" pos:column="45">argc<pos:position pos:line="80" pos:column="49"/></name><operator pos:line="80" pos:column="49">-<pos:position pos:line="80" pos:column="50"/></operator><literal type="number" pos:line="80" pos:column="50">1<pos:position pos:line="80" pos:column="51"/></literal></expr>]<pos:position pos:line="80" pos:column="52"/></index></name> <operator pos:line="80" pos:column="53">+<pos:position pos:line="80" pos:column="54"/></operator> <call><name pos:line="80" pos:column="55">strlen<pos:position pos:line="80" pos:column="61"/></name><argument_list pos:line="80" pos:column="61">(<argument><expr><name pos:line="80" pos:column="62">URL_PREFIX<pos:position pos:line="80" pos:column="72"/></name></expr></argument>)<pos:position pos:line="80" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name pos:line="81" pos:column="33">p<pos:position pos:line="81" pos:column="34"/></name> <operator pos:line="81" pos:column="35">=<pos:position pos:line="81" pos:column="36"/></operator> <call><name pos:line="81" pos:column="37">strchr<pos:position pos:line="81" pos:column="43"/></name><argument_list pos:line="81" pos:column="43">(<argument><expr><name pos:line="81" pos:column="44">host<pos:position pos:line="81" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="81" pos:column="49">'/'<pos:position pos:line="81" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="54"/></expr_stmt>
				<if pos:line="82" pos:column="33">if <condition pos:line="82" pos:column="36">(<expr><name pos:line="82" pos:column="37">p<pos:position pos:line="82" pos:column="38"/></name></expr>)<pos:position pos:line="82" pos:column="39"/></condition><then pos:line="82" pos:column="39"> <block pos:line="82" pos:column="40">{
					<expr_stmt><expr><operator pos:line="83" pos:column="41">*<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="42">p<pos:position pos:line="83" pos:column="43"/></name> <operator pos:line="83" pos:column="44">=<pos:position pos:line="83" pos:column="45"/></operator> <literal type="number" pos:line="83" pos:column="46">0<pos:position pos:line="83" pos:column="47"/></literal></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
					<expr_stmt><expr><name pos:line="84" pos:column="41">path<pos:position pos:line="84" pos:column="45"/></name> <operator pos:line="84" pos:column="46">=<pos:position pos:line="84" pos:column="47"/></operator> <name pos:line="84" pos:column="48">p<pos:position pos:line="84" pos:column="49"/></name><operator pos:line="84" pos:column="49">+<pos:position pos:line="84" pos:column="50"/></operator><literal type="number" pos:line="84" pos:column="50">1<pos:position pos:line="84" pos:column="51"/></literal></expr>;<pos:position pos:line="84" pos:column="52"/></expr_stmt>
				}<pos:position pos:line="85" pos:column="34"/></block></then> <else pos:line="85" pos:column="35">else <block pos:line="85" pos:column="40">{
					<expr_stmt><expr><name pos:line="86" pos:column="41">path<pos:position pos:line="86" pos:column="45"/></name> <operator pos:line="86" pos:column="46">=<pos:position pos:line="86" pos:column="47"/></operator> <literal type="string" pos:line="86" pos:column="48">""<pos:position pos:line="86" pos:column="50"/></literal></expr>;<pos:position pos:line="86" pos:column="51"/></expr_stmt>
				}<pos:position pos:line="87" pos:column="34"/></block></else></if>
				<expr_stmt><expr><name pos:line="88" pos:column="33">p<pos:position pos:line="88" pos:column="34"/></name> <operator pos:line="88" pos:column="35">=<pos:position pos:line="88" pos:column="36"/></operator> <call><name pos:line="88" pos:column="37">strchr<pos:position pos:line="88" pos:column="43"/></name><argument_list pos:line="88" pos:column="43">(<argument><expr><name pos:line="88" pos:column="44">host<pos:position pos:line="88" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="88" pos:column="49">':'<pos:position pos:line="88" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="54"/></expr_stmt>
				<if pos:line="89" pos:column="33">if <condition pos:line="89" pos:column="36">(<expr><name pos:line="89" pos:column="37">p<pos:position pos:line="89" pos:column="38"/></name></expr>)<pos:position pos:line="89" pos:column="39"/></condition><then pos:line="89" pos:column="39"> <block pos:line="89" pos:column="40">{
					<expr_stmt><expr><name pos:line="90" pos:column="41">rsync_port<pos:position pos:line="90" pos:column="51"/></name> <operator pos:line="90" pos:column="52">=<pos:position pos:line="90" pos:column="53"/></operator> <call><name pos:line="90" pos:column="54">atoi<pos:position pos:line="90" pos:column="58"/></name><argument_list pos:line="90" pos:column="58">(<argument><expr><name pos:line="90" pos:column="59">p<pos:position pos:line="90" pos:column="60"/></name><operator pos:line="90" pos:column="60">+<pos:position pos:line="90" pos:column="61"/></operator><literal type="number" pos:line="90" pos:column="61">1<pos:position pos:line="90" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="64"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="91" pos:column="41">*<pos:position pos:line="91" pos:column="42"/></operator><name pos:line="91" pos:column="42">p<pos:position pos:line="91" pos:column="43"/></name> <operator pos:line="91" pos:column="44">=<pos:position pos:line="91" pos:column="45"/></operator> <literal type="number" pos:line="91" pos:column="46">0<pos:position pos:line="91" pos:column="47"/></literal></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt>
				}<pos:position pos:line="92" pos:column="34"/></block></then></if>
				<return pos:line="93" pos:column="33">return <expr><call><name pos:line="93" pos:column="40">start_socket_client<pos:position pos:line="93" pos:column="59"/></name><argument_list pos:line="93" pos:column="59">(<argument><expr><name pos:line="93" pos:column="60">host<pos:position pos:line="93" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="66">path<pos:position pos:line="93" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="72">argc<pos:position pos:line="93" pos:column="76"/></name><operator pos:line="93" pos:column="76">-<pos:position pos:line="93" pos:column="77"/></operator><literal type="number" pos:line="93" pos:column="77">1<pos:position pos:line="93" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="80">argv<pos:position pos:line="93" pos:column="84"/></name></expr></argument>)<pos:position pos:line="93" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="86"/></return>
			}<pos:position pos:line="94" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="96" pos:column="25">p<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">=<pos:position pos:line="96" pos:column="28"/></operator> <call><name pos:line="96" pos:column="29">find_colon<pos:position pos:line="96" pos:column="39"/></name><argument_list pos:line="96" pos:column="39">(<argument><expr><name><name pos:line="96" pos:column="40">argv<pos:position pos:line="96" pos:column="44"/></name><index pos:line="96" pos:column="44">[<expr><name pos:line="96" pos:column="45">argc<pos:position pos:line="96" pos:column="49"/></name><operator pos:line="96" pos:column="49">-<pos:position pos:line="96" pos:column="50"/></operator><literal type="number" pos:line="96" pos:column="50">1<pos:position pos:line="96" pos:column="51"/></literal></expr>]<pos:position pos:line="96" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="96" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="54"/></expr_stmt>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><name pos:line="97" pos:column="29">p<pos:position pos:line="97" pos:column="30"/></name> <operator pos:line="97" pos:column="31">&amp;&amp;<pos:position pos:line="97" pos:column="41"/></operator> <name pos:line="97" pos:column="34">remote_filesfrom_file<pos:position pos:line="97" pos:column="55"/></name>
			 <operator pos:line="98" pos:column="26">&amp;&amp;<pos:position pos:line="98" pos:column="36"/></operator> <name pos:line="98" pos:column="29">remote_filesfrom_file<pos:position pos:line="98" pos:column="50"/></name> <operator pos:line="98" pos:column="51">!=<pos:position pos:line="98" pos:column="53"/></operator> <name pos:line="98" pos:column="54">files_from<pos:position pos:line="98" pos:column="64"/></name> <operator pos:line="98" pos:column="65">+<pos:position pos:line="98" pos:column="66"/></operator> <literal type="number" pos:line="98" pos:column="67">1<pos:position pos:line="98" pos:column="68"/></literal>
			 <operator pos:line="99" pos:column="26">&amp;&amp;<pos:position pos:line="99" pos:column="36"/></operator> <call><name pos:line="99" pos:column="29">strncmp<pos:position pos:line="99" pos:column="36"/></name><argument_list pos:line="99" pos:column="36">(<argument><expr><name pos:line="99" pos:column="37">files_from<pos:position pos:line="99" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="49">argv<pos:position pos:line="99" pos:column="53"/></name><index pos:line="99" pos:column="53">[<expr><name pos:line="99" pos:column="54">argc<pos:position pos:line="99" pos:column="58"/></name><operator pos:line="99" pos:column="58">-<pos:position pos:line="99" pos:column="59"/></operator><literal type="number" pos:line="99" pos:column="59">1<pos:position pos:line="99" pos:column="60"/></literal></expr>]<pos:position pos:line="99" pos:column="61"/></index></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="63">p<pos:position pos:line="99" pos:column="64"/></name><operator pos:line="99" pos:column="64">-<pos:position pos:line="99" pos:column="65"/></operator><name><name pos:line="99" pos:column="65">argv<pos:position pos:line="99" pos:column="69"/></name><index pos:line="99" pos:column="69">[<expr><name pos:line="99" pos:column="70">argc<pos:position pos:line="99" pos:column="74"/></name><operator pos:line="99" pos:column="74">-<pos:position pos:line="99" pos:column="75"/></operator><literal type="number" pos:line="99" pos:column="75">1<pos:position pos:line="99" pos:column="76"/></literal></expr>]<pos:position pos:line="99" pos:column="77"/></index></name><operator pos:line="99" pos:column="77">+<pos:position pos:line="99" pos:column="78"/></operator><literal type="number" pos:line="99" pos:column="78">1<pos:position pos:line="99" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="80"/></argument_list></call> <operator pos:line="99" pos:column="81">!=<pos:position pos:line="99" pos:column="83"/></operator> <literal type="number" pos:line="99" pos:column="84">0<pos:position pos:line="99" pos:column="85"/></literal></expr>)<pos:position pos:line="99" pos:column="86"/></condition><then pos:line="99" pos:column="86"> <block pos:line="99" pos:column="87">{
				<expr_stmt><expr><call><name pos:line="100" pos:column="33">rprintf<pos:position pos:line="100" pos:column="40"/></name><argument_list pos:line="100" pos:column="40">(<argument><expr><name pos:line="100" pos:column="41">FERROR<pos:position pos:line="100" pos:column="47"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="101" pos:column="41">"--files-from hostname is not transfer hostname\n"<pos:position pos:line="101" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="93"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="102" pos:column="33">exit_cleanup<pos:position pos:line="102" pos:column="45"/></name><argument_list pos:line="102" pos:column="45">(<argument><expr><name pos:line="102" pos:column="46">RERR_SYNTAX<pos:position pos:line="102" pos:column="57"/></name></expr></argument>)<pos:position pos:line="102" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="103" pos:column="26"/></block></then></if>
			<if pos:line="104" pos:column="25">if <condition pos:line="104" pos:column="28">(<expr><operator pos:line="104" pos:column="29">!<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="30">p<pos:position pos:line="104" pos:column="31"/></name></expr>)<pos:position pos:line="104" pos:column="32"/></condition><then pos:line="104" pos:column="32"> <block pos:line="104" pos:column="33">{
				<expr_stmt><expr><name pos:line="105" pos:column="33">local_server<pos:position pos:line="105" pos:column="45"/></name> <operator pos:line="105" pos:column="46">=<pos:position pos:line="105" pos:column="47"/></operator> <literal type="number" pos:line="105" pos:column="48">1<pos:position pos:line="105" pos:column="49"/></literal></expr>;<pos:position pos:line="105" pos:column="50"/></expr_stmt>
				<if pos:line="106" pos:column="33">if <condition pos:line="106" pos:column="36">(<expr><name pos:line="106" pos:column="37">remote_filesfrom_file<pos:position pos:line="106" pos:column="58"/></name></expr>)<pos:position pos:line="106" pos:column="59"/></condition><then pos:line="106" pos:column="59"> <block pos:line="106" pos:column="60">{
					<expr_stmt><expr><call><name pos:line="107" pos:column="41">rprintf<pos:position pos:line="107" pos:column="48"/></name><argument_list pos:line="107" pos:column="48">(<argument><expr><name pos:line="107" pos:column="49">FERROR<pos:position pos:line="107" pos:column="55"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="108" pos:column="49">"--files-from is remote but transfer is local\n"<pos:position pos:line="108" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="99"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="109" pos:column="41">exit_cleanup<pos:position pos:line="109" pos:column="53"/></name><argument_list pos:line="109" pos:column="53">(<argument><expr><name pos:line="109" pos:column="54">RERR_SYNTAX<pos:position pos:line="109" pos:column="65"/></name></expr></argument>)<pos:position pos:line="109" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="67"/></expr_stmt>
				}<pos:position pos:line="110" pos:column="34"/></block></then></if>
			}<pos:position pos:line="111" pos:column="26"/></block></then> <elseif pos:line="111" pos:column="27">else <if pos:line="111" pos:column="32">if <condition pos:line="111" pos:column="35">(<expr><name><name pos:line="111" pos:column="36">p<pos:position pos:line="111" pos:column="37"/></name><index pos:line="111" pos:column="37">[<expr><literal type="number" pos:line="111" pos:column="38">1<pos:position pos:line="111" pos:column="39"/></literal></expr>]<pos:position pos:line="111" pos:column="40"/></index></name> <operator pos:line="111" pos:column="41">==<pos:position pos:line="111" pos:column="43"/></operator> <literal type="char" pos:line="111" pos:column="44">':'<pos:position pos:line="111" pos:column="47"/></literal></expr>)<pos:position pos:line="111" pos:column="48"/></condition><then pos:line="111" pos:column="48"> <block pos:line="111" pos:column="49">{ <comment type="block" pos:line="111" pos:column="51">/* double colon */</comment>
				<expr_stmt><expr><operator pos:line="112" pos:column="33">*<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">p<pos:position pos:line="112" pos:column="35"/></name> <operator pos:line="112" pos:column="36">=<pos:position pos:line="112" pos:column="37"/></operator> <literal type="number" pos:line="112" pos:column="38">0<pos:position pos:line="112" pos:column="39"/></literal></expr>;<pos:position pos:line="112" pos:column="40"/></expr_stmt>
				<if pos:line="113" pos:column="33">if <condition pos:line="113" pos:column="36">(<expr><operator pos:line="113" pos:column="37">!<pos:position pos:line="113" pos:column="38"/></operator><name pos:line="113" pos:column="38">shell_cmd<pos:position pos:line="113" pos:column="47"/></name></expr>)<pos:position pos:line="113" pos:column="48"/></condition><then pos:line="113" pos:column="48"> <block pos:line="113" pos:column="49">{
					<return pos:line="114" pos:column="41">return <expr><call><name pos:line="114" pos:column="48">start_socket_client<pos:position pos:line="114" pos:column="67"/></name><argument_list pos:line="114" pos:column="67">(<argument><expr><name><name pos:line="114" pos:column="68">argv<pos:position pos:line="114" pos:column="72"/></name><index pos:line="114" pos:column="72">[<expr><name pos:line="114" pos:column="73">argc<pos:position pos:line="114" pos:column="77"/></name><operator pos:line="114" pos:column="77">-<pos:position pos:line="114" pos:column="78"/></operator><literal type="number" pos:line="114" pos:column="78">1<pos:position pos:line="114" pos:column="79"/></literal></expr>]<pos:position pos:line="114" pos:column="80"/></index></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="82">p<pos:position pos:line="114" pos:column="83"/></name><operator pos:line="114" pos:column="83">+<pos:position pos:line="114" pos:column="84"/></operator><literal type="number" pos:line="114" pos:column="84">2<pos:position pos:line="114" pos:column="85"/></literal></expr></argument>,
								   <argument><expr><name pos:line="115" pos:column="68">argc<pos:position pos:line="115" pos:column="72"/></name><operator pos:line="115" pos:column="72">-<pos:position pos:line="115" pos:column="73"/></operator><literal type="number" pos:line="115" pos:column="73">1<pos:position pos:line="115" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="76">argv<pos:position pos:line="115" pos:column="80"/></name></expr></argument>)<pos:position pos:line="115" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="82"/></return>
				}<pos:position pos:line="116" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name pos:line="117" pos:column="33">p<pos:position pos:line="117" pos:column="34"/></name><operator pos:line="117" pos:column="34">++<pos:position pos:line="117" pos:column="36"/></operator></expr>;<pos:position pos:line="117" pos:column="37"/></expr_stmt>
				<expr_stmt><expr><name pos:line="118" pos:column="33">daemon_over_rsh<pos:position pos:line="118" pos:column="48"/></name> <operator pos:line="118" pos:column="49">=<pos:position pos:line="118" pos:column="50"/></operator> <literal type="number" pos:line="118" pos:column="51">1<pos:position pos:line="118" pos:column="52"/></literal></expr>;<pos:position pos:line="118" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="119" pos:column="26"/></block></then></if></elseif></if>

			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><name pos:line="121" pos:column="29">argc<pos:position pos:line="121" pos:column="33"/></name> <operator pos:line="121" pos:column="34">&lt;<pos:position pos:line="121" pos:column="38"/></operator> <literal type="number" pos:line="121" pos:column="36">2<pos:position pos:line="121" pos:column="37"/></literal></expr>)<pos:position pos:line="121" pos:column="38"/></condition><then pos:line="121" pos:column="38"> <block pos:line="121" pos:column="39">{
				<expr_stmt><expr><call><name pos:line="122" pos:column="33">usage<pos:position pos:line="122" pos:column="38"/></name><argument_list pos:line="122" pos:column="38">(<argument><expr><name pos:line="122" pos:column="39">FERROR<pos:position pos:line="122" pos:column="45"/></name></expr></argument>)<pos:position pos:line="122" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="123" pos:column="33">exit_cleanup<pos:position pos:line="123" pos:column="45"/></name><argument_list pos:line="123" pos:column="45">(<argument><expr><name pos:line="123" pos:column="46">RERR_SYNTAX<pos:position pos:line="123" pos:column="57"/></name></expr></argument>)<pos:position pos:line="123" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="124" pos:column="26"/></block></then></if>

			<if pos:line="126" pos:column="25">if <condition pos:line="126" pos:column="28">(<expr><name pos:line="126" pos:column="29">local_server<pos:position pos:line="126" pos:column="41"/></name></expr>)<pos:position pos:line="126" pos:column="42"/></condition><then pos:line="126" pos:column="42"> <block pos:line="126" pos:column="43">{
				<expr_stmt><expr><name pos:line="127" pos:column="33">shell_machine<pos:position pos:line="127" pos:column="46"/></name> <operator pos:line="127" pos:column="47">=<pos:position pos:line="127" pos:column="48"/></operator> <name pos:line="127" pos:column="49">NULL<pos:position pos:line="127" pos:column="53"/></name></expr>;<pos:position pos:line="127" pos:column="54"/></expr_stmt>
				<expr_stmt><expr><name pos:line="128" pos:column="33">shell_path<pos:position pos:line="128" pos:column="43"/></name> <operator pos:line="128" pos:column="44">=<pos:position pos:line="128" pos:column="45"/></operator> <name><name pos:line="128" pos:column="46">argv<pos:position pos:line="128" pos:column="50"/></name><index pos:line="128" pos:column="50">[<expr><name pos:line="128" pos:column="51">argc<pos:position pos:line="128" pos:column="55"/></name><operator pos:line="128" pos:column="55">-<pos:position pos:line="128" pos:column="56"/></operator><literal type="number" pos:line="128" pos:column="56">1<pos:position pos:line="128" pos:column="57"/></literal></expr>]<pos:position pos:line="128" pos:column="58"/></index></name></expr>;<pos:position pos:line="128" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="129" pos:column="26"/></block></then> <else pos:line="129" pos:column="27">else <block pos:line="129" pos:column="32">{
				<expr_stmt><expr><operator pos:line="130" pos:column="33">*<pos:position pos:line="130" pos:column="34"/></operator><name pos:line="130" pos:column="34">p<pos:position pos:line="130" pos:column="35"/></name> <operator pos:line="130" pos:column="36">=<pos:position pos:line="130" pos:column="37"/></operator> <literal type="number" pos:line="130" pos:column="38">0<pos:position pos:line="130" pos:column="39"/></literal></expr>;<pos:position pos:line="130" pos:column="40"/></expr_stmt>
				<expr_stmt><expr><name pos:line="131" pos:column="33">shell_machine<pos:position pos:line="131" pos:column="46"/></name> <operator pos:line="131" pos:column="47">=<pos:position pos:line="131" pos:column="48"/></operator> <name><name pos:line="131" pos:column="49">argv<pos:position pos:line="131" pos:column="53"/></name><index pos:line="131" pos:column="53">[<expr><name pos:line="131" pos:column="54">argc<pos:position pos:line="131" pos:column="58"/></name><operator pos:line="131" pos:column="58">-<pos:position pos:line="131" pos:column="59"/></operator><literal type="number" pos:line="131" pos:column="59">1<pos:position pos:line="131" pos:column="60"/></literal></expr>]<pos:position pos:line="131" pos:column="61"/></index></name></expr>;<pos:position pos:line="131" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="132" pos:column="33">shell_path<pos:position pos:line="132" pos:column="43"/></name> <operator pos:line="132" pos:column="44">=<pos:position pos:line="132" pos:column="45"/></operator> <name pos:line="132" pos:column="46">p<pos:position pos:line="132" pos:column="47"/></name><operator pos:line="132" pos:column="47">+<pos:position pos:line="132" pos:column="48"/></operator><literal type="number" pos:line="132" pos:column="48">1<pos:position pos:line="132" pos:column="49"/></literal></expr>;<pos:position pos:line="132" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="133" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name pos:line="134" pos:column="25">argc<pos:position pos:line="134" pos:column="29"/></name><operator pos:line="134" pos:column="29">--<pos:position pos:line="134" pos:column="31"/></operator></expr>;<pos:position pos:line="134" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="135" pos:column="18"/></block></else></if>
	}<pos:position pos:line="136" pos:column="10"/></block></then> <else pos:line="136" pos:column="11">else <block pos:line="136" pos:column="16">{
		<expr_stmt><expr><name pos:line="137" pos:column="17">am_sender<pos:position pos:line="137" pos:column="26"/></name> <operator pos:line="137" pos:column="27">=<pos:position pos:line="137" pos:column="28"/></operator> <literal type="number" pos:line="137" pos:column="29">1<pos:position pos:line="137" pos:column="30"/></literal></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="138" pos:column="17">local_server<pos:position pos:line="138" pos:column="29"/></name> <operator pos:line="138" pos:column="30">=<pos:position pos:line="138" pos:column="31"/></operator> <literal type="number" pos:line="138" pos:column="32">1<pos:position pos:line="138" pos:column="33"/></literal></expr>;<pos:position pos:line="138" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="139" pos:column="17">shell_path<pos:position pos:line="139" pos:column="27"/></name> <operator pos:line="139" pos:column="28">=<pos:position pos:line="139" pos:column="29"/></operator> <name><name pos:line="139" pos:column="30">argv<pos:position pos:line="139" pos:column="34"/></name><index pos:line="139" pos:column="34">[<expr><name pos:line="139" pos:column="35">argc<pos:position pos:line="139" pos:column="39"/></name><operator pos:line="139" pos:column="39">-<pos:position pos:line="139" pos:column="40"/></operator><literal type="number" pos:line="139" pos:column="40">1<pos:position pos:line="139" pos:column="41"/></literal></expr>]<pos:position pos:line="139" pos:column="42"/></index></name></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="140" pos:column="10"/></block></else></if>

	<if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><name pos:line="142" pos:column="13">shell_machine<pos:position pos:line="142" pos:column="26"/></name></expr>)<pos:position pos:line="142" pos:column="27"/></condition><then pos:line="142" pos:column="27"> <block pos:line="142" pos:column="28">{
		<expr_stmt><expr><name pos:line="143" pos:column="17">p<pos:position pos:line="143" pos:column="18"/></name> <operator pos:line="143" pos:column="19">=<pos:position pos:line="143" pos:column="20"/></operator> <call><name pos:line="143" pos:column="21">strchr<pos:position pos:line="143" pos:column="27"/></name><argument_list pos:line="143" pos:column="27">(<argument><expr><name pos:line="143" pos:column="28">shell_machine<pos:position pos:line="143" pos:column="41"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="143" pos:column="42">'@'<pos:position pos:line="143" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="47"/></expr_stmt>
		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name pos:line="144" pos:column="21">p<pos:position pos:line="144" pos:column="22"/></name></expr>)<pos:position pos:line="144" pos:column="23"/></condition><then pos:line="144" pos:column="23"> <block pos:line="144" pos:column="24">{
			<expr_stmt><expr><operator pos:line="145" pos:column="25">*<pos:position pos:line="145" pos:column="26"/></operator><name pos:line="145" pos:column="26">p<pos:position pos:line="145" pos:column="27"/></name> <operator pos:line="145" pos:column="28">=<pos:position pos:line="145" pos:column="29"/></operator> <literal type="number" pos:line="145" pos:column="30">0<pos:position pos:line="145" pos:column="31"/></literal></expr>;<pos:position pos:line="145" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="146" pos:column="25">shell_user<pos:position pos:line="146" pos:column="35"/></name> <operator pos:line="146" pos:column="36">=<pos:position pos:line="146" pos:column="37"/></operator> <name pos:line="146" pos:column="38">shell_machine<pos:position pos:line="146" pos:column="51"/></name></expr>;<pos:position pos:line="146" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="147" pos:column="25">shell_machine<pos:position pos:line="147" pos:column="38"/></name> <operator pos:line="147" pos:column="39">=<pos:position pos:line="147" pos:column="40"/></operator> <name pos:line="147" pos:column="41">p<pos:position pos:line="147" pos:column="42"/></name><operator pos:line="147" pos:column="42">+<pos:position pos:line="147" pos:column="43"/></operator><literal type="number" pos:line="147" pos:column="43">1<pos:position pos:line="147" pos:column="44"/></literal></expr>;<pos:position pos:line="147" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="148" pos:column="18"/></block></then></if>
	}<pos:position pos:line="149" pos:column="10"/></block></then></if>

	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">verbose<pos:position pos:line="151" pos:column="20"/></name> <operator pos:line="151" pos:column="21">&gt;<pos:position pos:line="151" pos:column="25"/></operator> <literal type="number" pos:line="151" pos:column="23">3<pos:position pos:line="151" pos:column="24"/></literal></expr>)<pos:position pos:line="151" pos:column="25"/></condition><then pos:line="151" pos:column="25"> <block pos:line="151" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="152" pos:column="17">rprintf<pos:position pos:line="152" pos:column="24"/></name><argument_list pos:line="152" pos:column="24">(<argument><expr><name pos:line="152" pos:column="25">FINFO<pos:position pos:line="152" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="152" pos:column="31">"cmd=%s machine=%s user=%s path=%s\n"<pos:position pos:line="152" pos:column="68"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="153" pos:column="25">shell_cmd<pos:position pos:line="153" pos:column="34"/></name></expr>?<pos:position pos:line="153" pos:column="35"/></condition><then><expr><name pos:line="153" pos:column="35">shell_cmd<pos:position pos:line="153" pos:column="44"/></name></expr></then><else pos:line="153" pos:column="44">:<expr><literal type="string" pos:line="153" pos:column="45">""<pos:position pos:line="153" pos:column="47"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="154" pos:column="25">shell_machine<pos:position pos:line="154" pos:column="38"/></name></expr>?<pos:position pos:line="154" pos:column="39"/></condition><then><expr><name pos:line="154" pos:column="39">shell_machine<pos:position pos:line="154" pos:column="52"/></name></expr></then><else pos:line="154" pos:column="52">:<expr><literal type="string" pos:line="154" pos:column="53">""<pos:position pos:line="154" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="155" pos:column="25">shell_user<pos:position pos:line="155" pos:column="35"/></name></expr>?<pos:position pos:line="155" pos:column="36"/></condition><then><expr><name pos:line="155" pos:column="36">shell_user<pos:position pos:line="155" pos:column="46"/></name></expr></then><else pos:line="155" pos:column="46">:<expr><literal type="string" pos:line="155" pos:column="47">""<pos:position pos:line="155" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="156" pos:column="25">shell_path<pos:position pos:line="156" pos:column="35"/></name></expr>?<pos:position pos:line="156" pos:column="36"/></condition><then><expr><name pos:line="156" pos:column="36">shell_path<pos:position pos:line="156" pos:column="46"/></name></expr></then><else pos:line="156" pos:column="46">:<expr><literal type="string" pos:line="156" pos:column="47">""<pos:position pos:line="156" pos:column="49"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="156" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="157" pos:column="10"/></block></then></if>

	<if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><operator pos:line="159" pos:column="13">!<pos:position pos:line="159" pos:column="14"/></operator><name pos:line="159" pos:column="14">am_sender<pos:position pos:line="159" pos:column="23"/></name> <operator pos:line="159" pos:column="24">&amp;&amp;<pos:position pos:line="159" pos:column="34"/></operator> <name pos:line="159" pos:column="27">argc<pos:position pos:line="159" pos:column="31"/></name> <operator pos:line="159" pos:column="32">&gt;<pos:position pos:line="159" pos:column="36"/></operator> <literal type="number" pos:line="159" pos:column="34">1<pos:position pos:line="159" pos:column="35"/></literal></expr>)<pos:position pos:line="159" pos:column="36"/></condition><then pos:line="159" pos:column="36"> <block pos:line="159" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="160" pos:column="17">usage<pos:position pos:line="160" pos:column="22"/></name><argument_list pos:line="160" pos:column="22">(<argument><expr><name pos:line="160" pos:column="23">FERROR<pos:position pos:line="160" pos:column="29"/></name></expr></argument>)<pos:position pos:line="160" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="161" pos:column="17">exit_cleanup<pos:position pos:line="161" pos:column="29"/></name><argument_list pos:line="161" pos:column="29">(<argument><expr><name pos:line="161" pos:column="30">RERR_SYNTAX<pos:position pos:line="161" pos:column="41"/></name></expr></argument>)<pos:position pos:line="161" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="162" pos:column="10"/></block></then></if>

	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name pos:line="164" pos:column="13">argc<pos:position pos:line="164" pos:column="17"/></name> <operator pos:line="164" pos:column="18">==<pos:position pos:line="164" pos:column="20"/></operator> <literal type="number" pos:line="164" pos:column="21">0<pos:position pos:line="164" pos:column="22"/></literal> <operator pos:line="164" pos:column="23">&amp;&amp;<pos:position pos:line="164" pos:column="33"/></operator> <operator pos:line="164" pos:column="26">!<pos:position pos:line="164" pos:column="27"/></operator><name pos:line="164" pos:column="27">am_sender<pos:position pos:line="164" pos:column="36"/></name></expr>)<pos:position pos:line="164" pos:column="37"/></condition><then pos:line="164" pos:column="37"> <block pos:line="164" pos:column="38">{
		<decl_stmt><decl><specifier pos:line="165" pos:column="17">extern<pos:position pos:line="165" pos:column="23"/></specifier> <type><name pos:line="165" pos:column="24">int<pos:position pos:line="165" pos:column="27"/></name></type> <name pos:line="165" pos:column="28">list_only<pos:position pos:line="165" pos:column="37"/></name></decl>;<pos:position pos:line="165" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><name pos:line="166" pos:column="17">list_only<pos:position pos:line="166" pos:column="26"/></name> <operator pos:line="166" pos:column="27">=<pos:position pos:line="166" pos:column="28"/></operator> <literal type="number" pos:line="166" pos:column="29">1<pos:position pos:line="166" pos:column="30"/></literal></expr>;<pos:position pos:line="166" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="167" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="169" pos:column="9">pid<pos:position pos:line="169" pos:column="12"/></name> <operator pos:line="169" pos:column="13">=<pos:position pos:line="169" pos:column="14"/></operator> <call><name pos:line="169" pos:column="15">do_cmd<pos:position pos:line="169" pos:column="21"/></name><argument_list pos:line="169" pos:column="21">(<argument><expr><name pos:line="169" pos:column="22">shell_cmd<pos:position pos:line="169" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="169" pos:column="32">shell_machine<pos:position pos:line="169" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="169" pos:column="46">shell_user<pos:position pos:line="169" pos:column="56"/></name></expr></argument>,<argument><expr><name pos:line="169" pos:column="57">shell_path<pos:position pos:line="169" pos:column="67"/></name></expr></argument>,
		     <argument><expr><operator pos:line="170" pos:column="22">&amp;<pos:position pos:line="170" pos:column="27"/></operator><name pos:line="170" pos:column="23">f_in<pos:position pos:line="170" pos:column="27"/></name></expr></argument>,<argument><expr><operator pos:line="170" pos:column="28">&amp;<pos:position pos:line="170" pos:column="33"/></operator><name pos:line="170" pos:column="29">f_out<pos:position pos:line="170" pos:column="34"/></name></expr></argument>)<pos:position pos:line="170" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="172" pos:column="9">/* if we're running an rsync server on the remote host over a
	 * remote shell command, we need to do the RSYNCD protocol first */</comment>
	<if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><name pos:line="174" pos:column="13">daemon_over_rsh<pos:position pos:line="174" pos:column="28"/></name></expr>)<pos:position pos:line="174" pos:column="29"/></condition><then pos:line="174" pos:column="29"> <block pos:line="174" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="175" pos:column="17">int<pos:position pos:line="175" pos:column="20"/></name></type> <name pos:line="175" pos:column="21">tmpret<pos:position pos:line="175" pos:column="27"/></name></decl>;<pos:position pos:line="175" pos:column="28"/></decl_stmt>
		<expr_stmt><expr><name pos:line="176" pos:column="17">tmpret<pos:position pos:line="176" pos:column="23"/></name> <operator pos:line="176" pos:column="24">=<pos:position pos:line="176" pos:column="25"/></operator> <call><name pos:line="176" pos:column="26">start_inband_exchange<pos:position pos:line="176" pos:column="47"/></name><argument_list pos:line="176" pos:column="47">(<argument><expr><name pos:line="176" pos:column="48">shell_user<pos:position pos:line="176" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="60">shell_path<pos:position pos:line="176" pos:column="70"/></name></expr></argument>,
					       <argument><expr><name pos:line="177" pos:column="48">f_in<pos:position pos:line="177" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="54">f_out<pos:position pos:line="177" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="61">argc<pos:position pos:line="177" pos:column="65"/></name></expr></argument>)<pos:position pos:line="177" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="67"/></expr_stmt>
		<if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><name pos:line="178" pos:column="21">tmpret<pos:position pos:line="178" pos:column="27"/></name> <operator pos:line="178" pos:column="28">&lt;<pos:position pos:line="178" pos:column="32"/></operator> <literal type="number" pos:line="178" pos:column="30">0<pos:position pos:line="178" pos:column="31"/></literal></expr>)<pos:position pos:line="178" pos:column="32"/></condition><then pos:line="178" pos:column="32">
			<block type="pseudo"><return pos:line="179" pos:column="25">return <expr><name pos:line="179" pos:column="32">tmpret<pos:position pos:line="179" pos:column="38"/></name></expr>;<pos:position pos:line="179" pos:column="39"/></return></block></then></if>
	}<pos:position pos:line="180" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="182" pos:column="9">ret<pos:position pos:line="182" pos:column="12"/></name> <operator pos:line="182" pos:column="13">=<pos:position pos:line="182" pos:column="14"/></operator> <call><name pos:line="182" pos:column="15">client_run<pos:position pos:line="182" pos:column="25"/></name><argument_list pos:line="182" pos:column="25">(<argument><expr><name pos:line="182" pos:column="26">f_in<pos:position pos:line="182" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="32">f_out<pos:position pos:line="182" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="39">pid<pos:position pos:line="182" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="44">argc<pos:position pos:line="182" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="50">argv<pos:position pos:line="182" pos:column="54"/></name></expr></argument>)<pos:position pos:line="182" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="184" pos:column="9">fflush<pos:position pos:line="184" pos:column="15"/></name><argument_list pos:line="184" pos:column="15">(<argument><expr><name pos:line="184" pos:column="16">stdout<pos:position pos:line="184" pos:column="22"/></name></expr></argument>)<pos:position pos:line="184" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="185" pos:column="9">fflush<pos:position pos:line="185" pos:column="15"/></name><argument_list pos:line="185" pos:column="15">(<argument><expr><name pos:line="185" pos:column="16">stderr<pos:position pos:line="185" pos:column="22"/></name></expr></argument>)<pos:position pos:line="185" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="24"/></expr_stmt>

	<return pos:line="187" pos:column="9">return <expr><name pos:line="187" pos:column="16">ret<pos:position pos:line="187" pos:column="19"/></name></expr>;<pos:position pos:line="187" pos:column="20"/></return>
}<pos:position pos:line="188" pos:column="2"/></block></function></unit>

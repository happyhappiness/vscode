<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_486_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">free_acl<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">stat_x<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">sxp<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">sxp<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">-&gt;<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="18">acc_acl<pos:position pos:line="3" pos:column="25"/></name></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26"> <block pos:line="3" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">rsync_acl_free<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name><name pos:line="4" pos:column="32">sxp<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">acc_acl<pos:position pos:line="4" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">free<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name><name pos:line="5" pos:column="22">sxp<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">acc_acl<pos:position pos:line="5" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="6" pos:column="17">sxp<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">acc_acl<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="32">NULL<pos:position pos:line="6" pos:column="36"/></name></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">sxp<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">def_acl<pos:position pos:line="8" pos:column="25"/></name></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">rsync_acl_free<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name><name pos:line="9" pos:column="32">sxp<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">def_acl<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">free<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name><name pos:line="10" pos:column="22">sxp<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">def_acl<pos:position pos:line="10" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="11" pos:column="17">sxp<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">def_acl<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">NULL<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_36_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">copy_section<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">local_vars<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">psectionDest<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">local_vars<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">psectionSource<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">count<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">LOCAL_STRING_COUNT<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">()<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier><modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">strings<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">char<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></operator><operator pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></operator><operator pos:line="4" pos:column="33">)<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">psectionDest<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">memcpy<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">psectionDest<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">psectionSource<pos:position pos:line="6" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="46">sizeof <name><name pos:line="6" pos:column="53">psectionDest<pos:position pos:line="6" pos:column="65"/></name><index pos:line="6" pos:column="65">[<expr><literal type="number" pos:line="6" pos:column="66">0<pos:position pos:line="6" pos:column="67"/></literal></expr>]<pos:position pos:line="6" pos:column="68"/></index></name></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="70"/></expr_stmt>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><name pos:line="7" pos:column="16">count<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">--<pos:position pos:line="7" pos:column="23"/></operator></expr>)<pos:position pos:line="7" pos:column="24"/></condition> <block pos:line="7" pos:column="25">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">strings<pos:position pos:line="8" pos:column="28"/></name><index pos:line="8" pos:column="28">[<expr><name pos:line="8" pos:column="29">count<pos:position pos:line="8" pos:column="34"/></name></expr>]<pos:position pos:line="8" pos:column="35"/></index></name> <operator pos:line="8" pos:column="36">&amp;&amp;<pos:position pos:line="8" pos:column="46"/></operator> <operator pos:line="8" pos:column="39">!<pos:position pos:line="8" pos:column="40"/></operator><operator pos:line="8" pos:column="40">(<pos:position pos:line="8" pos:column="41"/></operator><name><name pos:line="8" pos:column="41">strings<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><name pos:line="8" pos:column="49">count<pos:position pos:line="8" pos:column="54"/></name></expr>]<pos:position pos:line="8" pos:column="55"/></index></name> <operator pos:line="8" pos:column="56">=<pos:position pos:line="8" pos:column="57"/></operator> <call><name pos:line="8" pos:column="58">strdup<pos:position pos:line="8" pos:column="64"/></name><argument_list pos:line="8" pos:column="64">(<argument><expr><name><name pos:line="8" pos:column="65">strings<pos:position pos:line="8" pos:column="72"/></name><index pos:line="8" pos:column="72">[<expr><name pos:line="8" pos:column="73">count<pos:position pos:line="8" pos:column="78"/></name></expr>]<pos:position pos:line="8" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call><operator pos:line="8" pos:column="80">)<pos:position pos:line="8" pos:column="81"/></operator></expr>)<pos:position pos:line="8" pos:column="82"/></condition><then pos:line="8" pos:column="82">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">out_of_memory<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><literal type="string" pos:line="9" pos:column="39">"copy_section"<pos:position pos:line="9" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block></while>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

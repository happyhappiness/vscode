<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_506_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">set_rsync_acl<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">fname<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">acl_duo<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">duo_item<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">SMB_ACL_TYPE_T<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">type<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">stat_x<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">sxp<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">mode_t<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">mode<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">type<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">==<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">SMB_ACL_TYPE_DEFAULT<pos:position pos:line="4" pos:column="41"/></name>
	 <operator pos:line="5" pos:column="10">&amp;&amp;<pos:position pos:line="5" pos:column="20"/></operator> <name><name pos:line="5" pos:column="13">duo_item<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">-&gt;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="23">racl<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">.<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">user_obj<pos:position pos:line="5" pos:column="36"/></name></name> <operator pos:line="5" pos:column="37">==<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">NO_ENTRY<pos:position pos:line="5" pos:column="48"/></name></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49"> <block pos:line="5" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">rc<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="7" pos:column="22"/></name></cpp:ifdef>
		<comment type="block" pos:line="8" pos:column="17">/* --fake-super support: delete default ACL from xattrs. */</comment>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">am_root<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">&lt;<pos:position pos:line="9" pos:column="33"/></operator> <literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">rc<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">del_def_xattr_acl<pos:position pos:line="10" pos:column="47"/></name><argument_list pos:line="10" pos:column="47">(<argument><expr><name pos:line="10" pos:column="48">fname<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt></block></then>
		<else pos:line="11" pos:column="17">else
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">rc<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <call><name pos:line="13" pos:column="30">sys_acl_delete_def_file<pos:position pos:line="13" pos:column="53"/></name><argument_list pos:line="13" pos:column="53">(<argument><expr><name pos:line="13" pos:column="54">fname<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt></block></else></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">rc<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&lt;<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">rsyserr<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">FERROR_XFER<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">errno<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="53">"set_acl: sys_acl_delete_def_file(%s)"<pos:position pos:line="15" pos:column="91"/></literal></expr></argument>,
				<argument><expr><name pos:line="16" pos:column="33">fname<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
			<return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">-<pos:position pos:line="17" pos:column="33"/></operator><literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></return>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="19" pos:column="22"/></name></cpp:ifdef>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><name pos:line="20" pos:column="20">am_root<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&lt;<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <block pos:line="20" pos:column="33">{
		<comment type="block" pos:line="21" pos:column="17">/* --fake-super support: store ACLs in an xattr. */</comment>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">int<pos:position pos:line="22" pos:column="20"/></name></type> <name pos:line="22" pos:column="21">cnt<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><name><name pos:line="22" pos:column="27">duo_item<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">racl<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">.<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">names<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">count<pos:position pos:line="22" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="22" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">size_t<pos:position pos:line="23" pos:column="23"/></name></type> <name pos:line="23" pos:column="24">len<pos:position pos:line="23" pos:column="27"/></name> <init pos:line="23" pos:column="28">= <expr><literal type="number" pos:line="23" pos:column="30">4<pos:position pos:line="23" pos:column="31"/></literal><operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator><literal type="number" pos:line="23" pos:column="32">4<pos:position pos:line="23" pos:column="33"/></literal> <operator pos:line="23" pos:column="34">+<pos:position pos:line="23" pos:column="35"/></operator> <name pos:line="23" pos:column="36">cnt<pos:position pos:line="23" pos:column="39"/></name> <operator pos:line="23" pos:column="40">*<pos:position pos:line="23" pos:column="41"/></operator> <operator pos:line="23" pos:column="42">(<pos:position pos:line="23" pos:column="43"/></operator><literal type="number" pos:line="23" pos:column="43">4<pos:position pos:line="23" pos:column="44"/></literal><operator pos:line="23" pos:column="44">+<pos:position pos:line="23" pos:column="45"/></operator><literal type="number" pos:line="23" pos:column="45">4<pos:position pos:line="23" pos:column="46"/></literal><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator></expr></init></decl>;<pos:position pos:line="23" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">char<pos:position pos:line="24" pos:column="21"/></name> <modifier pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></modifier></type><name pos:line="24" pos:column="23">buf<pos:position pos:line="24" pos:column="26"/></name> <init pos:line="24" pos:column="27">= <expr><call><name pos:line="24" pos:column="29">new_array<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">char<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="45">len<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">rc<pos:position pos:line="25" pos:column="23"/></name></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">SIVAL<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">buf<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="28">0<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="31">duo_item<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">racl<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">user_obj<pos:position pos:line="27" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">SIVAL<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">buf<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="28">4<pos:position pos:line="28" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="31">duo_item<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">racl<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">.<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="46">group_obj<pos:position pos:line="28" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">SIVAL<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">buf<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="28">8<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="31">duo_item<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">racl<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">.<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="46">mask_obj<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">SIVAL<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">buf<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="28">12<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="32">duo_item<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">racl<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">other_obj<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">cnt<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">char<pos:position pos:line="33" pos:column="29"/></name> <modifier pos:line="33" pos:column="30">*<pos:position pos:line="33" pos:column="31"/></modifier></type><name pos:line="33" pos:column="31">bp<pos:position pos:line="33" pos:column="33"/></name> <init pos:line="33" pos:column="34">= <expr><name pos:line="33" pos:column="36">buf<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">+<pos:position pos:line="33" pos:column="41"/></operator> <literal type="number" pos:line="33" pos:column="42">4<pos:position pos:line="33" pos:column="43"/></literal><operator pos:line="33" pos:column="43">*<pos:position pos:line="33" pos:column="44"/></operator><literal type="number" pos:line="33" pos:column="44">4<pos:position pos:line="33" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="34" pos:column="25">id_access<pos:position pos:line="34" pos:column="34"/></name> <modifier pos:line="34" pos:column="35">*<pos:position pos:line="34" pos:column="36"/></modifier></type><name pos:line="34" pos:column="36">ida<pos:position pos:line="34" pos:column="39"/></name> <init pos:line="34" pos:column="40">= <expr><name><name pos:line="34" pos:column="42">duo_item<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">racl<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">.<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">names<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">.<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="63">idas<pos:position pos:line="34" pos:column="67"/></name></name></expr></init></decl>;<pos:position pos:line="34" pos:column="68"/></decl_stmt>
			<for pos:line="35" pos:column="25">for <control pos:line="35" pos:column="29">( <init pos:line="35" pos:column="31">;<pos:position pos:line="35" pos:column="32"/></init> <condition><expr><name pos:line="35" pos:column="33">cnt<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">--<pos:position pos:line="35" pos:column="38"/></operator></expr>;<pos:position pos:line="35" pos:column="39"/></condition> <incr><expr><name pos:line="35" pos:column="40">ida<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">++<pos:position pos:line="35" pos:column="45"/></operator></expr><operator pos:line="35" pos:column="45">,<pos:position pos:line="35" pos:column="46"/></operator> <expr><name pos:line="35" pos:column="47">bp<pos:position pos:line="35" pos:column="49"/></name> <operator pos:line="35" pos:column="50">+=<pos:position pos:line="35" pos:column="52"/></operator> <literal type="number" pos:line="35" pos:column="53">4<pos:position pos:line="35" pos:column="54"/></literal><operator pos:line="35" pos:column="54">+<pos:position pos:line="35" pos:column="55"/></operator><literal type="number" pos:line="35" pos:column="55">4<pos:position pos:line="35" pos:column="56"/></literal></expr></incr>)<pos:position pos:line="35" pos:column="57"/></control> <block pos:line="35" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">SIVAL<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">bp<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="43">0<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="46">ida<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">-&gt;<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="51">id<pos:position pos:line="36" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">SIVAL<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">bp<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="43">4<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="46">ida<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">access<pos:position pos:line="37" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="38" pos:column="26"/></block></for>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="40" pos:column="17">rc<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">set_xattr_acl<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">fname<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">type<pos:position pos:line="40" pos:column="47"/></name> <operator pos:line="40" pos:column="48">==<pos:position pos:line="40" pos:column="50"/></operator> <name pos:line="40" pos:column="51">SMB_ACL_TYPE_ACCESS<pos:position pos:line="40" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="72">buf<pos:position pos:line="40" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="77">len<pos:position pos:line="40" pos:column="80"/></name></expr></argument>)<pos:position pos:line="40" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">free<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">buf<pos:position pos:line="41" pos:column="25"/></name></expr></argument>)<pos:position pos:line="41" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
		<return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">rc<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></return>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">mode_t<pos:position pos:line="45" pos:column="23"/></name></type> <name pos:line="45" pos:column="24">cur_mode<pos:position pos:line="45" pos:column="32"/></name> <init pos:line="45" pos:column="33">= <expr><name><name pos:line="45" pos:column="35">sxp<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">st<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">.<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">st_mode<pos:position pos:line="45" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="45" pos:column="51"/></decl_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><name><name pos:line="46" pos:column="22">duo_item<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">-&gt;<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="32">sacl<pos:position pos:line="46" pos:column="36"/></name></name>
		 <operator pos:line="47" pos:column="18">&amp;&amp;<pos:position pos:line="47" pos:column="28"/></operator> <operator pos:line="47" pos:column="21">!<pos:position pos:line="47" pos:column="22"/></operator><call><name pos:line="47" pos:column="22">pack_smb_acl<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><operator pos:line="47" pos:column="35">&amp;<pos:position pos:line="47" pos:column="40"/></operator><name><name pos:line="47" pos:column="36">duo_item<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">-&gt;<pos:position pos:line="47" pos:column="49"/></operator><name pos:line="47" pos:column="46">sacl<pos:position pos:line="47" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="52">&amp;<pos:position pos:line="47" pos:column="57"/></operator><name><name pos:line="47" pos:column="53">duo_item<pos:position pos:line="47" pos:column="61"/></name><operator pos:line="47" pos:column="61">-&gt;<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="63">racl<pos:position pos:line="47" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="69"/></condition><then pos:line="47" pos:column="69">
			<block type="pseudo"><return pos:line="48" pos:column="25">return <expr><operator pos:line="48" pos:column="32">-<pos:position pos:line="48" pos:column="33"/></operator><literal type="number" pos:line="48" pos:column="33">1<pos:position pos:line="48" pos:column="34"/></literal></expr>;<pos:position pos:line="48" pos:column="35"/></return></block></then></if>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">HAVE_OSX_ACLS<pos:position pos:line="49" pos:column="21"/></name></cpp:ifdef>
		<expr_stmt><expr><name pos:line="50" pos:column="17">mode<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt> <comment type="block" pos:line="50" pos:column="27">/* eliminate compiler warning */</comment>
<cpp:else pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">else<pos:position pos:line="51" pos:column="6"/></cpp:directive></cpp:else>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">type<pos:position pos:line="52" pos:column="25"/></name> <operator pos:line="52" pos:column="26">==<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="29">SMB_ACL_TYPE_ACCESS<pos:position pos:line="52" pos:column="48"/></name></expr>)<pos:position pos:line="52" pos:column="49"/></condition><then pos:line="52" pos:column="49"> <block pos:line="52" pos:column="50">{
			<expr_stmt><expr><name pos:line="53" pos:column="25">cur_mode<pos:position pos:line="53" pos:column="33"/></name> <operator pos:line="53" pos:column="34">=<pos:position pos:line="53" pos:column="35"/></operator> <call><name pos:line="53" pos:column="36">change_sacl_perms<pos:position pos:line="53" pos:column="53"/></name><argument_list pos:line="53" pos:column="53">(<argument><expr><name><name pos:line="53" pos:column="54">duo_item<pos:position pos:line="53" pos:column="62"/></name><operator pos:line="53" pos:column="62">-&gt;<pos:position pos:line="53" pos:column="67"/></operator><name pos:line="53" pos:column="64">sacl<pos:position pos:line="53" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="70">&amp;<pos:position pos:line="53" pos:column="75"/></operator><name><name pos:line="53" pos:column="71">duo_item<pos:position pos:line="53" pos:column="79"/></name><operator pos:line="53" pos:column="79">-&gt;<pos:position pos:line="53" pos:column="84"/></operator><name pos:line="53" pos:column="81">racl<pos:position pos:line="53" pos:column="85"/></name></name></expr></argument>,
						     <argument><expr><name pos:line="54" pos:column="54">cur_mode<pos:position pos:line="54" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="64">mode<pos:position pos:line="54" pos:column="68"/></name></expr></argument>)<pos:position pos:line="54" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="70"/></expr_stmt>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">cur_mode<pos:position pos:line="55" pos:column="37"/></name> <operator pos:line="55" pos:column="38">==<pos:position pos:line="55" pos:column="40"/></operator> <operator pos:line="55" pos:column="41">(<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">mode_t<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">)<pos:position pos:line="55" pos:column="49"/></operator><operator pos:line="55" pos:column="49">-<pos:position pos:line="55" pos:column="50"/></operator><literal type="number" pos:line="55" pos:column="50">1<pos:position pos:line="55" pos:column="51"/></literal></expr>)<pos:position pos:line="55" pos:column="52"/></condition><then pos:line="55" pos:column="52">
				<block type="pseudo"><return pos:line="56" pos:column="33">return <expr><literal type="number" pos:line="56" pos:column="40">0<pos:position pos:line="56" pos:column="41"/></literal></expr>;<pos:position pos:line="56" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><call><name pos:line="59" pos:column="21">sys_acl_set_file<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">fname<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="45">type<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="51">duo_item<pos:position pos:line="59" pos:column="59"/></name><operator pos:line="59" pos:column="59">-&gt;<pos:position pos:line="59" pos:column="64"/></operator><name pos:line="59" pos:column="61">sacl<pos:position pos:line="59" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call> <operator pos:line="59" pos:column="67">&lt;<pos:position pos:line="59" pos:column="71"/></operator> <literal type="number" pos:line="59" pos:column="69">0<pos:position pos:line="59" pos:column="70"/></literal></expr>)<pos:position pos:line="59" pos:column="71"/></condition><then pos:line="59" pos:column="71"> <block pos:line="59" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">rsyserr<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">(<argument><expr><name pos:line="60" pos:column="33">FERROR_XFER<pos:position pos:line="60" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="46">errno<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="53">"set_acl: sys_acl_set_file(%s, %s)"<pos:position pos:line="60" pos:column="88"/></literal></expr></argument>,
				<argument><expr><name pos:line="61" pos:column="33">fname<pos:position pos:line="61" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="40">str_acl_type<pos:position pos:line="61" pos:column="52"/></name><argument_list pos:line="61" pos:column="52">(<argument><expr><name pos:line="61" pos:column="53">type<pos:position pos:line="61" pos:column="57"/></name></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="60"/></expr_stmt>
			<return pos:line="62" pos:column="25">return <expr><operator pos:line="62" pos:column="32">-<pos:position pos:line="62" pos:column="33"/></operator><literal type="number" pos:line="62" pos:column="33">1<pos:position pos:line="62" pos:column="34"/></literal></expr>;<pos:position pos:line="62" pos:column="35"/></return>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">type<pos:position pos:line="64" pos:column="25"/></name> <operator pos:line="64" pos:column="26">==<pos:position pos:line="64" pos:column="28"/></operator> <name pos:line="64" pos:column="29">SMB_ACL_TYPE_ACCESS<pos:position pos:line="64" pos:column="48"/></name></expr>)<pos:position pos:line="64" pos:column="49"/></condition><then pos:line="64" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="25">sxp<pos:position pos:line="65" pos:column="28"/></name><operator pos:line="65" pos:column="28">-&gt;<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="30">st<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">st_mode<pos:position pos:line="65" pos:column="40"/></name></name> <operator pos:line="65" pos:column="41">=<pos:position pos:line="65" pos:column="42"/></operator> <name pos:line="65" pos:column="43">cur_mode<pos:position pos:line="65" pos:column="51"/></name></expr>;<pos:position pos:line="65" pos:column="52"/></expr_stmt></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></else></if>

	<return pos:line="68" pos:column="9">return <expr><literal type="number" pos:line="68" pos:column="16">0<pos:position pos:line="68" pos:column="17"/></literal></expr>;<pos:position pos:line="68" pos:column="18"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

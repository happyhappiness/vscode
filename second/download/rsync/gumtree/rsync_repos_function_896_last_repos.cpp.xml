<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_896_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">getpass<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">prompt<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">password<pos:position pos:line="3" pos:column="29"/></name><index pos:line="3" pos:column="29">[<expr><literal type="number" pos:line="3" pos:column="30">256<pos:position pos:line="3" pos:column="33"/></literal></expr>]<pos:position pos:line="3" pos:column="34"/></index></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">BOOL<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">tty_changed<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">False<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="35">read_success<pos:position pos:line="5" pos:column="47"/></name></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">termios<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">tty_old<pos:position pos:line="6" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="33">tty_new<pos:position pos:line="6" pos:column="40"/></name></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">FILE<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">in<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">stdin<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="28">out<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">stderr<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">FILE<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">tty<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><call><name pos:line="8" pos:column="21">fopen<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><literal type="string" pos:line="8" pos:column="27">"/dev/tty"<pos:position pos:line="8" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="39">"w+"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="45"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">tty<pos:position pos:line="10" pos:column="16"/></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">in<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">out<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">tty<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">tcgetattr<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><call><name pos:line="13" pos:column="23">fileno<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">in<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="36">tty_old<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call> <operator pos:line="13" pos:column="45">==<pos:position pos:line="13" pos:column="47"/></operator> <literal type="number" pos:line="13" pos:column="48">0<pos:position pos:line="13" pos:column="49"/></literal></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50"> <block pos:line="13" pos:column="51">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">tty_new<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">tty_old<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">tty_new<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">c_lflag<pos:position pos:line="15" pos:column="32"/></name></name> <operator pos:line="15" pos:column="33">&amp;=<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="36">~<pos:position pos:line="15" pos:column="37"/></operator><operator pos:line="15" pos:column="37">(<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">ECHO<pos:position pos:line="15" pos:column="42"/></name> <operator pos:line="15" pos:column="43">|<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">ISIG<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">)<pos:position pos:line="15" pos:column="50"/></operator></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">tcsetattr<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><call><name pos:line="17" pos:column="31">fileno<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">in<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">TCSAFLUSH<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="54">&amp;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="55">tty_new<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call> <operator pos:line="17" pos:column="64">==<pos:position pos:line="17" pos:column="66"/></operator> <literal type="number" pos:line="17" pos:column="67">0<pos:position pos:line="17" pos:column="68"/></literal></expr>)<pos:position pos:line="17" pos:column="69"/></condition><then pos:line="17" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">tty_changed<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">=<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">True<pos:position pos:line="18" pos:column="43"/></name></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">tty_changed<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition><then pos:line="21" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">fputs<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><literal type="string" pos:line="22" pos:column="23">"(WARNING: will be visible) "<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">out<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">fputs<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">prompt<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="23">out<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">fflush<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">out<pos:position pos:line="24" pos:column="19"/></name></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name pos:line="26" pos:column="9">read_success<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <call><name pos:line="26" pos:column="24">fgets<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">password<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="40">sizeof <name pos:line="26" pos:column="47">password<pos:position pos:line="26" pos:column="55"/></name></sizeof></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">in<pos:position pos:line="26" pos:column="59"/></name></expr></argument>)<pos:position pos:line="26" pos:column="60"/></argument_list></call> <operator pos:line="26" pos:column="61">!=<pos:position pos:line="26" pos:column="63"/></operator> <name pos:line="26" pos:column="64">NULL<pos:position pos:line="26" pos:column="68"/></name></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt>

	<comment type="block" pos:line="28" pos:column="9">/* Print the newline that hasn't been echoed. */</comment>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">fputc<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><literal type="char" pos:line="29" pos:column="15">'\n'<pos:position pos:line="29" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="21">out<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">tty_changed<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">tcsetattr<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><call><name pos:line="32" pos:column="27">fileno<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">in<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">TCSAFLUSH<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="50">&amp;<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="51">tty_old<pos:position pos:line="32" pos:column="58"/></name></expr></argument>)<pos:position pos:line="32" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">tty<pos:position pos:line="34" pos:column="16"/></name></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">fclose<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">tty<pos:position pos:line="35" pos:column="27"/></name></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">read_success<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26"> <block pos:line="37" pos:column="27">{
		<comment type="block" pos:line="38" pos:column="17">/* Remove the trailing newline. */</comment>
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">size_t<pos:position pos:line="39" pos:column="23"/></name></type> <name pos:line="39" pos:column="24">password_len<pos:position pos:line="39" pos:column="36"/></name> <init pos:line="39" pos:column="37">= <expr><call><name pos:line="39" pos:column="39">strlen<pos:position pos:line="39" pos:column="45"/></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">password<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="56"/></decl_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">password_len<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">&amp;&amp;<pos:position pos:line="40" pos:column="44"/></operator> <name><name pos:line="40" pos:column="37">password<pos:position pos:line="40" pos:column="45"/></name><index pos:line="40" pos:column="45">[<expr><name pos:line="40" pos:column="46">password_len<pos:position pos:line="40" pos:column="58"/></name> <operator pos:line="40" pos:column="59">-<pos:position pos:line="40" pos:column="60"/></operator> <literal type="number" pos:line="40" pos:column="61">1<pos:position pos:line="40" pos:column="62"/></literal></expr>]<pos:position pos:line="40" pos:column="63"/></index></name> <operator pos:line="40" pos:column="64">==<pos:position pos:line="40" pos:column="66"/></operator> <literal type="char" pos:line="40" pos:column="67">'\n'<pos:position pos:line="40" pos:column="71"/></literal></expr>)<pos:position pos:line="40" pos:column="72"/></condition><then pos:line="40" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="25">password<pos:position pos:line="41" pos:column="33"/></name><index pos:line="41" pos:column="33">[<expr><name pos:line="41" pos:column="34">password_len<pos:position pos:line="41" pos:column="46"/></name> <operator pos:line="41" pos:column="47">-<pos:position pos:line="41" pos:column="48"/></operator> <literal type="number" pos:line="41" pos:column="49">1<pos:position pos:line="41" pos:column="50"/></literal></expr>]<pos:position pos:line="41" pos:column="51"/></index></name> <operator pos:line="41" pos:column="52">=<pos:position pos:line="41" pos:column="53"/></operator> <literal type="char" pos:line="41" pos:column="54">'\0'<pos:position pos:line="41" pos:column="58"/></literal></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt></block></then></if>

		<return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">password<pos:position pos:line="43" pos:column="32"/></name></expr>;<pos:position pos:line="43" pos:column="33"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">NULL<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

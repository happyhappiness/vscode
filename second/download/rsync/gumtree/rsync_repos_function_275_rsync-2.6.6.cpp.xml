<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_275_rsync-2.6.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">list_file<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">fname<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_STAT<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">permbuf<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><name pos:line="4" pos:column="22">PERMSTRING_SIZE<pos:position pos:line="4" pos:column="37"/></name></expr>]<pos:position pos:line="4" pos:column="38"/></index></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">tm<pos:position pos:line="5" pos:column="18"/></name></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">mt<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">datebuf<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">50<pos:position pos:line="6" pos:column="24"/></literal></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">linkbuf<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[<expr><literal type="number" pos:line="7" pos:column="22">4096<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">do_lstat<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">fname<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="30">buf<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call> <operator pos:line="9" pos:column="35">&lt;<pos:position pos:line="9" pos:column="39"/></operator> <literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">failed<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"stat"<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">fname<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="12" pos:column="9">/* The size of anything but a regular file is probably not
	 * worth thinking about. */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">S_ISREG<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name><name pos:line="14" pos:column="22">buf<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">st_mode<pos:position pos:line="14" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="17">buf<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">st_size<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* On some BSD platforms the mode bits of a symlink are
	 * undefined.  Also it tends not to be possible to reset a
	 * symlink's mtime, so we have to ignore it too. */</comment>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">S_ISLNK<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name><name pos:line="20" pos:column="21">buf<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">st_mode<pos:position pos:line="20" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34"> <block pos:line="20" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">int<pos:position pos:line="21" pos:column="20"/></name></type> <name pos:line="21" pos:column="21">len<pos:position pos:line="21" pos:column="24"/></name></decl>;<pos:position pos:line="21" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">buf<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">.<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">st_mode<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">&amp;=<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="32">~<pos:position pos:line="22" pos:column="33"/></operator><literal type="number" pos:line="22" pos:column="33">0777<pos:position pos:line="22" pos:column="37"/></literal></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">buf<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">st_mtime<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="32">(<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">time_t<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator><literal type="number" pos:line="23" pos:column="40">0<pos:position pos:line="23" pos:column="41"/></literal></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">buf<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">st_uid<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <name><name pos:line="24" pos:column="30">buf<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">st_gid<pos:position pos:line="24" pos:column="40"/></name></name> <operator pos:line="24" pos:column="41">=<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="43">0<pos:position pos:line="24" pos:column="44"/></literal></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">strcpy<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name pos:line="25" pos:column="24">linkbuf<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">" -&gt; "<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
		<comment type="block" pos:line="26" pos:column="17">/* const-cast required for silly UNICOS headers */</comment>
		<expr_stmt><expr><name pos:line="27" pos:column="17">len<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">readlink<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><operator pos:line="27" pos:column="32">(<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">char<pos:position pos:line="27" pos:column="37"/></name> <operator pos:line="27" pos:column="38">*<pos:position pos:line="27" pos:column="39"/></operator><operator pos:line="27" pos:column="39">)<pos:position pos:line="27" pos:column="40"/></operator> <name pos:line="27" pos:column="41">fname<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">linkbuf<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">+<pos:position pos:line="27" pos:column="56"/></operator><literal type="number" pos:line="27" pos:column="56">4<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="59">sizeof<argument_list pos:line="27" pos:column="65">(<argument><expr><name pos:line="27" pos:column="66">linkbuf<pos:position pos:line="27" pos:column="73"/></name></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></sizeof> <operator pos:line="27" pos:column="75">-<pos:position pos:line="27" pos:column="76"/></operator> <literal type="number" pos:line="27" pos:column="77">4<pos:position pos:line="27" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">len<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">==<pos:position pos:line="28" pos:column="27"/></operator> <operator pos:line="28" pos:column="28">-<pos:position pos:line="28" pos:column="29"/></operator><literal type="number" pos:line="28" pos:column="29">1<pos:position pos:line="28" pos:column="30"/></literal></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="25">failed<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><literal type="string" pos:line="29" pos:column="32">"readlink"<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">fname<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt></block></then>
		<else pos:line="30" pos:column="17">else
			<comment type="block" pos:line="31" pos:column="25">/* it's not nul-terminated */</comment>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="25">linkbuf<pos:position pos:line="32" pos:column="32"/></name><index pos:line="32" pos:column="32">[<expr><literal type="number" pos:line="32" pos:column="33">4<pos:position pos:line="32" pos:column="34"/></literal><operator pos:line="32" pos:column="34">+<pos:position pos:line="32" pos:column="35"/></operator><name pos:line="32" pos:column="35">len<pos:position pos:line="32" pos:column="38"/></name></expr>]<pos:position pos:line="32" pos:column="39"/></index></name> <operator pos:line="32" pos:column="40">=<pos:position pos:line="32" pos:column="41"/></operator> <literal type="number" pos:line="32" pos:column="42">0<pos:position pos:line="32" pos:column="43"/></literal></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt></block></else></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">linkbuf<pos:position pos:line="34" pos:column="24"/></name><index pos:line="34" pos:column="24">[<expr><literal type="number" pos:line="34" pos:column="25">0<pos:position pos:line="34" pos:column="26"/></literal></expr>]<pos:position pos:line="34" pos:column="27"/></index></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="30">0<pos:position pos:line="34" pos:column="31"/></literal></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">permstring<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><name pos:line="37" pos:column="20">permbuf<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="29">buf<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">.<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">st_mode<pos:position pos:line="37" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">buf<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">.<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">st_mtime<pos:position pos:line="39" pos:column="25"/></name></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26"> <block pos:line="39" pos:column="27">{
		<expr_stmt><expr><name pos:line="40" pos:column="17">mt<pos:position pos:line="40" pos:column="19"/></name> <operator pos:line="40" pos:column="20">=<pos:position pos:line="40" pos:column="21"/></operator> <call><name pos:line="40" pos:column="22">gmtime<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><operator pos:line="40" pos:column="29">&amp;<pos:position pos:line="40" pos:column="34"/></operator><name><name pos:line="40" pos:column="30">buf<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">.<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">st_mtime<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="42" pos:column="17">sprintf<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">datebuf<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="34">"%04d-%02d-%02d %02d:%02d:%02d"<pos:position pos:line="42" pos:column="65"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="43" pos:column="25">mt<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">tm_year<pos:position pos:line="43" pos:column="36"/></name></name> <operator pos:line="43" pos:column="37">+<pos:position pos:line="43" pos:column="38"/></operator> <literal type="number" pos:line="43" pos:column="39">1900<pos:position pos:line="43" pos:column="43"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="44" pos:column="25">mt<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">tm_mon<pos:position pos:line="44" pos:column="35"/></name></name> <operator pos:line="44" pos:column="36">+<pos:position pos:line="44" pos:column="37"/></operator> <literal type="number" pos:line="44" pos:column="38">1<pos:position pos:line="44" pos:column="39"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="45" pos:column="25">mt<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">-&gt;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="29">tm_mday<pos:position pos:line="45" pos:column="36"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="46" pos:column="25">mt<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">tm_hour<pos:position pos:line="46" pos:column="36"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="47" pos:column="25">mt<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">-&gt;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="29">tm_min<pos:position pos:line="47" pos:column="35"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="48" pos:column="25">mt<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">tm_sec<pos:position pos:line="48" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">strcpy<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">datebuf<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="33">"                   "<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="53" pos:column="9">/* TODO: Perhaps escape special characters in fname? */</comment>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">printf<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="string" pos:line="55" pos:column="16">"%s "<pos:position pos:line="55" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="23">permbuf<pos:position pos:line="55" pos:column="30"/></name></expr></argument>)<pos:position pos:line="55" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">S_ISCHR<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name><name pos:line="56" pos:column="21">buf<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">.<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="25">st_mode<pos:position pos:line="56" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call> <operator pos:line="56" pos:column="34">||<pos:position pos:line="56" pos:column="36"/></operator> <call><name pos:line="56" pos:column="37">S_ISBLK<pos:position pos:line="56" pos:column="44"/></name><argument_list pos:line="56" pos:column="44">(<argument><expr><name><name pos:line="56" pos:column="45">buf<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">.<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="49">st_mode<pos:position pos:line="56" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="58"/></condition><then pos:line="56" pos:column="58"> <block pos:line="56" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">printf<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><literal type="string" pos:line="57" pos:column="24">"%5ld,%6ld"<pos:position pos:line="57" pos:column="35"/></literal></expr></argument>,
		    <argument><expr><operator pos:line="58" pos:column="21">(<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">long<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">)<pos:position pos:line="58" pos:column="27"/></operator><call><name pos:line="58" pos:column="27">major<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name><name pos:line="58" pos:column="33">buf<pos:position pos:line="58" pos:column="36"/></name><operator pos:line="58" pos:column="36">.<pos:position pos:line="58" pos:column="37"/></operator><name pos:line="58" pos:column="37">st_rdev<pos:position pos:line="58" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr></argument>,
		    <argument><expr><operator pos:line="59" pos:column="21">(<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">long<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">)<pos:position pos:line="59" pos:column="27"/></operator><call><name pos:line="59" pos:column="27">minor<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name><name pos:line="59" pos:column="33">buf<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">.<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="37">st_rdev<pos:position pos:line="59" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></then> <else pos:line="60" pos:column="11">else <comment type="block" pos:line="60" pos:column="16">/* NB: use double for size since it might not fit in a long. */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">printf<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><literal type="string" pos:line="61" pos:column="24">"%12.0f"<pos:position pos:line="61" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="61" pos:column="34">(<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="35">double<pos:position pos:line="61" pos:column="41"/></name><operator pos:line="61" pos:column="41">)<pos:position pos:line="61" pos:column="42"/></operator><name><name pos:line="61" pos:column="42">buf<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">.<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="46">st_size<pos:position pos:line="61" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="55"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="62" pos:column="9">printf<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="string" pos:line="62" pos:column="16">" %6ld.%-6ld %6ld %s %s%s\n"<pos:position pos:line="62" pos:column="44"/></literal></expr></argument>,
	       <argument><expr><operator pos:line="63" pos:column="16">(<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="17">long<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">)<pos:position pos:line="63" pos:column="22"/></operator><name><name pos:line="63" pos:column="22">buf<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">.<pos:position pos:line="63" pos:column="26"/></operator><name pos:line="63" pos:column="26">st_uid<pos:position pos:line="63" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="34">(<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="35">long<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">)<pos:position pos:line="63" pos:column="40"/></operator><name><name pos:line="63" pos:column="40">buf<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">.<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="44">st_gid<pos:position pos:line="63" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="52">(<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="53">long<pos:position pos:line="63" pos:column="57"/></name><operator pos:line="63" pos:column="57">)<pos:position pos:line="63" pos:column="58"/></operator><name><name pos:line="63" pos:column="58">buf<pos:position pos:line="63" pos:column="61"/></name><operator pos:line="63" pos:column="61">.<pos:position pos:line="63" pos:column="62"/></operator><name pos:line="63" pos:column="62">st_nlink<pos:position pos:line="63" pos:column="70"/></name></name></expr></argument>,
	       <argument><expr><name pos:line="64" pos:column="16">datebuf<pos:position pos:line="64" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="25">fname<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="32">linkbuf<pos:position pos:line="64" pos:column="39"/></name></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

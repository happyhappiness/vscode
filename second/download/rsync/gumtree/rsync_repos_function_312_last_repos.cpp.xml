<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_312_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">try_dests_non<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">file_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">file<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">fname<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">ndx<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">cmpbuf<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">stat_x<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">sxp<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">itemizing<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="3" pos:column="26">enum<pos:position pos:line="3" pos:column="30"/></name> <name pos:line="3" pos:column="31">logcode<pos:position pos:line="3" pos:column="38"/></name></name></type> <name pos:line="3" pos:column="39">code<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">best_match<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">-<pos:position pos:line="5" pos:column="27"/></operator><literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">match_level<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">enum<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">nonregtype<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">type<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uint32<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">devp<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">SUPPORT_LINKS<pos:position pos:line="9" pos:column="21"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">lnk<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[<expr><name pos:line="10" pos:column="18">MAXPATHLEN<pos:position pos:line="10" pos:column="28"/></name></expr>]<pos:position pos:line="10" pos:column="29"/></index></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">len<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">j<pos:position pos:line="13" pos:column="14"/></name> <init pos:line="13" pos:column="15">= <expr><literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="19"/></decl_stmt>

<cpp:ifndef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifndef<pos:position pos:line="15" pos:column="8"/></cpp:directive> <name pos:line="15" pos:column="9">SUPPORT_LINKS<pos:position pos:line="15" pos:column="22"/></name></cpp:ifndef>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">S_ISLNK<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name><name pos:line="16" pos:column="21">file<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">mode<pos:position pos:line="16" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></return></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">S_ISDIR<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name><name pos:line="19" pos:column="21">file<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">mode<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">type<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">TYPE_DIR<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><call><name pos:line="21" pos:column="20">IS_SPECIAL<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name><name pos:line="21" pos:column="31">file<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">mode<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">type<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">TYPE_SPECIAL<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="23" pos:column="9">else <if pos:line="23" pos:column="14">if <condition pos:line="23" pos:column="17">(<expr><call><name pos:line="23" pos:column="18">IS_DEVICE<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name><name pos:line="23" pos:column="28">file<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">mode<pos:position pos:line="23" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">type<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">TYPE_DEVICE<pos:position pos:line="24" pos:column="35"/></name></expr>;<pos:position pos:line="24" pos:column="36"/></expr_stmt></block></then></if></elseif>
<cpp:ifdef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifdef<pos:position pos:line="25" pos:column="7"/></cpp:directive> <name pos:line="25" pos:column="8">SUPPORT_LINKS<pos:position pos:line="25" pos:column="21"/></name></cpp:ifdef>
	<elseif pos:line="26" pos:column="9">else <if pos:line="26" pos:column="14">if <condition pos:line="26" pos:column="17">(<expr><call><name pos:line="26" pos:column="18">S_ISLNK<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name><name pos:line="26" pos:column="26">file<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">mode<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">type<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">TYPE_SYMLINK<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
	<else pos:line="29" pos:column="9">else <block pos:line="29" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">rprintf<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">FERROR<pos:position pos:line="30" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="31" pos:column="25">"internal: try_dests_non() called with invalid mode (%o)\n"<pos:position pos:line="31" pos:column="84"/></literal></expr></argument>,
			<argument><expr><operator pos:line="32" pos:column="25">(<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">int<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator><name><name pos:line="32" pos:column="30">file<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">mode<pos:position pos:line="32" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">exit_cleanup<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">RERR_UNSUPPORTED<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>

	<do pos:line="36" pos:column="9">do <block pos:line="36" pos:column="12">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">pathjoin<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">cmpbuf<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">MAXPATHLEN<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="46">basis_dir<pos:position pos:line="37" pos:column="55"/></name><index pos:line="37" pos:column="55">[<expr><name pos:line="37" pos:column="56">j<pos:position pos:line="37" pos:column="57"/></name></expr>]<pos:position pos:line="37" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="60">fname<pos:position pos:line="37" pos:column="65"/></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">link_stat<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">cmpbuf<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="39">&amp;<pos:position pos:line="38" pos:column="44"/></operator><name><name pos:line="38" pos:column="40">sxp<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">-&gt;<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="45">st<pos:position pos:line="38" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="49">0<pos:position pos:line="38" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call> <operator pos:line="38" pos:column="52">&lt;<pos:position pos:line="38" pos:column="56"/></operator> <literal type="number" pos:line="38" pos:column="54">0<pos:position pos:line="38" pos:column="55"/></literal></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56">
			<block type="pseudo"><continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue></block></then></if>
		<switch pos:line="40" pos:column="17">switch <condition pos:line="40" pos:column="24">(<expr><name pos:line="40" pos:column="25">type<pos:position pos:line="40" pos:column="29"/></name></expr>)<pos:position pos:line="40" pos:column="30"/></condition> <block pos:line="40" pos:column="31">{
		<case pos:line="41" pos:column="17">case <expr><name pos:line="41" pos:column="22">TYPE_DIR<pos:position pos:line="41" pos:column="30"/></name></expr>:<pos:position pos:line="41" pos:column="31"/></case>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">!<pos:position pos:line="42" pos:column="30"/></operator><call><name pos:line="42" pos:column="30">S_ISDIR<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name><name pos:line="42" pos:column="38">sxp<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">st<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">.<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="46">st_mode<pos:position pos:line="42" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="55"/></condition><then pos:line="42" pos:column="55">
				<block type="pseudo"><continue pos:line="43" pos:column="33">continue;<pos:position pos:line="43" pos:column="42"/></continue></block></then></if>
			<break pos:line="44" pos:column="25">break;<pos:position pos:line="44" pos:column="31"/></break>
		<case pos:line="45" pos:column="17">case <expr><name pos:line="45" pos:column="22">TYPE_SPECIAL<pos:position pos:line="45" pos:column="34"/></name></expr>:<pos:position pos:line="45" pos:column="35"/></case>
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><operator pos:line="46" pos:column="29">!<pos:position pos:line="46" pos:column="30"/></operator><call><name pos:line="46" pos:column="30">IS_SPECIAL<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name><name pos:line="46" pos:column="41">sxp<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">-&gt;<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="46">st<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">.<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="49">st_mode<pos:position pos:line="46" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="58"/></condition><then pos:line="46" pos:column="58">
				<block type="pseudo"><continue pos:line="47" pos:column="33">continue;<pos:position pos:line="47" pos:column="42"/></continue></block></then></if>
			<break pos:line="48" pos:column="25">break;<pos:position pos:line="48" pos:column="31"/></break>
		<case pos:line="49" pos:column="17">case <expr><name pos:line="49" pos:column="22">TYPE_DEVICE<pos:position pos:line="49" pos:column="33"/></name></expr>:<pos:position pos:line="49" pos:column="34"/></case>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><call><name pos:line="50" pos:column="30">IS_DEVICE<pos:position pos:line="50" pos:column="39"/></name><argument_list pos:line="50" pos:column="39">(<argument><expr><name><name pos:line="50" pos:column="40">sxp<pos:position pos:line="50" pos:column="43"/></name><operator pos:line="50" pos:column="43">-&gt;<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="45">st<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">.<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="48">st_mode<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="57"/></condition><then pos:line="50" pos:column="57">
				<block type="pseudo"><continue pos:line="51" pos:column="33">continue;<pos:position pos:line="51" pos:column="42"/></continue></block></then></if>
			<break pos:line="52" pos:column="25">break;<pos:position pos:line="52" pos:column="31"/></break>
		<case pos:line="53" pos:column="17">case <expr><name pos:line="53" pos:column="22">TYPE_SYMLINK<pos:position pos:line="53" pos:column="34"/></name></expr>:<pos:position pos:line="53" pos:column="35"/></case>
<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">SUPPORT_LINKS<pos:position pos:line="54" pos:column="21"/></name></cpp:ifdef>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><operator pos:line="55" pos:column="29">!<pos:position pos:line="55" pos:column="30"/></operator><call><name pos:line="55" pos:column="30">S_ISLNK<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name><name pos:line="55" pos:column="38">sxp<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">-&gt;<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="43">st<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">.<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="46">st_mode<pos:position pos:line="55" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="55"/></condition><then pos:line="55" pos:column="55">
				<block type="pseudo"><continue pos:line="56" pos:column="33">continue;<pos:position pos:line="56" pos:column="42"/></continue></block></then></if>
			<break pos:line="57" pos:column="25">break;<pos:position pos:line="57" pos:column="31"/></break>
<cpp:else pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">else<pos:position pos:line="58" pos:column="6"/></cpp:directive></cpp:else>
			<return pos:line="59" pos:column="25">return <expr><operator pos:line="59" pos:column="32">-<pos:position pos:line="59" pos:column="33"/></operator><literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr>;<pos:position pos:line="59" pos:column="35"/></return>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="61" pos:column="18"/></block></switch>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">match_level<pos:position pos:line="62" pos:column="32"/></name> <operator pos:line="62" pos:column="33">&lt;<pos:position pos:line="62" pos:column="37"/></operator> <literal type="number" pos:line="62" pos:column="35">1<pos:position pos:line="62" pos:column="36"/></literal></expr>)<pos:position pos:line="62" pos:column="37"/></condition><then pos:line="62" pos:column="37"> <block pos:line="62" pos:column="38">{
			<expr_stmt><expr><name pos:line="63" pos:column="25">match_level<pos:position pos:line="63" pos:column="36"/></name> <operator pos:line="63" pos:column="37">=<pos:position pos:line="63" pos:column="38"/></operator> <literal type="number" pos:line="63" pos:column="39">1<pos:position pos:line="63" pos:column="40"/></literal></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="64" pos:column="25">best_match<pos:position pos:line="64" pos:column="35"/></name> <operator pos:line="64" pos:column="36">=<pos:position pos:line="64" pos:column="37"/></operator> <name pos:line="64" pos:column="38">j<pos:position pos:line="64" pos:column="39"/></name></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>
		<switch pos:line="66" pos:column="17">switch <condition pos:line="66" pos:column="24">(<expr><name pos:line="66" pos:column="25">type<pos:position pos:line="66" pos:column="29"/></name></expr>)<pos:position pos:line="66" pos:column="30"/></condition> <block pos:line="66" pos:column="31">{
		<case pos:line="67" pos:column="17">case <expr><name pos:line="67" pos:column="22">TYPE_DIR<pos:position pos:line="67" pos:column="30"/></name></expr>:<pos:position pos:line="67" pos:column="31"/></case>
		<case pos:line="68" pos:column="17">case <expr><name pos:line="68" pos:column="22">TYPE_SPECIAL<pos:position pos:line="68" pos:column="34"/></name></expr>:<pos:position pos:line="68" pos:column="35"/></case>
			<break pos:line="69" pos:column="25">break;<pos:position pos:line="69" pos:column="31"/></break>
		<case pos:line="70" pos:column="17">case <expr><name pos:line="70" pos:column="22">TYPE_DEVICE<pos:position pos:line="70" pos:column="33"/></name></expr>:<pos:position pos:line="70" pos:column="34"/></case>
			<expr_stmt><expr><name pos:line="71" pos:column="25">devp<pos:position pos:line="71" pos:column="29"/></name> <operator pos:line="71" pos:column="30">=<pos:position pos:line="71" pos:column="31"/></operator> <call><name pos:line="71" pos:column="32">F_RDEV_P<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">file<pos:position pos:line="71" pos:column="45"/></name></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt>
			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><name><name pos:line="72" pos:column="29">sxp<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-&gt;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="34">st<pos:position pos:line="72" pos:column="36"/></name><operator pos:line="72" pos:column="36">.<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="37">st_rdev<pos:position pos:line="72" pos:column="44"/></name></name> <operator pos:line="72" pos:column="45">!=<pos:position pos:line="72" pos:column="47"/></operator> <call><name pos:line="72" pos:column="48">MAKEDEV<pos:position pos:line="72" pos:column="55"/></name><argument_list pos:line="72" pos:column="55">(<argument><expr><call><name pos:line="72" pos:column="56">DEV_MAJOR<pos:position pos:line="72" pos:column="65"/></name><argument_list pos:line="72" pos:column="65">(<argument><expr><name pos:line="72" pos:column="66">devp<pos:position pos:line="72" pos:column="70"/></name></expr></argument>)<pos:position pos:line="72" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="72" pos:column="73">DEV_MINOR<pos:position pos:line="72" pos:column="82"/></name><argument_list pos:line="72" pos:column="82">(<argument><expr><name pos:line="72" pos:column="83">devp<pos:position pos:line="72" pos:column="87"/></name></expr></argument>)<pos:position pos:line="72" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="90"/></condition><then pos:line="72" pos:column="90">
				<block type="pseudo"><continue pos:line="73" pos:column="33">continue;<pos:position pos:line="73" pos:column="42"/></continue></block></then></if>
			<break pos:line="74" pos:column="25">break;<pos:position pos:line="74" pos:column="31"/></break>
		<case pos:line="75" pos:column="17">case <expr><name pos:line="75" pos:column="22">TYPE_SYMLINK<pos:position pos:line="75" pos:column="34"/></name></expr>:<pos:position pos:line="75" pos:column="35"/></case>
<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">SUPPORT_LINKS<pos:position pos:line="76" pos:column="21"/></name></cpp:ifdef>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><operator pos:line="77" pos:column="29">(<pos:position pos:line="77" pos:column="30"/></operator><name pos:line="77" pos:column="30">len<pos:position pos:line="77" pos:column="33"/></name> <operator pos:line="77" pos:column="34">=<pos:position pos:line="77" pos:column="35"/></operator> <call><name pos:line="77" pos:column="36">do_readlink<pos:position pos:line="77" pos:column="47"/></name><argument_list pos:line="77" pos:column="47">(<argument><expr><name pos:line="77" pos:column="48">cmpbuf<pos:position pos:line="77" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="56">lnk<pos:position pos:line="77" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="61">MAXPATHLEN<pos:position pos:line="77" pos:column="71"/></name><operator pos:line="77" pos:column="71">-<pos:position pos:line="77" pos:column="72"/></operator><literal type="number" pos:line="77" pos:column="72">1<pos:position pos:line="77" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="74"/></argument_list></call><operator pos:line="77" pos:column="74">)<pos:position pos:line="77" pos:column="75"/></operator> <operator pos:line="77" pos:column="76">&lt;=<pos:position pos:line="77" pos:column="81"/></operator> <literal type="number" pos:line="77" pos:column="79">0<pos:position pos:line="77" pos:column="80"/></literal></expr>)<pos:position pos:line="77" pos:column="81"/></condition><then pos:line="77" pos:column="81">
				<block type="pseudo"><continue pos:line="78" pos:column="33">continue;<pos:position pos:line="78" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="79" pos:column="25">lnk<pos:position pos:line="79" pos:column="28"/></name><index pos:line="79" pos:column="28">[<expr><name pos:line="79" pos:column="29">len<pos:position pos:line="79" pos:column="32"/></name></expr>]<pos:position pos:line="79" pos:column="33"/></index></name> <operator pos:line="79" pos:column="34">=<pos:position pos:line="79" pos:column="35"/></operator> <literal type="char" pos:line="79" pos:column="36">'\0'<pos:position pos:line="79" pos:column="40"/></literal></expr>;<pos:position pos:line="79" pos:column="41"/></expr_stmt>
			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><call><name pos:line="80" pos:column="29">strcmp<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><name pos:line="80" pos:column="36">lnk<pos:position pos:line="80" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="41">F_SYMLINK<pos:position pos:line="80" pos:column="50"/></name><argument_list pos:line="80" pos:column="50">(<argument><expr><name pos:line="80" pos:column="51">file<pos:position pos:line="80" pos:column="55"/></name></expr></argument>)<pos:position pos:line="80" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="57"/></argument_list></call> <operator pos:line="80" pos:column="58">!=<pos:position pos:line="80" pos:column="60"/></operator> <literal type="number" pos:line="80" pos:column="61">0<pos:position pos:line="80" pos:column="62"/></literal></expr>)<pos:position pos:line="80" pos:column="63"/></condition><then pos:line="80" pos:column="63">
				<block type="pseudo"><continue pos:line="81" pos:column="33">continue;<pos:position pos:line="81" pos:column="42"/></continue></block></then></if>
			<break pos:line="82" pos:column="25">break;<pos:position pos:line="82" pos:column="31"/></break>
<cpp:else pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">else<pos:position pos:line="83" pos:column="6"/></cpp:directive></cpp:else>
			<return pos:line="84" pos:column="25">return <expr><operator pos:line="84" pos:column="32">-<pos:position pos:line="84" pos:column="33"/></operator><literal type="number" pos:line="84" pos:column="33">1<pos:position pos:line="84" pos:column="34"/></literal></expr>;<pos:position pos:line="84" pos:column="35"/></return>
<cpp:endif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">endif<pos:position pos:line="85" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="86" pos:column="18"/></block></switch>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">match_level<pos:position pos:line="87" pos:column="32"/></name> <operator pos:line="87" pos:column="33">&lt;<pos:position pos:line="87" pos:column="37"/></operator> <literal type="number" pos:line="87" pos:column="35">2<pos:position pos:line="87" pos:column="36"/></literal></expr>)<pos:position pos:line="87" pos:column="37"/></condition><then pos:line="87" pos:column="37"> <block pos:line="87" pos:column="38">{
			<expr_stmt><expr><name pos:line="88" pos:column="25">match_level<pos:position pos:line="88" pos:column="36"/></name> <operator pos:line="88" pos:column="37">=<pos:position pos:line="88" pos:column="38"/></operator> <literal type="number" pos:line="88" pos:column="39">2<pos:position pos:line="88" pos:column="40"/></literal></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="89" pos:column="25">best_match<pos:position pos:line="89" pos:column="35"/></name> <operator pos:line="89" pos:column="36">=<pos:position pos:line="89" pos:column="37"/></operator> <name pos:line="89" pos:column="38">j<pos:position pos:line="89" pos:column="39"/></name></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><call><name pos:line="91" pos:column="21">unchanged_attrs<pos:position pos:line="91" pos:column="36"/></name><argument_list pos:line="91" pos:column="36">(<argument><expr><name pos:line="91" pos:column="37">cmpbuf<pos:position pos:line="91" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="45">file<pos:position pos:line="91" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="51">sxp<pos:position pos:line="91" pos:column="54"/></name></expr></argument>)<pos:position pos:line="91" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="56"/></condition><then pos:line="91" pos:column="56"> <block pos:line="91" pos:column="57">{
			<expr_stmt><expr><name pos:line="92" pos:column="25">match_level<pos:position pos:line="92" pos:column="36"/></name> <operator pos:line="92" pos:column="37">=<pos:position pos:line="92" pos:column="38"/></operator> <literal type="number" pos:line="92" pos:column="39">3<pos:position pos:line="92" pos:column="40"/></literal></expr>;<pos:position pos:line="92" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="93" pos:column="25">best_match<pos:position pos:line="93" pos:column="35"/></name> <operator pos:line="93" pos:column="36">=<pos:position pos:line="93" pos:column="37"/></operator> <name pos:line="93" pos:column="38">j<pos:position pos:line="93" pos:column="39"/></name></expr>;<pos:position pos:line="93" pos:column="40"/></expr_stmt>
			<break pos:line="94" pos:column="25">break;<pos:position pos:line="94" pos:column="31"/></break>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if>
	}<pos:position pos:line="96" pos:column="10"/></block> while <condition pos:line="96" pos:column="17">(<expr><name><name pos:line="96" pos:column="18">basis_dir<pos:position pos:line="96" pos:column="27"/></name><index pos:line="96" pos:column="27">[<expr><operator pos:line="96" pos:column="28">++<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="30">j<pos:position pos:line="96" pos:column="31"/></name></expr>]<pos:position pos:line="96" pos:column="32"/></index></name> <operator pos:line="96" pos:column="33">!=<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="36">NULL<pos:position pos:line="96" pos:column="40"/></name></expr>)<pos:position pos:line="96" pos:column="41"/></condition>;<pos:position pos:line="96" pos:column="42"/></do>

	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><operator pos:line="98" pos:column="13">!<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="14">match_level<pos:position pos:line="98" pos:column="25"/></name></expr>)<pos:position pos:line="98" pos:column="26"/></condition><then pos:line="98" pos:column="26">
		<block type="pseudo"><return pos:line="99" pos:column="17">return <expr><operator pos:line="99" pos:column="24">-<pos:position pos:line="99" pos:column="25"/></operator><literal type="number" pos:line="99" pos:column="25">1<pos:position pos:line="99" pos:column="26"/></literal></expr>;<pos:position pos:line="99" pos:column="27"/></return></block></then></if>

	<if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">j<pos:position pos:line="101" pos:column="14"/></name> <operator pos:line="101" pos:column="15">!=<pos:position pos:line="101" pos:column="17"/></operator> <name pos:line="101" pos:column="18">best_match<pos:position pos:line="101" pos:column="28"/></name></expr>)<pos:position pos:line="101" pos:column="29"/></condition><then pos:line="101" pos:column="29"> <block pos:line="101" pos:column="30">{
		<expr_stmt><expr><name pos:line="102" pos:column="17">j<pos:position pos:line="102" pos:column="18"/></name> <operator pos:line="102" pos:column="19">=<pos:position pos:line="102" pos:column="20"/></operator> <name pos:line="102" pos:column="21">best_match<pos:position pos:line="102" pos:column="31"/></name></expr>;<pos:position pos:line="102" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">pathjoin<pos:position pos:line="103" pos:column="25"/></name><argument_list pos:line="103" pos:column="25">(<argument><expr><name pos:line="103" pos:column="26">cmpbuf<pos:position pos:line="103" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="34">MAXPATHLEN<pos:position pos:line="103" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="46">basis_dir<pos:position pos:line="103" pos:column="55"/></name><index pos:line="103" pos:column="55">[<expr><name pos:line="103" pos:column="56">j<pos:position pos:line="103" pos:column="57"/></name></expr>]<pos:position pos:line="103" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="60">fname<pos:position pos:line="103" pos:column="65"/></name></expr></argument>)<pos:position pos:line="103" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="67"/></expr_stmt>
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><call><name pos:line="104" pos:column="21">link_stat<pos:position pos:line="104" pos:column="30"/></name><argument_list pos:line="104" pos:column="30">(<argument><expr><name pos:line="104" pos:column="31">cmpbuf<pos:position pos:line="104" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="39">&amp;<pos:position pos:line="104" pos:column="44"/></operator><name><name pos:line="104" pos:column="40">sxp<pos:position pos:line="104" pos:column="43"/></name><operator pos:line="104" pos:column="43">-&gt;<pos:position pos:line="104" pos:column="48"/></operator><name pos:line="104" pos:column="45">st<pos:position pos:line="104" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="49">0<pos:position pos:line="104" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="51"/></argument_list></call> <operator pos:line="104" pos:column="52">&lt;<pos:position pos:line="104" pos:column="56"/></operator> <literal type="number" pos:line="104" pos:column="54">0<pos:position pos:line="104" pos:column="55"/></literal></expr>)<pos:position pos:line="104" pos:column="56"/></condition><then pos:line="104" pos:column="56">
			<block type="pseudo"><return pos:line="105" pos:column="25">return <expr><operator pos:line="105" pos:column="32">-<pos:position pos:line="105" pos:column="33"/></operator><literal type="number" pos:line="105" pos:column="33">1<pos:position pos:line="105" pos:column="34"/></literal></expr>;<pos:position pos:line="105" pos:column="35"/></return></block></then></if>
	}<pos:position pos:line="106" pos:column="10"/></block></then></if>

	<if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">match_level<pos:position pos:line="108" pos:column="24"/></name> <operator pos:line="108" pos:column="25">==<pos:position pos:line="108" pos:column="27"/></operator> <literal type="number" pos:line="108" pos:column="28">3<pos:position pos:line="108" pos:column="29"/></literal></expr>)<pos:position pos:line="108" pos:column="30"/></condition><then pos:line="108" pos:column="30"> <block pos:line="108" pos:column="31">{
<cpp:ifdef pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">ifdef<pos:position pos:line="109" pos:column="7"/></cpp:directive> <name pos:line="109" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="109" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><name pos:line="110" pos:column="21">link_dest<pos:position pos:line="110" pos:column="30"/></name>
<cpp:ifndef pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">ifndef<pos:position pos:line="111" pos:column="8"/></cpp:directive> <name pos:line="111" pos:column="9">CAN_HARDLINK_SYMLINK<pos:position pos:line="111" pos:column="29"/></name></cpp:ifndef>
		 <operator pos:line="112" pos:column="18">&amp;&amp;<pos:position pos:line="112" pos:column="28"/></operator> <operator pos:line="112" pos:column="21">!<pos:position pos:line="112" pos:column="22"/></operator><call><name pos:line="112" pos:column="22">S_ISLNK<pos:position pos:line="112" pos:column="29"/></name><argument_list pos:line="112" pos:column="29">(<argument><expr><name><name pos:line="112" pos:column="30">file<pos:position pos:line="112" pos:column="34"/></name><operator pos:line="112" pos:column="34">-&gt;<pos:position pos:line="112" pos:column="39"/></operator><name pos:line="112" pos:column="36">mode<pos:position pos:line="112" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="41"/></argument_list></call>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">ifndef<pos:position pos:line="114" pos:column="8"/></cpp:directive> <name pos:line="114" pos:column="9">CAN_HARDLINK_SPECIAL<pos:position pos:line="114" pos:column="29"/></name></cpp:ifndef>
		 <operator pos:line="115" pos:column="18">&amp;&amp;<pos:position pos:line="115" pos:column="28"/></operator> <operator pos:line="115" pos:column="21">!<pos:position pos:line="115" pos:column="22"/></operator><call><name pos:line="115" pos:column="22">IS_SPECIAL<pos:position pos:line="115" pos:column="32"/></name><argument_list pos:line="115" pos:column="32">(<argument><expr><name><name pos:line="115" pos:column="33">file<pos:position pos:line="115" pos:column="37"/></name><operator pos:line="115" pos:column="37">-&gt;<pos:position pos:line="115" pos:column="42"/></operator><name pos:line="115" pos:column="39">mode<pos:position pos:line="115" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="44"/></argument_list></call> <operator pos:line="115" pos:column="45">&amp;&amp;<pos:position pos:line="115" pos:column="55"/></operator> <operator pos:line="115" pos:column="48">!<pos:position pos:line="115" pos:column="49"/></operator><call><name pos:line="115" pos:column="49">IS_DEVICE<pos:position pos:line="115" pos:column="58"/></name><argument_list pos:line="115" pos:column="58">(<argument><expr><name><name pos:line="115" pos:column="59">file<pos:position pos:line="115" pos:column="63"/></name><operator pos:line="115" pos:column="63">-&gt;<pos:position pos:line="115" pos:column="68"/></operator><name pos:line="115" pos:column="65">mode<pos:position pos:line="115" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="70"/></argument_list></call>
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif<pos:position pos:line="116" pos:column="7"/></cpp:directive></cpp:endif>
		 <operator pos:line="117" pos:column="18">&amp;&amp;<pos:position pos:line="117" pos:column="28"/></operator> <operator pos:line="117" pos:column="21">!<pos:position pos:line="117" pos:column="22"/></operator><call><name pos:line="117" pos:column="22">S_ISDIR<pos:position pos:line="117" pos:column="29"/></name><argument_list pos:line="117" pos:column="29">(<argument><expr><name><name pos:line="117" pos:column="30">file<pos:position pos:line="117" pos:column="34"/></name><operator pos:line="117" pos:column="34">-&gt;<pos:position pos:line="117" pos:column="39"/></operator><name pos:line="117" pos:column="36">mode<pos:position pos:line="117" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="42"/></condition><then pos:line="117" pos:column="42"> <block pos:line="117" pos:column="43">{
			<if pos:line="118" pos:column="25">if <condition pos:line="118" pos:column="28">(<expr><call><name pos:line="118" pos:column="29">do_link<pos:position pos:line="118" pos:column="36"/></name><argument_list pos:line="118" pos:column="36">(<argument><expr><name pos:line="118" pos:column="37">cmpbuf<pos:position pos:line="118" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="45">fname<pos:position pos:line="118" pos:column="50"/></name></expr></argument>)<pos:position pos:line="118" pos:column="51"/></argument_list></call> <operator pos:line="118" pos:column="52">&lt;<pos:position pos:line="118" pos:column="56"/></operator> <literal type="number" pos:line="118" pos:column="54">0<pos:position pos:line="118" pos:column="55"/></literal></expr>)<pos:position pos:line="118" pos:column="56"/></condition><then pos:line="118" pos:column="56"> <block pos:line="118" pos:column="57">{
				<expr_stmt><expr><call><name pos:line="119" pos:column="33">rsyserr<pos:position pos:line="119" pos:column="40"/></name><argument_list pos:line="119" pos:column="40">(<argument><expr><name pos:line="119" pos:column="41">FERROR_XFER<pos:position pos:line="119" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="54">errno<pos:position pos:line="119" pos:column="59"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="120" pos:column="41">"failed to hard-link %s with %s"<pos:position pos:line="120" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name pos:line="121" pos:column="41">cmpbuf<pos:position pos:line="121" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="49">fname<pos:position pos:line="121" pos:column="54"/></name></expr></argument>)<pos:position pos:line="121" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="56"/></expr_stmt>
				<return pos:line="122" pos:column="33">return <expr><name pos:line="122" pos:column="40">j<pos:position pos:line="122" pos:column="41"/></name></expr>;<pos:position pos:line="122" pos:column="42"/></return>
			}<pos:position pos:line="123" pos:column="26"/></block></then></if>
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><name pos:line="124" pos:column="29">preserve_hard_links<pos:position pos:line="124" pos:column="48"/></name> <operator pos:line="124" pos:column="49">&amp;&amp;<pos:position pos:line="124" pos:column="59"/></operator> <call><name pos:line="124" pos:column="52">F_IS_HLINKED<pos:position pos:line="124" pos:column="64"/></name><argument_list pos:line="124" pos:column="64">(<argument><expr><name pos:line="124" pos:column="65">file<pos:position pos:line="124" pos:column="69"/></name></expr></argument>)<pos:position pos:line="124" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="71"/></condition><then pos:line="124" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="33">finish_hard_link<pos:position pos:line="125" pos:column="49"/></name><argument_list pos:line="125" pos:column="49">(<argument><expr><name pos:line="125" pos:column="50">file<pos:position pos:line="125" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="56">fname<pos:position pos:line="125" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="63">ndx<pos:position pos:line="125" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="68">NULL<pos:position pos:line="125" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="74">itemizing<pos:position pos:line="125" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="85">code<pos:position pos:line="125" pos:column="89"/></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="91">-<pos:position pos:line="125" pos:column="92"/></operator><literal type="number" pos:line="125" pos:column="92">1<pos:position pos:line="125" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="95"/></expr_stmt></block></then></if>
		}<pos:position pos:line="126" pos:column="18"/></block></then> <else pos:line="126" pos:column="19">else
<cpp:endif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">endif<pos:position pos:line="127" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><expr_stmt><expr><name pos:line="128" pos:column="25">match_level<pos:position pos:line="128" pos:column="36"/></name> <operator pos:line="128" pos:column="37">=<pos:position pos:line="128" pos:column="38"/></operator> <literal type="number" pos:line="128" pos:column="39">2<pos:position pos:line="128" pos:column="40"/></literal></expr>;<pos:position pos:line="128" pos:column="41"/></expr_stmt></block></else></if>
		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><name pos:line="129" pos:column="21">itemizing<pos:position pos:line="129" pos:column="30"/></name> <operator pos:line="129" pos:column="31">&amp;&amp;<pos:position pos:line="129" pos:column="41"/></operator> <name pos:line="129" pos:column="34">stdout_format_has_i<pos:position pos:line="129" pos:column="53"/></name>
		 <operator pos:line="130" pos:column="18">&amp;&amp;<pos:position pos:line="130" pos:column="28"/></operator> <operator pos:line="130" pos:column="21">(<pos:position pos:line="130" pos:column="22"/></operator><call><name pos:line="130" pos:column="22">INFO_GTE<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">NAME<pos:position pos:line="130" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="37">2<pos:position pos:line="130" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="39"/></argument_list></call> <operator pos:line="130" pos:column="40">||<pos:position pos:line="130" pos:column="42"/></operator> <name pos:line="130" pos:column="43">stdout_format_has_i<pos:position pos:line="130" pos:column="62"/></name> <operator pos:line="130" pos:column="63">&gt;<pos:position pos:line="130" pos:column="67"/></operator> <literal type="number" pos:line="130" pos:column="65">1<pos:position pos:line="130" pos:column="66"/></literal><operator pos:line="130" pos:column="66">)<pos:position pos:line="130" pos:column="67"/></operator></expr>)<pos:position pos:line="130" pos:column="68"/></condition><then pos:line="130" pos:column="68"> <block pos:line="130" pos:column="69">{
			<decl_stmt><decl><type><name pos:line="131" pos:column="25">int<pos:position pos:line="131" pos:column="28"/></name></type> <name pos:line="131" pos:column="29">chg<pos:position pos:line="131" pos:column="32"/></name> <init pos:line="131" pos:column="33">= <expr><ternary><condition><expr><name pos:line="131" pos:column="35">compare_dest<pos:position pos:line="131" pos:column="47"/></name> <operator pos:line="131" pos:column="48">&amp;&amp;<pos:position pos:line="131" pos:column="58"/></operator> <name pos:line="131" pos:column="51">type<pos:position pos:line="131" pos:column="55"/></name> <operator pos:line="131" pos:column="56">!=<pos:position pos:line="131" pos:column="58"/></operator> <name pos:line="131" pos:column="59">TYPE_DIR<pos:position pos:line="131" pos:column="67"/></name></expr> ?<pos:position pos:line="131" pos:column="69"/></condition><then pos:line="131" pos:column="69"> <expr><literal type="number" pos:line="131" pos:column="70">0<pos:position pos:line="131" pos:column="71"/></literal></expr>
			    <pos:position pos:line="132" pos:column="8"/></then><else pos:line="132" pos:column="29">: <expr><name pos:line="132" pos:column="31">ITEM_LOCAL_CHANGE<pos:position pos:line="132" pos:column="48"/></name> <operator pos:line="132" pos:column="49">+<pos:position pos:line="132" pos:column="50"/></operator> <operator pos:line="132" pos:column="51">(<pos:position pos:line="132" pos:column="52"/></operator><ternary><condition><expr><name pos:line="132" pos:column="52">match_level<pos:position pos:line="132" pos:column="63"/></name> <operator pos:line="132" pos:column="64">==<pos:position pos:line="132" pos:column="66"/></operator> <literal type="number" pos:line="132" pos:column="67">3<pos:position pos:line="132" pos:column="68"/></literal></expr> ?<pos:position pos:line="132" pos:column="70"/></condition><then pos:line="132" pos:column="70"> <expr><name pos:line="132" pos:column="71">ITEM_XNAME_FOLLOWS<pos:position pos:line="132" pos:column="89"/></name></expr> <pos:position pos:line="132" pos:column="90"/></then><else pos:line="132" pos:column="90">: <expr><literal type="number" pos:line="132" pos:column="92">0<pos:position pos:line="132" pos:column="93"/></literal></expr></else></ternary><operator pos:line="132" pos:column="93">)<pos:position pos:line="132" pos:column="94"/></operator></expr></else></ternary></expr></init></decl>;<pos:position pos:line="132" pos:column="95"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="133" pos:column="25">char<pos:position pos:line="133" pos:column="29"/></name> <modifier pos:line="133" pos:column="30">*<pos:position pos:line="133" pos:column="31"/></modifier></type><name pos:line="133" pos:column="31">lp<pos:position pos:line="133" pos:column="33"/></name> <init pos:line="133" pos:column="34">= <expr><ternary><condition><expr><name pos:line="133" pos:column="36">match_level<pos:position pos:line="133" pos:column="47"/></name> <operator pos:line="133" pos:column="48">==<pos:position pos:line="133" pos:column="50"/></operator> <literal type="number" pos:line="133" pos:column="51">3<pos:position pos:line="133" pos:column="52"/></literal></expr> ?<pos:position pos:line="133" pos:column="54"/></condition><then pos:line="133" pos:column="54"> <expr><literal type="string" pos:line="133" pos:column="55">""<pos:position pos:line="133" pos:column="57"/></literal></expr> <pos:position pos:line="133" pos:column="58"/></then><else pos:line="133" pos:column="58">: <expr><name pos:line="133" pos:column="60">NULL<pos:position pos:line="133" pos:column="64"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="133" pos:column="65"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="134" pos:column="25">itemize<pos:position pos:line="134" pos:column="32"/></name><argument_list pos:line="134" pos:column="32">(<argument><expr><name pos:line="134" pos:column="33">cmpbuf<pos:position pos:line="134" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="41">file<pos:position pos:line="134" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="47">ndx<pos:position pos:line="134" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="52">0<pos:position pos:line="134" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="55">sxp<pos:position pos:line="134" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="60">chg<pos:position pos:line="134" pos:column="63"/></name> <operator pos:line="134" pos:column="64">+<pos:position pos:line="134" pos:column="65"/></operator> <name pos:line="134" pos:column="66">ITEM_MATCHED<pos:position pos:line="134" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="80">0<pos:position pos:line="134" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="83">lp<pos:position pos:line="134" pos:column="85"/></name></expr></argument>)<pos:position pos:line="134" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="87"/></expr_stmt>
		}<pos:position pos:line="135" pos:column="18"/></block></then></if>
		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><call><name pos:line="136" pos:column="21">INFO_GTE<pos:position pos:line="136" pos:column="29"/></name><argument_list pos:line="136" pos:column="29">(<argument><expr><name pos:line="136" pos:column="30">NAME<pos:position pos:line="136" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="36">2<pos:position pos:line="136" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="38"/></argument_list></call> <operator pos:line="136" pos:column="39">&amp;&amp;<pos:position pos:line="136" pos:column="49"/></operator> <name pos:line="136" pos:column="42">maybe_ATTRS_REPORT<pos:position pos:line="136" pos:column="60"/></name></expr>)<pos:position pos:line="136" pos:column="61"/></condition><then pos:line="136" pos:column="61"> <block pos:line="136" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="137" pos:column="25">rprintf<pos:position pos:line="137" pos:column="32"/></name><argument_list pos:line="137" pos:column="32">(<argument><expr><name pos:line="137" pos:column="33">FCLIENT<pos:position pos:line="137" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="42">"%s%s is uptodate\n"<pos:position pos:line="137" pos:column="62"/></literal></expr></argument>,
				<argument><expr><name pos:line="138" pos:column="33">fname<pos:position pos:line="138" pos:column="38"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="138" pos:column="40">type<pos:position pos:line="138" pos:column="44"/></name> <operator pos:line="138" pos:column="45">==<pos:position pos:line="138" pos:column="47"/></operator> <name pos:line="138" pos:column="48">TYPE_DIR<pos:position pos:line="138" pos:column="56"/></name></expr> ?<pos:position pos:line="138" pos:column="58"/></condition><then pos:line="138" pos:column="58"> <expr><literal type="string" pos:line="138" pos:column="59">"/"<pos:position pos:line="138" pos:column="62"/></literal></expr> <pos:position pos:line="138" pos:column="63"/></then><else pos:line="138" pos:column="63">: <expr><literal type="string" pos:line="138" pos:column="65">""<pos:position pos:line="138" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="138" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="139" pos:column="18"/></block></then></if>
		<return pos:line="140" pos:column="17">return <expr><operator pos:line="140" pos:column="24">-<pos:position pos:line="140" pos:column="25"/></operator><literal type="number" pos:line="140" pos:column="25">2<pos:position pos:line="140" pos:column="26"/></literal></expr>;<pos:position pos:line="140" pos:column="27"/></return>
	}<pos:position pos:line="141" pos:column="10"/></block></then></if>

	<return pos:line="143" pos:column="9">return <expr><name pos:line="143" pos:column="16">j<pos:position pos:line="143" pos:column="17"/></name></expr>;<pos:position pos:line="143" pos:column="18"/></return>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

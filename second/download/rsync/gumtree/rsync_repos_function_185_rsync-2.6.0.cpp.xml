<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_185_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">log_formatted<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">enum<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">logcode<pos:position pos:line="1" pos:column="39"/></name></name></type> <name pos:line="1" pos:column="40">code<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">format<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">op<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="51">struct<pos:position pos:line="2" pos:column="57"/></name> <name pos:line="2" pos:column="58">file_struct<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">file<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
			  <parameter><decl><type><name><name pos:line="3" pos:column="27">struct<pos:position pos:line="3" pos:column="33"/></name> <name pos:line="3" pos:column="34">stats<pos:position pos:line="3" pos:column="39"/></name></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">initial_stats<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="55"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">extern<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">int<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">module_id<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">extern<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">auth_user<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">buf<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><literal type="number" pos:line="7" pos:column="18">1024<pos:position pos:line="7" pos:column="22"/></literal></expr>]<pos:position pos:line="7" pos:column="23"/></index></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">buf2<pos:position pos:line="8" pos:column="18"/></name><index pos:line="8" pos:column="18">[<expr><literal type="number" pos:line="8" pos:column="19">1024<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">p<pos:position pos:line="9" pos:column="16"/></name></decl>, <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="19">s<pos:position pos:line="9" pos:column="20"/></name></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">n<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">size_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">l<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">extern<pos:position pos:line="11" pos:column="15"/></specifier> <type><name><name pos:line="11" pos:column="16">struct<pos:position pos:line="11" pos:column="22"/></name> <name pos:line="11" pos:column="23">stats<pos:position pos:line="11" pos:column="28"/></name></name></type> <name pos:line="11" pos:column="29">stats<pos:position pos:line="11" pos:column="34"/></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>		
	<decl_stmt><decl><specifier pos:line="12" pos:column="9">extern<pos:position pos:line="12" pos:column="15"/></specifier> <type><name pos:line="12" pos:column="16">int<pos:position pos:line="12" pos:column="19"/></name></type> <name pos:line="12" pos:column="20">am_sender<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">extern<pos:position pos:line="13" pos:column="15"/></specifier> <type><name pos:line="13" pos:column="16">int<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">am_daemon<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int64<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">b<pos:position pos:line="14" pos:column="16"/></name></decl>;<pos:position pos:line="14" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="16" pos:column="9">/* We expand % codes one by one in place in buf.  We don't
	 * copy in the terminating nul of the inserted strings, but
	 * rather keep going until we reach the nul of the format.
	 * Just to make sure we don't clobber that nul and therefore
	 * accidentally keep going, we zero the buffer now. */</comment>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">memset<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">buf<pos:position pos:line="21" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="24">sizeof <name pos:line="21" pos:column="31">buf<pos:position pos:line="21" pos:column="34"/></name></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">strlcpy<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">buf<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">format<pos:position pos:line="22" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="30">sizeof<argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">buf<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
	
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">s<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <operator pos:line="24" pos:column="18">&amp;<pos:position pos:line="24" pos:column="23"/></operator><name><name pos:line="24" pos:column="19">buf<pos:position pos:line="24" pos:column="22"/></name><index pos:line="24" pos:column="22">[<expr><literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr>]<pos:position pos:line="24" pos:column="25"/></index></name></expr>;<pos:position pos:line="24" pos:column="26"/></init> <condition><expr><name pos:line="24" pos:column="27">s<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">&amp;&amp;<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">p<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">=<pos:position pos:line="24" pos:column="36"/></operator> <call><name pos:line="24" pos:column="37">strchr<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">s<pos:position pos:line="24" pos:column="45"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="24" pos:column="46">'%'<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call><operator pos:line="24" pos:column="50">)<pos:position pos:line="24" pos:column="51"/></operator></expr>;<pos:position pos:line="24" pos:column="52"/></condition> <incr/>)<pos:position pos:line="24" pos:column="54"/></control> <block pos:line="24" pos:column="55">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">n<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">s<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">p<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">+<pos:position pos:line="26" pos:column="24"/></operator> <literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

		<switch pos:line="28" pos:column="17">switch <condition pos:line="28" pos:column="24">(<expr><name><name pos:line="28" pos:column="25">p<pos:position pos:line="28" pos:column="26"/></name><index pos:line="28" pos:column="26">[<expr><literal type="number" pos:line="28" pos:column="27">1<pos:position pos:line="28" pos:column="28"/></literal></expr>]<pos:position pos:line="28" pos:column="29"/></index></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition> <block pos:line="28" pos:column="31">{
		<case pos:line="29" pos:column="17">case <expr><literal type="char" pos:line="29" pos:column="22">'h'<pos:position pos:line="29" pos:column="25"/></literal></expr>:<pos:position pos:line="29" pos:column="26"/></case> <if pos:line="29" pos:column="27">if <condition pos:line="29" pos:column="30">(<expr><name pos:line="29" pos:column="31">am_daemon<pos:position pos:line="29" pos:column="40"/></name></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41"> <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="42">n<pos:position pos:line="29" pos:column="43"/></name> <operator pos:line="29" pos:column="44">=<pos:position pos:line="29" pos:column="45"/></operator> <call><name pos:line="29" pos:column="46">client_name<pos:position pos:line="29" pos:column="57"/></name><argument_list pos:line="29" pos:column="57">(<argument><expr><literal type="number" pos:line="29" pos:column="58">0<pos:position pos:line="29" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt></block></then></if> <break pos:line="29" pos:column="62">break;<pos:position pos:line="29" pos:column="68"/></break>
		<case pos:line="30" pos:column="17">case <expr><literal type="char" pos:line="30" pos:column="22">'a'<pos:position pos:line="30" pos:column="25"/></literal></expr>:<pos:position pos:line="30" pos:column="26"/></case> <if pos:line="30" pos:column="27">if <condition pos:line="30" pos:column="30">(<expr><name pos:line="30" pos:column="31">am_daemon<pos:position pos:line="30" pos:column="40"/></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41"> <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="42">n<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">=<pos:position pos:line="30" pos:column="45"/></operator> <call><name pos:line="30" pos:column="46">client_addr<pos:position pos:line="30" pos:column="57"/></name><argument_list pos:line="30" pos:column="57">(<argument><expr><literal type="number" pos:line="30" pos:column="58">0<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt></block></then></if> <break pos:line="30" pos:column="62">break;<pos:position pos:line="30" pos:column="68"/></break>
		<case pos:line="31" pos:column="17">case <expr><literal type="char" pos:line="31" pos:column="22">'l'<pos:position pos:line="31" pos:column="25"/></literal></expr>:<pos:position pos:line="31" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">snprintf<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">buf2<pos:position pos:line="32" pos:column="38"/></name></expr></argument>,<argument><expr><sizeof pos:line="32" pos:column="39">sizeof<argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">buf2<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></sizeof></expr></argument>,<argument><expr><literal type="string" pos:line="32" pos:column="52">"%.0f"<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>,
				 <argument><expr><operator pos:line="33" pos:column="34">(<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">double<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator><name><name pos:line="33" pos:column="42">file<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">length<pos:position pos:line="33" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">n<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">buf2<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
			<break pos:line="35" pos:column="25">break;<pos:position pos:line="35" pos:column="31"/></break>
		<case pos:line="36" pos:column="17">case <expr><literal type="char" pos:line="36" pos:column="22">'p'<pos:position pos:line="36" pos:column="25"/></literal></expr>:<pos:position pos:line="36" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">snprintf<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">buf2<pos:position pos:line="37" pos:column="38"/></name></expr></argument>,<argument><expr><sizeof pos:line="37" pos:column="39">sizeof<argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">buf2<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></sizeof></expr></argument>,<argument><expr><literal type="string" pos:line="37" pos:column="52">"%d"<pos:position pos:line="37" pos:column="56"/></literal></expr></argument>,
				 <argument><expr><operator pos:line="38" pos:column="34">(<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="35">int<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">)<pos:position pos:line="38" pos:column="39"/></operator><call><name pos:line="38" pos:column="39">getpid<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">()<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="39" pos:column="25">n<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">buf2<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
			<break pos:line="40" pos:column="25">break;<pos:position pos:line="40" pos:column="31"/></break>
		<case pos:line="41" pos:column="17">case <expr><literal type="char" pos:line="41" pos:column="22">'o'<pos:position pos:line="41" pos:column="25"/></literal></expr>:<pos:position pos:line="41" pos:column="26"/></case> <expr_stmt><expr><name pos:line="41" pos:column="27">n<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="31">op<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt> <break pos:line="41" pos:column="35">break;<pos:position pos:line="41" pos:column="41"/></break>
		<case pos:line="42" pos:column="17">case <expr><literal type="char" pos:line="42" pos:column="22">'f'<pos:position pos:line="42" pos:column="25"/></literal></expr>:<pos:position pos:line="42" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">snprintf<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name pos:line="43" pos:column="34">buf2<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="40">sizeof<argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">buf2<pos:position pos:line="43" pos:column="51"/></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="54">"%s/%s"<pos:position pos:line="43" pos:column="61"/></literal></expr></argument>,
				 <argument><expr><ternary><condition><expr><name><name pos:line="44" pos:column="34">file<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">basedir<pos:position pos:line="44" pos:column="47"/></name></name></expr>?<pos:position pos:line="44" pos:column="48"/></condition><then><expr><name><name pos:line="44" pos:column="48">file<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">basedir<pos:position pos:line="44" pos:column="61"/></name></name></expr></then><else pos:line="44" pos:column="61">:<expr><literal type="string" pos:line="44" pos:column="62">""<pos:position pos:line="44" pos:column="64"/></literal></expr></else></ternary></expr></argument>,
				 <argument><expr><call><name pos:line="45" pos:column="34">f_name<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument><expr><name pos:line="45" pos:column="41">file<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">clean_fname<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">buf2<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">n<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <name pos:line="47" pos:column="29">buf2<pos:position pos:line="47" pos:column="33"/></name></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><operator pos:line="48" pos:column="29">*<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="30">n<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">==<pos:position pos:line="48" pos:column="34"/></operator> <literal type="char" pos:line="48" pos:column="35">'/'<pos:position pos:line="48" pos:column="38"/></literal></expr>)<pos:position pos:line="48" pos:column="39"/></condition><then pos:line="48" pos:column="39"> <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="40">n<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">++<pos:position pos:line="48" pos:column="43"/></operator></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt></block></then></if>
			<break pos:line="49" pos:column="25">break;<pos:position pos:line="49" pos:column="31"/></break>
		<case pos:line="50" pos:column="17">case <expr><literal type="char" pos:line="50" pos:column="22">'m'<pos:position pos:line="50" pos:column="25"/></literal></expr>:<pos:position pos:line="50" pos:column="26"/></case> <expr_stmt><expr><name pos:line="50" pos:column="27">n<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="31">lp_name<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">module_id<pos:position pos:line="50" pos:column="48"/></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt> <break pos:line="50" pos:column="51">break;<pos:position pos:line="50" pos:column="57"/></break>
		<case pos:line="51" pos:column="17">case <expr><literal type="char" pos:line="51" pos:column="22">'t'<pos:position pos:line="51" pos:column="25"/></literal></expr>:<pos:position pos:line="51" pos:column="26"/></case> <expr_stmt><expr><name pos:line="51" pos:column="27">n<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <call><name pos:line="51" pos:column="31">timestring<pos:position pos:line="51" pos:column="41"/></name><argument_list pos:line="51" pos:column="41">(<argument><expr><call><name pos:line="51" pos:column="42">time<pos:position pos:line="51" pos:column="46"/></name><argument_list pos:line="51" pos:column="46">(<argument><expr><name pos:line="51" pos:column="47">NULL<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt> <break pos:line="51" pos:column="55">break;<pos:position pos:line="51" pos:column="61"/></break>
		<case pos:line="52" pos:column="17">case <expr><literal type="char" pos:line="52" pos:column="22">'P'<pos:position pos:line="52" pos:column="25"/></literal></expr>:<pos:position pos:line="52" pos:column="26"/></case> <expr_stmt><expr><name pos:line="52" pos:column="27">n<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <call><name pos:line="52" pos:column="31">lp_path<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">module_id<pos:position pos:line="52" pos:column="48"/></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt> <break pos:line="52" pos:column="51">break;<pos:position pos:line="52" pos:column="57"/></break>
		<case pos:line="53" pos:column="17">case <expr><literal type="char" pos:line="53" pos:column="22">'u'<pos:position pos:line="53" pos:column="25"/></literal></expr>:<pos:position pos:line="53" pos:column="26"/></case> <expr_stmt><expr><name pos:line="53" pos:column="27">n<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">=<pos:position pos:line="53" pos:column="30"/></operator> <name pos:line="53" pos:column="31">auth_user<pos:position pos:line="53" pos:column="40"/></name></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt> <break pos:line="53" pos:column="42">break;<pos:position pos:line="53" pos:column="48"/></break>
		<case pos:line="54" pos:column="17">case <expr><literal type="char" pos:line="54" pos:column="22">'b'<pos:position pos:line="54" pos:column="25"/></literal></expr>:<pos:position pos:line="54" pos:column="26"/></case>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">am_sender<pos:position pos:line="55" pos:column="38"/></name></expr>)<pos:position pos:line="55" pos:column="39"/></condition><then pos:line="55" pos:column="39"> <block pos:line="55" pos:column="40">{
				<expr_stmt><expr><name pos:line="56" pos:column="33">b<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">=<pos:position pos:line="56" pos:column="36"/></operator> <name><name pos:line="56" pos:column="37">stats<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">.<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="43">total_written<pos:position pos:line="56" pos:column="56"/></name></name> <operator pos:line="56" pos:column="57">-<pos:position pos:line="56" pos:column="58"/></operator>
					<name><name pos:line="57" pos:column="41">initial_stats<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">-&gt;<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="56">total_written<pos:position pos:line="57" pos:column="69"/></name></name></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="58" pos:column="26"/></block></then> <else pos:line="58" pos:column="27">else <block pos:line="58" pos:column="32">{
				<expr_stmt><expr><name pos:line="59" pos:column="33">b<pos:position pos:line="59" pos:column="34"/></name> <operator pos:line="59" pos:column="35">=<pos:position pos:line="59" pos:column="36"/></operator> <name><name pos:line="59" pos:column="37">stats<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">.<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="43">total_read<pos:position pos:line="59" pos:column="53"/></name></name> <operator pos:line="59" pos:column="54">-<pos:position pos:line="59" pos:column="55"/></operator>
					<name><name pos:line="60" pos:column="41">initial_stats<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">-&gt;<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="56">total_read<pos:position pos:line="60" pos:column="66"/></name></name></expr>;<pos:position pos:line="60" pos:column="67"/></expr_stmt>
			}<pos:position pos:line="61" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">snprintf<pos:position pos:line="62" pos:column="33"/></name><argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">buf2<pos:position pos:line="62" pos:column="38"/></name></expr></argument>,<argument><expr><sizeof pos:line="62" pos:column="39">sizeof<argument_list pos:line="62" pos:column="45">(<argument><expr><name pos:line="62" pos:column="46">buf2<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></sizeof></expr></argument>,<argument><expr><literal type="string" pos:line="62" pos:column="52">"%.0f"<pos:position pos:line="62" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="62" pos:column="60">(<pos:position pos:line="62" pos:column="61"/></operator><name pos:line="62" pos:column="61">double<pos:position pos:line="62" pos:column="67"/></name><operator pos:line="62" pos:column="67">)<pos:position pos:line="62" pos:column="68"/></operator><name pos:line="62" pos:column="68">b<pos:position pos:line="62" pos:column="69"/></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name pos:line="63" pos:column="25">n<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <name pos:line="63" pos:column="29">buf2<pos:position pos:line="63" pos:column="33"/></name></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt>
			<break pos:line="64" pos:column="25">break;<pos:position pos:line="64" pos:column="31"/></break>
		<case pos:line="65" pos:column="17">case <expr><literal type="char" pos:line="65" pos:column="22">'c'<pos:position pos:line="65" pos:column="25"/></literal></expr>:<pos:position pos:line="65" pos:column="26"/></case>
			<if pos:line="66" pos:column="25">if <condition pos:line="66" pos:column="28">(<expr><operator pos:line="66" pos:column="29">!<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">am_sender<pos:position pos:line="66" pos:column="39"/></name></expr>)<pos:position pos:line="66" pos:column="40"/></condition><then pos:line="66" pos:column="40"> <block pos:line="66" pos:column="41">{
				<expr_stmt><expr><name pos:line="67" pos:column="33">b<pos:position pos:line="67" pos:column="34"/></name> <operator pos:line="67" pos:column="35">=<pos:position pos:line="67" pos:column="36"/></operator> <name><name pos:line="67" pos:column="37">stats<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">.<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="43">total_written<pos:position pos:line="67" pos:column="56"/></name></name> <operator pos:line="67" pos:column="57">-<pos:position pos:line="67" pos:column="58"/></operator>
					<name><name pos:line="68" pos:column="41">initial_stats<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">-&gt;<pos:position pos:line="68" pos:column="59"/></operator><name pos:line="68" pos:column="56">total_written<pos:position pos:line="68" pos:column="69"/></name></name></expr>;<pos:position pos:line="68" pos:column="70"/></expr_stmt>
			}<pos:position pos:line="69" pos:column="26"/></block></then> <else pos:line="69" pos:column="27">else <block pos:line="69" pos:column="32">{
				<expr_stmt><expr><name pos:line="70" pos:column="33">b<pos:position pos:line="70" pos:column="34"/></name> <operator pos:line="70" pos:column="35">=<pos:position pos:line="70" pos:column="36"/></operator> <name><name pos:line="70" pos:column="37">stats<pos:position pos:line="70" pos:column="42"/></name><operator pos:line="70" pos:column="42">.<pos:position pos:line="70" pos:column="43"/></operator><name pos:line="70" pos:column="43">total_read<pos:position pos:line="70" pos:column="53"/></name></name> <operator pos:line="70" pos:column="54">-<pos:position pos:line="70" pos:column="55"/></operator>
					<name><name pos:line="71" pos:column="41">initial_stats<pos:position pos:line="71" pos:column="54"/></name><operator pos:line="71" pos:column="54">-&gt;<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="56">total_read<pos:position pos:line="71" pos:column="66"/></name></name></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
			}<pos:position pos:line="72" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">snprintf<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">buf2<pos:position pos:line="73" pos:column="38"/></name></expr></argument>,<argument><expr><sizeof pos:line="73" pos:column="39">sizeof<argument_list pos:line="73" pos:column="45">(<argument><expr><name pos:line="73" pos:column="46">buf2<pos:position pos:line="73" pos:column="50"/></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></sizeof></expr></argument>,<argument><expr><literal type="string" pos:line="73" pos:column="52">"%.0f"<pos:position pos:line="73" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="60">(<pos:position pos:line="73" pos:column="61"/></operator><name pos:line="73" pos:column="61">double<pos:position pos:line="73" pos:column="67"/></name><operator pos:line="73" pos:column="67">)<pos:position pos:line="73" pos:column="68"/></operator><name pos:line="73" pos:column="68">b<pos:position pos:line="73" pos:column="69"/></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name pos:line="74" pos:column="25">n<pos:position pos:line="74" pos:column="26"/></name> <operator pos:line="74" pos:column="27">=<pos:position pos:line="74" pos:column="28"/></operator> <name pos:line="74" pos:column="29">buf2<pos:position pos:line="74" pos:column="33"/></name></expr>;<pos:position pos:line="74" pos:column="34"/></expr_stmt>
			<break pos:line="75" pos:column="25">break;<pos:position pos:line="75" pos:column="31"/></break>
		}<pos:position pos:line="76" pos:column="18"/></block></switch>

		<comment type="block" pos:line="78" pos:column="17">/* n is the string to be inserted in place of this %
		 * code; l is its length not including the trailing
		 * NUL */</comment>
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><operator pos:line="81" pos:column="21">!<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="22">n<pos:position pos:line="81" pos:column="23"/></name></expr>)<pos:position pos:line="81" pos:column="24"/></condition><then pos:line="81" pos:column="24">
			<block type="pseudo"><continue pos:line="82" pos:column="25">continue;<pos:position pos:line="82" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="84" pos:column="17">l<pos:position pos:line="84" pos:column="18"/></name> <operator pos:line="84" pos:column="19">=<pos:position pos:line="84" pos:column="20"/></operator> <call><name pos:line="84" pos:column="21">strlen<pos:position pos:line="84" pos:column="27"/></name><argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">n<pos:position pos:line="84" pos:column="29"/></name></expr></argument>)<pos:position pos:line="84" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>

		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">l<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">+<pos:position pos:line="86" pos:column="24"/></operator> <operator pos:line="86" pos:column="25">(<pos:position pos:line="86" pos:column="26"/></operator><call pos:line="86" pos:column="26">(<name pos:line="86" pos:column="27">int<pos:position pos:line="86" pos:column="30"/></name>)<argument_list pos:line="86" pos:column="31">(<argument><expr><name pos:line="86" pos:column="32">s<pos:position pos:line="86" pos:column="33"/></name> <operator pos:line="86" pos:column="34">-<pos:position pos:line="86" pos:column="35"/></operator> <operator pos:line="86" pos:column="36">&amp;<pos:position pos:line="86" pos:column="41"/></operator><name><name pos:line="86" pos:column="37">buf<pos:position pos:line="86" pos:column="40"/></name><index pos:line="86" pos:column="40">[<expr><literal type="number" pos:line="86" pos:column="41">0<pos:position pos:line="86" pos:column="42"/></literal></expr>]<pos:position pos:line="86" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="86" pos:column="44"/></argument_list></call><operator pos:line="86" pos:column="44">)<pos:position pos:line="86" pos:column="45"/></operator> <operator pos:line="86" pos:column="46">&gt;=<pos:position pos:line="86" pos:column="51"/></operator> <sizeof pos:line="86" pos:column="49">sizeof<argument_list pos:line="86" pos:column="55">(<argument><expr><name pos:line="86" pos:column="56">buf<pos:position pos:line="86" pos:column="59"/></name></expr></argument>)<pos:position pos:line="86" pos:column="60"/></argument_list></sizeof></expr>)<pos:position pos:line="86" pos:column="61"/></condition><then pos:line="86" pos:column="61"> <block pos:line="86" pos:column="62">{
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">rprintf<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">FERROR<pos:position pos:line="87" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="87" pos:column="40">"buffer overflow expanding %%%c - exiting\n"<pos:position pos:line="87" pos:column="84"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="88" pos:column="33">p<pos:position pos:line="88" pos:column="34"/></name><index pos:line="88" pos:column="34">[<expr><literal type="number" pos:line="88" pos:column="35">0<pos:position pos:line="88" pos:column="36"/></literal></expr>]<pos:position pos:line="88" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="88" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="89" pos:column="25">exit_cleanup<pos:position pos:line="89" pos:column="37"/></name><argument_list pos:line="89" pos:column="37">(<argument><expr><name pos:line="89" pos:column="38">RERR_MESSAGEIO<pos:position pos:line="89" pos:column="52"/></name></expr></argument>)<pos:position pos:line="89" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="92" pos:column="17">/* Shuffle the rest of the string along to make space for n */</comment>
		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><name pos:line="93" pos:column="21">l<pos:position pos:line="93" pos:column="22"/></name> <operator pos:line="93" pos:column="23">!=<pos:position pos:line="93" pos:column="25"/></operator> <literal type="number" pos:line="93" pos:column="26">2<pos:position pos:line="93" pos:column="27"/></literal></expr>)<pos:position pos:line="93" pos:column="28"/></condition><then pos:line="93" pos:column="28"> <block pos:line="93" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">memmove<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">s<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">+<pos:position pos:line="94" pos:column="35"/></operator><operator pos:line="94" pos:column="35">(<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">l<pos:position pos:line="94" pos:column="37"/></name><operator pos:line="94" pos:column="37">-<pos:position pos:line="94" pos:column="38"/></operator><literal type="number" pos:line="94" pos:column="38">1<pos:position pos:line="94" pos:column="39"/></literal><operator pos:line="94" pos:column="39">)<pos:position pos:line="94" pos:column="40"/></operator></expr></argument>, <argument><expr><name pos:line="94" pos:column="42">s<pos:position pos:line="94" pos:column="43"/></name><operator pos:line="94" pos:column="43">+<pos:position pos:line="94" pos:column="44"/></operator><literal type="number" pos:line="94" pos:column="44">1<pos:position pos:line="94" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="47">strlen<pos:position pos:line="94" pos:column="53"/></name><argument_list pos:line="94" pos:column="53">(<argument><expr><name pos:line="94" pos:column="54">s<pos:position pos:line="94" pos:column="55"/></name><operator pos:line="94" pos:column="55">+<pos:position pos:line="94" pos:column="56"/></operator><literal type="number" pos:line="94" pos:column="56">1<pos:position pos:line="94" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="58"/></argument_list></call><operator pos:line="94" pos:column="58">+<pos:position pos:line="94" pos:column="59"/></operator><literal type="number" pos:line="94" pos:column="59">1<pos:position pos:line="94" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="97" pos:column="17">/* Copy in n but NOT its nul, because the format sting
		 * probably continues after this. */</comment>
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">memcpy<pos:position pos:line="99" pos:column="23"/></name><argument_list pos:line="99" pos:column="23">(<argument><expr><name pos:line="99" pos:column="24">p<pos:position pos:line="99" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="27">n<pos:position pos:line="99" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="30">l<pos:position pos:line="99" pos:column="31"/></name></expr></argument>)<pos:position pos:line="99" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="33"/></expr_stmt>

		<comment type="block" pos:line="101" pos:column="17">/* Skip over inserted string; continue looking */</comment>
		<expr_stmt><expr><name pos:line="102" pos:column="17">s<pos:position pos:line="102" pos:column="18"/></name> <operator pos:line="102" pos:column="19">=<pos:position pos:line="102" pos:column="20"/></operator> <name pos:line="102" pos:column="21">p<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">+<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="23">l<pos:position pos:line="102" pos:column="24"/></name></expr>;<pos:position pos:line="102" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="103" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="105" pos:column="9">rprintf<pos:position pos:line="105" pos:column="16"/></name><argument_list pos:line="105" pos:column="16">(<argument><expr><name pos:line="105" pos:column="17">code<pos:position pos:line="105" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="105" pos:column="22">"%s\n"<pos:position pos:line="105" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="30">buf<pos:position pos:line="105" pos:column="33"/></name></expr></argument>)<pos:position pos:line="105" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="35"/></expr_stmt>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_65_rsync-3.0.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">check_filter<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">filter_list_struct<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">listp<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="52">enum<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">logcode<pos:position pos:line="1" pos:column="64"/></name></name></type> <name pos:line="1" pos:column="65">code<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		 <parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">name<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">name_is_dir<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">filter_struct<pos:position pos:line="4" pos:column="29"/></name></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">ent<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">ent<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name><name pos:line="6" pos:column="20">listp<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">head<pos:position pos:line="6" pos:column="31"/></name></name></expr>;<pos:position pos:line="6" pos:column="32"/></init> <condition><expr><name pos:line="6" pos:column="33">ent<pos:position pos:line="6" pos:column="36"/></name></expr>;<pos:position pos:line="6" pos:column="37"/></condition> <incr><expr><name pos:line="6" pos:column="38">ent<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">=<pos:position pos:line="6" pos:column="43"/></operator> <name><name pos:line="6" pos:column="44">ent<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">next<pos:position pos:line="6" pos:column="53"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="54"/></control> <block pos:line="6" pos:column="55">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">ignore_perishable<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">&amp;&amp;<pos:position pos:line="7" pos:column="49"/></operator> <name><name pos:line="7" pos:column="42">ent<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">match_flags<pos:position pos:line="7" pos:column="58"/></name></name> <operator pos:line="7" pos:column="59">&amp;<pos:position pos:line="7" pos:column="64"/></operator> <name pos:line="7" pos:column="61">MATCHFLG_PERISHABLE<pos:position pos:line="7" pos:column="80"/></name></expr>)<pos:position pos:line="7" pos:column="81"/></condition><then pos:line="7" pos:column="81">
			<block type="pseudo"><continue pos:line="8" pos:column="25">continue;<pos:position pos:line="8" pos:column="34"/></continue></block></then></if>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">ent<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">match_flags<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">&amp;<pos:position pos:line="9" pos:column="43"/></operator> <name pos:line="9" pos:column="40">MATCHFLG_PERDIR_MERGE<pos:position pos:line="9" pos:column="61"/></name></expr>)<pos:position pos:line="9" pos:column="62"/></condition><then pos:line="9" pos:column="62"> <block pos:line="9" pos:column="63">{
			<decl_stmt><decl><type><name pos:line="10" pos:column="25">int<pos:position pos:line="10" pos:column="28"/></name></type> <name pos:line="10" pos:column="29">rc<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><call><name pos:line="10" pos:column="34">check_filter<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name><name pos:line="10" pos:column="47">ent<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">u<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">.<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">mergelist<pos:position pos:line="10" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="65">code<pos:position pos:line="10" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="71">name<pos:position pos:line="10" pos:column="75"/></name></expr></argument>,
					      <argument><expr><name pos:line="11" pos:column="47">name_is_dir<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="60"/></decl_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">rc<pos:position pos:line="12" pos:column="31"/></name></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
				<block type="pseudo"><return pos:line="13" pos:column="33">return <expr><name pos:line="13" pos:column="40">rc<pos:position pos:line="13" pos:column="42"/></name></expr>;<pos:position pos:line="13" pos:column="43"/></return></block></then></if>
			<continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">ent<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">match_flags<pos:position pos:line="16" pos:column="37"/></name></name> <operator pos:line="16" pos:column="38">&amp;<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="40">MATCHFLG_CVS_IGNORE<pos:position pos:line="16" pos:column="59"/></name></expr>)<pos:position pos:line="16" pos:column="60"/></condition><then pos:line="16" pos:column="60"> <block pos:line="16" pos:column="61">{
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">int<pos:position pos:line="17" pos:column="28"/></name></type> <name pos:line="17" pos:column="29">rc<pos:position pos:line="17" pos:column="31"/></name> <init pos:line="17" pos:column="32">= <expr><call><name pos:line="17" pos:column="34">check_filter<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><operator pos:line="17" pos:column="47">&amp;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="48">cvs_filter_list<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">code<pos:position pos:line="17" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="71">name<pos:position pos:line="17" pos:column="75"/></name></expr></argument>,
					      <argument><expr><name pos:line="18" pos:column="47">name_is_dir<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="60"/></decl_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">rc<pos:position pos:line="19" pos:column="31"/></name></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32">
				<block type="pseudo"><return pos:line="20" pos:column="33">return <expr><name pos:line="20" pos:column="40">rc<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></return></block></then></if>
			<continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">rule_matches<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">name<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">ent<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">name_is_dir<pos:position pos:line="23" pos:column="56"/></name></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="58"/></condition><then pos:line="23" pos:column="58"> <block pos:line="23" pos:column="59">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">report_filter_result<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">code<pos:position pos:line="24" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="52">name<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">ent<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="63">name_is_dir<pos:position pos:line="24" pos:column="74"/></name></expr></argument>,
					     <argument><expr><name><name pos:line="25" pos:column="46">listp<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">-&gt;<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="53">debug_type<pos:position pos:line="25" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
			<return pos:line="26" pos:column="25">return <expr><ternary><condition><expr><name><name pos:line="26" pos:column="32">ent<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">match_flags<pos:position pos:line="26" pos:column="48"/></name></name> <operator pos:line="26" pos:column="49">&amp;<pos:position pos:line="26" pos:column="54"/></operator> <name pos:line="26" pos:column="51">MATCHFLG_INCLUDE<pos:position pos:line="26" pos:column="67"/></name></expr> ?<pos:position pos:line="26" pos:column="69"/></condition><then pos:line="26" pos:column="69"> <expr><literal type="number" pos:line="26" pos:column="70">1<pos:position pos:line="26" pos:column="71"/></literal></expr> <pos:position pos:line="26" pos:column="72"/></then><else pos:line="26" pos:column="72">: <expr><operator pos:line="26" pos:column="74">-<pos:position pos:line="26" pos:column="75"/></operator><literal type="number" pos:line="26" pos:column="75">1<pos:position pos:line="26" pos:column="76"/></literal></expr></else></ternary></expr>;<pos:position pos:line="26" pos:column="77"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></for>

	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_560_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">output_item_help<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">output_struct<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">words<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">short<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">levels<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><ternary><condition><expr><name pos:line="3" pos:column="25">words<pos:position pos:line="3" pos:column="30"/></name> <operator pos:line="3" pos:column="31">==<pos:position pos:line="3" pos:column="33"/></operator> <name pos:line="3" pos:column="34">info_words<pos:position pos:line="3" pos:column="44"/></name></expr> ?<pos:position pos:line="3" pos:column="46"/></condition><then pos:line="3" pos:column="46"> <expr><name pos:line="3" pos:column="47">info_levels<pos:position pos:line="3" pos:column="58"/></name></expr> <pos:position pos:line="3" pos:column="59"/></then><else pos:line="3" pos:column="59">: <expr><name pos:line="3" pos:column="61">debug_levels<pos:position pos:line="3" pos:column="73"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="74"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">verbosity<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><ternary><condition><expr><name pos:line="4" pos:column="34">words<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">==<pos:position pos:line="4" pos:column="42"/></operator> <name pos:line="4" pos:column="43">info_words<pos:position pos:line="4" pos:column="53"/></name></expr> ?<pos:position pos:line="4" pos:column="55"/></condition><then pos:line="4" pos:column="55"> <expr><name pos:line="4" pos:column="56">info_verbosity<pos:position pos:line="4" pos:column="70"/></name></expr> <pos:position pos:line="4" pos:column="71"/></then><else pos:line="4" pos:column="71">: <expr><name pos:line="4" pos:column="73">debug_verbosity<pos:position pos:line="4" pos:column="88"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="89"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">128<pos:position pos:line="5" pos:column="21"/></literal></expr>]<pos:position pos:line="5" pos:column="22"/></index></name></decl>, <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="25">opt<pos:position pos:line="5" pos:column="28"/></name></decl>, <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="31">fmt<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><literal type="string" pos:line="5" pos:column="37">"%-10s %s\n"<pos:position pos:line="5" pos:column="49"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">j<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">reset_output_levels<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">()<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">rprintf<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">FINFO<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="24">"Use OPT or OPT1 for level 1 output, OPT2 for level 2, etc.; OPT0 silences.\n"<pos:position pos:line="10" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="104"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">rprintf<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">FINFO<pos:position pos:line="11" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="24">"\n"<pos:position pos:line="11" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
	<for pos:line="12" pos:column="9">for <control pos:line="12" pos:column="13">(<init><expr><name pos:line="12" pos:column="14">j<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name><name pos:line="12" pos:column="21">words<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><name pos:line="12" pos:column="27">j<pos:position pos:line="12" pos:column="28"/></name></expr>]<pos:position pos:line="12" pos:column="29"/></index></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">name<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></condition> <incr><expr><name pos:line="12" pos:column="36">j<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">++<pos:position pos:line="12" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="40"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">rprintf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">FINFO<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">fmt<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="37">words<pos:position pos:line="13" pos:column="42"/></name><index pos:line="13" pos:column="42">[<expr><name pos:line="13" pos:column="43">j<pos:position pos:line="13" pos:column="44"/></name></expr>]<pos:position pos:line="13" pos:column="45"/></index></name><operator pos:line="13" pos:column="45">.<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="46">name<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="52">words<pos:position pos:line="13" pos:column="57"/></name><index pos:line="13" pos:column="57">[<expr><name pos:line="13" pos:column="58">j<pos:position pos:line="13" pos:column="59"/></name></expr>]<pos:position pos:line="13" pos:column="60"/></index></name><operator pos:line="13" pos:column="60">.<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="61">help<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="67"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">rprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">FINFO<pos:position pos:line="14" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="24">"\n"<pos:position pos:line="14" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">snprintf<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">buf<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="23">sizeof <name pos:line="16" pos:column="30">buf<pos:position pos:line="16" pos:column="33"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"Set all %s options (e.g. all%d)"<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>,
		 <argument><expr><name><name pos:line="17" pos:column="18">words<pos:position pos:line="17" pos:column="23"/></name><index pos:line="17" pos:column="23">[<expr><name pos:line="17" pos:column="24">j<pos:position pos:line="17" pos:column="25"/></name></expr>]<pos:position pos:line="17" pos:column="26"/></index></name><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">help<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">MAX_OUT_LEVEL<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">rprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">FINFO<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="24">fmt<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="29">"ALL"<pos:position pos:line="18" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">buf<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">snprintf<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name pos:line="20" pos:column="18">buf<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="23">sizeof <name pos:line="20" pos:column="30">buf<pos:position pos:line="20" pos:column="33"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="35">"Silence all %s options (same as all0)"<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>,
		 <argument><expr><name><name pos:line="21" pos:column="18">words<pos:position pos:line="21" pos:column="23"/></name><index pos:line="21" pos:column="23">[<expr><name pos:line="21" pos:column="24">j<pos:position pos:line="21" pos:column="25"/></name></expr>]<pos:position pos:line="21" pos:column="26"/></index></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">help<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">rprintf<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">FINFO<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">fmt<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="29">"NONE"<pos:position pos:line="22" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">buf<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">rprintf<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">FINFO<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">fmt<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="29">"HELP"<pos:position pos:line="24" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="37">"Output this help message"<pos:position pos:line="24" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">rprintf<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">FINFO<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="24">"\n"<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">rprintf<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">FINFO<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="24">"Options added for each increase in verbose level:\n"<pos:position pos:line="26" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>

	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">j<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="18">1<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></init> <condition><expr><name pos:line="28" pos:column="21">j<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="26">MAX_VERBOSITY<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></condition> <incr><expr><name pos:line="28" pos:column="41">j<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">++<pos:position pos:line="28" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="45"/></control> <block pos:line="28" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">parse_output_words<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">words<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">levels<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="51">verbosity<pos:position pos:line="29" pos:column="60"/></name><index pos:line="29" pos:column="60">[<expr><name pos:line="29" pos:column="61">j<pos:position pos:line="29" pos:column="62"/></name></expr>]<pos:position pos:line="29" pos:column="63"/></index></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">HELP_PRIORITY<pos:position pos:line="29" pos:column="78"/></name></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">opt<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">make_output_option<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><name pos:line="30" pos:column="42">words<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">levels<pos:position pos:line="30" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="57">W_CLI<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">|<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="63">W_SRV<pos:position pos:line="30" pos:column="68"/></name><operator pos:line="30" pos:column="68">|<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="69">W_SND<pos:position pos:line="30" pos:column="74"/></name><operator pos:line="30" pos:column="74">|<pos:position pos:line="30" pos:column="75"/></operator><name pos:line="30" pos:column="75">W_REC<pos:position pos:line="30" pos:column="80"/></name></expr></argument>)<pos:position pos:line="30" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="82"/></expr_stmt>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">opt<pos:position pos:line="31" pos:column="24"/></name></expr>)<pos:position pos:line="31" pos:column="25"/></condition><then pos:line="31" pos:column="25"> <block pos:line="31" pos:column="26">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">rprintf<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">FINFO<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="40">"%d) %s\n"<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">j<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="55">strchr<pos:position pos:line="32" pos:column="61"/></name><argument_list pos:line="32" pos:column="61">(<argument><expr><name pos:line="32" pos:column="62">opt<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="67">'='<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call><operator pos:line="32" pos:column="71">+<pos:position pos:line="32" pos:column="72"/></operator><literal type="number" pos:line="32" pos:column="72">1<pos:position pos:line="32" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">free<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">opt<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">reset_output_levels<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">()<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

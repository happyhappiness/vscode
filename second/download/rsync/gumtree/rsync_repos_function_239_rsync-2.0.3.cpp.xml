<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_239_rsync-2.0.3.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">deflateInit2<pos:position pos:line="1" pos:column="17"/></name> <argument_list pos:line="1" pos:column="18">(<argument><expr><name pos:line="1" pos:column="19">strm<pos:position pos:line="1" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="25">level<pos:position pos:line="1" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="32">method<pos:position pos:line="1" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="40">windowBits<pos:position pos:line="1" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="52">memLevel<pos:position pos:line="1" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="62">strategy<pos:position pos:line="1" pos:column="70"/></name></expr></argument>)<pos:position pos:line="1" pos:column="71"/></argument_list>
    <name pos:line="2" pos:column="5">z_stream<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier><name pos:line="2" pos:column="15">strm<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type>  <name pos:line="3" pos:column="10">level<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type>  <name pos:line="4" pos:column="10">method<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type>  <name pos:line="5" pos:column="10">windowBits<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type>  <name pos:line="6" pos:column="10">memLevel<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type>  <name pos:line="7" pos:column="10">strategy<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">deflate_state<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">s<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">noheader<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">strm<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">Z_NULL<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24"> <block type="pseudo"><return pos:line="12" pos:column="25">return <expr><name pos:line="12" pos:column="32">Z_STREAM_ERROR<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">strm<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">msg<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">Z_NULL<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
<comment type="block" pos:line="15" pos:column="1">/*    if (strm-&gt;zalloc == Z_NULL) strm-&gt;zalloc = zcalloc; */</comment>
<comment type="block" pos:line="16" pos:column="1">/*    if (strm-&gt;zfree == Z_NULL) strm-&gt;zfree = zcfree; */</comment>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">level<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">Z_DEFAULT_COMPRESSION<pos:position pos:line="18" pos:column="39"/></name></expr>)<pos:position pos:line="18" pos:column="40"/></condition><then pos:line="18" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="41">level<pos:position pos:line="18" pos:column="46"/></name> <operator pos:line="18" pos:column="47">=<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">6<pos:position pos:line="18" pos:column="50"/></literal></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">windowBits<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&lt;<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <block pos:line="20" pos:column="25">{ <comment type="block" pos:line="20" pos:column="27">/* undocumented feature: suppress zlib header */</comment>
        <expr_stmt><expr><name pos:line="21" pos:column="9">noheader<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">windowBits<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">-<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">windowBits<pos:position pos:line="22" pos:column="33"/></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">memLevel<pos:position pos:line="24" pos:column="17"/></name> <argument_list type="generic" pos:line="24" pos:column="18">&lt; <argument><expr><literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal> <operator pos:line="24" pos:column="22">||<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">memLevel<pos:position pos:line="24" pos:column="33"/></name></expr></argument> &gt;<pos:position pos:line="24" pos:column="38"/></argument_list></name> <name pos:line="24" pos:column="36">MAX_MEM_LEVEL<pos:position pos:line="24" pos:column="49"/></name> <operator pos:line="24" pos:column="50">||<pos:position pos:line="24" pos:column="52"/></operator> <name pos:line="24" pos:column="53">method<pos:position pos:line="24" pos:column="59"/></name> <operator pos:line="24" pos:column="60">!=<pos:position pos:line="24" pos:column="62"/></operator> <name pos:line="24" pos:column="63">DEFLATED<pos:position pos:line="24" pos:column="71"/></name> <operator pos:line="24" pos:column="72">||<pos:position pos:line="24" pos:column="74"/></operator>
        <name><name pos:line="25" pos:column="9">windowBits<pos:position pos:line="25" pos:column="19"/></name> <argument_list type="generic" pos:line="25" pos:column="20">&lt; <argument><expr><literal type="number" pos:line="25" pos:column="22">8<pos:position pos:line="25" pos:column="23"/></literal> <operator pos:line="25" pos:column="24">||<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">windowBits<pos:position pos:line="25" pos:column="37"/></name></expr></argument> &gt;<pos:position pos:line="25" pos:column="42"/></argument_list></name> <literal type="number" pos:line="25" pos:column="40">15<pos:position pos:line="25" pos:column="42"/></literal> <operator pos:line="25" pos:column="43">||<pos:position pos:line="25" pos:column="45"/></operator> <name><name pos:line="25" pos:column="46">level<pos:position pos:line="25" pos:column="51"/></name> <argument_list type="generic" pos:line="25" pos:column="52">&lt; <argument><expr><literal type="number" pos:line="25" pos:column="54">1<pos:position pos:line="25" pos:column="55"/></literal> <operator pos:line="25" pos:column="56">||<pos:position pos:line="25" pos:column="58"/></operator> <name pos:line="25" pos:column="59">level<pos:position pos:line="25" pos:column="64"/></name></expr></argument> &gt;<pos:position pos:line="25" pos:column="69"/></argument_list></name> <literal type="number" pos:line="25" pos:column="67">9<pos:position pos:line="25" pos:column="68"/></literal></expr>)<pos:position pos:line="25" pos:column="69"/></condition><then pos:line="25" pos:column="69"> <block pos:line="25" pos:column="70">{
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">Z_STREAM_ERROR<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">s<pos:position pos:line="28" pos:column="6"/></name> <operator pos:line="28" pos:column="7">=<pos:position pos:line="28" pos:column="8"/></operator> <operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">deflate_state<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">*<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator> <call><name pos:line="28" pos:column="27">ZALLOC<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name pos:line="28" pos:column="34">strm<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="40">1<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="43">sizeof<argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">deflate_state<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">s<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">==<pos:position pos:line="29" pos:column="13"/></operator> <name pos:line="29" pos:column="14">Z_NULL<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21"> <block type="pseudo"><return pos:line="29" pos:column="22">return <expr><name pos:line="29" pos:column="29">Z_MEM_ERROR<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">bzero<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">s<pos:position pos:line="30" pos:column="12"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="14">sizeof<argument_list pos:line="30" pos:column="20">(<argument><expr><operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">s<pos:position pos:line="30" pos:column="23"/></name></expr></argument>)<pos:position pos:line="30" pos:column="24"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">strm<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">state<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator>struct <name pos:line="31" pos:column="27">internal_state<pos:position pos:line="31" pos:column="41"/></name> <name pos:line="31" pos:column="42">FAR<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">*<pos:position pos:line="31" pos:column="47"/></operator><operator pos:line="31" pos:column="47">)<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">s<pos:position pos:line="31" pos:column="49"/></name></expr>;<pos:position pos:line="31" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">s<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">strm<pos:position pos:line="32" pos:column="12"/></name></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">strm<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">s<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">-&gt;<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="8">noheader<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">noheader<pos:position pos:line="34" pos:column="27"/></name></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">s<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">w_bits<pos:position pos:line="35" pos:column="14"/></name></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">windowBits<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">s<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">w_size<pos:position pos:line="36" pos:column="14"/></name></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal> <operator pos:line="36" pos:column="19">&lt;&lt;<pos:position pos:line="36" pos:column="27"/></operator> <name><name pos:line="36" pos:column="22">s<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">-&gt;<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="25">w_bits<pos:position pos:line="36" pos:column="31"/></name></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">s<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">w_mask<pos:position pos:line="37" pos:column="14"/></name></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name><name pos:line="37" pos:column="17">s<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">w_size<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">-<pos:position pos:line="37" pos:column="28"/></operator> <literal type="number" pos:line="37" pos:column="29">1<pos:position pos:line="37" pos:column="30"/></literal></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">s<pos:position pos:line="39" pos:column="6"/></name><operator pos:line="39" pos:column="6">-&gt;<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="8">hash_bits<pos:position pos:line="39" pos:column="17"/></name></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">memLevel<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">+<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">7<pos:position pos:line="39" pos:column="32"/></literal></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">s<pos:position pos:line="40" pos:column="6"/></name><operator pos:line="40" pos:column="6">-&gt;<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="8">hash_size<pos:position pos:line="40" pos:column="17"/></name></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">1<pos:position pos:line="40" pos:column="21"/></literal> <operator pos:line="40" pos:column="22">&lt;&lt;<pos:position pos:line="40" pos:column="30"/></operator> <name><name pos:line="40" pos:column="25">s<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">hash_bits<pos:position pos:line="40" pos:column="37"/></name></name></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">s<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">-&gt;<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="8">hash_mask<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name><name pos:line="41" pos:column="20">s<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">hash_size<pos:position pos:line="41" pos:column="32"/></name></name> <operator pos:line="41" pos:column="33">-<pos:position pos:line="41" pos:column="34"/></operator> <literal type="number" pos:line="41" pos:column="35">1<pos:position pos:line="41" pos:column="36"/></literal></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">s<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">hash_shift<pos:position pos:line="42" pos:column="18"/></name></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator>  <operator pos:line="42" pos:column="22">(<pos:position pos:line="42" pos:column="23"/></operator><operator pos:line="42" pos:column="23">(<pos:position pos:line="42" pos:column="24"/></operator><name><name pos:line="42" pos:column="24">s<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">-&gt;<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="27">hash_bits<pos:position pos:line="42" pos:column="36"/></name></name><operator pos:line="42" pos:column="36">+<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">MIN_MATCH<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">-<pos:position pos:line="42" pos:column="47"/></operator><literal type="number" pos:line="42" pos:column="47">1<pos:position pos:line="42" pos:column="48"/></literal><operator pos:line="42" pos:column="48">)<pos:position pos:line="42" pos:column="49"/></operator><operator pos:line="42" pos:column="49">/<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="50">MIN_MATCH<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">)<pos:position pos:line="42" pos:column="60"/></operator></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="44" pos:column="5">s<pos:position pos:line="44" pos:column="6"/></name><operator pos:line="44" pos:column="6">-&gt;<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="8">window<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <operator pos:line="44" pos:column="17">(<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">Bytef<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">*<pos:position pos:line="44" pos:column="25"/></operator><operator pos:line="44" pos:column="25">)<pos:position pos:line="44" pos:column="26"/></operator> <call><name pos:line="44" pos:column="27">ZALLOC<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">strm<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="40">s<pos:position pos:line="44" pos:column="41"/></name><operator pos:line="44" pos:column="41">-&gt;<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="43">w_size<pos:position pos:line="44" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="51">2<pos:position pos:line="44" pos:column="52"/></literal><operator pos:line="44" pos:column="52">*<pos:position pos:line="44" pos:column="53"/></operator><sizeof pos:line="44" pos:column="53">sizeof<argument_list pos:line="44" pos:column="59">(<argument><expr><name pos:line="44" pos:column="60">Byte<pos:position pos:line="44" pos:column="64"/></name></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">s<pos:position pos:line="45" pos:column="6"/></name><operator pos:line="45" pos:column="6">-&gt;<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="8">prev<pos:position pos:line="45" pos:column="12"/></name></name>   <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <operator pos:line="45" pos:column="17">(<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">Posf<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">*<pos:position pos:line="45" pos:column="24"/></operator><operator pos:line="45" pos:column="24">)<pos:position pos:line="45" pos:column="25"/></operator>  <call><name pos:line="45" pos:column="27">ZALLOC<pos:position pos:line="45" pos:column="33"/></name><argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">strm<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="40">s<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">w_size<pos:position pos:line="45" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="51">sizeof<argument_list pos:line="45" pos:column="57">(<argument><expr><name pos:line="45" pos:column="58">Pos<pos:position pos:line="45" pos:column="61"/></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">s<pos:position pos:line="46" pos:column="6"/></name><operator pos:line="46" pos:column="6">-&gt;<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="8">head<pos:position pos:line="46" pos:column="12"/></name></name>   <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <operator pos:line="46" pos:column="17">(<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">Posf<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">*<pos:position pos:line="46" pos:column="24"/></operator><operator pos:line="46" pos:column="24">)<pos:position pos:line="46" pos:column="25"/></operator>  <call><name pos:line="46" pos:column="27">ZALLOC<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">strm<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="40">s<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">-&gt;<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="43">hash_size<pos:position pos:line="46" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="54">sizeof<argument_list pos:line="46" pos:column="60">(<argument><expr><name pos:line="46" pos:column="61">Pos<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="48" pos:column="5">s<pos:position pos:line="48" pos:column="6"/></name><operator pos:line="48" pos:column="6">-&gt;<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="8">lit_bufsize<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <literal type="number" pos:line="48" pos:column="22">1<pos:position pos:line="48" pos:column="23"/></literal> <operator pos:line="48" pos:column="24">&lt;&lt;<pos:position pos:line="48" pos:column="32"/></operator> <operator pos:line="48" pos:column="27">(<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">memLevel<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">+<pos:position pos:line="48" pos:column="38"/></operator> <literal type="number" pos:line="48" pos:column="39">6<pos:position pos:line="48" pos:column="40"/></literal><operator pos:line="48" pos:column="40">)<pos:position pos:line="48" pos:column="41"/></operator></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt> <comment type="block" pos:line="48" pos:column="43">/* 16K elements by default */</comment>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">s<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">pending_buf<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <operator pos:line="50" pos:column="22">(<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">uchf<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></operator><operator pos:line="50" pos:column="29">)<pos:position pos:line="50" pos:column="30"/></operator> <call><name pos:line="50" pos:column="31">ZALLOC<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">strm<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="44">s<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">-&gt;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="47">lit_bufsize<pos:position pos:line="50" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="60">2<pos:position pos:line="50" pos:column="61"/></literal><operator pos:line="50" pos:column="61">*<pos:position pos:line="50" pos:column="62"/></operator><sizeof pos:line="50" pos:column="62">sizeof<argument_list pos:line="50" pos:column="68">(<argument><expr><name pos:line="50" pos:column="69">ush<pos:position pos:line="50" pos:column="72"/></name></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="75"/></expr_stmt>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">s<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">window<pos:position pos:line="52" pos:column="18"/></name></name> <operator pos:line="52" pos:column="19">==<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="22">Z_NULL<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">||<pos:position pos:line="52" pos:column="31"/></operator> <name><name pos:line="52" pos:column="32">s<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">-&gt;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="35">prev<pos:position pos:line="52" pos:column="39"/></name></name> <operator pos:line="52" pos:column="40">==<pos:position pos:line="52" pos:column="42"/></operator> <name pos:line="52" pos:column="43">Z_NULL<pos:position pos:line="52" pos:column="49"/></name> <operator pos:line="52" pos:column="50">||<pos:position pos:line="52" pos:column="52"/></operator> <name><name pos:line="52" pos:column="53">s<pos:position pos:line="52" pos:column="54"/></name><operator pos:line="52" pos:column="54">-&gt;<pos:position pos:line="52" pos:column="59"/></operator><name pos:line="52" pos:column="56">head<pos:position pos:line="52" pos:column="60"/></name></name> <operator pos:line="52" pos:column="61">==<pos:position pos:line="52" pos:column="63"/></operator> <name pos:line="52" pos:column="64">Z_NULL<pos:position pos:line="52" pos:column="70"/></name> <operator pos:line="52" pos:column="71">||<pos:position pos:line="52" pos:column="73"/></operator>
        <name><name pos:line="53" pos:column="9">s<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">pending_buf<pos:position pos:line="53" pos:column="23"/></name></name> <operator pos:line="53" pos:column="24">==<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">Z_NULL<pos:position pos:line="53" pos:column="33"/></name></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34"> <block pos:line="53" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">strm<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">msg<pos:position pos:line="54" pos:column="18"/></name></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <name><name pos:line="54" pos:column="21">z_errmsg<pos:position pos:line="54" pos:column="29"/></name><index pos:line="54" pos:column="29">[<expr><literal type="number" pos:line="54" pos:column="30">1<pos:position pos:line="54" pos:column="31"/></literal><operator pos:line="54" pos:column="31">-<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="32">Z_MEM_ERROR<pos:position pos:line="54" pos:column="43"/></name></expr>]<pos:position pos:line="54" pos:column="44"/></index></name></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">deflateEnd<pos:position pos:line="55" pos:column="19"/></name> <argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">strm<pos:position pos:line="55" pos:column="25"/></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>
        <return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">Z_MEM_ERROR<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">s<pos:position pos:line="58" pos:column="6"/></name><operator pos:line="58" pos:column="6">-&gt;<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="8">d_buf<pos:position pos:line="58" pos:column="13"/></name></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">ushf<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">*<pos:position pos:line="58" pos:column="23"/></operator><operator pos:line="58" pos:column="23">)<pos:position pos:line="58" pos:column="24"/></operator> <operator pos:line="58" pos:column="25">&amp;<pos:position pos:line="58" pos:column="30"/></operator><operator pos:line="58" pos:column="26">(<pos:position pos:line="58" pos:column="27"/></operator><name><name pos:line="58" pos:column="27">s<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">pending_buf<pos:position pos:line="58" pos:column="41"/></name><index pos:line="58" pos:column="41">[<expr><name><name pos:line="58" pos:column="42">s<pos:position pos:line="58" pos:column="43"/></name><operator pos:line="58" pos:column="43">-&gt;<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="45">lit_bufsize<pos:position pos:line="58" pos:column="56"/></name></name></expr>]<pos:position pos:line="58" pos:column="57"/></index></name><operator pos:line="58" pos:column="57">)<pos:position pos:line="58" pos:column="58"/></operator></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">s<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">-&gt;<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="8">l_buf<pos:position pos:line="59" pos:column="13"/></name></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <operator pos:line="59" pos:column="16">(<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="17">uchf<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">*<pos:position pos:line="59" pos:column="23"/></operator><operator pos:line="59" pos:column="23">)<pos:position pos:line="59" pos:column="24"/></operator> <operator pos:line="59" pos:column="25">&amp;<pos:position pos:line="59" pos:column="30"/></operator><operator pos:line="59" pos:column="26">(<pos:position pos:line="59" pos:column="27"/></operator><name><name pos:line="59" pos:column="27">s<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">-&gt;<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="30">pending_buf<pos:position pos:line="59" pos:column="41"/></name><index pos:line="59" pos:column="41">[<expr><literal type="number" pos:line="59" pos:column="42">3<pos:position pos:line="59" pos:column="43"/></literal><operator pos:line="59" pos:column="43">*<pos:position pos:line="59" pos:column="44"/></operator><name><name pos:line="59" pos:column="44">s<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">lit_bufsize<pos:position pos:line="59" pos:column="58"/></name></name></expr>]<pos:position pos:line="59" pos:column="59"/></index></name><operator pos:line="59" pos:column="59">)<pos:position pos:line="59" pos:column="60"/></operator></expr>;<pos:position pos:line="59" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="60" pos:column="5">/* We overlay pending_buf and d_buf+l_buf. This works since the average
     * output size for (length,distance) codes is &lt;= 32 bits (worst case
     * is 15+15+13=33).
     */</comment>

    <expr_stmt><expr><name><name pos:line="65" pos:column="5">s<pos:position pos:line="65" pos:column="6"/></name><operator pos:line="65" pos:column="6">-&gt;<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="8">level<pos:position pos:line="65" pos:column="13"/></name></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <name pos:line="65" pos:column="16">level<pos:position pos:line="65" pos:column="21"/></name></expr>;<pos:position pos:line="65" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">s<pos:position pos:line="66" pos:column="6"/></name><operator pos:line="66" pos:column="6">-&gt;<pos:position pos:line="66" pos:column="11"/></operator><name pos:line="66" pos:column="8">strategy<pos:position pos:line="66" pos:column="16"/></name></name> <operator pos:line="66" pos:column="17">=<pos:position pos:line="66" pos:column="18"/></operator> <name pos:line="66" pos:column="19">strategy<pos:position pos:line="66" pos:column="27"/></name></expr>;<pos:position pos:line="66" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">s<pos:position pos:line="67" pos:column="6"/></name><operator pos:line="67" pos:column="6">-&gt;<pos:position pos:line="67" pos:column="11"/></operator><name pos:line="67" pos:column="8">method<pos:position pos:line="67" pos:column="14"/></name></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <operator pos:line="67" pos:column="17">(<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">Byte<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">)<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">method<pos:position pos:line="67" pos:column="29"/></name></expr>;<pos:position pos:line="67" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">s<pos:position pos:line="68" pos:column="6"/></name><operator pos:line="68" pos:column="6">-&gt;<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="8">blocks_in_packet<pos:position pos:line="68" pos:column="24"/></name></name> <operator pos:line="68" pos:column="25">=<pos:position pos:line="68" pos:column="26"/></operator> <literal type="number" pos:line="68" pos:column="27">0<pos:position pos:line="68" pos:column="28"/></literal></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>

    <return pos:line="70" pos:column="5">return <expr><call><name pos:line="70" pos:column="12">deflateReset<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">strm<pos:position pos:line="70" pos:column="29"/></name></expr></argument>)<pos:position pos:line="70" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="31"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_129_rsync-2.6.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_bak_dir<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">fullpath<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_STAT<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">rel<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">fullpath<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">+<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="32">backup_dir_len<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">end<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">rel<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">+<pos:position pos:line="5" pos:column="26"/></operator> <call><name pos:line="5" pos:column="27">strlen<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">rel<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">p<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">end<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><call><name pos:line="8" pos:column="16">strncmp<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">fullpath<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"./"<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="40">2<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call> <operator pos:line="8" pos:column="43">==<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">0<pos:position pos:line="8" pos:column="47"/></literal></expr>)<pos:position pos:line="8" pos:column="48"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">fullpath<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">+=<pos:position pos:line="9" pos:column="28"/></operator> <literal type="number" pos:line="9" pos:column="29">2<pos:position pos:line="9" pos:column="30"/></literal></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt></block></while>

	<comment type="block" pos:line="11" pos:column="9">/* Try to find an existing dir, starting from the deepest dir. */</comment>
	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr>)<pos:position pos:line="12" pos:column="18"/></condition> <block pos:line="12" pos:column="19">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">--<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">p<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">==<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">fullpath<pos:position pos:line="13" pos:column="36"/></name></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <block pos:line="13" pos:column="38">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">+=<pos:position pos:line="14" pos:column="29"/></operator> <call><name pos:line="14" pos:column="30">strlen<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">p<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
			<goto pos:line="15" pos:column="25">goto <name pos:line="15" pos:column="30">failure<pos:position pos:line="15" pos:column="37"/></name>;<pos:position pos:line="15" pos:column="38"/></goto>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">p<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <literal type="char" pos:line="17" pos:column="27">'/'<pos:position pos:line="17" pos:column="30"/></literal></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <block pos:line="17" pos:column="32">{
			<expr_stmt><expr><operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">p<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="char" pos:line="18" pos:column="30">'\0'<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">do_mkdir<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">fullpath<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="48">0777<pos:position pos:line="19" pos:column="52"/></literal> <operator pos:line="19" pos:column="53">&amp;<pos:position pos:line="19" pos:column="58"/></operator> <operator pos:line="19" pos:column="55">~<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="56">orig_umask<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call> <operator pos:line="19" pos:column="68">==<pos:position pos:line="19" pos:column="70"/></operator> <literal type="number" pos:line="19" pos:column="71">0<pos:position pos:line="19" pos:column="72"/></literal></expr>)<pos:position pos:line="19" pos:column="73"/></condition><then pos:line="19" pos:column="73">
				<block type="pseudo"><break pos:line="20" pos:column="33">break;<pos:position pos:line="20" pos:column="39"/></break></block></then></if>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">errno<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">!=<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">ENOENT<pos:position pos:line="21" pos:column="44"/></name></expr>)<pos:position pos:line="21" pos:column="45"/></condition><then pos:line="21" pos:column="45"> <block pos:line="21" pos:column="46">{
				<expr_stmt><expr><call><name pos:line="22" pos:column="33">rsyserr<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">FERROR<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">errno<pos:position pos:line="22" pos:column="54"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="23" pos:column="41">"make_bak_dir mkdir %s failed"<pos:position pos:line="23" pos:column="71"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="24" pos:column="41">full_fname<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">fullpath<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
				<goto pos:line="25" pos:column="33">goto <name pos:line="25" pos:column="38">failure<pos:position pos:line="25" pos:column="45"/></name>;<pos:position pos:line="25" pos:column="46"/></goto>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></while>

	<comment type="block" pos:line="30" pos:column="9">/* Make all the dirs that we didn't find on the way here. */</comment>
	<while pos:line="31" pos:column="9">while <condition pos:line="31" pos:column="15">(<expr><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr>)<pos:position pos:line="31" pos:column="18"/></condition> <block pos:line="31" pos:column="19">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">p<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&gt;=<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="26">rel<pos:position pos:line="32" pos:column="29"/></name></expr>)<pos:position pos:line="32" pos:column="30"/></condition><then pos:line="32" pos:column="30"> <block pos:line="32" pos:column="31">{
			<comment type="block" pos:line="33" pos:column="25">/* Try to transfer the directory settings of the
			 * actual dir that the files are coming from. */</comment>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><call><name pos:line="35" pos:column="29">do_stat<pos:position pos:line="35" pos:column="36"/></name><argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">rel<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="42">&amp;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="43">st<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call> <operator pos:line="35" pos:column="47">&lt;<pos:position pos:line="35" pos:column="51"/></operator> <literal type="number" pos:line="35" pos:column="49">0<pos:position pos:line="35" pos:column="50"/></literal></expr>)<pos:position pos:line="35" pos:column="51"/></condition><then pos:line="35" pos:column="51"> <block pos:line="35" pos:column="52">{
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">rsyserr<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">FERROR<pos:position pos:line="36" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">errno<pos:position pos:line="36" pos:column="54"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="37" pos:column="41">"make_bak_dir stat %s failed"<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="38" pos:column="41">full_fname<pos:position pos:line="38" pos:column="51"/></name><argument_list pos:line="38" pos:column="51">(<argument><expr><name pos:line="38" pos:column="52">rel<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="39" pos:column="26"/></block></then> <else pos:line="39" pos:column="27">else <block pos:line="39" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="40" pos:column="33">do_lchown<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">fullpath<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="53">st<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">.<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="56">st_uid<pos:position pos:line="40" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="64">st<pos:position pos:line="40" pos:column="66"/></name><operator pos:line="40" pos:column="66">.<pos:position pos:line="40" pos:column="67"/></operator><name pos:line="40" pos:column="67">st_gid<pos:position pos:line="40" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="41" pos:column="33">do_chmod<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><name pos:line="41" pos:column="42">fullpath<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="52">st<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">.<pos:position pos:line="41" pos:column="55"/></operator><name pos:line="41" pos:column="55">st_mode<pos:position pos:line="41" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="42" pos:column="26"/></block></else></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="44" pos:column="17">*<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">p<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <literal type="char" pos:line="44" pos:column="22">'/'<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">p<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">+=<pos:position pos:line="45" pos:column="21"/></operator> <call><name pos:line="45" pos:column="22">strlen<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">p<pos:position pos:line="45" pos:column="30"/></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">p<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">==<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">end<pos:position pos:line="46" pos:column="29"/></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30">
			<block type="pseudo"><break pos:line="47" pos:column="25">break;<pos:position pos:line="47" pos:column="31"/></break></block></then></if>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><call><name pos:line="48" pos:column="21">do_mkdir<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">fullpath<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="40">0777<pos:position pos:line="48" pos:column="44"/></literal> <operator pos:line="48" pos:column="45">&amp;<pos:position pos:line="48" pos:column="50"/></operator> <operator pos:line="48" pos:column="47">~<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">orig_umask<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call> <operator pos:line="48" pos:column="60">&lt;<pos:position pos:line="48" pos:column="64"/></operator> <literal type="number" pos:line="48" pos:column="62">0<pos:position pos:line="48" pos:column="63"/></literal></expr>)<pos:position pos:line="48" pos:column="64"/></condition><then pos:line="48" pos:column="64"> <block pos:line="48" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">rsyserr<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">FERROR<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">errno<pos:position pos:line="49" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="48">"make_bak_dir mkdir %s failed"<pos:position pos:line="49" pos:column="78"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="50" pos:column="33">full_fname<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">fullpath<pos:position pos:line="50" pos:column="52"/></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>
			<goto pos:line="51" pos:column="25">goto <name pos:line="51" pos:column="30">failure<pos:position pos:line="51" pos:column="37"/></name>;<pos:position pos:line="51" pos:column="38"/></goto>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>
	}<pos:position pos:line="53" pos:column="10"/></block></while>
	<return pos:line="54" pos:column="9">return <expr><literal type="number" pos:line="54" pos:column="16">0<pos:position pos:line="54" pos:column="17"/></literal></expr>;<pos:position pos:line="54" pos:column="18"/></return>

<label><name pos:line="56" pos:column="1">failure<pos:position pos:line="56" pos:column="8"/></name>:<pos:position pos:line="56" pos:column="9"/></label>
	<while pos:line="57" pos:column="9">while <condition pos:line="57" pos:column="15">(<expr><name pos:line="57" pos:column="16">p<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">!=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">end<pos:position pos:line="57" pos:column="24"/></name></expr>)<pos:position pos:line="57" pos:column="25"/></condition> <block pos:line="57" pos:column="26">{
		<expr_stmt><expr><operator pos:line="58" pos:column="17">*<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">p<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <literal type="char" pos:line="58" pos:column="22">'/'<pos:position pos:line="58" pos:column="25"/></literal></expr>;<pos:position pos:line="58" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="59" pos:column="17">p<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">+=<pos:position pos:line="59" pos:column="21"/></operator> <call><name pos:line="59" pos:column="22">strlen<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">p<pos:position pos:line="59" pos:column="30"/></name></expr></argument>)<pos:position pos:line="59" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></while>
	<return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">-<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1<pos:position pos:line="61" pos:column="18"/></literal></expr>;<pos:position pos:line="61" pos:column="19"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

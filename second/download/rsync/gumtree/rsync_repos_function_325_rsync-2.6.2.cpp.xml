<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_325_rsync-2.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">usage<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name><name pos:line="1" pos:column="12">enum<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">logcode<pos:position pos:line="1" pos:column="24"/></name></name></type> <name pos:line="1" pos:column="25">F<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">print_rsync_version<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">F<pos:position pos:line="3" pos:column="24"/></name></expr></argument>)<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">rprintf<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">F<pos:position pos:line="5" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="5" pos:column="13">"\nrsync is a file transfer program capable of efficient remote update\nvia a fast differencing algorithm.\n\n"<pos:position pos:line="5" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="126"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">rprintf<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">F<pos:position pos:line="7" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="13">"Usage: rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST\n"<pos:position pos:line="7" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">rprintf<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">F<pos:position pos:line="8" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="8" pos:column="13">"  or   rsync [OPTION]... [USER@]HOST:SRC DEST\n"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">rprintf<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">F<pos:position pos:line="9" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="9" pos:column="13">"  or   rsync [OPTION]... SRC [SRC]... DEST\n"<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">rprintf<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">F<pos:position pos:line="10" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="13">"  or   rsync [OPTION]... [USER@]HOST::SRC [DEST]\n"<pos:position pos:line="10" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">rprintf<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><name pos:line="11" pos:column="11">F<pos:position pos:line="11" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="13">"  or   rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST\n"<pos:position pos:line="11" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">rprintf<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">F<pos:position pos:line="12" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="13">"  or   rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]\n"<pos:position pos:line="12" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">rprintf<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">F<pos:position pos:line="13" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="13" pos:column="13">"  or   rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST\n"<pos:position pos:line="13" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="88"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">rprintf<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">F<pos:position pos:line="14" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="14" pos:column="13">"SRC on single-colon remote HOST will be expanded by remote shell\n"<pos:position pos:line="14" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="83"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">rprintf<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">F<pos:position pos:line="15" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="13">"SRC on server remote HOST may contain shell wildcards or multiple\n"<pos:position pos:line="15" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="84"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">rprintf<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><name pos:line="16" pos:column="11">F<pos:position pos:line="16" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="13">"  sources separated by space as long as they have same top-level\n"<pos:position pos:line="16" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="83"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">rprintf<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">F<pos:position pos:line="17" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="17" pos:column="13">"\nOptions\n"<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">rprintf<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">F<pos:position pos:line="18" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="18" pos:column="13">" -v, --verbose               increase verbosity\n"<pos:position pos:line="18" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">rprintf<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">F<pos:position pos:line="19" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="19" pos:column="13">" -q, --quiet                 decrease verbosity\n"<pos:position pos:line="19" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">rprintf<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">F<pos:position pos:line="20" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="20" pos:column="13">" -c, --checksum              always checksum\n"<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">rprintf<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">F<pos:position pos:line="21" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="21" pos:column="13">" -a, --archive               archive mode, equivalent to -rlptgoD\n"<pos:position pos:line="21" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">rprintf<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">F<pos:position pos:line="22" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="22" pos:column="13">" -r, --recursive             recurse into directories\n"<pos:position pos:line="22" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">rprintf<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">F<pos:position pos:line="23" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="23" pos:column="13">" -R, --relative              use relative path names\n"<pos:position pos:line="23" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">rprintf<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">F<pos:position pos:line="24" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="24" pos:column="13">"     --no-relative           turn off --relative\n"<pos:position pos:line="24" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">rprintf<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">F<pos:position pos:line="25" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="25" pos:column="13">"     --no-implied-dirs       don't send implied dirs with -R\n"<pos:position pos:line="25" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">rprintf<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">F<pos:position pos:line="26" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="26" pos:column="13">" -b, --backup                make backups (see --suffix &amp; --backup-dir)\n"<pos:position pos:line="26" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="90"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">rprintf<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><name pos:line="27" pos:column="11">F<pos:position pos:line="27" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="27" pos:column="13">"     --backup-dir            make backups into this directory\n"<pos:position pos:line="27" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">rprintf<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">F<pos:position pos:line="28" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="28" pos:column="13">"     --suffix=SUFFIX         backup suffix (default %s w/o --backup-dir)\n"<pos:position pos:line="28" pos:column="89"/></literal></expr></argument>,<argument><expr><name pos:line="28" pos:column="90">BACKUP_SUFFIX<pos:position pos:line="28" pos:column="103"/></name></expr></argument>)<pos:position pos:line="28" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="105"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">rprintf<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">F<pos:position pos:line="29" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="13">" -u, --update                update only (don't overwrite newer files)\n"<pos:position pos:line="29" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="89"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">rprintf<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">F<pos:position pos:line="30" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="30" pos:column="13">" -l, --links                 copy symlinks as symlinks\n"<pos:position pos:line="30" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="73"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">rprintf<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><name pos:line="31" pos:column="11">F<pos:position pos:line="31" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="31" pos:column="13">" -L, --copy-links            copy the referent of all symlinks\n"<pos:position pos:line="31" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">rprintf<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">F<pos:position pos:line="32" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="32" pos:column="13">"     --copy-unsafe-links     copy the referent of \"unsafe\" symlinks\n"<pos:position pos:line="32" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="88"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">rprintf<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">F<pos:position pos:line="33" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="33" pos:column="13">"     --safe-links            ignore \"unsafe\" symlinks\n"<pos:position pos:line="33" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">rprintf<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><name pos:line="34" pos:column="11">F<pos:position pos:line="34" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="34" pos:column="13">" -H, --hard-links            preserve hard links\n"<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">rprintf<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">F<pos:position pos:line="35" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="35" pos:column="13">" -p, --perms                 preserve permissions\n"<pos:position pos:line="35" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">rprintf<pos:position pos:line="36" pos:column="10"/></name><argument_list pos:line="36" pos:column="10">(<argument><expr><name pos:line="36" pos:column="11">F<pos:position pos:line="36" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="13">" -o, --owner                 preserve owner (root only)\n"<pos:position pos:line="36" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">rprintf<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><name pos:line="37" pos:column="11">F<pos:position pos:line="37" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="37" pos:column="13">" -g, --group                 preserve group\n"<pos:position pos:line="37" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">rprintf<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><name pos:line="38" pos:column="11">F<pos:position pos:line="38" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="38" pos:column="13">" -D, --devices               preserve devices (root only)\n"<pos:position pos:line="38" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">rprintf<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><name pos:line="39" pos:column="11">F<pos:position pos:line="39" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="39" pos:column="13">" -t, --times                 preserve times\n"<pos:position pos:line="39" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">rprintf<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><name pos:line="40" pos:column="11">F<pos:position pos:line="40" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="40" pos:column="13">" -S, --sparse                handle sparse files efficiently\n"<pos:position pos:line="40" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">rprintf<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name pos:line="41" pos:column="11">F<pos:position pos:line="41" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="41" pos:column="13">" -n, --dry-run               show what would have been transferred\n"<pos:position pos:line="41" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">rprintf<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">F<pos:position pos:line="42" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="42" pos:column="13">" -W, --whole-file            copy whole files, no incremental checks\n"<pos:position pos:line="42" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="87"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">rprintf<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">F<pos:position pos:line="43" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="13">"     --no-whole-file         turn off --whole-file\n"<pos:position pos:line="43" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="69"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">rprintf<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">F<pos:position pos:line="44" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="44" pos:column="13">" -x, --one-file-system       don't cross filesystem boundaries\n"<pos:position pos:line="44" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">rprintf<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><name pos:line="45" pos:column="11">F<pos:position pos:line="45" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="45" pos:column="13">" -B, --block-size=SIZE       checksum blocking size (default %d)\n"<pos:position pos:line="45" pos:column="81"/></literal></expr></argument>,<argument><expr><name pos:line="45" pos:column="82">BLOCK_SIZE<pos:position pos:line="45" pos:column="92"/></name></expr></argument>)<pos:position pos:line="45" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="94"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">rprintf<pos:position pos:line="46" pos:column="10"/></name><argument_list pos:line="46" pos:column="10">(<argument><expr><name pos:line="46" pos:column="11">F<pos:position pos:line="46" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="46" pos:column="13">" -e, --rsh=COMMAND           specify the remote shell\n"<pos:position pos:line="46" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="72"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">rprintf<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><name pos:line="47" pos:column="11">F<pos:position pos:line="47" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="47" pos:column="13">"     --rsync-path=PATH       specify path to rsync on the remote machine\n"<pos:position pos:line="47" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="91"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">rprintf<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><name pos:line="48" pos:column="11">F<pos:position pos:line="48" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="48" pos:column="13">"     --existing              only update files that already exist\n"<pos:position pos:line="48" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="84"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">rprintf<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name pos:line="49" pos:column="11">F<pos:position pos:line="49" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="49" pos:column="13">"     --ignore-existing       ignore files that already exist on receiving side\n"<pos:position pos:line="49" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="97"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">rprintf<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><name pos:line="50" pos:column="11">F<pos:position pos:line="50" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="50" pos:column="13">"     --delete                delete files that don't exist on the sending side\n"<pos:position pos:line="50" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="97"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">rprintf<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">F<pos:position pos:line="51" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="51" pos:column="13">"     --delete-excluded       also delete excluded files on the receiving side\n"<pos:position pos:line="51" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="96"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="52" pos:column="3">rprintf<pos:position pos:line="52" pos:column="10"/></name><argument_list pos:line="52" pos:column="10">(<argument><expr><name pos:line="52" pos:column="11">F<pos:position pos:line="52" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="52" pos:column="13">"     --delete-after          receiver deletes after transferring, not before\n"<pos:position pos:line="52" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="95"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">rprintf<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">F<pos:position pos:line="53" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="53" pos:column="13">"     --ignore-errors         delete even if there are I/O errors\n"<pos:position pos:line="53" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="83"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="54" pos:column="3">rprintf<pos:position pos:line="54" pos:column="10"/></name><argument_list pos:line="54" pos:column="10">(<argument><expr><name pos:line="54" pos:column="11">F<pos:position pos:line="54" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="54" pos:column="13">"     --max-delete=NUM        don't delete more than NUM files\n"<pos:position pos:line="54" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">rprintf<pos:position pos:line="55" pos:column="10"/></name><argument_list pos:line="55" pos:column="10">(<argument><expr><name pos:line="55" pos:column="11">F<pos:position pos:line="55" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="55" pos:column="13">"     --partial               keep partially transferred files\n"<pos:position pos:line="55" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">rprintf<pos:position pos:line="56" pos:column="10"/></name><argument_list pos:line="56" pos:column="10">(<argument><expr><name pos:line="56" pos:column="11">F<pos:position pos:line="56" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="56" pos:column="13">"     --force                 force deletion of directories even if not empty\n"<pos:position pos:line="56" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="95"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">rprintf<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><name pos:line="57" pos:column="11">F<pos:position pos:line="57" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="57" pos:column="13">"     --numeric-ids           don't map uid/gid values by user/group name\n"<pos:position pos:line="57" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="91"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">rprintf<pos:position pos:line="58" pos:column="10"/></name><argument_list pos:line="58" pos:column="10">(<argument><expr><name pos:line="58" pos:column="11">F<pos:position pos:line="58" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="13">"     --timeout=TIME          set I/O timeout in seconds\n"<pos:position pos:line="58" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="59" pos:column="3">rprintf<pos:position pos:line="59" pos:column="10"/></name><argument_list pos:line="59" pos:column="10">(<argument><expr><name pos:line="59" pos:column="11">F<pos:position pos:line="59" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="59" pos:column="13">" -I, --ignore-times          turn off mod time &amp; file size quick check\n"<pos:position pos:line="59" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="89"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">rprintf<pos:position pos:line="60" pos:column="10"/></name><argument_list pos:line="60" pos:column="10">(<argument><expr><name pos:line="60" pos:column="11">F<pos:position pos:line="60" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="60" pos:column="13">"     --size-only             ignore mod time for quick check (use size)\n"<pos:position pos:line="60" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="90"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="61" pos:column="3">rprintf<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><name pos:line="61" pos:column="11">F<pos:position pos:line="61" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="61" pos:column="13">"     --modify-window=NUM     compare mod times with reduced accuracy\n"<pos:position pos:line="61" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="87"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">rprintf<pos:position pos:line="62" pos:column="10"/></name><argument_list pos:line="62" pos:column="10">(<argument><expr><name pos:line="62" pos:column="11">F<pos:position pos:line="62" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="62" pos:column="13">" -T  --temp-dir=DIR          create temporary files in directory DIR\n"<pos:position pos:line="62" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="87"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">rprintf<pos:position pos:line="63" pos:column="10"/></name><argument_list pos:line="63" pos:column="10">(<argument><expr><name pos:line="63" pos:column="11">F<pos:position pos:line="63" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="63" pos:column="13">"     --compare-dest=DIR      also compare destination files relative to DIR\n"<pos:position pos:line="63" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="94"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">rprintf<pos:position pos:line="64" pos:column="10"/></name><argument_list pos:line="64" pos:column="10">(<argument><expr><name pos:line="64" pos:column="11">F<pos:position pos:line="64" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="64" pos:column="13">"     --link-dest=DIR         create hardlinks to DIR for unchanged files\n"<pos:position pos:line="64" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="91"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">rprintf<pos:position pos:line="65" pos:column="10"/></name><argument_list pos:line="65" pos:column="10">(<argument><expr><name pos:line="65" pos:column="11">F<pos:position pos:line="65" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="65" pos:column="13">" -P                          equivalent to --partial --progress\n"<pos:position pos:line="65" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="82"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="66" pos:column="3">rprintf<pos:position pos:line="66" pos:column="10"/></name><argument_list pos:line="66" pos:column="10">(<argument><expr><name pos:line="66" pos:column="11">F<pos:position pos:line="66" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="66" pos:column="13">" -z, --compress              compress file data\n"<pos:position pos:line="66" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">rprintf<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">F<pos:position pos:line="67" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="67" pos:column="13">" -C, --cvs-exclude           auto ignore files in the same way CVS does\n"<pos:position pos:line="67" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="90"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">rprintf<pos:position pos:line="68" pos:column="10"/></name><argument_list pos:line="68" pos:column="10">(<argument><expr><name pos:line="68" pos:column="11">F<pos:position pos:line="68" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="68" pos:column="13">"     --exclude=PATTERN       exclude files matching PATTERN\n"<pos:position pos:line="68" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">rprintf<pos:position pos:line="69" pos:column="10"/></name><argument_list pos:line="69" pos:column="10">(<argument><expr><name pos:line="69" pos:column="11">F<pos:position pos:line="69" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="69" pos:column="13">"     --exclude-from=FILE     exclude patterns listed in FILE\n"<pos:position pos:line="69" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">rprintf<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><name pos:line="70" pos:column="11">F<pos:position pos:line="70" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="70" pos:column="13">"     --include=PATTERN       don't exclude files matching PATTERN\n"<pos:position pos:line="70" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="84"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">rprintf<pos:position pos:line="71" pos:column="10"/></name><argument_list pos:line="71" pos:column="10">(<argument><expr><name pos:line="71" pos:column="11">F<pos:position pos:line="71" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="71" pos:column="13">"     --include-from=FILE     don't exclude patterns listed in FILE\n"<pos:position pos:line="71" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">rprintf<pos:position pos:line="72" pos:column="10"/></name><argument_list pos:line="72" pos:column="10">(<argument><expr><name pos:line="72" pos:column="11">F<pos:position pos:line="72" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="72" pos:column="13">"     --files-from=FILE       read FILE for list of source-file names\n"<pos:position pos:line="72" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="87"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="73" pos:column="3">rprintf<pos:position pos:line="73" pos:column="10"/></name><argument_list pos:line="73" pos:column="10">(<argument><expr><name pos:line="73" pos:column="11">F<pos:position pos:line="73" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="73" pos:column="13">" -0  --from0                 all *-from file lists are delimited by nulls\n"<pos:position pos:line="73" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="92"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="74" pos:column="3">rprintf<pos:position pos:line="74" pos:column="10"/></name><argument_list pos:line="74" pos:column="10">(<argument><expr><name pos:line="74" pos:column="11">F<pos:position pos:line="74" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="74" pos:column="13">"     --version               print version number\n"<pos:position pos:line="74" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="75" pos:column="3">rprintf<pos:position pos:line="75" pos:column="10"/></name><argument_list pos:line="75" pos:column="10">(<argument><expr><name pos:line="75" pos:column="11">F<pos:position pos:line="75" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="75" pos:column="13">"     --daemon                run as an rsync daemon\n"<pos:position pos:line="75" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="76" pos:column="3">rprintf<pos:position pos:line="76" pos:column="10"/></name><argument_list pos:line="76" pos:column="10">(<argument><expr><name pos:line="76" pos:column="11">F<pos:position pos:line="76" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="76" pos:column="13">"     --no-detach             do not detach from the parent\n"<pos:position pos:line="76" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="77" pos:column="3">rprintf<pos:position pos:line="77" pos:column="10"/></name><argument_list pos:line="77" pos:column="10">(<argument><expr><name pos:line="77" pos:column="11">F<pos:position pos:line="77" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="77" pos:column="13">"     --address=ADDRESS       bind to the specified address\n"<pos:position pos:line="77" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="78" pos:column="3">rprintf<pos:position pos:line="78" pos:column="10"/></name><argument_list pos:line="78" pos:column="10">(<argument><expr><name pos:line="78" pos:column="11">F<pos:position pos:line="78" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="78" pos:column="13">"     --config=FILE           specify alternate rsyncd.conf file\n"<pos:position pos:line="78" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="82"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="79" pos:column="3">rprintf<pos:position pos:line="79" pos:column="10"/></name><argument_list pos:line="79" pos:column="10">(<argument><expr><name pos:line="79" pos:column="11">F<pos:position pos:line="79" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="79" pos:column="13">"     --port=PORT             specify alternate rsyncd port number\n"<pos:position pos:line="79" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="84"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">rprintf<pos:position pos:line="80" pos:column="10"/></name><argument_list pos:line="80" pos:column="10">(<argument><expr><name pos:line="80" pos:column="11">F<pos:position pos:line="80" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="80" pos:column="13">"     --blocking-io           use blocking I/O for the remote shell\n"<pos:position pos:line="80" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="85"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">rprintf<pos:position pos:line="81" pos:column="10"/></name><argument_list pos:line="81" pos:column="10">(<argument><expr><name pos:line="81" pos:column="11">F<pos:position pos:line="81" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="81" pos:column="13">"     --no-blocking-io        turn off --blocking-io\n"<pos:position pos:line="81" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">rprintf<pos:position pos:line="82" pos:column="10"/></name><argument_list pos:line="82" pos:column="10">(<argument><expr><name pos:line="82" pos:column="11">F<pos:position pos:line="82" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="82" pos:column="13">"     --stats                 give some file transfer stats\n"<pos:position pos:line="82" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="83" pos:column="3">rprintf<pos:position pos:line="83" pos:column="10"/></name><argument_list pos:line="83" pos:column="10">(<argument><expr><name pos:line="83" pos:column="11">F<pos:position pos:line="83" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="83" pos:column="13">"     --progress              show progress during transfer\n"<pos:position pos:line="83" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="84" pos:column="3">rprintf<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><name pos:line="84" pos:column="11">F<pos:position pos:line="84" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="84" pos:column="13">"     --log-format=FORMAT     log file transfers using specified format\n"<pos:position pos:line="84" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="89"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="85" pos:column="3">rprintf<pos:position pos:line="85" pos:column="10"/></name><argument_list pos:line="85" pos:column="10">(<argument><expr><name pos:line="85" pos:column="11">F<pos:position pos:line="85" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="85" pos:column="13">"     --password-file=FILE    get password from FILE\n"<pos:position pos:line="85" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="70"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="86" pos:column="3">rprintf<pos:position pos:line="86" pos:column="10"/></name><argument_list pos:line="86" pos:column="10">(<argument><expr><name pos:line="86" pos:column="11">F<pos:position pos:line="86" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="86" pos:column="13">"     --bwlimit=KBPS          limit I/O bandwidth, KBytes per second\n"<pos:position pos:line="86" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="86"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="87" pos:column="3">rprintf<pos:position pos:line="87" pos:column="10"/></name><argument_list pos:line="87" pos:column="10">(<argument><expr><name pos:line="87" pos:column="11">F<pos:position pos:line="87" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="87" pos:column="13">"     --write-batch=PREFIX    write batch fileset starting with PREFIX\n"<pos:position pos:line="87" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="88"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">rprintf<pos:position pos:line="88" pos:column="10"/></name><argument_list pos:line="88" pos:column="10">(<argument><expr><name pos:line="88" pos:column="11">F<pos:position pos:line="88" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="88" pos:column="13">"     --read-batch=PREFIX     read batch fileset starting with PREFIX\n"<pos:position pos:line="88" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="87"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="89" pos:column="3">rprintf<pos:position pos:line="89" pos:column="10"/></name><argument_list pos:line="89" pos:column="10">(<argument><expr><name pos:line="89" pos:column="11">F<pos:position pos:line="89" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="89" pos:column="13">" -h, --help                  show this help screen\n"<pos:position pos:line="89" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="69"/></expr_stmt>
<cpp:ifdef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifdef<pos:position pos:line="90" pos:column="7"/></cpp:directive> <name pos:line="90" pos:column="8">INET6<pos:position pos:line="90" pos:column="13"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="91" pos:column="3">rprintf<pos:position pos:line="91" pos:column="10"/></name><argument_list pos:line="91" pos:column="10">(<argument><expr><name pos:line="91" pos:column="11">F<pos:position pos:line="91" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="91" pos:column="13">" -4                          prefer IPv4\n"<pos:position pos:line="91" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="59"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="92" pos:column="3">rprintf<pos:position pos:line="92" pos:column="10"/></name><argument_list pos:line="92" pos:column="10">(<argument><expr><name pos:line="92" pos:column="11">F<pos:position pos:line="92" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="92" pos:column="13">" -6                          prefer IPv6\n"<pos:position pos:line="92" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="95" pos:column="3">rprintf<pos:position pos:line="95" pos:column="10"/></name><argument_list pos:line="95" pos:column="10">(<argument><expr><name pos:line="95" pos:column="11">F<pos:position pos:line="95" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="95" pos:column="13">"\n"<pos:position pos:line="95" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">rprintf<pos:position pos:line="97" pos:column="10"/></name><argument_list pos:line="97" pos:column="10">(<argument><expr><name pos:line="97" pos:column="11">F<pos:position pos:line="97" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="97" pos:column="13">"\nPlease see the rsync(1) and rsyncd.conf(5) man pages for full documentation\n"<pos:position pos:line="97" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="96"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">rprintf<pos:position pos:line="98" pos:column="10"/></name><argument_list pos:line="98" pos:column="10">(<argument><expr><name pos:line="98" pos:column="11">F<pos:position pos:line="98" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="98" pos:column="13">"See http://rsync.samba.org/ for updates, bug reports, and answers\n"<pos:position pos:line="98" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="84"/></expr_stmt>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_196_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">copy_valid_path<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">fname<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">f<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">val<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">BOOL<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">ret<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">True<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">stat_x<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">sx<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">b<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">rel<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">backup_dir_buf<pos:position pos:line="7" pos:column="39"/></name> <operator pos:line="7" pos:column="40">+<pos:position pos:line="7" pos:column="41"/></operator> <name pos:line="7" pos:column="42">backup_dir_len<pos:position pos:line="7" pos:column="56"/></name></expr></init></decl>, <modifier pos:line="7" pos:column="58">*<pos:position pos:line="7" pos:column="59"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="59">name<pos:position pos:line="7" pos:column="63"/></name> <init pos:line="7" pos:column="64">= <expr><name pos:line="7" pos:column="66">rel<pos:position pos:line="7" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="70"/></decl_stmt>

	<for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">f<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">fname<pos:position pos:line="9" pos:column="23"/></name></expr><operator pos:line="9" pos:column="23">,<pos:position pos:line="9" pos:column="24"/></operator> <expr><name pos:line="9" pos:column="25">b<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">rel<pos:position pos:line="9" pos:column="32"/></name></expr>;<pos:position pos:line="9" pos:column="33"/></init> <condition><expr><operator pos:line="9" pos:column="34">*<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">f<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">&amp;&amp;<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="40">*<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">f<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">==<pos:position pos:line="9" pos:column="45"/></operator> <operator pos:line="9" pos:column="46">*<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">b<pos:position pos:line="9" pos:column="48"/></name></expr>;<pos:position pos:line="9" pos:column="49"/></condition> <incr><expr><name pos:line="9" pos:column="50">f<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">++<pos:position pos:line="9" pos:column="53"/></operator></expr><operator pos:line="9" pos:column="53">,<pos:position pos:line="9" pos:column="54"/></operator> <expr><name pos:line="9" pos:column="55">b<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">++<pos:position pos:line="9" pos:column="58"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="59"/></control> <block pos:line="9" pos:column="60">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">b<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <literal type="char" pos:line="10" pos:column="27">'/'<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">name<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">b<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">+<pos:position pos:line="11" pos:column="35"/></operator> <literal type="number" pos:line="11" pos:column="36">1<pos:position pos:line="11" pos:column="37"/></literal></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></for>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">stringjoin<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">rel<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">backup_dir_remainder<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">fname<pos:position pos:line="14" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">backup_suffix<pos:position pos:line="14" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="73">NULL<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call> <operator pos:line="14" pos:column="79">&gt;=<pos:position pos:line="14" pos:column="84"/></operator> <name pos:line="14" pos:column="82">backup_dir_remainder<pos:position pos:line="14" pos:column="102"/></name></expr>)<pos:position pos:line="14" pos:column="103"/></condition><then pos:line="14" pos:column="103"> <block pos:line="14" pos:column="104">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">rprintf<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">FERROR<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"backup filename too long\n"<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">name<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <literal type="char" pos:line="16" pos:column="25">'\0'<pos:position pos:line="16" pos:column="29"/></literal></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">False<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">( <init pos:line="20" pos:column="15">;<pos:position pos:line="20" pos:column="16"/></init> <condition pos:line="20" pos:column="17">;<pos:position pos:line="20" pos:column="18"/></condition> <incr><expr><name pos:line="20" pos:column="19">name<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">b<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">+<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="30">1<pos:position pos:line="20" pos:column="31"/></literal></expr></incr>)<pos:position pos:line="20" pos:column="32"/></control> <block pos:line="20" pos:column="33">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">(<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">b<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <call><name pos:line="21" pos:column="26">strchr<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">name<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="39">'/'<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call><operator pos:line="21" pos:column="43">)<pos:position pos:line="21" pos:column="44"/></operator> <operator pos:line="21" pos:column="45">==<pos:position pos:line="21" pos:column="47"/></operator> <name pos:line="21" pos:column="48">NULL<pos:position pos:line="21" pos:column="52"/></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
			<block type="pseudo"><return pos:line="22" pos:column="25">return <expr><name pos:line="22" pos:column="32">True<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">b<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="char" pos:line="23" pos:column="22">'\0'<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">val<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">validate_backup_dir<pos:position pos:line="25" pos:column="42"/></name><argument_list pos:line="25" pos:column="42">()<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">val<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">==<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30">
			<block type="pseudo"><break pos:line="27" pos:column="25">break;<pos:position pos:line="27" pos:column="31"/></break></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">val<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">&lt;<pos:position pos:line="28" pos:column="29"/></operator> <literal type="number" pos:line="28" pos:column="27">0<pos:position pos:line="28" pos:column="28"/></literal></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <block pos:line="28" pos:column="30">{
			<expr_stmt><expr><operator pos:line="29" pos:column="25">*<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">name<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <literal type="char" pos:line="29" pos:column="33">'\0'<pos:position pos:line="29" pos:column="37"/></literal></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
			<return pos:line="30" pos:column="25">return <expr><name pos:line="30" pos:column="32">False<pos:position pos:line="30" pos:column="37"/></name></expr>;<pos:position pos:line="30" pos:column="38"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<expr_stmt><expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">b<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <literal type="char" pos:line="33" pos:column="22">'/'<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">init_stat_x<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><operator pos:line="36" pos:column="21">&amp;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="22">sx<pos:position pos:line="36" pos:column="24"/></name></expr></argument>)<pos:position pos:line="36" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>

	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">( <init pos:line="38" pos:column="15">;<pos:position pos:line="38" pos:column="16"/></init> <condition><expr><name pos:line="38" pos:column="17">b<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></condition> <incr><expr><name pos:line="38" pos:column="20">name<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">b<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">+<pos:position pos:line="38" pos:column="30"/></operator> <literal type="number" pos:line="38" pos:column="31">1<pos:position pos:line="38" pos:column="32"/></literal></expr><operator pos:line="38" pos:column="32">,<pos:position pos:line="38" pos:column="33"/></operator> <expr><name pos:line="38" pos:column="34">b<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">=<pos:position pos:line="38" pos:column="37"/></operator> <call><name pos:line="38" pos:column="38">strchr<pos:position pos:line="38" pos:column="44"/></name><argument_list pos:line="38" pos:column="44">(<argument><expr><name pos:line="38" pos:column="45">name<pos:position pos:line="38" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="51">'/'<pos:position pos:line="38" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr></incr>)<pos:position pos:line="38" pos:column="56"/></control> <block pos:line="38" pos:column="57">{
		<expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">b<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <literal type="char" pos:line="39" pos:column="22">'\0'<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>

		<while pos:line="41" pos:column="17">while <condition pos:line="41" pos:column="23">(<expr><call><name pos:line="41" pos:column="24">do_mkdir<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">backup_dir_buf<pos:position pos:line="41" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">ACCESSPERMS<pos:position pos:line="41" pos:column="60"/></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call> <operator pos:line="41" pos:column="62">&lt;<pos:position pos:line="41" pos:column="66"/></operator> <literal type="number" pos:line="41" pos:column="64">0<pos:position pos:line="41" pos:column="65"/></literal></expr>)<pos:position pos:line="41" pos:column="66"/></condition> <block pos:line="41" pos:column="67">{
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><name pos:line="42" pos:column="29">errno<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">==<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">EEXIST<pos:position pos:line="42" pos:column="44"/></name></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <block pos:line="42" pos:column="46">{
				<expr_stmt><expr><name pos:line="43" pos:column="33">val<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">=<pos:position pos:line="43" pos:column="38"/></operator> <call><name pos:line="43" pos:column="39">validate_backup_dir<pos:position pos:line="43" pos:column="58"/></name><argument_list pos:line="43" pos:column="58">()<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>
				<if pos:line="44" pos:column="33">if <condition pos:line="44" pos:column="36">(<expr><name pos:line="44" pos:column="37">val<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">&gt;<pos:position pos:line="44" pos:column="45"/></operator> <literal type="number" pos:line="44" pos:column="43">0<pos:position pos:line="44" pos:column="44"/></literal></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45">
					<block type="pseudo"><break pos:line="45" pos:column="41">break;<pos:position pos:line="45" pos:column="47"/></break></block></then></if>
				<if pos:line="46" pos:column="33">if <condition pos:line="46" pos:column="36">(<expr><name pos:line="46" pos:column="37">val<pos:position pos:line="46" pos:column="40"/></name> <operator pos:line="46" pos:column="41">==<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="44">0<pos:position pos:line="46" pos:column="45"/></literal></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46">
					<block type="pseudo"><continue pos:line="47" pos:column="41">continue;<pos:position pos:line="47" pos:column="50"/></continue></block></then></if>
			}<pos:position pos:line="48" pos:column="26"/></block></then> <else pos:line="48" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="33">rsyserr<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">FERROR<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">errno<pos:position pos:line="49" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="56">"backup mkdir %s failed"<pos:position pos:line="49" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="82">backup_dir_buf<pos:position pos:line="49" pos:column="96"/></name></expr></argument>)<pos:position pos:line="49" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="98"/></expr_stmt></block></else></if>
			<expr_stmt><expr><operator pos:line="50" pos:column="25">*<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="26">name<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">=<pos:position pos:line="50" pos:column="32"/></operator> <literal type="char" pos:line="50" pos:column="33">'\0'<pos:position pos:line="50" pos:column="37"/></literal></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="51" pos:column="25">ret<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">False<pos:position pos:line="51" pos:column="36"/></name></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
			<goto pos:line="52" pos:column="25">goto <name pos:line="52" pos:column="30">cleanup<pos:position pos:line="52" pos:column="37"/></name>;<pos:position pos:line="52" pos:column="38"/></goto>
		}<pos:position pos:line="53" pos:column="18"/></block></while>

		<comment type="block" pos:line="55" pos:column="17">/* Try to transfer the directory settings of the actual dir
		 * that the files are coming from. */</comment>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><call><name pos:line="57" pos:column="21">x_stat<pos:position pos:line="57" pos:column="27"/></name><argument_list pos:line="57" pos:column="27">(<argument><expr><name pos:line="57" pos:column="28">rel<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="33">&amp;<pos:position pos:line="57" pos:column="38"/></operator><name><name pos:line="57" pos:column="34">sx<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">.<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="37">st<pos:position pos:line="57" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">NULL<pos:position pos:line="57" pos:column="45"/></name></expr></argument>)<pos:position pos:line="57" pos:column="46"/></argument_list></call> <operator pos:line="57" pos:column="47">&lt;<pos:position pos:line="57" pos:column="51"/></operator> <literal type="number" pos:line="57" pos:column="49">0<pos:position pos:line="57" pos:column="50"/></literal></expr>)<pos:position pos:line="57" pos:column="51"/></condition><then pos:line="57" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">rsyserr<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">FERROR<pos:position pos:line="58" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="41">errno<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="48">"backup stat %s failed"<pos:position pos:line="58" pos:column="71"/></literal></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="73">full_fname<pos:position pos:line="58" pos:column="83"/></name><argument_list pos:line="58" pos:column="83">(<argument><expr><name pos:line="58" pos:column="84">rel<pos:position pos:line="58" pos:column="87"/></name></expr></argument>)<pos:position pos:line="58" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="90"/></expr_stmt></block></then>
		<else pos:line="59" pos:column="17">else <block pos:line="59" pos:column="22">{
			<decl_stmt><decl><type><name><name pos:line="60" pos:column="25">struct<pos:position pos:line="60" pos:column="31"/></name> <name pos:line="60" pos:column="32">file_struct<pos:position pos:line="60" pos:column="43"/></name></name> <modifier pos:line="60" pos:column="44">*<pos:position pos:line="60" pos:column="45"/></modifier></type><name pos:line="60" pos:column="45">file<pos:position pos:line="60" pos:column="49"/></name></decl>;<pos:position pos:line="60" pos:column="50"/></decl_stmt>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><operator pos:line="61" pos:column="29">!<pos:position pos:line="61" pos:column="30"/></operator><operator pos:line="61" pos:column="30">(<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="31">file<pos:position pos:line="61" pos:column="35"/></name> <operator pos:line="61" pos:column="36">=<pos:position pos:line="61" pos:column="37"/></operator> <call><name pos:line="61" pos:column="38">make_file<pos:position pos:line="61" pos:column="47"/></name><argument_list pos:line="61" pos:column="47">(<argument><expr><name pos:line="61" pos:column="48">rel<pos:position pos:line="61" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="53">NULL<pos:position pos:line="61" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="59">NULL<pos:position pos:line="61" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="65">0<pos:position pos:line="61" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="68">NO_FILTERS<pos:position pos:line="61" pos:column="78"/></name></expr></argument>)<pos:position pos:line="61" pos:column="79"/></argument_list></call><operator pos:line="61" pos:column="79">)<pos:position pos:line="61" pos:column="80"/></operator></expr>)<pos:position pos:line="61" pos:column="81"/></condition><then pos:line="61" pos:column="81">
				<block type="pseudo"><continue pos:line="62" pos:column="33">continue;<pos:position pos:line="62" pos:column="42"/></continue></block></then></if>
<cpp:ifdef pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">ifdef<pos:position pos:line="63" pos:column="7"/></cpp:directive> <name pos:line="63" pos:column="8">SUPPORT_ACLS<pos:position pos:line="63" pos:column="20"/></name></cpp:ifdef>
			<if pos:line="64" pos:column="25">if <condition pos:line="64" pos:column="28">(<expr><name pos:line="64" pos:column="29">preserve_acls<pos:position pos:line="64" pos:column="42"/></name> <operator pos:line="64" pos:column="43">&amp;&amp;<pos:position pos:line="64" pos:column="53"/></operator> <operator pos:line="64" pos:column="46">!<pos:position pos:line="64" pos:column="47"/></operator><call><name pos:line="64" pos:column="47">S_ISLNK<pos:position pos:line="64" pos:column="54"/></name><argument_list pos:line="64" pos:column="54">(<argument><expr><name><name pos:line="64" pos:column="55">file<pos:position pos:line="64" pos:column="59"/></name><operator pos:line="64" pos:column="59">-&gt;<pos:position pos:line="64" pos:column="64"/></operator><name pos:line="64" pos:column="61">mode<pos:position pos:line="64" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="67"/></condition><then pos:line="64" pos:column="67"> <block pos:line="64" pos:column="68">{
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">get_acl<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><name pos:line="65" pos:column="41">rel<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="46">&amp;<pos:position pos:line="65" pos:column="51"/></operator><name pos:line="65" pos:column="47">sx<pos:position pos:line="65" pos:column="49"/></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="66" pos:column="33">cache_tmp_acl<pos:position pos:line="66" pos:column="46"/></name><argument_list pos:line="66" pos:column="46">(<argument><expr><name pos:line="66" pos:column="47">file<pos:position pos:line="66" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="53">&amp;<pos:position pos:line="66" pos:column="58"/></operator><name pos:line="66" pos:column="54">sx<pos:position pos:line="66" pos:column="56"/></name></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="67" pos:column="33">free_acl<pos:position pos:line="67" pos:column="41"/></name><argument_list pos:line="67" pos:column="41">(<argument><expr><operator pos:line="67" pos:column="42">&amp;<pos:position pos:line="67" pos:column="47"/></operator><name pos:line="67" pos:column="43">sx<pos:position pos:line="67" pos:column="45"/></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="68" pos:column="26"/></block></then></if>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">ifdef<pos:position pos:line="70" pos:column="7"/></cpp:directive> <name pos:line="70" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="70" pos:column="22"/></name></cpp:ifdef>
			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><name pos:line="71" pos:column="29">preserve_xattrs<pos:position pos:line="71" pos:column="44"/></name></expr>)<pos:position pos:line="71" pos:column="45"/></condition><then pos:line="71" pos:column="45"> <block pos:line="71" pos:column="46">{
				<expr_stmt><expr><call><name pos:line="72" pos:column="33">get_xattr<pos:position pos:line="72" pos:column="42"/></name><argument_list pos:line="72" pos:column="42">(<argument><expr><name pos:line="72" pos:column="43">rel<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="48">&amp;<pos:position pos:line="72" pos:column="53"/></operator><name pos:line="72" pos:column="49">sx<pos:position pos:line="72" pos:column="51"/></name></expr></argument>)<pos:position pos:line="72" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="73" pos:column="33">cache_tmp_xattr<pos:position pos:line="73" pos:column="48"/></name><argument_list pos:line="73" pos:column="48">(<argument><expr><name pos:line="73" pos:column="49">file<pos:position pos:line="73" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="55">&amp;<pos:position pos:line="73" pos:column="60"/></operator><name pos:line="73" pos:column="56">sx<pos:position pos:line="73" pos:column="58"/></name></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="74" pos:column="33">free_xattr<pos:position pos:line="74" pos:column="43"/></name><argument_list pos:line="74" pos:column="43">(<argument><expr><operator pos:line="74" pos:column="44">&amp;<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="45">sx<pos:position pos:line="74" pos:column="47"/></name></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="75" pos:column="26"/></block></then></if>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>
			<expr_stmt><expr><call><name pos:line="77" pos:column="25">set_file_attrs<pos:position pos:line="77" pos:column="39"/></name><argument_list pos:line="77" pos:column="39">(<argument><expr><name pos:line="77" pos:column="40">backup_dir_buf<pos:position pos:line="77" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="56">file<pos:position pos:line="77" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="62">NULL<pos:position pos:line="77" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="68">NULL<pos:position pos:line="77" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="74">0<pos:position pos:line="77" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">unmake_file<pos:position pos:line="78" pos:column="36"/></name><argument_list pos:line="78" pos:column="36">(<argument><expr><name pos:line="78" pos:column="37">file<pos:position pos:line="78" pos:column="41"/></name></expr></argument>)<pos:position pos:line="78" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="79" pos:column="18"/></block></else></if>

		<expr_stmt><expr><operator pos:line="81" pos:column="17">*<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="18">b<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator> <literal type="char" pos:line="81" pos:column="22">'/'<pos:position pos:line="81" pos:column="25"/></literal></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="82" pos:column="10"/></block></for>

  <label><name pos:line="84" pos:column="3">cleanup<pos:position pos:line="84" pos:column="10"/></name>:<pos:position pos:line="84" pos:column="11"/></label>

<cpp:ifdef pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">ifdef<pos:position pos:line="86" pos:column="7"/></cpp:directive> <name pos:line="86" pos:column="8">SUPPORT_ACLS<pos:position pos:line="86" pos:column="20"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="87" pos:column="9">uncache_tmp_acls<pos:position pos:line="87" pos:column="25"/></name><argument_list pos:line="87" pos:column="25">()<pos:position pos:line="87" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif<pos:position pos:line="88" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">ifdef<pos:position pos:line="89" pos:column="7"/></cpp:directive> <name pos:line="89" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="89" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">uncache_tmp_xattrs<pos:position pos:line="90" pos:column="27"/></name><argument_list pos:line="90" pos:column="27">()<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="93" pos:column="9">return <expr><name pos:line="93" pos:column="16">ret<pos:position pos:line="93" pos:column="19"/></name></expr>;<pos:position pos:line="93" pos:column="20"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

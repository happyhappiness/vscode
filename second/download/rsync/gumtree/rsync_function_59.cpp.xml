<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_59.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">send_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">recurse<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">argc<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name><name pos:line="1" pos:column="67">argv<pos:position pos:line="1" pos:column="71"/></name><index pos:line="1" pos:column="71">[]<pos:position pos:line="1" pos:column="73"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="9">l<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>,<modifier pos:line="5" pos:column="11">*<pos:position pos:line="5" pos:column="12"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="12">dir<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">dbuf<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">MAXPATHLEN<pos:position pos:line="6" pos:column="23"/></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">file_list<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">flist<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">verbose<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&amp;&amp;<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="18">recurse<pos:position pos:line="9" pos:column="25"/></name></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">fprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><ternary><condition><expr><name pos:line="10" pos:column="13">am_server<pos:position pos:line="10" pos:column="22"/></name></expr>?<pos:position pos:line="10" pos:column="23"/></condition><then><expr><name pos:line="10" pos:column="23">stderr<pos:position pos:line="10" pos:column="29"/></name></expr></then><else pos:line="10" pos:column="29">:<expr><name pos:line="10" pos:column="30">stdout<pos:position pos:line="10" pos:column="36"/></name></expr></else></ternary></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="37">"building file list ... "<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">flist<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <operator pos:line="12" pos:column="11">(<pos:position pos:line="12" pos:column="12"/></operator>struct <name pos:line="12" pos:column="19">file_list<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><operator pos:line="12" pos:column="30">)<pos:position pos:line="12" pos:column="31"/></operator><call><name pos:line="12" pos:column="31">malloc<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><sizeof pos:line="12" pos:column="38">sizeof<argument_list pos:line="12" pos:column="44">(<argument><expr><name><name pos:line="12" pos:column="45">flist<pos:position pos:line="12" pos:column="50"/></name><index pos:line="12" pos:column="50">[<expr><literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr>]<pos:position pos:line="12" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">flist<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="15">out_of_memory<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"send_file_list"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">flist<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">count<pos:position pos:line="15" pos:column="15"/></name></name><operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">flist<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">malloced<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">100<pos:position pos:line="16" pos:column="24"/></literal></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">flist<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">files<pos:position pos:line="17" pos:column="15"/></name></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator>struct <name pos:line="17" pos:column="26">file_struct<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></operator><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator><call><name pos:line="17" pos:column="40">malloc<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><sizeof pos:line="17" pos:column="47">sizeof<argument_list pos:line="17" pos:column="53">(<argument><expr><name><name pos:line="17" pos:column="54">flist<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">files<pos:position pos:line="17" pos:column="66"/></name><index pos:line="17" pos:column="66">[<expr><literal type="number" pos:line="17" pos:column="67">0<pos:position pos:line="17" pos:column="68"/></literal></expr>]<pos:position pos:line="17" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></sizeof><operator pos:line="17" pos:column="70">*<pos:position pos:line="17" pos:column="71"/></operator>
					      <name><name pos:line="18" pos:column="47">flist<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">malloced<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><name><name pos:line="19" pos:column="8">flist<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">files<pos:position pos:line="19" pos:column="20"/></name></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="22">out_of_memory<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><literal type="string" pos:line="19" pos:column="36">"send_file_list"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt></block></then></if>

  <for pos:line="21" pos:column="3">for <control pos:line="21" pos:column="7">(<init><expr><name pos:line="21" pos:column="8">i<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator><literal type="number" pos:line="21" pos:column="10">0<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></init><condition><expr><name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">&lt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">argc<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></condition><incr><expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">++<pos:position pos:line="21" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="23"/></control> <block pos:line="21" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name></type> <name><name pos:line="22" pos:column="10">fname2<pos:position pos:line="22" pos:column="16"/></name><index pos:line="22" pos:column="16">[<expr><name pos:line="22" pos:column="17">MAXPATHLEN<pos:position pos:line="22" pos:column="27"/></name></expr>]<pos:position pos:line="22" pos:column="28"/></index></name></decl>;<pos:position pos:line="22" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">char<pos:position pos:line="23" pos:column="9"/></name> <modifier pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></modifier></type><name pos:line="23" pos:column="11">fname<pos:position pos:line="23" pos:column="16"/></name> <init pos:line="23" pos:column="17">= <expr><name pos:line="23" pos:column="19">fname2<pos:position pos:line="23" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">strcpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">fname<pos:position pos:line="25" pos:column="17"/></name></expr></argument>,<argument><expr><name><name pos:line="25" pos:column="18">argv<pos:position pos:line="25" pos:column="22"/></name><index pos:line="25" pos:column="22">[<expr><name pos:line="25" pos:column="23">i<pos:position pos:line="25" pos:column="24"/></name></expr>]<pos:position pos:line="25" pos:column="25"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">l<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name pos:line="27" pos:column="9">strlen<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">fname<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">l<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">!=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal> <operator pos:line="28" pos:column="16">&amp;&amp;<pos:position pos:line="28" pos:column="26"/></operator> <name><name pos:line="28" pos:column="19">fname<pos:position pos:line="28" pos:column="24"/></name><index pos:line="28" pos:column="24">[<expr><name pos:line="28" pos:column="25">l<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-<pos:position pos:line="28" pos:column="27"/></operator><literal type="number" pos:line="28" pos:column="27">1<pos:position pos:line="28" pos:column="28"/></literal></expr>]<pos:position pos:line="28" pos:column="29"/></index></name> <operator pos:line="28" pos:column="30">==<pos:position pos:line="28" pos:column="32"/></operator> <literal type="char" pos:line="28" pos:column="33">'/'<pos:position pos:line="28" pos:column="36"/></literal></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37"> <block pos:line="28" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">strcat<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">fname<pos:position pos:line="29" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="20">"."<pos:position pos:line="29" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">lstat<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">fname<pos:position pos:line="32" pos:column="20"/></name></expr></argument>,<argument><expr><operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="22">st<pos:position pos:line="32" pos:column="24"/></name></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call> <operator pos:line="32" pos:column="26">!=<pos:position pos:line="32" pos:column="28"/></operator> <literal type="number" pos:line="32" pos:column="29">0<pos:position pos:line="32" pos:column="30"/></literal></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31"> <block pos:line="32" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">fprintf<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">stderr<pos:position pos:line="33" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="33" pos:column="22">"%s : %s\n"<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>,<argument><expr><name pos:line="33" pos:column="34">fname<pos:position pos:line="33" pos:column="39"/></name></expr></argument>,<argument><expr><call><name pos:line="33" pos:column="40">strerror<pos:position pos:line="33" pos:column="48"/></name><argument_list pos:line="33" pos:column="48">(<argument><expr><name pos:line="33" pos:column="49">errno<pos:position pos:line="33" pos:column="54"/></name></expr></argument>)<pos:position pos:line="33" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>
      <continue pos:line="34" pos:column="7">continue;<pos:position pos:line="34" pos:column="16"/></continue>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">S_ISDIR<pos:position pos:line="37" pos:column="16"/></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name><name pos:line="37" pos:column="17">st<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">st_mode<pos:position pos:line="37" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call> <operator pos:line="37" pos:column="29">&amp;&amp;<pos:position pos:line="37" pos:column="39"/></operator> <operator pos:line="37" pos:column="32">!<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="33">recurse<pos:position pos:line="37" pos:column="40"/></name></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">fprintf<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">stderr<pos:position pos:line="38" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="38" pos:column="22">"skipping directory %s\n"<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>,<argument><expr><name pos:line="38" pos:column="48">fname<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
      <continue pos:line="39" pos:column="7">continue;<pos:position pos:line="39" pos:column="16"/></continue>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="42" pos:column="5">dir<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <name pos:line="42" pos:column="11">NULL<pos:position pos:line="42" pos:column="15"/></name></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">p<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <call><name pos:line="43" pos:column="9">strrchr<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">fname<pos:position pos:line="43" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="43" pos:column="23">'/'<pos:position pos:line="43" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">p<pos:position pos:line="44" pos:column="10"/></name></expr>)<pos:position pos:line="44" pos:column="11"/></condition><then pos:line="44" pos:column="11"> <block pos:line="44" pos:column="12">{
      <expr_stmt><expr><operator pos:line="45" pos:column="7">*<pos:position pos:line="45" pos:column="8"/></operator><name pos:line="45" pos:column="8">p<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <literal type="number" pos:line="45" pos:column="12">0<pos:position pos:line="45" pos:column="13"/></literal></expr>;<pos:position pos:line="45" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="46" pos:column="7">dir<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <name pos:line="46" pos:column="13">fname<pos:position pos:line="46" pos:column="18"/></name></expr>;<pos:position pos:line="46" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="47" pos:column="7">fname<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <name pos:line="47" pos:column="15">p<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">+<pos:position pos:line="47" pos:column="17"/></operator><literal type="number" pos:line="47" pos:column="17">1<pos:position pos:line="47" pos:column="18"/></literal></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>      
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><operator pos:line="49" pos:column="10">*<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">fname<pos:position pos:line="49" pos:column="16"/></name></expr>)<pos:position pos:line="49" pos:column="17"/></condition><then pos:line="49" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="7">fname<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">=<pos:position pos:line="50" pos:column="14"/></operator> <literal type="string" pos:line="50" pos:column="15">"."<pos:position pos:line="50" pos:column="18"/></literal></expr>;<pos:position pos:line="50" pos:column="19"/></expr_stmt></block></then></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">dir<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">&amp;&amp;<pos:position pos:line="52" pos:column="23"/></operator> <operator pos:line="52" pos:column="16">*<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">dir<pos:position pos:line="52" pos:column="20"/></name></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21"> <block pos:line="52" pos:column="22">{
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><call><name pos:line="53" pos:column="11">getcwd<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><name pos:line="53" pos:column="18">dbuf<pos:position pos:line="53" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="23">MAXPATHLEN<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">-<pos:position pos:line="53" pos:column="34"/></operator><literal type="number" pos:line="53" pos:column="34">1<pos:position pos:line="53" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="36"/></argument_list></call> <operator pos:line="53" pos:column="37">==<pos:position pos:line="53" pos:column="39"/></operator> <name pos:line="53" pos:column="40">NULL<pos:position pos:line="53" pos:column="44"/></name></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45"> <block pos:line="53" pos:column="46">{
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">fprintf<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">stderr<pos:position pos:line="54" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="54" pos:column="24">"getwd : %s\n"<pos:position pos:line="54" pos:column="38"/></literal></expr></argument>,<argument><expr><call><name pos:line="54" pos:column="39">strerror<pos:position pos:line="54" pos:column="47"/></name><argument_list pos:line="54" pos:column="47">(<argument><expr><name pos:line="54" pos:column="48">errno<pos:position pos:line="54" pos:column="53"/></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">exit<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><literal type="number" pos:line="55" pos:column="14">1<pos:position pos:line="55" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="56" pos:column="8"/></block></then></if>
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><call><name pos:line="57" pos:column="11">chdir<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">dir<pos:position pos:line="57" pos:column="20"/></name></expr></argument>)<pos:position pos:line="57" pos:column="21"/></argument_list></call> <operator pos:line="57" pos:column="22">!=<pos:position pos:line="57" pos:column="24"/></operator> <literal type="number" pos:line="57" pos:column="25">0<pos:position pos:line="57" pos:column="26"/></literal></expr>)<pos:position pos:line="57" pos:column="27"/></condition><then pos:line="57" pos:column="27"> <block pos:line="57" pos:column="28">{
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">fprintf<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><name pos:line="58" pos:column="17">stderr<pos:position pos:line="58" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="24">"chdir %s : %s\n"<pos:position pos:line="58" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="58" pos:column="42">dir<pos:position pos:line="58" pos:column="45"/></name></expr></argument>,<argument><expr><call><name pos:line="58" pos:column="46">strerror<pos:position pos:line="58" pos:column="54"/></name><argument_list pos:line="58" pos:column="54">(<argument><expr><name pos:line="58" pos:column="55">errno<pos:position pos:line="58" pos:column="60"/></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>
	<continue pos:line="59" pos:column="9">continue;<pos:position pos:line="59" pos:column="18"/></continue>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="61" pos:column="7">flist_dir<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">dir<pos:position pos:line="61" pos:column="22"/></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">send_file_name<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">f<pos:position pos:line="62" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="62" pos:column="24">flist<pos:position pos:line="62" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="62" pos:column="30">recurse<pos:position pos:line="62" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="62" pos:column="38">fname<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name pos:line="63" pos:column="7">flist_dir<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">NULL<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><call><name pos:line="64" pos:column="11">chdir<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">dbuf<pos:position pos:line="64" pos:column="21"/></name></expr></argument>)<pos:position pos:line="64" pos:column="22"/></argument_list></call> <operator pos:line="64" pos:column="23">!=<pos:position pos:line="64" pos:column="25"/></operator> <literal type="number" pos:line="64" pos:column="26">0<pos:position pos:line="64" pos:column="27"/></literal></expr>)<pos:position pos:line="64" pos:column="28"/></condition><then pos:line="64" pos:column="28"> <block pos:line="64" pos:column="29">{
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">fprintf<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">stderr<pos:position pos:line="65" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="65" pos:column="24">"chdir %s : %s\n"<pos:position pos:line="65" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="65" pos:column="42">dbuf<pos:position pos:line="65" pos:column="46"/></name></expr></argument>,<argument><expr><call><name pos:line="65" pos:column="47">strerror<pos:position pos:line="65" pos:column="55"/></name><argument_list pos:line="65" pos:column="55">(<argument><expr><name pos:line="65" pos:column="56">errno<pos:position pos:line="65" pos:column="61"/></name></expr></argument>)<pos:position pos:line="65" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">exit<pos:position pos:line="66" pos:column="13"/></name><argument_list pos:line="66" pos:column="13">(<argument><expr><literal type="number" pos:line="66" pos:column="14">1<pos:position pos:line="66" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>
      <continue pos:line="68" pos:column="7">continue;<pos:position pos:line="68" pos:column="16"/></continue>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">send_file_name<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">f<pos:position pos:line="71" pos:column="21"/></name></expr></argument>,<argument><expr><name pos:line="71" pos:column="22">flist<pos:position pos:line="71" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="71" pos:column="28">recurse<pos:position pos:line="71" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="71" pos:column="36">fname<pos:position pos:line="71" pos:column="41"/></name></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="72" pos:column="4"/></block></for>

  <if pos:line="74" pos:column="3">if <condition pos:line="74" pos:column="6">(<expr><name pos:line="74" pos:column="7">f<pos:position pos:line="74" pos:column="8"/></name> <operator pos:line="74" pos:column="9">!=<pos:position pos:line="74" pos:column="11"/></operator> <operator pos:line="74" pos:column="12">-<pos:position pos:line="74" pos:column="13"/></operator><literal type="number" pos:line="74" pos:column="13">1<pos:position pos:line="74" pos:column="14"/></literal></expr>)<pos:position pos:line="74" pos:column="15"/></condition><then pos:line="74" pos:column="15"> <block pos:line="74" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">write_int<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><name pos:line="75" pos:column="15">f<pos:position pos:line="75" pos:column="16"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="75" pos:column="17">0<pos:position pos:line="75" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">write_flush<pos:position pos:line="76" pos:column="16"/></name><argument_list pos:line="76" pos:column="16">(<argument><expr><name pos:line="76" pos:column="17">f<pos:position pos:line="76" pos:column="18"/></name></expr></argument>)<pos:position pos:line="76" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="77" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">clean_flist<pos:position pos:line="79" pos:column="14"/></name><argument_list pos:line="79" pos:column="14">(<argument><expr><name pos:line="79" pos:column="15">flist<pos:position pos:line="79" pos:column="20"/></name></expr></argument>)<pos:position pos:line="79" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="22"/></expr_stmt>

  <if pos:line="81" pos:column="3">if <condition pos:line="81" pos:column="6">(<expr><name pos:line="81" pos:column="7">verbose<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">&amp;&amp;<pos:position pos:line="81" pos:column="25"/></operator> <name pos:line="81" pos:column="18">recurse<pos:position pos:line="81" pos:column="25"/></name></expr>)<pos:position pos:line="81" pos:column="26"/></condition><then pos:line="81" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="5">fprintf<pos:position pos:line="82" pos:column="12"/></name><argument_list pos:line="82" pos:column="12">(<argument><expr><ternary><condition><expr><name pos:line="82" pos:column="13">am_server<pos:position pos:line="82" pos:column="22"/></name></expr>?<pos:position pos:line="82" pos:column="23"/></condition><then><expr><name pos:line="82" pos:column="23">stderr<pos:position pos:line="82" pos:column="29"/></name></expr></then><else pos:line="82" pos:column="29">:<expr><name pos:line="82" pos:column="30">stdout<pos:position pos:line="82" pos:column="36"/></name></expr></else></ternary></expr></argument>,<argument><expr><literal type="string" pos:line="82" pos:column="37">"done\n"<pos:position pos:line="82" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="47"/></expr_stmt></block></then></if>

  <return pos:line="84" pos:column="3">return <expr><name pos:line="84" pos:column="10">flist<pos:position pos:line="84" pos:column="15"/></name></expr>;<pos:position pos:line="84" pos:column="16"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

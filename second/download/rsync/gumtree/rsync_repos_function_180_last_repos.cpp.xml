<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_180_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write_bigbuf<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">f<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">buf<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">size_t<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">len<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">half_max<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><operator pos:line="3" pos:column="27">(<pos:position pos:line="3" pos:column="28"/></operator><name><name pos:line="3" pos:column="28">iobuf<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">.<pos:position pos:line="3" pos:column="34"/></operator><name pos:line="3" pos:column="34">out<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">.<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">size<pos:position pos:line="3" pos:column="42"/></name></name> <operator pos:line="3" pos:column="43">-<pos:position pos:line="3" pos:column="44"/></operator> <name><name pos:line="3" pos:column="45">iobuf<pos:position pos:line="3" pos:column="50"/></name><operator pos:line="3" pos:column="50">.<pos:position pos:line="3" pos:column="51"/></operator><name pos:line="3" pos:column="51">out_empty_len<pos:position pos:line="3" pos:column="64"/></name></name><operator pos:line="3" pos:column="64">)<pos:position pos:line="3" pos:column="65"/></operator> <operator pos:line="3" pos:column="66">/<pos:position pos:line="3" pos:column="67"/></operator> <literal type="number" pos:line="3" pos:column="68">2<pos:position pos:line="3" pos:column="69"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="70"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&gt;<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="22">half_max<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">+<pos:position pos:line="5" pos:column="32"/></operator> <literal type="number" pos:line="5" pos:column="33">1024<pos:position pos:line="5" pos:column="37"/></literal></expr>)<pos:position pos:line="5" pos:column="38"/></condition> <block pos:line="5" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">write_buf<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">f<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">buf<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">half_max<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">buf<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">+=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">half_max<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">len<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">-=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">half_max<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">write_buf<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">f<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="22">buf<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">len<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_900.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_rsync_version<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">enum<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">logcode<pos:position pos:line="1" pos:column="45"/></name></name></type> <name pos:line="1" pos:column="46">f<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">subprotocol<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><literal type="string" pos:line="3" pos:column="29">""<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <specifier pos:line="4" pos:column="14">const<pos:position pos:line="4" pos:column="19"/></specifier> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">got_socketpair<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><literal type="string" pos:line="4" pos:column="38">"no "<pos:position pos:line="4" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <specifier pos:line="5" pos:column="14">const<pos:position pos:line="5" pos:column="19"/></specifier> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">have_inplace<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><literal type="string" pos:line="5" pos:column="36">"no "<pos:position pos:line="5" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <specifier pos:line="6" pos:column="14">const<pos:position pos:line="6" pos:column="19"/></specifier> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">hardlinks<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><literal type="string" pos:line="6" pos:column="33">"no "<pos:position pos:line="6" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <specifier pos:line="7" pos:column="14">const<pos:position pos:line="7" pos:column="19"/></specifier> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">symtimes<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><literal type="string" pos:line="7" pos:column="32">"no "<pos:position pos:line="7" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name> <specifier pos:line="8" pos:column="14">const<pos:position pos:line="8" pos:column="19"/></specifier> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">acls<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><literal type="string" pos:line="8" pos:column="28">"no "<pos:position pos:line="8" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <specifier pos:line="9" pos:column="14">const<pos:position pos:line="9" pos:column="19"/></specifier> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">xattrs<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="string" pos:line="9" pos:column="30">"no "<pos:position pos:line="9" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <specifier pos:line="10" pos:column="14">const<pos:position pos:line="10" pos:column="19"/></specifier> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">links<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><literal type="string" pos:line="10" pos:column="29">"no "<pos:position pos:line="10" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <specifier pos:line="11" pos:column="14">const<pos:position pos:line="11" pos:column="19"/></specifier> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">iconv<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><literal type="string" pos:line="11" pos:column="29">"no "<pos:position pos:line="11" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <specifier pos:line="12" pos:column="14">const<pos:position pos:line="12" pos:column="19"/></specifier> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">ipv6<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><literal type="string" pos:line="12" pos:column="28">"no "<pos:position pos:line="12" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">STRUCT_STAT<pos:position pos:line="13" pos:column="20"/></name> <modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier></type><name pos:line="13" pos:column="22">dumstat<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">SUBPROTOCOL_VERSION<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">!=<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></cpp:if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">asprintf<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><operator pos:line="16" pos:column="22">&amp;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="23">subprotocol<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="36">".PR%d"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">SUBPROTOCOL_VERSION<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call> <operator pos:line="16" pos:column="66">&lt;<pos:position pos:line="16" pos:column="70"/></operator> <literal type="number" pos:line="16" pos:column="68">0<pos:position pos:line="16" pos:column="69"/></literal></expr>)<pos:position pos:line="16" pos:column="70"/></condition><then pos:line="16" pos:column="70">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">out_of_memory<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"print_rsync_version"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">HAVE_SOCKETPAIR<pos:position pos:line="19" pos:column="23"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="20" pos:column="9">got_socketpair<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="string" pos:line="20" pos:column="26">""<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">HAVE_FTRUNCATE<pos:position pos:line="22" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="23" pos:column="9">have_inplace<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="string" pos:line="23" pos:column="24">""<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifdef<pos:position pos:line="25" pos:column="7"/></cpp:directive> <name pos:line="25" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="25" pos:column="26"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="26" pos:column="9">hardlinks<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <literal type="string" pos:line="26" pos:column="21">""<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">SUPPORT_ACLS<pos:position pos:line="28" pos:column="20"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="29" pos:column="9">acls<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="string" pos:line="29" pos:column="16">""<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="31" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="32" pos:column="9">xattrs<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="string" pos:line="32" pos:column="18">""<pos:position pos:line="32" pos:column="20"/></literal></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">SUPPORT_LINKS<pos:position pos:line="34" pos:column="21"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="35" pos:column="9">links<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <literal type="string" pos:line="35" pos:column="17">""<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">INET6<pos:position pos:line="37" pos:column="13"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="38" pos:column="9">ipv6<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <literal type="string" pos:line="38" pos:column="16">""<pos:position pos:line="38" pos:column="18"/></literal></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifdef<pos:position pos:line="40" pos:column="7"/></cpp:directive> <name pos:line="40" pos:column="8">ICONV_OPTION<pos:position pos:line="40" pos:column="20"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="41" pos:column="9">iconv<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <literal type="string" pos:line="41" pos:column="17">""<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">defined<pos:position pos:line="43" pos:column="12"/></name> <name pos:line="43" pos:column="13">HAVE_LUTIMES<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">&amp;&amp;<pos:position pos:line="43" pos:column="36"/></operator> <name pos:line="43" pos:column="29">defined<pos:position pos:line="43" pos:column="36"/></name> <name pos:line="43" pos:column="37">HAVE_UTIMES<pos:position pos:line="43" pos:column="48"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="44" pos:column="9">symtimes<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <literal type="string" pos:line="44" pos:column="20">""<pos:position pos:line="44" pos:column="22"/></literal></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">rprintf<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">f<pos:position pos:line="47" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="20">"%s  version %s  protocol version %d%s\n"<pos:position pos:line="47" pos:column="61"/></literal></expr></argument>,
		<argument><expr><name pos:line="48" pos:column="17">RSYNC_NAME<pos:position pos:line="48" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="29">RSYNC_VERSION<pos:position pos:line="48" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="44">PROTOCOL_VERSION<pos:position pos:line="48" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="62">subprotocol<pos:position pos:line="48" pos:column="73"/></name></expr></argument>)<pos:position pos:line="48" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">rprintf<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">f<pos:position pos:line="49" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="20">"Copyright (C) 1996-2008 by Andrew Tridgell, Wayne Davison, and others.\n"<pos:position pos:line="49" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="96"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">rprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">f<pos:position pos:line="50" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="20">"Web site: http://rsync.samba.org/\n"<pos:position pos:line="50" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">rprintf<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">f<pos:position pos:line="51" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="20">"Capabilities:\n"<pos:position pos:line="51" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">rprintf<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">f<pos:position pos:line="52" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="20">"    %d-bit files, %d-bit inums, %d-bit timestamps, %d-bit long ints,\n"<pos:position pos:line="52" pos:column="92"/></literal></expr></argument>,
		<argument><expr><call pos:line="53" pos:column="17">(<name pos:line="53" pos:column="18">int<pos:position pos:line="53" pos:column="21"/></name>)<argument_list pos:line="53" pos:column="22">(<argument><expr><sizeof pos:line="53" pos:column="23">sizeof <argument_list pos:line="53" pos:column="30">(<argument><expr><name pos:line="53" pos:column="31">OFF_T<pos:position pos:line="53" pos:column="36"/></name></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></sizeof> <operator pos:line="53" pos:column="38">*<pos:position pos:line="53" pos:column="39"/></operator> <literal type="number" pos:line="53" pos:column="40">8<pos:position pos:line="53" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr></argument>,
		<argument><expr><call pos:line="54" pos:column="17">(<name pos:line="54" pos:column="18">int<pos:position pos:line="54" pos:column="21"/></name>)<argument_list pos:line="54" pos:column="22">(<argument><expr><sizeof pos:line="54" pos:column="23">sizeof <name><name pos:line="54" pos:column="30">dumstat<pos:position pos:line="54" pos:column="37"/></name><operator pos:line="54" pos:column="37">-&gt;<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="39">st_ino<pos:position pos:line="54" pos:column="45"/></name></name></sizeof> <operator pos:line="54" pos:column="46">*<pos:position pos:line="54" pos:column="47"/></operator> <literal type="number" pos:line="54" pos:column="48">8<pos:position pos:line="54" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call></expr></argument>, <comment type="block" pos:line="54" pos:column="52">/* Don't check ino_t! */</comment>
		<argument><expr><call pos:line="55" pos:column="17">(<name pos:line="55" pos:column="18">int<pos:position pos:line="55" pos:column="21"/></name>)<argument_list pos:line="55" pos:column="22">(<argument><expr><sizeof pos:line="55" pos:column="23">sizeof <argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">time_t<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></sizeof> <operator pos:line="55" pos:column="39">*<pos:position pos:line="55" pos:column="40"/></operator> <literal type="number" pos:line="55" pos:column="41">8<pos:position pos:line="55" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr></argument>,
		<argument><expr><call pos:line="56" pos:column="17">(<name pos:line="56" pos:column="18">int<pos:position pos:line="56" pos:column="21"/></name>)<argument_list pos:line="56" pos:column="22">(<argument><expr><sizeof pos:line="56" pos:column="23">sizeof <argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">int64<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></sizeof> <operator pos:line="56" pos:column="38">*<pos:position pos:line="56" pos:column="39"/></operator> <literal type="number" pos:line="56" pos:column="40">8<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">rprintf<pos:position pos:line="57" pos:column="16"/></name><argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">f<pos:position pos:line="57" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="20">"    %ssocketpairs, %shardlinks, %ssymlinks, %sIPv6, batchfiles, %sinplace,\n"<pos:position pos:line="57" pos:column="98"/></literal></expr></argument>,
		<argument><expr><name pos:line="58" pos:column="17">got_socketpair<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="33">hardlinks<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="44">links<pos:position pos:line="58" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">ipv6<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">have_inplace<pos:position pos:line="58" pos:column="69"/></name></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">rprintf<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">f<pos:position pos:line="59" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="20">"    %sappend, %sACLs, %sxattrs, %siconv, %ssymtimes\n"<pos:position pos:line="59" pos:column="75"/></literal></expr></argument>,
		<argument><expr><name pos:line="60" pos:column="17">have_inplace<pos:position pos:line="60" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="31">acls<pos:position pos:line="60" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="37">xattrs<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="45">iconv<pos:position pos:line="60" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">symtimes<pos:position pos:line="60" pos:column="60"/></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="62"/></expr_stmt>

<cpp:ifdef pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">ifdef<pos:position pos:line="62" pos:column="7"/></cpp:directive> <name pos:line="62" pos:column="8">MAINTAINER_MODE<pos:position pos:line="62" pos:column="23"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">rprintf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">f<pos:position pos:line="63" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="20">"Panic Action: \"%s\"\n"<pos:position pos:line="63" pos:column="44"/></literal></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="46">get_panic_action<pos:position pos:line="63" pos:column="62"/></name><argument_list pos:line="63" pos:column="62">()<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">if<pos:position pos:line="66" pos:column="4"/></cpp:directive> <expr><name pos:line="66" pos:column="5">SIZEOF_INT64<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">&lt;<pos:position pos:line="66" pos:column="22"/></operator> <literal type="number" pos:line="66" pos:column="20">8<pos:position pos:line="66" pos:column="21"/></literal></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="67" pos:column="9">rprintf<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name pos:line="67" pos:column="17">f<pos:position pos:line="67" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="20">"WARNING: no 64-bit integers on this platform!\n"<pos:position pos:line="67" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><sizeof pos:line="69" pos:column="13">sizeof <argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">int64<pos:position pos:line="69" pos:column="26"/></name></expr></argument>)<pos:position pos:line="69" pos:column="27"/></argument_list></sizeof> <operator pos:line="69" pos:column="28">!=<pos:position pos:line="69" pos:column="30"/></operator> <name pos:line="69" pos:column="31">SIZEOF_INT64<pos:position pos:line="69" pos:column="43"/></name></expr>)<pos:position pos:line="69" pos:column="44"/></condition><then pos:line="69" pos:column="44"> <block pos:line="69" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">rprintf<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">f<pos:position pos:line="70" pos:column="26"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="71" pos:column="25">"WARNING: size mismatch in SIZEOF_INT64 define (%d != %d)\n"<pos:position pos:line="71" pos:column="85"/></literal></expr></argument>,
			<argument><expr><operator pos:line="72" pos:column="25">(<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">int<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">)<pos:position pos:line="72" pos:column="30"/></operator> <name pos:line="72" pos:column="31">SIZEOF_INT64<pos:position pos:line="72" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="45">(<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="46">int<pos:position pos:line="72" pos:column="49"/></name><operator pos:line="72" pos:column="49">)<pos:position pos:line="72" pos:column="50"/></operator> <sizeof pos:line="72" pos:column="51">sizeof <argument_list pos:line="72" pos:column="58">(<argument><expr><name pos:line="72" pos:column="59">int64<pos:position pos:line="72" pos:column="64"/></name></expr></argument>)<pos:position pos:line="72" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="75" pos:column="9">rprintf<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">f<pos:position pos:line="75" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="75" pos:column="19">"\n"<pos:position pos:line="75" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">rprintf<pos:position pos:line="76" pos:column="16"/></name><argument_list pos:line="76" pos:column="16">(<argument><expr><name pos:line="76" pos:column="17">f<pos:position pos:line="76" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="76" pos:column="19">"rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you\n"<pos:position pos:line="76" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="97"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">rprintf<pos:position pos:line="77" pos:column="16"/></name><argument_list pos:line="77" pos:column="16">(<argument><expr><name pos:line="77" pos:column="17">f<pos:position pos:line="77" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="77" pos:column="19">"are welcome to redistribute it under certain conditions.  See the GNU\n"<pos:position pos:line="77" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="94"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="78" pos:column="9">rprintf<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">(<argument><expr><name pos:line="78" pos:column="17">f<pos:position pos:line="78" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="78" pos:column="19">"General Public Licence for details.\n"<pos:position pos:line="78" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="60"/></expr_stmt>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

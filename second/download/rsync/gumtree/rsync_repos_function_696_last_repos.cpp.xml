<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_696_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">void<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_match<pos:position pos:line="1" pos:column="23"/></name><argument_list pos:line="1" pos:column="23">(<argument><expr><name pos:line="1" pos:column="24">s<pos:position pos:line="1" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="27">start<pos:position pos:line="1" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="34">match<pos:position pos:line="1" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="41">length<pos:position pos:line="1" pos:column="47"/></name></expr></argument>)<pos:position pos:line="1" pos:column="48"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">IPos<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">start<pos:position pos:line="3" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">match<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">length<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <comment type="block" pos:line="6" pos:column="5">/* check that the match is indeed a match */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">zmemcmp<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name><name pos:line="7" pos:column="17">s<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">window<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator> <name pos:line="7" pos:column="29">match<pos:position pos:line="7" pos:column="34"/></name></expr></argument>,
                <argument><expr><name><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">window<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">+<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">start<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">length<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">EQUAL<pos:position pos:line="8" pos:column="52"/></name></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53"> <block pos:line="8" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">fprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">stderr<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">" start %u, match %u, length %d\n"<pos:position pos:line="9" pos:column="59"/></literal></expr></argument>,
                <argument><expr><name pos:line="10" pos:column="17">start<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">match<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">length<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
        <do pos:line="11" pos:column="9">do <block pos:line="11" pos:column="12">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">fprintf<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">stderr<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"%c%c"<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="37">s<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">window<pos:position pos:line="12" pos:column="46"/></name><index pos:line="12" pos:column="46">[<expr><name pos:line="12" pos:column="47">match<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">++<pos:position pos:line="12" pos:column="54"/></operator></expr>]<pos:position pos:line="12" pos:column="55"/></index></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="57">s<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">-&gt;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="60">window<pos:position pos:line="12" pos:column="66"/></name><index pos:line="12" pos:column="66">[<expr><name pos:line="12" pos:column="67">start<pos:position pos:line="12" pos:column="72"/></name><operator pos:line="12" pos:column="72">++<pos:position pos:line="12" pos:column="74"/></operator></expr>]<pos:position pos:line="12" pos:column="75"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block> while <condition pos:line="13" pos:column="17">(<expr><operator pos:line="13" pos:column="18">--<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">length<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">!=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal></expr>)<pos:position pos:line="13" pos:column="32"/></condition>;<pos:position pos:line="13" pos:column="33"/></do>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">z_error<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><literal type="string" pos:line="14" pos:column="17">"invalid match"<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">z_verbose<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&gt;<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">stderr<pos:position pos:line="17" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="17" pos:column="24">"\\[%d,%d]"<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">start<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">match<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">length<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
        <do pos:line="18" pos:column="9">do <block pos:line="18" pos:column="12">{ <expr_stmt><expr><call><name pos:line="18" pos:column="14">putc<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name><name pos:line="18" pos:column="19">s<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">window<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><name pos:line="18" pos:column="29">start<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">++<pos:position pos:line="18" pos:column="36"/></operator></expr>]<pos:position pos:line="18" pos:column="37"/></index></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">stderr<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt> }<pos:position pos:line="18" pos:column="49"/></block> while <condition pos:line="18" pos:column="56">(<expr><operator pos:line="18" pos:column="57">--<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">length<pos:position pos:line="18" pos:column="65"/></name> <operator pos:line="18" pos:column="66">!=<pos:position pos:line="18" pos:column="68"/></operator> <literal type="number" pos:line="18" pos:column="69">0<pos:position pos:line="18" pos:column="70"/></literal></expr>)<pos:position pos:line="18" pos:column="71"/></condition>;<pos:position pos:line="18" pos:column="72"/></do>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
}<pos:position pos:line="20" pos:column="2"/></block></unit>

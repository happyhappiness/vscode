<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_13_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">match_sums<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">f<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">sum_struct<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">s<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="46">struct<pos:position pos:line="1" pos:column="52"/></name> <name pos:line="1" pos:column="53">map_struct<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">buf<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">OFF_T<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">len<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">last_match<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">=<pos:position pos:line="3" pos:column="21"/></operator> <literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr>;<pos:position pos:line="3" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="4" pos:column="9">false_alarms<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">=<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">hash_hits<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">matches<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">data_transfer<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">sum_init<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">checksum_seed<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">append_mode<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&gt;<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29"> <block pos:line="11" pos:column="30">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">append_mode<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">==<pos:position pos:line="12" pos:column="35"/></operator> <literal type="number" pos:line="12" pos:column="36">2<pos:position pos:line="12" pos:column="37"/></literal></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <block pos:line="12" pos:column="39">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">OFF_T<pos:position pos:line="13" pos:column="30"/></name></type> <name pos:line="13" pos:column="31">j<pos:position pos:line="13" pos:column="32"/></name> <init pos:line="13" pos:column="33">= <expr><literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
			<for pos:line="14" pos:column="25">for <control pos:line="14" pos:column="29">(<init><expr><name pos:line="14" pos:column="30">j<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">CHUNK_SIZE<pos:position pos:line="14" pos:column="44"/></name></expr>;<pos:position pos:line="14" pos:column="45"/></init> <condition><expr><name pos:line="14" pos:column="46">j<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">&lt;<pos:position pos:line="14" pos:column="52"/></operator> <name><name pos:line="14" pos:column="50">s<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">-&gt;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="53">flength<pos:position pos:line="14" pos:column="60"/></name></name></expr>;<pos:position pos:line="14" pos:column="61"/></condition> <incr><expr><name pos:line="14" pos:column="62">j<pos:position pos:line="14" pos:column="63"/></name> <operator pos:line="14" pos:column="64">+=<pos:position pos:line="14" pos:column="66"/></operator> <name pos:line="14" pos:column="67">CHUNK_SIZE<pos:position pos:line="14" pos:column="77"/></name></expr></incr>)<pos:position pos:line="14" pos:column="78"/></control> <block pos:line="14" pos:column="79">{
				<if pos:line="15" pos:column="33">if <condition pos:line="15" pos:column="36">(<expr><name pos:line="15" pos:column="37">buf<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">&amp;&amp;<pos:position pos:line="15" pos:column="51"/></operator> <call><name pos:line="15" pos:column="44">INFO_GTE<pos:position pos:line="15" pos:column="52"/></name><argument_list pos:line="15" pos:column="52">(<argument><expr><name pos:line="15" pos:column="53">PROGRESS<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="63">1<pos:position pos:line="15" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="66"/></condition><then pos:line="15" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="41">show_progress<pos:position pos:line="16" pos:column="54"/></name><argument_list pos:line="16" pos:column="54">(<argument><expr><name pos:line="16" pos:column="55">last_match<pos:position pos:line="16" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="67">buf<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">-&gt;<pos:position pos:line="16" pos:column="75"/></operator><name pos:line="16" pos:column="72">file_size<pos:position pos:line="16" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="83"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="17" pos:column="33">sum_update<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><call><name pos:line="17" pos:column="44">map_ptr<pos:position pos:line="17" pos:column="51"/></name><argument_list pos:line="17" pos:column="51">(<argument><expr><name pos:line="17" pos:column="52">buf<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">last_match<pos:position pos:line="17" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="69">CHUNK_SIZE<pos:position pos:line="17" pos:column="79"/></name></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr></argument>,
					   <argument><expr><name pos:line="18" pos:column="44">CHUNK_SIZE<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="19" pos:column="33">last_match<pos:position pos:line="19" pos:column="43"/></name> <operator pos:line="19" pos:column="44">=<pos:position pos:line="19" pos:column="45"/></operator> <name pos:line="19" pos:column="46">j<pos:position pos:line="19" pos:column="47"/></name></expr>;<pos:position pos:line="19" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="20" pos:column="26"/></block></for>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name pos:line="21" pos:column="29">last_match<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">&lt;<pos:position pos:line="21" pos:column="44"/></operator> <name><name pos:line="21" pos:column="42">s<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">flength<pos:position pos:line="21" pos:column="52"/></name></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53"> <block pos:line="21" pos:column="54">{
				<decl_stmt><decl><type><name pos:line="22" pos:column="33">int32<pos:position pos:line="22" pos:column="38"/></name></type> <name pos:line="22" pos:column="39">n<pos:position pos:line="22" pos:column="40"/></name> <init pos:line="22" pos:column="41">= <expr><call pos:line="22" pos:column="43">(<name pos:line="22" pos:column="44">int32<pos:position pos:line="22" pos:column="49"/></name>)<argument_list pos:line="22" pos:column="50">(<argument><expr><name><name pos:line="22" pos:column="51">s<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">-&gt;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="54">flength<pos:position pos:line="22" pos:column="61"/></name></name> <operator pos:line="22" pos:column="62">-<pos:position pos:line="22" pos:column="63"/></operator> <name pos:line="22" pos:column="64">last_match<pos:position pos:line="22" pos:column="74"/></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="76"/></decl_stmt>
				<if pos:line="23" pos:column="33">if <condition pos:line="23" pos:column="36">(<expr><name pos:line="23" pos:column="37">buf<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">&amp;&amp;<pos:position pos:line="23" pos:column="51"/></operator> <call><name pos:line="23" pos:column="44">INFO_GTE<pos:position pos:line="23" pos:column="52"/></name><argument_list pos:line="23" pos:column="52">(<argument><expr><name pos:line="23" pos:column="53">PROGRESS<pos:position pos:line="23" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="63">1<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="66"/></condition><then pos:line="23" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="41">show_progress<pos:position pos:line="24" pos:column="54"/></name><argument_list pos:line="24" pos:column="54">(<argument><expr><name pos:line="24" pos:column="55">last_match<pos:position pos:line="24" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="67">buf<pos:position pos:line="24" pos:column="70"/></name><operator pos:line="24" pos:column="70">-&gt;<pos:position pos:line="24" pos:column="75"/></operator><name pos:line="24" pos:column="72">file_size<pos:position pos:line="24" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="83"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="25" pos:column="33">sum_update<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><call><name pos:line="25" pos:column="44">map_ptr<pos:position pos:line="25" pos:column="51"/></name><argument_list pos:line="25" pos:column="51">(<argument><expr><name pos:line="25" pos:column="52">buf<pos:position pos:line="25" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="57">last_match<pos:position pos:line="25" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="69">n<pos:position pos:line="25" pos:column="70"/></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="73">n<pos:position pos:line="25" pos:column="74"/></name></expr></argument>)<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="28" pos:column="17">last_match<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name><name pos:line="28" pos:column="30">s<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">flength<pos:position pos:line="28" pos:column="40"/></name></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">s<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">count<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="28">0<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">len<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&gt;<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="19">0<pos:position pos:line="32" pos:column="20"/></literal> <operator pos:line="32" pos:column="21">&amp;&amp;<pos:position pos:line="32" pos:column="31"/></operator> <name><name pos:line="32" pos:column="24">s<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">count<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">&gt;<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37"> <block pos:line="32" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">build_hash_table<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name pos:line="33" pos:column="34">s<pos:position pos:line="33" pos:column="35"/></name></expr></argument>)<pos:position pos:line="33" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="37"/></expr_stmt>

		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">DEBUG_GTE<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">DELTASUM<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="41">2<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">rprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">FINFO<pos:position pos:line="36" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="39">"built hash table\n"<pos:position pos:line="36" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="38" pos:column="17">hash_search<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">f<pos:position pos:line="38" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="32">s<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">buf<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="40">len<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><call><name pos:line="40" pos:column="21">DEBUG_GTE<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">DELTASUM<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="41">2<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="44"/></condition><then pos:line="40" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="25">rprintf<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">FINFO<pos:position pos:line="41" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="41" pos:column="39">"done hash search\n"<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <else pos:line="42" pos:column="11">else <block pos:line="42" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">OFF_T<pos:position pos:line="43" pos:column="22"/></name></type> <name pos:line="43" pos:column="23">j<pos:position pos:line="43" pos:column="24"/></name></decl>;<pos:position pos:line="43" pos:column="25"/></decl_stmt>
		<comment type="block" pos:line="44" pos:column="17">/* by doing this in pieces we avoid too many seeks */</comment>
		<for pos:line="45" pos:column="17">for <control pos:line="45" pos:column="21">(<init><expr><name pos:line="45" pos:column="22">j<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <name pos:line="45" pos:column="26">last_match<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">+<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="39">CHUNK_SIZE<pos:position pos:line="45" pos:column="49"/></name></expr>;<pos:position pos:line="45" pos:column="50"/></init> <condition><expr><name pos:line="45" pos:column="51">j<pos:position pos:line="45" pos:column="52"/></name> <operator pos:line="45" pos:column="53">&lt;<pos:position pos:line="45" pos:column="57"/></operator> <name pos:line="45" pos:column="55">len<pos:position pos:line="45" pos:column="58"/></name></expr>;<pos:position pos:line="45" pos:column="59"/></condition> <incr><expr><name pos:line="45" pos:column="60">j<pos:position pos:line="45" pos:column="61"/></name> <operator pos:line="45" pos:column="62">+=<pos:position pos:line="45" pos:column="64"/></operator> <name pos:line="45" pos:column="65">CHUNK_SIZE<pos:position pos:line="45" pos:column="75"/></name></expr></incr>)<pos:position pos:line="45" pos:column="76"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">matched<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">f<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="36">s<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">buf<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">j<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="47">-<pos:position pos:line="46" pos:column="48"/></operator><literal type="number" pos:line="46" pos:column="48">2<pos:position pos:line="46" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">matched<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">f<pos:position pos:line="47" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="28">s<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="31">buf<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">len<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="41">-<pos:position pos:line="47" pos:column="42"/></operator><literal type="number" pos:line="47" pos:column="42">1<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></else></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">sum_end<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">sender_file_sum<pos:position pos:line="50" pos:column="36"/></name></expr></argument>)<pos:position pos:line="50" pos:column="37"/></argument_list></call> <operator pos:line="50" pos:column="38">!=<pos:position pos:line="50" pos:column="40"/></operator> <name pos:line="50" pos:column="41">checksum_len<pos:position pos:line="50" pos:column="53"/></name></expr>)<pos:position pos:line="50" pos:column="54"/></condition><then pos:line="50" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="17">overflow_exit<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><literal type="string" pos:line="51" pos:column="31">"checksum_len"<pos:position pos:line="51" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="47"/></expr_stmt></block></then></if> <comment type="block" pos:line="51" pos:column="48">/* Impossible... */</comment>

	<comment type="block" pos:line="53" pos:column="9">/* If we had a read error, send a bad checksum.  We use all bits
	 * off as long as the checksum doesn't happen to be that, in
	 * which case we turn the last 0 bit into a 1. */</comment>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">buf<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">&amp;&amp;<pos:position pos:line="56" pos:column="27"/></operator> <name><name pos:line="56" pos:column="20">buf<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">-&gt;<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="25">status<pos:position pos:line="56" pos:column="31"/></name></name> <operator pos:line="56" pos:column="32">!=<pos:position pos:line="56" pos:column="34"/></operator> <literal type="number" pos:line="56" pos:column="35">0<pos:position pos:line="56" pos:column="36"/></literal></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37"> <block pos:line="56" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="57" pos:column="17">int<pos:position pos:line="57" pos:column="20"/></name></type> <name pos:line="57" pos:column="21">i<pos:position pos:line="57" pos:column="22"/></name></decl>;<pos:position pos:line="57" pos:column="23"/></decl_stmt>
		<for pos:line="58" pos:column="17">for <control pos:line="58" pos:column="21">(<init><expr><name pos:line="58" pos:column="22">i<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <literal type="number" pos:line="58" pos:column="26">0<pos:position pos:line="58" pos:column="27"/></literal></expr>;<pos:position pos:line="58" pos:column="28"/></init> <condition><expr><name pos:line="58" pos:column="29">i<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">&lt;<pos:position pos:line="58" pos:column="35"/></operator> <name pos:line="58" pos:column="33">checksum_len<pos:position pos:line="58" pos:column="45"/></name> <operator pos:line="58" pos:column="46">&amp;&amp;<pos:position pos:line="58" pos:column="56"/></operator> <name><name pos:line="58" pos:column="49">sender_file_sum<pos:position pos:line="58" pos:column="64"/></name><index pos:line="58" pos:column="64">[<expr><name pos:line="58" pos:column="65">i<pos:position pos:line="58" pos:column="66"/></name></expr>]<pos:position pos:line="58" pos:column="67"/></index></name> <operator pos:line="58" pos:column="68">==<pos:position pos:line="58" pos:column="70"/></operator> <literal type="number" pos:line="58" pos:column="71">0<pos:position pos:line="58" pos:column="72"/></literal></expr>;<pos:position pos:line="58" pos:column="73"/></condition> <incr><expr><name pos:line="58" pos:column="74">i<pos:position pos:line="58" pos:column="75"/></name><operator pos:line="58" pos:column="75">++<pos:position pos:line="58" pos:column="77"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="78"/></control> <block pos:line="58" pos:column="79">{}<pos:position pos:line="58" pos:column="81"/></block></for>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">memset<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><name pos:line="59" pos:column="24">sender_file_sum<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="41">0<pos:position pos:line="59" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="44">checksum_len<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">i<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">==<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="26">checksum_len<pos:position pos:line="60" pos:column="38"/></name></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="61" pos:column="25">sender_file_sum<pos:position pos:line="61" pos:column="40"/></name><index pos:line="61" pos:column="40">[<expr><name pos:line="61" pos:column="41">i<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">-<pos:position pos:line="61" pos:column="43"/></operator><literal type="number" pos:line="61" pos:column="43">1<pos:position pos:line="61" pos:column="44"/></literal></expr>]<pos:position pos:line="61" pos:column="45"/></index></name><operator pos:line="61" pos:column="45">++<pos:position pos:line="61" pos:column="47"/></operator></expr>;<pos:position pos:line="61" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><call><name pos:line="64" pos:column="13">DEBUG_GTE<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">DELTASUM<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="33">2<pos:position pos:line="64" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="36"/></condition><then pos:line="64" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">rprintf<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">FINFO<pos:position pos:line="65" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="65" pos:column="31">"sending file_sum\n"<pos:position pos:line="65" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="66" pos:column="9">write_buf<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><name pos:line="66" pos:column="19">f<pos:position pos:line="66" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="22">sender_file_sum<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">checksum_len<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><call><name pos:line="68" pos:column="13">DEBUG_GTE<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">DELTASUM<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="33">2<pos:position pos:line="68" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36"> <block pos:line="68" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">rprintf<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">FINFO<pos:position pos:line="69" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="32">"false_alarms=%d hash_hits=%d matches=%d\n"<pos:position pos:line="69" pos:column="75"/></literal></expr></argument>,
			<argument><expr><name pos:line="70" pos:column="25">false_alarms<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="39">hash_hits<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="50">matches<pos:position pos:line="70" pos:column="57"/></name></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="73" pos:column="9">total_hash_hits<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">+=<pos:position pos:line="73" pos:column="27"/></operator> <name pos:line="73" pos:column="28">hash_hits<pos:position pos:line="73" pos:column="37"/></name></expr>;<pos:position pos:line="73" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="74" pos:column="9">total_false_alarms<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">+=<pos:position pos:line="74" pos:column="30"/></operator> <name pos:line="74" pos:column="31">false_alarms<pos:position pos:line="74" pos:column="43"/></name></expr>;<pos:position pos:line="74" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="75" pos:column="9">total_matches<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">+=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">matches<pos:position pos:line="75" pos:column="33"/></name></expr>;<pos:position pos:line="75" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">stats<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">.<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="15">literal_data<pos:position pos:line="76" pos:column="27"/></name></name> <operator pos:line="76" pos:column="28">+=<pos:position pos:line="76" pos:column="30"/></operator> <name pos:line="76" pos:column="31">data_transfer<pos:position pos:line="76" pos:column="44"/></name></expr>;<pos:position pos:line="76" pos:column="45"/></expr_stmt>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

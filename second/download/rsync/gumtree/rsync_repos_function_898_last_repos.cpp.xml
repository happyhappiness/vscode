<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_898_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">configLine<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">poptContext<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">con<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">line<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
	<comment type="block" pos:line="2" pos:column="9">/*@modifies con @*/</comment>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">nameLength<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type> <name pos:line="5" pos:column="18">entryType<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type> <name pos:line="6" pos:column="18">opt<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">poptItem<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">item<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">poptItem<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator> <call><name pos:line="7" pos:column="32">alloca<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><sizeof pos:line="7" pos:column="39">sizeof<argument_list pos:line="7" pos:column="45">(<argument><expr><operator pos:line="7" pos:column="46">*<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">item<pos:position pos:line="7" pos:column="51"/></name></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="12">j<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">con<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">appName<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">==<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30">
	<block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">nameLength<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">strlen<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">con<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">appName<pos:position pos:line="12" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    
<comment type="block" pos:line="14" pos:column="1">/*@-boundswrite@*/</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memset<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">item<pos:position pos:line="15" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="21">sizeof<argument_list pos:line="15" pos:column="27">(<argument><expr><operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">item<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">strncmp<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">line<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="23">con<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">appName<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">nameLength<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block type="pseudo"><return pos:line="17" pos:column="50">return;<pos:position pos:line="17" pos:column="57"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">line<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">+=<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">nameLength<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">line<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <literal type="char" pos:line="20" pos:column="18">'\0'<pos:position pos:line="20" pos:column="22"/></literal> <operator pos:line="20" pos:column="23">||<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">!<pos:position pos:line="20" pos:column="27"/></operator><call><name pos:line="20" pos:column="27">isSpace<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">line<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block type="pseudo"><return pos:line="20" pos:column="42">return;<pos:position pos:line="20" pos:column="49"/></return></block></then></if>

    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><operator pos:line="22" pos:column="12">*<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">line<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">!=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="char" pos:line="22" pos:column="21">'\0'<pos:position pos:line="22" pos:column="25"/></literal> <operator pos:line="22" pos:column="26">&amp;&amp;<pos:position pos:line="22" pos:column="36"/></operator> <call><name pos:line="22" pos:column="29">isSpace<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">line<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="44">line<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">++<pos:position pos:line="22" pos:column="50"/></operator></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt></block></while>
    <expr_stmt><expr><name pos:line="23" pos:column="5">entryType<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">line<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><operator pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">line<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <literal type="char" pos:line="24" pos:column="21">'\0'<pos:position pos:line="24" pos:column="25"/></literal> <operator pos:line="24" pos:column="26">||<pos:position pos:line="24" pos:column="28"/></operator> <operator pos:line="24" pos:column="29">!<pos:position pos:line="24" pos:column="30"/></operator><call><name pos:line="24" pos:column="30">isSpace<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name pos:line="24" pos:column="38">line<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="44"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="45">line<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">++<pos:position pos:line="24" pos:column="51"/></operator></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt></block></while>
    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">line<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">++<pos:position pos:line="25" pos:column="12"/></operator> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <literal type="char" pos:line="25" pos:column="15">'\0'<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>

    <while pos:line="27" pos:column="5">while <condition pos:line="27" pos:column="11">(<expr><operator pos:line="27" pos:column="12">*<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">line<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">!=<pos:position pos:line="27" pos:column="20"/></operator> <literal type="char" pos:line="27" pos:column="21">'\0'<pos:position pos:line="27" pos:column="25"/></literal> <operator pos:line="27" pos:column="26">&amp;&amp;<pos:position pos:line="27" pos:column="36"/></operator> <call><name pos:line="27" pos:column="29">isSpace<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">line<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="44">line<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">++<pos:position pos:line="27" pos:column="50"/></operator></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt></block></while>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">line<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">==<pos:position pos:line="28" pos:column="17"/></operator> <literal type="char" pos:line="28" pos:column="18">'\0'<pos:position pos:line="28" pos:column="22"/></literal></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block type="pseudo"><return pos:line="28" pos:column="24">return;<pos:position pos:line="28" pos:column="31"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="29" pos:column="5">opt<pos:position pos:line="29" pos:column="8"/></name> <operator pos:line="29" pos:column="9">=<pos:position pos:line="29" pos:column="10"/></operator> <name pos:line="29" pos:column="11">line<pos:position pos:line="29" pos:column="15"/></name></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt>
    <while pos:line="30" pos:column="5">while <condition pos:line="30" pos:column="11">(<expr><operator pos:line="30" pos:column="12">*<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">line<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <literal type="char" pos:line="30" pos:column="21">'\0'<pos:position pos:line="30" pos:column="25"/></literal> <operator pos:line="30" pos:column="26">||<pos:position pos:line="30" pos:column="28"/></operator> <operator pos:line="30" pos:column="29">!<pos:position pos:line="30" pos:column="30"/></operator><call><name pos:line="30" pos:column="30">isSpace<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">line<pos:position pos:line="30" pos:column="42"/></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="44"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="45">line<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">++<pos:position pos:line="30" pos:column="51"/></operator></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt></block></while>
    <expr_stmt><expr><operator pos:line="31" pos:column="5">*<pos:position pos:line="31" pos:column="6"/></operator><name pos:line="31" pos:column="6">line<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">++<pos:position pos:line="31" pos:column="12"/></operator> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <literal type="char" pos:line="31" pos:column="15">'\0'<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>

    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">*<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">line<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">!=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="char" pos:line="33" pos:column="21">'\0'<pos:position pos:line="33" pos:column="25"/></literal> <operator pos:line="33" pos:column="26">&amp;&amp;<pos:position pos:line="33" pos:column="36"/></operator> <call><name pos:line="33" pos:column="29">isSpace<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">line<pos:position pos:line="33" pos:column="41"/></name></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="44">line<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">++<pos:position pos:line="33" pos:column="50"/></operator></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt></block></while>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">*<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">line<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">==<pos:position pos:line="34" pos:column="17"/></operator> <literal type="char" pos:line="34" pos:column="18">'\0'<pos:position pos:line="34" pos:column="22"/></literal></expr>)<pos:position pos:line="34" pos:column="23"/></condition><then pos:line="34" pos:column="23"> <block type="pseudo"><return pos:line="34" pos:column="24">return;<pos:position pos:line="34" pos:column="31"/></return></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/*@-temptrans@*/</comment> <comment type="block" pos:line="36" pos:column="22">/* FIX: line alias is saved */</comment>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">opt<pos:position pos:line="37" pos:column="12"/></name><index pos:line="37" pos:column="12">[<expr><literal type="number" pos:line="37" pos:column="13">0<pos:position pos:line="37" pos:column="14"/></literal></expr>]<pos:position pos:line="37" pos:column="15"/></index></name> <operator pos:line="37" pos:column="16">==<pos:position pos:line="37" pos:column="18"/></operator> <literal type="char" pos:line="37" pos:column="19">'-'<pos:position pos:line="37" pos:column="22"/></literal> <operator pos:line="37" pos:column="23">&amp;&amp;<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="26">opt<pos:position pos:line="37" pos:column="29"/></name><index pos:line="37" pos:column="29">[<expr><literal type="number" pos:line="37" pos:column="30">1<pos:position pos:line="37" pos:column="31"/></literal></expr>]<pos:position pos:line="37" pos:column="32"/></index></name> <operator pos:line="37" pos:column="33">==<pos:position pos:line="37" pos:column="35"/></operator> <literal type="char" pos:line="37" pos:column="36">'-'<pos:position pos:line="37" pos:column="39"/></literal></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="9">item<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">-&gt;<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="15">option<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">longName<pos:position pos:line="38" pos:column="30"/></name></name> <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <name pos:line="38" pos:column="33">opt<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">+<pos:position pos:line="38" pos:column="38"/></operator> <literal type="number" pos:line="38" pos:column="39">2<pos:position pos:line="38" pos:column="40"/></literal></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><name><name pos:line="39" pos:column="14">opt<pos:position pos:line="39" pos:column="17"/></name><index pos:line="39" pos:column="17">[<expr><literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>]<pos:position pos:line="39" pos:column="20"/></index></name> <operator pos:line="39" pos:column="21">==<pos:position pos:line="39" pos:column="23"/></operator> <literal type="char" pos:line="39" pos:column="24">'-'<pos:position pos:line="39" pos:column="27"/></literal> <operator pos:line="39" pos:column="28">&amp;&amp;<pos:position pos:line="39" pos:column="38"/></operator> <name><name pos:line="39" pos:column="31">opt<pos:position pos:line="39" pos:column="34"/></name><index pos:line="39" pos:column="34">[<expr><literal type="number" pos:line="39" pos:column="35">2<pos:position pos:line="39" pos:column="36"/></literal></expr>]<pos:position pos:line="39" pos:column="37"/></index></name> <operator pos:line="39" pos:column="38">==<pos:position pos:line="39" pos:column="40"/></operator> <literal type="char" pos:line="39" pos:column="41">'\0'<pos:position pos:line="39" pos:column="45"/></literal></expr>)<pos:position pos:line="39" pos:column="46"/></condition><then pos:line="39" pos:column="46">
	<block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="9">item<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">option<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">shortName<pos:position pos:line="40" pos:column="31"/></name></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <name><name pos:line="40" pos:column="34">opt<pos:position pos:line="40" pos:column="37"/></name><index pos:line="40" pos:column="37">[<expr><literal type="number" pos:line="40" pos:column="38">1<pos:position pos:line="40" pos:column="39"/></literal></expr>]<pos:position pos:line="40" pos:column="40"/></index></name></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></then></if></elseif></if>
    <comment type="block" pos:line="41" pos:column="5">/*@=temptrans@*/</comment>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">poptParseArgvString<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">line<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="35">&amp;<pos:position pos:line="43" pos:column="40"/></operator><name><name pos:line="43" pos:column="36">item<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">argc<pos:position pos:line="43" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="48">&amp;<pos:position pos:line="43" pos:column="53"/></operator><name><name pos:line="43" pos:column="49">item<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">-&gt;<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="55">argv<pos:position pos:line="43" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="61"/></condition><then pos:line="43" pos:column="61"> <block type="pseudo"><return pos:line="43" pos:column="62">return;<pos:position pos:line="43" pos:column="69"/></return></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/*@-modobserver@*/</comment>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">item<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">option<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">.<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">argInfo<pos:position pos:line="46" pos:column="25"/></name></name> <operator pos:line="46" pos:column="26">=<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="28">POPT_ARGFLAG_DOC_HIDDEN<pos:position pos:line="46" pos:column="51"/></name></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
    <for pos:line="47" pos:column="5">for <control pos:line="47" pos:column="9">(<init><expr><name pos:line="47" pos:column="10">i<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <literal type="number" pos:line="47" pos:column="14">0<pos:position pos:line="47" pos:column="15"/></literal></expr><operator pos:line="47" pos:column="15">,<pos:position pos:line="47" pos:column="16"/></operator> <expr><name pos:line="47" pos:column="17">j<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <literal type="number" pos:line="47" pos:column="21">0<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></init> <condition><expr><name pos:line="47" pos:column="24">i<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">&lt;<pos:position pos:line="47" pos:column="30"/></operator> <name><name pos:line="47" pos:column="28">item<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">argc<pos:position pos:line="47" pos:column="38"/></name></name></expr>;<pos:position pos:line="47" pos:column="39"/></condition> <incr><expr><name pos:line="47" pos:column="40">i<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">++<pos:position pos:line="47" pos:column="43"/></operator></expr><operator pos:line="47" pos:column="43">,<pos:position pos:line="47" pos:column="44"/></operator> <expr><name pos:line="47" pos:column="45">j<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">++<pos:position pos:line="47" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="49"/></control> <block pos:line="47" pos:column="50">{
	<decl_stmt><decl><type><specifier pos:line="48" pos:column="9">const<pos:position pos:line="48" pos:column="14"/></specifier> <name pos:line="48" pos:column="15">char<pos:position pos:line="48" pos:column="19"/></name> <modifier pos:line="48" pos:column="20">*<pos:position pos:line="48" pos:column="21"/></modifier></type> <name pos:line="48" pos:column="22">f<pos:position pos:line="48" pos:column="23"/></name></decl>;<pos:position pos:line="48" pos:column="24"/></decl_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name pos:line="49" pos:column="14">strncmp<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name><name pos:line="49" pos:column="22">item<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">argv<pos:position pos:line="49" pos:column="32"/></name><index pos:line="49" pos:column="32">[<expr><name pos:line="49" pos:column="33">i<pos:position pos:line="49" pos:column="34"/></name></expr>]<pos:position pos:line="49" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="37">"--POPTdesc="<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="52">sizeof<argument_list pos:line="49" pos:column="58">(<argument><expr><literal type="string" pos:line="49" pos:column="59">"--POPTdesc="<pos:position pos:line="49" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="73"/></argument_list></sizeof><operator pos:line="49" pos:column="73">-<pos:position pos:line="49" pos:column="74"/></operator><literal type="number" pos:line="49" pos:column="74">1<pos:position pos:line="49" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="77"/></condition><then pos:line="49" pos:column="77"> <block pos:line="49" pos:column="78">{
	    <expr_stmt><expr><name pos:line="50" pos:column="13">f<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name><name pos:line="50" pos:column="17">item<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">argv<pos:position pos:line="50" pos:column="27"/></name><index pos:line="50" pos:column="27">[<expr><name pos:line="50" pos:column="28">i<pos:position pos:line="50" pos:column="29"/></name></expr>]<pos:position pos:line="50" pos:column="30"/></index></name> <operator pos:line="50" pos:column="31">+<pos:position pos:line="50" pos:column="32"/></operator> <sizeof pos:line="50" pos:column="33">sizeof<argument_list pos:line="50" pos:column="39">(<argument><expr><literal type="string" pos:line="50" pos:column="40">"--POPTdesc="<pos:position pos:line="50" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></sizeof></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>
	    <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name><name pos:line="51" pos:column="17">f<pos:position pos:line="51" pos:column="18"/></name><index pos:line="51" pos:column="18">[<expr><literal type="number" pos:line="51" pos:column="19">0<pos:position pos:line="51" pos:column="20"/></literal></expr>]<pos:position pos:line="51" pos:column="21"/></index></name> <operator pos:line="51" pos:column="22">==<pos:position pos:line="51" pos:column="24"/></operator> <literal type="char" pos:line="51" pos:column="25">'$'<pos:position pos:line="51" pos:column="28"/></literal> <operator pos:line="51" pos:column="29">&amp;&amp;<pos:position pos:line="51" pos:column="39"/></operator> <name><name pos:line="51" pos:column="32">f<pos:position pos:line="51" pos:column="33"/></name><index pos:line="51" pos:column="33">[<expr><literal type="number" pos:line="51" pos:column="34">1<pos:position pos:line="51" pos:column="35"/></literal></expr>]<pos:position pos:line="51" pos:column="36"/></index></name> <operator pos:line="51" pos:column="37">==<pos:position pos:line="51" pos:column="39"/></operator> <literal type="char" pos:line="51" pos:column="40">'"'<pos:position pos:line="51" pos:column="43"/></literal></expr>)<pos:position pos:line="51" pos:column="44"/></condition><then pos:line="51" pos:column="44"> <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="45">f<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">++<pos:position pos:line="51" pos:column="48"/></operator></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><name><name pos:line="52" pos:column="13">item<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">option<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">.<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">descrip<pos:position pos:line="52" pos:column="33"/></name></name> <operator pos:line="52" pos:column="34">=<pos:position pos:line="52" pos:column="35"/></operator> <name pos:line="52" pos:column="36">f<pos:position pos:line="52" pos:column="37"/></name></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="53" pos:column="13">item<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">-&gt;<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="19">option<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">.<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="26">argInfo<pos:position pos:line="53" pos:column="33"/></name></name> <operator pos:line="53" pos:column="34">&amp;=<pos:position pos:line="53" pos:column="40"/></operator> <operator pos:line="53" pos:column="37">~<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">POPT_ARGFLAG_DOC_HIDDEN<pos:position pos:line="53" pos:column="61"/></name></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="54" pos:column="13">j<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">--<pos:position pos:line="54" pos:column="16"/></operator></expr>;<pos:position pos:line="54" pos:column="17"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></then> <elseif pos:line="55" pos:column="11">else
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><call><name pos:line="56" pos:column="14">strncmp<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name><name pos:line="56" pos:column="22">item<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">argv<pos:position pos:line="56" pos:column="32"/></name><index pos:line="56" pos:column="32">[<expr><name pos:line="56" pos:column="33">i<pos:position pos:line="56" pos:column="34"/></name></expr>]<pos:position pos:line="56" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="37">"--POPTargs="<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="52">sizeof<argument_list pos:line="56" pos:column="58">(<argument><expr><literal type="string" pos:line="56" pos:column="59">"--POPTargs="<pos:position pos:line="56" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></sizeof><operator pos:line="56" pos:column="73">-<pos:position pos:line="56" pos:column="74"/></operator><literal type="number" pos:line="56" pos:column="74">1<pos:position pos:line="56" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="77"/></condition><then pos:line="56" pos:column="77"> <block pos:line="56" pos:column="78">{
	    <expr_stmt><expr><name pos:line="57" pos:column="13">f<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name><name pos:line="57" pos:column="17">item<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">-&gt;<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="23">argv<pos:position pos:line="57" pos:column="27"/></name><index pos:line="57" pos:column="27">[<expr><name pos:line="57" pos:column="28">i<pos:position pos:line="57" pos:column="29"/></name></expr>]<pos:position pos:line="57" pos:column="30"/></index></name> <operator pos:line="57" pos:column="31">+<pos:position pos:line="57" pos:column="32"/></operator> <sizeof pos:line="57" pos:column="33">sizeof<argument_list pos:line="57" pos:column="39">(<argument><expr><literal type="string" pos:line="57" pos:column="40">"--POPTargs="<pos:position pos:line="57" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></sizeof></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
	    <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name><name pos:line="58" pos:column="17">f<pos:position pos:line="58" pos:column="18"/></name><index pos:line="58" pos:column="18">[<expr><literal type="number" pos:line="58" pos:column="19">0<pos:position pos:line="58" pos:column="20"/></literal></expr>]<pos:position pos:line="58" pos:column="21"/></index></name> <operator pos:line="58" pos:column="22">==<pos:position pos:line="58" pos:column="24"/></operator> <literal type="char" pos:line="58" pos:column="25">'$'<pos:position pos:line="58" pos:column="28"/></literal> <operator pos:line="58" pos:column="29">&amp;&amp;<pos:position pos:line="58" pos:column="39"/></operator> <name><name pos:line="58" pos:column="32">f<pos:position pos:line="58" pos:column="33"/></name><index pos:line="58" pos:column="33">[<expr><literal type="number" pos:line="58" pos:column="34">1<pos:position pos:line="58" pos:column="35"/></literal></expr>]<pos:position pos:line="58" pos:column="36"/></index></name> <operator pos:line="58" pos:column="37">==<pos:position pos:line="58" pos:column="39"/></operator> <literal type="char" pos:line="58" pos:column="40">'"'<pos:position pos:line="58" pos:column="43"/></literal></expr>)<pos:position pos:line="58" pos:column="44"/></condition><then pos:line="58" pos:column="44"> <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="45">f<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">++<pos:position pos:line="58" pos:column="48"/></operator></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt></block></then></if>
	    <expr_stmt><expr><name><name pos:line="59" pos:column="13">item<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">option<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">.<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">argDescrip<pos:position pos:line="59" pos:column="36"/></name></name> <operator pos:line="59" pos:column="37">=<pos:position pos:line="59" pos:column="38"/></operator> <name pos:line="59" pos:column="39">f<pos:position pos:line="59" pos:column="40"/></name></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="60" pos:column="13">item<pos:position pos:line="60" pos:column="17"/></name><operator pos:line="60" pos:column="17">-&gt;<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="19">option<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">.<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="26">argInfo<pos:position pos:line="60" pos:column="33"/></name></name> <operator pos:line="60" pos:column="34">&amp;=<pos:position pos:line="60" pos:column="40"/></operator> <operator pos:line="60" pos:column="37">~<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="38">POPT_ARGFLAG_DOC_HIDDEN<pos:position pos:line="60" pos:column="61"/></name></expr>;<pos:position pos:line="60" pos:column="62"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="61" pos:column="13">item<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">-&gt;<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="19">option<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">.<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="26">argInfo<pos:position pos:line="61" pos:column="33"/></name></name> <operator pos:line="61" pos:column="34">|=<pos:position pos:line="61" pos:column="36"/></operator> <name pos:line="61" pos:column="37">POPT_ARG_STRING<pos:position pos:line="61" pos:column="52"/></name></expr>;<pos:position pos:line="61" pos:column="53"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="62" pos:column="13">j<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">--<pos:position pos:line="62" pos:column="16"/></operator></expr>;<pos:position pos:line="62" pos:column="17"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if></elseif> <elseif pos:line="63" pos:column="11">else
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">j<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">!=<pos:position pos:line="64" pos:column="17"/></operator> <name pos:line="64" pos:column="18">i<pos:position pos:line="64" pos:column="19"/></name></expr>)<pos:position pos:line="64" pos:column="20"/></condition><then pos:line="64" pos:column="20">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="13">item<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">argv<pos:position pos:line="65" pos:column="23"/></name><index pos:line="65" pos:column="23">[<expr><name pos:line="65" pos:column="24">j<pos:position pos:line="65" pos:column="25"/></name></expr>]<pos:position pos:line="65" pos:column="26"/></index></name> <operator pos:line="65" pos:column="27">=<pos:position pos:line="65" pos:column="28"/></operator> <name><name pos:line="65" pos:column="29">item<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">-&gt;<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="35">argv<pos:position pos:line="65" pos:column="39"/></name><index pos:line="65" pos:column="39">[<expr><name pos:line="65" pos:column="40">i<pos:position pos:line="65" pos:column="41"/></name></expr>]<pos:position pos:line="65" pos:column="42"/></index></name></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="66" pos:column="6"/></block></for>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">j<pos:position pos:line="67" pos:column="10"/></name> <operator pos:line="67" pos:column="11">!=<pos:position pos:line="67" pos:column="13"/></operator> <name pos:line="67" pos:column="14">i<pos:position pos:line="67" pos:column="15"/></name></expr>)<pos:position pos:line="67" pos:column="16"/></condition><then pos:line="67" pos:column="16"> <block pos:line="67" pos:column="17">{
	<expr_stmt><expr><name><name pos:line="68" pos:column="9">item<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">argv<pos:position pos:line="68" pos:column="19"/></name><index pos:line="68" pos:column="19">[<expr><name pos:line="68" pos:column="20">j<pos:position pos:line="68" pos:column="21"/></name></expr>]<pos:position pos:line="68" pos:column="22"/></index></name> <operator pos:line="68" pos:column="23">=<pos:position pos:line="68" pos:column="24"/></operator> <name pos:line="68" pos:column="25">NULL<pos:position pos:line="68" pos:column="29"/></name></expr>;<pos:position pos:line="68" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">item<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">argc<pos:position pos:line="69" pos:column="19"/></name></name> <operator pos:line="69" pos:column="20">=<pos:position pos:line="69" pos:column="21"/></operator> <name pos:line="69" pos:column="22">j<pos:position pos:line="69" pos:column="23"/></name></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="71" pos:column="5">/*@=modobserver@*/</comment>
<comment type="block" pos:line="72" pos:column="1">/*@=boundswrite@*/</comment>
	
    <comment type="block" pos:line="74" pos:column="5">/*@-nullstate@*/</comment> <comment type="block" pos:line="74" pos:column="22">/* FIX: item-&gt;argv[] may be NULL */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">!<pos:position pos:line="75" pos:column="10"/></operator><call><name pos:line="75" pos:column="10">strcmp<pos:position pos:line="75" pos:column="16"/></name><argument_list pos:line="75" pos:column="16">(<argument><expr><name pos:line="75" pos:column="17">entryType<pos:position pos:line="75" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="28">"alias"<pos:position pos:line="75" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="37"/></condition><then pos:line="75" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="76" pos:column="9">(<pos:position pos:line="76" pos:column="10"/></operator><name pos:line="76" pos:column="10">void<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">)<pos:position pos:line="76" pos:column="15"/></operator> <call><name pos:line="76" pos:column="16">poptAddItem<pos:position pos:line="76" pos:column="27"/></name><argument_list pos:line="76" pos:column="27">(<argument><expr><name pos:line="76" pos:column="28">con<pos:position pos:line="76" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="33">item<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="39">0<pos:position pos:line="76" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="42"/></expr_stmt></block></then>
    <elseif pos:line="77" pos:column="5">else <if pos:line="77" pos:column="10">if <condition pos:line="77" pos:column="13">(<expr><operator pos:line="77" pos:column="14">!<pos:position pos:line="77" pos:column="15"/></operator><call><name pos:line="77" pos:column="15">strcmp<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">entryType<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="33">"exec"<pos:position pos:line="77" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="78" pos:column="9">(<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">void<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">)<pos:position pos:line="78" pos:column="15"/></operator> <call><name pos:line="78" pos:column="16">poptAddItem<pos:position pos:line="78" pos:column="27"/></name><argument_list pos:line="78" pos:column="27">(<argument><expr><name pos:line="78" pos:column="28">con<pos:position pos:line="78" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="33">item<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="39">1<pos:position pos:line="78" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt></block></then></if></elseif></if>
    <comment type="block" pos:line="79" pos:column="5">/*@=nullstate@*/</comment>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

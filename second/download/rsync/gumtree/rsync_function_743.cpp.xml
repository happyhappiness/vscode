<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_743.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">receive_file_entry<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">file_struct<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier><modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">fptr<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
			       <parameter><decl><type><name pos:line="2" pos:column="32">unsigned<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">flags<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">f<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">time_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">last_time<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">mode_t<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">last_mode<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">DEV64_T<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">last_rdev<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">uid_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">last_uid<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">gid_t<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">last_gid<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">char<pos:position pos:line="9" pos:column="20"/></name></type> <name><name pos:line="9" pos:column="21">lastname<pos:position pos:line="9" pos:column="29"/></name><index pos:line="9" pos:column="29">[<expr><name pos:line="9" pos:column="30">MAXPATHLEN<pos:position pos:line="9" pos:column="40"/></name></expr>]<pos:position pos:line="9" pos:column="41"/></index></name></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">thisname<pos:position pos:line="10" pos:column="22"/></name><index pos:line="10" pos:column="22">[<expr><name pos:line="10" pos:column="23">MAXPATHLEN<pos:position pos:line="10" pos:column="33"/></name></expr>]<pos:position pos:line="10" pos:column="34"/></index></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">unsigned<pos:position pos:line="11" pos:column="17"/></name> <name pos:line="11" pos:column="18">int<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">l1<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="30">l2<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">p<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">file_struct<pos:position pos:line="13" pos:column="27"/></name></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">file<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">flags<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&amp;<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="21">SAME_NAME<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">l1<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">read_byte<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">f<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">flags<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="21">LONG_NAME<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">l2<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">read_int<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">f<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">l2<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">read_byte<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">f<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">file<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <operator pos:line="23" pos:column="16">new<pos:position pos:line="23" pos:column="19"/></operator><operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator>struct <name pos:line="23" pos:column="27">file_struct<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">file<pos:position pos:line="24" pos:column="18"/></name></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">out_of_memory<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="string" pos:line="25" pos:column="31">"receive_file_entry"<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">memset<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">char<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></operator><operator pos:line="26" pos:column="23">)<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">file<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="34">sizeof<argument_list pos:line="26" pos:column="40">(<argument><expr><operator pos:line="26" pos:column="41">*<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">file<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><operator pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="11">fptr<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">file<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">l2<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">&gt;=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="19">MAXPATHLEN<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">-<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">l1<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">rprintf<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">FERROR<pos:position pos:line="30" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="31" pos:column="25">"overflow: flags=0x%x l1=%d l2=%d lastname=%s\n"<pos:position pos:line="31" pos:column="73"/></literal></expr></argument>,
			<argument><expr><name pos:line="32" pos:column="25">flags<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="32">l1<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">l2<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">lastname<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">overflow<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><literal type="string" pos:line="33" pos:column="26">"receive_file_entry"<pos:position pos:line="33" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">strlcpy<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">thisname<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="27">lastname<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">l1<pos:position pos:line="36" pos:column="39"/></name> <operator pos:line="36" pos:column="40">+<pos:position pos:line="36" pos:column="41"/></operator> <literal type="number" pos:line="36" pos:column="42">1<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">read_sbuf<pos:position pos:line="37" pos:column="18"/></name><argument_list pos:line="37" pos:column="18">(<argument><expr><name pos:line="37" pos:column="19">f<pos:position pos:line="37" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator><name><name pos:line="37" pos:column="23">thisname<pos:position pos:line="37" pos:column="31"/></name><index pos:line="37" pos:column="31">[<expr><name pos:line="37" pos:column="32">l1<pos:position pos:line="37" pos:column="34"/></name></expr>]<pos:position pos:line="37" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">l2<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">thisname<pos:position pos:line="38" pos:column="17"/></name><index pos:line="38" pos:column="17">[<expr><name pos:line="38" pos:column="18">l1<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">+<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">l2<pos:position pos:line="38" pos:column="25"/></name></expr>]<pos:position pos:line="38" pos:column="26"/></index></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">strlcpy<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><name pos:line="40" pos:column="17">lastname<pos:position pos:line="40" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="27">thisname<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">MAXPATHLEN<pos:position pos:line="40" pos:column="47"/></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">lastname<pos:position pos:line="41" pos:column="17"/></name><index pos:line="41" pos:column="17">[<expr><name pos:line="41" pos:column="18">MAXPATHLEN<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">-<pos:position pos:line="41" pos:column="30"/></operator> <literal type="number" pos:line="41" pos:column="31">1<pos:position pos:line="41" pos:column="32"/></literal></expr>]<pos:position pos:line="41" pos:column="33"/></index></name> <operator pos:line="41" pos:column="34">=<pos:position pos:line="41" pos:column="35"/></operator> <literal type="number" pos:line="41" pos:column="36">0<pos:position pos:line="41" pos:column="37"/></literal></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">clean_fname<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">thisname<pos:position pos:line="43" pos:column="29"/></name></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">sanitize_paths<pos:position pos:line="45" pos:column="27"/></name></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28"> <block pos:line="45" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">sanitize_path<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">thisname<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">NULL<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">p<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">strrchr<pos:position pos:line="49" pos:column="25"/></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name pos:line="49" pos:column="26">thisname<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="36">'/'<pos:position pos:line="49" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call><operator pos:line="49" pos:column="40">)<pos:position pos:line="49" pos:column="41"/></operator></expr>)<pos:position pos:line="49" pos:column="42"/></condition><then pos:line="49" pos:column="42"> <block pos:line="49" pos:column="43">{
		<decl_stmt><decl><specifier pos:line="50" pos:column="17">static<pos:position pos:line="50" pos:column="23"/></specifier> <type><name pos:line="50" pos:column="24">char<pos:position pos:line="50" pos:column="28"/></name> <modifier pos:line="50" pos:column="29">*<pos:position pos:line="50" pos:column="30"/></modifier></type><name pos:line="50" pos:column="30">lastdir<pos:position pos:line="50" pos:column="37"/></name></decl>;<pos:position pos:line="50" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><operator pos:line="51" pos:column="17">*<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">p<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <literal type="number" pos:line="51" pos:column="22">0<pos:position pos:line="51" pos:column="23"/></literal></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">lastdir<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">&amp;&amp;<pos:position pos:line="52" pos:column="39"/></operator> <call><name pos:line="52" pos:column="32">strcmp<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">thisname<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">lastdir<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call> <operator pos:line="52" pos:column="58">==<pos:position pos:line="52" pos:column="60"/></operator> <literal type="number" pos:line="52" pos:column="61">0<pos:position pos:line="52" pos:column="62"/></literal></expr>)<pos:position pos:line="52" pos:column="63"/></condition><then pos:line="52" pos:column="63"> <block pos:line="52" pos:column="64">{
			<expr_stmt><expr><name><name pos:line="53" pos:column="25">file<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">-&gt;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="31">dirname<pos:position pos:line="53" pos:column="38"/></name></name> <operator pos:line="53" pos:column="39">=<pos:position pos:line="53" pos:column="40"/></operator> <name pos:line="53" pos:column="41">lastdir<pos:position pos:line="53" pos:column="48"/></name></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></then> <else pos:line="54" pos:column="19">else <block pos:line="54" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="55" pos:column="25">file<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">dirname<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <call><name pos:line="55" pos:column="41">strdup<pos:position pos:line="55" pos:column="47"/></name><argument_list pos:line="55" pos:column="47">(<argument><expr><name pos:line="55" pos:column="48">thisname<pos:position pos:line="55" pos:column="56"/></name></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="56" pos:column="25">lastdir<pos:position pos:line="56" pos:column="32"/></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator> <name><name pos:line="56" pos:column="35">file<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">dirname<pos:position pos:line="56" pos:column="48"/></name></name></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="58" pos:column="17">file<pos:position pos:line="58" pos:column="21"/></name><operator pos:line="58" pos:column="21">-&gt;<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="23">basename<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">=<pos:position pos:line="58" pos:column="33"/></operator> <call><name pos:line="58" pos:column="34">strdup<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">p<pos:position pos:line="58" pos:column="42"/></name> <operator pos:line="58" pos:column="43">+<pos:position pos:line="58" pos:column="44"/></operator> <literal type="number" pos:line="58" pos:column="45">1<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then> <else pos:line="59" pos:column="11">else <block pos:line="59" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">file<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">dirname<pos:position pos:line="60" pos:column="30"/></name></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">NULL<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="61" pos:column="17">file<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">basename<pos:position pos:line="61" pos:column="31"/></name></name> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <call><name pos:line="61" pos:column="34">strdup<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">thisname<pos:position pos:line="61" pos:column="49"/></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></else></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">!<pos:position pos:line="64" pos:column="14"/></operator><name><name pos:line="64" pos:column="14">file<pos:position pos:line="64" pos:column="18"/></name><operator pos:line="64" pos:column="18">-&gt;<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="20">basename<pos:position pos:line="64" pos:column="28"/></name></name></expr>)<pos:position pos:line="64" pos:column="29"/></condition><then pos:line="64" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">out_of_memory<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><literal type="string" pos:line="65" pos:column="31">"receive_file_entry 1"<pos:position pos:line="65" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="55"/></expr_stmt></block></then></if>


	<expr_stmt><expr><name><name pos:line="68" pos:column="9">file<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">flags<pos:position pos:line="68" pos:column="20"/></name></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">flags<pos:position pos:line="68" pos:column="28"/></name></expr>;<pos:position pos:line="68" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">file<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">length<pos:position pos:line="69" pos:column="21"/></name></name> <operator pos:line="69" pos:column="22">=<pos:position pos:line="69" pos:column="23"/></operator> <call><name pos:line="69" pos:column="24">read_longint<pos:position pos:line="69" pos:column="36"/></name><argument_list pos:line="69" pos:column="36">(<argument><expr><name pos:line="69" pos:column="37">f<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">file<pos:position pos:line="70" pos:column="13"/></name><operator pos:line="70" pos:column="13">-&gt;<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="15">modtime<pos:position pos:line="70" pos:column="22"/></name></name> <operator pos:line="70" pos:column="23">=<pos:position pos:line="70" pos:column="24"/></operator>
	    <ternary><condition><expr><operator pos:line="71" pos:column="13">(<pos:position pos:line="71" pos:column="14"/></operator><name pos:line="71" pos:column="14">flags<pos:position pos:line="71" pos:column="19"/></name> <operator pos:line="71" pos:column="20">&amp;<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="22">SAME_TIME<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">)<pos:position pos:line="71" pos:column="32"/></operator></expr> ?<pos:position pos:line="71" pos:column="34"/></condition><then pos:line="71" pos:column="34"> <expr><name pos:line="71" pos:column="35">last_time<pos:position pos:line="71" pos:column="44"/></name></expr> <pos:position pos:line="71" pos:column="45"/></then><else pos:line="71" pos:column="45">: <expr><operator pos:line="71" pos:column="47">(<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="48">time_t<pos:position pos:line="71" pos:column="54"/></name><operator pos:line="71" pos:column="54">)<pos:position pos:line="71" pos:column="55"/></operator> <call><name pos:line="71" pos:column="56">read_int<pos:position pos:line="71" pos:column="64"/></name><argument_list pos:line="71" pos:column="64">(<argument><expr><name pos:line="71" pos:column="65">f<pos:position pos:line="71" pos:column="66"/></name></expr></argument>)<pos:position pos:line="71" pos:column="67"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="72" pos:column="9">file<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">-&gt;<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="15">mode<pos:position pos:line="72" pos:column="19"/></name></name> <operator pos:line="72" pos:column="20">=<pos:position pos:line="72" pos:column="21"/></operator>
	    <ternary><condition><expr><operator pos:line="73" pos:column="13">(<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">flags<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">&amp;<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="22">SAME_MODE<pos:position pos:line="73" pos:column="31"/></name><operator pos:line="73" pos:column="31">)<pos:position pos:line="73" pos:column="32"/></operator></expr> ?<pos:position pos:line="73" pos:column="34"/></condition><then pos:line="73" pos:column="34"> <expr><name pos:line="73" pos:column="35">last_mode<pos:position pos:line="73" pos:column="44"/></name></expr> <pos:position pos:line="73" pos:column="45"/></then><else pos:line="73" pos:column="45">: <expr><call><name pos:line="73" pos:column="47">from_wire_mode<pos:position pos:line="73" pos:column="61"/></name><argument_list pos:line="73" pos:column="61">(<argument><expr><call><name pos:line="73" pos:column="62">read_int<pos:position pos:line="73" pos:column="70"/></name><argument_list pos:line="73" pos:column="70">(<argument><expr><name pos:line="73" pos:column="71">f<pos:position pos:line="73" pos:column="72"/></name></expr></argument>)<pos:position pos:line="73" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="74"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="73" pos:column="75"/></expr_stmt>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">preserve_uid<pos:position pos:line="74" pos:column="25"/></name></expr>)<pos:position pos:line="74" pos:column="26"/></condition><then pos:line="74" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="17">file<pos:position pos:line="75" pos:column="21"/></name><operator pos:line="75" pos:column="21">-&gt;<pos:position pos:line="75" pos:column="26"/></operator><name pos:line="75" pos:column="23">uid<pos:position pos:line="75" pos:column="26"/></name></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator>
		    <ternary><condition><expr><operator pos:line="76" pos:column="21">(<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="22">flags<pos:position pos:line="76" pos:column="27"/></name> <operator pos:line="76" pos:column="28">&amp;<pos:position pos:line="76" pos:column="33"/></operator> <name pos:line="76" pos:column="30">SAME_UID<pos:position pos:line="76" pos:column="38"/></name><operator pos:line="76" pos:column="38">)<pos:position pos:line="76" pos:column="39"/></operator></expr> ?<pos:position pos:line="76" pos:column="41"/></condition><then pos:line="76" pos:column="41"> <expr><name pos:line="76" pos:column="42">last_uid<pos:position pos:line="76" pos:column="50"/></name></expr> <pos:position pos:line="76" pos:column="51"/></then><else pos:line="76" pos:column="51">: <expr><operator pos:line="76" pos:column="53">(<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="54">uid_t<pos:position pos:line="76" pos:column="59"/></name><operator pos:line="76" pos:column="59">)<pos:position pos:line="76" pos:column="60"/></operator> <call><name pos:line="76" pos:column="61">read_int<pos:position pos:line="76" pos:column="69"/></name><argument_list pos:line="76" pos:column="69">(<argument><expr><name pos:line="76" pos:column="70">f<pos:position pos:line="76" pos:column="71"/></name></expr></argument>)<pos:position pos:line="76" pos:column="72"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="76" pos:column="73"/></expr_stmt></block></then></if>
	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">preserve_gid<pos:position pos:line="77" pos:column="25"/></name></expr>)<pos:position pos:line="77" pos:column="26"/></condition><then pos:line="77" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="17">file<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">-&gt;<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="23">gid<pos:position pos:line="78" pos:column="26"/></name></name> <operator pos:line="78" pos:column="27">=<pos:position pos:line="78" pos:column="28"/></operator>
		    <ternary><condition><expr><operator pos:line="79" pos:column="21">(<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="22">flags<pos:position pos:line="79" pos:column="27"/></name> <operator pos:line="79" pos:column="28">&amp;<pos:position pos:line="79" pos:column="33"/></operator> <name pos:line="79" pos:column="30">SAME_GID<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">)<pos:position pos:line="79" pos:column="39"/></operator></expr> ?<pos:position pos:line="79" pos:column="41"/></condition><then pos:line="79" pos:column="41"> <expr><name pos:line="79" pos:column="42">last_gid<pos:position pos:line="79" pos:column="50"/></name></expr> <pos:position pos:line="79" pos:column="51"/></then><else pos:line="79" pos:column="51">: <expr><operator pos:line="79" pos:column="53">(<pos:position pos:line="79" pos:column="54"/></operator><name pos:line="79" pos:column="54">gid_t<pos:position pos:line="79" pos:column="59"/></name><operator pos:line="79" pos:column="59">)<pos:position pos:line="79" pos:column="60"/></operator> <call><name pos:line="79" pos:column="61">read_int<pos:position pos:line="79" pos:column="69"/></name><argument_list pos:line="79" pos:column="69">(<argument><expr><name pos:line="79" pos:column="70">f<pos:position pos:line="79" pos:column="71"/></name></expr></argument>)<pos:position pos:line="79" pos:column="72"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="79" pos:column="73"/></expr_stmt></block></then></if>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">preserve_devices<pos:position pos:line="80" pos:column="29"/></name> <operator pos:line="80" pos:column="30">&amp;&amp;<pos:position pos:line="80" pos:column="40"/></operator> <call><name pos:line="80" pos:column="33">IS_DEVICE<pos:position pos:line="80" pos:column="42"/></name><argument_list pos:line="80" pos:column="42">(<argument><expr><name><name pos:line="80" pos:column="43">file<pos:position pos:line="80" pos:column="47"/></name><operator pos:line="80" pos:column="47">-&gt;<pos:position pos:line="80" pos:column="52"/></operator><name pos:line="80" pos:column="49">mode<pos:position pos:line="80" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="55"/></condition><then pos:line="80" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="17">file<pos:position pos:line="81" pos:column="21"/></name><operator pos:line="81" pos:column="21">-&gt;<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="23">rdev<pos:position pos:line="81" pos:column="27"/></name></name> <operator pos:line="81" pos:column="28">=<pos:position pos:line="81" pos:column="29"/></operator>
		    <ternary><condition><expr><operator pos:line="82" pos:column="21">(<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">flags<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">&amp;<pos:position pos:line="82" pos:column="33"/></operator> <name pos:line="82" pos:column="30">SAME_RDEV<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">)<pos:position pos:line="82" pos:column="40"/></operator></expr> ?<pos:position pos:line="82" pos:column="42"/></condition><then pos:line="82" pos:column="42"> <expr><name pos:line="82" pos:column="43">last_rdev<pos:position pos:line="82" pos:column="52"/></name></expr> <pos:position pos:line="82" pos:column="53"/></then><else pos:line="82" pos:column="53">: <expr><operator pos:line="82" pos:column="55">(<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="56">DEV64_T<pos:position pos:line="82" pos:column="63"/></name><operator pos:line="82" pos:column="63">)<pos:position pos:line="82" pos:column="64"/></operator> <call><name pos:line="82" pos:column="65">read_int<pos:position pos:line="82" pos:column="73"/></name><argument_list pos:line="82" pos:column="73">(<argument><expr><name pos:line="82" pos:column="74">f<pos:position pos:line="82" pos:column="75"/></name></expr></argument>)<pos:position pos:line="82" pos:column="76"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="82" pos:column="77"/></expr_stmt></block></then></if>

	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">preserve_links<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">&amp;&amp;<pos:position pos:line="84" pos:column="38"/></operator> <call><name pos:line="84" pos:column="31">S_ISLNK<pos:position pos:line="84" pos:column="38"/></name><argument_list pos:line="84" pos:column="38">(<argument><expr><name><name pos:line="84" pos:column="39">file<pos:position pos:line="84" pos:column="43"/></name><operator pos:line="84" pos:column="43">-&gt;<pos:position pos:line="84" pos:column="48"/></operator><name pos:line="84" pos:column="45">mode<pos:position pos:line="84" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="51"/></condition><then pos:line="84" pos:column="51"> <block pos:line="84" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="85" pos:column="17">int<pos:position pos:line="85" pos:column="20"/></name></type> <name pos:line="85" pos:column="21">l<pos:position pos:line="85" pos:column="22"/></name> <init pos:line="85" pos:column="23">= <expr><call><name pos:line="85" pos:column="25">read_int<pos:position pos:line="85" pos:column="33"/></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">f<pos:position pos:line="85" pos:column="35"/></name></expr></argument>)<pos:position pos:line="85" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="37"/></decl_stmt>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">l<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">&lt;<pos:position pos:line="86" pos:column="27"/></operator> <literal type="number" pos:line="86" pos:column="25">0<pos:position pos:line="86" pos:column="26"/></literal></expr>)<pos:position pos:line="86" pos:column="27"/></condition><then pos:line="86" pos:column="27"> <block pos:line="86" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">rprintf<pos:position pos:line="87" pos:column="32"/></name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">FERROR<pos:position pos:line="87" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="41">"overflow: l=%d\n"<pos:position pos:line="87" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="61">l<pos:position pos:line="87" pos:column="62"/></name></expr></argument>)<pos:position pos:line="87" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">overflow<pos:position pos:line="88" pos:column="33"/></name><argument_list pos:line="88" pos:column="33">(<argument><expr><literal type="string" pos:line="88" pos:column="34">"receive_file_entry"<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="89" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="90" pos:column="17">file<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">-&gt;<pos:position pos:line="90" pos:column="26"/></operator><name pos:line="90" pos:column="23">link<pos:position pos:line="90" pos:column="27"/></name></name> <operator pos:line="90" pos:column="28">=<pos:position pos:line="90" pos:column="29"/></operator> <call><name pos:line="90" pos:column="30">new_array<pos:position pos:line="90" pos:column="39"/></name><argument_list pos:line="90" pos:column="39">(<argument><expr><name pos:line="90" pos:column="40">char<pos:position pos:line="90" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="46">l<pos:position pos:line="90" pos:column="47"/></name> <operator pos:line="90" pos:column="48">+<pos:position pos:line="90" pos:column="49"/></operator> <literal type="number" pos:line="90" pos:column="50">1<pos:position pos:line="90" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="53"/></expr_stmt>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><operator pos:line="91" pos:column="21">!<pos:position pos:line="91" pos:column="22"/></operator><name><name pos:line="91" pos:column="22">file<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">-&gt;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="28">link<pos:position pos:line="91" pos:column="32"/></name></name></expr>)<pos:position pos:line="91" pos:column="33"/></condition><then pos:line="91" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="25">out_of_memory<pos:position pos:line="92" pos:column="38"/></name><argument_list pos:line="92" pos:column="38">(<argument><expr><literal type="string" pos:line="92" pos:column="39">"receive_file_entry 2"<pos:position pos:line="92" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="63"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">read_sbuf<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">(<argument><expr><name pos:line="93" pos:column="27">f<pos:position pos:line="93" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="30">file<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">link<pos:position pos:line="93" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="42">l<pos:position pos:line="93" pos:column="43"/></name></expr></argument>)<pos:position pos:line="93" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="45"/></expr_stmt>
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">sanitize_paths<pos:position pos:line="94" pos:column="35"/></name></expr>)<pos:position pos:line="94" pos:column="36"/></condition><then pos:line="94" pos:column="36"> <block pos:line="94" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">sanitize_path<pos:position pos:line="95" pos:column="38"/></name><argument_list pos:line="95" pos:column="38">(<argument><expr><name><name pos:line="95" pos:column="39">file<pos:position pos:line="95" pos:column="43"/></name><operator pos:line="95" pos:column="43">-&gt;<pos:position pos:line="95" pos:column="48"/></operator><name pos:line="95" pos:column="45">link<pos:position pos:line="95" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="51">file<pos:position pos:line="95" pos:column="55"/></name><operator pos:line="95" pos:column="55">-&gt;<pos:position pos:line="95" pos:column="60"/></operator><name pos:line="95" pos:column="57">dirname<pos:position pos:line="95" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="96" pos:column="18"/></block></then></if>
	}<pos:position pos:line="97" pos:column="10"/></block></then></if>
<cpp:if pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">if<pos:position pos:line="98" pos:column="4"/></cpp:directive> <expr><name pos:line="98" pos:column="5">SUPPORT_HARD_LINKS<pos:position pos:line="98" pos:column="23"/></name></expr></cpp:if>
	<if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name pos:line="99" pos:column="13">preserve_hard_links<pos:position pos:line="99" pos:column="32"/></name> <operator pos:line="99" pos:column="33">&amp;&amp;<pos:position pos:line="99" pos:column="43"/></operator> <call><name pos:line="99" pos:column="36">S_ISREG<pos:position pos:line="99" pos:column="43"/></name><argument_list pos:line="99" pos:column="43">(<argument><expr><name><name pos:line="99" pos:column="44">file<pos:position pos:line="99" pos:column="48"/></name><operator pos:line="99" pos:column="48">-&gt;<pos:position pos:line="99" pos:column="53"/></operator><name pos:line="99" pos:column="50">mode<pos:position pos:line="99" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="56"/></condition><then pos:line="99" pos:column="56"> <block pos:line="99" pos:column="57">{
		<if pos:line="100" pos:column="17">if <condition pos:line="100" pos:column="20">(<expr><name pos:line="100" pos:column="21">protocol_version<pos:position pos:line="100" pos:column="37"/></name> <operator pos:line="100" pos:column="38">&lt;<pos:position pos:line="100" pos:column="42"/></operator> <literal type="number" pos:line="100" pos:column="40">26<pos:position pos:line="100" pos:column="42"/></literal></expr>)<pos:position pos:line="100" pos:column="43"/></condition><then pos:line="100" pos:column="43"> <block pos:line="100" pos:column="44">{
			<expr_stmt><expr><name><name pos:line="101" pos:column="25">file<pos:position pos:line="101" pos:column="29"/></name><operator pos:line="101" pos:column="29">-&gt;<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="31">dev<pos:position pos:line="101" pos:column="34"/></name></name> <operator pos:line="101" pos:column="35">=<pos:position pos:line="101" pos:column="36"/></operator> <call><name pos:line="101" pos:column="37">read_int<pos:position pos:line="101" pos:column="45"/></name><argument_list pos:line="101" pos:column="45">(<argument><expr><name pos:line="101" pos:column="46">f<pos:position pos:line="101" pos:column="47"/></name></expr></argument>)<pos:position pos:line="101" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="102" pos:column="25">file<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">-&gt;<pos:position pos:line="102" pos:column="34"/></operator><name pos:line="102" pos:column="31">inode<pos:position pos:line="102" pos:column="36"/></name></name> <operator pos:line="102" pos:column="37">=<pos:position pos:line="102" pos:column="38"/></operator> <call><name pos:line="102" pos:column="39">read_int<pos:position pos:line="102" pos:column="47"/></name><argument_list pos:line="102" pos:column="47">(<argument><expr><name pos:line="102" pos:column="48">f<pos:position pos:line="102" pos:column="49"/></name></expr></argument>)<pos:position pos:line="102" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="103" pos:column="18"/></block></then> <else pos:line="103" pos:column="19">else <block pos:line="103" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="104" pos:column="25">file<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">-&gt;<pos:position pos:line="104" pos:column="34"/></operator><name pos:line="104" pos:column="31">dev<pos:position pos:line="104" pos:column="34"/></name></name> <operator pos:line="104" pos:column="35">=<pos:position pos:line="104" pos:column="36"/></operator> <call><name pos:line="104" pos:column="37">read_longint<pos:position pos:line="104" pos:column="49"/></name><argument_list pos:line="104" pos:column="49">(<argument><expr><name pos:line="104" pos:column="50">f<pos:position pos:line="104" pos:column="51"/></name></expr></argument>)<pos:position pos:line="104" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="105" pos:column="25">file<pos:position pos:line="105" pos:column="29"/></name><operator pos:line="105" pos:column="29">-&gt;<pos:position pos:line="105" pos:column="34"/></operator><name pos:line="105" pos:column="31">inode<pos:position pos:line="105" pos:column="36"/></name></name> <operator pos:line="105" pos:column="37">=<pos:position pos:line="105" pos:column="38"/></operator> <call><name pos:line="105" pos:column="39">read_longint<pos:position pos:line="105" pos:column="51"/></name><argument_list pos:line="105" pos:column="51">(<argument><expr><name pos:line="105" pos:column="52">f<pos:position pos:line="105" pos:column="53"/></name></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="106" pos:column="18"/></block></else></if>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name pos:line="110" pos:column="13">always_checksum<pos:position pos:line="110" pos:column="28"/></name></expr>)<pos:position pos:line="110" pos:column="29"/></condition><then pos:line="110" pos:column="29"> <block pos:line="110" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="111" pos:column="17">file<pos:position pos:line="111" pos:column="21"/></name><operator pos:line="111" pos:column="21">-&gt;<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="23">sum<pos:position pos:line="111" pos:column="26"/></name></name> <operator pos:line="111" pos:column="27">=<pos:position pos:line="111" pos:column="28"/></operator> <call><name pos:line="111" pos:column="29">new_array<pos:position pos:line="111" pos:column="38"/></name><argument_list pos:line="111" pos:column="38">(<argument><expr><name pos:line="111" pos:column="39">char<pos:position pos:line="111" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="45">MD4_SUM_LENGTH<pos:position pos:line="111" pos:column="59"/></name></expr></argument>)<pos:position pos:line="111" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="61"/></expr_stmt>
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><operator pos:line="112" pos:column="21">!<pos:position pos:line="112" pos:column="22"/></operator><name><name pos:line="112" pos:column="22">file<pos:position pos:line="112" pos:column="26"/></name><operator pos:line="112" pos:column="26">-&gt;<pos:position pos:line="112" pos:column="31"/></operator><name pos:line="112" pos:column="28">sum<pos:position pos:line="112" pos:column="31"/></name></name></expr>)<pos:position pos:line="112" pos:column="32"/></condition><then pos:line="112" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="25">out_of_memory<pos:position pos:line="113" pos:column="38"/></name><argument_list pos:line="113" pos:column="38">(<argument><expr><literal type="string" pos:line="113" pos:column="39">"md4 sum"<pos:position pos:line="113" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="50"/></expr_stmt></block></then></if>
		<if pos:line="114" pos:column="17">if <condition pos:line="114" pos:column="20">(<expr><name pos:line="114" pos:column="21">protocol_version<pos:position pos:line="114" pos:column="37"/></name> <operator pos:line="114" pos:column="38">&lt;<pos:position pos:line="114" pos:column="42"/></operator> <literal type="number" pos:line="114" pos:column="40">21<pos:position pos:line="114" pos:column="42"/></literal></expr>)<pos:position pos:line="114" pos:column="43"/></condition><then pos:line="114" pos:column="43"> <block pos:line="114" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="115" pos:column="25">read_buf<pos:position pos:line="115" pos:column="33"/></name><argument_list pos:line="115" pos:column="33">(<argument><expr><name pos:line="115" pos:column="34">f<pos:position pos:line="115" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="37">file<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">sum<pos:position pos:line="115" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="48">2<pos:position pos:line="115" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="116" pos:column="18"/></block></then> <else pos:line="116" pos:column="19">else <block pos:line="116" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="117" pos:column="25">read_buf<pos:position pos:line="117" pos:column="33"/></name><argument_list pos:line="117" pos:column="33">(<argument><expr><name pos:line="117" pos:column="34">f<pos:position pos:line="117" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="37">file<pos:position pos:line="117" pos:column="41"/></name><operator pos:line="117" pos:column="41">-&gt;<pos:position pos:line="117" pos:column="46"/></operator><name pos:line="117" pos:column="43">sum<pos:position pos:line="117" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="48">MD4_SUM_LENGTH<pos:position pos:line="117" pos:column="62"/></name></expr></argument>)<pos:position pos:line="117" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="118" pos:column="18"/></block></else></if>
	}<pos:position pos:line="119" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="121" pos:column="9">last_mode<pos:position pos:line="121" pos:column="18"/></name> <operator pos:line="121" pos:column="19">=<pos:position pos:line="121" pos:column="20"/></operator> <name><name pos:line="121" pos:column="21">file<pos:position pos:line="121" pos:column="25"/></name><operator pos:line="121" pos:column="25">-&gt;<pos:position pos:line="121" pos:column="30"/></operator><name pos:line="121" pos:column="27">mode<pos:position pos:line="121" pos:column="31"/></name></name></expr>;<pos:position pos:line="121" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="122" pos:column="9">last_rdev<pos:position pos:line="122" pos:column="18"/></name> <operator pos:line="122" pos:column="19">=<pos:position pos:line="122" pos:column="20"/></operator> <name><name pos:line="122" pos:column="21">file<pos:position pos:line="122" pos:column="25"/></name><operator pos:line="122" pos:column="25">-&gt;<pos:position pos:line="122" pos:column="30"/></operator><name pos:line="122" pos:column="27">rdev<pos:position pos:line="122" pos:column="31"/></name></name></expr>;<pos:position pos:line="122" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="123" pos:column="9">last_uid<pos:position pos:line="123" pos:column="17"/></name> <operator pos:line="123" pos:column="18">=<pos:position pos:line="123" pos:column="19"/></operator> <name><name pos:line="123" pos:column="20">file<pos:position pos:line="123" pos:column="24"/></name><operator pos:line="123" pos:column="24">-&gt;<pos:position pos:line="123" pos:column="29"/></operator><name pos:line="123" pos:column="26">uid<pos:position pos:line="123" pos:column="29"/></name></name></expr>;<pos:position pos:line="123" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="124" pos:column="9">last_gid<pos:position pos:line="124" pos:column="17"/></name> <operator pos:line="124" pos:column="18">=<pos:position pos:line="124" pos:column="19"/></operator> <name><name pos:line="124" pos:column="20">file<pos:position pos:line="124" pos:column="24"/></name><operator pos:line="124" pos:column="24">-&gt;<pos:position pos:line="124" pos:column="29"/></operator><name pos:line="124" pos:column="26">gid<pos:position pos:line="124" pos:column="29"/></name></name></expr>;<pos:position pos:line="124" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="125" pos:column="9">last_time<pos:position pos:line="125" pos:column="18"/></name> <operator pos:line="125" pos:column="19">=<pos:position pos:line="125" pos:column="20"/></operator> <name><name pos:line="125" pos:column="21">file<pos:position pos:line="125" pos:column="25"/></name><operator pos:line="125" pos:column="25">-&gt;<pos:position pos:line="125" pos:column="30"/></operator><name pos:line="125" pos:column="27">modtime<pos:position pos:line="125" pos:column="34"/></name></name></expr>;<pos:position pos:line="125" pos:column="35"/></expr_stmt>

	<if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><operator pos:line="127" pos:column="13">!<pos:position pos:line="127" pos:column="14"/></operator><name pos:line="127" pos:column="14">preserve_perms<pos:position pos:line="127" pos:column="28"/></name></expr>)<pos:position pos:line="127" pos:column="29"/></condition><then pos:line="127" pos:column="29"> <block pos:line="127" pos:column="30">{
		<decl_stmt><decl><specifier pos:line="128" pos:column="17">extern<pos:position pos:line="128" pos:column="23"/></specifier> <type><name pos:line="128" pos:column="24">int<pos:position pos:line="128" pos:column="27"/></name></type> <name pos:line="128" pos:column="28">orig_umask<pos:position pos:line="128" pos:column="38"/></name></decl>;<pos:position pos:line="128" pos:column="39"/></decl_stmt>
		<comment type="block" pos:line="129" pos:column="17">/* set an appropriate set of permissions based on original
		   permissions and umask. This emulates what GNU cp does */</comment>
		<expr_stmt><expr><name><name pos:line="131" pos:column="17">file<pos:position pos:line="131" pos:column="21"/></name><operator pos:line="131" pos:column="21">-&gt;<pos:position pos:line="131" pos:column="26"/></operator><name pos:line="131" pos:column="23">mode<pos:position pos:line="131" pos:column="27"/></name></name> <operator pos:line="131" pos:column="28">&amp;=<pos:position pos:line="131" pos:column="34"/></operator> <operator pos:line="131" pos:column="31">~<pos:position pos:line="131" pos:column="32"/></operator><name pos:line="131" pos:column="32">orig_umask<pos:position pos:line="131" pos:column="42"/></name></expr>;<pos:position pos:line="131" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="132" pos:column="10"/></block></then></if>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

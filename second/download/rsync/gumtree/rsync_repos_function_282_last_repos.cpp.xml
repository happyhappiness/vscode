<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_282_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rsync_xal_set<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">fname<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">item_list<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">xalp<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
			 <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">fnamecmp<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">stat_x<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">sxp<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">rsync_xa<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">rxas<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name><name pos:line="4" pos:column="26">xalp<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">-&gt;<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="32">items<pos:position pos:line="4" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">ssize_t<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">list_len<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">i<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">len<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">name<pos:position pos:line="7" pos:column="19"/></name></decl>, <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="22">ptr<pos:position pos:line="7" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="27">sum<pos:position pos:line="7" pos:column="30"/></name><index pos:line="7" pos:column="30">[<expr><name pos:line="7" pos:column="31">MAX_DIGEST_LEN<pos:position pos:line="7" pos:column="45"/></name></expr>]<pos:position pos:line="7" pos:column="46"/></index></name></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">HAVE_LINUX_XATTRS<pos:position pos:line="8" pos:column="25"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">user_only<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><name pos:line="9" pos:column="25">am_root<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">&lt;=<pos:position pos:line="9" pos:column="38"/></operator> <literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">size_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">name_len<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">ret<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>

	<comment type="block" pos:line="14" pos:column="9">/* This puts the current name list into the "namebuf" buffer. */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">list_len<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <call><name pos:line="15" pos:column="25">get_xattr_names<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">fname<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call><operator pos:line="15" pos:column="47">)<pos:position pos:line="15" pos:column="48"/></operator> <operator pos:line="15" pos:column="49">&lt;<pos:position pos:line="15" pos:column="53"/></operator> <literal type="number" pos:line="15" pos:column="51">0<pos:position pos:line="15" pos:column="52"/></literal></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">-<pos:position pos:line="16" pos:column="25"/></operator><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="25">xalp<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">count<pos:position pos:line="18" pos:column="36"/></name></name></expr>;<pos:position pos:line="18" pos:column="37"/></condition> <incr><expr><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">++<pos:position pos:line="18" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="42"/></control> <block pos:line="18" pos:column="43">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">name<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="24">rxas<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><name pos:line="19" pos:column="29">i<pos:position pos:line="19" pos:column="30"/></name></expr>]<pos:position pos:line="19" pos:column="31"/></index></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">name<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>

		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">XATTR_ABBREV<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name><name pos:line="21" pos:column="34">rxas<pos:position pos:line="21" pos:column="38"/></name><index pos:line="21" pos:column="38">[<expr><name pos:line="21" pos:column="39">i<pos:position pos:line="21" pos:column="40"/></name></expr>]<pos:position pos:line="21" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43"> <block pos:line="21" pos:column="44">{
			<comment type="block" pos:line="22" pos:column="25">/* See if the fnamecmp version is identical. */</comment>
			<expr_stmt><expr><name pos:line="23" pos:column="25">len<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">name_len<pos:position pos:line="23" pos:column="39"/></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <name><name pos:line="23" pos:column="42">rxas<pos:position pos:line="23" pos:column="46"/></name><index pos:line="23" pos:column="46">[<expr><name pos:line="23" pos:column="47">i<pos:position pos:line="23" pos:column="48"/></name></expr>]<pos:position pos:line="23" pos:column="49"/></index></name><operator pos:line="23" pos:column="49">.<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">name_len<pos:position pos:line="23" pos:column="58"/></name></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><operator pos:line="24" pos:column="29">(<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">ptr<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">=<pos:position pos:line="24" pos:column="35"/></operator> <call><name pos:line="24" pos:column="36">get_xattr_data<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">fnamecmp<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="61">name<pos:position pos:line="24" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="67">&amp;<pos:position pos:line="24" pos:column="72"/></operator><name pos:line="24" pos:column="68">len<pos:position pos:line="24" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="73">1<pos:position pos:line="24" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call><operator pos:line="24" pos:column="75">)<pos:position pos:line="24" pos:column="76"/></operator> <operator pos:line="24" pos:column="77">==<pos:position pos:line="24" pos:column="79"/></operator> <name pos:line="24" pos:column="80">NULL<pos:position pos:line="24" pos:column="84"/></name></expr>)<pos:position pos:line="24" pos:column="85"/></condition><then pos:line="24" pos:column="85"> <block pos:line="24" pos:column="86">{
			  <label><name pos:line="25" pos:column="27">still_abbrev<pos:position pos:line="25" pos:column="39"/></name>:<pos:position pos:line="25" pos:column="40"/></label>
				<if pos:line="26" pos:column="33">if <condition pos:line="26" pos:column="36">(<expr><name pos:line="26" pos:column="37">am_generator<pos:position pos:line="26" pos:column="49"/></name></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50">
					<block type="pseudo"><continue pos:line="27" pos:column="41">continue;<pos:position pos:line="27" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><call><name pos:line="28" pos:column="33">rprintf<pos:position pos:line="28" pos:column="40"/></name><argument_list pos:line="28" pos:column="40">(<argument><expr><name pos:line="28" pos:column="41">FERROR<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="49">"Missing abbreviated xattr value, %s, for %s\n"<pos:position pos:line="28" pos:column="96"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="29" pos:column="41">rxas<pos:position pos:line="29" pos:column="45"/></name><index pos:line="29" pos:column="45">[<expr><name pos:line="29" pos:column="46">i<pos:position pos:line="29" pos:column="47"/></name></expr>]<pos:position pos:line="29" pos:column="48"/></index></name><operator pos:line="29" pos:column="48">.<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">name<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="55">full_fname<pos:position pos:line="29" pos:column="65"/></name><argument_list pos:line="29" pos:column="65">(<argument><expr><name pos:line="29" pos:column="66">fname<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><name pos:line="30" pos:column="33">ret<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="39">-<pos:position pos:line="30" pos:column="40"/></operator><literal type="number" pos:line="30" pos:column="40">1<pos:position pos:line="30" pos:column="41"/></literal></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
				<continue pos:line="31" pos:column="33">continue;<pos:position pos:line="31" pos:column="42"/></continue>
			}<pos:position pos:line="32" pos:column="26"/></block></then></if>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name pos:line="33" pos:column="29">len<pos:position pos:line="33" pos:column="32"/></name> <operator pos:line="33" pos:column="33">!=<pos:position pos:line="33" pos:column="35"/></operator> <name><name pos:line="33" pos:column="36">rxas<pos:position pos:line="33" pos:column="40"/></name><index pos:line="33" pos:column="40">[<expr><name pos:line="33" pos:column="41">i<pos:position pos:line="33" pos:column="42"/></name></expr>]<pos:position pos:line="33" pos:column="43"/></index></name><operator pos:line="33" pos:column="43">.<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="44">datum_len<pos:position pos:line="33" pos:column="53"/></name></expr>)<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54"> <block pos:line="33" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="34" pos:column="33">free<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">ptr<pos:position pos:line="34" pos:column="41"/></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
				<goto pos:line="35" pos:column="33">goto <name pos:line="35" pos:column="38">still_abbrev<pos:position pos:line="35" pos:column="50"/></name>;<pos:position pos:line="35" pos:column="51"/></goto>
			}<pos:position pos:line="36" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="38" pos:column="25">sum_init<pos:position pos:line="38" pos:column="33"/></name><argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">checksum_seed<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">sum_update<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">ptr<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="41">len<pos:position pos:line="39" pos:column="44"/></name></expr></argument>)<pos:position pos:line="39" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">sum_end<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">sum<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
			<if pos:line="41" pos:column="25">if <condition pos:line="41" pos:column="28">(<expr><call><name pos:line="41" pos:column="29">memcmp<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">sum<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="41">rxas<pos:position pos:line="41" pos:column="45"/></name><index pos:line="41" pos:column="45">[<expr><name pos:line="41" pos:column="46">i<pos:position pos:line="41" pos:column="47"/></name></expr>]<pos:position pos:line="41" pos:column="48"/></index></name><operator pos:line="41" pos:column="48">.<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="49">datum<pos:position pos:line="41" pos:column="54"/></name> <operator pos:line="41" pos:column="55">+<pos:position pos:line="41" pos:column="56"/></operator> <literal type="number" pos:line="41" pos:column="57">1<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="60">MAX_DIGEST_LEN<pos:position pos:line="41" pos:column="74"/></name></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call> <operator pos:line="41" pos:column="76">!=<pos:position pos:line="41" pos:column="78"/></operator> <literal type="number" pos:line="41" pos:column="79">0<pos:position pos:line="41" pos:column="80"/></literal></expr>)<pos:position pos:line="41" pos:column="81"/></condition><then pos:line="41" pos:column="81"> <block pos:line="41" pos:column="82">{
				<expr_stmt><expr><call><name pos:line="42" pos:column="33">free<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">ptr<pos:position pos:line="42" pos:column="41"/></name></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
				<goto pos:line="43" pos:column="33">goto <name pos:line="43" pos:column="38">still_abbrev<pos:position pos:line="43" pos:column="50"/></name>;<pos:position pos:line="43" pos:column="51"/></goto>
			}<pos:position pos:line="44" pos:column="26"/></block></then></if>

			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><name pos:line="46" pos:column="29">fname<pos:position pos:line="46" pos:column="34"/></name> <operator pos:line="46" pos:column="35">==<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="38">fnamecmp<pos:position pos:line="46" pos:column="46"/></name></expr>)<pos:position pos:line="46" pos:column="47"/></condition><then pos:line="46" pos:column="47">
				<block type="pseudo"><empty_stmt pos:line="47" pos:column="33">;<pos:position pos:line="47" pos:column="34"/></empty_stmt></block></then> <comment type="block" pos:line="47" pos:column="35">/* Value is already set when identical */</comment>
			<elseif pos:line="48" pos:column="25">else <if pos:line="48" pos:column="30">if <condition pos:line="48" pos:column="33">(<expr><call><name pos:line="48" pos:column="34">sys_lsetxattr<pos:position pos:line="48" pos:column="47"/></name><argument_list pos:line="48" pos:column="47">(<argument><expr><name pos:line="48" pos:column="48">fname<pos:position pos:line="48" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">name<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">ptr<pos:position pos:line="48" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="66">len<pos:position pos:line="48" pos:column="69"/></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call> <operator pos:line="48" pos:column="71">&lt;<pos:position pos:line="48" pos:column="75"/></operator> <literal type="number" pos:line="48" pos:column="73">0<pos:position pos:line="48" pos:column="74"/></literal></expr>)<pos:position pos:line="48" pos:column="75"/></condition><then pos:line="48" pos:column="75"> <block pos:line="48" pos:column="76">{
				<expr_stmt><expr><call><name pos:line="49" pos:column="33">rsyserr<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">FERROR_XFER<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">errno<pos:position pos:line="49" pos:column="59"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="50" pos:column="41">"rsync_xal_set: lsetxattr(\"%s\",\"%s\") failed"<pos:position pos:line="50" pos:column="89"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="51" pos:column="41">full_fname<pos:position pos:line="51" pos:column="51"/></name><argument_list pos:line="51" pos:column="51">(<argument><expr><name pos:line="51" pos:column="52">fname<pos:position pos:line="51" pos:column="57"/></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="51" pos:column="60">name<pos:position pos:line="51" pos:column="64"/></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name pos:line="52" pos:column="33">ret<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">=<pos:position pos:line="52" pos:column="38"/></operator> <operator pos:line="52" pos:column="39">-<pos:position pos:line="52" pos:column="40"/></operator><literal type="number" pos:line="52" pos:column="40">1<pos:position pos:line="52" pos:column="41"/></literal></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="53" pos:column="26"/></block></then></if></elseif> <else pos:line="53" pos:column="27">else <comment type="block" pos:line="53" pos:column="32">/* make sure caller sets mtime */</comment>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="33">sxp<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">-&gt;<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="38">st<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">.<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="41">st_mtime<pos:position pos:line="54" pos:column="49"/></name></name> <operator pos:line="54" pos:column="50">=<pos:position pos:line="54" pos:column="51"/></operator> <operator pos:line="54" pos:column="52">(<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="53">time_t<pos:position pos:line="54" pos:column="59"/></name><operator pos:line="54" pos:column="59">)<pos:position pos:line="54" pos:column="60"/></operator><operator pos:line="54" pos:column="60">-<pos:position pos:line="54" pos:column="61"/></operator><literal type="number" pos:line="54" pos:column="61">1<pos:position pos:line="54" pos:column="62"/></literal></expr>;<pos:position pos:line="54" pos:column="63"/></expr_stmt></block></else></if>

			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name pos:line="56" pos:column="29">am_generator<pos:position pos:line="56" pos:column="41"/></name></expr>)<pos:position pos:line="56" pos:column="42"/></condition><then pos:line="56" pos:column="42"> <block pos:line="56" pos:column="43">{ <comment type="block" pos:line="56" pos:column="45">/* generator items stay abbreviated */</comment>
				<expr_stmt><expr><call><name pos:line="57" pos:column="33">free<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name pos:line="57" pos:column="38">ptr<pos:position pos:line="57" pos:column="41"/></name></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
				<continue pos:line="58" pos:column="33">continue;<pos:position pos:line="58" pos:column="42"/></continue>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="61" pos:column="25">memcpy<pos:position pos:line="61" pos:column="31"/></name><argument_list pos:line="61" pos:column="31">(<argument><expr><name pos:line="61" pos:column="32">ptr<pos:position pos:line="61" pos:column="35"/></name> <operator pos:line="61" pos:column="36">+<pos:position pos:line="61" pos:column="37"/></operator> <name pos:line="61" pos:column="38">len<pos:position pos:line="61" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="43">name<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="49">name_len<pos:position pos:line="61" pos:column="57"/></name></expr></argument>)<pos:position pos:line="61" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">free<pos:position pos:line="62" pos:column="29"/></name><argument_list pos:line="62" pos:column="29">(<argument><expr><name><name pos:line="62" pos:column="30">rxas<pos:position pos:line="62" pos:column="34"/></name><index pos:line="62" pos:column="34">[<expr><name pos:line="62" pos:column="35">i<pos:position pos:line="62" pos:column="36"/></name></expr>]<pos:position pos:line="62" pos:column="37"/></index></name><operator pos:line="62" pos:column="37">.<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="38">datum<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>

			<expr_stmt><expr><name><name pos:line="64" pos:column="25">rxas<pos:position pos:line="64" pos:column="29"/></name><index pos:line="64" pos:column="29">[<expr><name pos:line="64" pos:column="30">i<pos:position pos:line="64" pos:column="31"/></name></expr>]<pos:position pos:line="64" pos:column="32"/></index></name><operator pos:line="64" pos:column="32">.<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">name<pos:position pos:line="64" pos:column="37"/></name> <operator pos:line="64" pos:column="38">=<pos:position pos:line="64" pos:column="39"/></operator> <name pos:line="64" pos:column="40">name<pos:position pos:line="64" pos:column="44"/></name> <operator pos:line="64" pos:column="45">=<pos:position pos:line="64" pos:column="46"/></operator> <name pos:line="64" pos:column="47">ptr<pos:position pos:line="64" pos:column="50"/></name> <operator pos:line="64" pos:column="51">+<pos:position pos:line="64" pos:column="52"/></operator> <name pos:line="64" pos:column="53">len<pos:position pos:line="64" pos:column="56"/></name></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="65" pos:column="25">rxas<pos:position pos:line="65" pos:column="29"/></name><index pos:line="65" pos:column="29">[<expr><name pos:line="65" pos:column="30">i<pos:position pos:line="65" pos:column="31"/></name></expr>]<pos:position pos:line="65" pos:column="32"/></index></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">datum<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">=<pos:position pos:line="65" pos:column="40"/></operator> <name pos:line="65" pos:column="41">ptr<pos:position pos:line="65" pos:column="44"/></name></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
			<continue pos:line="66" pos:column="25">continue;<pos:position pos:line="66" pos:column="34"/></continue>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>

		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><call><name pos:line="69" pos:column="21">sys_lsetxattr<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">fname<pos:position pos:line="69" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">name<pos:position pos:line="69" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="48">rxas<pos:position pos:line="69" pos:column="52"/></name><index pos:line="69" pos:column="52">[<expr><name pos:line="69" pos:column="53">i<pos:position pos:line="69" pos:column="54"/></name></expr>]<pos:position pos:line="69" pos:column="55"/></index></name><operator pos:line="69" pos:column="55">.<pos:position pos:line="69" pos:column="56"/></operator><name pos:line="69" pos:column="56">datum<pos:position pos:line="69" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="63">rxas<pos:position pos:line="69" pos:column="67"/></name><index pos:line="69" pos:column="67">[<expr><name pos:line="69" pos:column="68">i<pos:position pos:line="69" pos:column="69"/></name></expr>]<pos:position pos:line="69" pos:column="70"/></index></name><operator pos:line="69" pos:column="70">.<pos:position pos:line="69" pos:column="71"/></operator><name pos:line="69" pos:column="71">datum_len<pos:position pos:line="69" pos:column="80"/></name></expr></argument>)<pos:position pos:line="69" pos:column="81"/></argument_list></call> <operator pos:line="69" pos:column="82">&lt;<pos:position pos:line="69" pos:column="86"/></operator> <literal type="number" pos:line="69" pos:column="84">0<pos:position pos:line="69" pos:column="85"/></literal></expr>)<pos:position pos:line="69" pos:column="86"/></condition><then pos:line="69" pos:column="86"> <block pos:line="69" pos:column="87">{
			<expr_stmt><expr><call><name pos:line="70" pos:column="25">rsyserr<pos:position pos:line="70" pos:column="32"/></name><argument_list pos:line="70" pos:column="32">(<argument><expr><name pos:line="70" pos:column="33">FERROR_XFER<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">errno<pos:position pos:line="70" pos:column="51"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="71" pos:column="33">"rsync_xal_set: lsetxattr(\"%s\",\"%s\") failed"<pos:position pos:line="71" pos:column="81"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="72" pos:column="33">full_fname<pos:position pos:line="72" pos:column="43"/></name><argument_list pos:line="72" pos:column="43">(<argument><expr><name pos:line="72" pos:column="44">fname<pos:position pos:line="72" pos:column="49"/></name></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="52">name<pos:position pos:line="72" pos:column="56"/></name></expr></argument>)<pos:position pos:line="72" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="73" pos:column="25">ret<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <operator pos:line="73" pos:column="31">-<pos:position pos:line="73" pos:column="32"/></operator><literal type="number" pos:line="73" pos:column="32">1<pos:position pos:line="73" pos:column="33"/></literal></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></then> <else pos:line="74" pos:column="19">else <comment type="block" pos:line="74" pos:column="24">/* make sure caller sets mtime */</comment>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="25">sxp<pos:position pos:line="75" pos:column="28"/></name><operator pos:line="75" pos:column="28">-&gt;<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="30">st<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">.<pos:position pos:line="75" pos:column="33"/></operator><name pos:line="75" pos:column="33">st_mtime<pos:position pos:line="75" pos:column="41"/></name></name> <operator pos:line="75" pos:column="42">=<pos:position pos:line="75" pos:column="43"/></operator> <operator pos:line="75" pos:column="44">(<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="45">time_t<pos:position pos:line="75" pos:column="51"/></name><operator pos:line="75" pos:column="51">)<pos:position pos:line="75" pos:column="52"/></operator><operator pos:line="75" pos:column="52">-<pos:position pos:line="75" pos:column="53"/></operator><literal type="number" pos:line="75" pos:column="53">1<pos:position pos:line="75" pos:column="54"/></literal></expr>;<pos:position pos:line="75" pos:column="55"/></expr_stmt></block></else></if>
	}<pos:position pos:line="76" pos:column="10"/></block></for>

	<comment type="block" pos:line="78" pos:column="9">/* Remove any extraneous names. */</comment>
	<for pos:line="79" pos:column="9">for <control pos:line="79" pos:column="13">(<init><expr><name pos:line="79" pos:column="14">name<pos:position pos:line="79" pos:column="18"/></name> <operator pos:line="79" pos:column="19">=<pos:position pos:line="79" pos:column="20"/></operator> <name pos:line="79" pos:column="21">namebuf<pos:position pos:line="79" pos:column="28"/></name></expr>;<pos:position pos:line="79" pos:column="29"/></init> <condition><expr><name pos:line="79" pos:column="30">list_len<pos:position pos:line="79" pos:column="38"/></name> <operator pos:line="79" pos:column="39">&gt;<pos:position pos:line="79" pos:column="43"/></operator> <literal type="number" pos:line="79" pos:column="41">0<pos:position pos:line="79" pos:column="42"/></literal></expr>;<pos:position pos:line="79" pos:column="43"/></condition> <incr><expr><name pos:line="79" pos:column="44">name<pos:position pos:line="79" pos:column="48"/></name> <operator pos:line="79" pos:column="49">+=<pos:position pos:line="79" pos:column="51"/></operator> <name pos:line="79" pos:column="52">name_len<pos:position pos:line="79" pos:column="60"/></name></expr></incr>)<pos:position pos:line="79" pos:column="61"/></control> <block pos:line="79" pos:column="62">{
		<expr_stmt><expr><name pos:line="80" pos:column="17">name_len<pos:position pos:line="80" pos:column="25"/></name> <operator pos:line="80" pos:column="26">=<pos:position pos:line="80" pos:column="27"/></operator> <call><name pos:line="80" pos:column="28">strlen<pos:position pos:line="80" pos:column="34"/></name><argument_list pos:line="80" pos:column="34">(<argument><expr><name pos:line="80" pos:column="35">name<pos:position pos:line="80" pos:column="39"/></name></expr></argument>)<pos:position pos:line="80" pos:column="40"/></argument_list></call> <operator pos:line="80" pos:column="41">+<pos:position pos:line="80" pos:column="42"/></operator> <literal type="number" pos:line="80" pos:column="43">1<pos:position pos:line="80" pos:column="44"/></literal></expr>;<pos:position pos:line="80" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="81" pos:column="17">list_len<pos:position pos:line="81" pos:column="25"/></name> <operator pos:line="81" pos:column="26">-=<pos:position pos:line="81" pos:column="28"/></operator> <name pos:line="81" pos:column="29">name_len<pos:position pos:line="81" pos:column="37"/></name></expr>;<pos:position pos:line="81" pos:column="38"/></expr_stmt>

<cpp:ifdef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifdef<pos:position pos:line="83" pos:column="7"/></cpp:directive> <name pos:line="83" pos:column="8">HAVE_LINUX_XATTRS<pos:position pos:line="83" pos:column="25"/></name></cpp:ifdef>
		<comment type="block" pos:line="84" pos:column="17">/* We always ignore the system namespace, and non-root
		 * ignores everything but the user namespace. */</comment>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><ternary><condition><expr><name pos:line="86" pos:column="21">user_only<pos:position pos:line="86" pos:column="30"/></name></expr> ?<pos:position pos:line="86" pos:column="32"/></condition><then pos:line="86" pos:column="32"> <expr><operator pos:line="86" pos:column="33">!<pos:position pos:line="86" pos:column="34"/></operator><call><name pos:line="86" pos:column="34">HAS_PREFIX<pos:position pos:line="86" pos:column="44"/></name><argument_list pos:line="86" pos:column="44">(<argument><expr><name pos:line="86" pos:column="45">name<pos:position pos:line="86" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="51">USER_PREFIX<pos:position pos:line="86" pos:column="62"/></name></expr></argument>)<pos:position pos:line="86" pos:column="63"/></argument_list></call></expr>
			      <pos:position pos:line="87" pos:column="10"/></then><else pos:line="87" pos:column="31">: <expr><call><name pos:line="87" pos:column="33">HAS_PREFIX<pos:position pos:line="87" pos:column="43"/></name><argument_list pos:line="87" pos:column="43">(<argument><expr><name pos:line="87" pos:column="44">name<pos:position pos:line="87" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">SYSTEM_PREFIX<pos:position pos:line="87" pos:column="63"/></name></expr></argument>)<pos:position pos:line="87" pos:column="64"/></argument_list></call></expr></else></ternary></expr>)<pos:position pos:line="87" pos:column="65"/></condition><then pos:line="87" pos:column="65">
			<block type="pseudo"><continue pos:line="88" pos:column="25">continue;<pos:position pos:line="88" pos:column="34"/></continue></block></then></if>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name><name pos:line="90" pos:column="21">am_root<pos:position pos:line="90" pos:column="28"/></name> <argument_list type="generic" pos:line="90" pos:column="29">&lt; <argument><expr><literal type="number" pos:line="90" pos:column="31">0<pos:position pos:line="90" pos:column="32"/></literal> <operator pos:line="90" pos:column="33">&amp;&amp;<pos:position pos:line="90" pos:column="43"/></operator> <name pos:line="90" pos:column="36">name_len<pos:position pos:line="90" pos:column="44"/></name></expr></argument> &gt;<pos:position pos:line="90" pos:column="49"/></argument_list></name> <name pos:line="90" pos:column="47">RPRE_LEN<pos:position pos:line="90" pos:column="55"/></name>
		 <operator pos:line="91" pos:column="18">&amp;&amp;<pos:position pos:line="91" pos:column="28"/></operator> <name><name pos:line="91" pos:column="21">name<pos:position pos:line="91" pos:column="25"/></name><index pos:line="91" pos:column="25">[<expr><name pos:line="91" pos:column="26">RPRE_LEN<pos:position pos:line="91" pos:column="34"/></name></expr>]<pos:position pos:line="91" pos:column="35"/></index></name> <operator pos:line="91" pos:column="36">==<pos:position pos:line="91" pos:column="38"/></operator> <literal type="char" pos:line="91" pos:column="39">'%'<pos:position pos:line="91" pos:column="42"/></literal> <operator pos:line="91" pos:column="43">&amp;&amp;<pos:position pos:line="91" pos:column="53"/></operator> <call><name pos:line="91" pos:column="46">strcmp<pos:position pos:line="91" pos:column="52"/></name><argument_list pos:line="91" pos:column="52">(<argument><expr><name pos:line="91" pos:column="53">name<pos:position pos:line="91" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="59">XSTAT_ATTR<pos:position pos:line="91" pos:column="69"/></name></expr></argument>)<pos:position pos:line="91" pos:column="70"/></argument_list></call> <operator pos:line="91" pos:column="71">==<pos:position pos:line="91" pos:column="73"/></operator> <literal type="number" pos:line="91" pos:column="74">0<pos:position pos:line="91" pos:column="75"/></literal></expr>)<pos:position pos:line="91" pos:column="76"/></condition><then pos:line="91" pos:column="76">
			<block type="pseudo"><continue pos:line="92" pos:column="25">continue;<pos:position pos:line="92" pos:column="34"/></continue></block></then></if>

		<for pos:line="94" pos:column="17">for <control pos:line="94" pos:column="21">(<init><expr><name pos:line="94" pos:column="22">i<pos:position pos:line="94" pos:column="23"/></name> <operator pos:line="94" pos:column="24">=<pos:position pos:line="94" pos:column="25"/></operator> <literal type="number" pos:line="94" pos:column="26">0<pos:position pos:line="94" pos:column="27"/></literal></expr>;<pos:position pos:line="94" pos:column="28"/></init> <condition><expr><name pos:line="94" pos:column="29">i<pos:position pos:line="94" pos:column="30"/></name> <operator pos:line="94" pos:column="31">&lt;<pos:position pos:line="94" pos:column="35"/></operator> <name><name pos:line="94" pos:column="33">xalp<pos:position pos:line="94" pos:column="37"/></name><operator pos:line="94" pos:column="37">-&gt;<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="39">count<pos:position pos:line="94" pos:column="44"/></name></name></expr>;<pos:position pos:line="94" pos:column="45"/></condition> <incr><expr><name pos:line="94" pos:column="46">i<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">++<pos:position pos:line="94" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="94" pos:column="50"/></control> <block pos:line="94" pos:column="51">{
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><call><name pos:line="95" pos:column="29">strcmp<pos:position pos:line="95" pos:column="35"/></name><argument_list pos:line="95" pos:column="35">(<argument><expr><name pos:line="95" pos:column="36">name<pos:position pos:line="95" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="42">rxas<pos:position pos:line="95" pos:column="46"/></name><index pos:line="95" pos:column="46">[<expr><name pos:line="95" pos:column="47">i<pos:position pos:line="95" pos:column="48"/></name></expr>]<pos:position pos:line="95" pos:column="49"/></index></name><operator pos:line="95" pos:column="49">.<pos:position pos:line="95" pos:column="50"/></operator><name pos:line="95" pos:column="50">name<pos:position pos:line="95" pos:column="54"/></name></expr></argument>)<pos:position pos:line="95" pos:column="55"/></argument_list></call> <operator pos:line="95" pos:column="56">==<pos:position pos:line="95" pos:column="58"/></operator> <literal type="number" pos:line="95" pos:column="59">0<pos:position pos:line="95" pos:column="60"/></literal></expr>)<pos:position pos:line="95" pos:column="61"/></condition><then pos:line="95" pos:column="61">
				<block type="pseudo"><break pos:line="96" pos:column="33">break;<pos:position pos:line="96" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="97" pos:column="18"/></block></for>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">i<pos:position pos:line="98" pos:column="22"/></name> <operator pos:line="98" pos:column="23">==<pos:position pos:line="98" pos:column="25"/></operator> <name><name pos:line="98" pos:column="26">xalp<pos:position pos:line="98" pos:column="30"/></name><operator pos:line="98" pos:column="30">-&gt;<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="32">count<pos:position pos:line="98" pos:column="37"/></name></name></expr>)<pos:position pos:line="98" pos:column="38"/></condition><then pos:line="98" pos:column="38"> <block pos:line="98" pos:column="39">{
			<if pos:line="99" pos:column="25">if <condition pos:line="99" pos:column="28">(<expr><call><name pos:line="99" pos:column="29">sys_lremovexattr<pos:position pos:line="99" pos:column="45"/></name><argument_list pos:line="99" pos:column="45">(<argument><expr><name pos:line="99" pos:column="46">fname<pos:position pos:line="99" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="53">name<pos:position pos:line="99" pos:column="57"/></name></expr></argument>)<pos:position pos:line="99" pos:column="58"/></argument_list></call> <operator pos:line="99" pos:column="59">&lt;<pos:position pos:line="99" pos:column="63"/></operator> <literal type="number" pos:line="99" pos:column="61">0<pos:position pos:line="99" pos:column="62"/></literal></expr>)<pos:position pos:line="99" pos:column="63"/></condition><then pos:line="99" pos:column="63"> <block pos:line="99" pos:column="64">{
				<expr_stmt><expr><call><name pos:line="100" pos:column="33">rsyserr<pos:position pos:line="100" pos:column="40"/></name><argument_list pos:line="100" pos:column="40">(<argument><expr><name pos:line="100" pos:column="41">FERROR_XFER<pos:position pos:line="100" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="54">errno<pos:position pos:line="100" pos:column="59"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="101" pos:column="41">"rsync_xal_set: lremovexattr(\"%s\",\"%s\") failed"<pos:position pos:line="101" pos:column="92"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="102" pos:column="41">full_fname<pos:position pos:line="102" pos:column="51"/></name><argument_list pos:line="102" pos:column="51">(<argument><expr><name pos:line="102" pos:column="52">fname<pos:position pos:line="102" pos:column="57"/></name></expr></argument>)<pos:position pos:line="102" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="102" pos:column="60">name<pos:position pos:line="102" pos:column="64"/></name></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name pos:line="103" pos:column="33">ret<pos:position pos:line="103" pos:column="36"/></name> <operator pos:line="103" pos:column="37">=<pos:position pos:line="103" pos:column="38"/></operator> <operator pos:line="103" pos:column="39">-<pos:position pos:line="103" pos:column="40"/></operator><literal type="number" pos:line="103" pos:column="40">1<pos:position pos:line="103" pos:column="41"/></literal></expr>;<pos:position pos:line="103" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="104" pos:column="26"/></block></then> <else pos:line="104" pos:column="27">else <comment type="block" pos:line="104" pos:column="32">/* make sure caller sets mtime */</comment>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="105" pos:column="33">sxp<pos:position pos:line="105" pos:column="36"/></name><operator pos:line="105" pos:column="36">-&gt;<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="38">st<pos:position pos:line="105" pos:column="40"/></name><operator pos:line="105" pos:column="40">.<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="41">st_mtime<pos:position pos:line="105" pos:column="49"/></name></name> <operator pos:line="105" pos:column="50">=<pos:position pos:line="105" pos:column="51"/></operator> <operator pos:line="105" pos:column="52">(<pos:position pos:line="105" pos:column="53"/></operator><name pos:line="105" pos:column="53">time_t<pos:position pos:line="105" pos:column="59"/></name><operator pos:line="105" pos:column="59">)<pos:position pos:line="105" pos:column="60"/></operator><operator pos:line="105" pos:column="60">-<pos:position pos:line="105" pos:column="61"/></operator><literal type="number" pos:line="105" pos:column="61">1<pos:position pos:line="105" pos:column="62"/></literal></expr>;<pos:position pos:line="105" pos:column="63"/></expr_stmt></block></else></if>
		}<pos:position pos:line="106" pos:column="18"/></block></then></if>
	}<pos:position pos:line="107" pos:column="10"/></block></for>

	<return pos:line="109" pos:column="9">return <expr><name pos:line="109" pos:column="16">ret<pos:position pos:line="109" pos:column="19"/></name></expr>;<pos:position pos:line="109" pos:column="20"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

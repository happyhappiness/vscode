<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_101_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">recv_filter_list<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">f_in<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">line<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">BIGPATHBUFLEN<pos:position pos:line="3" pos:column="32"/></name></expr>]<pos:position pos:line="3" pos:column="33"/></index></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">xflags<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><ternary><condition><expr><name pos:line="4" pos:column="22">protocol_version<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">&gt;=<pos:position pos:line="4" pos:column="44"/></operator> <literal type="number" pos:line="4" pos:column="42">29<pos:position pos:line="4" pos:column="44"/></literal></expr> ?<pos:position pos:line="4" pos:column="46"/></condition><then pos:line="4" pos:column="46"> <expr><literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr> <pos:position pos:line="4" pos:column="49"/></then><else pos:line="4" pos:column="49">: <expr><name pos:line="4" pos:column="51">XFLG_OLD_PREFIXES<pos:position pos:line="4" pos:column="68"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">receiver_wants_list<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">prune_empty_dirs<pos:position pos:line="5" pos:column="51"/></name>
	    <operator pos:line="6" pos:column="13">||<pos:position pos:line="6" pos:column="15"/></operator> <operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">delete_mode<pos:position pos:line="6" pos:column="28"/></name>
	     <operator pos:line="7" pos:column="14">&amp;&amp;<pos:position pos:line="7" pos:column="24"/></operator> <operator pos:line="7" pos:column="17">(<pos:position pos:line="7" pos:column="18"/></operator><operator pos:line="7" pos:column="18">!<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">delete_excluded<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">||<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">protocol_version<pos:position pos:line="7" pos:column="54"/></name> <operator pos:line="7" pos:column="55">&gt;=<pos:position pos:line="7" pos:column="60"/></operator> <literal type="number" pos:line="7" pos:column="58">29<pos:position pos:line="7" pos:column="60"/></literal><operator pos:line="7" pos:column="60">)<pos:position pos:line="7" pos:column="61"/></operator><operator pos:line="7" pos:column="61">)<pos:position pos:line="7" pos:column="62"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="63"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">len<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">local_server<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&amp;&amp;<pos:position pos:line="10" pos:column="37"/></operator> <operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">am_sender<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">||<pos:position pos:line="10" pos:column="43"/></operator> <name pos:line="10" pos:column="44">receiver_wants_list<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">)<pos:position pos:line="10" pos:column="64"/></operator></expr>)<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65"> <block pos:line="10" pos:column="66">{
		<while pos:line="11" pos:column="17">while <condition pos:line="11" pos:column="23">(<expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">len<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">read_int<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">f_in<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="47">!=<pos:position pos:line="11" pos:column="49"/></operator> <literal type="number" pos:line="11" pos:column="50">0<pos:position pos:line="11" pos:column="51"/></literal></expr>)<pos:position pos:line="11" pos:column="52"/></condition> <block pos:line="11" pos:column="53">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">len<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">&gt;=<pos:position pos:line="12" pos:column="38"/></operator> <sizeof pos:line="12" pos:column="36">sizeof <name pos:line="12" pos:column="43">line<pos:position pos:line="12" pos:column="47"/></name></sizeof></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="33">overflow_exit<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><literal type="string" pos:line="13" pos:column="47">"recv_rules"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">read_sbuf<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">f_in<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">line<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">len<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">parse_filter_str<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><operator pos:line="15" pos:column="42">&amp;<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="43">filter_list<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="56">line<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="62">rule_template<pos:position pos:line="15" pos:column="75"/></name><argument_list pos:line="15" pos:column="75">(<argument><expr><literal type="number" pos:line="15" pos:column="76">0<pos:position pos:line="15" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="80">xflags<pos:position pos:line="15" pos:column="86"/></name></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="88"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></while>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">cvs_exclude<pos:position pos:line="19" pos:column="24"/></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">local_server<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">||<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">am_sender<pos:position pos:line="20" pos:column="46"/></name> <operator pos:line="20" pos:column="47">||<pos:position pos:line="20" pos:column="49"/></operator> <name pos:line="20" pos:column="50">protocol_version<pos:position pos:line="20" pos:column="66"/></name> <operator pos:line="20" pos:column="67">&lt;<pos:position pos:line="20" pos:column="71"/></operator> <literal type="number" pos:line="20" pos:column="69">29<pos:position pos:line="20" pos:column="71"/></literal></expr>)<pos:position pos:line="20" pos:column="72"/></condition><then pos:line="20" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">parse_filter_str<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><operator pos:line="21" pos:column="42">&amp;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="43">filter_list<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="56">":C"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="62">rule_template<pos:position pos:line="21" pos:column="75"/></name><argument_list pos:line="21" pos:column="75">(<argument><expr><literal type="number" pos:line="21" pos:column="76">0<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="80">0<pos:position pos:line="21" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt></block></then></if>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">local_server<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">||<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">am_sender<pos:position pos:line="22" pos:column="46"/></name></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">parse_filter_str<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">(<argument><expr><operator pos:line="23" pos:column="42">&amp;<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="43">filter_list<pos:position pos:line="23" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="56">"-C"<pos:position pos:line="23" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="62">rule_template<pos:position pos:line="23" pos:column="75"/></name><argument_list pos:line="23" pos:column="75">(<argument><expr><literal type="number" pos:line="23" pos:column="76">0<pos:position pos:line="23" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="80">0<pos:position pos:line="23" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="83"/></expr_stmt></block></then></if>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">local_server<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <comment type="block" pos:line="26" pos:column="27">/* filter out any rules that aren't for us. */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">send_rules<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><operator pos:line="27" pos:column="28">-<pos:position pos:line="27" pos:column="29"/></operator><literal type="number" pos:line="27" pos:column="29">1<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="32">&amp;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="33">filter_list<pos:position pos:line="27" pos:column="44"/></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt></block></then></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

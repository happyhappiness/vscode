<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_258_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">write_ndx_and_attrs<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">f_out<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">ndx<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">iflags<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">fname<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="52">struct<pos:position pos:line="2" pos:column="58"/></name> <name pos:line="2" pos:column="59">file_struct<pos:position pos:line="2" pos:column="70"/></name></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">file<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="3" pos:column="33">uchar<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">fnamecmp_type<pos:position pos:line="3" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="54">char<pos:position pos:line="3" pos:column="58"/></name> <modifier pos:line="3" pos:column="59">*<pos:position pos:line="3" pos:column="60"/></modifier></type><name pos:line="3" pos:column="60">buf<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="65">int<pos:position pos:line="3" pos:column="68"/></name></type> <name pos:line="3" pos:column="69">len<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">write_ndx<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">f_out<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">ndx<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">protocol_version<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">&lt;<pos:position pos:line="6" pos:column="34"/></operator> <literal type="number" pos:line="6" pos:column="32">29<pos:position pos:line="6" pos:column="34"/></literal></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">write_shortint<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">f_out<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">iflags<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">iflags<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&amp;<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="22">ITEM_BASIS_TYPE_FOLLOWS<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">write_byte<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">f_out<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">fnamecmp_type<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">iflags<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="22">ITEM_XNAME_FOLLOWS<pos:position pos:line="11" pos:column="40"/></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">write_vstring<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">f_out<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">buf<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">len<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="13" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">preserve_xattrs<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&amp;&amp;<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="32">iflags<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">&amp;<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="41">ITEM_REPORT_XATTR<pos:position pos:line="14" pos:column="58"/></name> <operator pos:line="14" pos:column="59">&amp;&amp;<pos:position pos:line="14" pos:column="69"/></operator> <name pos:line="14" pos:column="62">do_xfers<pos:position pos:line="14" pos:column="70"/></name>
	 <operator pos:line="15" pos:column="10">&amp;&amp;<pos:position pos:line="15" pos:column="20"/></operator> <operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">want_xattr_optim<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&amp;&amp;<pos:position pos:line="15" pos:column="42"/></operator> <call><name pos:line="15" pos:column="35">BITS_SET<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">iflags<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">ITEM_XNAME_FOLLOWS<pos:position pos:line="15" pos:column="70"/></name><operator pos:line="15" pos:column="70">|<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="71">ITEM_LOCAL_CHANGE<pos:position pos:line="15" pos:column="88"/></name></expr></argument>)<pos:position pos:line="15" pos:column="89"/></argument_list></call><operator pos:line="15" pos:column="89">)<pos:position pos:line="15" pos:column="90"/></operator></expr>)<pos:position pos:line="15" pos:column="91"/></condition><then pos:line="15" pos:column="91">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">send_xattr_request<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">fname<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="43">file<pos:position pos:line="16" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="49">f_out<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

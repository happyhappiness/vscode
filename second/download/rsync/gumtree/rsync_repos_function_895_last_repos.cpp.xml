<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_895_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">getnameinfo<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">sockaddr<pos:position pos:line="1" pos:column="38"/></name></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">sa<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">socklen_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">salen<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">node<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">nodelen<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
			<parameter><decl><type><name pos:line="3" pos:column="25">char<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">service<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">size_t<pos:position pos:line="3" pos:column="46"/></name></type> <name pos:line="3" pos:column="47">servicelen<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="59">int<pos:position pos:line="3" pos:column="62"/></name></type> <name pos:line="3" pos:column="63">flags<pos:position pos:line="3" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="69"/></parameter_list>
<block pos:line="4" pos:column="1">{

	<comment type="block" pos:line="6" pos:column="9">/* Invalid arguments. */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">sa<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">||<pos:position pos:line="7" pos:column="26"/></operator> <operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">node<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">==<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="36">NULL<pos:position pos:line="7" pos:column="40"/></name> <operator pos:line="7" pos:column="41">&amp;&amp;<pos:position pos:line="7" pos:column="51"/></operator> <name pos:line="7" pos:column="44">service<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">==<pos:position pos:line="7" pos:column="54"/></operator> <name pos:line="7" pos:column="55">NULL<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator></expr>)<pos:position pos:line="7" pos:column="61"/></condition><then pos:line="7" pos:column="61"> <block pos:line="7" pos:column="62">{
		<return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">EAI_FAIL<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">sa<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">sa_family<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">AF_INET<pos:position pos:line="11" pos:column="37"/></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38"> <block pos:line="11" pos:column="39">{
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">EAI_FAIL<pos:position pos:line="12" pos:column="32"/></name></expr>;<pos:position pos:line="12" pos:column="33"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">salen<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&lt;<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">socklen_t<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">)<pos:position pos:line="15" pos:column="32"/></operator><sizeof pos:line="15" pos:column="32">sizeof <argument_list pos:line="15" pos:column="39">(<argument><expr pos:line="15" pos:column="40">struct <name pos:line="15" pos:column="47">sockaddr_in<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></sizeof></expr>)<pos:position pos:line="15" pos:column="60"/></condition><then pos:line="15" pos:column="60"> <block pos:line="15" pos:column="61">{
		<return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">EAI_FAIL<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">node<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <block pos:line="19" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">ret<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><call><name pos:line="20" pos:column="27">gethostnameinfo<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">sa<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">node<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">nodelen<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">flags<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="69"/></decl_stmt>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">ret<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
			<block type="pseudo"><return pos:line="22" pos:column="25">return <expr><name pos:line="22" pos:column="32">ret<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></return></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">service<pos:position pos:line="25" pos:column="20"/></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21"> <block pos:line="25" pos:column="22">{
		<return pos:line="26" pos:column="17">return <expr><call><name pos:line="26" pos:column="24">getservicenameinfo<pos:position pos:line="26" pos:column="42"/></name><argument_list pos:line="26" pos:column="42">(<argument><expr><name pos:line="26" pos:column="43">sa<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="47">service<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">servicelen<pos:position pos:line="26" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="68">flags<pos:position pos:line="26" pos:column="73"/></name></expr></argument>)<pos:position pos:line="26" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="75"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_185_rsync-1.6.9.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">int<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">inflate_addhistory<pos:position pos:line="1" pos:column="29"/></name><argument_list pos:line="1" pos:column="29">(<argument><expr><name pos:line="1" pos:column="30">s<pos:position pos:line="1" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="33">z<pos:position pos:line="1" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1" pos:column="35"/></argument_list>
<name pos:line="2" pos:column="1">inflate_blocks_statef<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier><name pos:line="2" pos:column="24">s<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">z_stream<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">z<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uLong<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">b<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>              <comment type="block" pos:line="5" pos:column="27">/* bit buffer */</comment>  <comment type="block" pos:line="5" pos:column="45">/* NOT USED HERE */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uInt<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">k<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>               <comment type="block" pos:line="6" pos:column="27">/* bits in bit buffer */</comment> <comment type="block" pos:line="6" pos:column="52">/* NOT USED HERE */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uInt<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">t<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>               <comment type="block" pos:line="7" pos:column="27">/* temporary storage */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">Bytef<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">p<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>             <comment type="block" pos:line="8" pos:column="27">/* input data pointer */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">uInt<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">n<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>               <comment type="block" pos:line="9" pos:column="27">/* bytes available there */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">Bytef<pos:position pos:line="10" pos:column="10"/></name> <modifier pos:line="10" pos:column="11">*<pos:position pos:line="10" pos:column="12"/></modifier></type><name pos:line="10" pos:column="12">q<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>             <comment type="block" pos:line="10" pos:column="27">/* output window write pointer */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">uInt<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">m<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>               <comment type="block" pos:line="11" pos:column="27">/* bytes to end of window or read pointer */</comment>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">s<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">read<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">!=<pos:position pos:line="13" pos:column="19"/></operator> <name><name pos:line="13" pos:column="20">s<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">write<pos:position pos:line="13" pos:column="28"/></name></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
	<block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">Z_STREAM_ERROR<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></return></block></then></if>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">s<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">mode<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">!=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">TYPE<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
	<block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">Z_DATA_ERROR<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* we're ready to rock */</comment>
    <macro><name pos:line="19" pos:column="5">LOAD<pos:position pos:line="19" pos:column="9"/></name></macro>
    <comment type="block" pos:line="20" pos:column="5">/* while there is input ready, copy to output buffer, moving
     * pointers as needed.
     */</comment>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><name pos:line="23" pos:column="12">n<pos:position pos:line="23" pos:column="13"/></name></expr>)<pos:position pos:line="23" pos:column="14"/></condition> <block pos:line="23" pos:column="15">{
	<expr_stmt><expr><name pos:line="24" pos:column="9">t<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">n<pos:position pos:line="24" pos:column="14"/></name></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>  <comment type="block" pos:line="24" pos:column="17">/* how many to do */</comment>
	<comment type="block" pos:line="25" pos:column="9">/* is there room until end of buffer? */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">t<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&gt;<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="17">m<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19"> <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="20">t<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">m<pos:position pos:line="26" pos:column="25"/></name></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="27" pos:column="9">/* update check information */</comment>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">s<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">checkfn<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">!=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">Z_NULL<pos:position pos:line="28" pos:column="33"/></name></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="13">s<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">check<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <call pos:line="29" pos:column="24">(<modifier pos:line="29" pos:column="25">*<pos:position pos:line="29" pos:column="26"/></modifier><name><name pos:line="29" pos:column="26">s<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">checkfn<pos:position pos:line="29" pos:column="36"/></name></name>)<argument_list pos:line="29" pos:column="37">(<argument><expr><name><name pos:line="29" pos:column="38">s<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">check<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">q<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">t<pos:position pos:line="29" pos:column="52"/></name></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">zmemcpy<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">q<pos:position pos:line="30" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="20">p<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="23">t<pos:position pos:line="30" pos:column="24"/></name></expr></argument>)<pos:position pos:line="30" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">q<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">+=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">t<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="32" pos:column="9">p<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">+=<pos:position pos:line="32" pos:column="13"/></operator> <name pos:line="32" pos:column="14">t<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="33" pos:column="9">n<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">-=<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">t<pos:position pos:line="33" pos:column="15"/></name></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">z<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">total_out<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">+=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">t<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">s<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">read<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">q<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>    <comment type="block" pos:line="35" pos:column="25">/* drag read pointer forward */</comment>
<comment type="block" pos:line="36" pos:column="1">/*      ZWRAP  */</comment> 	<comment type="block" pos:line="36" pos:column="25">/* expand ZWRAP macro by hand to handle s-&gt;read */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">q<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">==<pos:position pos:line="37" pos:column="17"/></operator> <name><name pos:line="37" pos:column="18">s<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">end<pos:position pos:line="37" pos:column="24"/></name></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25"> <block pos:line="37" pos:column="26">{
	    <expr_stmt><expr><name><name pos:line="38" pos:column="13">s<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">read<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">q<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name><name pos:line="38" pos:column="27">s<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">window<pos:position pos:line="38" pos:column="36"/></name></name></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="39" pos:column="13">m<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="17">WAVAIL<pos:position pos:line="39" pos:column="23"/></name></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></while>
    <macro><name pos:line="42" pos:column="5">UPDATE<pos:position pos:line="42" pos:column="11"/></name></macro>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">Z_OK<pos:position pos:line="43" pos:column="16"/></name></expr>;<pos:position pos:line="43" pos:column="17"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></unit>

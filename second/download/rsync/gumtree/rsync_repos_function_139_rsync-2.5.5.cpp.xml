<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_139_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">open_socket_out_wrapped<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">host<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">port<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">bind_address<pos:position pos:line="3" pos:column="54"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="4" pos:column="30">int<pos:position pos:line="4" pos:column="33"/></name></type> <name pos:line="4" pos:column="34">af_hint<pos:position pos:line="4" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="42"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">prog<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">prog<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <call><name pos:line="8" pos:column="21">getenv<pos:position pos:line="8" pos:column="27"/></name> <argument_list pos:line="8" pos:column="28">(<argument><expr><literal type="string" pos:line="8" pos:column="29">"RSYNC_CONNECT_PROG"<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call><operator pos:line="8" pos:column="50">)<pos:position pos:line="8" pos:column="51"/></operator> <operator pos:line="8" pos:column="52">!=<pos:position pos:line="8" pos:column="54"/></operator> <name pos:line="8" pos:column="55">NULL<pos:position pos:line="8" pos:column="59"/></name></expr>)<pos:position pos:line="8" pos:column="60"/></condition><then pos:line="8" pos:column="60"> 
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><call><name pos:line="9" pos:column="24">sock_exec<pos:position pos:line="9" pos:column="33"/></name> <argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">prog<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></return></block></then>
	<else pos:line="10" pos:column="9">else 
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">open_socket_out<pos:position pos:line="11" pos:column="39"/></name> <argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">host<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">port<pos:position pos:line="11" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="53">bind_address<pos:position pos:line="11" pos:column="65"/></name></expr></argument>,
					<argument><expr><name pos:line="12" pos:column="41">af_hint<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></return></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

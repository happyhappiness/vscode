<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_473_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">poptReadConfigFile<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">poptContext<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">con<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type> <name pos:line="1" pos:column="54">fn<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">char<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type> <name pos:line="2" pos:column="12">file<pos:position pos:line="2" pos:column="16"/></name><init pos:line="2" pos:column="16">=<expr><name pos:line="2" pos:column="17">NULL<pos:position pos:line="2" pos:column="21"/></name></expr></init></decl>, <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier> <decl><type ref="prev"/><name pos:line="2" pos:column="25">chptr<pos:position pos:line="2" pos:column="30"/></name></decl>, <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier> <decl><type ref="prev"/><name pos:line="2" pos:column="34">end<pos:position pos:line="2" pos:column="37"/></name></decl>;<pos:position pos:line="2" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type> <name pos:line="3" pos:column="12">buf<pos:position pos:line="3" pos:column="15"/></name><init pos:line="3" pos:column="15">=<expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier> <decl><type ref="prev"/><name pos:line="3" pos:column="24">dst<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">fd<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">rc<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">fileLength<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">fd<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">open<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">fn<pos:position pos:line="7" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">O_RDONLY<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">fd<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&lt;<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16"> <block pos:line="8" pos:column="17">{
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">errno<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">==<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">ENOENT<pos:position pos:line="9" pos:column="28"/></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
	    <block type="pseudo"><return pos:line="10" pos:column="13">return <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then>
	<else pos:line="11" pos:column="9">else 
	    <block type="pseudo"><return pos:line="12" pos:column="13">return <expr><name pos:line="12" pos:column="20">POPT_ERROR_ERRNO<pos:position pos:line="12" pos:column="36"/></name></expr>;<pos:position pos:line="12" pos:column="37"/></return></block></else></if>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">fileLength<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">lseek<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">fd<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">SEEK_END<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">(<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">void<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">)<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">lseek<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">fd<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="25">0<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">file<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">malloc<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">fileLength<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">+<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">read<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">fd<pos:position pos:line="19" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="18">file<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">fileLength<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call> <operator pos:line="19" pos:column="36">!=<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="39">fileLength<pos:position pos:line="19" pos:column="49"/></name></expr>)<pos:position pos:line="19" pos:column="50"/></condition><then pos:line="19" pos:column="50"> <block pos:line="19" pos:column="51">{
	<expr_stmt><expr><name pos:line="20" pos:column="9">rc<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">errno<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">close<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">fd<pos:position pos:line="21" pos:column="17"/></name></expr></argument>)<pos:position pos:line="21" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">errno<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">rc<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">file<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="19">free<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">file<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt></block></then></if>
	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">POPT_ERROR_ERRNO<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">close<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><name pos:line="26" pos:column="11">fd<pos:position pos:line="26" pos:column="13"/></name></expr></argument>)<pos:position pos:line="26" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">dst<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <name pos:line="28" pos:column="11">buf<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">malloc<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">fileLength<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">+<pos:position pos:line="28" pos:column="36"/></operator> <literal type="number" pos:line="28" pos:column="37">1<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">chptr<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">file<pos:position pos:line="30" pos:column="17"/></name></expr>;<pos:position pos:line="30" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">end<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <operator pos:line="31" pos:column="11">(<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">file<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">+<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">fileLength<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">)<pos:position pos:line="31" pos:column="30"/></operator></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><name pos:line="32" pos:column="12">chptr<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">&lt;<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="20">end<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition> <block pos:line="32" pos:column="25">{
	<switch pos:line="33" pos:column="9">switch <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">chptr<pos:position pos:line="33" pos:column="23"/></name></expr>)<pos:position pos:line="33" pos:column="24"/></condition> <block pos:line="33" pos:column="25">{
	  <case pos:line="34" pos:column="11">case <expr><literal type="char" pos:line="34" pos:column="16">'\n'<pos:position pos:line="34" pos:column="20"/></literal></expr>:<pos:position pos:line="34" pos:column="21"/></case>
	    <expr_stmt><expr><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">dst<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <literal type="char" pos:line="35" pos:column="20">'\0'<pos:position pos:line="35" pos:column="24"/></literal></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="36" pos:column="13">dst<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">buf<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
	    <while pos:line="37" pos:column="13">while <condition pos:line="37" pos:column="19">(<expr><operator pos:line="37" pos:column="20">*<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">dst<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">&amp;&amp;<pos:position pos:line="37" pos:column="35"/></operator> <call><name pos:line="37" pos:column="28">isspace<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><operator pos:line="37" pos:column="36">*<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">dst<pos:position pos:line="37" pos:column="40"/></name></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="42"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="43">dst<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">++<pos:position pos:line="37" pos:column="48"/></operator></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt></block></while>
	    <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">dst<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">&amp;&amp;<pos:position pos:line="38" pos:column="32"/></operator> <operator pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">dst<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">!=<pos:position pos:line="38" pos:column="32"/></operator> <literal type="char" pos:line="38" pos:column="33">'#'<pos:position pos:line="38" pos:column="36"/></literal></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37"> <block pos:line="38" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">configLine<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">con<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="33">dst<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
	    }<pos:position pos:line="40" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name pos:line="41" pos:column="13">chptr<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">++<pos:position pos:line="41" pos:column="20"/></operator></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
	    <break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break>
	  <case pos:line="43" pos:column="11">case <expr><literal type="char" pos:line="43" pos:column="16">'\\'<pos:position pos:line="43" pos:column="20"/></literal></expr>:<pos:position pos:line="43" pos:column="21"/></case>
	    <expr_stmt><expr><operator pos:line="44" pos:column="13">*<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">dst<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">++<pos:position pos:line="44" pos:column="19"/></operator> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="22">*<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">chptr<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">++<pos:position pos:line="44" pos:column="30"/></operator></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
	    <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">chptr<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">&lt;<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="25">end<pos:position pos:line="45" pos:column="28"/></name></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29"> <block pos:line="45" pos:column="30">{
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">chptr<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">==<pos:position pos:line="46" pos:column="30"/></operator> <literal type="char" pos:line="46" pos:column="31">'\n'<pos:position pos:line="46" pos:column="35"/></literal></expr>)<pos:position pos:line="46" pos:column="36"/></condition><then pos:line="46" pos:column="36"> 
		    <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="21">dst<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">--<pos:position pos:line="47" pos:column="26"/></operator></expr><operator pos:line="47" pos:column="26">,<pos:position pos:line="47" pos:column="27"/></operator> <expr><name pos:line="47" pos:column="28">chptr<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">++<pos:position pos:line="47" pos:column="35"/></operator></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt></block></then>	
		    <comment type="block" pos:line="48" pos:column="21">/* \ at the end of a line does not insert a \n */</comment>
		<else pos:line="49" pos:column="17">else
		    <block type="pseudo"><expr_stmt><expr><operator pos:line="50" pos:column="21">*<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="22">dst<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">++<pos:position pos:line="50" pos:column="27"/></operator> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <operator pos:line="50" pos:column="30">*<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">chptr<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">++<pos:position pos:line="50" pos:column="38"/></operator></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt></block></else></if>
	    }<pos:position pos:line="51" pos:column="14"/></block></then></if>
	    <break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break>
	  <default pos:line="53" pos:column="11">default:<pos:position pos:line="53" pos:column="19"/></default>
	    <expr_stmt><expr><operator pos:line="54" pos:column="13">*<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">dst<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">++<pos:position pos:line="54" pos:column="19"/></operator> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <operator pos:line="54" pos:column="22">*<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">chptr<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">++<pos:position pos:line="54" pos:column="30"/></operator></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
	    <break pos:line="55" pos:column="13">break;<pos:position pos:line="55" pos:column="19"/></break>
	}<pos:position pos:line="56" pos:column="10"/></block></switch>
    }<pos:position pos:line="57" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">free<pos:position pos:line="59" pos:column="9"/></name><argument_list pos:line="59" pos:column="9">(<argument><expr><name pos:line="59" pos:column="10">file<pos:position pos:line="59" pos:column="14"/></name></expr></argument>)<pos:position pos:line="59" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">free<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><name pos:line="60" pos:column="10">buf<pos:position pos:line="60" pos:column="13"/></name></expr></argument>)<pos:position pos:line="60" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="15"/></expr_stmt>

    <return pos:line="62" pos:column="5">return <expr><literal type="number" pos:line="62" pos:column="12">0<pos:position pos:line="62" pos:column="13"/></literal></expr>;<pos:position pos:line="62" pos:column="14"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

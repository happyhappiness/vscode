<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_239_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">simple_send_token<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">f<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int32<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">token<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">map_struct<pos:position pos:line="1" pos:column="68"/></name></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">buf<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">OFF_T<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">offset<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int32<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">n<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">n<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">&gt;<pos:position pos:line="4" pos:column="19"/></operator> <literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">int32<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">len<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
		<while pos:line="6" pos:column="17">while <condition pos:line="6" pos:column="23">(<expr><name pos:line="6" pos:column="24">len<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&lt;<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="30">n<pos:position pos:line="6" pos:column="31"/></name></expr>)<pos:position pos:line="6" pos:column="32"/></condition> <block pos:line="6" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="7" pos:column="25">int32<pos:position pos:line="7" pos:column="30"/></name></type> <name pos:line="7" pos:column="31">n1<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><call><name pos:line="7" pos:column="36">MIN<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">CHUNK_SIZE<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">n<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">-<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="54">len<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="8" pos:column="25">write_int<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">f<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="38">n1<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">write_buf<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">f<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="38">map_ptr<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">buf<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">offset<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">+<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">len<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">n1<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="68">n1<pos:position pos:line="9" pos:column="70"/></name></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name pos:line="10" pos:column="25">len<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">+=<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">n1<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="11" pos:column="18"/></block></while>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="13" pos:column="9">/* a -2 token means to send data only and no token */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">token<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">!=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">-<pos:position pos:line="14" pos:column="23"/></operator><literal type="number" pos:line="14" pos:column="23">2<pos:position pos:line="14" pos:column="24"/></literal></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">write_int<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">f<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="30">-<pos:position pos:line="15" pos:column="31"/></operator><operator pos:line="15" pos:column="31">(<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">token<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">+<pos:position pos:line="15" pos:column="38"/></operator><literal type="number" pos:line="15" pos:column="38">1<pos:position pos:line="15" pos:column="39"/></literal><operator pos:line="15" pos:column="39">)<pos:position pos:line="15" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

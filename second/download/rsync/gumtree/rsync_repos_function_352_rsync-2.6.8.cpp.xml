<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_352_rsync-2.6.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_file_entry<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">file_struct<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">file<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">f<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">short<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">flags<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">time_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">modtime<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">mode_t<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">mode<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int64<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">dev<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">dev_t<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">rdev<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">uint32<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">rdev_major<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">uid_t<pos:position pos:line="9" pos:column="21"/></name></type> <name pos:line="9" pos:column="22">uid<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">gid_t<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">gid<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">static<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name></type> <name><name pos:line="11" pos:column="21">lastname<pos:position pos:line="11" pos:column="29"/></name><index pos:line="11" pos:column="29">[<expr><name pos:line="11" pos:column="30">MAXPATHLEN<pos:position pos:line="11" pos:column="40"/></name></expr>]<pos:position pos:line="11" pos:column="41"/></index></name></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name></type> <name><name pos:line="12" pos:column="14">fname<pos:position pos:line="12" pos:column="19"/></name><index pos:line="12" pos:column="19">[<expr><name pos:line="12" pos:column="20">MAXPATHLEN<pos:position pos:line="12" pos:column="30"/></name></expr>]<pos:position pos:line="12" pos:column="31"/></index></name></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">l1<pos:position pos:line="13" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="17">l2<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">f<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">&lt;<pos:position pos:line="15" pos:column="19"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
		<block type="pseudo"><return pos:line="16" pos:column="17">return;<pos:position pos:line="16" pos:column="24"/></return></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">file<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19"> <block pos:line="18" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">write_byte<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">f<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="31">0<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">modtime<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <literal type="number" pos:line="20" pos:column="27">0<pos:position pos:line="20" pos:column="28"/></literal></expr><operator pos:line="20" pos:column="28">,<pos:position pos:line="20" pos:column="29"/></operator> <expr><name pos:line="20" pos:column="30">mode<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">=<pos:position pos:line="20" pos:column="36"/></operator> <literal type="number" pos:line="20" pos:column="37">0<pos:position pos:line="20" pos:column="38"/></literal></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">dev<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr><operator pos:line="21" pos:column="24">,<pos:position pos:line="21" pos:column="25"/></operator> <expr><name pos:line="21" pos:column="26">rdev<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <call><name pos:line="21" pos:column="33">makedev<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><literal type="number" pos:line="21" pos:column="41">0<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="44">0<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">rdev_major<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">uid<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="number" pos:line="23" pos:column="23">0<pos:position pos:line="23" pos:column="24"/></literal></expr><operator pos:line="23" pos:column="24">,<pos:position pos:line="23" pos:column="25"/></operator> <expr><name pos:line="23" pos:column="26">gid<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">lastname<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <literal type="char" pos:line="24" pos:column="29">'\0'<pos:position pos:line="24" pos:column="33"/></literal></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
		<return pos:line="25" pos:column="17">return;<pos:position pos:line="25" pos:column="24"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">f_name<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">file<pos:position pos:line="28" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="22">fname<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="30" pos:column="9">flags<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <name><name pos:line="30" pos:column="17">file<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">flags<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="31">XMIT_TOP_DIR<pos:position pos:line="30" pos:column="43"/></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name><name pos:line="32" pos:column="13">file<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">mode<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">==<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">mode<pos:position pos:line="32" pos:column="31"/></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">flags<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">|=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">XMIT_SAME_MODE<pos:position pos:line="33" pos:column="40"/></name></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="34" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">mode<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name><name pos:line="35" pos:column="24">file<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">mode<pos:position pos:line="35" pos:column="34"/></name></name></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></else></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">preserve_devices<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&amp;&amp;<pos:position pos:line="36" pos:column="41"/></operator> <call><name pos:line="36" pos:column="34">IS_DEVICE<pos:position pos:line="36" pos:column="43"/></name><argument_list pos:line="36" pos:column="43">(<argument><expr><name pos:line="36" pos:column="44">mode<pos:position pos:line="36" pos:column="48"/></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call><operator pos:line="36" pos:column="49">)<pos:position pos:line="36" pos:column="50"/></operator>
	 <operator pos:line="37" pos:column="10">||<pos:position pos:line="37" pos:column="12"/></operator> <operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">preserve_specials<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">&amp;&amp;<pos:position pos:line="37" pos:column="42"/></operator> <call><name pos:line="37" pos:column="35">IS_SPECIAL<pos:position pos:line="37" pos:column="45"/></name><argument_list pos:line="37" pos:column="45">(<argument><expr><name pos:line="37" pos:column="46">mode<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call><operator pos:line="37" pos:column="51">)<pos:position pos:line="37" pos:column="52"/></operator></expr>)<pos:position pos:line="37" pos:column="53"/></condition><then pos:line="37" pos:column="53"> <block pos:line="37" pos:column="54">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">protocol_version<pos:position pos:line="38" pos:column="37"/></name> <operator pos:line="38" pos:column="38">&lt;<pos:position pos:line="38" pos:column="42"/></operator> <literal type="number" pos:line="38" pos:column="40">28<pos:position pos:line="38" pos:column="42"/></literal></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43"> <block pos:line="38" pos:column="44">{
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name><name pos:line="39" pos:column="29">file<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">u<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">.<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="37">rdev<pos:position pos:line="39" pos:column="41"/></name></name> <operator pos:line="39" pos:column="42">==<pos:position pos:line="39" pos:column="44"/></operator> <name pos:line="39" pos:column="45">rdev<pos:position pos:line="39" pos:column="49"/></name></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="33">flags<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">|=<pos:position pos:line="40" pos:column="41"/></operator> <name pos:line="40" pos:column="42">XMIT_SAME_RDEV_pre28<pos:position pos:line="40" pos:column="62"/></name></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt></block></then>
			<else pos:line="41" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="33">rdev<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">=<pos:position pos:line="42" pos:column="39"/></operator> <name><name pos:line="42" pos:column="40">file<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">-&gt;<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="46">u<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">.<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="48">rdev<pos:position pos:line="42" pos:column="52"/></name></name></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt></block></else></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then> <else pos:line="43" pos:column="19">else <block pos:line="43" pos:column="24">{
			<expr_stmt><expr><name pos:line="44" pos:column="25">rdev<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <name><name pos:line="44" pos:column="32">file<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">-&gt;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="38">u<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">rdev<pos:position pos:line="44" pos:column="44"/></name></name></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><operator pos:line="45" pos:column="29">(<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">uint32<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">)<pos:position pos:line="45" pos:column="37"/></operator><call><name pos:line="45" pos:column="37">major<pos:position pos:line="45" pos:column="42"/></name><argument_list pos:line="45" pos:column="42">(<argument><expr><name pos:line="45" pos:column="43">rdev<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call> <operator pos:line="45" pos:column="49">==<pos:position pos:line="45" pos:column="51"/></operator> <name pos:line="45" pos:column="52">rdev_major<pos:position pos:line="45" pos:column="62"/></name></expr>)<pos:position pos:line="45" pos:column="63"/></condition><then pos:line="45" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="33">flags<pos:position pos:line="46" pos:column="38"/></name> <operator pos:line="46" pos:column="39">|=<pos:position pos:line="46" pos:column="41"/></operator> <name pos:line="46" pos:column="42">XMIT_SAME_RDEV_MAJOR<pos:position pos:line="46" pos:column="62"/></name></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt></block></then>
			<else pos:line="47" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="33">rdev_major<pos:position pos:line="48" pos:column="43"/></name> <operator pos:line="48" pos:column="44">=<pos:position pos:line="48" pos:column="45"/></operator> <call><name pos:line="48" pos:column="46">major<pos:position pos:line="48" pos:column="51"/></name><argument_list pos:line="48" pos:column="51">(<argument><expr><name pos:line="48" pos:column="52">rdev<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt></block></else></if>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><operator pos:line="49" pos:column="29">(<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">uint32<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">)<pos:position pos:line="49" pos:column="37"/></operator><call><name pos:line="49" pos:column="37">minor<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><name pos:line="49" pos:column="43">rdev<pos:position pos:line="49" pos:column="47"/></name></expr></argument>)<pos:position pos:line="49" pos:column="48"/></argument_list></call> <operator pos:line="49" pos:column="49">&lt;=<pos:position pos:line="49" pos:column="54"/></operator> <literal type="number" pos:line="49" pos:column="52">0xFFu<pos:position pos:line="49" pos:column="57"/></literal></expr>)<pos:position pos:line="49" pos:column="58"/></condition><then pos:line="49" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="33">flags<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">|=<pos:position pos:line="50" pos:column="41"/></operator> <name pos:line="50" pos:column="42">XMIT_RDEV_MINOR_IS_SMALL<pos:position pos:line="50" pos:column="66"/></name></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt></block></then></if>
		}<pos:position pos:line="51" pos:column="18"/></block></else></if>
	}<pos:position pos:line="52" pos:column="10"/></block></then> <elseif pos:line="52" pos:column="11">else <if pos:line="52" pos:column="16">if <condition pos:line="52" pos:column="19">(<expr><name pos:line="52" pos:column="20">protocol_version<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">&lt;<pos:position pos:line="52" pos:column="41"/></operator> <literal type="number" pos:line="52" pos:column="39">28<pos:position pos:line="52" pos:column="41"/></literal></expr>)<pos:position pos:line="52" pos:column="42"/></condition><then pos:line="52" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="17">rdev<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <call><name pos:line="53" pos:column="24">makedev<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><literal type="number" pos:line="53" pos:column="32">0<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="35">0<pos:position pos:line="53" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="38"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">file<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">uid<pos:position pos:line="54" pos:column="22"/></name></name> <operator pos:line="54" pos:column="23">==<pos:position pos:line="54" pos:column="25"/></operator> <name pos:line="54" pos:column="26">uid<pos:position pos:line="54" pos:column="29"/></name></expr>)<pos:position pos:line="54" pos:column="30"/></condition><then pos:line="54" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="17">flags<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">|=<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="26">XMIT_SAME_UID<pos:position pos:line="55" pos:column="39"/></name></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt></block></then>
	<else pos:line="56" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="17">uid<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <name><name pos:line="57" pos:column="23">file<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">uid<pos:position pos:line="57" pos:column="32"/></name></name></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt></block></else></if>
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">file<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">gid<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">==<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="26">gid<pos:position pos:line="58" pos:column="29"/></name></expr>)<pos:position pos:line="58" pos:column="30"/></condition><then pos:line="58" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="17">flags<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">|=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">XMIT_SAME_GID<pos:position pos:line="59" pos:column="39"/></name></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt></block></then>
	<else pos:line="60" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="17">gid<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <name><name pos:line="61" pos:column="23">file<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">-&gt;<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="29">gid<pos:position pos:line="61" pos:column="32"/></name></name></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt></block></else></if>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name><name pos:line="62" pos:column="13">file<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">-&gt;<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="19">modtime<pos:position pos:line="62" pos:column="26"/></name></name> <operator pos:line="62" pos:column="27">==<pos:position pos:line="62" pos:column="29"/></operator> <name pos:line="62" pos:column="30">modtime<pos:position pos:line="62" pos:column="37"/></name></expr>)<pos:position pos:line="62" pos:column="38"/></condition><then pos:line="62" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="17">flags<pos:position pos:line="63" pos:column="22"/></name> <operator pos:line="63" pos:column="23">|=<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">XMIT_SAME_TIME<pos:position pos:line="63" pos:column="40"/></name></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="64" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="17">modtime<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">=<pos:position pos:line="65" pos:column="26"/></operator> <name><name pos:line="65" pos:column="27">file<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">-&gt;<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="33">modtime<pos:position pos:line="65" pos:column="40"/></name></name></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt></block></else></if>

<cpp:ifdef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifdef<pos:position pos:line="67" pos:column="7"/></cpp:directive> <name pos:line="67" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="67" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">file<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">-&gt;<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="19">link_u<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">.<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">idev<pos:position pos:line="68" pos:column="30"/></name></name></expr>)<pos:position pos:line="68" pos:column="31"/></condition><then pos:line="68" pos:column="31"> <block pos:line="68" pos:column="32">{
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name><name pos:line="69" pos:column="21">file<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">-&gt;<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="27">F_DEV<pos:position pos:line="69" pos:column="32"/></name></name> <operator pos:line="69" pos:column="33">==<pos:position pos:line="69" pos:column="35"/></operator> <name pos:line="69" pos:column="36">dev<pos:position pos:line="69" pos:column="39"/></name></expr>)<pos:position pos:line="69" pos:column="40"/></condition><then pos:line="69" pos:column="40"> <block pos:line="69" pos:column="41">{
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name pos:line="70" pos:column="29">protocol_version<pos:position pos:line="70" pos:column="45"/></name> <operator pos:line="70" pos:column="46">&gt;=<pos:position pos:line="70" pos:column="51"/></operator> <literal type="number" pos:line="70" pos:column="49">28<pos:position pos:line="70" pos:column="51"/></literal></expr>)<pos:position pos:line="70" pos:column="52"/></condition><then pos:line="70" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="33">flags<pos:position pos:line="71" pos:column="38"/></name> <operator pos:line="71" pos:column="39">|=<pos:position pos:line="71" pos:column="41"/></operator> <name pos:line="71" pos:column="42">XMIT_SAME_DEV<pos:position pos:line="71" pos:column="55"/></name></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt></block></then></if>
		}<pos:position pos:line="72" pos:column="18"/></block></then> <else pos:line="72" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="25">dev<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name><name pos:line="73" pos:column="31">file<pos:position pos:line="73" pos:column="35"/></name><operator pos:line="73" pos:column="35">-&gt;<pos:position pos:line="73" pos:column="40"/></operator><name pos:line="73" pos:column="37">F_DEV<pos:position pos:line="73" pos:column="42"/></name></name></expr>;<pos:position pos:line="73" pos:column="43"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="74" pos:column="17">flags<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">|=<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">XMIT_HAS_IDEV_DATA<pos:position pos:line="74" pos:column="44"/></name></expr>;<pos:position pos:line="74" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="75" pos:column="10"/></block></then></if>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>

	<for pos:line="78" pos:column="9">for <control pos:line="78" pos:column="13">(<init><expr><name pos:line="78" pos:column="14">l1<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <literal type="number" pos:line="78" pos:column="19">0<pos:position pos:line="78" pos:column="20"/></literal></expr>;<pos:position pos:line="78" pos:column="21"/></init>
	    <condition><expr><name><name pos:line="79" pos:column="13">lastname<pos:position pos:line="79" pos:column="21"/></name><index pos:line="79" pos:column="21">[<expr><name pos:line="79" pos:column="22">l1<pos:position pos:line="79" pos:column="24"/></name></expr>]<pos:position pos:line="79" pos:column="25"/></index></name> <operator pos:line="79" pos:column="26">&amp;&amp;<pos:position pos:line="79" pos:column="36"/></operator> <operator pos:line="79" pos:column="29">(<pos:position pos:line="79" pos:column="30"/></operator><name><name pos:line="79" pos:column="30">fname<pos:position pos:line="79" pos:column="35"/></name><index pos:line="79" pos:column="35">[<expr><name pos:line="79" pos:column="36">l1<pos:position pos:line="79" pos:column="38"/></name></expr>]<pos:position pos:line="79" pos:column="39"/></index></name> <operator pos:line="79" pos:column="40">==<pos:position pos:line="79" pos:column="42"/></operator> <name><name pos:line="79" pos:column="43">lastname<pos:position pos:line="79" pos:column="51"/></name><index pos:line="79" pos:column="51">[<expr><name pos:line="79" pos:column="52">l1<pos:position pos:line="79" pos:column="54"/></name></expr>]<pos:position pos:line="79" pos:column="55"/></index></name><operator pos:line="79" pos:column="55">)<pos:position pos:line="79" pos:column="56"/></operator> <operator pos:line="79" pos:column="57">&amp;&amp;<pos:position pos:line="79" pos:column="67"/></operator> <operator pos:line="79" pos:column="60">(<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="61">l1<pos:position pos:line="79" pos:column="63"/></name> <operator pos:line="79" pos:column="64">&lt;<pos:position pos:line="79" pos:column="68"/></operator> <literal type="number" pos:line="79" pos:column="66">255<pos:position pos:line="79" pos:column="69"/></literal><operator pos:line="79" pos:column="69">)<pos:position pos:line="79" pos:column="70"/></operator></expr>;<pos:position pos:line="79" pos:column="71"/></condition>
	    <incr><expr><name pos:line="80" pos:column="13">l1<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">++<pos:position pos:line="80" pos:column="17"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="18"/></control> <block pos:line="80" pos:column="19">{}<pos:position pos:line="80" pos:column="21"/></block></for>
	<expr_stmt><expr><name pos:line="81" pos:column="9">l2<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <call><name pos:line="81" pos:column="14">strlen<pos:position pos:line="81" pos:column="20"/></name><argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">fname<pos:position pos:line="81" pos:column="26"/></name><operator pos:line="81" pos:column="26">+<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="27">l1<pos:position pos:line="81" pos:column="29"/></name></expr></argument>)<pos:position pos:line="81" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt>

	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">l1<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">&gt;<pos:position pos:line="83" pos:column="20"/></operator> <literal type="number" pos:line="83" pos:column="18">0<pos:position pos:line="83" pos:column="19"/></literal></expr>)<pos:position pos:line="83" pos:column="20"/></condition><then pos:line="83" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="17">flags<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">|=<pos:position pos:line="84" pos:column="25"/></operator> <name pos:line="84" pos:column="26">XMIT_SAME_NAME<pos:position pos:line="84" pos:column="40"/></name></expr>;<pos:position pos:line="84" pos:column="41"/></expr_stmt></block></then></if>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">l2<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">&gt;<pos:position pos:line="85" pos:column="20"/></operator> <literal type="number" pos:line="85" pos:column="18">255<pos:position pos:line="85" pos:column="21"/></literal></expr>)<pos:position pos:line="85" pos:column="22"/></condition><then pos:line="85" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="86" pos:column="17">flags<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">|=<pos:position pos:line="86" pos:column="25"/></operator> <name pos:line="86" pos:column="26">XMIT_LONG_NAME<pos:position pos:line="86" pos:column="40"/></name></expr>;<pos:position pos:line="86" pos:column="41"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="88" pos:column="9">/* We must make sure we don't send a zero flag byte or the
	 * other end will terminate the flist transfer.  Note that
	 * the use of XMIT_TOP_DIR on a non-dir has no meaning, so
	 * it's harmless way to add a bit to the first flag byte. */</comment>
	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">protocol_version<pos:position pos:line="92" pos:column="29"/></name> <operator pos:line="92" pos:column="30">&gt;=<pos:position pos:line="92" pos:column="35"/></operator> <literal type="number" pos:line="92" pos:column="33">28<pos:position pos:line="92" pos:column="35"/></literal></expr>)<pos:position pos:line="92" pos:column="36"/></condition><then pos:line="92" pos:column="36"> <block pos:line="92" pos:column="37">{
		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><operator pos:line="93" pos:column="21">!<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="22">flags<pos:position pos:line="93" pos:column="27"/></name> <operator pos:line="93" pos:column="28">&amp;&amp;<pos:position pos:line="93" pos:column="38"/></operator> <operator pos:line="93" pos:column="31">!<pos:position pos:line="93" pos:column="32"/></operator><call><name pos:line="93" pos:column="32">S_ISDIR<pos:position pos:line="93" pos:column="39"/></name><argument_list pos:line="93" pos:column="39">(<argument><expr><name pos:line="93" pos:column="40">mode<pos:position pos:line="93" pos:column="44"/></name></expr></argument>)<pos:position pos:line="93" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="46"/></condition><then pos:line="93" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="25">flags<pos:position pos:line="94" pos:column="30"/></name> <operator pos:line="94" pos:column="31">|=<pos:position pos:line="94" pos:column="33"/></operator> <name pos:line="94" pos:column="34">XMIT_TOP_DIR<pos:position pos:line="94" pos:column="46"/></name></expr>;<pos:position pos:line="94" pos:column="47"/></expr_stmt></block></then></if>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><operator pos:line="95" pos:column="21">(<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="22">flags<pos:position pos:line="95" pos:column="27"/></name> <operator pos:line="95" pos:column="28">&amp;<pos:position pos:line="95" pos:column="33"/></operator> <literal type="number" pos:line="95" pos:column="30">0xFF00<pos:position pos:line="95" pos:column="36"/></literal><operator pos:line="95" pos:column="36">)<pos:position pos:line="95" pos:column="37"/></operator> <operator pos:line="95" pos:column="38">||<pos:position pos:line="95" pos:column="40"/></operator> <operator pos:line="95" pos:column="41">!<pos:position pos:line="95" pos:column="42"/></operator><name pos:line="95" pos:column="42">flags<pos:position pos:line="95" pos:column="47"/></name></expr>)<pos:position pos:line="95" pos:column="48"/></condition><then pos:line="95" pos:column="48"> <block pos:line="95" pos:column="49">{
			<expr_stmt><expr><name pos:line="96" pos:column="25">flags<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">|=<pos:position pos:line="96" pos:column="33"/></operator> <name pos:line="96" pos:column="34">XMIT_EXTENDED_FLAGS<pos:position pos:line="96" pos:column="53"/></name></expr>;<pos:position pos:line="96" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="97" pos:column="25">write_byte<pos:position pos:line="97" pos:column="35"/></name><argument_list pos:line="97" pos:column="35">(<argument><expr><name pos:line="97" pos:column="36">f<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="39">flags<pos:position pos:line="97" pos:column="44"/></name></expr></argument>)<pos:position pos:line="97" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="98" pos:column="25">write_byte<pos:position pos:line="98" pos:column="35"/></name><argument_list pos:line="98" pos:column="35">(<argument><expr><name pos:line="98" pos:column="36">f<pos:position pos:line="98" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="39">flags<pos:position pos:line="98" pos:column="44"/></name> <operator pos:line="98" pos:column="45">&gt;&gt;<pos:position pos:line="98" pos:column="50"/></operator> <literal type="number" pos:line="98" pos:column="48">8<pos:position pos:line="98" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="99" pos:column="18"/></block></then> <else pos:line="99" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="100" pos:column="25">write_byte<pos:position pos:line="100" pos:column="35"/></name><argument_list pos:line="100" pos:column="35">(<argument><expr><name pos:line="100" pos:column="36">f<pos:position pos:line="100" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="39">flags<pos:position pos:line="100" pos:column="44"/></name></expr></argument>)<pos:position pos:line="100" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="46"/></expr_stmt></block></else></if>
	}<pos:position pos:line="101" pos:column="10"/></block></then> <else pos:line="101" pos:column="11">else <block pos:line="101" pos:column="16">{
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><operator pos:line="102" pos:column="21">!<pos:position pos:line="102" pos:column="22"/></operator><operator pos:line="102" pos:column="22">(<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="23">flags<pos:position pos:line="102" pos:column="28"/></name> <operator pos:line="102" pos:column="29">&amp;<pos:position pos:line="102" pos:column="34"/></operator> <literal type="number" pos:line="102" pos:column="31">0xFF<pos:position pos:line="102" pos:column="35"/></literal><operator pos:line="102" pos:column="35">)<pos:position pos:line="102" pos:column="36"/></operator></expr>)<pos:position pos:line="102" pos:column="37"/></condition><then pos:line="102" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="25">flags<pos:position pos:line="103" pos:column="30"/></name> <operator pos:line="103" pos:column="31">|=<pos:position pos:line="103" pos:column="33"/></operator> <ternary><condition><expr><call><name pos:line="103" pos:column="34">S_ISDIR<pos:position pos:line="103" pos:column="41"/></name><argument_list pos:line="103" pos:column="41">(<argument><expr><name pos:line="103" pos:column="42">mode<pos:position pos:line="103" pos:column="46"/></name></expr></argument>)<pos:position pos:line="103" pos:column="47"/></argument_list></call></expr> ?<pos:position pos:line="103" pos:column="49"/></condition><then pos:line="103" pos:column="49"> <expr><name pos:line="103" pos:column="50">XMIT_LONG_NAME<pos:position pos:line="103" pos:column="64"/></name></expr> <pos:position pos:line="103" pos:column="65"/></then><else pos:line="103" pos:column="65">: <expr><name pos:line="103" pos:column="67">XMIT_TOP_DIR<pos:position pos:line="103" pos:column="79"/></name></expr></else></ternary></expr>;<pos:position pos:line="103" pos:column="80"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">write_byte<pos:position pos:line="104" pos:column="27"/></name><argument_list pos:line="104" pos:column="27">(<argument><expr><name pos:line="104" pos:column="28">f<pos:position pos:line="104" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="31">flags<pos:position pos:line="104" pos:column="36"/></name></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="105" pos:column="10"/></block></else></if>
	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">flags<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">&amp;<pos:position pos:line="106" pos:column="24"/></operator> <name pos:line="106" pos:column="21">XMIT_SAME_NAME<pos:position pos:line="106" pos:column="35"/></name></expr>)<pos:position pos:line="106" pos:column="36"/></condition><then pos:line="106" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="17">write_byte<pos:position pos:line="107" pos:column="27"/></name><argument_list pos:line="107" pos:column="27">(<argument><expr><name pos:line="107" pos:column="28">f<pos:position pos:line="107" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="31">l1<pos:position pos:line="107" pos:column="33"/></name></expr></argument>)<pos:position pos:line="107" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">flags<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">&amp;<pos:position pos:line="108" pos:column="24"/></operator> <name pos:line="108" pos:column="21">XMIT_LONG_NAME<pos:position pos:line="108" pos:column="35"/></name></expr>)<pos:position pos:line="108" pos:column="36"/></condition><then pos:line="108" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="17">write_int<pos:position pos:line="109" pos:column="26"/></name><argument_list pos:line="109" pos:column="26">(<argument><expr><name pos:line="109" pos:column="27">f<pos:position pos:line="109" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="30">l2<pos:position pos:line="109" pos:column="32"/></name></expr></argument>)<pos:position pos:line="109" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="110" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="17">write_byte<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">f<pos:position pos:line="111" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="31">l2<pos:position pos:line="111" pos:column="33"/></name></expr></argument>)<pos:position pos:line="111" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="35"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="112" pos:column="9">write_buf<pos:position pos:line="112" pos:column="18"/></name><argument_list pos:line="112" pos:column="18">(<argument><expr><name pos:line="112" pos:column="19">f<pos:position pos:line="112" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="22">fname<pos:position pos:line="112" pos:column="27"/></name> <operator pos:line="112" pos:column="28">+<pos:position pos:line="112" pos:column="29"/></operator> <name pos:line="112" pos:column="30">l1<pos:position pos:line="112" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="34">l2<pos:position pos:line="112" pos:column="36"/></name></expr></argument>)<pos:position pos:line="112" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="114" pos:column="9">write_longint<pos:position pos:line="114" pos:column="22"/></name><argument_list pos:line="114" pos:column="22">(<argument><expr><name pos:line="114" pos:column="23">f<pos:position pos:line="114" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="26">file<pos:position pos:line="114" pos:column="30"/></name><operator pos:line="114" pos:column="30">-&gt;<pos:position pos:line="114" pos:column="35"/></operator><name pos:line="114" pos:column="32">length<pos:position pos:line="114" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="40"/></expr_stmt>
	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><operator pos:line="115" pos:column="13">!<pos:position pos:line="115" pos:column="14"/></operator><operator pos:line="115" pos:column="14">(<pos:position pos:line="115" pos:column="15"/></operator><name pos:line="115" pos:column="15">flags<pos:position pos:line="115" pos:column="20"/></name> <operator pos:line="115" pos:column="21">&amp;<pos:position pos:line="115" pos:column="26"/></operator> <name pos:line="115" pos:column="23">XMIT_SAME_TIME<pos:position pos:line="115" pos:column="37"/></name><operator pos:line="115" pos:column="37">)<pos:position pos:line="115" pos:column="38"/></operator></expr>)<pos:position pos:line="115" pos:column="39"/></condition><then pos:line="115" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="17">write_int<pos:position pos:line="116" pos:column="26"/></name><argument_list pos:line="116" pos:column="26">(<argument><expr><name pos:line="116" pos:column="27">f<pos:position pos:line="116" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="30">modtime<pos:position pos:line="116" pos:column="37"/></name></expr></argument>)<pos:position pos:line="116" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><operator pos:line="117" pos:column="13">!<pos:position pos:line="117" pos:column="14"/></operator><operator pos:line="117" pos:column="14">(<pos:position pos:line="117" pos:column="15"/></operator><name pos:line="117" pos:column="15">flags<pos:position pos:line="117" pos:column="20"/></name> <operator pos:line="117" pos:column="21">&amp;<pos:position pos:line="117" pos:column="26"/></operator> <name pos:line="117" pos:column="23">XMIT_SAME_MODE<pos:position pos:line="117" pos:column="37"/></name><operator pos:line="117" pos:column="37">)<pos:position pos:line="117" pos:column="38"/></operator></expr>)<pos:position pos:line="117" pos:column="39"/></condition><then pos:line="117" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="17">write_int<pos:position pos:line="118" pos:column="26"/></name><argument_list pos:line="118" pos:column="26">(<argument><expr><name pos:line="118" pos:column="27">f<pos:position pos:line="118" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="30">to_wire_mode<pos:position pos:line="118" pos:column="42"/></name><argument_list pos:line="118" pos:column="42">(<argument><expr><name pos:line="118" pos:column="43">mode<pos:position pos:line="118" pos:column="47"/></name></expr></argument>)<pos:position pos:line="118" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="50"/></expr_stmt></block></then></if>
	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">preserve_uid<pos:position pos:line="119" pos:column="25"/></name> <operator pos:line="119" pos:column="26">&amp;&amp;<pos:position pos:line="119" pos:column="36"/></operator> <operator pos:line="119" pos:column="29">!<pos:position pos:line="119" pos:column="30"/></operator><operator pos:line="119" pos:column="30">(<pos:position pos:line="119" pos:column="31"/></operator><name pos:line="119" pos:column="31">flags<pos:position pos:line="119" pos:column="36"/></name> <operator pos:line="119" pos:column="37">&amp;<pos:position pos:line="119" pos:column="42"/></operator> <name pos:line="119" pos:column="39">XMIT_SAME_UID<pos:position pos:line="119" pos:column="52"/></name><operator pos:line="119" pos:column="52">)<pos:position pos:line="119" pos:column="53"/></operator></expr>)<pos:position pos:line="119" pos:column="54"/></condition><then pos:line="119" pos:column="54"> <block pos:line="119" pos:column="55">{
		<if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><operator pos:line="120" pos:column="21">!<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="22">numeric_ids<pos:position pos:line="120" pos:column="33"/></name></expr>)<pos:position pos:line="120" pos:column="34"/></condition><then pos:line="120" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="25">add_uid<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">uid<pos:position pos:line="121" pos:column="36"/></name></expr></argument>)<pos:position pos:line="121" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="38"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="122" pos:column="17">write_int<pos:position pos:line="122" pos:column="26"/></name><argument_list pos:line="122" pos:column="26">(<argument><expr><name pos:line="122" pos:column="27">f<pos:position pos:line="122" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="30">uid<pos:position pos:line="122" pos:column="33"/></name></expr></argument>)<pos:position pos:line="122" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="123" pos:column="10"/></block></then></if>
	<if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><name pos:line="124" pos:column="13">preserve_gid<pos:position pos:line="124" pos:column="25"/></name> <operator pos:line="124" pos:column="26">&amp;&amp;<pos:position pos:line="124" pos:column="36"/></operator> <operator pos:line="124" pos:column="29">!<pos:position pos:line="124" pos:column="30"/></operator><operator pos:line="124" pos:column="30">(<pos:position pos:line="124" pos:column="31"/></operator><name pos:line="124" pos:column="31">flags<pos:position pos:line="124" pos:column="36"/></name> <operator pos:line="124" pos:column="37">&amp;<pos:position pos:line="124" pos:column="42"/></operator> <name pos:line="124" pos:column="39">XMIT_SAME_GID<pos:position pos:line="124" pos:column="52"/></name><operator pos:line="124" pos:column="52">)<pos:position pos:line="124" pos:column="53"/></operator></expr>)<pos:position pos:line="124" pos:column="54"/></condition><then pos:line="124" pos:column="54"> <block pos:line="124" pos:column="55">{
		<if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><operator pos:line="125" pos:column="21">!<pos:position pos:line="125" pos:column="22"/></operator><name pos:line="125" pos:column="22">numeric_ids<pos:position pos:line="125" pos:column="33"/></name></expr>)<pos:position pos:line="125" pos:column="34"/></condition><then pos:line="125" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="25">add_gid<pos:position pos:line="126" pos:column="32"/></name><argument_list pos:line="126" pos:column="32">(<argument><expr><name pos:line="126" pos:column="33">gid<pos:position pos:line="126" pos:column="36"/></name></expr></argument>)<pos:position pos:line="126" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="38"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="127" pos:column="17">write_int<pos:position pos:line="127" pos:column="26"/></name><argument_list pos:line="127" pos:column="26">(<argument><expr><name pos:line="127" pos:column="27">f<pos:position pos:line="127" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="30">gid<pos:position pos:line="127" pos:column="33"/></name></expr></argument>)<pos:position pos:line="127" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="128" pos:column="10"/></block></then></if>
	<if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><operator pos:line="129" pos:column="13">(<pos:position pos:line="129" pos:column="14"/></operator><name pos:line="129" pos:column="14">preserve_devices<pos:position pos:line="129" pos:column="30"/></name> <operator pos:line="129" pos:column="31">&amp;&amp;<pos:position pos:line="129" pos:column="41"/></operator> <call><name pos:line="129" pos:column="34">IS_DEVICE<pos:position pos:line="129" pos:column="43"/></name><argument_list pos:line="129" pos:column="43">(<argument><expr><name pos:line="129" pos:column="44">mode<pos:position pos:line="129" pos:column="48"/></name></expr></argument>)<pos:position pos:line="129" pos:column="49"/></argument_list></call><operator pos:line="129" pos:column="49">)<pos:position pos:line="129" pos:column="50"/></operator>
	 <operator pos:line="130" pos:column="10">||<pos:position pos:line="130" pos:column="12"/></operator> <operator pos:line="130" pos:column="13">(<pos:position pos:line="130" pos:column="14"/></operator><name pos:line="130" pos:column="14">preserve_specials<pos:position pos:line="130" pos:column="31"/></name> <operator pos:line="130" pos:column="32">&amp;&amp;<pos:position pos:line="130" pos:column="42"/></operator> <call><name pos:line="130" pos:column="35">IS_SPECIAL<pos:position pos:line="130" pos:column="45"/></name><argument_list pos:line="130" pos:column="45">(<argument><expr><name pos:line="130" pos:column="46">mode<pos:position pos:line="130" pos:column="50"/></name></expr></argument>)<pos:position pos:line="130" pos:column="51"/></argument_list></call><operator pos:line="130" pos:column="51">)<pos:position pos:line="130" pos:column="52"/></operator></expr>)<pos:position pos:line="130" pos:column="53"/></condition><then pos:line="130" pos:column="53"> <block pos:line="130" pos:column="54">{
		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name pos:line="131" pos:column="21">protocol_version<pos:position pos:line="131" pos:column="37"/></name> <operator pos:line="131" pos:column="38">&lt;<pos:position pos:line="131" pos:column="42"/></operator> <literal type="number" pos:line="131" pos:column="40">28<pos:position pos:line="131" pos:column="42"/></literal></expr>)<pos:position pos:line="131" pos:column="43"/></condition><then pos:line="131" pos:column="43"> <block pos:line="131" pos:column="44">{
			<if pos:line="132" pos:column="25">if <condition pos:line="132" pos:column="28">(<expr><operator pos:line="132" pos:column="29">!<pos:position pos:line="132" pos:column="30"/></operator><operator pos:line="132" pos:column="30">(<pos:position pos:line="132" pos:column="31"/></operator><name pos:line="132" pos:column="31">flags<pos:position pos:line="132" pos:column="36"/></name> <operator pos:line="132" pos:column="37">&amp;<pos:position pos:line="132" pos:column="42"/></operator> <name pos:line="132" pos:column="39">XMIT_SAME_RDEV_pre28<pos:position pos:line="132" pos:column="59"/></name><operator pos:line="132" pos:column="59">)<pos:position pos:line="132" pos:column="60"/></operator></expr>)<pos:position pos:line="132" pos:column="61"/></condition><then pos:line="132" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="33">write_int<pos:position pos:line="133" pos:column="42"/></name><argument_list pos:line="133" pos:column="42">(<argument><expr><name pos:line="133" pos:column="43">f<pos:position pos:line="133" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="133" pos:column="46">(<pos:position pos:line="133" pos:column="47"/></operator><name pos:line="133" pos:column="47">int<pos:position pos:line="133" pos:column="50"/></name><operator pos:line="133" pos:column="50">)<pos:position pos:line="133" pos:column="51"/></operator><name pos:line="133" pos:column="51">rdev<pos:position pos:line="133" pos:column="55"/></name></expr></argument>)<pos:position pos:line="133" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="57"/></expr_stmt></block></then></if>
		}<pos:position pos:line="134" pos:column="18"/></block></then> <else pos:line="134" pos:column="19">else <block pos:line="134" pos:column="24">{
			<if pos:line="135" pos:column="25">if <condition pos:line="135" pos:column="28">(<expr><operator pos:line="135" pos:column="29">!<pos:position pos:line="135" pos:column="30"/></operator><operator pos:line="135" pos:column="30">(<pos:position pos:line="135" pos:column="31"/></operator><name pos:line="135" pos:column="31">flags<pos:position pos:line="135" pos:column="36"/></name> <operator pos:line="135" pos:column="37">&amp;<pos:position pos:line="135" pos:column="42"/></operator> <name pos:line="135" pos:column="39">XMIT_SAME_RDEV_MAJOR<pos:position pos:line="135" pos:column="59"/></name><operator pos:line="135" pos:column="59">)<pos:position pos:line="135" pos:column="60"/></operator></expr>)<pos:position pos:line="135" pos:column="61"/></condition><then pos:line="135" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="33">write_int<pos:position pos:line="136" pos:column="42"/></name><argument_list pos:line="136" pos:column="42">(<argument><expr><name pos:line="136" pos:column="43">f<pos:position pos:line="136" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="46">major<pos:position pos:line="136" pos:column="51"/></name><argument_list pos:line="136" pos:column="51">(<argument><expr><name pos:line="136" pos:column="52">rdev<pos:position pos:line="136" pos:column="56"/></name></expr></argument>)<pos:position pos:line="136" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="59"/></expr_stmt></block></then></if>
			<if pos:line="137" pos:column="25">if <condition pos:line="137" pos:column="28">(<expr><name pos:line="137" pos:column="29">flags<pos:position pos:line="137" pos:column="34"/></name> <operator pos:line="137" pos:column="35">&amp;<pos:position pos:line="137" pos:column="40"/></operator> <name pos:line="137" pos:column="37">XMIT_RDEV_MINOR_IS_SMALL<pos:position pos:line="137" pos:column="61"/></name></expr>)<pos:position pos:line="137" pos:column="62"/></condition><then pos:line="137" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="33">write_byte<pos:position pos:line="138" pos:column="43"/></name><argument_list pos:line="138" pos:column="43">(<argument><expr><name pos:line="138" pos:column="44">f<pos:position pos:line="138" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="138" pos:column="47">minor<pos:position pos:line="138" pos:column="52"/></name><argument_list pos:line="138" pos:column="52">(<argument><expr><name pos:line="138" pos:column="53">rdev<pos:position pos:line="138" pos:column="57"/></name></expr></argument>)<pos:position pos:line="138" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="60"/></expr_stmt></block></then>
			<else pos:line="139" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="33">write_int<pos:position pos:line="140" pos:column="42"/></name><argument_list pos:line="140" pos:column="42">(<argument><expr><name pos:line="140" pos:column="43">f<pos:position pos:line="140" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="140" pos:column="46">minor<pos:position pos:line="140" pos:column="51"/></name><argument_list pos:line="140" pos:column="51">(<argument><expr><name pos:line="140" pos:column="52">rdev<pos:position pos:line="140" pos:column="56"/></name></expr></argument>)<pos:position pos:line="140" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="59"/></expr_stmt></block></else></if>
		}<pos:position pos:line="141" pos:column="18"/></block></else></if>
	}<pos:position pos:line="142" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">ifdef<pos:position pos:line="144" pos:column="7"/></cpp:directive> <name pos:line="144" pos:column="8">SUPPORT_LINKS<pos:position pos:line="144" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><name pos:line="145" pos:column="13">preserve_links<pos:position pos:line="145" pos:column="27"/></name> <operator pos:line="145" pos:column="28">&amp;&amp;<pos:position pos:line="145" pos:column="38"/></operator> <call><name pos:line="145" pos:column="31">S_ISLNK<pos:position pos:line="145" pos:column="38"/></name><argument_list pos:line="145" pos:column="38">(<argument><expr><name pos:line="145" pos:column="39">mode<pos:position pos:line="145" pos:column="43"/></name></expr></argument>)<pos:position pos:line="145" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="45"/></condition><then pos:line="145" pos:column="45"> <block pos:line="145" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="146" pos:column="17">int<pos:position pos:line="146" pos:column="20"/></name></type> <name pos:line="146" pos:column="21">len<pos:position pos:line="146" pos:column="24"/></name> <init pos:line="146" pos:column="25">= <expr><call><name pos:line="146" pos:column="27">strlen<pos:position pos:line="146" pos:column="33"/></name><argument_list pos:line="146" pos:column="33">(<argument><expr><name><name pos:line="146" pos:column="34">file<pos:position pos:line="146" pos:column="38"/></name><operator pos:line="146" pos:column="38">-&gt;<pos:position pos:line="146" pos:column="43"/></operator><name pos:line="146" pos:column="40">u<pos:position pos:line="146" pos:column="41"/></name><operator pos:line="146" pos:column="41">.<pos:position pos:line="146" pos:column="42"/></operator><name pos:line="146" pos:column="42">link<pos:position pos:line="146" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="146" pos:column="48"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="147" pos:column="17">write_int<pos:position pos:line="147" pos:column="26"/></name><argument_list pos:line="147" pos:column="26">(<argument><expr><name pos:line="147" pos:column="27">f<pos:position pos:line="147" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="30">len<pos:position pos:line="147" pos:column="33"/></name></expr></argument>)<pos:position pos:line="147" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="148" pos:column="17">write_buf<pos:position pos:line="148" pos:column="26"/></name><argument_list pos:line="148" pos:column="26">(<argument><expr><name pos:line="148" pos:column="27">f<pos:position pos:line="148" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="30">file<pos:position pos:line="148" pos:column="34"/></name><operator pos:line="148" pos:column="34">-&gt;<pos:position pos:line="148" pos:column="39"/></operator><name pos:line="148" pos:column="36">u<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">.<pos:position pos:line="148" pos:column="38"/></operator><name pos:line="148" pos:column="38">link<pos:position pos:line="148" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="44">len<pos:position pos:line="148" pos:column="47"/></name></expr></argument>)<pos:position pos:line="148" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="149" pos:column="10"/></block></then></if>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif<pos:position pos:line="150" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">ifdef<pos:position pos:line="152" pos:column="7"/></cpp:directive> <name pos:line="152" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="152" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name pos:line="153" pos:column="13">flags<pos:position pos:line="153" pos:column="18"/></name> <operator pos:line="153" pos:column="19">&amp;<pos:position pos:line="153" pos:column="24"/></operator> <name pos:line="153" pos:column="21">XMIT_HAS_IDEV_DATA<pos:position pos:line="153" pos:column="39"/></name></expr>)<pos:position pos:line="153" pos:column="40"/></condition><then pos:line="153" pos:column="40"> <block pos:line="153" pos:column="41">{
		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><name pos:line="154" pos:column="21">protocol_version<pos:position pos:line="154" pos:column="37"/></name> <operator pos:line="154" pos:column="38">&lt;<pos:position pos:line="154" pos:column="42"/></operator> <literal type="number" pos:line="154" pos:column="40">26<pos:position pos:line="154" pos:column="42"/></literal></expr>)<pos:position pos:line="154" pos:column="43"/></condition><then pos:line="154" pos:column="43"> <block pos:line="154" pos:column="44">{
			<comment type="block" pos:line="155" pos:column="25">/* 32-bit dev_t and ino_t */</comment>
			<expr_stmt><expr><call><name pos:line="156" pos:column="25">write_int<pos:position pos:line="156" pos:column="34"/></name><argument_list pos:line="156" pos:column="34">(<argument><expr><name pos:line="156" pos:column="35">f<pos:position pos:line="156" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="38">dev<pos:position pos:line="156" pos:column="41"/></name></expr></argument>)<pos:position pos:line="156" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="157" pos:column="25">write_int<pos:position pos:line="157" pos:column="34"/></name><argument_list pos:line="157" pos:column="34">(<argument><expr><name pos:line="157" pos:column="35">f<pos:position pos:line="157" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="38">file<pos:position pos:line="157" pos:column="42"/></name><operator pos:line="157" pos:column="42">-&gt;<pos:position pos:line="157" pos:column="47"/></operator><name pos:line="157" pos:column="44">F_INODE<pos:position pos:line="157" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="158" pos:column="18"/></block></then> <else pos:line="158" pos:column="19">else <block pos:line="158" pos:column="24">{
			<comment type="block" pos:line="159" pos:column="25">/* 64-bit dev_t and ino_t */</comment>
			<if pos:line="160" pos:column="25">if <condition pos:line="160" pos:column="28">(<expr><operator pos:line="160" pos:column="29">!<pos:position pos:line="160" pos:column="30"/></operator><operator pos:line="160" pos:column="30">(<pos:position pos:line="160" pos:column="31"/></operator><name pos:line="160" pos:column="31">flags<pos:position pos:line="160" pos:column="36"/></name> <operator pos:line="160" pos:column="37">&amp;<pos:position pos:line="160" pos:column="42"/></operator> <name pos:line="160" pos:column="39">XMIT_SAME_DEV<pos:position pos:line="160" pos:column="52"/></name><operator pos:line="160" pos:column="52">)<pos:position pos:line="160" pos:column="53"/></operator></expr>)<pos:position pos:line="160" pos:column="54"/></condition><then pos:line="160" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="161" pos:column="33">write_longint<pos:position pos:line="161" pos:column="46"/></name><argument_list pos:line="161" pos:column="46">(<argument><expr><name pos:line="161" pos:column="47">f<pos:position pos:line="161" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="50">dev<pos:position pos:line="161" pos:column="53"/></name></expr></argument>)<pos:position pos:line="161" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="162" pos:column="25">write_longint<pos:position pos:line="162" pos:column="38"/></name><argument_list pos:line="162" pos:column="38">(<argument><expr><name pos:line="162" pos:column="39">f<pos:position pos:line="162" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="42">file<pos:position pos:line="162" pos:column="46"/></name><operator pos:line="162" pos:column="46">-&gt;<pos:position pos:line="162" pos:column="51"/></operator><name pos:line="162" pos:column="48">F_INODE<pos:position pos:line="162" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="163" pos:column="18"/></block></else></if>
	}<pos:position pos:line="164" pos:column="10"/></block></then></if>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif<pos:position pos:line="165" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">always_checksum<pos:position pos:line="167" pos:column="28"/></name> <operator pos:line="167" pos:column="29">&amp;&amp;<pos:position pos:line="167" pos:column="39"/></operator> <operator pos:line="167" pos:column="32">(<pos:position pos:line="167" pos:column="33"/></operator><call><name pos:line="167" pos:column="33">S_ISREG<pos:position pos:line="167" pos:column="40"/></name><argument_list pos:line="167" pos:column="40">(<argument><expr><name pos:line="167" pos:column="41">mode<pos:position pos:line="167" pos:column="45"/></name></expr></argument>)<pos:position pos:line="167" pos:column="46"/></argument_list></call> <operator pos:line="167" pos:column="47">||<pos:position pos:line="167" pos:column="49"/></operator> <name pos:line="167" pos:column="50">protocol_version<pos:position pos:line="167" pos:column="66"/></name> <operator pos:line="167" pos:column="67">&lt;<pos:position pos:line="167" pos:column="71"/></operator> <literal type="number" pos:line="167" pos:column="69">28<pos:position pos:line="167" pos:column="71"/></literal><operator pos:line="167" pos:column="71">)<pos:position pos:line="167" pos:column="72"/></operator></expr>)<pos:position pos:line="167" pos:column="73"/></condition><then pos:line="167" pos:column="73"> <block pos:line="167" pos:column="74">{
		<decl_stmt><decl><type><name pos:line="168" pos:column="17">char<pos:position pos:line="168" pos:column="21"/></name> <modifier pos:line="168" pos:column="22">*<pos:position pos:line="168" pos:column="23"/></modifier></type><name pos:line="168" pos:column="23">sum<pos:position pos:line="168" pos:column="26"/></name></decl>;<pos:position pos:line="168" pos:column="27"/></decl_stmt>
		<if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><call><name pos:line="169" pos:column="21">S_ISREG<pos:position pos:line="169" pos:column="28"/></name><argument_list pos:line="169" pos:column="28">(<argument><expr><name pos:line="169" pos:column="29">mode<pos:position pos:line="169" pos:column="33"/></name></expr></argument>)<pos:position pos:line="169" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="35"/></condition><then pos:line="169" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="170" pos:column="25">sum<pos:position pos:line="170" pos:column="28"/></name> <operator pos:line="170" pos:column="29">=<pos:position pos:line="170" pos:column="30"/></operator> <name><name pos:line="170" pos:column="31">file<pos:position pos:line="170" pos:column="35"/></name><operator pos:line="170" pos:column="35">-&gt;<pos:position pos:line="170" pos:column="40"/></operator><name pos:line="170" pos:column="37">u<pos:position pos:line="170" pos:column="38"/></name><operator pos:line="170" pos:column="38">.<pos:position pos:line="170" pos:column="39"/></operator><name pos:line="170" pos:column="39">sum<pos:position pos:line="170" pos:column="42"/></name></name></expr>;<pos:position pos:line="170" pos:column="43"/></expr_stmt></block></then>
		<else pos:line="171" pos:column="17">else <block pos:line="171" pos:column="22">{
			<comment type="block" pos:line="172" pos:column="25">/* Prior to 28, we sent a useless set of nulls. */</comment>
			<expr_stmt><expr><name pos:line="173" pos:column="25">sum<pos:position pos:line="173" pos:column="28"/></name> <operator pos:line="173" pos:column="29">=<pos:position pos:line="173" pos:column="30"/></operator> <name pos:line="173" pos:column="31">empty_sum<pos:position pos:line="173" pos:column="40"/></name></expr>;<pos:position pos:line="173" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="174" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="175" pos:column="17">write_buf<pos:position pos:line="175" pos:column="26"/></name><argument_list pos:line="175" pos:column="26">(<argument><expr><name pos:line="175" pos:column="27">f<pos:position pos:line="175" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="30">sum<pos:position pos:line="175" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="35">checksum_len<pos:position pos:line="175" pos:column="47"/></name></expr></argument>)<pos:position pos:line="175" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="176" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="178" pos:column="9">strlcpy<pos:position pos:line="178" pos:column="16"/></name><argument_list pos:line="178" pos:column="16">(<argument><expr><name pos:line="178" pos:column="17">lastname<pos:position pos:line="178" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="27">fname<pos:position pos:line="178" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="34">MAXPATHLEN<pos:position pos:line="178" pos:column="44"/></name></expr></argument>)<pos:position pos:line="178" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="46"/></expr_stmt>
}<pos:position pos:line="179" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_124_rsync-2.6.2.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">create_flist_from_batch<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">void<pos:position pos:line="1" pos:column="47"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">filename<pos:position pos:line="3" pos:column="22"/></name><index pos:line="3" pos:column="22">[<expr><name pos:line="3" pos:column="23">MAXPATHLEN<pos:position pos:line="3" pos:column="33"/></name></expr>]<pos:position pos:line="3" pos:column="34"/></index></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">short<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">flags<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">f<pos:position pos:line="5" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">save_pv<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int64<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">save_read<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">stringjoin<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">filename<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="30">sizeof <name pos:line="8" pos:column="37">filename<pos:position pos:line="8" pos:column="45"/></name></sizeof></expr></argument>,
	    <argument><expr><name pos:line="9" pos:column="13">batch_prefix<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">rsync_flist_file<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">f<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <call><name pos:line="11" pos:column="13">do_open<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">filename<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">O_RDONLY<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">f<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&lt;<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">rprintf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">FERROR<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"Batch file %s open error: %s\n"<pos:position pos:line="13" pos:column="65"/></literal></expr></argument>,
		    <argument><expr><name pos:line="14" pos:column="21">filename<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="31">strerror<pos:position pos:line="14" pos:column="39"/></name><argument_list pos:line="14" pos:column="39">(<argument><expr><name pos:line="14" pos:column="40">errno<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">exit_cleanup<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><literal type="number" pos:line="15" pos:column="30">1<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">batch_flist<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <call><name pos:line="18" pos:column="23">flist_new<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">WITH_HLINK<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="45">"create_flist_from_batch"<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">save_read<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="21">stats<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">.<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">total_read<pos:position pos:line="20" pos:column="37"/></name></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">save_pv<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">protocol_version<pos:position pos:line="21" pos:column="35"/></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">protocol_version<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <call><name pos:line="22" pos:column="28">read_int<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">f<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="24" pos:column="9">batch_flist<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">count<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <call><name pos:line="24" pos:column="30">read_int<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">f<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">flist_expand<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">batch_flist<pos:position pos:line="25" pos:column="33"/></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><operator pos:line="27" pos:column="21">(<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">flags<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">read_byte<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">f<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call><operator pos:line="27" pos:column="42">)<pos:position pos:line="27" pos:column="43"/></operator> <operator pos:line="27" pos:column="44">!=<pos:position pos:line="27" pos:column="46"/></operator> <literal type="number" pos:line="27" pos:column="47">0<pos:position pos:line="27" pos:column="48"/></literal></expr>;<pos:position pos:line="27" pos:column="49"/></condition> <incr><expr><name pos:line="27" pos:column="50">i<pos:position pos:line="27" pos:column="51"/></name><operator pos:line="27" pos:column="51">++<pos:position pos:line="27" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="54"/></control> <block pos:line="27" pos:column="55">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">protocol_version<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">&gt;=<pos:position pos:line="28" pos:column="43"/></operator> <literal type="number" pos:line="28" pos:column="41">28<pos:position pos:line="28" pos:column="43"/></literal> <operator pos:line="28" pos:column="44">&amp;&amp;<pos:position pos:line="28" pos:column="54"/></operator> <operator pos:line="28" pos:column="47">(<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">flags<pos:position pos:line="28" pos:column="53"/></name> <operator pos:line="28" pos:column="54">&amp;<pos:position pos:line="28" pos:column="59"/></operator> <name pos:line="28" pos:column="56">XMIT_EXTENDED_FLAGS<pos:position pos:line="28" pos:column="75"/></name><operator pos:line="28" pos:column="75">)<pos:position pos:line="28" pos:column="76"/></operator></expr>)<pos:position pos:line="28" pos:column="77"/></condition><then pos:line="28" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">flags<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">|=<pos:position pos:line="29" pos:column="33"/></operator> <call><name pos:line="29" pos:column="34">read_byte<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">(<argument><expr><name pos:line="29" pos:column="44">f<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call> <operator pos:line="29" pos:column="47">&lt;&lt;<pos:position pos:line="29" pos:column="55"/></operator> <literal type="number" pos:line="29" pos:column="50">8<pos:position pos:line="29" pos:column="51"/></literal></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">receive_file_entry<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><operator pos:line="30" pos:column="36">&amp;<pos:position pos:line="30" pos:column="41"/></operator><name><name pos:line="30" pos:column="37">batch_flist<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">files<pos:position pos:line="30" pos:column="55"/></name><index pos:line="30" pos:column="55">[<expr><name pos:line="30" pos:column="56">i<pos:position pos:line="30" pos:column="57"/></name></expr>]<pos:position pos:line="30" pos:column="58"/></index></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="60">flags<pos:position pos:line="30" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="67">batch_flist<pos:position pos:line="30" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="80">f<pos:position pos:line="30" pos:column="81"/></name></expr></argument>)<pos:position pos:line="30" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="83"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">receive_file_entry<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">NULL<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="34">0<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">NULL<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="43">0<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt> <comment type="block" pos:line="32" pos:column="47">/* Signal that we're done. */</comment>

	<expr_stmt><expr><name pos:line="34" pos:column="9">protocol_version<pos:position pos:line="34" pos:column="25"/></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">save_pv<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">stats<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">.<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">total_read<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">save_read<pos:position pos:line="35" pos:column="37"/></name></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>

	<return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">batch_flist<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

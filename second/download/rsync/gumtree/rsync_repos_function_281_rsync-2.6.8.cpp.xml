<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_281_rsync-2.6.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">setup_iconv<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">()<pos:position pos:line="1" pos:column="19"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">am_server<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&amp;&amp;<pos:position pos:line="3" pos:column="34"/></operator> <operator pos:line="3" pos:column="27">!<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">allow_8bit_chars<pos:position pos:line="3" pos:column="44"/></name></expr>)<pos:position pos:line="3" pos:column="45"/></condition><then pos:line="3" pos:column="45"> <block pos:line="3" pos:column="46">{
		<decl_stmt><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">defset<pos:position pos:line="4" pos:column="35"/></name> <init pos:line="4" pos:column="36">= <expr><call><name pos:line="4" pos:column="38">default_charset<pos:position pos:line="4" pos:column="53"/></name><argument_list pos:line="4" pos:column="53">()<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>

		<comment type="block" pos:line="6" pos:column="17">/* It's OK if this fails... */</comment>
		<expr_stmt><expr><name pos:line="7" pos:column="17">ic_chck<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">=<pos:position pos:line="7" pos:column="26"/></operator> <call><name pos:line="7" pos:column="27">iconv_open<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">defset<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">defset<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>

		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">verbose<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">&gt;<pos:position pos:line="9" pos:column="33"/></operator> <literal type="number" pos:line="9" pos:column="31">3<pos:position pos:line="9" pos:column="32"/></literal></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">ic_chck<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">==<pos:position pos:line="10" pos:column="39"/></operator> <operator pos:line="10" pos:column="40">(<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">iconv_t<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator><operator pos:line="10" pos:column="49">-<pos:position pos:line="10" pos:column="50"/></operator><literal type="number" pos:line="10" pos:column="50">1<pos:position pos:line="10" pos:column="51"/></literal></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52"> <block pos:line="10" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="11" pos:column="33">rprintf<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">FINFO<pos:position pos:line="11" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="12" pos:column="41">"note: iconv_open(\"%s\", \"%s\") failed (%d)"<pos:position pos:line="12" pos:column="87"/></literal>
					<literal type="string" pos:line="13" pos:column="41">" -- using isprint() instead of iconv().\n"<pos:position pos:line="13" pos:column="84"/></literal></expr></argument>,
					<argument><expr><name pos:line="14" pos:column="41">defset<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">defset<pos:position pos:line="14" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">errno<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="15" pos:column="26"/></block></then> <else pos:line="15" pos:column="27">else <block pos:line="15" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="16" pos:column="33">rprintf<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">FINFO<pos:position pos:line="16" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="17" pos:column="41">"note: iconv_open(\"%s\", \"%s\") succeeded.\n"<pos:position pos:line="17" pos:column="88"/></literal></expr></argument>,
					<argument><expr><name pos:line="18" pos:column="41">defset<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">defset<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="19" pos:column="26"/></block></else></if>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

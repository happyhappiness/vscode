<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_535_rsync-2.6.6.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">freeaddrinfo<pos:position pos:line="2" pos:column="13"/></name><argument_list pos:line="2" pos:column="13">(<argument><expr><name pos:line="2" pos:column="14">ai<pos:position pos:line="2" pos:column="16"/></name></expr></argument>)<pos:position pos:line="2" pos:column="17"/></argument_list>
	struct <name pos:line="3" pos:column="16">addrinfo<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><name pos:line="3" pos:column="26">ai<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">addrinfo<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">next<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

	<do pos:line="7" pos:column="9">do <block pos:line="7" pos:column="12">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">next<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name><name pos:line="8" pos:column="24">ai<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">ai_next<pos:position pos:line="8" pos:column="35"/></name></name></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">ai<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">ai_canonname<pos:position pos:line="9" pos:column="37"/></name></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">free<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">ai<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">ai_canonname<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="11" pos:column="17">/* no need to free(ai-&gt;ai_addr) */</comment>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">free<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">ai<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block> while <condition pos:line="13" pos:column="17">(<expr><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">ai<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">next<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">)<pos:position pos:line="13" pos:column="29"/></operator> <operator pos:line="13" pos:column="30">!=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition>;<pos:position pos:line="13" pos:column="39"/></do>
}<pos:position pos:line="14" pos:column="2"/></block></unit>

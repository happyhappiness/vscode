<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_369_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">pid_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">do_fork<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">pid_t<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">newpid<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><call><name pos:line="3" pos:column="24">fork<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">()<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">newpid<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal>  <operator pos:line="5" pos:column="26">&amp;&amp;<pos:position pos:line="5" pos:column="36"/></operator>  <name pos:line="5" pos:column="30">newpid<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">!=<pos:position pos:line="5" pos:column="39"/></operator> <operator pos:line="5" pos:column="40">-<pos:position pos:line="5" pos:column="41"/></operator><literal type="number" pos:line="5" pos:column="41">1<pos:position pos:line="5" pos:column="42"/></literal></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43"> <block pos:line="5" pos:column="44">{
		<expr_stmt><expr><name><name pos:line="6" pos:column="17">all_pids<pos:position pos:line="6" pos:column="25"/></name><index pos:line="6" pos:column="25">[<expr><name pos:line="6" pos:column="26">num_pids<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">++<pos:position pos:line="6" pos:column="36"/></operator></expr>]<pos:position pos:line="6" pos:column="37"/></index></name> <operator pos:line="6" pos:column="38">=<pos:position pos:line="6" pos:column="39"/></operator> <name pos:line="6" pos:column="40">newpid<pos:position pos:line="6" pos:column="46"/></name></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>
	<return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">newpid<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

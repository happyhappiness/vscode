<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_732.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">read_batch_flist_info<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">file_struct<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier><modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">fptr<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">int_str_len<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">char_str_len<pos:position pos:line="4" pos:column="26"/></name><index pos:line="4" pos:column="26">[<expr><literal type="number" pos:line="4" pos:column="27">4<pos:position pos:line="4" pos:column="28"/></literal></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buff<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><literal type="number" pos:line="5" pos:column="19">256<pos:position pos:line="5" pos:column="22"/></literal></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">file_struct<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">file<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">file<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">new<pos:position pos:line="8" pos:column="19"/></operator><operator pos:line="8" pos:column="19">(<pos:position pos:line="8" pos:column="20"/></operator>struct <name pos:line="8" pos:column="27">file_struct<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">file<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">out_of_memory<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><literal type="string" pos:line="10" pos:column="31">"read_batch_flist_info"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">file<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="34">sizeof<argument_list pos:line="11" pos:column="40">(<argument><expr><operator pos:line="11" pos:column="41">*<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">file<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">fptr<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">file<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

	<comment type="block" pos:line="15" pos:column="9">/*
	 * Keep these in sync with bytes_to_write assignment
	 * in write_batch_flist_info()
	 */</comment>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">read_batch_flist_file<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><operator pos:line="19" pos:column="31">(<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">char<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">*<pos:position pos:line="19" pos:column="38"/></operator><operator pos:line="19" pos:column="38">)<pos:position pos:line="19" pos:column="39"/></operator> <operator pos:line="19" pos:column="40">&amp;<pos:position pos:line="19" pos:column="45"/></operator><name><name pos:line="19" pos:column="41">file<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">modtime<pos:position pos:line="19" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="56">sizeof<argument_list pos:line="19" pos:column="62">(<argument><expr><name pos:line="19" pos:column="63">time_t<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">read_batch_flist_file<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><operator pos:line="20" pos:column="31">(<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">char<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">*<pos:position pos:line="20" pos:column="38"/></operator><operator pos:line="20" pos:column="38">)<pos:position pos:line="20" pos:column="39"/></operator> <operator pos:line="20" pos:column="40">&amp;<pos:position pos:line="20" pos:column="45"/></operator><name><name pos:line="20" pos:column="41">file<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">length<pos:position pos:line="20" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="55">sizeof<argument_list pos:line="20" pos:column="61">(<argument><expr><name pos:line="20" pos:column="62">OFF_T<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">read_batch_flist_file<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">(<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">char<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">*<pos:position pos:line="21" pos:column="38"/></operator><operator pos:line="21" pos:column="38">)<pos:position pos:line="21" pos:column="39"/></operator> <operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name><name pos:line="21" pos:column="41">file<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">mode<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="53">sizeof<argument_list pos:line="21" pos:column="59">(<argument><expr><name pos:line="21" pos:column="60">mode_t<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">read_batch_flist_file<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">char<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">*<pos:position pos:line="22" pos:column="38"/></operator><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator> <operator pos:line="22" pos:column="40">&amp;<pos:position pos:line="22" pos:column="45"/></operator><name><name pos:line="22" pos:column="41">file<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">-&gt;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="47">inode<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="54">sizeof<argument_list pos:line="22" pos:column="60">(<argument><expr><name pos:line="22" pos:column="61">INO64_T<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">read_batch_flist_file<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><operator pos:line="23" pos:column="31">(<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">char<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">*<pos:position pos:line="23" pos:column="38"/></operator><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name><name pos:line="23" pos:column="41">file<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">dev<pos:position pos:line="23" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="52">sizeof<argument_list pos:line="23" pos:column="58">(<argument><expr><name pos:line="23" pos:column="59">DEV64_T<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">read_batch_flist_file<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">(<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">char<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></operator><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator><name><name pos:line="24" pos:column="41">file<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">rdev<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="53">sizeof<argument_list pos:line="24" pos:column="59">(<argument><expr><name pos:line="24" pos:column="60">DEV64_T<pos:position pos:line="24" pos:column="67"/></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">read_batch_flist_file<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><operator pos:line="25" pos:column="31">(<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">char<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">*<pos:position pos:line="25" pos:column="38"/></operator><operator pos:line="25" pos:column="38">)<pos:position pos:line="25" pos:column="39"/></operator> <operator pos:line="25" pos:column="40">&amp;<pos:position pos:line="25" pos:column="45"/></operator><name><name pos:line="25" pos:column="41">file<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">uid<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="52">sizeof<argument_list pos:line="25" pos:column="58">(<argument><expr><name pos:line="25" pos:column="59">uid_t<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">read_batch_flist_file<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><operator pos:line="26" pos:column="31">(<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">char<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">*<pos:position pos:line="26" pos:column="38"/></operator><operator pos:line="26" pos:column="38">)<pos:position pos:line="26" pos:column="39"/></operator> <operator pos:line="26" pos:column="40">&amp;<pos:position pos:line="26" pos:column="45"/></operator><name><name pos:line="26" pos:column="41">file<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="47">gid<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="52">sizeof<argument_list pos:line="26" pos:column="58">(<argument><expr><name pos:line="26" pos:column="59">gid_t<pos:position pos:line="26" pos:column="64"/></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">read_batch_flist_file<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">char_str_len<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="45">sizeof<argument_list pos:line="27" pos:column="51">(<argument><expr><name pos:line="27" pos:column="52">char_str_len<pos:position pos:line="27" pos:column="64"/></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">int_str_len<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">IVAL<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">char_str_len<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="42">0<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">int_str_len<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">&gt;<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="27">0<pos:position pos:line="29" pos:column="28"/></literal></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">read_batch_flist_file<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">buff<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="45">int_str_len<pos:position pos:line="30" pos:column="56"/></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">buff<pos:position pos:line="31" pos:column="21"/></name><index pos:line="31" pos:column="21">[<expr><name pos:line="31" pos:column="22">int_str_len<pos:position pos:line="31" pos:column="33"/></name></expr>]<pos:position pos:line="31" pos:column="34"/></index></name> <operator pos:line="31" pos:column="35">=<pos:position pos:line="31" pos:column="36"/></operator> <literal type="char" pos:line="31" pos:column="37">'\0'<pos:position pos:line="31" pos:column="41"/></literal></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">file<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">basename<pos:position pos:line="32" pos:column="31"/></name></name> <operator pos:line="32" pos:column="32">=<pos:position pos:line="32" pos:column="33"/></operator> <call><name pos:line="32" pos:column="34">strdup<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">buff<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">file<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">basename<pos:position pos:line="34" pos:column="31"/></name></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="37" pos:column="9">read_batch_flist_file<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">char_str_len<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="45">sizeof<argument_list pos:line="37" pos:column="51">(<argument><expr><name pos:line="37" pos:column="52">char_str_len<pos:position pos:line="37" pos:column="64"/></name></expr></argument>)<pos:position pos:line="37" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name pos:line="38" pos:column="9">int_str_len<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">IVAL<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">char_str_len<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="42">0<pos:position pos:line="38" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">int_str_len<pos:position pos:line="39" pos:column="24"/></name> <operator pos:line="39" pos:column="25">&gt;<pos:position pos:line="39" pos:column="29"/></operator> <literal type="number" pos:line="39" pos:column="27">0<pos:position pos:line="39" pos:column="28"/></literal></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29"> <block pos:line="39" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">read_batch_flist_file<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">buff<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">int_str_len<pos:position pos:line="40" pos:column="56"/></name></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">buff<pos:position pos:line="41" pos:column="21"/></name><index pos:line="41" pos:column="21">[<expr><name pos:line="41" pos:column="22">int_str_len<pos:position pos:line="41" pos:column="33"/></name></expr>]<pos:position pos:line="41" pos:column="34"/></index></name> <operator pos:line="41" pos:column="35">=<pos:position pos:line="41" pos:column="36"/></operator> <literal type="char" pos:line="41" pos:column="37">'\0'<pos:position pos:line="41" pos:column="41"/></literal></expr>;<pos:position pos:line="41" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">file<pos:position pos:line="42" pos:column="21"/></name><index pos:line="42" pos:column="21">[<expr><literal type="number" pos:line="42" pos:column="22">0<pos:position pos:line="42" pos:column="23"/></literal></expr>]<pos:position pos:line="42" pos:column="24"/></index></name><operator pos:line="42" pos:column="24">.<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">dirname<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <call><name pos:line="42" pos:column="35">strdup<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">buff<pos:position pos:line="42" pos:column="46"/></name></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else <block pos:line="43" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">file<pos:position pos:line="44" pos:column="21"/></name><index pos:line="44" pos:column="21">[<expr><literal type="number" pos:line="44" pos:column="22">0<pos:position pos:line="44" pos:column="23"/></literal></expr>]<pos:position pos:line="44" pos:column="24"/></index></name><operator pos:line="44" pos:column="24">.<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">dirname<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">=<pos:position pos:line="44" pos:column="34"/></operator> <name pos:line="44" pos:column="35">NULL<pos:position pos:line="44" pos:column="39"/></name></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">read_batch_flist_file<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">char_str_len<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="45">sizeof<argument_list pos:line="47" pos:column="51">(<argument><expr><name pos:line="47" pos:column="52">char_str_len<pos:position pos:line="47" pos:column="64"/></name></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">int_str_len<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <call><name pos:line="48" pos:column="23">IVAL<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">char_str_len<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="42">0<pos:position pos:line="48" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">int_str_len<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">&gt;<pos:position pos:line="49" pos:column="29"/></operator> <literal type="number" pos:line="49" pos:column="27">0<pos:position pos:line="49" pos:column="28"/></literal></expr>)<pos:position pos:line="49" pos:column="29"/></condition><then pos:line="49" pos:column="29"> <block pos:line="49" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">read_batch_flist_file<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">buff<pos:position pos:line="50" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">int_str_len<pos:position pos:line="50" pos:column="56"/></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="51" pos:column="17">buff<pos:position pos:line="51" pos:column="21"/></name><index pos:line="51" pos:column="21">[<expr><name pos:line="51" pos:column="22">int_str_len<pos:position pos:line="51" pos:column="33"/></name></expr>]<pos:position pos:line="51" pos:column="34"/></index></name> <operator pos:line="51" pos:column="35">=<pos:position pos:line="51" pos:column="36"/></operator> <literal type="char" pos:line="51" pos:column="37">'\0'<pos:position pos:line="51" pos:column="41"/></literal></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">file<pos:position pos:line="52" pos:column="21"/></name><index pos:line="52" pos:column="21">[<expr><literal type="number" pos:line="52" pos:column="22">0<pos:position pos:line="52" pos:column="23"/></literal></expr>]<pos:position pos:line="52" pos:column="24"/></index></name><operator pos:line="52" pos:column="24">.<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">basedir<pos:position pos:line="52" pos:column="32"/></name> <operator pos:line="52" pos:column="33">=<pos:position pos:line="52" pos:column="34"/></operator> <call><name pos:line="52" pos:column="35">strdup<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">buff<pos:position pos:line="52" pos:column="46"/></name></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></then> <else pos:line="53" pos:column="11">else <block pos:line="53" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="54" pos:column="17">file<pos:position pos:line="54" pos:column="21"/></name><index pos:line="54" pos:column="21">[<expr><literal type="number" pos:line="54" pos:column="22">0<pos:position pos:line="54" pos:column="23"/></literal></expr>]<pos:position pos:line="54" pos:column="24"/></index></name><operator pos:line="54" pos:column="24">.<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">basedir<pos:position pos:line="54" pos:column="32"/></name> <operator pos:line="54" pos:column="33">=<pos:position pos:line="54" pos:column="34"/></operator> <name pos:line="54" pos:column="35">NULL<pos:position pos:line="54" pos:column="39"/></name></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="57" pos:column="9">read_batch_flist_file<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">char_str_len<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="45">sizeof<argument_list pos:line="57" pos:column="51">(<argument><expr><name pos:line="57" pos:column="52">char_str_len<pos:position pos:line="57" pos:column="64"/></name></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name pos:line="58" pos:column="9">int_str_len<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <call><name pos:line="58" pos:column="23">IVAL<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">char_str_len<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="42">0<pos:position pos:line="58" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">int_str_len<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">&gt;<pos:position pos:line="59" pos:column="29"/></operator> <literal type="number" pos:line="59" pos:column="27">0<pos:position pos:line="59" pos:column="28"/></literal></expr>)<pos:position pos:line="59" pos:column="29"/></condition><then pos:line="59" pos:column="29"> <block pos:line="59" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">read_batch_flist_file<pos:position pos:line="60" pos:column="38"/></name><argument_list pos:line="60" pos:column="38">(<argument><expr><name pos:line="60" pos:column="39">buff<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="45">int_str_len<pos:position pos:line="60" pos:column="56"/></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="61" pos:column="17">buff<pos:position pos:line="61" pos:column="21"/></name><index pos:line="61" pos:column="21">[<expr><name pos:line="61" pos:column="22">int_str_len<pos:position pos:line="61" pos:column="33"/></name></expr>]<pos:position pos:line="61" pos:column="34"/></index></name> <operator pos:line="61" pos:column="35">=<pos:position pos:line="61" pos:column="36"/></operator> <literal type="char" pos:line="61" pos:column="37">'\0'<pos:position pos:line="61" pos:column="41"/></literal></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="62" pos:column="17">file<pos:position pos:line="62" pos:column="21"/></name><index pos:line="62" pos:column="21">[<expr><literal type="number" pos:line="62" pos:column="22">0<pos:position pos:line="62" pos:column="23"/></literal></expr>]<pos:position pos:line="62" pos:column="24"/></index></name><operator pos:line="62" pos:column="24">.<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">link<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">=<pos:position pos:line="62" pos:column="31"/></operator> <call><name pos:line="62" pos:column="32">strdup<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><name pos:line="62" pos:column="39">buff<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></then> <else pos:line="63" pos:column="11">else <block pos:line="63" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="64" pos:column="17">file<pos:position pos:line="64" pos:column="21"/></name><index pos:line="64" pos:column="21">[<expr><literal type="number" pos:line="64" pos:column="22">0<pos:position pos:line="64" pos:column="23"/></literal></expr>]<pos:position pos:line="64" pos:column="24"/></index></name><operator pos:line="64" pos:column="24">.<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="25">link<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">=<pos:position pos:line="64" pos:column="31"/></operator> <name pos:line="64" pos:column="32">NULL<pos:position pos:line="64" pos:column="36"/></name></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="67" pos:column="9">read_batch_flist_file<pos:position pos:line="67" pos:column="30"/></name><argument_list pos:line="67" pos:column="30">(<argument><expr><name pos:line="67" pos:column="31">char_str_len<pos:position pos:line="67" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="45">sizeof<argument_list pos:line="67" pos:column="51">(<argument><expr><name pos:line="67" pos:column="52">char_str_len<pos:position pos:line="67" pos:column="64"/></name></expr></argument>)<pos:position pos:line="67" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><name pos:line="68" pos:column="9">int_str_len<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <call><name pos:line="68" pos:column="23">IVAL<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">char_str_len<pos:position pos:line="68" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="45"/></expr_stmt>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">int_str_len<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">&gt;<pos:position pos:line="69" pos:column="29"/></operator> <literal type="number" pos:line="69" pos:column="27">0<pos:position pos:line="69" pos:column="28"/></literal></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29"> <block pos:line="69" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">read_batch_flist_file<pos:position pos:line="70" pos:column="38"/></name><argument_list pos:line="70" pos:column="38">(<argument><expr><name pos:line="70" pos:column="39">buff<pos:position pos:line="70" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="45">int_str_len<pos:position pos:line="70" pos:column="56"/></name></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="71" pos:column="17">buff<pos:position pos:line="71" pos:column="21"/></name><index pos:line="71" pos:column="21">[<expr><name pos:line="71" pos:column="22">int_str_len<pos:position pos:line="71" pos:column="33"/></name></expr>]<pos:position pos:line="71" pos:column="34"/></index></name> <operator pos:line="71" pos:column="35">=<pos:position pos:line="71" pos:column="36"/></operator> <literal type="char" pos:line="71" pos:column="37">'\0'<pos:position pos:line="71" pos:column="41"/></literal></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="72" pos:column="17">file<pos:position pos:line="72" pos:column="21"/></name><index pos:line="72" pos:column="21">[<expr><literal type="number" pos:line="72" pos:column="22">0<pos:position pos:line="72" pos:column="23"/></literal></expr>]<pos:position pos:line="72" pos:column="24"/></index></name><operator pos:line="72" pos:column="24">.<pos:position pos:line="72" pos:column="25"/></operator><name pos:line="72" pos:column="25">sum<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <call><name pos:line="72" pos:column="31">strdup<pos:position pos:line="72" pos:column="37"/></name><argument_list pos:line="72" pos:column="37">(<argument><expr><name pos:line="72" pos:column="38">buff<pos:position pos:line="72" pos:column="42"/></name></expr></argument>)<pos:position pos:line="72" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></then> <else pos:line="73" pos:column="11">else <block pos:line="73" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="74" pos:column="17">file<pos:position pos:line="74" pos:column="21"/></name><index pos:line="74" pos:column="21">[<expr><literal type="number" pos:line="74" pos:column="22">0<pos:position pos:line="74" pos:column="23"/></literal></expr>]<pos:position pos:line="74" pos:column="24"/></index></name><operator pos:line="74" pos:column="24">.<pos:position pos:line="74" pos:column="25"/></operator><name pos:line="74" pos:column="25">sum<pos:position pos:line="74" pos:column="28"/></name> <operator pos:line="74" pos:column="29">=<pos:position pos:line="74" pos:column="30"/></operator> <name pos:line="74" pos:column="31">NULL<pos:position pos:line="74" pos:column="35"/></name></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="75" pos:column="10"/></block></else></if>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

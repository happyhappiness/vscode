<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_528_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_struct<pos:position pos:line="1" pos:column="19"/></name></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">make_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">fname<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="50">struct<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">file_list<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">flist<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">STRUCT_STAT<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">stp<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">int<pos:position pos:line="2" pos:column="52"/></name></type> <name pos:line="2" pos:column="53">flags<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">filter_level<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">lastdir<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">int<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">lastdir_len<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><operator pos:line="5" pos:column="34">-<pos:position pos:line="5" pos:column="35"/></operator><literal type="number" pos:line="5" pos:column="35">1<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">file_struct<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">file<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">thisname<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><name pos:line="7" pos:column="23">MAXPATHLEN<pos:position pos:line="7" pos:column="33"/></name></expr>]<pos:position pos:line="7" pos:column="34"/></index></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">linkname<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">MAXPATHLEN<pos:position pos:line="8" pos:column="33"/></name></expr>]<pos:position pos:line="8" pos:column="34"/></index></name></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">alloc_len<pos:position pos:line="9" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="24">basename_len<pos:position pos:line="9" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="38">linkname_len<pos:position pos:line="9" pos:column="50"/></name></decl>;<pos:position pos:line="9" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">extra_len<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">file_extra_cnt<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">*<pos:position pos:line="10" pos:column="41"/></operator> <name pos:line="10" pos:column="42">EXTRA_LEN<pos:position pos:line="10" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">basename<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">alloc_pool_t<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">pool<pos:position pos:line="12" pos:column="27"/></name></decl>;<pos:position pos:line="12" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">STRUCT_STAT<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">st<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">bp<pos:position pos:line="14" pos:column="17"/></name></decl>;<pos:position pos:line="14" pos:column="18"/></decl_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">strlcpy<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">thisname<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">fname<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="38">sizeof <name pos:line="16" pos:column="45">thisname<pos:position pos:line="16" pos:column="53"/></name></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call> <operator pos:line="16" pos:column="55">&gt;=<pos:position pos:line="16" pos:column="60"/></operator> <sizeof pos:line="16" pos:column="58">sizeof <name pos:line="16" pos:column="65">thisname<pos:position pos:line="16" pos:column="73"/></name></sizeof></expr>)<pos:position pos:line="16" pos:column="74"/></condition><then pos:line="16" pos:column="74"> <block pos:line="16" pos:column="75">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">io_error<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">|=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">IOERR_GENERAL<pos:position pos:line="17" pos:column="42"/></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">rprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">FERROR_XFER<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="38">"skipping overly long name: %s\n"<pos:position pos:line="18" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="73">fname<pos:position pos:line="18" pos:column="78"/></name></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="80"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><name pos:line="19" pos:column="24">NULL<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">clean_fname<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">thisname<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="31">0<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">sanitize_paths<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">sanitize_path<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">thisname<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">thisname<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="51">""<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="55">0<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">SP_DEFAULT<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">stp<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&amp;&amp;<pos:position pos:line="25" pos:column="27"/></operator> <operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><call><name pos:line="25" pos:column="21">S_ISDIR<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">stp<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">st_mode<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call> <operator pos:line="25" pos:column="43">||<pos:position pos:line="25" pos:column="45"/></operator> <call><name pos:line="25" pos:column="46">IS_MISSING_FILE<pos:position pos:line="25" pos:column="61"/></name><argument_list pos:line="25" pos:column="61">(<argument><expr><operator pos:line="25" pos:column="62">*<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="63">stp<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call><operator pos:line="25" pos:column="67">)<pos:position pos:line="25" pos:column="68"/></operator></expr>)<pos:position pos:line="25" pos:column="69"/></condition><then pos:line="25" pos:column="69"> <block pos:line="25" pos:column="70">{
		<comment type="block" pos:line="26" pos:column="17">/* This is needed to handle a "symlink/." with a --relative
		 * dir, or a request to delete a specific file. */</comment>
		<expr_stmt><expr><name pos:line="28" pos:column="17">st<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <operator pos:line="28" pos:column="22">*<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">stp<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">linkname<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <literal type="char" pos:line="29" pos:column="29">'\0'<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt> <comment type="block" pos:line="29" pos:column="35">/* make IBM code checker happy */</comment>
	}<pos:position pos:line="30" pos:column="10"/></block></then> <elseif pos:line="30" pos:column="11">else <if pos:line="30" pos:column="16">if <condition pos:line="30" pos:column="19">(<expr><call><name pos:line="30" pos:column="20">readlink_stat<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">thisname<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="44">&amp;<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="45">st<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">linkname<pos:position pos:line="30" pos:column="57"/></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call> <operator pos:line="30" pos:column="59">!=<pos:position pos:line="30" pos:column="61"/></operator> <literal type="number" pos:line="30" pos:column="62">0<pos:position pos:line="30" pos:column="63"/></literal></expr>)<pos:position pos:line="30" pos:column="64"/></condition><then pos:line="30" pos:column="64"> <block pos:line="30" pos:column="65">{
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name></type> <name pos:line="31" pos:column="21">save_errno<pos:position pos:line="31" pos:column="31"/></name> <init pos:line="31" pos:column="32">= <expr><name pos:line="31" pos:column="34">errno<pos:position pos:line="31" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="40"/></decl_stmt>
		<comment type="block" pos:line="32" pos:column="17">/* See if file is excluded before reporting an error. */</comment>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">filter_level<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">!=<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">NO_FILTERS<pos:position pos:line="33" pos:column="47"/></name>
		 <operator pos:line="34" pos:column="18">&amp;&amp;<pos:position pos:line="34" pos:column="28"/></operator> <operator pos:line="34" pos:column="21">(<pos:position pos:line="34" pos:column="22"/></operator><call><name pos:line="34" pos:column="22">is_excluded<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">thisname<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="44">0<pos:position pos:line="34" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="47">filter_level<pos:position pos:line="34" pos:column="59"/></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call>
		  <operator pos:line="35" pos:column="19">||<pos:position pos:line="35" pos:column="21"/></operator> <call><name pos:line="35" pos:column="22">is_excluded<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">thisname<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="44">1<pos:position pos:line="35" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">filter_level<pos:position pos:line="35" pos:column="59"/></name></expr></argument>)<pos:position pos:line="35" pos:column="60"/></argument_list></call><operator pos:line="35" pos:column="60">)<pos:position pos:line="35" pos:column="61"/></operator></expr>)<pos:position pos:line="35" pos:column="62"/></condition><then pos:line="35" pos:column="62"> <block pos:line="35" pos:column="63">{
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><name pos:line="36" pos:column="29">ignore_perishable<pos:position pos:line="36" pos:column="46"/></name> <operator pos:line="36" pos:column="47">&amp;&amp;<pos:position pos:line="36" pos:column="57"/></operator> <name pos:line="36" pos:column="50">save_errno<pos:position pos:line="36" pos:column="60"/></name> <operator pos:line="36" pos:column="61">!=<pos:position pos:line="36" pos:column="63"/></operator> <name pos:line="36" pos:column="64">ENOENT<pos:position pos:line="36" pos:column="70"/></name></expr>)<pos:position pos:line="36" pos:column="71"/></condition><then pos:line="36" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="33">non_perishable_cnt<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">++<pos:position pos:line="37" pos:column="53"/></operator></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt></block></then></if>
			<return pos:line="38" pos:column="25">return <expr><name pos:line="38" pos:column="32">NULL<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></return>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">save_errno<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">==<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">ENOENT<pos:position pos:line="40" pos:column="41"/></name></expr>)<pos:position pos:line="40" pos:column="42"/></condition><then pos:line="40" pos:column="42"> <block pos:line="40" pos:column="43">{
<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef<pos:position pos:line="41" pos:column="7"/></cpp:directive> <name pos:line="41" pos:column="8">SUPPORT_LINKS<pos:position pos:line="41" pos:column="21"/></name></cpp:ifdef>
			<comment type="block" pos:line="42" pos:column="25">/* When our options tell us to follow a symlink that
			 * points nowhere, tell the user about the symlink
			 * instead of giving a "vanished" message.  We only
			 * dereference a symlink if one of the --copy*links
			 * options was specified, so there's no need for the
			 * extra lstat() if one of these options isn't on. */</comment>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><operator pos:line="48" pos:column="29">(<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="30">copy_links<pos:position pos:line="48" pos:column="40"/></name> <operator pos:line="48" pos:column="41">||<pos:position pos:line="48" pos:column="43"/></operator> <name pos:line="48" pos:column="44">copy_unsafe_links<pos:position pos:line="48" pos:column="61"/></name> <operator pos:line="48" pos:column="62">||<pos:position pos:line="48" pos:column="64"/></operator> <name pos:line="48" pos:column="65">copy_dirlinks<pos:position pos:line="48" pos:column="78"/></name><operator pos:line="48" pos:column="78">)<pos:position pos:line="48" pos:column="79"/></operator>
			 <operator pos:line="49" pos:column="26">&amp;&amp;<pos:position pos:line="49" pos:column="36"/></operator> <call><name pos:line="49" pos:column="29">x_lstat<pos:position pos:line="49" pos:column="36"/></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">thisname<pos:position pos:line="49" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="47">&amp;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="48">st<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">NULL<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call> <operator pos:line="49" pos:column="58">==<pos:position pos:line="49" pos:column="60"/></operator> <literal type="number" pos:line="49" pos:column="61">0<pos:position pos:line="49" pos:column="62"/></literal>
			 <operator pos:line="50" pos:column="26">&amp;&amp;<pos:position pos:line="50" pos:column="36"/></operator> <call><name pos:line="50" pos:column="29">S_ISLNK<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name><name pos:line="50" pos:column="37">st<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">.<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="40">st_mode<pos:position pos:line="50" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="49"/></condition><then pos:line="50" pos:column="49"> <block pos:line="50" pos:column="50">{
				<expr_stmt><expr><name pos:line="51" pos:column="33">io_error<pos:position pos:line="51" pos:column="41"/></name> <operator pos:line="51" pos:column="42">|=<pos:position pos:line="51" pos:column="44"/></operator> <name pos:line="51" pos:column="45">IOERR_GENERAL<pos:position pos:line="51" pos:column="58"/></name></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="52" pos:column="33">rprintf<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">FERROR_XFER<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="54">"symlink has no referent: %s\n"<pos:position pos:line="52" pos:column="85"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="53" pos:column="41">full_fname<pos:position pos:line="53" pos:column="51"/></name><argument_list pos:line="53" pos:column="51">(<argument><expr><name pos:line="53" pos:column="52">thisname<pos:position pos:line="53" pos:column="60"/></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="54" pos:column="26"/></block></then> <else pos:line="54" pos:column="27">else
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>
			<block pos:line="56" pos:column="25">{
				<decl_stmt><decl><type><name><name pos:line="57" pos:column="33">enum<pos:position pos:line="57" pos:column="37"/></name> <name pos:line="57" pos:column="38">logcode<pos:position pos:line="57" pos:column="45"/></name></name></type> <name pos:line="57" pos:column="46">c<pos:position pos:line="57" pos:column="47"/></name> <init pos:line="57" pos:column="48">= <expr><ternary><condition><expr><name pos:line="57" pos:column="50">am_daemon<pos:position pos:line="57" pos:column="59"/></name> <operator pos:line="57" pos:column="60">&amp;&amp;<pos:position pos:line="57" pos:column="70"/></operator> <name pos:line="57" pos:column="63">protocol_version<pos:position pos:line="57" pos:column="79"/></name> <operator pos:line="57" pos:column="80">&lt;<pos:position pos:line="57" pos:column="84"/></operator> <literal type="number" pos:line="57" pos:column="82">28<pos:position pos:line="57" pos:column="84"/></literal></expr>
					       ?<pos:position pos:line="58" pos:column="49"/></condition><then pos:line="58" pos:column="49"> <expr><name pos:line="58" pos:column="50">FERROR<pos:position pos:line="58" pos:column="56"/></name></expr> <pos:position pos:line="58" pos:column="57"/></then><else pos:line="58" pos:column="57">: <expr><name pos:line="58" pos:column="59">FWARNING<pos:position pos:line="58" pos:column="67"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="58" pos:column="68"/></decl_stmt>
				<expr_stmt><expr><name pos:line="59" pos:column="33">io_error<pos:position pos:line="59" pos:column="41"/></name> <operator pos:line="59" pos:column="42">|=<pos:position pos:line="59" pos:column="44"/></operator> <name pos:line="59" pos:column="45">IOERR_VANISHED<pos:position pos:line="59" pos:column="59"/></name></expr>;<pos:position pos:line="59" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="60" pos:column="33">rprintf<pos:position pos:line="60" pos:column="40"/></name><argument_list pos:line="60" pos:column="40">(<argument><expr><name pos:line="60" pos:column="41">c<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="44">"file has vanished: %s\n"<pos:position pos:line="60" pos:column="69"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="61" pos:column="41">full_fname<pos:position pos:line="61" pos:column="51"/></name><argument_list pos:line="61" pos:column="51">(<argument><expr><name pos:line="61" pos:column="52">thisname<pos:position pos:line="61" pos:column="60"/></name></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="62" pos:column="26"/></block></else></if>
		}<pos:position pos:line="63" pos:column="18"/></block></then> <else pos:line="63" pos:column="19">else <block pos:line="63" pos:column="24">{
			<expr_stmt><expr><name pos:line="64" pos:column="25">io_error<pos:position pos:line="64" pos:column="33"/></name> <operator pos:line="64" pos:column="34">|=<pos:position pos:line="64" pos:column="36"/></operator> <name pos:line="64" pos:column="37">IOERR_GENERAL<pos:position pos:line="64" pos:column="50"/></name></expr>;<pos:position pos:line="64" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">rsyserr<pos:position pos:line="65" pos:column="32"/></name><argument_list pos:line="65" pos:column="32">(<argument><expr><name pos:line="65" pos:column="33">FERROR_XFER<pos:position pos:line="65" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="46">save_errno<pos:position pos:line="65" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="58">"readlink_stat(%s) failed"<pos:position pos:line="65" pos:column="84"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="66" pos:column="33">full_fname<pos:position pos:line="66" pos:column="43"/></name><argument_list pos:line="66" pos:column="43">(<argument><expr><name pos:line="66" pos:column="44">thisname<pos:position pos:line="66" pos:column="52"/></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="67" pos:column="18"/></block></else></if>
		<return pos:line="68" pos:column="17">return <expr><name pos:line="68" pos:column="24">NULL<pos:position pos:line="68" pos:column="28"/></name></expr>;<pos:position pos:line="68" pos:column="29"/></return>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if></elseif> <elseif pos:line="69" pos:column="11">else <if pos:line="69" pos:column="16">if <condition pos:line="69" pos:column="19">(<expr><call><name pos:line="69" pos:column="20">IS_MISSING_FILE<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">st<pos:position pos:line="69" pos:column="38"/></name></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="40"/></condition><then pos:line="69" pos:column="40"> <block pos:line="69" pos:column="41">{
		<expr_stmt><expr><name pos:line="70" pos:column="17">io_error<pos:position pos:line="70" pos:column="25"/></name> <operator pos:line="70" pos:column="26">|=<pos:position pos:line="70" pos:column="28"/></operator> <name pos:line="70" pos:column="29">IOERR_GENERAL<pos:position pos:line="70" pos:column="42"/></name></expr>;<pos:position pos:line="70" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">rprintf<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">FINFO<pos:position pos:line="71" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="32">"skipping file with bogus (zero) st_mode: %s\n"<pos:position pos:line="71" pos:column="79"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="72" pos:column="25">full_fname<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">(<argument><expr><name pos:line="72" pos:column="36">thisname<pos:position pos:line="72" pos:column="44"/></name></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="47"/></expr_stmt>
		<return pos:line="73" pos:column="17">return <expr><name pos:line="73" pos:column="24">NULL<pos:position pos:line="73" pos:column="28"/></name></expr>;<pos:position pos:line="73" pos:column="29"/></return>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">filter_level<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">==<pos:position pos:line="76" pos:column="28"/></operator> <name pos:line="76" pos:column="29">NO_FILTERS<pos:position pos:line="76" pos:column="39"/></name></expr>)<pos:position pos:line="76" pos:column="40"/></condition><then pos:line="76" pos:column="40">
		<block type="pseudo"><goto pos:line="77" pos:column="17">goto <name pos:line="77" pos:column="22">skip_filters<pos:position pos:line="77" pos:column="34"/></name>;<pos:position pos:line="77" pos:column="35"/></goto></block></then></if>

	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><call><name pos:line="79" pos:column="13">S_ISDIR<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name><name pos:line="79" pos:column="21">st<pos:position pos:line="79" pos:column="23"/></name><operator pos:line="79" pos:column="23">.<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="24">st_mode<pos:position pos:line="79" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="33"/></condition><then pos:line="79" pos:column="33"> <block pos:line="79" pos:column="34">{
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><operator pos:line="80" pos:column="21">!<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">xfer_dirs<pos:position pos:line="80" pos:column="31"/></name></expr>)<pos:position pos:line="80" pos:column="32"/></condition><then pos:line="80" pos:column="32"> <block pos:line="80" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="81" pos:column="25">rprintf<pos:position pos:line="81" pos:column="32"/></name><argument_list pos:line="81" pos:column="32">(<argument><expr><name pos:line="81" pos:column="33">FINFO<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="40">"skipping directory %s\n"<pos:position pos:line="81" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="67">thisname<pos:position pos:line="81" pos:column="75"/></name></expr></argument>)<pos:position pos:line="81" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="77"/></expr_stmt>
			<return pos:line="82" pos:column="25">return <expr><name pos:line="82" pos:column="32">NULL<pos:position pos:line="82" pos:column="36"/></name></expr>;<pos:position pos:line="82" pos:column="37"/></return>
		}<pos:position pos:line="83" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="84" pos:column="17">/* -x only affects dirs because we need to avoid recursing
		 * into a mount-point directory, not to avoid copying a
		 * symlinked file if -L (or similar) was specified. */</comment>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">one_file_system<pos:position pos:line="87" pos:column="36"/></name> <operator pos:line="87" pos:column="37">&amp;&amp;<pos:position pos:line="87" pos:column="47"/></operator> <name><name pos:line="87" pos:column="40">st<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">.<pos:position pos:line="87" pos:column="43"/></operator><name pos:line="87" pos:column="43">st_dev<pos:position pos:line="87" pos:column="49"/></name></name> <operator pos:line="87" pos:column="50">!=<pos:position pos:line="87" pos:column="52"/></operator> <name pos:line="87" pos:column="53">filesystem_dev<pos:position pos:line="87" pos:column="67"/></name>
		 <operator pos:line="88" pos:column="18">&amp;&amp;<pos:position pos:line="88" pos:column="28"/></operator> <call><name pos:line="88" pos:column="21">BITS_SETnUNSET<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name pos:line="88" pos:column="36">flags<pos:position pos:line="88" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="43">FLAG_CONTENT_DIR<pos:position pos:line="88" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="61">FLAG_TOP_DIR<pos:position pos:line="88" pos:column="73"/></name></expr></argument>)<pos:position pos:line="88" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="75"/></condition><then pos:line="88" pos:column="75"> <block pos:line="88" pos:column="76">{
			<if pos:line="89" pos:column="25">if <condition pos:line="89" pos:column="28">(<expr><name pos:line="89" pos:column="29">one_file_system<pos:position pos:line="89" pos:column="44"/></name> <operator pos:line="89" pos:column="45">&gt;<pos:position pos:line="89" pos:column="49"/></operator> <literal type="number" pos:line="89" pos:column="47">1<pos:position pos:line="89" pos:column="48"/></literal></expr>)<pos:position pos:line="89" pos:column="49"/></condition><then pos:line="89" pos:column="49"> <block pos:line="89" pos:column="50">{
				<if pos:line="90" pos:column="33">if <condition pos:line="90" pos:column="36">(<expr><call><name pos:line="90" pos:column="37">INFO_GTE<pos:position pos:line="90" pos:column="45"/></name><argument_list pos:line="90" pos:column="45">(<argument><expr><name pos:line="90" pos:column="46">MOUNT<pos:position pos:line="90" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="53">1<pos:position pos:line="90" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="56"/></condition><then pos:line="90" pos:column="56"> <block pos:line="90" pos:column="57">{
					<expr_stmt><expr><call><name pos:line="91" pos:column="41">rprintf<pos:position pos:line="91" pos:column="48"/></name><argument_list pos:line="91" pos:column="48">(<argument><expr><name pos:line="91" pos:column="49">FINFO<pos:position pos:line="91" pos:column="54"/></name></expr></argument>,
					    <argument><expr><literal type="string" pos:line="92" pos:column="45">"[%s] skipping mount-point dir %s\n"<pos:position pos:line="92" pos:column="81"/></literal></expr></argument>,
					    <argument><expr><call><name pos:line="93" pos:column="45">who_am_i<pos:position pos:line="93" pos:column="53"/></name><argument_list pos:line="93" pos:column="53">()<pos:position pos:line="93" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="57">thisname<pos:position pos:line="93" pos:column="65"/></name></expr></argument>)<pos:position pos:line="93" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="67"/></expr_stmt>
				}<pos:position pos:line="94" pos:column="34"/></block></then></if>
				<return pos:line="95" pos:column="33">return <expr><name pos:line="95" pos:column="40">NULL<pos:position pos:line="95" pos:column="44"/></name></expr>;<pos:position pos:line="95" pos:column="45"/></return>
			}<pos:position pos:line="96" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="97" pos:column="25">flags<pos:position pos:line="97" pos:column="30"/></name> <operator pos:line="97" pos:column="31">|=<pos:position pos:line="97" pos:column="33"/></operator> <name pos:line="97" pos:column="34">FLAG_MOUNT_DIR<pos:position pos:line="97" pos:column="48"/></name></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="98" pos:column="25">flags<pos:position pos:line="98" pos:column="30"/></name> <operator pos:line="98" pos:column="31">&amp;=<pos:position pos:line="98" pos:column="37"/></operator> <operator pos:line="98" pos:column="34">~<pos:position pos:line="98" pos:column="35"/></operator><name pos:line="98" pos:column="35">FLAG_CONTENT_DIR<pos:position pos:line="98" pos:column="51"/></name></expr>;<pos:position pos:line="98" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if>
	}<pos:position pos:line="100" pos:column="10"/></block></then> <else pos:line="100" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="17">flags<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">&amp;=<pos:position pos:line="101" pos:column="29"/></operator> <operator pos:line="101" pos:column="26">~<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="27">FLAG_CONTENT_DIR<pos:position pos:line="101" pos:column="43"/></name></expr>;<pos:position pos:line="101" pos:column="44"/></expr_stmt></block></else></if>

	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><call><name pos:line="103" pos:column="13">is_excluded<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><name pos:line="103" pos:column="25">thisname<pos:position pos:line="103" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="103" pos:column="35">S_ISDIR<pos:position pos:line="103" pos:column="42"/></name><argument_list pos:line="103" pos:column="42">(<argument><expr><name><name pos:line="103" pos:column="43">st<pos:position pos:line="103" pos:column="45"/></name><operator pos:line="103" pos:column="45">.<pos:position pos:line="103" pos:column="46"/></operator><name pos:line="103" pos:column="46">st_mode<pos:position pos:line="103" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="54"/></argument_list></call> <operator pos:line="103" pos:column="55">!=<pos:position pos:line="103" pos:column="57"/></operator> <literal type="number" pos:line="103" pos:column="58">0<pos:position pos:line="103" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="61">filter_level<pos:position pos:line="103" pos:column="73"/></name></expr></argument>)<pos:position pos:line="103" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="75"/></condition><then pos:line="103" pos:column="75"> <block pos:line="103" pos:column="76">{
		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name pos:line="104" pos:column="21">ignore_perishable<pos:position pos:line="104" pos:column="38"/></name></expr>)<pos:position pos:line="104" pos:column="39"/></condition><then pos:line="104" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="25">non_perishable_cnt<pos:position pos:line="105" pos:column="43"/></name><operator pos:line="105" pos:column="43">++<pos:position pos:line="105" pos:column="45"/></operator></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt></block></then></if>
		<return pos:line="106" pos:column="17">return <expr><name pos:line="106" pos:column="24">NULL<pos:position pos:line="106" pos:column="28"/></name></expr>;<pos:position pos:line="106" pos:column="29"/></return>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if>

	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><call><name pos:line="109" pos:column="13">lp_ignore_nonreadable<pos:position pos:line="109" pos:column="34"/></name><argument_list pos:line="109" pos:column="34">(<argument><expr><name pos:line="109" pos:column="35">module_id<pos:position pos:line="109" pos:column="44"/></name></expr></argument>)<pos:position pos:line="109" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="46"/></condition><then pos:line="109" pos:column="46"> <block pos:line="109" pos:column="47">{
<cpp:ifdef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifdef<pos:position pos:line="110" pos:column="7"/></cpp:directive> <name pos:line="110" pos:column="8">SUPPORT_LINKS<pos:position pos:line="110" pos:column="21"/></name></cpp:ifdef>
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><operator pos:line="111" pos:column="21">!<pos:position pos:line="111" pos:column="22"/></operator><call><name pos:line="111" pos:column="22">S_ISLNK<pos:position pos:line="111" pos:column="29"/></name><argument_list pos:line="111" pos:column="29">(<argument><expr><name><name pos:line="111" pos:column="30">st<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">.<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="33">st_mode<pos:position pos:line="111" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="42"/></condition><then pos:line="111" pos:column="42">
<cpp:endif pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">endif<pos:position pos:line="112" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><if pos:line="113" pos:column="25">if <condition pos:line="113" pos:column="28">(<expr><call><name pos:line="113" pos:column="29">access<pos:position pos:line="113" pos:column="35"/></name><argument_list pos:line="113" pos:column="35">(<argument><expr><name pos:line="113" pos:column="36">thisname<pos:position pos:line="113" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="46">R_OK<pos:position pos:line="113" pos:column="50"/></name></expr></argument>)<pos:position pos:line="113" pos:column="51"/></argument_list></call> <operator pos:line="113" pos:column="52">!=<pos:position pos:line="113" pos:column="54"/></operator> <literal type="number" pos:line="113" pos:column="55">0<pos:position pos:line="113" pos:column="56"/></literal></expr>)<pos:position pos:line="113" pos:column="57"/></condition><then pos:line="113" pos:column="57">
				<block type="pseudo"><return pos:line="114" pos:column="33">return <expr><name pos:line="114" pos:column="40">NULL<pos:position pos:line="114" pos:column="44"/></name></expr>;<pos:position pos:line="114" pos:column="45"/></return></block></then></if></block></then></if>
	}<pos:position pos:line="115" pos:column="10"/></block></then></if>

  <label><name pos:line="117" pos:column="3">skip_filters<pos:position pos:line="117" pos:column="15"/></name>:<pos:position pos:line="117" pos:column="16"/></label>

	<comment type="block" pos:line="119" pos:column="9">/* Only divert a directory in the main transfer. */</comment>
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">flist<pos:position pos:line="120" pos:column="18"/></name></expr>)<pos:position pos:line="120" pos:column="19"/></condition><then pos:line="120" pos:column="19"> <block pos:line="120" pos:column="20">{
		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name><name pos:line="121" pos:column="21">flist<pos:position pos:line="121" pos:column="26"/></name><operator pos:line="121" pos:column="26">-&gt;<pos:position pos:line="121" pos:column="31"/></operator><name pos:line="121" pos:column="28">prev<pos:position pos:line="121" pos:column="32"/></name></name> <operator pos:line="121" pos:column="33">&amp;&amp;<pos:position pos:line="121" pos:column="43"/></operator> <call><name pos:line="121" pos:column="36">S_ISDIR<pos:position pos:line="121" pos:column="43"/></name><argument_list pos:line="121" pos:column="43">(<argument><expr><name><name pos:line="121" pos:column="44">st<pos:position pos:line="121" pos:column="46"/></name><operator pos:line="121" pos:column="46">.<pos:position pos:line="121" pos:column="47"/></operator><name pos:line="121" pos:column="47">st_mode<pos:position pos:line="121" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="55"/></argument_list></call>
		 <operator pos:line="122" pos:column="18">&amp;&amp;<pos:position pos:line="122" pos:column="28"/></operator> <name pos:line="122" pos:column="21">flags<pos:position pos:line="122" pos:column="26"/></name> <operator pos:line="122" pos:column="27">&amp;<pos:position pos:line="122" pos:column="32"/></operator> <name pos:line="122" pos:column="29">FLAG_DIVERT_DIRS<pos:position pos:line="122" pos:column="45"/></name></expr>)<pos:position pos:line="122" pos:column="46"/></condition><then pos:line="122" pos:column="46"> <block pos:line="122" pos:column="47">{
			<comment type="block" pos:line="123" pos:column="25">/* Room for parent/sibling/next-child info. */</comment>
			<expr_stmt><expr><name pos:line="124" pos:column="25">extra_len<pos:position pos:line="124" pos:column="34"/></name> <operator pos:line="124" pos:column="35">+=<pos:position pos:line="124" pos:column="37"/></operator> <name pos:line="124" pos:column="38">DIRNODE_EXTRA_CNT<pos:position pos:line="124" pos:column="55"/></name> <operator pos:line="124" pos:column="56">*<pos:position pos:line="124" pos:column="57"/></operator> <name pos:line="124" pos:column="58">EXTRA_LEN<pos:position pos:line="124" pos:column="67"/></name></expr>;<pos:position pos:line="124" pos:column="68"/></expr_stmt>
			<if pos:line="125" pos:column="25">if <condition pos:line="125" pos:column="28">(<expr><name pos:line="125" pos:column="29">relative_paths<pos:position pos:line="125" pos:column="43"/></name></expr>)<pos:position pos:line="125" pos:column="44"/></condition><then pos:line="125" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="33">extra_len<pos:position pos:line="126" pos:column="42"/></name> <operator pos:line="126" pos:column="43">+=<pos:position pos:line="126" pos:column="45"/></operator> <name pos:line="126" pos:column="46">PTR_EXTRA_CNT<pos:position pos:line="126" pos:column="59"/></name> <operator pos:line="126" pos:column="60">*<pos:position pos:line="126" pos:column="61"/></operator> <name pos:line="126" pos:column="62">EXTRA_LEN<pos:position pos:line="126" pos:column="71"/></name></expr>;<pos:position pos:line="126" pos:column="72"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="127" pos:column="25">pool<pos:position pos:line="127" pos:column="29"/></name> <operator pos:line="127" pos:column="30">=<pos:position pos:line="127" pos:column="31"/></operator> <name><name pos:line="127" pos:column="32">dir_flist<pos:position pos:line="127" pos:column="41"/></name><operator pos:line="127" pos:column="41">-&gt;<pos:position pos:line="127" pos:column="46"/></operator><name pos:line="127" pos:column="43">file_pool<pos:position pos:line="127" pos:column="52"/></name></name></expr>;<pos:position pos:line="127" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="128" pos:column="18"/></block></then> <else pos:line="128" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="25">pool<pos:position pos:line="129" pos:column="29"/></name> <operator pos:line="129" pos:column="30">=<pos:position pos:line="129" pos:column="31"/></operator> <name><name pos:line="129" pos:column="32">flist<pos:position pos:line="129" pos:column="37"/></name><operator pos:line="129" pos:column="37">-&gt;<pos:position pos:line="129" pos:column="42"/></operator><name pos:line="129" pos:column="39">file_pool<pos:position pos:line="129" pos:column="48"/></name></name></expr>;<pos:position pos:line="129" pos:column="49"/></expr_stmt></block></else></if>
	}<pos:position pos:line="130" pos:column="10"/></block></then> <else pos:line="130" pos:column="11">else <block pos:line="130" pos:column="16">{
<cpp:ifdef pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">ifdef<pos:position pos:line="131" pos:column="7"/></cpp:directive> <name pos:line="131" pos:column="8">SUPPORT_ACLS<pos:position pos:line="131" pos:column="20"/></name></cpp:ifdef>
		<comment type="block" pos:line="132" pos:column="17">/* Directories need an extra int32 for the default ACL. */</comment>
		<if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">preserve_acls<pos:position pos:line="133" pos:column="34"/></name> <operator pos:line="133" pos:column="35">&amp;&amp;<pos:position pos:line="133" pos:column="45"/></operator> <call><name pos:line="133" pos:column="38">S_ISDIR<pos:position pos:line="133" pos:column="45"/></name><argument_list pos:line="133" pos:column="45">(<argument><expr><name><name pos:line="133" pos:column="46">st<pos:position pos:line="133" pos:column="48"/></name><operator pos:line="133" pos:column="48">.<pos:position pos:line="133" pos:column="49"/></operator><name pos:line="133" pos:column="49">st_mode<pos:position pos:line="133" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="58"/></condition><then pos:line="133" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name pos:line="134" pos:column="25">extra_len<pos:position pos:line="134" pos:column="34"/></name> <operator pos:line="134" pos:column="35">+=<pos:position pos:line="134" pos:column="37"/></operator> <name pos:line="134" pos:column="38">EXTRA_LEN<pos:position pos:line="134" pos:column="47"/></name></expr>;<pos:position pos:line="134" pos:column="48"/></expr_stmt></block></then></if>
<cpp:endif pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">endif<pos:position pos:line="135" pos:column="7"/></cpp:directive></cpp:endif>
		<expr_stmt><expr><name pos:line="136" pos:column="17">pool<pos:position pos:line="136" pos:column="21"/></name> <operator pos:line="136" pos:column="22">=<pos:position pos:line="136" pos:column="23"/></operator> <name pos:line="136" pos:column="24">NULL<pos:position pos:line="136" pos:column="28"/></name></expr>;<pos:position pos:line="136" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="137" pos:column="10"/></block></else></if>

	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><call><name pos:line="139" pos:column="13">DEBUG_GTE<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><name pos:line="139" pos:column="23">FLIST<pos:position pos:line="139" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="30">2<pos:position pos:line="139" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="33"/></condition><then pos:line="139" pos:column="33"> <block pos:line="139" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="140" pos:column="17">rprintf<pos:position pos:line="140" pos:column="24"/></name><argument_list pos:line="140" pos:column="24">(<argument><expr><name pos:line="140" pos:column="25">FINFO<pos:position pos:line="140" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="32">"[%s] make_file(%s,*,%d)\n"<pos:position pos:line="140" pos:column="59"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="141" pos:column="25">who_am_i<pos:position pos:line="141" pos:column="33"/></name><argument_list pos:line="141" pos:column="33">()<pos:position pos:line="141" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="141" pos:column="37">thisname<pos:position pos:line="141" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="47">filter_level<pos:position pos:line="141" pos:column="59"/></name></expr></argument>)<pos:position pos:line="141" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="142" pos:column="10"/></block></then></if>

	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><operator pos:line="144" pos:column="13">(<pos:position pos:line="144" pos:column="14"/></operator><name pos:line="144" pos:column="14">basename<pos:position pos:line="144" pos:column="22"/></name> <operator pos:line="144" pos:column="23">=<pos:position pos:line="144" pos:column="24"/></operator> <call><name pos:line="144" pos:column="25">strrchr<pos:position pos:line="144" pos:column="32"/></name><argument_list pos:line="144" pos:column="32">(<argument><expr><name pos:line="144" pos:column="33">thisname<pos:position pos:line="144" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="144" pos:column="43">'/'<pos:position pos:line="144" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="47"/></argument_list></call><operator pos:line="144" pos:column="47">)<pos:position pos:line="144" pos:column="48"/></operator> <operator pos:line="144" pos:column="49">!=<pos:position pos:line="144" pos:column="51"/></operator> <name pos:line="144" pos:column="52">NULL<pos:position pos:line="144" pos:column="56"/></name></expr>)<pos:position pos:line="144" pos:column="57"/></condition><then pos:line="144" pos:column="57"> <block pos:line="144" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="145" pos:column="17">int<pos:position pos:line="145" pos:column="20"/></name></type> <name pos:line="145" pos:column="21">len<pos:position pos:line="145" pos:column="24"/></name> <init pos:line="145" pos:column="25">= <expr><name pos:line="145" pos:column="27">basename<pos:position pos:line="145" pos:column="35"/></name><operator pos:line="145" pos:column="35">++<pos:position pos:line="145" pos:column="37"/></operator> <operator pos:line="145" pos:column="38">-<pos:position pos:line="145" pos:column="39"/></operator> <name pos:line="145" pos:column="40">thisname<pos:position pos:line="145" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="145" pos:column="49"/></decl_stmt>
		<if pos:line="146" pos:column="17">if <condition pos:line="146" pos:column="20">(<expr><name pos:line="146" pos:column="21">len<pos:position pos:line="146" pos:column="24"/></name> <operator pos:line="146" pos:column="25">!=<pos:position pos:line="146" pos:column="27"/></operator> <name pos:line="146" pos:column="28">lastdir_len<pos:position pos:line="146" pos:column="39"/></name> <operator pos:line="146" pos:column="40">||<pos:position pos:line="146" pos:column="42"/></operator> <call><name pos:line="146" pos:column="43">memcmp<pos:position pos:line="146" pos:column="49"/></name><argument_list pos:line="146" pos:column="49">(<argument><expr><name pos:line="146" pos:column="50">thisname<pos:position pos:line="146" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="60">lastdir<pos:position pos:line="146" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="69">len<pos:position pos:line="146" pos:column="72"/></name></expr></argument>)<pos:position pos:line="146" pos:column="73"/></argument_list></call> <operator pos:line="146" pos:column="74">!=<pos:position pos:line="146" pos:column="76"/></operator> <literal type="number" pos:line="146" pos:column="77">0<pos:position pos:line="146" pos:column="78"/></literal></expr>)<pos:position pos:line="146" pos:column="79"/></condition><then pos:line="146" pos:column="79"> <block pos:line="146" pos:column="80">{
			<expr_stmt><expr><name pos:line="147" pos:column="25">lastdir<pos:position pos:line="147" pos:column="32"/></name> <operator pos:line="147" pos:column="33">=<pos:position pos:line="147" pos:column="34"/></operator> <call><name pos:line="147" pos:column="35">new_array<pos:position pos:line="147" pos:column="44"/></name><argument_list pos:line="147" pos:column="44">(<argument><expr><name pos:line="147" pos:column="45">char<pos:position pos:line="147" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="51">len<pos:position pos:line="147" pos:column="54"/></name> <operator pos:line="147" pos:column="55">+<pos:position pos:line="147" pos:column="56"/></operator> <literal type="number" pos:line="147" pos:column="57">1<pos:position pos:line="147" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="148" pos:column="25">memcpy<pos:position pos:line="148" pos:column="31"/></name><argument_list pos:line="148" pos:column="31">(<argument><expr><name pos:line="148" pos:column="32">lastdir<pos:position pos:line="148" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="41">thisname<pos:position pos:line="148" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="51">len<pos:position pos:line="148" pos:column="54"/></name></expr></argument>)<pos:position pos:line="148" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="149" pos:column="25">lastdir<pos:position pos:line="149" pos:column="32"/></name><index pos:line="149" pos:column="32">[<expr><name pos:line="149" pos:column="33">len<pos:position pos:line="149" pos:column="36"/></name></expr>]<pos:position pos:line="149" pos:column="37"/></index></name> <operator pos:line="149" pos:column="38">=<pos:position pos:line="149" pos:column="39"/></operator> <literal type="char" pos:line="149" pos:column="40">'\0'<pos:position pos:line="149" pos:column="44"/></literal></expr>;<pos:position pos:line="149" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="150" pos:column="25">lastdir_len<pos:position pos:line="150" pos:column="36"/></name> <operator pos:line="150" pos:column="37">=<pos:position pos:line="150" pos:column="38"/></operator> <name pos:line="150" pos:column="39">len<pos:position pos:line="150" pos:column="42"/></name></expr>;<pos:position pos:line="150" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="151" pos:column="18"/></block></then></if>
	}<pos:position pos:line="152" pos:column="10"/></block></then> <else pos:line="152" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="153" pos:column="17">basename<pos:position pos:line="153" pos:column="25"/></name> <operator pos:line="153" pos:column="26">=<pos:position pos:line="153" pos:column="27"/></operator> <name pos:line="153" pos:column="28">thisname<pos:position pos:line="153" pos:column="36"/></name></expr>;<pos:position pos:line="153" pos:column="37"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="154" pos:column="9">basename_len<pos:position pos:line="154" pos:column="21"/></name> <operator pos:line="154" pos:column="22">=<pos:position pos:line="154" pos:column="23"/></operator> <call><name pos:line="154" pos:column="24">strlen<pos:position pos:line="154" pos:column="30"/></name><argument_list pos:line="154" pos:column="30">(<argument><expr><name pos:line="154" pos:column="31">basename<pos:position pos:line="154" pos:column="39"/></name></expr></argument>)<pos:position pos:line="154" pos:column="40"/></argument_list></call> <operator pos:line="154" pos:column="41">+<pos:position pos:line="154" pos:column="42"/></operator> <literal type="number" pos:line="154" pos:column="43">1<pos:position pos:line="154" pos:column="44"/></literal></expr>;<pos:position pos:line="154" pos:column="45"/></expr_stmt> <comment type="block" pos:line="154" pos:column="46">/* count the '\0' */</comment>

<cpp:ifdef pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">ifdef<pos:position pos:line="156" pos:column="7"/></cpp:directive> <name pos:line="156" pos:column="8">SUPPORT_LINKS<pos:position pos:line="156" pos:column="21"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="157" pos:column="9">linkname_len<pos:position pos:line="157" pos:column="21"/></name> <operator pos:line="157" pos:column="22">=<pos:position pos:line="157" pos:column="23"/></operator> <ternary><condition><expr><call><name pos:line="157" pos:column="24">S_ISLNK<pos:position pos:line="157" pos:column="31"/></name><argument_list pos:line="157" pos:column="31">(<argument><expr><name><name pos:line="157" pos:column="32">st<pos:position pos:line="157" pos:column="34"/></name><operator pos:line="157" pos:column="34">.<pos:position pos:line="157" pos:column="35"/></operator><name pos:line="157" pos:column="35">st_mode<pos:position pos:line="157" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="43"/></argument_list></call></expr> ?<pos:position pos:line="157" pos:column="45"/></condition><then pos:line="157" pos:column="45"> <expr><call><name pos:line="157" pos:column="46">strlen<pos:position pos:line="157" pos:column="52"/></name><argument_list pos:line="157" pos:column="52">(<argument><expr><name pos:line="157" pos:column="53">linkname<pos:position pos:line="157" pos:column="61"/></name></expr></argument>)<pos:position pos:line="157" pos:column="62"/></argument_list></call> <operator pos:line="157" pos:column="63">+<pos:position pos:line="157" pos:column="64"/></operator> <literal type="number" pos:line="157" pos:column="65">1<pos:position pos:line="157" pos:column="66"/></literal></expr> <pos:position pos:line="157" pos:column="67"/></then><else pos:line="157" pos:column="67">: <expr><literal type="number" pos:line="157" pos:column="69">0<pos:position pos:line="157" pos:column="70"/></literal></expr></else></ternary></expr>;<pos:position pos:line="157" pos:column="71"/></expr_stmt>
<cpp:else pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">else<pos:position pos:line="158" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="159" pos:column="9">linkname_len<pos:position pos:line="159" pos:column="21"/></name> <operator pos:line="159" pos:column="22">=<pos:position pos:line="159" pos:column="23"/></operator> <literal type="number" pos:line="159" pos:column="24">0<pos:position pos:line="159" pos:column="25"/></literal></expr>;<pos:position pos:line="159" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">endif<pos:position pos:line="160" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">ifdef<pos:position pos:line="162" pos:column="7"/></cpp:directive> <name pos:line="162" pos:column="8">ST_MTIME_NSEC<pos:position pos:line="162" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name><name pos:line="163" pos:column="13">st<pos:position pos:line="163" pos:column="15"/></name><operator pos:line="163" pos:column="15">.<pos:position pos:line="163" pos:column="16"/></operator><name pos:line="163" pos:column="16">ST_MTIME_NSEC<pos:position pos:line="163" pos:column="29"/></name></name> <operator pos:line="163" pos:column="30">&amp;&amp;<pos:position pos:line="163" pos:column="40"/></operator> <name pos:line="163" pos:column="33">protocol_version<pos:position pos:line="163" pos:column="49"/></name> <operator pos:line="163" pos:column="50">&gt;=<pos:position pos:line="163" pos:column="55"/></operator> <literal type="number" pos:line="163" pos:column="53">31<pos:position pos:line="163" pos:column="55"/></literal></expr>)<pos:position pos:line="163" pos:column="56"/></condition><then pos:line="163" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name pos:line="164" pos:column="17">extra_len<pos:position pos:line="164" pos:column="26"/></name> <operator pos:line="164" pos:column="27">+=<pos:position pos:line="164" pos:column="29"/></operator> <name pos:line="164" pos:column="30">EXTRA_LEN<pos:position pos:line="164" pos:column="39"/></name></expr>;<pos:position pos:line="164" pos:column="40"/></expr_stmt></block></then></if>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif<pos:position pos:line="165" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="166" pos:column="1">#<cpp:directive pos:line="166" pos:column="2">if<pos:position pos:line="166" pos:column="4"/></cpp:directive> <expr><name pos:line="166" pos:column="5">SIZEOF_CAPITAL_OFF_T<pos:position pos:line="166" pos:column="25"/></name> <operator pos:line="166" pos:column="26">&gt;=<pos:position pos:line="166" pos:column="31"/></operator> <literal type="number" pos:line="166" pos:column="29">8<pos:position pos:line="166" pos:column="30"/></literal></expr></cpp:if>
	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name><name pos:line="167" pos:column="13">st<pos:position pos:line="167" pos:column="15"/></name><operator pos:line="167" pos:column="15">.<pos:position pos:line="167" pos:column="16"/></operator><name pos:line="167" pos:column="16">st_size<pos:position pos:line="167" pos:column="23"/></name></name> <operator pos:line="167" pos:column="24">&gt;<pos:position pos:line="167" pos:column="28"/></operator> <literal type="number" pos:line="167" pos:column="26">0xFFFFFFFFu<pos:position pos:line="167" pos:column="37"/></literal> <operator pos:line="167" pos:column="38">&amp;&amp;<pos:position pos:line="167" pos:column="48"/></operator> <call><name pos:line="167" pos:column="41">S_ISREG<pos:position pos:line="167" pos:column="48"/></name><argument_list pos:line="167" pos:column="48">(<argument><expr><name><name pos:line="167" pos:column="49">st<pos:position pos:line="167" pos:column="51"/></name><operator pos:line="167" pos:column="51">.<pos:position pos:line="167" pos:column="52"/></operator><name pos:line="167" pos:column="52">st_mode<pos:position pos:line="167" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="61"/></condition><then pos:line="167" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><name pos:line="168" pos:column="17">extra_len<pos:position pos:line="168" pos:column="26"/></name> <operator pos:line="168" pos:column="27">+=<pos:position pos:line="168" pos:column="29"/></operator> <name pos:line="168" pos:column="30">EXTRA_LEN<pos:position pos:line="168" pos:column="39"/></name></expr>;<pos:position pos:line="168" pos:column="40"/></expr_stmt></block></then></if>
<cpp:endif pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">endif<pos:position pos:line="169" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><name pos:line="171" pos:column="13">always_checksum<pos:position pos:line="171" pos:column="28"/></name> <operator pos:line="171" pos:column="29">&amp;&amp;<pos:position pos:line="171" pos:column="39"/></operator> <name pos:line="171" pos:column="32">am_sender<pos:position pos:line="171" pos:column="41"/></name> <operator pos:line="171" pos:column="42">&amp;&amp;<pos:position pos:line="171" pos:column="52"/></operator> <call><name pos:line="171" pos:column="45">S_ISREG<pos:position pos:line="171" pos:column="52"/></name><argument_list pos:line="171" pos:column="52">(<argument><expr><name><name pos:line="171" pos:column="53">st<pos:position pos:line="171" pos:column="55"/></name><operator pos:line="171" pos:column="55">.<pos:position pos:line="171" pos:column="56"/></operator><name pos:line="171" pos:column="56">st_mode<pos:position pos:line="171" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="171" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="171" pos:column="65"/></condition><then pos:line="171" pos:column="65"> <block pos:line="171" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="172" pos:column="17">file_checksum<pos:position pos:line="172" pos:column="30"/></name><argument_list pos:line="172" pos:column="30">(<argument><expr><name pos:line="172" pos:column="31">thisname<pos:position pos:line="172" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="172" pos:column="41">&amp;<pos:position pos:line="172" pos:column="46"/></operator><name pos:line="172" pos:column="42">st<pos:position pos:line="172" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="46">tmp_sum<pos:position pos:line="172" pos:column="53"/></name></expr></argument>)<pos:position pos:line="172" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="55"/></expr_stmt>
		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><name pos:line="173" pos:column="21">sender_keeps_checksum<pos:position pos:line="173" pos:column="42"/></name></expr>)<pos:position pos:line="173" pos:column="43"/></condition><then pos:line="173" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="174" pos:column="25">extra_len<pos:position pos:line="174" pos:column="34"/></name> <operator pos:line="174" pos:column="35">+=<pos:position pos:line="174" pos:column="37"/></operator> <name pos:line="174" pos:column="38">SUM_EXTRA_CNT<pos:position pos:line="174" pos:column="51"/></name> <operator pos:line="174" pos:column="52">*<pos:position pos:line="174" pos:column="53"/></operator> <name pos:line="174" pos:column="54">EXTRA_LEN<pos:position pos:line="174" pos:column="63"/></name></expr>;<pos:position pos:line="174" pos:column="64"/></expr_stmt></block></then></if>
	}<pos:position pos:line="175" pos:column="10"/></block></then></if>

<cpp:if pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">if<pos:position pos:line="177" pos:column="4"/></cpp:directive> <expr><name pos:line="177" pos:column="5">EXTRA_ROUNDING<pos:position pos:line="177" pos:column="19"/></name> <operator pos:line="177" pos:column="20">&gt;<pos:position pos:line="177" pos:column="24"/></operator> <literal type="number" pos:line="177" pos:column="22">0<pos:position pos:line="177" pos:column="23"/></literal></expr></cpp:if>
	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name pos:line="178" pos:column="13">extra_len<pos:position pos:line="178" pos:column="22"/></name> <operator pos:line="178" pos:column="23">&amp;<pos:position pos:line="178" pos:column="28"/></operator> <operator pos:line="178" pos:column="25">(<pos:position pos:line="178" pos:column="26"/></operator><name pos:line="178" pos:column="26">EXTRA_ROUNDING<pos:position pos:line="178" pos:column="40"/></name> <operator pos:line="178" pos:column="41">*<pos:position pos:line="178" pos:column="42"/></operator> <name pos:line="178" pos:column="43">EXTRA_LEN<pos:position pos:line="178" pos:column="52"/></name><operator pos:line="178" pos:column="52">)<pos:position pos:line="178" pos:column="53"/></operator></expr>)<pos:position pos:line="178" pos:column="54"/></condition><then pos:line="178" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="179" pos:column="17">extra_len<pos:position pos:line="179" pos:column="26"/></name> <operator pos:line="179" pos:column="27">=<pos:position pos:line="179" pos:column="28"/></operator> <operator pos:line="179" pos:column="29">(<pos:position pos:line="179" pos:column="30"/></operator><name pos:line="179" pos:column="30">extra_len<pos:position pos:line="179" pos:column="39"/></name> <operator pos:line="179" pos:column="40">|<pos:position pos:line="179" pos:column="41"/></operator> <operator pos:line="179" pos:column="42">(<pos:position pos:line="179" pos:column="43"/></operator><name pos:line="179" pos:column="43">EXTRA_ROUNDING<pos:position pos:line="179" pos:column="57"/></name> <operator pos:line="179" pos:column="58">*<pos:position pos:line="179" pos:column="59"/></operator> <name pos:line="179" pos:column="60">EXTRA_LEN<pos:position pos:line="179" pos:column="69"/></name><operator pos:line="179" pos:column="69">)<pos:position pos:line="179" pos:column="70"/></operator><operator pos:line="179" pos:column="70">)<pos:position pos:line="179" pos:column="71"/></operator> <operator pos:line="179" pos:column="72">+<pos:position pos:line="179" pos:column="73"/></operator> <name pos:line="179" pos:column="74">EXTRA_LEN<pos:position pos:line="179" pos:column="83"/></name></expr>;<pos:position pos:line="179" pos:column="84"/></expr_stmt></block></then></if>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif<pos:position pos:line="180" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="182" pos:column="9">alloc_len<pos:position pos:line="182" pos:column="18"/></name> <operator pos:line="182" pos:column="19">=<pos:position pos:line="182" pos:column="20"/></operator> <name pos:line="182" pos:column="21">FILE_STRUCT_LEN<pos:position pos:line="182" pos:column="36"/></name> <operator pos:line="182" pos:column="37">+<pos:position pos:line="182" pos:column="38"/></operator> <name pos:line="182" pos:column="39">extra_len<pos:position pos:line="182" pos:column="48"/></name> <operator pos:line="182" pos:column="49">+<pos:position pos:line="182" pos:column="50"/></operator> <name pos:line="182" pos:column="51">basename_len<pos:position pos:line="182" pos:column="63"/></name>
		  <operator pos:line="183" pos:column="19">+<pos:position pos:line="183" pos:column="20"/></operator> <name pos:line="183" pos:column="21">linkname_len<pos:position pos:line="183" pos:column="33"/></name></expr>;<pos:position pos:line="183" pos:column="34"/></expr_stmt>
	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><name pos:line="184" pos:column="13">pool<pos:position pos:line="184" pos:column="17"/></name></expr>)<pos:position pos:line="184" pos:column="18"/></condition><then pos:line="184" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="185" pos:column="17">bp<pos:position pos:line="185" pos:column="19"/></name> <operator pos:line="185" pos:column="20">=<pos:position pos:line="185" pos:column="21"/></operator> <call><name pos:line="185" pos:column="22">pool_alloc<pos:position pos:line="185" pos:column="32"/></name><argument_list pos:line="185" pos:column="32">(<argument><expr><name pos:line="185" pos:column="33">pool<pos:position pos:line="185" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="39">alloc_len<pos:position pos:line="185" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="50">"make_file"<pos:position pos:line="185" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="63"/></expr_stmt></block></then>
	<else pos:line="186" pos:column="9">else <block pos:line="186" pos:column="14">{
		<if pos:line="187" pos:column="17">if <condition pos:line="187" pos:column="20">(<expr><operator pos:line="187" pos:column="21">!<pos:position pos:line="187" pos:column="22"/></operator><operator pos:line="187" pos:column="22">(<pos:position pos:line="187" pos:column="23"/></operator><name pos:line="187" pos:column="23">bp<pos:position pos:line="187" pos:column="25"/></name> <operator pos:line="187" pos:column="26">=<pos:position pos:line="187" pos:column="27"/></operator> <call><name pos:line="187" pos:column="28">new_array<pos:position pos:line="187" pos:column="37"/></name><argument_list pos:line="187" pos:column="37">(<argument><expr><name pos:line="187" pos:column="38">char<pos:position pos:line="187" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="44">alloc_len<pos:position pos:line="187" pos:column="53"/></name></expr></argument>)<pos:position pos:line="187" pos:column="54"/></argument_list></call><operator pos:line="187" pos:column="54">)<pos:position pos:line="187" pos:column="55"/></operator></expr>)<pos:position pos:line="187" pos:column="56"/></condition><then pos:line="187" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="25">out_of_memory<pos:position pos:line="188" pos:column="38"/></name><argument_list pos:line="188" pos:column="38">(<argument><expr><literal type="string" pos:line="188" pos:column="39">"make_file"<pos:position pos:line="188" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="52"/></expr_stmt></block></then></if>
	}<pos:position pos:line="189" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="191" pos:column="9">memset<pos:position pos:line="191" pos:column="15"/></name><argument_list pos:line="191" pos:column="15">(<argument><expr><name pos:line="191" pos:column="16">bp<pos:position pos:line="191" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="191" pos:column="20">0<pos:position pos:line="191" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="23">extra_len<pos:position pos:line="191" pos:column="32"/></name> <operator pos:line="191" pos:column="33">+<pos:position pos:line="191" pos:column="34"/></operator> <name pos:line="191" pos:column="35">FILE_STRUCT_LEN<pos:position pos:line="191" pos:column="50"/></name></expr></argument>)<pos:position pos:line="191" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="192" pos:column="9">bp<pos:position pos:line="192" pos:column="11"/></name> <operator pos:line="192" pos:column="12">+=<pos:position pos:line="192" pos:column="14"/></operator> <name pos:line="192" pos:column="15">extra_len<pos:position pos:line="192" pos:column="24"/></name></expr>;<pos:position pos:line="192" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="193" pos:column="9">file<pos:position pos:line="193" pos:column="13"/></name> <operator pos:line="193" pos:column="14">=<pos:position pos:line="193" pos:column="15"/></operator> <operator pos:line="193" pos:column="16">(<pos:position pos:line="193" pos:column="17"/></operator>struct <name pos:line="193" pos:column="24">file_struct<pos:position pos:line="193" pos:column="35"/></name> <operator pos:line="193" pos:column="36">*<pos:position pos:line="193" pos:column="37"/></operator><operator pos:line="193" pos:column="37">)<pos:position pos:line="193" pos:column="38"/></operator><name pos:line="193" pos:column="38">bp<pos:position pos:line="193" pos:column="40"/></name></expr>;<pos:position pos:line="193" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="194" pos:column="9">bp<pos:position pos:line="194" pos:column="11"/></name> <operator pos:line="194" pos:column="12">+=<pos:position pos:line="194" pos:column="14"/></operator> <name pos:line="194" pos:column="15">FILE_STRUCT_LEN<pos:position pos:line="194" pos:column="30"/></name></expr>;<pos:position pos:line="194" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="196" pos:column="9">memcpy<pos:position pos:line="196" pos:column="15"/></name><argument_list pos:line="196" pos:column="15">(<argument><expr><name pos:line="196" pos:column="16">bp<pos:position pos:line="196" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="20">basename<pos:position pos:line="196" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="196" pos:column="30">basename_len<pos:position pos:line="196" pos:column="42"/></name></expr></argument>)<pos:position pos:line="196" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="44"/></expr_stmt>

<cpp:ifdef pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">ifdef<pos:position pos:line="198" pos:column="7"/></cpp:directive> <name pos:line="198" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="198" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="199" pos:column="9">if <condition pos:line="199" pos:column="12">(<expr><name pos:line="199" pos:column="13">preserve_hard_links<pos:position pos:line="199" pos:column="32"/></name> <operator pos:line="199" pos:column="33">&amp;&amp;<pos:position pos:line="199" pos:column="43"/></operator> <name pos:line="199" pos:column="36">flist<pos:position pos:line="199" pos:column="41"/></name> <operator pos:line="199" pos:column="42">&amp;&amp;<pos:position pos:line="199" pos:column="52"/></operator> <name><name pos:line="199" pos:column="45">flist<pos:position pos:line="199" pos:column="50"/></name><operator pos:line="199" pos:column="50">-&gt;<pos:position pos:line="199" pos:column="55"/></operator><name pos:line="199" pos:column="52">prev<pos:position pos:line="199" pos:column="56"/></name></name></expr>)<pos:position pos:line="199" pos:column="57"/></condition><then pos:line="199" pos:column="57"> <block pos:line="199" pos:column="58">{
		<if pos:line="200" pos:column="17">if <condition pos:line="200" pos:column="20">(<expr><ternary><condition><expr><name pos:line="200" pos:column="21">protocol_version<pos:position pos:line="200" pos:column="37"/></name> <operator pos:line="200" pos:column="38">&gt;=<pos:position pos:line="200" pos:column="43"/></operator> <literal type="number" pos:line="200" pos:column="41">28<pos:position pos:line="200" pos:column="43"/></literal></expr>
		 ?<pos:position pos:line="201" pos:column="19"/></condition><then pos:line="201" pos:column="19"> <expr><operator pos:line="201" pos:column="20">(<pos:position pos:line="201" pos:column="21"/></operator><operator pos:line="201" pos:column="21">!<pos:position pos:line="201" pos:column="22"/></operator><call><name pos:line="201" pos:column="22">S_ISDIR<pos:position pos:line="201" pos:column="29"/></name><argument_list pos:line="201" pos:column="29">(<argument><expr><name><name pos:line="201" pos:column="30">st<pos:position pos:line="201" pos:column="32"/></name><operator pos:line="201" pos:column="32">.<pos:position pos:line="201" pos:column="33"/></operator><name pos:line="201" pos:column="33">st_mode<pos:position pos:line="201" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="201" pos:column="41"/></argument_list></call> <operator pos:line="201" pos:column="42">&amp;&amp;<pos:position pos:line="201" pos:column="52"/></operator> <name><name pos:line="201" pos:column="45">st<pos:position pos:line="201" pos:column="47"/></name><operator pos:line="201" pos:column="47">.<pos:position pos:line="201" pos:column="48"/></operator><name pos:line="201" pos:column="48">st_nlink<pos:position pos:line="201" pos:column="56"/></name></name> <operator pos:line="201" pos:column="57">&gt;<pos:position pos:line="201" pos:column="61"/></operator> <literal type="number" pos:line="201" pos:column="59">1<pos:position pos:line="201" pos:column="60"/></literal><operator pos:line="201" pos:column="60">)<pos:position pos:line="201" pos:column="61"/></operator></expr>
		 <pos:position pos:line="202" pos:column="4"/></then><else pos:line="202" pos:column="18">: <expr><call><name pos:line="202" pos:column="20">S_ISREG<pos:position pos:line="202" pos:column="27"/></name><argument_list pos:line="202" pos:column="27">(<argument><expr><name><name pos:line="202" pos:column="28">st<pos:position pos:line="202" pos:column="30"/></name><operator pos:line="202" pos:column="30">.<pos:position pos:line="202" pos:column="31"/></operator><name pos:line="202" pos:column="31">st_mode<pos:position pos:line="202" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="202" pos:column="39"/></argument_list></call></expr></else></ternary></expr>)<pos:position pos:line="202" pos:column="40"/></condition><then pos:line="202" pos:column="40"> <block pos:line="202" pos:column="41">{
			<expr_stmt><expr><name pos:line="203" pos:column="25">tmp_dev<pos:position pos:line="203" pos:column="32"/></name> <operator pos:line="203" pos:column="33">=<pos:position pos:line="203" pos:column="34"/></operator> <operator pos:line="203" pos:column="35">(<pos:position pos:line="203" pos:column="36"/></operator><name pos:line="203" pos:column="36">int64<pos:position pos:line="203" pos:column="41"/></name><operator pos:line="203" pos:column="41">)<pos:position pos:line="203" pos:column="42"/></operator><name><name pos:line="203" pos:column="42">st<pos:position pos:line="203" pos:column="44"/></name><operator pos:line="203" pos:column="44">.<pos:position pos:line="203" pos:column="45"/></operator><name pos:line="203" pos:column="45">st_dev<pos:position pos:line="203" pos:column="51"/></name></name></expr>;<pos:position pos:line="203" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="204" pos:column="25">tmp_ino<pos:position pos:line="204" pos:column="32"/></name> <operator pos:line="204" pos:column="33">=<pos:position pos:line="204" pos:column="34"/></operator> <operator pos:line="204" pos:column="35">(<pos:position pos:line="204" pos:column="36"/></operator><name pos:line="204" pos:column="36">int64<pos:position pos:line="204" pos:column="41"/></name><operator pos:line="204" pos:column="41">)<pos:position pos:line="204" pos:column="42"/></operator><name><name pos:line="204" pos:column="42">st<pos:position pos:line="204" pos:column="44"/></name><operator pos:line="204" pos:column="44">.<pos:position pos:line="204" pos:column="45"/></operator><name pos:line="204" pos:column="45">st_ino<pos:position pos:line="204" pos:column="51"/></name></name></expr>;<pos:position pos:line="204" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="205" pos:column="18"/></block></then> <else pos:line="205" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="206" pos:column="25">tmp_dev<pos:position pos:line="206" pos:column="32"/></name> <operator pos:line="206" pos:column="33">=<pos:position pos:line="206" pos:column="34"/></operator> <operator pos:line="206" pos:column="35">-<pos:position pos:line="206" pos:column="36"/></operator><literal type="number" pos:line="206" pos:column="36">1<pos:position pos:line="206" pos:column="37"/></literal></expr>;<pos:position pos:line="206" pos:column="38"/></expr_stmt></block></else></if>
	}<pos:position pos:line="207" pos:column="10"/></block></then></if>
<cpp:endif pos:line="208" pos:column="1">#<cpp:directive pos:line="208" pos:column="2">endif<pos:position pos:line="208" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="210" pos:column="1">#<cpp:directive pos:line="210" pos:column="2">ifdef<pos:position pos:line="210" pos:column="7"/></cpp:directive> <name pos:line="210" pos:column="8">HAVE_STRUCT_STAT_ST_RDEV<pos:position pos:line="210" pos:column="32"/></name></cpp:ifdef>
	<if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<expr><call><name pos:line="211" pos:column="13">IS_DEVICE<pos:position pos:line="211" pos:column="22"/></name><argument_list pos:line="211" pos:column="22">(<argument><expr><name><name pos:line="211" pos:column="23">st<pos:position pos:line="211" pos:column="25"/></name><operator pos:line="211" pos:column="25">.<pos:position pos:line="211" pos:column="26"/></operator><name pos:line="211" pos:column="26">st_mode<pos:position pos:line="211" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="211" pos:column="35"/></condition><then pos:line="211" pos:column="35"> <block pos:line="211" pos:column="36">{
		<expr_stmt><expr><name pos:line="212" pos:column="17">tmp_rdev<pos:position pos:line="212" pos:column="25"/></name> <operator pos:line="212" pos:column="26">=<pos:position pos:line="212" pos:column="27"/></operator> <name><name pos:line="212" pos:column="28">st<pos:position pos:line="212" pos:column="30"/></name><operator pos:line="212" pos:column="30">.<pos:position pos:line="212" pos:column="31"/></operator><name pos:line="212" pos:column="31">st_rdev<pos:position pos:line="212" pos:column="38"/></name></name></expr>;<pos:position pos:line="212" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="213" pos:column="17">st<pos:position pos:line="213" pos:column="19"/></name><operator pos:line="213" pos:column="19">.<pos:position pos:line="213" pos:column="20"/></operator><name pos:line="213" pos:column="20">st_size<pos:position pos:line="213" pos:column="27"/></name></name> <operator pos:line="213" pos:column="28">=<pos:position pos:line="213" pos:column="29"/></operator> <literal type="number" pos:line="213" pos:column="30">0<pos:position pos:line="213" pos:column="31"/></literal></expr>;<pos:position pos:line="213" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="214" pos:column="10"/></block></then> <elseif pos:line="214" pos:column="11">else <if pos:line="214" pos:column="16">if <condition pos:line="214" pos:column="19">(<expr><call><name pos:line="214" pos:column="20">IS_SPECIAL<pos:position pos:line="214" pos:column="30"/></name><argument_list pos:line="214" pos:column="30">(<argument><expr><name><name pos:line="214" pos:column="31">st<pos:position pos:line="214" pos:column="33"/></name><operator pos:line="214" pos:column="33">.<pos:position pos:line="214" pos:column="34"/></operator><name pos:line="214" pos:column="34">st_mode<pos:position pos:line="214" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="214" pos:column="43"/></condition><then pos:line="214" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="215" pos:column="17">st<pos:position pos:line="215" pos:column="19"/></name><operator pos:line="215" pos:column="19">.<pos:position pos:line="215" pos:column="20"/></operator><name pos:line="215" pos:column="20">st_size<pos:position pos:line="215" pos:column="27"/></name></name> <operator pos:line="215" pos:column="28">=<pos:position pos:line="215" pos:column="29"/></operator> <literal type="number" pos:line="215" pos:column="30">0<pos:position pos:line="215" pos:column="31"/></literal></expr>;<pos:position pos:line="215" pos:column="32"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">endif<pos:position pos:line="216" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name><name pos:line="218" pos:column="9">file<pos:position pos:line="218" pos:column="13"/></name><operator pos:line="218" pos:column="13">-&gt;<pos:position pos:line="218" pos:column="18"/></operator><name pos:line="218" pos:column="15">flags<pos:position pos:line="218" pos:column="20"/></name></name> <operator pos:line="218" pos:column="21">=<pos:position pos:line="218" pos:column="22"/></operator> <name pos:line="218" pos:column="23">flags<pos:position pos:line="218" pos:column="28"/></name></expr>;<pos:position pos:line="218" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="219" pos:column="9">file<pos:position pos:line="219" pos:column="13"/></name><operator pos:line="219" pos:column="13">-&gt;<pos:position pos:line="219" pos:column="18"/></operator><name pos:line="219" pos:column="15">modtime<pos:position pos:line="219" pos:column="22"/></name></name> <operator pos:line="219" pos:column="23">=<pos:position pos:line="219" pos:column="24"/></operator> <name><name pos:line="219" pos:column="25">st<pos:position pos:line="219" pos:column="27"/></name><operator pos:line="219" pos:column="27">.<pos:position pos:line="219" pos:column="28"/></operator><name pos:line="219" pos:column="28">st_mtime<pos:position pos:line="219" pos:column="36"/></name></name></expr>;<pos:position pos:line="219" pos:column="37"/></expr_stmt>
<cpp:ifdef pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">ifdef<pos:position pos:line="220" pos:column="7"/></cpp:directive> <name pos:line="220" pos:column="8">ST_MTIME_NSEC<pos:position pos:line="220" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><name><name pos:line="221" pos:column="13">st<pos:position pos:line="221" pos:column="15"/></name><operator pos:line="221" pos:column="15">.<pos:position pos:line="221" pos:column="16"/></operator><name pos:line="221" pos:column="16">ST_MTIME_NSEC<pos:position pos:line="221" pos:column="29"/></name></name> <operator pos:line="221" pos:column="30">&amp;&amp;<pos:position pos:line="221" pos:column="40"/></operator> <name pos:line="221" pos:column="33">protocol_version<pos:position pos:line="221" pos:column="49"/></name> <operator pos:line="221" pos:column="50">&gt;=<pos:position pos:line="221" pos:column="55"/></operator> <literal type="number" pos:line="221" pos:column="53">31<pos:position pos:line="221" pos:column="55"/></literal></expr>)<pos:position pos:line="221" pos:column="56"/></condition><then pos:line="221" pos:column="56"> <block pos:line="221" pos:column="57">{
		<expr_stmt><expr><name><name pos:line="222" pos:column="17">file<pos:position pos:line="222" pos:column="21"/></name><operator pos:line="222" pos:column="21">-&gt;<pos:position pos:line="222" pos:column="26"/></operator><name pos:line="222" pos:column="23">flags<pos:position pos:line="222" pos:column="28"/></name></name> <operator pos:line="222" pos:column="29">|=<pos:position pos:line="222" pos:column="31"/></operator> <name pos:line="222" pos:column="32">FLAG_MOD_NSEC<pos:position pos:line="222" pos:column="45"/></name></expr>;<pos:position pos:line="222" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="223" pos:column="17">OPT_EXTRA<pos:position pos:line="223" pos:column="26"/></name><argument_list pos:line="223" pos:column="26">(<argument><expr><name pos:line="223" pos:column="27">file<pos:position pos:line="223" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="223" pos:column="33">0<pos:position pos:line="223" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="35"/></argument_list></call><operator pos:line="223" pos:column="35">-&gt;<pos:position pos:line="223" pos:column="40"/></operator><name pos:line="223" pos:column="37">unum<pos:position pos:line="223" pos:column="41"/></name> <operator pos:line="223" pos:column="42">=<pos:position pos:line="223" pos:column="43"/></operator> <name><name pos:line="223" pos:column="44">st<pos:position pos:line="223" pos:column="46"/></name><operator pos:line="223" pos:column="46">.<pos:position pos:line="223" pos:column="47"/></operator><name pos:line="223" pos:column="47">ST_MTIME_NSEC<pos:position pos:line="223" pos:column="60"/></name></name></expr>;<pos:position pos:line="223" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="224" pos:column="10"/></block></then></if>
<cpp:endif pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">endif<pos:position pos:line="225" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="226" pos:column="9">file<pos:position pos:line="226" pos:column="13"/></name><operator pos:line="226" pos:column="13">-&gt;<pos:position pos:line="226" pos:column="18"/></operator><name pos:line="226" pos:column="15">len32<pos:position pos:line="226" pos:column="20"/></name></name> <operator pos:line="226" pos:column="21">=<pos:position pos:line="226" pos:column="22"/></operator> <operator pos:line="226" pos:column="23">(<pos:position pos:line="226" pos:column="24"/></operator><name pos:line="226" pos:column="24">uint32<pos:position pos:line="226" pos:column="30"/></name><operator pos:line="226" pos:column="30">)<pos:position pos:line="226" pos:column="31"/></operator><name><name pos:line="226" pos:column="31">st<pos:position pos:line="226" pos:column="33"/></name><operator pos:line="226" pos:column="33">.<pos:position pos:line="226" pos:column="34"/></operator><name pos:line="226" pos:column="34">st_size<pos:position pos:line="226" pos:column="41"/></name></name></expr>;<pos:position pos:line="226" pos:column="42"/></expr_stmt>
<cpp:if pos:line="227" pos:column="1">#<cpp:directive pos:line="227" pos:column="2">if<pos:position pos:line="227" pos:column="4"/></cpp:directive> <expr><name pos:line="227" pos:column="5">SIZEOF_CAPITAL_OFF_T<pos:position pos:line="227" pos:column="25"/></name> <operator pos:line="227" pos:column="26">&gt;=<pos:position pos:line="227" pos:column="31"/></operator> <literal type="number" pos:line="227" pos:column="29">8<pos:position pos:line="227" pos:column="30"/></literal></expr></cpp:if>
	<if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><name><name pos:line="228" pos:column="13">st<pos:position pos:line="228" pos:column="15"/></name><operator pos:line="228" pos:column="15">.<pos:position pos:line="228" pos:column="16"/></operator><name pos:line="228" pos:column="16">st_size<pos:position pos:line="228" pos:column="23"/></name></name> <operator pos:line="228" pos:column="24">&gt;<pos:position pos:line="228" pos:column="28"/></operator> <literal type="number" pos:line="228" pos:column="26">0xFFFFFFFFu<pos:position pos:line="228" pos:column="37"/></literal> <operator pos:line="228" pos:column="38">&amp;&amp;<pos:position pos:line="228" pos:column="48"/></operator> <call><name pos:line="228" pos:column="41">S_ISREG<pos:position pos:line="228" pos:column="48"/></name><argument_list pos:line="228" pos:column="48">(<argument><expr><name><name pos:line="228" pos:column="49">st<pos:position pos:line="228" pos:column="51"/></name><operator pos:line="228" pos:column="51">.<pos:position pos:line="228" pos:column="52"/></operator><name pos:line="228" pos:column="52">st_mode<pos:position pos:line="228" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="228" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="228" pos:column="61"/></condition><then pos:line="228" pos:column="61"> <block pos:line="228" pos:column="62">{
		<expr_stmt><expr><name><name pos:line="229" pos:column="17">file<pos:position pos:line="229" pos:column="21"/></name><operator pos:line="229" pos:column="21">-&gt;<pos:position pos:line="229" pos:column="26"/></operator><name pos:line="229" pos:column="23">flags<pos:position pos:line="229" pos:column="28"/></name></name> <operator pos:line="229" pos:column="29">|=<pos:position pos:line="229" pos:column="31"/></operator> <name pos:line="229" pos:column="32">FLAG_LENGTH64<pos:position pos:line="229" pos:column="45"/></name></expr>;<pos:position pos:line="229" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="230" pos:column="17">OPT_EXTRA<pos:position pos:line="230" pos:column="26"/></name><argument_list pos:line="230" pos:column="26">(<argument><expr><name pos:line="230" pos:column="27">file<pos:position pos:line="230" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="230" pos:column="33">NSEC_BUMP<pos:position pos:line="230" pos:column="42"/></name><argument_list pos:line="230" pos:column="42">(<argument><expr><name pos:line="230" pos:column="43">file<pos:position pos:line="230" pos:column="47"/></name></expr></argument>)<pos:position pos:line="230" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="230" pos:column="49"/></argument_list></call><operator pos:line="230" pos:column="49">-&gt;<pos:position pos:line="230" pos:column="54"/></operator><name pos:line="230" pos:column="51">unum<pos:position pos:line="230" pos:column="55"/></name> <operator pos:line="230" pos:column="56">=<pos:position pos:line="230" pos:column="57"/></operator> <call pos:line="230" pos:column="58">(<name pos:line="230" pos:column="59">uint32<pos:position pos:line="230" pos:column="65"/></name>)<argument_list pos:line="230" pos:column="66">(<argument><expr><name><name pos:line="230" pos:column="67">st<pos:position pos:line="230" pos:column="69"/></name><operator pos:line="230" pos:column="69">.<pos:position pos:line="230" pos:column="70"/></operator><name pos:line="230" pos:column="70">st_size<pos:position pos:line="230" pos:column="77"/></name></name> <operator pos:line="230" pos:column="78">&gt;&gt;<pos:position pos:line="230" pos:column="83"/></operator> <literal type="number" pos:line="230" pos:column="81">32<pos:position pos:line="230" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="85"/></expr_stmt>
	}<pos:position pos:line="231" pos:column="10"/></block></then></if>
<cpp:endif pos:line="232" pos:column="1">#<cpp:directive pos:line="232" pos:column="2">endif<pos:position pos:line="232" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="233" pos:column="9">file<pos:position pos:line="233" pos:column="13"/></name><operator pos:line="233" pos:column="13">-&gt;<pos:position pos:line="233" pos:column="18"/></operator><name pos:line="233" pos:column="15">mode<pos:position pos:line="233" pos:column="19"/></name></name> <operator pos:line="233" pos:column="20">=<pos:position pos:line="233" pos:column="21"/></operator> <name><name pos:line="233" pos:column="22">st<pos:position pos:line="233" pos:column="24"/></name><operator pos:line="233" pos:column="24">.<pos:position pos:line="233" pos:column="25"/></operator><name pos:line="233" pos:column="25">st_mode<pos:position pos:line="233" pos:column="32"/></name></name></expr>;<pos:position pos:line="233" pos:column="33"/></expr_stmt>
	<if pos:line="234" pos:column="9">if <condition pos:line="234" pos:column="12">(<expr><name pos:line="234" pos:column="13">preserve_uid<pos:position pos:line="234" pos:column="25"/></name></expr>)<pos:position pos:line="234" pos:column="26"/></condition><then pos:line="234" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="235" pos:column="17">F_OWNER<pos:position pos:line="235" pos:column="24"/></name><argument_list pos:line="235" pos:column="24">(<argument><expr><name pos:line="235" pos:column="25">file<pos:position pos:line="235" pos:column="29"/></name></expr></argument>)<pos:position pos:line="235" pos:column="30"/></argument_list></call> <operator pos:line="235" pos:column="31">=<pos:position pos:line="235" pos:column="32"/></operator> <name><name pos:line="235" pos:column="33">st<pos:position pos:line="235" pos:column="35"/></name><operator pos:line="235" pos:column="35">.<pos:position pos:line="235" pos:column="36"/></operator><name pos:line="235" pos:column="36">st_uid<pos:position pos:line="235" pos:column="42"/></name></name></expr>;<pos:position pos:line="235" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="236" pos:column="9">if <condition pos:line="236" pos:column="12">(<expr><name pos:line="236" pos:column="13">preserve_gid<pos:position pos:line="236" pos:column="25"/></name></expr>)<pos:position pos:line="236" pos:column="26"/></condition><then pos:line="236" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="237" pos:column="17">F_GROUP<pos:position pos:line="237" pos:column="24"/></name><argument_list pos:line="237" pos:column="24">(<argument><expr><name pos:line="237" pos:column="25">file<pos:position pos:line="237" pos:column="29"/></name></expr></argument>)<pos:position pos:line="237" pos:column="30"/></argument_list></call> <operator pos:line="237" pos:column="31">=<pos:position pos:line="237" pos:column="32"/></operator> <name><name pos:line="237" pos:column="33">st<pos:position pos:line="237" pos:column="35"/></name><operator pos:line="237" pos:column="35">.<pos:position pos:line="237" pos:column="36"/></operator><name pos:line="237" pos:column="36">st_gid<pos:position pos:line="237" pos:column="42"/></name></name></expr>;<pos:position pos:line="237" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="238" pos:column="9">if <condition pos:line="238" pos:column="12">(<expr><name pos:line="238" pos:column="13">am_generator<pos:position pos:line="238" pos:column="25"/></name> <operator pos:line="238" pos:column="26">&amp;&amp;<pos:position pos:line="238" pos:column="36"/></operator> <name><name pos:line="238" pos:column="29">st<pos:position pos:line="238" pos:column="31"/></name><operator pos:line="238" pos:column="31">.<pos:position pos:line="238" pos:column="32"/></operator><name pos:line="238" pos:column="32">st_uid<pos:position pos:line="238" pos:column="38"/></name></name> <operator pos:line="238" pos:column="39">==<pos:position pos:line="238" pos:column="41"/></operator> <name pos:line="238" pos:column="42">our_uid<pos:position pos:line="238" pos:column="49"/></name></expr>)<pos:position pos:line="238" pos:column="50"/></condition><then pos:line="238" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="239" pos:column="17">file<pos:position pos:line="239" pos:column="21"/></name><operator pos:line="239" pos:column="21">-&gt;<pos:position pos:line="239" pos:column="26"/></operator><name pos:line="239" pos:column="23">flags<pos:position pos:line="239" pos:column="28"/></name></name> <operator pos:line="239" pos:column="29">|=<pos:position pos:line="239" pos:column="31"/></operator> <name pos:line="239" pos:column="32">FLAG_OWNED_BY_US<pos:position pos:line="239" pos:column="48"/></name></expr>;<pos:position pos:line="239" pos:column="49"/></expr_stmt></block></then></if>

	<if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><name pos:line="241" pos:column="13">basename<pos:position pos:line="241" pos:column="21"/></name> <operator pos:line="241" pos:column="22">!=<pos:position pos:line="241" pos:column="24"/></operator> <name pos:line="241" pos:column="25">thisname<pos:position pos:line="241" pos:column="33"/></name></expr>)<pos:position pos:line="241" pos:column="34"/></condition><then pos:line="241" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="242" pos:column="17">file<pos:position pos:line="242" pos:column="21"/></name><operator pos:line="242" pos:column="21">-&gt;<pos:position pos:line="242" pos:column="26"/></operator><name pos:line="242" pos:column="23">dirname<pos:position pos:line="242" pos:column="30"/></name></name> <operator pos:line="242" pos:column="31">=<pos:position pos:line="242" pos:column="32"/></operator> <name pos:line="242" pos:column="33">lastdir<pos:position pos:line="242" pos:column="40"/></name></expr>;<pos:position pos:line="242" pos:column="41"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="244" pos:column="1">#<cpp:directive pos:line="244" pos:column="2">ifdef<pos:position pos:line="244" pos:column="7"/></cpp:directive> <name pos:line="244" pos:column="8">SUPPORT_LINKS<pos:position pos:line="244" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="245" pos:column="9">if <condition pos:line="245" pos:column="12">(<expr><name pos:line="245" pos:column="13">linkname_len<pos:position pos:line="245" pos:column="25"/></name></expr>)<pos:position pos:line="245" pos:column="26"/></condition><then pos:line="245" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="246" pos:column="17">memcpy<pos:position pos:line="246" pos:column="23"/></name><argument_list pos:line="246" pos:column="23">(<argument><expr><name pos:line="246" pos:column="24">bp<pos:position pos:line="246" pos:column="26"/></name> <operator pos:line="246" pos:column="27">+<pos:position pos:line="246" pos:column="28"/></operator> <name pos:line="246" pos:column="29">basename_len<pos:position pos:line="246" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="43">linkname<pos:position pos:line="246" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="246" pos:column="53">linkname_len<pos:position pos:line="246" pos:column="65"/></name></expr></argument>)<pos:position pos:line="246" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="67"/></expr_stmt></block></then></if>
<cpp:endif pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">endif<pos:position pos:line="247" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="249" pos:column="9">if <condition pos:line="249" pos:column="12">(<expr><name pos:line="249" pos:column="13">am_sender<pos:position pos:line="249" pos:column="22"/></name></expr>)<pos:position pos:line="249" pos:column="23"/></condition><then pos:line="249" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="250" pos:column="17">F_PATHNAME<pos:position pos:line="250" pos:column="27"/></name><argument_list pos:line="250" pos:column="27">(<argument><expr><name pos:line="250" pos:column="28">file<pos:position pos:line="250" pos:column="32"/></name></expr></argument>)<pos:position pos:line="250" pos:column="33"/></argument_list></call> <operator pos:line="250" pos:column="34">=<pos:position pos:line="250" pos:column="35"/></operator> <name pos:line="250" pos:column="36">pathname<pos:position pos:line="250" pos:column="44"/></name></expr>;<pos:position pos:line="250" pos:column="45"/></expr_stmt></block></then>
	<elseif pos:line="251" pos:column="9">else <if pos:line="251" pos:column="14">if <condition pos:line="251" pos:column="17">(<expr><operator pos:line="251" pos:column="18">!<pos:position pos:line="251" pos:column="19"/></operator><name pos:line="251" pos:column="19">pool<pos:position pos:line="251" pos:column="23"/></name></expr>)<pos:position pos:line="251" pos:column="24"/></condition><then pos:line="251" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="252" pos:column="17">F_DEPTH<pos:position pos:line="252" pos:column="24"/></name><argument_list pos:line="252" pos:column="24">(<argument><expr><name pos:line="252" pos:column="25">file<pos:position pos:line="252" pos:column="29"/></name></expr></argument>)<pos:position pos:line="252" pos:column="30"/></argument_list></call> <operator pos:line="252" pos:column="31">=<pos:position pos:line="252" pos:column="32"/></operator> <name pos:line="252" pos:column="33">extra_len<pos:position pos:line="252" pos:column="42"/></name> <operator pos:line="252" pos:column="43">/<pos:position pos:line="252" pos:column="44"/></operator> <name pos:line="252" pos:column="45">EXTRA_LEN<pos:position pos:line="252" pos:column="54"/></name></expr>;<pos:position pos:line="252" pos:column="55"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="254" pos:column="9">if <condition pos:line="254" pos:column="12">(<expr><name pos:line="254" pos:column="13">basename_len<pos:position pos:line="254" pos:column="25"/></name> <operator pos:line="254" pos:column="26">==<pos:position pos:line="254" pos:column="28"/></operator> <literal type="number" pos:line="254" pos:column="29">0<pos:position pos:line="254" pos:column="30"/></literal><operator pos:line="254" pos:column="30">+<pos:position pos:line="254" pos:column="31"/></operator><literal type="number" pos:line="254" pos:column="31">1<pos:position pos:line="254" pos:column="32"/></literal></expr>)<pos:position pos:line="254" pos:column="33"/></condition><then pos:line="254" pos:column="33"> <block pos:line="254" pos:column="34">{
		<if pos:line="255" pos:column="17">if <condition pos:line="255" pos:column="20">(<expr><operator pos:line="255" pos:column="21">!<pos:position pos:line="255" pos:column="22"/></operator><name pos:line="255" pos:column="22">pool<pos:position pos:line="255" pos:column="26"/></name></expr>)<pos:position pos:line="255" pos:column="27"/></condition><then pos:line="255" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="256" pos:column="25">unmake_file<pos:position pos:line="256" pos:column="36"/></name><argument_list pos:line="256" pos:column="36">(<argument><expr><name pos:line="256" pos:column="37">file<pos:position pos:line="256" pos:column="41"/></name></expr></argument>)<pos:position pos:line="256" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="43"/></expr_stmt></block></then></if>
		<return pos:line="257" pos:column="17">return <expr><name pos:line="257" pos:column="24">NULL<pos:position pos:line="257" pos:column="28"/></name></expr>;<pos:position pos:line="257" pos:column="29"/></return>
	}<pos:position pos:line="258" pos:column="10"/></block></then></if>

	<if pos:line="260" pos:column="9">if <condition pos:line="260" pos:column="12">(<expr><name pos:line="260" pos:column="13">sender_keeps_checksum<pos:position pos:line="260" pos:column="34"/></name> <operator pos:line="260" pos:column="35">&amp;&amp;<pos:position pos:line="260" pos:column="45"/></operator> <call><name pos:line="260" pos:column="38">S_ISREG<pos:position pos:line="260" pos:column="45"/></name><argument_list pos:line="260" pos:column="45">(<argument><expr><name><name pos:line="260" pos:column="46">st<pos:position pos:line="260" pos:column="48"/></name><operator pos:line="260" pos:column="48">.<pos:position pos:line="260" pos:column="49"/></operator><name pos:line="260" pos:column="49">st_mode<pos:position pos:line="260" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="260" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="260" pos:column="58"/></condition><then pos:line="260" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="261" pos:column="17">memcpy<pos:position pos:line="261" pos:column="23"/></name><argument_list pos:line="261" pos:column="23">(<argument><expr><call><name pos:line="261" pos:column="24">F_SUM<pos:position pos:line="261" pos:column="29"/></name><argument_list pos:line="261" pos:column="29">(<argument><expr><name pos:line="261" pos:column="30">file<pos:position pos:line="261" pos:column="34"/></name></expr></argument>)<pos:position pos:line="261" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="261" pos:column="37">tmp_sum<pos:position pos:line="261" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="261" pos:column="46">checksum_len<pos:position pos:line="261" pos:column="58"/></name></expr></argument>)<pos:position pos:line="261" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="60"/></expr_stmt></block></then></if>

	<if pos:line="263" pos:column="9">if <condition pos:line="263" pos:column="12">(<expr><name pos:line="263" pos:column="13">unsort_ndx<pos:position pos:line="263" pos:column="23"/></name></expr>)<pos:position pos:line="263" pos:column="24"/></condition><then pos:line="263" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="264" pos:column="17">F_NDX<pos:position pos:line="264" pos:column="22"/></name><argument_list pos:line="264" pos:column="22">(<argument><expr><name pos:line="264" pos:column="23">file<pos:position pos:line="264" pos:column="27"/></name></expr></argument>)<pos:position pos:line="264" pos:column="28"/></argument_list></call> <operator pos:line="264" pos:column="29">=<pos:position pos:line="264" pos:column="30"/></operator> <name><name pos:line="264" pos:column="31">stats<pos:position pos:line="264" pos:column="36"/></name><operator pos:line="264" pos:column="36">.<pos:position pos:line="264" pos:column="37"/></operator><name pos:line="264" pos:column="37">num_dirs<pos:position pos:line="264" pos:column="45"/></name></name></expr>;<pos:position pos:line="264" pos:column="46"/></expr_stmt></block></then></if>

	<return pos:line="266" pos:column="9">return <expr><name pos:line="266" pos:column="16">file<pos:position pos:line="266" pos:column="20"/></name></expr>;<pos:position pos:line="266" pos:column="21"/></return>
}<pos:position pos:line="267" pos:column="2"/></block></function></unit>

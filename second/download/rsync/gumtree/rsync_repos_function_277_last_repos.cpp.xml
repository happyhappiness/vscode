<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_277_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">send_xattr_request<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fname<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">file_struct<pos:position pos:line="1" pos:column="62"/></name></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">file<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">int<pos:position pos:line="1" pos:column="73"/></name></type> <name pos:line="1" pos:column="74">f_out<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="80"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">item_list<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lst<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name><name pos:line="3" pos:column="26">rsync_xal_l<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">.<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">items<pos:position pos:line="3" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cnt<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">prior_req<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">rsync_xa<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">rxa<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">lst<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">+=<pos:position pos:line="7" pos:column="15"/></operator> <call><name pos:line="7" pos:column="16">F_XATTR<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">file<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">rxa<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name><name pos:line="8" pos:column="20">lst<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">items<pos:position pos:line="8" pos:column="30"/></name></name></expr><operator pos:line="8" pos:column="30">,<pos:position pos:line="8" pos:column="31"/></operator> <expr><name pos:line="8" pos:column="32">cnt<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">=<pos:position pos:line="8" pos:column="37"/></operator> <name><name pos:line="8" pos:column="38">lst<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">count<pos:position pos:line="8" pos:column="48"/></name></name></expr>;<pos:position pos:line="8" pos:column="49"/></init> <condition><expr><name pos:line="8" pos:column="50">cnt<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">--<pos:position pos:line="8" pos:column="55"/></operator></expr>;<pos:position pos:line="8" pos:column="56"/></condition> <incr><expr><name pos:line="8" pos:column="57">rxa<pos:position pos:line="8" pos:column="60"/></name><operator pos:line="8" pos:column="60">++<pos:position pos:line="8" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="63"/></control> <block pos:line="8" pos:column="64">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name><name pos:line="9" pos:column="21">rxa<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">datum_len<pos:position pos:line="9" pos:column="35"/></name></name> <operator pos:line="9" pos:column="36">&lt;=<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="39">MAX_FULL_DATUM<pos:position pos:line="9" pos:column="53"/></name></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54">
			<block type="pseudo"><continue pos:line="10" pos:column="25">continue;<pos:position pos:line="10" pos:column="34"/></continue></block></then></if>
		<switch pos:line="11" pos:column="17">switch <condition pos:line="11" pos:column="24">(<expr><name><name pos:line="11" pos:column="25">rxa<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">datum<pos:position pos:line="11" pos:column="35"/></name><index pos:line="11" pos:column="35">[<expr><literal type="number" pos:line="11" pos:column="36">0<pos:position pos:line="11" pos:column="37"/></literal></expr>]<pos:position pos:line="11" pos:column="38"/></index></name></expr>)<pos:position pos:line="11" pos:column="39"/></condition> <block pos:line="11" pos:column="40">{
		<case pos:line="12" pos:column="17">case <expr><name pos:line="12" pos:column="22">XSTATE_ABBREV<pos:position pos:line="12" pos:column="35"/></name></expr>:<pos:position pos:line="12" pos:column="36"/></case>
			<comment type="block" pos:line="13" pos:column="25">/* Items left abbreviated matched the sender's checksum, so
			 * the receiver will cache the local data for future use. */</comment>
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><name pos:line="15" pos:column="29">am_generator<pos:position pos:line="15" pos:column="41"/></name></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="33">rxa<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">datum<pos:position pos:line="16" pos:column="43"/></name><index pos:line="16" pos:column="43">[<expr><literal type="number" pos:line="16" pos:column="44">0<pos:position pos:line="16" pos:column="45"/></literal></expr>]<pos:position pos:line="16" pos:column="46"/></index></name> <operator pos:line="16" pos:column="47">=<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">XSTATE_DONE<pos:position pos:line="16" pos:column="60"/></name></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt></block></then></if>
			<continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue>
		<case pos:line="18" pos:column="17">case <expr><name pos:line="18" pos:column="22">XSTATE_TODO<pos:position pos:line="18" pos:column="33"/></name></expr>:<pos:position pos:line="18" pos:column="34"/></case>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">assert<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">f_out<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">&gt;=<pos:position pos:line="19" pos:column="43"/></operator> <literal type="number" pos:line="19" pos:column="41">0<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
			<break pos:line="20" pos:column="25">break;<pos:position pos:line="20" pos:column="31"/></break>
		<default pos:line="21" pos:column="17">default:<pos:position pos:line="21" pos:column="25"/></default>
			<continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue>
		}<pos:position pos:line="23" pos:column="18"/></block></switch>

		<comment type="block" pos:line="25" pos:column="17">/* Flag that we handled this abbreviated item. */</comment>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">rxa<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">datum<pos:position pos:line="26" pos:column="27"/></name><index pos:line="26" pos:column="27">[<expr><literal type="number" pos:line="26" pos:column="28">0<pos:position pos:line="26" pos:column="29"/></literal></expr>]<pos:position pos:line="26" pos:column="30"/></index></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">XSTATE_DONE<pos:position pos:line="26" pos:column="44"/></name></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="28" pos:column="17">write_varint<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">f_out<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="37">rxa<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">num<pos:position pos:line="28" pos:column="45"/></name></name> <operator pos:line="28" pos:column="46">-<pos:position pos:line="28" pos:column="47"/></operator> <name pos:line="28" pos:column="48">prior_req<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">prior_req<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <name><name pos:line="29" pos:column="29">rxa<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">num<pos:position pos:line="29" pos:column="37"/></name></name></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>

		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">fname<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="32" pos:column="25">size_t<pos:position pos:line="32" pos:column="31"/></name></type> <name pos:line="32" pos:column="32">len<pos:position pos:line="32" pos:column="35"/></name> <init pos:line="32" pos:column="36">= <expr><literal type="number" pos:line="32" pos:column="38">0<pos:position pos:line="32" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="40"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">char<pos:position pos:line="33" pos:column="29"/></name> <modifier pos:line="33" pos:column="30">*<pos:position pos:line="33" pos:column="31"/></modifier></type><name pos:line="33" pos:column="31">ptr<pos:position pos:line="33" pos:column="34"/></name></decl>;<pos:position pos:line="33" pos:column="35"/></decl_stmt>

			<comment type="block" pos:line="35" pos:column="25">/* Re-read the long datum. */</comment>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><operator pos:line="36" pos:column="29">!<pos:position pos:line="36" pos:column="30"/></operator><operator pos:line="36" pos:column="30">(<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">ptr<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <call><name pos:line="36" pos:column="37">get_xattr_data<pos:position pos:line="36" pos:column="51"/></name><argument_list pos:line="36" pos:column="51">(<argument><expr><name pos:line="36" pos:column="52">fname<pos:position pos:line="36" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="59">rxa<pos:position pos:line="36" pos:column="62"/></name><operator pos:line="36" pos:column="62">-&gt;<pos:position pos:line="36" pos:column="67"/></operator><name pos:line="36" pos:column="64">name<pos:position pos:line="36" pos:column="68"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="70">&amp;<pos:position pos:line="36" pos:column="75"/></operator><name pos:line="36" pos:column="71">len<pos:position pos:line="36" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="76">0<pos:position pos:line="36" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="78"/></argument_list></call><operator pos:line="36" pos:column="78">)<pos:position pos:line="36" pos:column="79"/></operator></expr>)<pos:position pos:line="36" pos:column="80"/></condition><then pos:line="36" pos:column="80"> <block pos:line="36" pos:column="81">{
				<expr_stmt><expr><call><name pos:line="37" pos:column="33">rprintf<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">FERROR_XFER<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="54">"failed to re-read xattr %s for %s\n"<pos:position pos:line="37" pos:column="91"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="93">rxa<pos:position pos:line="37" pos:column="96"/></name><operator pos:line="37" pos:column="96">-&gt;<pos:position pos:line="37" pos:column="101"/></operator><name pos:line="37" pos:column="98">name<pos:position pos:line="37" pos:column="102"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="104">fname<pos:position pos:line="37" pos:column="109"/></name></expr></argument>)<pos:position pos:line="37" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="111"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="38" pos:column="33">write_varint<pos:position pos:line="38" pos:column="45"/></name><argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">f_out<pos:position pos:line="38" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="53">0<pos:position pos:line="38" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt>
				<continue pos:line="39" pos:column="33">continue;<pos:position pos:line="39" pos:column="42"/></continue>
			}<pos:position pos:line="40" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="42" pos:column="25">write_varint<pos:position pos:line="42" pos:column="37"/></name><argument_list pos:line="42" pos:column="37">(<argument><expr><name pos:line="42" pos:column="38">f_out<pos:position pos:line="42" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">len<pos:position pos:line="42" pos:column="48"/></name></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt> <comment type="block" pos:line="42" pos:column="51">/* length might have changed! */</comment>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">write_bigbuf<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">f_out<pos:position pos:line="43" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="45">ptr<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">len<pos:position pos:line="43" pos:column="53"/></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">free<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">ptr<pos:position pos:line="44" pos:column="33"/></name></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>
	}<pos:position pos:line="46" pos:column="10"/></block></for>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">f_out<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">&gt;=<pos:position pos:line="48" pos:column="24"/></operator> <literal type="number" pos:line="48" pos:column="22">0<pos:position pos:line="48" pos:column="23"/></literal></expr>)<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">write_byte<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">f_out<pos:position pos:line="49" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="35">0<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt></block></then></if> <comment type="block" pos:line="49" pos:column="39">/* end the list */</comment>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

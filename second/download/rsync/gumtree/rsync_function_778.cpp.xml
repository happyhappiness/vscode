<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_778.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">sanitize_path<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">dest<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">rootdir<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">int<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">depth<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">start<pos:position pos:line="3" pos:column="20"/></name></decl>, <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="23">sanp<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rlen<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">dest<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">!=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">p<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">plen<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><call><name pos:line="7" pos:column="28">strlen<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">p<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">p<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <literal type="char" pos:line="8" pos:column="27">'/'<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
			<if pos:line="9" pos:column="25">if <condition pos:line="9" pos:column="28">(<expr><operator pos:line="9" pos:column="29">!<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">rootdir<pos:position pos:line="9" pos:column="37"/></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="33">rootdir<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">=<pos:position pos:line="10" pos:column="42"/></operator> <call><name pos:line="10" pos:column="43">lp_path<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">(<argument><expr><name pos:line="10" pos:column="51">module_id<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="11" pos:column="25">rlen<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <call><name pos:line="11" pos:column="32">strlen<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">rootdir<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="12" pos:column="25">depth<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">=<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="13" pos:column="25">p<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">++<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">dest<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">rlen<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">+<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">plen<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">+<pos:position pos:line="16" pos:column="42"/></operator> <literal type="number" pos:line="16" pos:column="43">1<pos:position pos:line="16" pos:column="44"/></literal> <operator pos:line="16" pos:column="45">&gt;=<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="48">MAXPATHLEN<pos:position pos:line="16" pos:column="58"/></name></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59">
				<block type="pseudo"><return pos:line="17" pos:column="33">return <expr><name pos:line="17" pos:column="40">NULL<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></return></block></then></if>
		}<pos:position pos:line="18" pos:column="18"/></block></then> <elseif pos:line="18" pos:column="19">else <if pos:line="18" pos:column="24">if <condition pos:line="18" pos:column="27">(<expr><operator pos:line="18" pos:column="28">!<pos:position pos:line="18" pos:column="29"/></operator><operator pos:line="18" pos:column="29">(<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">dest<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <call><name pos:line="18" pos:column="37">new_array<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">char<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">rlen<pos:position pos:line="18" pos:column="57"/></name> <operator pos:line="18" pos:column="58">+<pos:position pos:line="18" pos:column="59"/></operator> <name pos:line="18" pos:column="60">plen<pos:position pos:line="18" pos:column="64"/></name> <operator pos:line="18" pos:column="65">+<pos:position pos:line="18" pos:column="66"/></operator> <literal type="number" pos:line="18" pos:column="67">1<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call><operator pos:line="18" pos:column="69">)<pos:position pos:line="18" pos:column="70"/></operator></expr>)<pos:position pos:line="18" pos:column="71"/></condition><then pos:line="18" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">out_of_memory<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><literal type="string" pos:line="19" pos:column="39">"sanitize_path"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">rlen<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26"> <block pos:line="20" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">memcpy<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">dest<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">rootdir<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">rlen<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">rlen<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">&gt;<pos:position pos:line="22" pos:column="38"/></operator> <literal type="number" pos:line="22" pos:column="36">1<pos:position pos:line="22" pos:column="37"/></literal></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="33">dest<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><name pos:line="23" pos:column="38">rlen<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">++<pos:position pos:line="23" pos:column="44"/></operator></expr>]<pos:position pos:line="23" pos:column="45"/></index></name> <operator pos:line="23" pos:column="46">=<pos:position pos:line="23" pos:column="47"/></operator> <literal type="char" pos:line="23" pos:column="48">'/'<pos:position pos:line="23" pos:column="51"/></literal></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt></block></then></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="27" pos:column="9">start<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">sanp<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">dest<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">+<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">rlen<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
	<while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><operator pos:line="28" pos:column="16">*<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">p<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">!=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="char" pos:line="28" pos:column="22">'\0'<pos:position pos:line="28" pos:column="26"/></literal></expr>)<pos:position pos:line="28" pos:column="27"/></condition> <block pos:line="28" pos:column="28">{
		<comment type="block" pos:line="29" pos:column="17">/* discard leading or extra slashes */</comment>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">p<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">==<pos:position pos:line="30" pos:column="26"/></operator> <literal type="char" pos:line="30" pos:column="27">'/'<pos:position pos:line="30" pos:column="30"/></literal></expr>)<pos:position pos:line="30" pos:column="31"/></condition><then pos:line="30" pos:column="31"> <block pos:line="30" pos:column="32">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">p<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">++<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
			<continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="34" pos:column="17">/* this loop iterates once per filename component in p.
		 * both p (and sanp if the original had a slash) should
		 * always be left pointing after a slash
		 */</comment>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">*<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">p<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">==<pos:position pos:line="38" pos:column="26"/></operator> <literal type="char" pos:line="38" pos:column="27">'.'<pos:position pos:line="38" pos:column="30"/></literal> <operator pos:line="38" pos:column="31">&amp;&amp;<pos:position pos:line="38" pos:column="41"/></operator> <operator pos:line="38" pos:column="34">(<pos:position pos:line="38" pos:column="35"/></operator><name><name pos:line="38" pos:column="35">p<pos:position pos:line="38" pos:column="36"/></name><index pos:line="38" pos:column="36">[<expr><literal type="number" pos:line="38" pos:column="37">1<pos:position pos:line="38" pos:column="38"/></literal></expr>]<pos:position pos:line="38" pos:column="39"/></index></name> <operator pos:line="38" pos:column="40">==<pos:position pos:line="38" pos:column="42"/></operator> <literal type="char" pos:line="38" pos:column="43">'/'<pos:position pos:line="38" pos:column="46"/></literal> <operator pos:line="38" pos:column="47">||<pos:position pos:line="38" pos:column="49"/></operator> <name><name pos:line="38" pos:column="50">p<pos:position pos:line="38" pos:column="51"/></name><index pos:line="38" pos:column="51">[<expr><literal type="number" pos:line="38" pos:column="52">1<pos:position pos:line="38" pos:column="53"/></literal></expr>]<pos:position pos:line="38" pos:column="54"/></index></name> <operator pos:line="38" pos:column="55">==<pos:position pos:line="38" pos:column="57"/></operator> <literal type="char" pos:line="38" pos:column="58">'\0'<pos:position pos:line="38" pos:column="62"/></literal><operator pos:line="38" pos:column="62">)<pos:position pos:line="38" pos:column="63"/></operator></expr>)<pos:position pos:line="38" pos:column="64"/></condition><then pos:line="38" pos:column="64"> <block pos:line="38" pos:column="65">{
			<comment type="block" pos:line="39" pos:column="25">/* skip "." component */</comment>
			<expr_stmt><expr><name pos:line="40" pos:column="25">p<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">++<pos:position pos:line="40" pos:column="28"/></operator></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
			<continue pos:line="41" pos:column="25">continue;<pos:position pos:line="41" pos:column="34"/></continue>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">*<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">p<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">==<pos:position pos:line="43" pos:column="26"/></operator> <literal type="char" pos:line="43" pos:column="27">'.'<pos:position pos:line="43" pos:column="30"/></literal> <operator pos:line="43" pos:column="31">&amp;&amp;<pos:position pos:line="43" pos:column="41"/></operator> <name><name pos:line="43" pos:column="34">p<pos:position pos:line="43" pos:column="35"/></name><index pos:line="43" pos:column="35">[<expr><literal type="number" pos:line="43" pos:column="36">1<pos:position pos:line="43" pos:column="37"/></literal></expr>]<pos:position pos:line="43" pos:column="38"/></index></name> <operator pos:line="43" pos:column="39">==<pos:position pos:line="43" pos:column="41"/></operator> <literal type="char" pos:line="43" pos:column="42">'.'<pos:position pos:line="43" pos:column="45"/></literal> <operator pos:line="43" pos:column="46">&amp;&amp;<pos:position pos:line="43" pos:column="56"/></operator> <operator pos:line="43" pos:column="49">(<pos:position pos:line="43" pos:column="50"/></operator><name><name pos:line="43" pos:column="50">p<pos:position pos:line="43" pos:column="51"/></name><index pos:line="43" pos:column="51">[<expr><literal type="number" pos:line="43" pos:column="52">2<pos:position pos:line="43" pos:column="53"/></literal></expr>]<pos:position pos:line="43" pos:column="54"/></index></name> <operator pos:line="43" pos:column="55">==<pos:position pos:line="43" pos:column="57"/></operator> <literal type="char" pos:line="43" pos:column="58">'/'<pos:position pos:line="43" pos:column="61"/></literal> <operator pos:line="43" pos:column="62">||<pos:position pos:line="43" pos:column="64"/></operator> <name><name pos:line="43" pos:column="65">p<pos:position pos:line="43" pos:column="66"/></name><index pos:line="43" pos:column="66">[<expr><literal type="number" pos:line="43" pos:column="67">2<pos:position pos:line="43" pos:column="68"/></literal></expr>]<pos:position pos:line="43" pos:column="69"/></index></name> <operator pos:line="43" pos:column="70">==<pos:position pos:line="43" pos:column="72"/></operator> <literal type="char" pos:line="43" pos:column="73">'\0'<pos:position pos:line="43" pos:column="77"/></literal><operator pos:line="43" pos:column="77">)<pos:position pos:line="43" pos:column="78"/></operator></expr>)<pos:position pos:line="43" pos:column="79"/></condition><then pos:line="43" pos:column="79"> <block pos:line="43" pos:column="80">{
			<comment type="block" pos:line="44" pos:column="25">/* ".." component followed by slash or end */</comment>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">depth<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">&lt;=<pos:position pos:line="45" pos:column="40"/></operator> <literal type="number" pos:line="45" pos:column="38">0<pos:position pos:line="45" pos:column="39"/></literal> <operator pos:line="45" pos:column="40">||<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="43">sanp<pos:position pos:line="45" pos:column="47"/></name> <operator pos:line="45" pos:column="48">!=<pos:position pos:line="45" pos:column="50"/></operator> <name pos:line="45" pos:column="51">start<pos:position pos:line="45" pos:column="56"/></name></expr>)<pos:position pos:line="45" pos:column="57"/></condition><then pos:line="45" pos:column="57"> <block pos:line="45" pos:column="58">{
				<expr_stmt><expr><name pos:line="46" pos:column="33">p<pos:position pos:line="46" pos:column="34"/></name> <operator pos:line="46" pos:column="35">+=<pos:position pos:line="46" pos:column="37"/></operator> <literal type="number" pos:line="46" pos:column="38">2<pos:position pos:line="46" pos:column="39"/></literal></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
				<if pos:line="47" pos:column="33">if <condition pos:line="47" pos:column="36">(<expr><name pos:line="47" pos:column="37">sanp<pos:position pos:line="47" pos:column="41"/></name> <operator pos:line="47" pos:column="42">!=<pos:position pos:line="47" pos:column="44"/></operator> <name pos:line="47" pos:column="45">start<pos:position pos:line="47" pos:column="50"/></name></expr>)<pos:position pos:line="47" pos:column="51"/></condition><then pos:line="47" pos:column="51"> <block pos:line="47" pos:column="52">{
					<comment type="block" pos:line="48" pos:column="41">/* back up sanp one level */</comment>
					<expr_stmt><expr><operator pos:line="49" pos:column="41">--<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="43">sanp<pos:position pos:line="49" pos:column="47"/></name></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt> <comment type="block" pos:line="49" pos:column="49">/* now pointing at slash */</comment>
					<while pos:line="50" pos:column="41">while <condition pos:line="50" pos:column="47">(<expr><name pos:line="50" pos:column="48">sanp<pos:position pos:line="50" pos:column="52"/></name> <operator pos:line="50" pos:column="53">&gt;<pos:position pos:line="50" pos:column="57"/></operator> <name pos:line="50" pos:column="55">start<pos:position pos:line="50" pos:column="60"/></name> <operator pos:line="50" pos:column="61">&amp;&amp;<pos:position pos:line="50" pos:column="71"/></operator> <name><name pos:line="50" pos:column="64">sanp<pos:position pos:line="50" pos:column="68"/></name><index pos:line="50" pos:column="68">[<expr><operator pos:line="50" pos:column="69">-<pos:position pos:line="50" pos:column="70"/></operator><literal type="number" pos:line="50" pos:column="70">1<pos:position pos:line="50" pos:column="71"/></literal></expr>]<pos:position pos:line="50" pos:column="72"/></index></name> <operator pos:line="50" pos:column="73">!=<pos:position pos:line="50" pos:column="75"/></operator> <literal type="char" pos:line="50" pos:column="76">'/'<pos:position pos:line="50" pos:column="79"/></literal></expr>)<pos:position pos:line="50" pos:column="80"/></condition> <block pos:line="50" pos:column="81">{
						<comment type="block" pos:line="51" pos:column="49">/* skip back up to slash */</comment>
						<expr_stmt><expr><name pos:line="52" pos:column="49">sanp<pos:position pos:line="52" pos:column="53"/></name><operator pos:line="52" pos:column="53">--<pos:position pos:line="52" pos:column="55"/></operator></expr>;<pos:position pos:line="52" pos:column="56"/></expr_stmt>
					}<pos:position pos:line="53" pos:column="42"/></block></while>
				}<pos:position pos:line="54" pos:column="34"/></block></then></if>
				<continue pos:line="55" pos:column="33">continue;<pos:position pos:line="55" pos:column="42"/></continue>
			}<pos:position pos:line="56" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="57" pos:column="25">/* allow depth levels of .. at the beginning */</comment>
			<expr_stmt><expr><name pos:line="58" pos:column="25">depth<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">--<pos:position pos:line="58" pos:column="32"/></operator></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
			<comment type="block" pos:line="59" pos:column="25">/* move the virtual beginning to leave the .. alone */</comment>
			<expr_stmt><expr><name pos:line="60" pos:column="25">start<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">sanp<pos:position pos:line="60" pos:column="37"/></name> <operator pos:line="60" pos:column="38">+<pos:position pos:line="60" pos:column="39"/></operator> <literal type="number" pos:line="60" pos:column="40">3<pos:position pos:line="60" pos:column="41"/></literal></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="62" pos:column="17">/* copy one component through next slash */</comment>
		<while pos:line="63" pos:column="17">while <condition pos:line="63" pos:column="23">(<expr><operator pos:line="63" pos:column="24">*<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="25">p<pos:position pos:line="63" pos:column="26"/></name> <operator pos:line="63" pos:column="27">&amp;&amp;<pos:position pos:line="63" pos:column="37"/></operator> <operator pos:line="63" pos:column="30">(<pos:position pos:line="63" pos:column="31"/></operator><operator pos:line="63" pos:column="31">*<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="32">sanp<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">++<pos:position pos:line="63" pos:column="38"/></operator> <operator pos:line="63" pos:column="39">=<pos:position pos:line="63" pos:column="40"/></operator> <operator pos:line="63" pos:column="41">*<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="42">p<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">++<pos:position pos:line="63" pos:column="45"/></operator><operator pos:line="63" pos:column="45">)<pos:position pos:line="63" pos:column="46"/></operator> <operator pos:line="63" pos:column="47">!=<pos:position pos:line="63" pos:column="49"/></operator> <literal type="char" pos:line="63" pos:column="50">'/'<pos:position pos:line="63" pos:column="53"/></literal></expr>)<pos:position pos:line="63" pos:column="54"/></condition> <block pos:line="63" pos:column="55">{}<pos:position pos:line="63" pos:column="57"/></block></while>
	}<pos:position pos:line="64" pos:column="10"/></block></while>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">sanp<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">==<pos:position pos:line="65" pos:column="20"/></operator> <name pos:line="65" pos:column="21">dest<pos:position pos:line="65" pos:column="25"/></name></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26"> <block pos:line="65" pos:column="27">{
		<comment type="block" pos:line="66" pos:column="17">/* ended up with nothing, so put in "." component */</comment>
		<expr_stmt><expr><operator pos:line="67" pos:column="17">*<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">sanp<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">++<pos:position pos:line="67" pos:column="24"/></operator> <operator pos:line="67" pos:column="25">=<pos:position pos:line="67" pos:column="26"/></operator> <literal type="char" pos:line="67" pos:column="27">'.'<pos:position pos:line="67" pos:column="30"/></literal></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">sanp<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <literal type="char" pos:line="69" pos:column="17">'\0'<pos:position pos:line="69" pos:column="21"/></literal></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>

	<return pos:line="71" pos:column="9">return <expr><name pos:line="71" pos:column="16">dest<pos:position pos:line="71" pos:column="20"/></name></expr>;<pos:position pos:line="71" pos:column="21"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_362_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">set_modtime<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">fname<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">time_t<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">modtime<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">uint32<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">mod_nsec<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="69">mode_t<pos:position pos:line="1" pos:column="75"/></name></type> <name pos:line="1" pos:column="76">mode<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">switch_step<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><literal type="number" pos:line="3" pos:column="34">0<pos:position pos:line="3" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">DEBUG_GTE<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">TIME<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="29">1<pos:position pos:line="5" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="32"/></condition><then pos:line="5" pos:column="32"> <block pos:line="5" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">rprintf<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">FINFO<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"set modtime of %s to (%ld) %s"<pos:position pos:line="6" pos:column="63"/></literal></expr></argument>,
			<argument><expr><name pos:line="7" pos:column="25">fname<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="32">(<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">long<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">modtime<pos:position pos:line="7" pos:column="45"/></name></expr></argument>,
			<argument><expr><call><name pos:line="8" pos:column="25">asctime<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><call><name pos:line="8" pos:column="33">localtime<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">(<argument><expr><operator pos:line="8" pos:column="43">&amp;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="44">modtime<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<switch pos:line="11" pos:column="9">switch <condition pos:line="11" pos:column="16">(<expr><name pos:line="11" pos:column="17">switch_step<pos:position pos:line="11" pos:column="28"/></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition> <block pos:line="11" pos:column="30">{
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">HAVE_UTIMENSAT<pos:position pos:line="12" pos:column="22"/></name></cpp:ifdef>
<cpp:include pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">include<pos:position pos:line="13" pos:column="9"/></cpp:directive> <cpp:file pos:line="13" pos:column="10">"case_N.h"<pos:position pos:line="13" pos:column="20"/></cpp:file></cpp:include>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">do_utimensat<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">fname<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">modtime<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">mod_nsec<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call> <operator pos:line="14" pos:column="60">==<pos:position pos:line="14" pos:column="62"/></operator> <literal type="number" pos:line="14" pos:column="63">0<pos:position pos:line="14" pos:column="64"/></literal></expr>)<pos:position pos:line="14" pos:column="65"/></condition><then pos:line="14" pos:column="65">
			<block type="pseudo"><break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">errno<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">!=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">ENOSYS<pos:position pos:line="16" pos:column="36"/></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">-<pos:position pos:line="17" pos:column="33"/></operator><literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">switch_step<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">++<pos:position pos:line="18" pos:column="30"/></operator></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
		<comment type="block" pos:line="19" pos:column="17">/* FALLTHROUGH */</comment>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">HAVE_LUTIMES<pos:position pos:line="22" pos:column="20"/></name></cpp:ifdef>
<cpp:include pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">include<pos:position pos:line="23" pos:column="9"/></cpp:directive> <cpp:file pos:line="23" pos:column="10">"case_N.h"<pos:position pos:line="23" pos:column="20"/></cpp:file></cpp:include>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">do_lutimes<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">fname<pos:position pos:line="24" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="39">modtime<pos:position pos:line="24" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="48">mod_nsec<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call> <operator pos:line="24" pos:column="58">==<pos:position pos:line="24" pos:column="60"/></operator> <literal type="number" pos:line="24" pos:column="61">0<pos:position pos:line="24" pos:column="62"/></literal></expr>)<pos:position pos:line="24" pos:column="63"/></condition><then pos:line="24" pos:column="63">
			<block type="pseudo"><break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">errno<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">!=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">ENOSYS<pos:position pos:line="26" pos:column="36"/></name></expr>)<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37">
			<block type="pseudo"><return pos:line="27" pos:column="25">return <expr><operator pos:line="27" pos:column="32">-<pos:position pos:line="27" pos:column="33"/></operator><literal type="number" pos:line="27" pos:column="33">1<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="28" pos:column="17">switch_step<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">++<pos:position pos:line="28" pos:column="30"/></operator></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
		<comment type="block" pos:line="29" pos:column="17">/* FALLTHROUGH */</comment>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include<pos:position pos:line="32" pos:column="9"/></cpp:directive> <cpp:file pos:line="32" pos:column="10">"case_N.h"<pos:position pos:line="32" pos:column="20"/></cpp:file></cpp:include>
		<expr_stmt><expr><name pos:line="33" pos:column="17">switch_step<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">++<pos:position pos:line="33" pos:column="30"/></operator></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">preserve_times<pos:position pos:line="34" pos:column="35"/></name> <operator pos:line="34" pos:column="36">&amp;<pos:position pos:line="34" pos:column="41"/></operator> <name pos:line="34" pos:column="38">PRESERVE_LINK_TIMES<pos:position pos:line="34" pos:column="57"/></name></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58"> <block pos:line="34" pos:column="59">{
			<expr_stmt><expr><name pos:line="35" pos:column="25">preserve_times<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">&amp;=<pos:position pos:line="35" pos:column="46"/></operator> <operator pos:line="35" pos:column="43">~<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="44">PRESERVE_LINK_TIMES<pos:position pos:line="35" pos:column="63"/></name></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><call><name pos:line="36" pos:column="29">S_ISLNK<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">mode<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="43"/></condition><then pos:line="36" pos:column="43">
				<block type="pseudo"><return pos:line="37" pos:column="33">return <expr><literal type="number" pos:line="37" pos:column="40">1<pos:position pos:line="37" pos:column="41"/></literal></expr>;<pos:position pos:line="37" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="39" pos:column="17">/* FALLTHROUGH */</comment>

<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include<pos:position pos:line="41" pos:column="9"/></cpp:directive> <cpp:file pos:line="41" pos:column="10">"case_N.h"<pos:position pos:line="41" pos:column="20"/></cpp:file></cpp:include>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">HAVE_UTIMES<pos:position pos:line="42" pos:column="19"/></name></cpp:ifdef>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><call><name pos:line="43" pos:column="21">do_utimes<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">fname<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">modtime<pos:position pos:line="43" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="47">mod_nsec<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call> <operator pos:line="43" pos:column="57">==<pos:position pos:line="43" pos:column="59"/></operator> <literal type="number" pos:line="43" pos:column="60">0<pos:position pos:line="43" pos:column="61"/></literal></expr>)<pos:position pos:line="43" pos:column="62"/></condition><then pos:line="43" pos:column="62">
			<block type="pseudo"><break pos:line="44" pos:column="25">break;<pos:position pos:line="44" pos:column="31"/></break></block></then></if>
<cpp:else pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">else<pos:position pos:line="45" pos:column="6"/></cpp:directive></cpp:else>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><call><name pos:line="46" pos:column="21">do_utime<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">fname<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">modtime<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="46">mod_nsec<pos:position pos:line="46" pos:column="54"/></name></expr></argument>)<pos:position pos:line="46" pos:column="55"/></argument_list></call> <operator pos:line="46" pos:column="56">==<pos:position pos:line="46" pos:column="58"/></operator> <literal type="number" pos:line="46" pos:column="59">0<pos:position pos:line="46" pos:column="60"/></literal></expr>)<pos:position pos:line="46" pos:column="61"/></condition><then pos:line="46" pos:column="61">
			<block type="pseudo"><break pos:line="47" pos:column="25">break;<pos:position pos:line="47" pos:column="31"/></break></block></then></if>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>

		<return pos:line="50" pos:column="17">return <expr><operator pos:line="50" pos:column="24">-<pos:position pos:line="50" pos:column="25"/></operator><literal type="number" pos:line="50" pos:column="25">1<pos:position pos:line="50" pos:column="26"/></literal></expr>;<pos:position pos:line="50" pos:column="27"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></switch>

	<return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

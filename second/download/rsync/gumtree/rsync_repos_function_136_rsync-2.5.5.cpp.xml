<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_136_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">establish_proxy_connection<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">fd<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">host<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">int<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">port<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">buffer<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">1024<pos:position pos:line="3" pos:column="25"/></literal></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">cp<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">snprintf<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">buffer<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="26">sizeof<argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">buffer<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="42">"CONNECT %s:%d HTTP/1.0\r\n\r\n"<pos:position pos:line="6" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="76">host<pos:position pos:line="6" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="82">port<pos:position pos:line="6" pos:column="86"/></name></expr></argument>)<pos:position pos:line="6" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="88"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">write<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">fd<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">buffer<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="31">strlen<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">buffer<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call> <operator pos:line="7" pos:column="47">!=<pos:position pos:line="7" pos:column="49"/></operator> <operator pos:line="7" pos:column="50">(<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">int<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">)<pos:position pos:line="7" pos:column="55"/></operator> <call><name pos:line="7" pos:column="56">strlen<pos:position pos:line="7" pos:column="62"/></name><argument_list pos:line="7" pos:column="62">(<argument><expr><name pos:line="7" pos:column="63">buffer<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="71"/></condition><then pos:line="7" pos:column="71"> <block pos:line="7" pos:column="72">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">rprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FERROR<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"failed to write to proxy: %s\n"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="9" pos:column="25">strerror<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">errno<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">cp<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">buffer<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></init> <condition><expr><name pos:line="13" pos:column="27">cp<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">&lt;<pos:position pos:line="13" pos:column="34"/></operator> <operator pos:line="13" pos:column="32">&amp;<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="33">buffer<pos:position pos:line="13" pos:column="39"/></name><index pos:line="13" pos:column="39">[<expr><sizeof pos:line="13" pos:column="40">sizeof<argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">buffer<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></sizeof> <operator pos:line="13" pos:column="55">-<pos:position pos:line="13" pos:column="56"/></operator> <literal type="number" pos:line="13" pos:column="57">1<pos:position pos:line="13" pos:column="58"/></literal></expr>]<pos:position pos:line="13" pos:column="59"/></index></name></expr>;<pos:position pos:line="13" pos:column="60"/></condition> <incr><expr><name pos:line="13" pos:column="61">cp<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">++<pos:position pos:line="13" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="66"/></control> <block pos:line="13" pos:column="67">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">read<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">fd<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">cp<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="34">1<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call> <operator pos:line="14" pos:column="37">!=<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="40">1<pos:position pos:line="14" pos:column="41"/></literal></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">rprintf<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">FERROR<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="41">"failed to read from proxy: %s\n"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="16" pos:column="33">strerror<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">errno<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>
			<return pos:line="17" pos:column="25">return <expr><operator pos:line="17" pos:column="32">-<pos:position pos:line="17" pos:column="33"/></operator><literal type="number" pos:line="17" pos:column="33">1<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></return>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">*<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">cp<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">==<pos:position pos:line="19" pos:column="27"/></operator> <literal type="char" pos:line="19" pos:column="28">'\n'<pos:position pos:line="19" pos:column="32"/></literal></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33">
			<block type="pseudo"><break pos:line="20" pos:column="25">break;<pos:position pos:line="20" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">cp<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">!=<pos:position pos:line="23" pos:column="19"/></operator> <literal type="char" pos:line="23" pos:column="20">'\n'<pos:position pos:line="23" pos:column="24"/></literal></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">cp<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">++<pos:position pos:line="24" pos:column="21"/></operator></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">cp<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">--<pos:position pos:line="25" pos:column="14"/></operator> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="char" pos:line="25" pos:column="17">'\0'<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">cp<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">==<pos:position pos:line="26" pos:column="19"/></operator> <literal type="char" pos:line="26" pos:column="20">'\r'<pos:position pos:line="26" pos:column="24"/></literal></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">cp<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="char" pos:line="27" pos:column="23">'\0'<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">strncmp<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">buffer<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"HTTP/"<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="38">5<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call> <operator pos:line="28" pos:column="41">!=<pos:position pos:line="28" pos:column="43"/></operator> <literal type="number" pos:line="28" pos:column="44">0<pos:position pos:line="28" pos:column="45"/></literal></expr>)<pos:position pos:line="28" pos:column="46"/></condition><then pos:line="28" pos:column="46"> <block pos:line="28" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">rprintf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">FERROR<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="33">"bad response from proxy - %s\n"<pos:position pos:line="29" pos:column="65"/></literal></expr></argument>,
			<argument><expr><name pos:line="30" pos:column="25">buffer<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><operator pos:line="31" pos:column="24">-<pos:position pos:line="31" pos:column="25"/></operator><literal type="number" pos:line="31" pos:column="25">1<pos:position pos:line="31" pos:column="26"/></literal></expr>;<pos:position pos:line="31" pos:column="27"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">cp<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <operator pos:line="33" pos:column="19">&amp;<pos:position pos:line="33" pos:column="24"/></operator><name><name pos:line="33" pos:column="20">buffer<pos:position pos:line="33" pos:column="26"/></name><index pos:line="33" pos:column="26">[<expr><literal type="number" pos:line="33" pos:column="27">5<pos:position pos:line="33" pos:column="28"/></literal></expr>]<pos:position pos:line="33" pos:column="29"/></index></name></expr>;<pos:position pos:line="33" pos:column="30"/></init> <condition><expr><call><name pos:line="33" pos:column="31">isdigit<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><operator pos:line="33" pos:column="39">*<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="40">cp<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call> <operator pos:line="33" pos:column="44">||<pos:position pos:line="33" pos:column="46"/></operator> <operator pos:line="33" pos:column="47">(<pos:position pos:line="33" pos:column="48"/></operator><operator pos:line="33" pos:column="48">*<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="49">cp<pos:position pos:line="33" pos:column="51"/></name> <operator pos:line="33" pos:column="52">==<pos:position pos:line="33" pos:column="54"/></operator> <literal type="char" pos:line="33" pos:column="55">'.'<pos:position pos:line="33" pos:column="58"/></literal><operator pos:line="33" pos:column="58">)<pos:position pos:line="33" pos:column="59"/></operator></expr>;<pos:position pos:line="33" pos:column="60"/></condition> <incr><expr><name pos:line="33" pos:column="61">cp<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">++<pos:position pos:line="33" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="66"/></control>
		<block type="pseudo"><empty_stmt pos:line="34" pos:column="17">;<pos:position pos:line="34" pos:column="18"/></empty_stmt></block></for>
	<while pos:line="35" pos:column="9">while <condition pos:line="35" pos:column="15">(<expr><operator pos:line="35" pos:column="16">*<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">cp<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <literal type="char" pos:line="35" pos:column="23">' '<pos:position pos:line="35" pos:column="26"/></literal></expr>)<pos:position pos:line="35" pos:column="27"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="17">cp<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">++<pos:position pos:line="36" pos:column="21"/></operator></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt></block></while>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">cp<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">!=<pos:position pos:line="37" pos:column="19"/></operator> <literal type="char" pos:line="37" pos:column="20">'2'<pos:position pos:line="37" pos:column="23"/></literal></expr>)<pos:position pos:line="37" pos:column="24"/></condition><then pos:line="37" pos:column="24"> <block pos:line="37" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">rprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">FERROR<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"bad response from proxy - %s\n"<pos:position pos:line="38" pos:column="65"/></literal></expr></argument>,
			<argument><expr><name pos:line="39" pos:column="25">buffer<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">-<pos:position pos:line="40" pos:column="25"/></operator><literal type="number" pos:line="40" pos:column="25">1<pos:position pos:line="40" pos:column="26"/></literal></expr>;<pos:position pos:line="40" pos:column="27"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="42" pos:column="9">/* throw away the rest of the HTTP header */</comment>
	<while pos:line="43" pos:column="9">while <condition pos:line="43" pos:column="15">(<expr><literal type="number" pos:line="43" pos:column="16">1<pos:position pos:line="43" pos:column="17"/></literal></expr>)<pos:position pos:line="43" pos:column="18"/></condition> <block pos:line="43" pos:column="19">{
		<for pos:line="44" pos:column="17">for <control pos:line="44" pos:column="21">(<init><expr><name pos:line="44" pos:column="22">cp<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">buffer<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></init> <condition><expr><name pos:line="44" pos:column="35">cp<pos:position pos:line="44" pos:column="37"/></name> <operator pos:line="44" pos:column="38">&lt;<pos:position pos:line="44" pos:column="42"/></operator> <operator pos:line="44" pos:column="40">&amp;<pos:position pos:line="44" pos:column="45"/></operator><name><name pos:line="44" pos:column="41">buffer<pos:position pos:line="44" pos:column="47"/></name><index pos:line="44" pos:column="47">[<expr><sizeof pos:line="44" pos:column="48">sizeof<argument_list pos:line="44" pos:column="54">(<argument><expr><name pos:line="44" pos:column="55">buffer<pos:position pos:line="44" pos:column="61"/></name></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></sizeof> <operator pos:line="44" pos:column="63">-<pos:position pos:line="44" pos:column="64"/></operator> <literal type="number" pos:line="44" pos:column="65">1<pos:position pos:line="44" pos:column="66"/></literal></expr>]<pos:position pos:line="44" pos:column="67"/></index></name></expr>;<pos:position pos:line="44" pos:column="68"/></condition>
		     <incr><expr><name pos:line="45" pos:column="22">cp<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">++<pos:position pos:line="45" pos:column="26"/></operator></expr></incr>)<pos:position pos:line="45" pos:column="27"/></control> <block pos:line="45" pos:column="28">{
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><call><name pos:line="46" pos:column="29">read<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">fd<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">cp<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="42">1<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call> <operator pos:line="46" pos:column="45">!=<pos:position pos:line="46" pos:column="47"/></operator> <literal type="number" pos:line="46" pos:column="48">1<pos:position pos:line="46" pos:column="49"/></literal></expr>)<pos:position pos:line="46" pos:column="50"/></condition><then pos:line="46" pos:column="50"> <block pos:line="46" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="47" pos:column="33">rprintf<pos:position pos:line="47" pos:column="40"/></name><argument_list pos:line="47" pos:column="40">(<argument><expr><name pos:line="47" pos:column="41">FERROR<pos:position pos:line="47" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="49">"failed to read from proxy: %s\n"<pos:position pos:line="47" pos:column="82"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="48" pos:column="41">strerror<pos:position pos:line="48" pos:column="49"/></name><argument_list pos:line="48" pos:column="49">(<argument><expr><name pos:line="48" pos:column="50">errno<pos:position pos:line="48" pos:column="55"/></name></expr></argument>)<pos:position pos:line="48" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt>
				<return pos:line="49" pos:column="33">return <expr><operator pos:line="49" pos:column="40">-<pos:position pos:line="49" pos:column="41"/></operator><literal type="number" pos:line="49" pos:column="41">1<pos:position pos:line="49" pos:column="42"/></literal></expr>;<pos:position pos:line="49" pos:column="43"/></return>
			}<pos:position pos:line="50" pos:column="26"/></block></then></if>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><operator pos:line="51" pos:column="29">*<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">cp<pos:position pos:line="51" pos:column="32"/></name> <operator pos:line="51" pos:column="33">==<pos:position pos:line="51" pos:column="35"/></operator> <literal type="char" pos:line="51" pos:column="36">'\n'<pos:position pos:line="51" pos:column="40"/></literal></expr>)<pos:position pos:line="51" pos:column="41"/></condition><then pos:line="51" pos:column="41">
				<block type="pseudo"><break pos:line="52" pos:column="33">break;<pos:position pos:line="52" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="53" pos:column="18"/></block></for>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><operator pos:line="54" pos:column="21">(<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">cp<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">&gt;<pos:position pos:line="54" pos:column="29"/></operator> <name pos:line="54" pos:column="27">buffer<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">)<pos:position pos:line="54" pos:column="34"/></operator> <operator pos:line="54" pos:column="35">&amp;&amp;<pos:position pos:line="54" pos:column="45"/></operator> <operator pos:line="54" pos:column="38">(<pos:position pos:line="54" pos:column="39"/></operator><operator pos:line="54" pos:column="39">*<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">cp<pos:position pos:line="54" pos:column="42"/></name> <operator pos:line="54" pos:column="43">==<pos:position pos:line="54" pos:column="45"/></operator> <literal type="char" pos:line="54" pos:column="46">'\n'<pos:position pos:line="54" pos:column="50"/></literal><operator pos:line="54" pos:column="50">)<pos:position pos:line="54" pos:column="51"/></operator></expr>)<pos:position pos:line="54" pos:column="52"/></condition><then pos:line="54" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="25">cp<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">--<pos:position pos:line="55" pos:column="29"/></operator></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt></block></then></if>
		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">cp<pos:position pos:line="56" pos:column="24"/></name> <operator pos:line="56" pos:column="25">==<pos:position pos:line="56" pos:column="27"/></operator> <name pos:line="56" pos:column="28">buffer<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">)<pos:position pos:line="56" pos:column="35"/></operator> <operator pos:line="56" pos:column="36">&amp;&amp;<pos:position pos:line="56" pos:column="46"/></operator> <operator pos:line="56" pos:column="39">(<pos:position pos:line="56" pos:column="40"/></operator><operator pos:line="56" pos:column="40">(<pos:position pos:line="56" pos:column="41"/></operator><operator pos:line="56" pos:column="41">*<pos:position pos:line="56" pos:column="42"/></operator><name pos:line="56" pos:column="42">cp<pos:position pos:line="56" pos:column="44"/></name> <operator pos:line="56" pos:column="45">==<pos:position pos:line="56" pos:column="47"/></operator> <literal type="char" pos:line="56" pos:column="48">'\n'<pos:position pos:line="56" pos:column="52"/></literal><operator pos:line="56" pos:column="52">)<pos:position pos:line="56" pos:column="53"/></operator> <operator pos:line="56" pos:column="54">||<pos:position pos:line="56" pos:column="56"/></operator> <operator pos:line="56" pos:column="57">(<pos:position pos:line="56" pos:column="58"/></operator><operator pos:line="56" pos:column="58">*<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="59">cp<pos:position pos:line="56" pos:column="61"/></name> <operator pos:line="56" pos:column="62">==<pos:position pos:line="56" pos:column="64"/></operator> <literal type="char" pos:line="56" pos:column="65">'\r'<pos:position pos:line="56" pos:column="69"/></literal><operator pos:line="56" pos:column="69">)<pos:position pos:line="56" pos:column="70"/></operator><operator pos:line="56" pos:column="70">)<pos:position pos:line="56" pos:column="71"/></operator></expr>)<pos:position pos:line="56" pos:column="72"/></condition><then pos:line="56" pos:column="72">
			<block type="pseudo"><break pos:line="57" pos:column="25">break;<pos:position pos:line="57" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="58" pos:column="10"/></block></while>
	<return pos:line="59" pos:column="9">return <expr><literal type="number" pos:line="59" pos:column="16">0<pos:position pos:line="59" pos:column="17"/></literal></expr>;<pos:position pos:line="59" pos:column="18"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

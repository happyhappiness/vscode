<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_888_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">getaddr_info_single_addr<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">service<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,
				<parameter><decl><type><name pos:line="2" pos:column="33">uint32<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">addr<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name><name pos:line="3" pos:column="39">struct<pos:position pos:line="3" pos:column="45"/></name> <name pos:line="3" pos:column="46">addrinfo<pos:position pos:line="3" pos:column="54"/></name></name> <modifier pos:line="3" pos:column="55">*<pos:position pos:line="3" pos:column="56"/></modifier></type><name pos:line="3" pos:column="56">hints<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>,
				<parameter><decl><type><name><name pos:line="4" pos:column="33">struct<pos:position pos:line="4" pos:column="39"/></name> <name pos:line="4" pos:column="40">addrinfo<pos:position pos:line="4" pos:column="48"/></name></name> <modifier pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></modifier><modifier pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></modifier></type><name pos:line="4" pos:column="51">res<pos:position pos:line="4" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="55"/></parameter_list>
<block pos:line="5" pos:column="1">{

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">addrinfo<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">ai<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">in_addr<pos:position pos:line="8" pos:column="23"/></name></name></type> <name pos:line="8" pos:column="24">ip<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">short<pos:position pos:line="9" pos:column="23"/></name></type> <name pos:line="9" pos:column="24">port<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">service<pos:position pos:line="11" pos:column="20"/></name></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">port<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">unsigned<pos:position pos:line="12" pos:column="33"/></name> <name pos:line="12" pos:column="34">short<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">)<pos:position pos:line="12" pos:column="40"/></operator><call><name pos:line="12" pos:column="40">atoi<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">service<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">ip<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">.<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">s_addr<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">htonl<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">addr<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">ai<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">alloc_entry<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">hints<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">ip<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">port<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">ai<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
		<return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">EAI_MEMORY<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* If we're asked for the canonical name,
	 * make sure it returns correctly. */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name><name pos:line="23" pos:column="15">hints<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">ai_flags<pos:position pos:line="23" pos:column="30"/></name></name> <operator pos:line="23" pos:column="31">&amp;<pos:position pos:line="23" pos:column="36"/></operator> <name pos:line="23" pos:column="33">AI_NUMERICSERV<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">)<pos:position pos:line="23" pos:column="48"/></operator> <operator pos:line="23" pos:column="49">&amp;&amp;<pos:position pos:line="23" pos:column="59"/></operator>
			<name><name pos:line="24" pos:column="25">hints<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">ai_flags<pos:position pos:line="24" pos:column="40"/></name></name> <operator pos:line="24" pos:column="41">&amp;<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="43">AI_CANONNAME<pos:position pos:line="24" pos:column="55"/></name></expr>)<pos:position pos:line="24" pos:column="56"/></condition><then pos:line="24" pos:column="56"> <block pos:line="24" pos:column="57">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">err<pos:position pos:line="25" pos:column="24"/></name></decl>;<pos:position pos:line="25" pos:column="25"/></decl_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">addr<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">==<pos:position pos:line="26" pos:column="28"/></operator> <name pos:line="26" pos:column="29">INADDR_LOOPBACK<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">||<pos:position pos:line="26" pos:column="47"/></operator> <name pos:line="26" pos:column="48">addr<pos:position pos:line="26" pos:column="52"/></name> <operator pos:line="26" pos:column="53">==<pos:position pos:line="26" pos:column="55"/></operator> <name pos:line="26" pos:column="56">INADDR_ANY<pos:position pos:line="26" pos:column="66"/></name></expr>)<pos:position pos:line="26" pos:column="67"/></condition><then pos:line="26" pos:column="67"> <block pos:line="26" pos:column="68">{
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">ai<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">ai_canonname<pos:position pos:line="27" pos:column="41"/></name></name> <operator pos:line="27" pos:column="42">=<pos:position pos:line="27" pos:column="43"/></operator> <call><name pos:line="27" pos:column="44">get_my_canon_name<pos:position pos:line="27" pos:column="61"/></name><argument_list pos:line="27" pos:column="61">(<argument><expr><operator pos:line="27" pos:column="62">&amp;<pos:position pos:line="27" pos:column="67"/></operator><name pos:line="27" pos:column="63">err<pos:position pos:line="27" pos:column="66"/></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then> <else pos:line="28" pos:column="19">else <block pos:line="28" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">ai<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">ai_canonname<pos:position pos:line="29" pos:column="41"/></name></name> <operator pos:line="29" pos:column="42">=<pos:position pos:line="29" pos:column="43"/></operator>
			<call><name pos:line="30" pos:column="25">get_canon_name_from_addr<pos:position pos:line="30" pos:column="49"/></name><argument_list pos:line="30" pos:column="49">(<argument><expr><name pos:line="30" pos:column="50">ip<pos:position pos:line="30" pos:column="52"/></name></expr></argument>,<argument><expr><operator pos:line="30" pos:column="53">&amp;<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="54">err<pos:position pos:line="30" pos:column="57"/></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></else></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">ai<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">ai_canonname<pos:position pos:line="32" pos:column="37"/></name></name> <operator pos:line="32" pos:column="38">==<pos:position pos:line="32" pos:column="40"/></operator> <name pos:line="32" pos:column="41">NULL<pos:position pos:line="32" pos:column="45"/></name></expr>)<pos:position pos:line="32" pos:column="46"/></condition><then pos:line="32" pos:column="46"> <block pos:line="32" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">freeaddrinfo<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">ai<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
			<return pos:line="34" pos:column="25">return <expr><name pos:line="34" pos:column="32">err<pos:position pos:line="34" pos:column="35"/></name></expr>;<pos:position pos:line="34" pos:column="36"/></return>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">res<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">ai<pos:position pos:line="38" pos:column="18"/></name></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
	<return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_890.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">tls_usage<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">ret<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">F<pos:position pos:line="3" pos:column="10"/></name> <init pos:line="3" pos:column="11">= <expr><ternary><condition><expr><name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></expr> ?<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18"> <expr><name pos:line="3" pos:column="19">stderr<pos:position pos:line="3" pos:column="25"/></name></expr> <pos:position pos:line="3" pos:column="26"/></then><else pos:line="3" pos:column="26">: <expr><name pos:line="3" pos:column="28">stdout<pos:position pos:line="3" pos:column="34"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">fprintf<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><name pos:line="4" pos:column="11">F<pos:position pos:line="4" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="4" pos:column="13">"usage: "<pos:position pos:line="4" pos:column="22"/></literal> <name pos:line="4" pos:column="23">PROGRAM<pos:position pos:line="4" pos:column="30"/></name> <literal type="string" pos:line="4" pos:column="31">" [OPTIONS] FILE ...\n"<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">fprintf<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">F<pos:position pos:line="5" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="5" pos:column="13">"Trivial file listing program for portably checking rsync\n"<pos:position pos:line="5" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">fprintf<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">F<pos:position pos:line="6" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="6" pos:column="13">"\nOptions:\n"<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">fprintf<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">F<pos:position pos:line="7" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="13">" -l, --link-times            display the time on a symlink\n"<pos:position pos:line="7" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">fprintf<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">F<pos:position pos:line="8" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="8" pos:column="13">" -L, --link-owner            display the owner+group on a symlink\n"<pos:position pos:line="8" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="84"/></expr_stmt>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="9" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">fprintf<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">F<pos:position pos:line="10" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="13">" -f, --fake-super            display attributes including fake-super xattrs\n"<pos:position pos:line="10" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="94"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">fprintf<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">F<pos:position pos:line="12" pos:column="12"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="13">" -h, --help                  show this help\n"<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">exit<pos:position pos:line="13" pos:column="7"/></name><argument_list pos:line="13" pos:column="7">(<argument><expr><name pos:line="13" pos:column="8">ret<pos:position pos:line="13" pos:column="11"/></name></expr></argument>)<pos:position pos:line="13" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="13"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

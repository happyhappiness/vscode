<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_643_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">inflateSync<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">strm<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">strm<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">len<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>               <comment type="block" pos:line="4" pos:column="33">/* number of bytes to look at or looked at */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">long<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">in<pos:position pos:line="5" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="23">out<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>      <comment type="block" pos:line="5" pos:column="33">/* temporary to save total_in and total_out */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">char<pos:position pos:line="6" pos:column="18"/></name></type> <name><name pos:line="6" pos:column="19">buf<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><literal type="number" pos:line="6" pos:column="23">4<pos:position pos:line="6" pos:column="24"/></literal></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>       <comment type="block" pos:line="6" pos:column="33">/* to restore bit buffer to byte string */</comment>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">inflate_state<pos:position pos:line="7" pos:column="25"/></name></name> <name pos:line="7" pos:column="26">FAR<pos:position pos:line="7" pos:column="29"/></name> <modifier pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></modifier></type><name pos:line="7" pos:column="31">state<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* check parameters */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">strm<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">Z_NULL<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">||<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">strm<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">state<pos:position pos:line="10" pos:column="38"/></name></name> <operator pos:line="10" pos:column="39">==<pos:position pos:line="10" pos:column="41"/></operator> <name pos:line="10" pos:column="42">Z_NULL<pos:position pos:line="10" pos:column="48"/></name></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49"> <block type="pseudo"><return pos:line="10" pos:column="50">return <expr><name pos:line="10" pos:column="57">Z_STREAM_ERROR<pos:position pos:line="10" pos:column="71"/></name></expr>;<pos:position pos:line="10" pos:column="72"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="11" pos:column="5">state<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator>struct <name pos:line="11" pos:column="21">inflate_state<pos:position pos:line="11" pos:column="34"/></name> <name pos:line="11" pos:column="35">FAR<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">*<pos:position pos:line="11" pos:column="40"/></operator><operator pos:line="11" pos:column="40">)<pos:position pos:line="11" pos:column="41"/></operator><name><name pos:line="11" pos:column="41">strm<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">-&gt;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="47">state<pos:position pos:line="11" pos:column="52"/></name></name></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">strm<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">avail_in<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">==<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <name><name pos:line="12" pos:column="32">state<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">bits<pos:position pos:line="12" pos:column="43"/></name></name> <operator pos:line="12" pos:column="44">&lt;<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="46">8<pos:position pos:line="12" pos:column="47"/></literal></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48"> <block type="pseudo"><return pos:line="12" pos:column="49">return <expr><name pos:line="12" pos:column="56">Z_BUF_ERROR<pos:position pos:line="12" pos:column="67"/></name></expr>;<pos:position pos:line="12" pos:column="68"/></return></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* if first time, start search in bit buffer */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">state<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">mode<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">!=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">SYNC<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">state<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">mode<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">SYNC<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">state<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">hold<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">&lt;&lt;=<pos:position pos:line="17" pos:column="30"/></operator> <name><name pos:line="17" pos:column="25">state<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">bits<pos:position pos:line="17" pos:column="36"/></name></name> <operator pos:line="17" pos:column="37">&amp;<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="39">7<pos:position pos:line="17" pos:column="40"/></literal></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">state<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">bits<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">-=<pos:position pos:line="18" pos:column="23"/></operator> <name><name pos:line="18" pos:column="24">state<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">bits<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">&amp;<pos:position pos:line="18" pos:column="41"/></operator> <literal type="number" pos:line="18" pos:column="38">7<pos:position pos:line="18" pos:column="39"/></literal></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">len<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="number" pos:line="19" pos:column="15">0<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
        <while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><name><name pos:line="20" pos:column="16">state<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">bits<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">&gt;=<pos:position pos:line="20" pos:column="33"/></operator> <literal type="number" pos:line="20" pos:column="31">8<pos:position pos:line="20" pos:column="32"/></literal></expr>)<pos:position pos:line="20" pos:column="33"/></condition> <block pos:line="20" pos:column="34">{
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">buf<pos:position pos:line="21" pos:column="16"/></name><index pos:line="21" pos:column="16">[<expr><name pos:line="21" pos:column="17">len<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">++<pos:position pos:line="21" pos:column="22"/></operator></expr>]<pos:position pos:line="21" pos:column="23"/></index></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <call pos:line="21" pos:column="26">(<name pos:line="21" pos:column="27">unsigned<pos:position pos:line="21" pos:column="35"/></name> <name pos:line="21" pos:column="36">char<pos:position pos:line="21" pos:column="40"/></name>)<argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">state<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">hold<pos:position pos:line="21" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">state<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">hold<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">&gt;&gt;=<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="29">8<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">state<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">bits<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">-=<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="28">8<pos:position pos:line="23" pos:column="29"/></literal></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></while>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">state<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">have<pos:position pos:line="25" pos:column="20"/></name></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">syncsearch<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="21">(<pos:position pos:line="26" pos:column="22"/></operator><name><name pos:line="26" pos:column="22">state<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">have<pos:position pos:line="26" pos:column="33"/></name></name><operator pos:line="26" pos:column="33">)<pos:position pos:line="26" pos:column="34"/></operator></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">buf<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">len<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* search available input */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">len<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">syncsearch<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><operator pos:line="30" pos:column="22">&amp;<pos:position pos:line="30" pos:column="27"/></operator><operator pos:line="30" pos:column="23">(<pos:position pos:line="30" pos:column="24"/></operator><name><name pos:line="30" pos:column="24">state<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">have<pos:position pos:line="30" pos:column="35"/></name></name><operator pos:line="30" pos:column="35">)<pos:position pos:line="30" pos:column="36"/></operator></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="38">strm<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">next_in<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="53">strm<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">-&gt;<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="59">avail_in<pos:position pos:line="30" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">strm<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">avail_in<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">-=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">len<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">strm<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">-&gt;<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="11">next_in<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">+=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">len<pos:position pos:line="32" pos:column="25"/></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">strm<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">-&gt;<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="11">total_in<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">+=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">len<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* return no joy or set up to restart inflate() on a new block */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">state<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">have<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">!=<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="24">4<pos:position pos:line="36" pos:column="25"/></literal></expr>)<pos:position pos:line="36" pos:column="26"/></condition><then pos:line="36" pos:column="26"> <block type="pseudo"><return pos:line="36" pos:column="27">return <expr><name pos:line="36" pos:column="34">Z_DATA_ERROR<pos:position pos:line="36" pos:column="46"/></name></expr>;<pos:position pos:line="36" pos:column="47"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="37" pos:column="5">in<pos:position pos:line="37" pos:column="7"/></name> <operator pos:line="37" pos:column="8">=<pos:position pos:line="37" pos:column="9"/></operator> <name><name pos:line="37" pos:column="10">strm<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">total_in<pos:position pos:line="37" pos:column="24"/></name></name></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>  <expr_stmt><expr><name pos:line="37" pos:column="27">out<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <name><name pos:line="37" pos:column="33">strm<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">total_out<pos:position pos:line="37" pos:column="48"/></name></name></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">inflateReset<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">strm<pos:position pos:line="38" pos:column="22"/></name></expr></argument>)<pos:position pos:line="38" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">strm<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">-&gt;<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="11">total_in<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">in<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>  <expr_stmt><expr><name><name pos:line="39" pos:column="27">strm<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">total_out<pos:position pos:line="39" pos:column="42"/></name></name> <operator pos:line="39" pos:column="43">=<pos:position pos:line="39" pos:column="44"/></operator> <name pos:line="39" pos:column="45">out<pos:position pos:line="39" pos:column="48"/></name></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">state<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">mode<pos:position pos:line="40" pos:column="16"/></name></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">TYPE<pos:position pos:line="40" pos:column="23"/></name></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">Z_OK<pos:position pos:line="41" pos:column="16"/></name></expr>;<pos:position pos:line="41" pos:column="17"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function_decl></unit>

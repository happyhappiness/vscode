<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_185_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write_ndx<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="23">int32<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">ndx<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int32<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">prev_positive<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><operator pos:line="3" pos:column="38">-<pos:position pos:line="3" pos:column="39"/></operator><literal type="number" pos:line="3" pos:column="39">1<pos:position pos:line="3" pos:column="40"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="42">prev_negative<pos:position pos:line="3" pos:column="55"/></name> <init pos:line="3" pos:column="56">= <expr><literal type="number" pos:line="3" pos:column="58">1<pos:position pos:line="3" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int32<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">diff<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">cnt<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">b<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">6<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">protocol_version<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">&lt;<pos:position pos:line="7" pos:column="34"/></operator> <literal type="number" pos:line="7" pos:column="32">30<pos:position pos:line="7" pos:column="34"/></literal> <operator pos:line="7" pos:column="35">||<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">read_batch<pos:position pos:line="7" pos:column="48"/></name></expr>)<pos:position pos:line="7" pos:column="49"/></condition><then pos:line="7" pos:column="49"> <block pos:line="7" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">write_int<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">f<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">ndx<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
		<return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="12" pos:column="9">/* Send NDX_DONE as a single-byte 0 with no side effects.  Send
	 * negative nums as a positive after sending a leading 0xFF. */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ndx<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&gt;=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">diff<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">ndx<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">-<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">prev_positive<pos:position pos:line="15" pos:column="43"/></name></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">prev_positive<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">ndx<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <elseif pos:line="17" pos:column="11">else <if pos:line="17" pos:column="16">if <condition pos:line="17" pos:column="19">(<expr><name pos:line="17" pos:column="20">ndx<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">NDX_DONE<pos:position pos:line="17" pos:column="35"/></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
		<expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">b<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">write_buf<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">f<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">b<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="33">1<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if></elseif> <else pos:line="21" pos:column="11">else <block pos:line="21" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">b<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><name pos:line="22" pos:column="19">cnt<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">++<pos:position pos:line="22" pos:column="24"/></operator></expr>]<pos:position pos:line="22" pos:column="25"/></index></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">char<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">)<pos:position pos:line="22" pos:column="34"/></operator><literal type="number" pos:line="22" pos:column="34">0xFF<pos:position pos:line="22" pos:column="38"/></literal></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">ndx<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">-<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">ndx<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">diff<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">ndx<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">-<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">prev_negative<pos:position pos:line="24" pos:column="43"/></name></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">prev_negative<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="33">ndx<pos:position pos:line="25" pos:column="36"/></name></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="28" pos:column="9">/* A diff of 1 - 253 is sent as a one-byte diff; a diff of 254 - 32767
	 * or 0 is sent as a 0xFE + a two-byte diff; otherwise we send 0xFE
	 * &amp; all 4 bytes of the (non-negative) num with the high-bit set. */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">diff<pos:position pos:line="31" pos:column="17"/></name> <argument_list type="generic" pos:line="31" pos:column="18">&lt; <argument><expr><literal type="number" pos:line="31" pos:column="20">0xFE<pos:position pos:line="31" pos:column="24"/></literal> <operator pos:line="31" pos:column="25">&amp;&amp;<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="28">diff<pos:position pos:line="31" pos:column="32"/></name></expr></argument> &gt;<pos:position pos:line="31" pos:column="37"/></argument_list></name> <literal type="number" pos:line="31" pos:column="35">0<pos:position pos:line="31" pos:column="36"/></literal></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="17">b<pos:position pos:line="32" pos:column="18"/></name><index pos:line="32" pos:column="18">[<expr><name pos:line="32" pos:column="19">cnt<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">++<pos:position pos:line="32" pos:column="24"/></operator></expr>]<pos:position pos:line="32" pos:column="25"/></index></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <operator pos:line="32" pos:column="28">(<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">char<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">)<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">diff<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt></block></then>
	<elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><name><name pos:line="33" pos:column="18">diff<pos:position pos:line="33" pos:column="22"/></name> <argument_list type="generic" pos:line="33" pos:column="23">&lt; <argument><expr><literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal> <operator pos:line="33" pos:column="27">||<pos:position pos:line="33" pos:column="29"/></operator> <name pos:line="33" pos:column="30">diff<pos:position pos:line="33" pos:column="34"/></name></expr></argument> &gt;<pos:position pos:line="33" pos:column="39"/></argument_list></name> <literal type="number" pos:line="33" pos:column="37">0x7FFF<pos:position pos:line="33" pos:column="43"/></literal></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="34" pos:column="17">b<pos:position pos:line="34" pos:column="18"/></name><index pos:line="34" pos:column="18">[<expr><name pos:line="34" pos:column="19">cnt<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">++<pos:position pos:line="34" pos:column="24"/></operator></expr>]<pos:position pos:line="34" pos:column="25"/></index></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <operator pos:line="34" pos:column="28">(<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="29">char<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">)<pos:position pos:line="34" pos:column="34"/></operator><literal type="number" pos:line="34" pos:column="34">0xFE<pos:position pos:line="34" pos:column="38"/></literal></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="35" pos:column="17">b<pos:position pos:line="35" pos:column="18"/></name><index pos:line="35" pos:column="18">[<expr><name pos:line="35" pos:column="19">cnt<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">++<pos:position pos:line="35" pos:column="24"/></operator></expr>]<pos:position pos:line="35" pos:column="25"/></index></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <call pos:line="35" pos:column="28">(<name pos:line="35" pos:column="29">char<pos:position pos:line="35" pos:column="33"/></name>)<argument_list pos:line="35" pos:column="34">(<argument><expr><operator pos:line="35" pos:column="35">(<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">ndx<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">&gt;&gt;<pos:position pos:line="35" pos:column="45"/></operator> <literal type="number" pos:line="35" pos:column="43">24<pos:position pos:line="35" pos:column="45"/></literal><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator> <operator pos:line="35" pos:column="47">|<pos:position pos:line="35" pos:column="48"/></operator> <literal type="number" pos:line="35" pos:column="49">0x80<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">b<pos:position pos:line="36" pos:column="18"/></name><index pos:line="36" pos:column="18">[<expr><name pos:line="36" pos:column="19">cnt<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">++<pos:position pos:line="36" pos:column="24"/></operator></expr>]<pos:position pos:line="36" pos:column="25"/></index></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <operator pos:line="36" pos:column="28">(<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">char<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">)<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="34">ndx<pos:position pos:line="36" pos:column="37"/></name></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">b<pos:position pos:line="37" pos:column="18"/></name><index pos:line="37" pos:column="18">[<expr><name pos:line="37" pos:column="19">cnt<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">++<pos:position pos:line="37" pos:column="24"/></operator></expr>]<pos:position pos:line="37" pos:column="25"/></index></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <call pos:line="37" pos:column="28">(<name pos:line="37" pos:column="29">char<pos:position pos:line="37" pos:column="33"/></name>)<argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">ndx<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">&gt;&gt;<pos:position pos:line="37" pos:column="44"/></operator> <literal type="number" pos:line="37" pos:column="42">8<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="38" pos:column="17">b<pos:position pos:line="38" pos:column="18"/></name><index pos:line="38" pos:column="18">[<expr><name pos:line="38" pos:column="19">cnt<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">++<pos:position pos:line="38" pos:column="24"/></operator></expr>]<pos:position pos:line="38" pos:column="25"/></index></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <call pos:line="38" pos:column="28">(<name pos:line="38" pos:column="29">char<pos:position pos:line="38" pos:column="33"/></name>)<argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">ndx<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">&gt;&gt;<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="42">16<pos:position pos:line="38" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif> <else pos:line="39" pos:column="11">else <block pos:line="39" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="40" pos:column="17">b<pos:position pos:line="40" pos:column="18"/></name><index pos:line="40" pos:column="18">[<expr><name pos:line="40" pos:column="19">cnt<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">++<pos:position pos:line="40" pos:column="24"/></operator></expr>]<pos:position pos:line="40" pos:column="25"/></index></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <operator pos:line="40" pos:column="28">(<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="29">char<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">)<pos:position pos:line="40" pos:column="34"/></operator><literal type="number" pos:line="40" pos:column="34">0xFE<pos:position pos:line="40" pos:column="38"/></literal></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">b<pos:position pos:line="41" pos:column="18"/></name><index pos:line="41" pos:column="18">[<expr><name pos:line="41" pos:column="19">cnt<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">++<pos:position pos:line="41" pos:column="24"/></operator></expr>]<pos:position pos:line="41" pos:column="25"/></index></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <call pos:line="41" pos:column="28">(<name pos:line="41" pos:column="29">char<pos:position pos:line="41" pos:column="33"/></name>)<argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">diff<pos:position pos:line="41" pos:column="39"/></name> <operator pos:line="41" pos:column="40">&gt;&gt;<pos:position pos:line="41" pos:column="45"/></operator> <literal type="number" pos:line="41" pos:column="43">8<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">b<pos:position pos:line="42" pos:column="18"/></name><index pos:line="42" pos:column="18">[<expr><name pos:line="42" pos:column="19">cnt<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">++<pos:position pos:line="42" pos:column="24"/></operator></expr>]<pos:position pos:line="42" pos:column="25"/></index></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <operator pos:line="42" pos:column="28">(<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">char<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">)<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="34">diff<pos:position pos:line="42" pos:column="38"/></name></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">write_buf<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">f<pos:position pos:line="44" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="22">b<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="25">cnt<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

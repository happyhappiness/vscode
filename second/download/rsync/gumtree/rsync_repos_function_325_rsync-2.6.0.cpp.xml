<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_325_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_refuse_options<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ref<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">opt<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">len<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">name<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></init> <condition><expr><name><name pos:line="7" pos:column="19">long_options<pos:position pos:line="7" pos:column="31"/></name><index pos:line="7" pos:column="31">[<expr><name pos:line="7" pos:column="32">i<pos:position pos:line="7" pos:column="33"/></name></expr>]<pos:position pos:line="7" pos:column="34"/></index></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">longName<pos:position pos:line="7" pos:column="43"/></name></expr>;<pos:position pos:line="7" pos:column="44"/></condition> <incr><expr><name pos:line="7" pos:column="45">i<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">++<pos:position pos:line="7" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="49"/></control> <block pos:line="7" pos:column="50">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name><name pos:line="8" pos:column="21">long_options<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">i<pos:position pos:line="8" pos:column="35"/></name></expr>]<pos:position pos:line="8" pos:column="36"/></index></name><operator pos:line="8" pos:column="36">.<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">val<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">==<pos:position pos:line="8" pos:column="43"/></operator> <name pos:line="8" pos:column="44">opt<pos:position pos:line="8" pos:column="47"/></name></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <block type="pseudo"><break pos:line="8" pos:column="49">break;<pos:position pos:line="8" pos:column="55"/></break></block></then></if>
	}<pos:position pos:line="9" pos:column="10"/></block></for>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">long_options<pos:position pos:line="11" pos:column="26"/></name><index pos:line="11" pos:column="26">[<expr><name pos:line="11" pos:column="27">i<pos:position pos:line="11" pos:column="28"/></name></expr>]<pos:position pos:line="11" pos:column="29"/></index></name><operator pos:line="11" pos:column="29">.<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">longName<pos:position pos:line="11" pos:column="38"/></name></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block type="pseudo"><return pos:line="11" pos:column="40">return <expr><literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr>;<pos:position pos:line="11" pos:column="49"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">name<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name><name pos:line="13" pos:column="16">long_options<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><name pos:line="13" pos:column="29">i<pos:position pos:line="13" pos:column="30"/></name></expr>]<pos:position pos:line="13" pos:column="31"/></index></name><operator pos:line="13" pos:column="31">.<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">longName<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strlen<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">name<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">p<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">strstr<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">ref<pos:position pos:line="16" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="32">name<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call><operator pos:line="16" pos:column="37">)<pos:position pos:line="16" pos:column="38"/></operator></expr>)<pos:position pos:line="16" pos:column="39"/></condition> <block pos:line="16" pos:column="40">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">p<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">==<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">ref<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">||<pos:position pos:line="17" pos:column="31"/></operator> <name><name pos:line="17" pos:column="32">p<pos:position pos:line="17" pos:column="33"/></name><index pos:line="17" pos:column="33">[<expr><operator pos:line="17" pos:column="34">-<pos:position pos:line="17" pos:column="35"/></operator><literal type="number" pos:line="17" pos:column="35">1<pos:position pos:line="17" pos:column="36"/></literal></expr>]<pos:position pos:line="17" pos:column="37"/></index></name><operator pos:line="17" pos:column="37">==<pos:position pos:line="17" pos:column="39"/></operator><literal type="char" pos:line="17" pos:column="39">' '<pos:position pos:line="17" pos:column="42"/></literal><operator pos:line="17" pos:column="42">)<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="44">&amp;&amp;<pos:position pos:line="17" pos:column="54"/></operator>
		    <operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name><name pos:line="18" pos:column="22">p<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><name pos:line="18" pos:column="24">len<pos:position pos:line="18" pos:column="27"/></name></expr>]<pos:position pos:line="18" pos:column="28"/></index></name> <operator pos:line="18" pos:column="29">==<pos:position pos:line="18" pos:column="31"/></operator> <literal type="char" pos:line="18" pos:column="32">' '<pos:position pos:line="18" pos:column="35"/></literal> <operator pos:line="18" pos:column="36">||<pos:position pos:line="18" pos:column="38"/></operator> <name><name pos:line="18" pos:column="39">p<pos:position pos:line="18" pos:column="40"/></name><index pos:line="18" pos:column="40">[<expr><name pos:line="18" pos:column="41">len<pos:position pos:line="18" pos:column="44"/></name></expr>]<pos:position pos:line="18" pos:column="45"/></index></name> <operator pos:line="18" pos:column="46">==<pos:position pos:line="18" pos:column="48"/></operator> <literal type="number" pos:line="18" pos:column="49">0<pos:position pos:line="18" pos:column="50"/></literal><operator pos:line="18" pos:column="50">)<pos:position pos:line="18" pos:column="51"/></operator></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52"> <block pos:line="18" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">snprintf<pos:position pos:line="19" pos:column="33"/></name><argument_list pos:line="19" pos:column="33">(<argument><expr><name pos:line="19" pos:column="34">err_buf<pos:position pos:line="19" pos:column="41"/></name></expr></argument>,<argument><expr><sizeof pos:line="19" pos:column="42">sizeof<argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">err_buf<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></sizeof></expr></argument>,
				 <argument><expr><literal type="string" pos:line="20" pos:column="34">"The '%s' option is not supported by this server\n"<pos:position pos:line="20" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="87">name<pos:position pos:line="20" pos:column="91"/></name></expr></argument>)<pos:position pos:line="20" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="93"/></expr_stmt>
			<return pos:line="21" pos:column="25">return <expr><literal type="number" pos:line="21" pos:column="32">1<pos:position pos:line="21" pos:column="33"/></literal></expr>;<pos:position pos:line="21" pos:column="34"/></return>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">ref<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">+=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">len<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>
	<return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_86_rsync-2.6.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">msg2genr_flush<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">flush_it_all<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">written<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><literal type="number" pos:line="3" pos:column="30">0<pos:position pos:line="3" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">timeval<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">tv<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">fd_set<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">fds<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">msg_fd_out<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return></block></then></if>

	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name><name pos:line="10" pos:column="16">msg2genr<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">head<pos:position pos:line="10" pos:column="29"/></name></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition> <block pos:line="10" pos:column="31">{
		<decl_stmt><decl><type><name><name pos:line="11" pos:column="17">struct<pos:position pos:line="11" pos:column="23"/></name> <name pos:line="11" pos:column="24">msg_list_item<pos:position pos:line="11" pos:column="37"/></name></name> <modifier pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></modifier></type><name pos:line="11" pos:column="39">m<pos:position pos:line="11" pos:column="40"/></name> <init pos:line="11" pos:column="41">= <expr><name><name pos:line="11" pos:column="43">msg2genr<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">.<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="52">head<pos:position pos:line="11" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="57"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">n<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><call><name pos:line="12" pos:column="25">write<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">msg_fd_out<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="43">m<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">-&gt;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="46">buf<pos:position pos:line="12" pos:column="49"/></name></name> <operator pos:line="12" pos:column="50">+<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="52">written<pos:position pos:line="12" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="61">m<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">-&gt;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="64">len<pos:position pos:line="12" pos:column="67"/></name></name> <operator pos:line="12" pos:column="68">-<pos:position pos:line="12" pos:column="69"/></operator> <name pos:line="12" pos:column="70">written<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="79"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">n<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">errno<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">==<pos:position pos:line="14" pos:column="37"/></operator> <name pos:line="14" pos:column="38">EINTR<pos:position pos:line="14" pos:column="43"/></name></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44">
				<block type="pseudo"><continue pos:line="15" pos:column="33">continue;<pos:position pos:line="15" pos:column="42"/></continue></block></then></if>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">errno<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">!=<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">EWOULDBLOCK<pos:position pos:line="16" pos:column="49"/></name> <operator pos:line="16" pos:column="50">&amp;&amp;<pos:position pos:line="16" pos:column="60"/></operator> <name pos:line="16" pos:column="53">errno<pos:position pos:line="16" pos:column="58"/></name> <operator pos:line="16" pos:column="59">!=<pos:position pos:line="16" pos:column="61"/></operator> <name pos:line="16" pos:column="62">EAGAIN<pos:position pos:line="16" pos:column="68"/></name></expr>)<pos:position pos:line="16" pos:column="69"/></condition><then pos:line="16" pos:column="69">
				<block type="pseudo"><return pos:line="17" pos:column="33">return <expr><operator pos:line="17" pos:column="40">-<pos:position pos:line="17" pos:column="41"/></operator><literal type="number" pos:line="17" pos:column="41">1<pos:position pos:line="17" pos:column="42"/></literal></expr>;<pos:position pos:line="17" pos:column="43"/></return></block></then></if>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">flush_it_all<pos:position pos:line="18" pos:column="42"/></name></expr>)<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43">
				<block type="pseudo"><return pos:line="19" pos:column="33">return <expr><literal type="number" pos:line="19" pos:column="40">0<pos:position pos:line="19" pos:column="41"/></literal></expr>;<pos:position pos:line="19" pos:column="42"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">FD_ZERO<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="34">fds<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">FD_SET<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">msg_fd_out<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="44">&amp;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="45">fds<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="22" pos:column="25">tv<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">.<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">tv_sec<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">select_timeout<pos:position pos:line="22" pos:column="51"/></name></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">tv<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">tv_usec<pos:position pos:line="23" pos:column="35"/></name></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <literal type="number" pos:line="23" pos:column="38">0<pos:position pos:line="23" pos:column="39"/></literal></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><operator pos:line="24" pos:column="29">!<pos:position pos:line="24" pos:column="30"/></operator><call><name pos:line="24" pos:column="30">select<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">msg_fd_out<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">+<pos:position pos:line="24" pos:column="48"/></operator><literal type="number" pos:line="24" pos:column="48">1<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="51">NULL<pos:position pos:line="24" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="57">&amp;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="58">fds<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="63">NULL<pos:position pos:line="24" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="69">&amp;<pos:position pos:line="24" pos:column="74"/></operator><name pos:line="24" pos:column="70">tv<pos:position pos:line="24" pos:column="72"/></name></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="74"/></condition><then pos:line="24" pos:column="74">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="33">check_timeout<pos:position pos:line="25" pos:column="46"/></name><argument_list pos:line="25" pos:column="46">()<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then> <elseif pos:line="26" pos:column="19">else <if pos:line="26" pos:column="24">if <condition pos:line="26" pos:column="27">(<expr><operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">written<pos:position pos:line="26" pos:column="36"/></name> <operator pos:line="26" pos:column="37">+=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">n<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">)<pos:position pos:line="26" pos:column="42"/></operator> <operator pos:line="26" pos:column="43">==<pos:position pos:line="26" pos:column="45"/></operator> <name><name pos:line="26" pos:column="46">m<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">len<pos:position pos:line="26" pos:column="52"/></name></name></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53"> <block pos:line="26" pos:column="54">{
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">msg2genr<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">head<pos:position pos:line="27" pos:column="38"/></name></name> <operator pos:line="27" pos:column="39">=<pos:position pos:line="27" pos:column="40"/></operator> <name><name pos:line="27" pos:column="41">m<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">next<pos:position pos:line="27" pos:column="48"/></name></name></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><name><name pos:line="28" pos:column="30">msg2genr<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">head<pos:position pos:line="28" pos:column="43"/></name></name></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="33">msg2genr<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">.<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">tail<pos:position pos:line="29" pos:column="46"/></name></name> <operator pos:line="29" pos:column="47">=<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="49">NULL<pos:position pos:line="29" pos:column="53"/></name></expr>;<pos:position pos:line="29" pos:column="54"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">free<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">m<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="31" pos:column="25">written<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <literal type="number" pos:line="31" pos:column="35">0<pos:position pos:line="31" pos:column="36"/></literal></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="33" pos:column="10"/></block></while>
	<return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">1<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_767.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">io_start_buffering_in<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">iobuf_in<pos:position pos:line="3" pos:column="21"/></name></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22">
		<block type="pseudo"><return pos:line="4" pos:column="17">return;<pos:position pos:line="4" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="5" pos:column="9">iobuf_in_siz<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <literal type="number" pos:line="5" pos:column="24">2<pos:position pos:line="5" pos:column="25"/></literal> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="28">IO_BUFFER_SIZE<pos:position pos:line="5" pos:column="42"/></name></expr>;<pos:position pos:line="5" pos:column="43"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">iobuf_in<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name pos:line="6" pos:column="26">new_array<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">char<pos:position pos:line="6" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">iobuf_in_siz<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator></expr>)<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">out_of_memory<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"io_start_buffering_in"<pos:position pos:line="7" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt></block></then></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_230_rsync-2.6.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">hard_link_check<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">file_struct<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">file<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">ndx<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">fname<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">statret<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">STRUCT_STAT<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">st<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">itemizing<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
		    <parameter><decl><type><name><name pos:line="3" pos:column="21">enum<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">logcode<pos:position pos:line="3" pos:column="33"/></name></name></type> <name pos:line="3" pos:column="34">code<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">int<pos:position pos:line="3" pos:column="43"/></name></type> <name pos:line="3" pos:column="44">skip<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="5" pos:column="26"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">head<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">skip<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&amp;&amp;<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><operator pos:line="7" pos:column="22">(<pos:position pos:line="7" pos:column="23"/></operator><name><name pos:line="7" pos:column="23">file<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">flags<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">&amp;<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="37">FLAG_HLINK_EOL<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53">
		<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="17">head<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name><name pos:line="8" pos:column="24">hlink_list<pos:position pos:line="8" pos:column="34"/></name><index pos:line="8" pos:column="34">[<expr><name><name pos:line="8" pos:column="35">file<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">-&gt;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="41">F_HLINDEX<pos:position pos:line="8" pos:column="50"/></name></name></expr>]<pos:position pos:line="8" pos:column="51"/></index></name> <operator pos:line="8" pos:column="52">=<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="54">file<pos:position pos:line="8" pos:column="58"/></name><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">F_NEXT<pos:position pos:line="8" pos:column="66"/></name></name></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt></block></then>
	<else pos:line="9" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">head<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name><name pos:line="10" pos:column="24">hlink_list<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><name><name pos:line="10" pos:column="35">file<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">F_HLINDEX<pos:position pos:line="10" pos:column="50"/></name></name></expr>]<pos:position pos:line="10" pos:column="51"/></index></name></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt></block></else></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">ndx<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">!=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">head<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">file_struct<pos:position pos:line="12" pos:column="35"/></name></name> <modifier pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></modifier></type><name pos:line="12" pos:column="37">head_file<pos:position pos:line="12" pos:column="46"/></name> <init pos:line="12" pos:column="47">= <expr><call><name pos:line="12" pos:column="49">FPTR<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">(<argument><expr><name pos:line="12" pos:column="54">head<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="60"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">log_format_has_i<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&amp;&amp;<pos:position pos:line="13" pos:column="49"/></operator> <name pos:line="13" pos:column="42">verbose<pos:position pos:line="13" pos:column="49"/></name> <operator pos:line="13" pos:column="50">&gt;<pos:position pos:line="13" pos:column="54"/></operator> <literal type="number" pos:line="13" pos:column="52">1<pos:position pos:line="13" pos:column="53"/></literal></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54"> <block pos:line="13" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">rprintf<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">FINFO<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="40">"\"%s\" is a hard link\n"<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="15" pos:column="33">f_name<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">file<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">NULL<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">head_file<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">F_HLINDEX<pos:position pos:line="17" pos:column="41"/></name></name> <operator pos:line="17" pos:column="42">==<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">FINISHED_LINK<pos:position pos:line="17" pos:column="58"/></name></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59"> <block pos:line="17" pos:column="60">{
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">STRUCT_STAT<pos:position pos:line="18" pos:column="36"/></name></type> <name pos:line="18" pos:column="37">st2<pos:position pos:line="18" pos:column="40"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="42">st3<pos:position pos:line="18" pos:column="45"/></name></decl>;<pos:position pos:line="18" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="19" pos:column="25">char<pos:position pos:line="19" pos:column="29"/></name> <modifier pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></modifier></type><name pos:line="19" pos:column="31">toname<pos:position pos:line="19" pos:column="37"/></name> <init pos:line="19" pos:column="38">= <expr><call><name pos:line="19" pos:column="40">f_name<pos:position pos:line="19" pos:column="46"/></name><argument_list pos:line="19" pos:column="46">(<argument><expr><name pos:line="19" pos:column="47">head_file<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">NULL<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="64"/></decl_stmt>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><call><name pos:line="20" pos:column="29">link_stat<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">toname<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="47">&amp;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="48">st2<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="53">0<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call> <operator pos:line="20" pos:column="56">&lt;<pos:position pos:line="20" pos:column="60"/></operator> <literal type="number" pos:line="20" pos:column="58">0<pos:position pos:line="20" pos:column="59"/></literal></expr>)<pos:position pos:line="20" pos:column="60"/></condition><then pos:line="20" pos:column="60"> <block pos:line="20" pos:column="61">{
				<expr_stmt><expr><call><name pos:line="21" pos:column="33">rsyserr<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">FERROR<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">errno<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="56">"stat %s failed"<pos:position pos:line="21" pos:column="72"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="22" pos:column="41">full_fname<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><name pos:line="22" pos:column="52">toname<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
				<return pos:line="23" pos:column="33">return <expr><operator pos:line="23" pos:column="40">-<pos:position pos:line="23" pos:column="41"/></operator><literal type="number" pos:line="23" pos:column="41">1<pos:position pos:line="23" pos:column="42"/></literal></expr>;<pos:position pos:line="23" pos:column="43"/></return>
			}<pos:position pos:line="24" pos:column="26"/></block></then></if>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">statret<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">&lt;<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="39">0<pos:position pos:line="25" pos:column="40"/></literal> <operator pos:line="25" pos:column="41">&amp;&amp;<pos:position pos:line="25" pos:column="51"/></operator> <name><name pos:line="25" pos:column="44">basis_dir<pos:position pos:line="25" pos:column="53"/></name><index pos:line="25" pos:column="53">[<expr><literal type="number" pos:line="25" pos:column="54">0<pos:position pos:line="25" pos:column="55"/></literal></expr>]<pos:position pos:line="25" pos:column="56"/></index></name> <operator pos:line="25" pos:column="57">!=<pos:position pos:line="25" pos:column="59"/></operator> <name pos:line="25" pos:column="60">NULL<pos:position pos:line="25" pos:column="64"/></name></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65"> <block pos:line="25" pos:column="66">{
				<decl_stmt><decl><type><name pos:line="26" pos:column="33">char<pos:position pos:line="26" pos:column="37"/></name></type> <name><name pos:line="26" pos:column="38">cmpbuf<pos:position pos:line="26" pos:column="44"/></name><index pos:line="26" pos:column="44">[<expr><name pos:line="26" pos:column="45">MAXPATHLEN<pos:position pos:line="26" pos:column="55"/></name></expr>]<pos:position pos:line="26" pos:column="56"/></index></name></decl>;<pos:position pos:line="26" pos:column="57"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="27" pos:column="33">int<pos:position pos:line="27" pos:column="36"/></name></type> <name pos:line="27" pos:column="37">j<pos:position pos:line="27" pos:column="38"/></name> <init pos:line="27" pos:column="39">= <expr><literal type="number" pos:line="27" pos:column="41">0<pos:position pos:line="27" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="43"/></decl_stmt>
				<do pos:line="28" pos:column="33">do <block pos:line="28" pos:column="36">{
					<expr_stmt><expr><call><name pos:line="29" pos:column="41">pathjoin<pos:position pos:line="29" pos:column="49"/></name><argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">cmpbuf<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">MAXPATHLEN<pos:position pos:line="29" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="70">basis_dir<pos:position pos:line="29" pos:column="79"/></name><index pos:line="29" pos:column="79">[<expr><name pos:line="29" pos:column="80">j<pos:position pos:line="29" pos:column="81"/></name></expr>]<pos:position pos:line="29" pos:column="82"/></index></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="84">fname<pos:position pos:line="29" pos:column="89"/></name></expr></argument>)<pos:position pos:line="29" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="91"/></expr_stmt>
					<if pos:line="30" pos:column="41">if <condition pos:line="30" pos:column="44">(<expr><call><name pos:line="30" pos:column="45">link_stat<pos:position pos:line="30" pos:column="54"/></name><argument_list pos:line="30" pos:column="54">(<argument><expr><name pos:line="30" pos:column="55">cmpbuf<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="63">&amp;<pos:position pos:line="30" pos:column="68"/></operator><name pos:line="30" pos:column="64">st3<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="69">0<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call> <operator pos:line="30" pos:column="72">&lt;<pos:position pos:line="30" pos:column="76"/></operator> <literal type="number" pos:line="30" pos:column="74">0<pos:position pos:line="30" pos:column="75"/></literal></expr>)<pos:position pos:line="30" pos:column="76"/></condition><then pos:line="30" pos:column="76">
						<block type="pseudo"><continue pos:line="31" pos:column="49">continue;<pos:position pos:line="31" pos:column="58"/></continue></block></then></if>
					<if pos:line="32" pos:column="41">if <condition pos:line="32" pos:column="44">(<expr><name pos:line="32" pos:column="45">link_dest<pos:position pos:line="32" pos:column="54"/></name></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55"> <block pos:line="32" pos:column="56">{
						<if pos:line="33" pos:column="49">if <condition pos:line="33" pos:column="52">(<expr><name><name pos:line="33" pos:column="53">st2<pos:position pos:line="33" pos:column="56"/></name><operator pos:line="33" pos:column="56">.<pos:position pos:line="33" pos:column="57"/></operator><name pos:line="33" pos:column="57">st_dev<pos:position pos:line="33" pos:column="63"/></name></name> <operator pos:line="33" pos:column="64">!=<pos:position pos:line="33" pos:column="66"/></operator> <name><name pos:line="33" pos:column="67">st3<pos:position pos:line="33" pos:column="70"/></name><operator pos:line="33" pos:column="70">.<pos:position pos:line="33" pos:column="71"/></operator><name pos:line="33" pos:column="71">st_dev<pos:position pos:line="33" pos:column="77"/></name></name>
						 <operator pos:line="34" pos:column="50">||<pos:position pos:line="34" pos:column="52"/></operator> <name><name pos:line="34" pos:column="53">st2<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">.<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">st_ino<pos:position pos:line="34" pos:column="63"/></name></name> <operator pos:line="34" pos:column="64">!=<pos:position pos:line="34" pos:column="66"/></operator> <name><name pos:line="34" pos:column="67">st3<pos:position pos:line="34" pos:column="70"/></name><operator pos:line="34" pos:column="70">.<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="71">st_ino<pos:position pos:line="34" pos:column="77"/></name></name></expr>)<pos:position pos:line="34" pos:column="78"/></condition><then pos:line="34" pos:column="78">
							<block type="pseudo"><continue pos:line="35" pos:column="57">continue;<pos:position pos:line="35" pos:column="66"/></continue></block></then></if>
						<expr_stmt><expr><name pos:line="36" pos:column="49">statret<pos:position pos:line="36" pos:column="56"/></name> <operator pos:line="36" pos:column="57">=<pos:position pos:line="36" pos:column="58"/></operator> <literal type="number" pos:line="36" pos:column="59">1<pos:position pos:line="36" pos:column="60"/></literal></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
						<expr_stmt><expr><name pos:line="37" pos:column="49">st<pos:position pos:line="37" pos:column="51"/></name> <operator pos:line="37" pos:column="52">=<pos:position pos:line="37" pos:column="53"/></operator> <operator pos:line="37" pos:column="54">&amp;<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="55">st3<pos:position pos:line="37" pos:column="58"/></name></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>
						<if pos:line="38" pos:column="49">if <condition pos:line="38" pos:column="52">(<expr><name pos:line="38" pos:column="53">verbose<pos:position pos:line="38" pos:column="60"/></name> <operator pos:line="38" pos:column="61">&lt;<pos:position pos:line="38" pos:column="65"/></operator> <literal type="number" pos:line="38" pos:column="63">2<pos:position pos:line="38" pos:column="64"/></literal> <operator pos:line="38" pos:column="65">||<pos:position pos:line="38" pos:column="67"/></operator> <operator pos:line="38" pos:column="68">!<pos:position pos:line="38" pos:column="69"/></operator><name pos:line="38" pos:column="69">log_format_has_i<pos:position pos:line="38" pos:column="85"/></name></expr>)<pos:position pos:line="38" pos:column="86"/></condition><then pos:line="38" pos:column="86">
							<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="57">itemizing<pos:position pos:line="39" pos:column="66"/></name> <operator pos:line="39" pos:column="67">=<pos:position pos:line="39" pos:column="68"/></operator> <name pos:line="39" pos:column="69">code<pos:position pos:line="39" pos:column="73"/></name> <operator pos:line="39" pos:column="74">=<pos:position pos:line="39" pos:column="75"/></operator> <literal type="number" pos:line="39" pos:column="76">0<pos:position pos:line="39" pos:column="77"/></literal></expr>;<pos:position pos:line="39" pos:column="78"/></expr_stmt></block></then></if>
						<break pos:line="40" pos:column="49">break;<pos:position pos:line="40" pos:column="55"/></break>
					}<pos:position pos:line="41" pos:column="42"/></block></then></if>
					<if pos:line="42" pos:column="41">if <condition pos:line="42" pos:column="44">(<expr><operator pos:line="42" pos:column="45">!<pos:position pos:line="42" pos:column="46"/></operator><call><name pos:line="42" pos:column="46">unchanged_file<pos:position pos:line="42" pos:column="60"/></name><argument_list pos:line="42" pos:column="60">(<argument><expr><name pos:line="42" pos:column="61">cmpbuf<pos:position pos:line="42" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="69">file<pos:position pos:line="42" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="75">&amp;<pos:position pos:line="42" pos:column="80"/></operator><name pos:line="42" pos:column="76">st3<pos:position pos:line="42" pos:column="79"/></name></expr></argument>)<pos:position pos:line="42" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="81"/></condition><then pos:line="42" pos:column="81">
						<block type="pseudo"><continue pos:line="43" pos:column="49">continue;<pos:position pos:line="43" pos:column="58"/></continue></block></then></if>
					<expr_stmt><expr><name pos:line="44" pos:column="41">statret<pos:position pos:line="44" pos:column="48"/></name> <operator pos:line="44" pos:column="49">=<pos:position pos:line="44" pos:column="50"/></operator> <literal type="number" pos:line="44" pos:column="51">1<pos:position pos:line="44" pos:column="52"/></literal></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
					<expr_stmt><expr><name pos:line="45" pos:column="41">st<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">=<pos:position pos:line="45" pos:column="45"/></operator> <operator pos:line="45" pos:column="46">&amp;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="47">st3<pos:position pos:line="45" pos:column="50"/></name></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>
					<if pos:line="46" pos:column="41">if <condition pos:line="46" pos:column="44">(<expr><call><name pos:line="46" pos:column="45">unchanged_attrs<pos:position pos:line="46" pos:column="60"/></name><argument_list pos:line="46" pos:column="60">(<argument><expr><name pos:line="46" pos:column="61">file<pos:position pos:line="46" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="67">&amp;<pos:position pos:line="46" pos:column="72"/></operator><name pos:line="46" pos:column="68">st3<pos:position pos:line="46" pos:column="71"/></name></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="73"/></condition><then pos:line="46" pos:column="73">
						<block type="pseudo"><break pos:line="47" pos:column="49">break;<pos:position pos:line="47" pos:column="55"/></break></block></then></if>
				}<pos:position pos:line="48" pos:column="34"/></block> while <condition pos:line="48" pos:column="41">(<expr><name><name pos:line="48" pos:column="42">basis_dir<pos:position pos:line="48" pos:column="51"/></name><index pos:line="48" pos:column="51">[<expr><operator pos:line="48" pos:column="52">++<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="54">j<pos:position pos:line="48" pos:column="55"/></name></expr>]<pos:position pos:line="48" pos:column="56"/></index></name> <operator pos:line="48" pos:column="57">!=<pos:position pos:line="48" pos:column="59"/></operator> <name pos:line="48" pos:column="60">NULL<pos:position pos:line="48" pos:column="64"/></name></expr>)<pos:position pos:line="48" pos:column="65"/></condition>;<pos:position pos:line="48" pos:column="66"/></do>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="50" pos:column="25">maybe_hard_link<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">file<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">ndx<pos:position pos:line="50" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="52">fname<pos:position pos:line="50" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="59">statret<pos:position pos:line="50" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="68">st<pos:position pos:line="50" pos:column="70"/></name></expr></argument>,
					<argument><expr><name pos:line="51" pos:column="41">toname<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="49">&amp;<pos:position pos:line="51" pos:column="54"/></operator><name pos:line="51" pos:column="50">st2<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">itemizing<pos:position pos:line="51" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="66">code<pos:position pos:line="51" pos:column="70"/></name></expr></argument>)<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">file<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">F_HLINDEX<pos:position pos:line="52" pos:column="40"/></name></name> <operator pos:line="52" pos:column="41">=<pos:position pos:line="52" pos:column="42"/></operator> <name pos:line="52" pos:column="43">FINISHED_LINK<pos:position pos:line="52" pos:column="56"/></name></expr>;<pos:position pos:line="52" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></then> <else pos:line="53" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="25">file<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">F_HLINDEX<pos:position pos:line="54" pos:column="40"/></name></name> <operator pos:line="54" pos:column="41">=<pos:position pos:line="54" pos:column="42"/></operator> <name pos:line="54" pos:column="43">SKIPPED_LINK<pos:position pos:line="54" pos:column="55"/></name></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt></block></else></if>
		<return pos:line="55" pos:column="17">return <expr><literal type="number" pos:line="55" pos:column="24">1<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
	<return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_2_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">enum<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">delret<pos:position pos:line="1" pos:column="12"/></name></name></type> <name pos:line="1" pos:column="13">delete_item<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">fbuf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">uint16<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">mode<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">uint16<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">flags<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">enum<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">delret<pos:position pos:line="3" pos:column="20"/></name></name></type> <name pos:line="3" pos:column="21">ret<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">what<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">ok<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">DEBUG_GTE<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">DEL<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="28">2<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">rprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FINFO<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"delete_item(%s) mode=%o flags=%d\n"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>,
			<argument><expr><name pos:line="9" pos:column="25">fbuf<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">int<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">mode<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="42">(<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">int<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">)<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">flags<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">flags<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&amp;<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="21">DEL_NO_UID_WRITE<pos:position pos:line="12" pos:column="37"/></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">do_chmod<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">fbuf<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">mode<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">|<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">S_IWUSR<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">S_ISDIR<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">mode<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <operator pos:line="15" pos:column="30">!<pos:position pos:line="15" pos:column="31"/></operator><operator pos:line="15" pos:column="31">(<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">flags<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">&amp;<pos:position pos:line="15" pos:column="43"/></operator> <name pos:line="15" pos:column="40">DEL_DIR_IS_EMPTY<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">)<pos:position pos:line="15" pos:column="57"/></operator></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58"> <block pos:line="15" pos:column="59">{
		<comment type="block" pos:line="16" pos:column="17">/* This only happens on the first call to delete_item() since
		 * delete_dir_contents() always calls us w/DEL_DIR_IS_EMPTY. */</comment>
		<expr_stmt><expr><name pos:line="18" pos:column="17">ignore_perishable<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">1<pos:position pos:line="18" pos:column="38"/></literal></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
		<comment type="block" pos:line="19" pos:column="17">/* If DEL_RECURSE is not set, this just reports emptiness. */</comment>
		<expr_stmt><expr><name pos:line="20" pos:column="17">ret<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">delete_dir_contents<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">fbuf<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">flags<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">ignore_perishable<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <literal type="number" pos:line="21" pos:column="37">0<pos:position pos:line="21" pos:column="38"/></literal></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">ret<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">==<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">DR_NOT_EMPTY<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">||<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">ret<pos:position pos:line="22" pos:column="47"/></name> <operator pos:line="22" pos:column="48">==<pos:position pos:line="22" pos:column="50"/></operator> <name pos:line="22" pos:column="51">DR_AT_LIMIT<pos:position pos:line="22" pos:column="62"/></name></expr>)<pos:position pos:line="22" pos:column="63"/></condition><then pos:line="22" pos:column="63">
			<block type="pseudo"><goto pos:line="23" pos:column="25">goto <name pos:line="23" pos:column="30">check_ret<pos:position pos:line="23" pos:column="39"/></name>;<pos:position pos:line="23" pos:column="40"/></goto></block></then></if>
		<comment type="block" pos:line="24" pos:column="17">/* OK: try to delete the directory. */</comment>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">flags<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">&amp;<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="23">DEL_MAKE_ROOM<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">)<pos:position pos:line="27" pos:column="37"/></operator> <operator pos:line="27" pos:column="38">&amp;&amp;<pos:position pos:line="27" pos:column="48"/></operator> <name pos:line="27" pos:column="41">max_delete<pos:position pos:line="27" pos:column="51"/></name> <operator pos:line="27" pos:column="52">&gt;=<pos:position pos:line="27" pos:column="57"/></operator> <literal type="number" pos:line="27" pos:column="55">0<pos:position pos:line="27" pos:column="56"/></literal> <operator pos:line="27" pos:column="57">&amp;&amp;<pos:position pos:line="27" pos:column="67"/></operator> <name><name pos:line="27" pos:column="60">stats<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">.<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="66">deleted_files<pos:position pos:line="27" pos:column="79"/></name></name> <operator pos:line="27" pos:column="80">&gt;=<pos:position pos:line="27" pos:column="85"/></operator> <name pos:line="27" pos:column="83">max_delete<pos:position pos:line="27" pos:column="93"/></name></expr>)<pos:position pos:line="27" pos:column="94"/></condition><then pos:line="27" pos:column="94"> <block pos:line="27" pos:column="95">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">skipped_deletes<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">++<pos:position pos:line="28" pos:column="34"/></operator></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><name pos:line="29" pos:column="24">DR_AT_LIMIT<pos:position pos:line="29" pos:column="35"/></name></expr>;<pos:position pos:line="29" pos:column="36"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">S_ISDIR<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">mode<pos:position pos:line="32" pos:column="25"/></name></expr></argument>)<pos:position pos:line="32" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27"> <block pos:line="32" pos:column="28">{
		<expr_stmt><expr><name pos:line="33" pos:column="17">what<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <literal type="string" pos:line="33" pos:column="24">"rmdir"<pos:position pos:line="33" pos:column="31"/></literal></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">ok<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">do_rmdir<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">fbuf<pos:position pos:line="34" pos:column="35"/></name></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call> <operator pos:line="34" pos:column="37">==<pos:position pos:line="34" pos:column="39"/></operator> <literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">make_backups<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">&gt;<pos:position pos:line="36" pos:column="38"/></operator> <literal type="number" pos:line="36" pos:column="36">0<pos:position pos:line="36" pos:column="37"/></literal> <operator pos:line="36" pos:column="38">&amp;&amp;<pos:position pos:line="36" pos:column="48"/></operator> <operator pos:line="36" pos:column="41">!<pos:position pos:line="36" pos:column="42"/></operator><operator pos:line="36" pos:column="42">(<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">flags<pos:position pos:line="36" pos:column="48"/></name> <operator pos:line="36" pos:column="49">&amp;<pos:position pos:line="36" pos:column="54"/></operator> <name pos:line="36" pos:column="51">DEL_FOR_BACKUP<pos:position pos:line="36" pos:column="65"/></name><operator pos:line="36" pos:column="65">)<pos:position pos:line="36" pos:column="66"/></operator> <operator pos:line="36" pos:column="67">&amp;&amp;<pos:position pos:line="36" pos:column="77"/></operator> <operator pos:line="36" pos:column="70">(<pos:position pos:line="36" pos:column="71"/></operator><name pos:line="36" pos:column="71">backup_dir<pos:position pos:line="36" pos:column="81"/></name> <operator pos:line="36" pos:column="82">||<pos:position pos:line="36" pos:column="84"/></operator> <operator pos:line="36" pos:column="85">!<pos:position pos:line="36" pos:column="86"/></operator><call><name pos:line="36" pos:column="86">is_backup_file<pos:position pos:line="36" pos:column="100"/></name><argument_list pos:line="36" pos:column="100">(<argument><expr><name pos:line="36" pos:column="101">fbuf<pos:position pos:line="36" pos:column="105"/></name></expr></argument>)<pos:position pos:line="36" pos:column="106"/></argument_list></call><operator pos:line="36" pos:column="106">)<pos:position pos:line="36" pos:column="107"/></operator></expr>)<pos:position pos:line="36" pos:column="108"/></condition><then pos:line="36" pos:column="108"> <block pos:line="36" pos:column="109">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">what<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="string" pos:line="37" pos:column="32">"make_backup"<pos:position pos:line="37" pos:column="45"/></literal></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">ok<pos:position pos:line="38" pos:column="27"/></name> <operator pos:line="38" pos:column="28">=<pos:position pos:line="38" pos:column="29"/></operator> <call><name pos:line="38" pos:column="30">make_backup<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">fbuf<pos:position pos:line="38" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="48">True<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">ok<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">==<pos:position pos:line="39" pos:column="34"/></operator> <literal type="number" pos:line="39" pos:column="35">2<pos:position pos:line="39" pos:column="36"/></literal></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37"> <block pos:line="39" pos:column="38">{
				<expr_stmt><expr><name pos:line="40" pos:column="33">what<pos:position pos:line="40" pos:column="37"/></name> <operator pos:line="40" pos:column="38">=<pos:position pos:line="40" pos:column="39"/></operator> <literal type="string" pos:line="40" pos:column="40">"unlink"<pos:position pos:line="40" pos:column="48"/></literal></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name pos:line="41" pos:column="33">ok<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">=<pos:position pos:line="41" pos:column="37"/></operator> <call><name pos:line="41" pos:column="38">robust_unlink<pos:position pos:line="41" pos:column="51"/></name><argument_list pos:line="41" pos:column="51">(<argument><expr><name pos:line="41" pos:column="52">fbuf<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call> <operator pos:line="41" pos:column="58">==<pos:position pos:line="41" pos:column="60"/></operator> <literal type="number" pos:line="41" pos:column="61">0<pos:position pos:line="41" pos:column="62"/></literal></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="42" pos:column="26"/></block></then></if>
		}<pos:position pos:line="43" pos:column="18"/></block></then> <else pos:line="43" pos:column="19">else <block pos:line="43" pos:column="24">{
			<expr_stmt><expr><name pos:line="44" pos:column="25">what<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">=<pos:position pos:line="44" pos:column="31"/></operator> <literal type="string" pos:line="44" pos:column="32">"unlink"<pos:position pos:line="44" pos:column="40"/></literal></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">ok<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <call><name pos:line="45" pos:column="30">robust_unlink<pos:position pos:line="45" pos:column="43"/></name><argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">fbuf<pos:position pos:line="45" pos:column="48"/></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call> <operator pos:line="45" pos:column="50">==<pos:position pos:line="45" pos:column="52"/></operator> <literal type="number" pos:line="45" pos:column="53">0<pos:position pos:line="45" pos:column="54"/></literal></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></else></if>
	}<pos:position pos:line="47" pos:column="10"/></block></else></if>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">ok<pos:position pos:line="49" pos:column="15"/></name></expr>)<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16"> <block pos:line="49" pos:column="17">{
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><operator pos:line="50" pos:column="22">(<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">flags<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">&amp;<pos:position pos:line="50" pos:column="34"/></operator> <name pos:line="50" pos:column="31">DEL_MAKE_ROOM<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">)<pos:position pos:line="50" pos:column="45"/></operator></expr>)<pos:position pos:line="50" pos:column="46"/></condition><then pos:line="50" pos:column="46"> <block pos:line="50" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">log_delete<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name pos:line="51" pos:column="36">fbuf<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="42">mode<pos:position pos:line="51" pos:column="46"/></name></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">stats<pos:position pos:line="52" pos:column="30"/></name><operator pos:line="52" pos:column="30">.<pos:position pos:line="52" pos:column="31"/></operator><name pos:line="52" pos:column="31">deleted_files<pos:position pos:line="52" pos:column="44"/></name></name><operator pos:line="52" pos:column="44">++<pos:position pos:line="52" pos:column="46"/></operator></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><call><name pos:line="53" pos:column="29">S_ISREG<pos:position pos:line="53" pos:column="36"/></name><argument_list pos:line="53" pos:column="36">(<argument><expr><name pos:line="53" pos:column="37">mode<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43"> <block pos:line="53" pos:column="44">{
				<comment type="block" pos:line="54" pos:column="33">/* Nothing more to count */</comment>
			}<pos:position pos:line="55" pos:column="26"/></block></then> <elseif pos:line="55" pos:column="27">else <if pos:line="55" pos:column="32">if <condition pos:line="55" pos:column="35">(<expr><call><name pos:line="55" pos:column="36">S_ISDIR<pos:position pos:line="55" pos:column="43"/></name><argument_list pos:line="55" pos:column="43">(<argument><expr><name pos:line="55" pos:column="44">mode<pos:position pos:line="55" pos:column="48"/></name></expr></argument>)<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="50"/></condition><then pos:line="55" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="33">stats<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">.<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">deleted_dirs<pos:position pos:line="56" pos:column="51"/></name></name><operator pos:line="56" pos:column="51">++<pos:position pos:line="56" pos:column="53"/></operator></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt></block></then></if></elseif>
<cpp:ifdef pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">ifdef<pos:position pos:line="57" pos:column="7"/></cpp:directive> <name pos:line="57" pos:column="8">SUPPORT_LINKS<pos:position pos:line="57" pos:column="21"/></name></cpp:ifdef>
			<elseif pos:line="58" pos:column="25">else <if pos:line="58" pos:column="30">if <condition pos:line="58" pos:column="33">(<expr><call><name pos:line="58" pos:column="34">S_ISLNK<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><name pos:line="58" pos:column="42">mode<pos:position pos:line="58" pos:column="46"/></name></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="48"/></condition><then pos:line="58" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="33">stats<pos:position pos:line="59" pos:column="38"/></name><operator pos:line="59" pos:column="38">.<pos:position pos:line="59" pos:column="39"/></operator><name pos:line="59" pos:column="39">deleted_symlinks<pos:position pos:line="59" pos:column="55"/></name></name><operator pos:line="59" pos:column="55">++<pos:position pos:line="59" pos:column="57"/></operator></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
			<elseif pos:line="61" pos:column="25">else <if pos:line="61" pos:column="30">if <condition pos:line="61" pos:column="33">(<expr><call><name pos:line="61" pos:column="34">IS_DEVICE<pos:position pos:line="61" pos:column="43"/></name><argument_list pos:line="61" pos:column="43">(<argument><expr><name pos:line="61" pos:column="44">mode<pos:position pos:line="61" pos:column="48"/></name></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="50"/></condition><then pos:line="61" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="33">stats<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">.<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">deleted_symlinks<pos:position pos:line="62" pos:column="55"/></name></name><operator pos:line="62" pos:column="55">++<pos:position pos:line="62" pos:column="57"/></operator></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt></block></then></if></elseif>
			<else pos:line="63" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="33">stats<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">.<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="39">deleted_specials<pos:position pos:line="64" pos:column="55"/></name></name><operator pos:line="64" pos:column="55">++<pos:position pos:line="64" pos:column="57"/></operator></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt></block></else></if>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="66" pos:column="17">ret<pos:position pos:line="66" pos:column="20"/></name> <operator pos:line="66" pos:column="21">=<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="23">DR_SUCCESS<pos:position pos:line="66" pos:column="33"/></name></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="67" pos:column="10"/></block></then> <else pos:line="67" pos:column="11">else <block pos:line="67" pos:column="16">{
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><call><name pos:line="68" pos:column="21">S_ISDIR<pos:position pos:line="68" pos:column="28"/></name><argument_list pos:line="68" pos:column="28">(<argument><expr><name pos:line="68" pos:column="29">mode<pos:position pos:line="68" pos:column="33"/></name></expr></argument>)<pos:position pos:line="68" pos:column="34"/></argument_list></call> <operator pos:line="68" pos:column="35">&amp;&amp;<pos:position pos:line="68" pos:column="45"/></operator> <name pos:line="68" pos:column="38">errno<pos:position pos:line="68" pos:column="43"/></name> <operator pos:line="68" pos:column="44">==<pos:position pos:line="68" pos:column="46"/></operator> <name pos:line="68" pos:column="47">ENOTEMPTY<pos:position pos:line="68" pos:column="56"/></name></expr>)<pos:position pos:line="68" pos:column="57"/></condition><then pos:line="68" pos:column="57"> <block pos:line="68" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">rprintf<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><name pos:line="69" pos:column="33">FINFO<pos:position pos:line="69" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="40">"cannot delete non-empty directory: %s\n"<pos:position pos:line="69" pos:column="81"/></literal></expr></argument>,
				<argument><expr><name pos:line="70" pos:column="33">fbuf<pos:position pos:line="70" pos:column="37"/></name></expr></argument>)<pos:position pos:line="70" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">ret<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="31">DR_NOT_EMPTY<pos:position pos:line="71" pos:column="43"/></name></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then> <elseif pos:line="72" pos:column="19">else <if pos:line="72" pos:column="24">if <condition pos:line="72" pos:column="27">(<expr><name pos:line="72" pos:column="28">errno<pos:position pos:line="72" pos:column="33"/></name> <operator pos:line="72" pos:column="34">!=<pos:position pos:line="72" pos:column="36"/></operator> <name pos:line="72" pos:column="37">ENOENT<pos:position pos:line="72" pos:column="43"/></name></expr>)<pos:position pos:line="72" pos:column="44"/></condition><then pos:line="72" pos:column="44"> <block pos:line="72" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">rsyserr<pos:position pos:line="73" pos:column="32"/></name><argument_list pos:line="73" pos:column="32">(<argument><expr><name pos:line="73" pos:column="33">FERROR_XFER<pos:position pos:line="73" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="46">errno<pos:position pos:line="73" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="53">"delete_file: %s(%s) failed"<pos:position pos:line="73" pos:column="81"/></literal></expr></argument>,
				<argument><expr><name pos:line="74" pos:column="33">what<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="39">fbuf<pos:position pos:line="74" pos:column="43"/></name></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="75" pos:column="25">ret<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">=<pos:position pos:line="75" pos:column="30"/></operator> <name pos:line="75" pos:column="31">DR_FAILURE<pos:position pos:line="75" pos:column="41"/></name></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if></elseif> <else pos:line="76" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="25">ret<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">=<pos:position pos:line="77" pos:column="30"/></operator> <name pos:line="77" pos:column="31">DR_SUCCESS<pos:position pos:line="77" pos:column="41"/></name></expr>;<pos:position pos:line="77" pos:column="42"/></expr_stmt></block></else></if>
	}<pos:position pos:line="78" pos:column="10"/></block></else></if>

  <label><name pos:line="80" pos:column="3">check_ret<pos:position pos:line="80" pos:column="12"/></name>:<pos:position pos:line="80" pos:column="13"/></label>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">ret<pos:position pos:line="81" pos:column="16"/></name> <operator pos:line="81" pos:column="17">!=<pos:position pos:line="81" pos:column="19"/></operator> <name pos:line="81" pos:column="20">DR_SUCCESS<pos:position pos:line="81" pos:column="30"/></name> <operator pos:line="81" pos:column="31">&amp;&amp;<pos:position pos:line="81" pos:column="41"/></operator> <name pos:line="81" pos:column="34">flags<pos:position pos:line="81" pos:column="39"/></name> <operator pos:line="81" pos:column="40">&amp;<pos:position pos:line="81" pos:column="45"/></operator> <name pos:line="81" pos:column="42">DEL_MAKE_ROOM<pos:position pos:line="81" pos:column="55"/></name></expr>)<pos:position pos:line="81" pos:column="56"/></condition><then pos:line="81" pos:column="56"> <block pos:line="81" pos:column="57">{
		<decl_stmt><decl><type><specifier pos:line="82" pos:column="17">const<pos:position pos:line="82" pos:column="22"/></specifier> <name pos:line="82" pos:column="23">char<pos:position pos:line="82" pos:column="27"/></name> <modifier pos:line="82" pos:column="28">*<pos:position pos:line="82" pos:column="29"/></modifier></type><name pos:line="82" pos:column="29">desc<pos:position pos:line="82" pos:column="33"/></name></decl>;<pos:position pos:line="82" pos:column="34"/></decl_stmt>
		<switch pos:line="83" pos:column="17">switch <condition pos:line="83" pos:column="24">(<expr><name pos:line="83" pos:column="25">flags<pos:position pos:line="83" pos:column="30"/></name> <operator pos:line="83" pos:column="31">&amp;<pos:position pos:line="83" pos:column="36"/></operator> <name pos:line="83" pos:column="33">DEL_MAKE_ROOM<pos:position pos:line="83" pos:column="46"/></name></expr>)<pos:position pos:line="83" pos:column="47"/></condition> <block pos:line="83" pos:column="48">{
		<case pos:line="84" pos:column="17">case <expr><name pos:line="84" pos:column="22">DEL_FOR_FILE<pos:position pos:line="84" pos:column="34"/></name></expr>:<pos:position pos:line="84" pos:column="35"/></case> <expr_stmt><expr><name pos:line="84" pos:column="36">desc<pos:position pos:line="84" pos:column="40"/></name> <operator pos:line="84" pos:column="41">=<pos:position pos:line="84" pos:column="42"/></operator> <literal type="string" pos:line="84" pos:column="43">"regular file"<pos:position pos:line="84" pos:column="57"/></literal></expr>;<pos:position pos:line="84" pos:column="58"/></expr_stmt> <break pos:line="84" pos:column="59">break;<pos:position pos:line="84" pos:column="65"/></break>
		<case pos:line="85" pos:column="17">case <expr><name pos:line="85" pos:column="22">DEL_FOR_DIR<pos:position pos:line="85" pos:column="33"/></name></expr>:<pos:position pos:line="85" pos:column="34"/></case> <expr_stmt><expr><name pos:line="85" pos:column="35">desc<pos:position pos:line="85" pos:column="39"/></name> <operator pos:line="85" pos:column="40">=<pos:position pos:line="85" pos:column="41"/></operator> <literal type="string" pos:line="85" pos:column="42">"directory"<pos:position pos:line="85" pos:column="53"/></literal></expr>;<pos:position pos:line="85" pos:column="54"/></expr_stmt> <break pos:line="85" pos:column="55">break;<pos:position pos:line="85" pos:column="61"/></break>
		<case pos:line="86" pos:column="17">case <expr><name pos:line="86" pos:column="22">DEL_FOR_SYMLINK<pos:position pos:line="86" pos:column="37"/></name></expr>:<pos:position pos:line="86" pos:column="38"/></case> <expr_stmt><expr><name pos:line="86" pos:column="39">desc<pos:position pos:line="86" pos:column="43"/></name> <operator pos:line="86" pos:column="44">=<pos:position pos:line="86" pos:column="45"/></operator> <literal type="string" pos:line="86" pos:column="46">"symlink"<pos:position pos:line="86" pos:column="55"/></literal></expr>;<pos:position pos:line="86" pos:column="56"/></expr_stmt> <break pos:line="86" pos:column="57">break;<pos:position pos:line="86" pos:column="63"/></break>
		<case pos:line="87" pos:column="17">case <expr><name pos:line="87" pos:column="22">DEL_FOR_DEVICE<pos:position pos:line="87" pos:column="36"/></name></expr>:<pos:position pos:line="87" pos:column="37"/></case> <expr_stmt><expr><name pos:line="87" pos:column="38">desc<pos:position pos:line="87" pos:column="42"/></name> <operator pos:line="87" pos:column="43">=<pos:position pos:line="87" pos:column="44"/></operator> <literal type="string" pos:line="87" pos:column="45">"device file"<pos:position pos:line="87" pos:column="58"/></literal></expr>;<pos:position pos:line="87" pos:column="59"/></expr_stmt> <break pos:line="87" pos:column="60">break;<pos:position pos:line="87" pos:column="66"/></break>
		<case pos:line="88" pos:column="17">case <expr><name pos:line="88" pos:column="22">DEL_FOR_SPECIAL<pos:position pos:line="88" pos:column="37"/></name></expr>:<pos:position pos:line="88" pos:column="38"/></case> <expr_stmt><expr><name pos:line="88" pos:column="39">desc<pos:position pos:line="88" pos:column="43"/></name> <operator pos:line="88" pos:column="44">=<pos:position pos:line="88" pos:column="45"/></operator> <literal type="string" pos:line="88" pos:column="46">"special file"<pos:position pos:line="88" pos:column="60"/></literal></expr>;<pos:position pos:line="88" pos:column="61"/></expr_stmt> <break pos:line="88" pos:column="62">break;<pos:position pos:line="88" pos:column="68"/></break>
		<default pos:line="89" pos:column="17">default:<pos:position pos:line="89" pos:column="25"/></default> <expr_stmt><expr><call><name pos:line="89" pos:column="26">exit_cleanup<pos:position pos:line="89" pos:column="38"/></name><argument_list pos:line="89" pos:column="38">(<argument><expr><name pos:line="89" pos:column="39">RERR_UNSUPPORTED<pos:position pos:line="89" pos:column="55"/></name></expr></argument>)<pos:position pos:line="89" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="57"/></expr_stmt> <comment type="block" pos:line="89" pos:column="58">/* IMPOSSIBLE */</comment>
		}<pos:position pos:line="90" pos:column="18"/></block></switch>
		<expr_stmt><expr><call><name pos:line="91" pos:column="17">rprintf<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">FERROR_XFER<pos:position pos:line="91" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="38">"could not make way for %s %s: %s\n"<pos:position pos:line="91" pos:column="74"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="92" pos:column="25">flags<pos:position pos:line="92" pos:column="30"/></name> <operator pos:line="92" pos:column="31">&amp;<pos:position pos:line="92" pos:column="36"/></operator> <name pos:line="92" pos:column="33">DEL_FOR_BACKUP<pos:position pos:line="92" pos:column="47"/></name></expr> ?<pos:position pos:line="92" pos:column="49"/></condition><then pos:line="92" pos:column="49"> <expr><literal type="string" pos:line="92" pos:column="50">"backup"<pos:position pos:line="92" pos:column="58"/></literal></expr> <pos:position pos:line="92" pos:column="59"/></then><else pos:line="92" pos:column="59">: <expr><literal type="string" pos:line="92" pos:column="61">"new"<pos:position pos:line="92" pos:column="66"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><name pos:line="93" pos:column="25">desc<pos:position pos:line="93" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="31">fbuf<pos:position pos:line="93" pos:column="35"/></name></expr></argument>)<pos:position pos:line="93" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="94" pos:column="10"/></block></then></if>
	<return pos:line="95" pos:column="9">return <expr><name pos:line="95" pos:column="16">ret<pos:position pos:line="95" pos:column="19"/></name></expr>;<pos:position pos:line="95" pos:column="20"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

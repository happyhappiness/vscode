<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_193_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">start_write_batch<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">fd<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* Some communication has already taken place, but we don't
	 * enable batch writing until here so that we can write a
	 * canonical record of the communication even though the
	 * actual communication so far depends on whether a daemon
	 * is involved. */</comment>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">write_int<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">batch_fd<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="29">protocol_version<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">protocol_version<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&gt;=<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="33">30<pos:position pos:line="9" pos:column="35"/></literal></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">write_byte<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">batch_fd<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">compat_flags<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">write_int<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">batch_fd<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">checksum_seed<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">am_sender<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">write_batch_monitor_out<pos:position pos:line="14" pos:column="40"/></name> <operator pos:line="14" pos:column="41">=<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">fd<pos:position pos:line="14" pos:column="45"/></name></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt></block></then>
	<else pos:line="15" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">write_batch_monitor_in<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">=<pos:position pos:line="16" pos:column="41"/></operator> <name pos:line="16" pos:column="42">fd<pos:position pos:line="16" pos:column="44"/></name></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt></block></else></if>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

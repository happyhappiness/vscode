<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_644.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">glob_expand<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">base1<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argv<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">argc<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">maxargs<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">s<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name><name pos:line="3" pos:column="19">argv<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><operator pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">argc<pos:position pos:line="3" pos:column="29"/></name></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name></decl>, <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="19">q<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">base<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">base1<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">s<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">||<pos:position pos:line="7" pos:column="18"/></operator> <operator pos:line="7" pos:column="19">!<pos:position pos:line="7" pos:column="20"/></operator><operator pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">s<pos:position pos:line="7" pos:column="22"/></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block type="pseudo"><return pos:line="7" pos:column="24">return;<pos:position pos:line="7" pos:column="31"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">strncmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">s<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">base<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="30">strlen<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">base<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call> <operator pos:line="9" pos:column="44">==<pos:position pos:line="9" pos:column="46"/></operator> <literal type="number" pos:line="9" pos:column="47">0<pos:position pos:line="9" pos:column="48"/></literal></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
		<expr_stmt><expr><name pos:line="10" pos:column="17">s<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">+=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">strlen<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">base<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">s<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">strdup<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">s<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">s<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="17">out_of_memory<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><literal type="string" pos:line="14" pos:column="31">"glob_expand"<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">base<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">char<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">)<pos:position pos:line="16" pos:column="24"/></operator><call><name pos:line="16" pos:column="24">malloc<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><call><name pos:line="16" pos:column="31">strlen<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">base1<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call><operator pos:line="16" pos:column="44">+<pos:position pos:line="16" pos:column="45"/></operator><literal type="number" pos:line="16" pos:column="45">3<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">base<pos:position pos:line="17" pos:column="18"/></name></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="20">out_of_memory<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><literal type="string" pos:line="17" pos:column="34">"glob_expand"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">sprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">base<pos:position pos:line="19" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="19" pos:column="22">" %s/"<pos:position pos:line="19" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">base1<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><name pos:line="21" pos:column="9">q<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">s<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">p<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">strstr<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name pos:line="22" pos:column="28">q<pos:position pos:line="22" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="30">base<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator> <operator pos:line="22" pos:column="37">&amp;&amp;<pos:position pos:line="22" pos:column="47"/></operator> <operator pos:line="22" pos:column="40">(<pos:position pos:line="22" pos:column="41"/></operator><operator pos:line="22" pos:column="41">(<pos:position pos:line="22" pos:column="42"/></operator><operator pos:line="22" pos:column="42">*<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">argc<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">)<pos:position pos:line="22" pos:column="48"/></operator> <operator pos:line="22" pos:column="49">&lt;<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="51">maxargs<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">)<pos:position pos:line="22" pos:column="59"/></operator></expr>)<pos:position pos:line="22" pos:column="60"/></condition> <block pos:line="22" pos:column="61">{
		<comment type="block" pos:line="23" pos:column="17">/* split it at this point */</comment>
		<expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">p<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">glob_expand_one<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">q<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">argv<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">argc<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">maxargs<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">q<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">p<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">+<pos:position pos:line="26" pos:column="23"/></operator><call><name pos:line="26" pos:column="23">strlen<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">base<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></while>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">*<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">q<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">&amp;&amp;<pos:position pos:line="29" pos:column="26"/></operator> <operator pos:line="29" pos:column="19">(<pos:position pos:line="29" pos:column="20"/></operator><operator pos:line="29" pos:column="20">*<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">argc<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">&lt;<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="28">maxargs<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">)<pos:position pos:line="29" pos:column="36"/></operator></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="38">glob_expand_one<pos:position pos:line="29" pos:column="53"/></name><argument_list pos:line="29" pos:column="53">(<argument><expr><name pos:line="29" pos:column="54">q<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">argv<pos:position pos:line="29" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="63">argc<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">maxargs<pos:position pos:line="29" pos:column="76"/></name></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="78"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">free<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">s<pos:position pos:line="31" pos:column="15"/></name></expr></argument>)<pos:position pos:line="31" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">free<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name pos:line="32" pos:column="14">base<pos:position pos:line="32" pos:column="18"/></name></expr></argument>)<pos:position pos:line="32" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

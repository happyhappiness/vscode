<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_492_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_rsync_acl<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">fname<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">rsync_acl<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">racl<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">SMB_ACL_TYPE_T<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">type<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">mode_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">mode<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">SMB_ACL_T<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">sacl<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="6" pos:column="22"/></name></cpp:ifdef>
	<comment type="block" pos:line="7" pos:column="9">/* --fake-super support: load ACLs from an xattr. */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">am_root<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&lt;<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block pos:line="8" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">buf<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">size_t<pos:position pos:line="10" pos:column="23"/></name></type> <name pos:line="10" pos:column="24">len<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">cnt<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">buf<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">get_xattr_acl<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">fname<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">type<pos:position pos:line="13" pos:column="53"/></name> <operator pos:line="13" pos:column="54">==<pos:position pos:line="13" pos:column="56"/></operator> <name pos:line="13" pos:column="57">SMB_ACL_TYPE_ACCESS<pos:position pos:line="13" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="78">&amp;<pos:position pos:line="13" pos:column="83"/></operator><name pos:line="13" pos:column="79">len<pos:position pos:line="13" pos:column="82"/></name></expr></argument>)<pos:position pos:line="13" pos:column="83"/></argument_list></call><operator pos:line="13" pos:column="83">)<pos:position pos:line="13" pos:column="84"/></operator> <operator pos:line="13" pos:column="85">==<pos:position pos:line="13" pos:column="87"/></operator> <name pos:line="13" pos:column="88">NULL<pos:position pos:line="13" pos:column="92"/></name></expr>)<pos:position pos:line="13" pos:column="93"/></condition><then pos:line="13" pos:column="93">
			<block type="pseudo"><return pos:line="14" pos:column="25">return <expr><literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr>;<pos:position pos:line="14" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">cnt<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">(<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">len<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">-<pos:position pos:line="15" pos:column="29"/></operator> <literal type="number" pos:line="15" pos:column="30">4<pos:position pos:line="15" pos:column="31"/></literal><operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator><literal type="number" pos:line="15" pos:column="32">4<pos:position pos:line="15" pos:column="33"/></literal><operator pos:line="15" pos:column="33">)<pos:position pos:line="15" pos:column="34"/></operator> <operator pos:line="15" pos:column="35">/<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="37">(<pos:position pos:line="15" pos:column="38"/></operator><literal type="number" pos:line="15" pos:column="38">4<pos:position pos:line="15" pos:column="39"/></literal><operator pos:line="15" pos:column="39">+<pos:position pos:line="15" pos:column="40"/></operator><literal type="number" pos:line="15" pos:column="40">4<pos:position pos:line="15" pos:column="41"/></literal><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">len<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">&lt;<pos:position pos:line="16" pos:column="29"/></operator> <literal type="number" pos:line="16" pos:column="27">4<pos:position pos:line="16" pos:column="28"/></literal><operator pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></operator><literal type="number" pos:line="16" pos:column="29">4<pos:position pos:line="16" pos:column="30"/></literal> <operator pos:line="16" pos:column="31">||<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">len<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">!=<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="41">(<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">size_t<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">)<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">cnt<pos:position pos:line="16" pos:column="52"/></name><operator pos:line="16" pos:column="52">*<pos:position pos:line="16" pos:column="53"/></operator><operator pos:line="16" pos:column="53">(<pos:position pos:line="16" pos:column="54"/></operator><literal type="number" pos:line="16" pos:column="54">4<pos:position pos:line="16" pos:column="55"/></literal><operator pos:line="16" pos:column="55">+<pos:position pos:line="16" pos:column="56"/></operator><literal type="number" pos:line="16" pos:column="56">4<pos:position pos:line="16" pos:column="57"/></literal><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator> <operator pos:line="16" pos:column="59">+<pos:position pos:line="16" pos:column="60"/></operator> <literal type="number" pos:line="16" pos:column="61">4<pos:position pos:line="16" pos:column="62"/></literal><operator pos:line="16" pos:column="62">*<pos:position pos:line="16" pos:column="63"/></operator><literal type="number" pos:line="16" pos:column="63">4<pos:position pos:line="16" pos:column="64"/></literal></expr>)<pos:position pos:line="16" pos:column="65"/></condition><then pos:line="16" pos:column="65"> <block pos:line="16" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">free<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">buf<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
			<return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">-<pos:position pos:line="18" pos:column="33"/></operator><literal type="number" pos:line="18" pos:column="33">1<pos:position pos:line="18" pos:column="34"/></literal></expr>;<pos:position pos:line="18" pos:column="35"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="21" pos:column="17">racl<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">user_obj<pos:position pos:line="21" pos:column="31"/></name></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <call><name pos:line="21" pos:column="34">IVAL<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name pos:line="21" pos:column="39">buf<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="44">0<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">racl<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">-&gt;<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="27">user_obj<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">==<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">NO_ENTRY<pos:position pos:line="22" pos:column="47"/></name></expr>)<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="25">racl<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">user_obj<pos:position pos:line="23" pos:column="39"/></name></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <operator pos:line="23" pos:column="42">(<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">mode<pos:position pos:line="23" pos:column="47"/></name> <operator pos:line="23" pos:column="48">&gt;&gt;<pos:position pos:line="23" pos:column="53"/></operator> <literal type="number" pos:line="23" pos:column="51">6<pos:position pos:line="23" pos:column="52"/></literal><operator pos:line="23" pos:column="52">)<pos:position pos:line="23" pos:column="53"/></operator> <operator pos:line="23" pos:column="54">&amp;<pos:position pos:line="23" pos:column="59"/></operator> <literal type="number" pos:line="23" pos:column="56">7<pos:position pos:line="23" pos:column="57"/></literal></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="24" pos:column="17">racl<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">group_obj<pos:position pos:line="24" pos:column="32"/></name></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <call><name pos:line="24" pos:column="35">IVAL<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">buf<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="45">4<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">racl<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">group_obj<pos:position pos:line="25" pos:column="36"/></name></name> <operator pos:line="25" pos:column="37">==<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="40">NO_ENTRY<pos:position pos:line="25" pos:column="48"/></name></expr>)<pos:position pos:line="25" pos:column="49"/></condition><then pos:line="25" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="25">racl<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">group_obj<pos:position pos:line="26" pos:column="40"/></name></name> <operator pos:line="26" pos:column="41">=<pos:position pos:line="26" pos:column="42"/></operator> <operator pos:line="26" pos:column="43">(<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">mode<pos:position pos:line="26" pos:column="48"/></name> <operator pos:line="26" pos:column="49">&gt;&gt;<pos:position pos:line="26" pos:column="54"/></operator> <literal type="number" pos:line="26" pos:column="52">3<pos:position pos:line="26" pos:column="53"/></literal><operator pos:line="26" pos:column="53">)<pos:position pos:line="26" pos:column="54"/></operator> <operator pos:line="26" pos:column="55">&amp;<pos:position pos:line="26" pos:column="60"/></operator> <literal type="number" pos:line="26" pos:column="57">7<pos:position pos:line="26" pos:column="58"/></literal></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">racl<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">mask_obj<pos:position pos:line="27" pos:column="31"/></name></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <call><name pos:line="27" pos:column="34">IVAL<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name pos:line="27" pos:column="39">buf<pos:position pos:line="27" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="44">8<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">racl<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">other_obj<pos:position pos:line="28" pos:column="32"/></name></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <call><name pos:line="28" pos:column="35">IVAL<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name pos:line="28" pos:column="40">buf<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="45">12<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name><name pos:line="29" pos:column="21">racl<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">other_obj<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">==<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="40">NO_ENTRY<pos:position pos:line="29" pos:column="48"/></name></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="25">racl<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">other_obj<pos:position pos:line="30" pos:column="40"/></name></name> <operator pos:line="30" pos:column="41">=<pos:position pos:line="30" pos:column="42"/></operator> <name pos:line="30" pos:column="43">mode<pos:position pos:line="30" pos:column="47"/></name> <operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator> <literal type="number" pos:line="30" pos:column="50">7<pos:position pos:line="30" pos:column="51"/></literal></expr>;<pos:position pos:line="30" pos:column="52"/></expr_stmt></block></then></if>

		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">cnt<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">char<pos:position pos:line="33" pos:column="29"/></name> <modifier pos:line="33" pos:column="30">*<pos:position pos:line="33" pos:column="31"/></modifier></type><name pos:line="33" pos:column="31">bp<pos:position pos:line="33" pos:column="33"/></name> <init pos:line="33" pos:column="34">= <expr><name pos:line="33" pos:column="36">buf<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">+<pos:position pos:line="33" pos:column="41"/></operator> <literal type="number" pos:line="33" pos:column="42">4<pos:position pos:line="33" pos:column="43"/></literal><operator pos:line="33" pos:column="43">*<pos:position pos:line="33" pos:column="44"/></operator><literal type="number" pos:line="33" pos:column="44">4<pos:position pos:line="33" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="34" pos:column="25">id_access<pos:position pos:line="34" pos:column="34"/></name> <modifier pos:line="34" pos:column="35">*<pos:position pos:line="34" pos:column="36"/></modifier></type><name pos:line="34" pos:column="36">ida<pos:position pos:line="34" pos:column="39"/></name></decl>;<pos:position pos:line="34" pos:column="40"/></decl_stmt>
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><operator pos:line="35" pos:column="29">!<pos:position pos:line="35" pos:column="30"/></operator><operator pos:line="35" pos:column="30">(<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">ida<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <name><name pos:line="35" pos:column="37">racl<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">names<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">.<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="49">idas<pos:position pos:line="35" pos:column="53"/></name></name> <operator pos:line="35" pos:column="54">=<pos:position pos:line="35" pos:column="55"/></operator> <call><name pos:line="35" pos:column="56">new_array<pos:position pos:line="35" pos:column="65"/></name><argument_list pos:line="35" pos:column="65">(<argument><expr><name pos:line="35" pos:column="66">id_access<pos:position pos:line="35" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="77">cnt<pos:position pos:line="35" pos:column="80"/></name></expr></argument>)<pos:position pos:line="35" pos:column="81"/></argument_list></call><operator pos:line="35" pos:column="81">)<pos:position pos:line="35" pos:column="82"/></operator></expr>)<pos:position pos:line="35" pos:column="83"/></condition><then pos:line="35" pos:column="83">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="33">out_of_memory<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><literal type="string" pos:line="36" pos:column="47">"get_rsync_acl"<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">racl<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">names<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">.<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">count<pos:position pos:line="37" pos:column="42"/></name></name> <operator pos:line="37" pos:column="43">=<pos:position pos:line="37" pos:column="44"/></operator> <name pos:line="37" pos:column="45">cnt<pos:position pos:line="37" pos:column="48"/></name></expr>;<pos:position pos:line="37" pos:column="49"/></expr_stmt>
			<for pos:line="38" pos:column="25">for <control pos:line="38" pos:column="29">( <init pos:line="38" pos:column="31">;<pos:position pos:line="38" pos:column="32"/></init> <condition><expr><name pos:line="38" pos:column="33">cnt<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">--<pos:position pos:line="38" pos:column="38"/></operator></expr>;<pos:position pos:line="38" pos:column="39"/></condition> <incr><expr><name pos:line="38" pos:column="40">ida<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">++<pos:position pos:line="38" pos:column="45"/></operator></expr><operator pos:line="38" pos:column="45">,<pos:position pos:line="38" pos:column="46"/></operator> <expr><name pos:line="38" pos:column="47">bp<pos:position pos:line="38" pos:column="49"/></name> <operator pos:line="38" pos:column="50">+=<pos:position pos:line="38" pos:column="52"/></operator> <literal type="number" pos:line="38" pos:column="53">4<pos:position pos:line="38" pos:column="54"/></literal><operator pos:line="38" pos:column="54">+<pos:position pos:line="38" pos:column="55"/></operator><literal type="number" pos:line="38" pos:column="55">4<pos:position pos:line="38" pos:column="56"/></literal></expr></incr>)<pos:position pos:line="38" pos:column="57"/></control> <block pos:line="38" pos:column="58">{
				<expr_stmt><expr><name><name pos:line="39" pos:column="33">ida<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">id<pos:position pos:line="39" pos:column="40"/></name></name> <operator pos:line="39" pos:column="41">=<pos:position pos:line="39" pos:column="42"/></operator> <call><name pos:line="39" pos:column="43">IVAL<pos:position pos:line="39" pos:column="47"/></name><argument_list pos:line="39" pos:column="47">(<argument><expr><name pos:line="39" pos:column="48">bp<pos:position pos:line="39" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="52">0<pos:position pos:line="39" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="40" pos:column="33">ida<pos:position pos:line="40" pos:column="36"/></name><operator pos:line="40" pos:column="36">-&gt;<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="38">access<pos:position pos:line="40" pos:column="44"/></name></name> <operator pos:line="40" pos:column="45">=<pos:position pos:line="40" pos:column="46"/></operator> <call><name pos:line="40" pos:column="47">IVAL<pos:position pos:line="40" pos:column="51"/></name><argument_list pos:line="40" pos:column="51">(<argument><expr><name pos:line="40" pos:column="52">bp<pos:position pos:line="40" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="56">4<pos:position pos:line="40" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="41" pos:column="26"/></block></for>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">free<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">buf<pos:position pos:line="43" pos:column="25"/></name></expr></argument>)<pos:position pos:line="43" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">sacl<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <call><name pos:line="48" pos:column="21">sys_acl_get_file<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">fname<pos:position pos:line="48" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="45">type<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call><operator pos:line="48" pos:column="50">)<pos:position pos:line="48" pos:column="51"/></operator> <operator pos:line="48" pos:column="52">!=<pos:position pos:line="48" pos:column="54"/></operator> <literal type="number" pos:line="48" pos:column="55">0<pos:position pos:line="48" pos:column="56"/></literal></expr>)<pos:position pos:line="48" pos:column="57"/></condition><then pos:line="48" pos:column="57"> <block pos:line="48" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">BOOL<pos:position pos:line="49" pos:column="21"/></name></type> <name pos:line="49" pos:column="22">ok<pos:position pos:line="49" pos:column="24"/></name> <init pos:line="49" pos:column="25">= <expr><call><name pos:line="49" pos:column="27">unpack_smb_acl<pos:position pos:line="49" pos:column="41"/></name><argument_list pos:line="49" pos:column="41">(<argument><expr><name pos:line="49" pos:column="42">sacl<pos:position pos:line="49" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">racl<pos:position pos:line="49" pos:column="52"/></name></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="54"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="51" pos:column="17">sys_acl_free_acl<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">sacl<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">!<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">ok<pos:position pos:line="52" pos:column="24"/></name></expr>)<pos:position pos:line="52" pos:column="25"/></condition><then pos:line="52" pos:column="25"> <block pos:line="52" pos:column="26">{
			<return pos:line="53" pos:column="25">return <expr><operator pos:line="53" pos:column="32">-<pos:position pos:line="53" pos:column="33"/></operator><literal type="number" pos:line="53" pos:column="33">1<pos:position pos:line="53" pos:column="34"/></literal></expr>;<pos:position pos:line="53" pos:column="35"/></return>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></then> <elseif pos:line="55" pos:column="11">else <if pos:line="55" pos:column="16">if <condition pos:line="55" pos:column="19">(<expr><call><name pos:line="55" pos:column="20">no_acl_syscall_error<pos:position pos:line="55" pos:column="40"/></name><argument_list pos:line="55" pos:column="40">(<argument><expr><name pos:line="55" pos:column="41">errno<pos:position pos:line="55" pos:column="46"/></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="48"/></condition><then pos:line="55" pos:column="48"> <block pos:line="55" pos:column="49">{
		<comment type="block" pos:line="56" pos:column="17">/* ACLs are not supported, so pretend we have a basic ACL. */</comment>
		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><name pos:line="57" pos:column="21">type<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">==<pos:position pos:line="57" pos:column="28"/></operator> <name pos:line="57" pos:column="29">SMB_ACL_TYPE_ACCESS<pos:position pos:line="57" pos:column="48"/></name></expr>)<pos:position pos:line="57" pos:column="49"/></condition><then pos:line="57" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="25">rsync_acl_fake_perms<pos:position pos:line="58" pos:column="45"/></name><argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">racl<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="52">mode<pos:position pos:line="58" pos:column="56"/></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if></elseif> <else pos:line="59" pos:column="11">else <block pos:line="59" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">rsyserr<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">FERROR_XFER<pos:position pos:line="60" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="38">errno<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="45">"get_acl: sys_acl_get_file(%s, %s)"<pos:position pos:line="60" pos:column="80"/></literal></expr></argument>,
			<argument><expr><name pos:line="61" pos:column="25">fname<pos:position pos:line="61" pos:column="30"/></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="32">str_acl_type<pos:position pos:line="61" pos:column="44"/></name><argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">type<pos:position pos:line="61" pos:column="49"/></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>
		<return pos:line="62" pos:column="17">return <expr><operator pos:line="62" pos:column="24">-<pos:position pos:line="62" pos:column="25"/></operator><literal type="number" pos:line="62" pos:column="25">1<pos:position pos:line="62" pos:column="26"/></literal></expr>;<pos:position pos:line="62" pos:column="27"/></return>
	}<pos:position pos:line="63" pos:column="10"/></block></else></if>

	<return pos:line="65" pos:column="9">return <expr><literal type="number" pos:line="65" pos:column="16">0<pos:position pos:line="65" pos:column="17"/></literal></expr>;<pos:position pos:line="65" pos:column="18"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

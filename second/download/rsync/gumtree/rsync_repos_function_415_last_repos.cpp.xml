<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_415_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">poptContext<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">pc<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">extra_args<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">opt<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">pc<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">poptGetContext<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">PROGRAM<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="38">argc<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="44">(<pos:position pos:line="8" pos:column="45"/></operator><specifier pos:line="8" pos:column="45">const<pos:position pos:line="8" pos:column="50"/></specifier> <name pos:line="8" pos:column="51">char<pos:position pos:line="8" pos:column="55"/></name> <operator pos:line="8" pos:column="56">*<pos:position pos:line="8" pos:column="57"/></operator><operator pos:line="8" pos:column="57">*<pos:position pos:line="8" pos:column="58"/></operator><operator pos:line="8" pos:column="58">)<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">argv<pos:position pos:line="8" pos:column="63"/></name></expr></argument>,
			    <argument><expr><name pos:line="9" pos:column="29">long_options<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="43">0<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">opt<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">poptGetNextOpt<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">pc<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="43">!=<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="46">-<pos:position pos:line="10" pos:column="47"/></operator><literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr>)<pos:position pos:line="10" pos:column="49"/></condition> <block pos:line="10" pos:column="50">{
		<switch pos:line="11" pos:column="17">switch <condition pos:line="11" pos:column="24">(<expr><name pos:line="11" pos:column="25">opt<pos:position pos:line="11" pos:column="28"/></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition> <block pos:line="11" pos:column="30">{
		<case pos:line="12" pos:column="17">case <expr><literal type="char" pos:line="12" pos:column="22">'h'<pos:position pos:line="12" pos:column="25"/></literal></expr>:<pos:position pos:line="12" pos:column="26"/></case>
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">tls_usage<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
		<default pos:line="14" pos:column="17">default:<pos:position pos:line="14" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">fprintf<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">stderr<pos:position pos:line="15" pos:column="39"/></name></expr></argument>,
			        <argument><expr><literal type="string" pos:line="16" pos:column="33">"%s: %s\n"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="17" pos:column="33">poptBadOption<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><name pos:line="17" pos:column="47">pc<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">POPT_BADOPTION_NOALIAS<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="18" pos:column="33">poptStrerror<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><name pos:line="18" pos:column="46">opt<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">tls_usage<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><literal type="number" pos:line="19" pos:column="35">1<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></switch>
	}<pos:position pos:line="21" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="23" pos:column="9">extra_args<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">poptGetArgs<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">pc<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">extra_args<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">||<pos:position pos:line="24" pos:column="27"/></operator> <operator pos:line="24" pos:column="28">*<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">extra_args<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">==<pos:position pos:line="24" pos:column="42"/></operator> <name pos:line="24" pos:column="43">NULL<pos:position pos:line="24" pos:column="47"/></name></expr>)<pos:position pos:line="24" pos:column="48"/></condition><then pos:line="24" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">tls_usage<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><literal type="number" pos:line="25" pos:column="27">1<pos:position pos:line="25" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt></block></then></if>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init pos:line="27" pos:column="14">;<pos:position pos:line="27" pos:column="15"/></init> <condition><expr><operator pos:line="27" pos:column="16">*<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">extra_args<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></condition> <incr><expr><name pos:line="27" pos:column="29">extra_args<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">++<pos:position pos:line="27" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="42"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">list_file<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><operator pos:line="28" pos:column="27">*<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">extra_args<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">poptFreeContext<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">pc<pos:position pos:line="29" pos:column="27"/></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>

	<return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

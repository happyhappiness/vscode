<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_515.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">matched<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">f<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">sum_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="48">struct<pos:position pos:line="1" pos:column="54"/></name> <name pos:line="1" pos:column="55">map_struct<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">buf<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">off_t<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">offset<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">i<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">off_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">n<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">offset<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">-<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">last_match<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">j<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">verbose<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&gt;<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="23">2<pos:position pos:line="7" pos:column="24"/></literal> <operator pos:line="7" pos:column="25">&amp;&amp;<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="28">i<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">&gt;=<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">fprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FINFO<pos:position pos:line="8" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="8" pos:column="31">"match at %d last_match=%d j=%d len=%d n=%d\n"<pos:position pos:line="8" pos:column="77"/></literal></expr></argument>,
			<argument><expr><operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">int<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">offset<pos:position pos:line="9" pos:column="36"/></name></expr></argument>,<argument><expr><operator pos:line="9" pos:column="37">(<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">int<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">)<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">last_match<pos:position pos:line="9" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="53">i<pos:position pos:line="9" pos:column="54"/></name></expr></argument>,<argument><expr><operator pos:line="9" pos:column="55">(<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="56">int<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">)<pos:position pos:line="9" pos:column="60"/></operator><name><name pos:line="9" pos:column="60">s<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">-&gt;<pos:position pos:line="9" pos:column="66"/></operator><name pos:line="9" pos:column="63">sums<pos:position pos:line="9" pos:column="67"/></name><index pos:line="9" pos:column="67">[<expr><name pos:line="9" pos:column="68">i<pos:position pos:line="9" pos:column="69"/></name></expr>]<pos:position pos:line="9" pos:column="70"/></index></name><operator pos:line="9" pos:column="70">.<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="71">len<pos:position pos:line="9" pos:column="74"/></name></expr></argument>,<argument><expr><operator pos:line="9" pos:column="75">(<pos:position pos:line="9" pos:column="76"/></operator><name pos:line="9" pos:column="76">int<pos:position pos:line="9" pos:column="79"/></name><operator pos:line="9" pos:column="79">)<pos:position pos:line="9" pos:column="80"/></operator><name pos:line="9" pos:column="80">n<pos:position pos:line="9" pos:column="81"/></name></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="83"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">send_token<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">f<pos:position pos:line="11" pos:column="21"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="22">i<pos:position pos:line="11" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="24">buf<pos:position pos:line="11" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="28">last_match<pos:position pos:line="11" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="39">n<pos:position pos:line="11" pos:column="40"/></name></expr></argument>,<argument><expr><ternary><condition><expr><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">==<pos:position pos:line="11" pos:column="44"/></operator><operator pos:line="11" pos:column="44">-<pos:position pos:line="11" pos:column="45"/></operator><literal type="number" pos:line="11" pos:column="45">1<pos:position pos:line="11" pos:column="46"/></literal></expr>?<pos:position pos:line="11" pos:column="47"/></condition><then><expr><literal type="number" pos:line="11" pos:column="47">0<pos:position pos:line="11" pos:column="48"/></literal></expr></then><else pos:line="11" pos:column="48">:<expr><name><name pos:line="11" pos:column="49">s<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">-&gt;<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="52">sums<pos:position pos:line="11" pos:column="56"/></name><index pos:line="11" pos:column="56">[<expr><name pos:line="11" pos:column="57">i<pos:position pos:line="11" pos:column="58"/></name></expr>]<pos:position pos:line="11" pos:column="59"/></index></name><operator pos:line="11" pos:column="59">.<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="60">len<pos:position pos:line="11" pos:column="63"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">data_transfer<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">+=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">n<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">n<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&gt;<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">write_flush<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">f<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">i<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&gt;=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">n<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">+=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">s<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">sums<pos:position pos:line="18" pos:column="29"/></name><index pos:line="18" pos:column="29">[<expr><name pos:line="18" pos:column="30">i<pos:position pos:line="18" pos:column="31"/></name></expr>]<pos:position pos:line="18" pos:column="32"/></index></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">len<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt></block></then></if>
  
	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">j<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></init><condition><expr><name pos:line="20" pos:column="18">j<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">n<pos:position pos:line="20" pos:column="21"/></name></expr>;<pos:position pos:line="20" pos:column="22"/></condition><incr><expr><name pos:line="20" pos:column="22">j<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">+=<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">CHUNK_SIZE<pos:position pos:line="20" pos:column="35"/></name></expr></incr>)<pos:position pos:line="20" pos:column="36"/></control> <block pos:line="20" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">int<pos:position pos:line="21" pos:column="20"/></name></type> <name pos:line="21" pos:column="21">n1<pos:position pos:line="21" pos:column="23"/></name> <init pos:line="21" pos:column="24">= <expr><call><name pos:line="21" pos:column="26">MIN<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">CHUNK_SIZE<pos:position pos:line="21" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="21" pos:column="41">n<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="43">j<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="46"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">sum_update<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><call><name pos:line="22" pos:column="28">map_ptr<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">buf<pos:position pos:line="22" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="40">last_match<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">+<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">j<pos:position pos:line="22" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="53">n1<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="22" pos:column="57">n1<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></for>


	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">i<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&gt;=<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">last_match<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">offset<pos:position pos:line="27" pos:column="36"/></name> <operator pos:line="27" pos:column="37">+<pos:position pos:line="27" pos:column="38"/></operator> <name><name pos:line="27" pos:column="39">s<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">sums<pos:position pos:line="27" pos:column="46"/></name><index pos:line="27" pos:column="46">[<expr><name pos:line="27" pos:column="47">i<pos:position pos:line="27" pos:column="48"/></name></expr>]<pos:position pos:line="27" pos:column="49"/></index></name><operator pos:line="27" pos:column="49">.<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">len<pos:position pos:line="27" pos:column="53"/></name></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt></block></then>
	<else pos:line="28" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">last_match<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">offset<pos:position pos:line="29" pos:column="36"/></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt></block></else></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_630_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">inflateReset2<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">strm<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">windowBits<pos:position pos:line="1" pos:column="43"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">strm<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">int<pos:position pos:line="3" pos:column="4"/></name></type> <name pos:line="3" pos:column="5">windowBits<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">wrap<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">inflate_state<pos:position pos:line="6" pos:column="25"/></name></name> <name pos:line="6" pos:column="26">FAR<pos:position pos:line="6" pos:column="29"/></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">state<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* get the state */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">strm<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">Z_NULL<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">||<pos:position pos:line="9" pos:column="26"/></operator> <name><name pos:line="9" pos:column="27">strm<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">state<pos:position pos:line="9" pos:column="38"/></name></name> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">Z_NULL<pos:position pos:line="9" pos:column="48"/></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block type="pseudo"><return pos:line="9" pos:column="50">return <expr><name pos:line="9" pos:column="57">Z_STREAM_ERROR<pos:position pos:line="9" pos:column="71"/></name></expr>;<pos:position pos:line="9" pos:column="72"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">state<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator>struct <name pos:line="10" pos:column="21">inflate_state<pos:position pos:line="10" pos:column="34"/></name> <name pos:line="10" pos:column="35">FAR<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator><name><name pos:line="10" pos:column="41">strm<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">state<pos:position pos:line="10" pos:column="52"/></name></name></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* extract wrap request from windowBits parameter */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">windowBits<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&lt;<pos:position pos:line="13" pos:column="24"/></operator> <literal type="number" pos:line="13" pos:column="22">0<pos:position pos:line="13" pos:column="23"/></literal></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">wrap<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">windowBits<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">-<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">windowBits<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
    <else pos:line="17" pos:column="5">else <block pos:line="17" pos:column="10">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">wrap<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">windowBits<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&gt;&gt;<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="31">4<pos:position pos:line="18" pos:column="32"/></literal><operator pos:line="18" pos:column="32">)<pos:position pos:line="18" pos:column="33"/></operator> <operator pos:line="18" pos:column="34">+<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">1<pos:position pos:line="18" pos:column="37"/></literal></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">GUNZIP<pos:position pos:line="19" pos:column="14"/></name></cpp:ifdef>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">windowBits<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">&lt;<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="26">48<pos:position pos:line="20" pos:column="28"/></literal></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="13">windowBits<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">&amp;=<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="27">15<pos:position pos:line="21" pos:column="29"/></literal></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="25" pos:column="5">/* set number of window bits, free window if different */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">windowBits<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&amp;&amp;<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="23">(<pos:position pos:line="26" pos:column="24"/></operator><name><name pos:line="26" pos:column="24">windowBits<pos:position pos:line="26" pos:column="34"/></name> <argument_list type="generic" pos:line="26" pos:column="35">&lt; <argument><expr><literal type="number" pos:line="26" pos:column="37">8<pos:position pos:line="26" pos:column="38"/></literal> <operator pos:line="26" pos:column="39">||<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">windowBits<pos:position pos:line="26" pos:column="52"/></name></expr></argument> &gt;<pos:position pos:line="26" pos:column="57"/></argument_list></name> <literal type="number" pos:line="26" pos:column="55">15<pos:position pos:line="26" pos:column="57"/></literal><operator pos:line="26" pos:column="57">)<pos:position pos:line="26" pos:column="58"/></operator></expr>)<pos:position pos:line="26" pos:column="59"/></condition><then pos:line="26" pos:column="59">
        <block type="pseudo"><return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">Z_STREAM_ERROR<pos:position pos:line="27" pos:column="30"/></name></expr>;<pos:position pos:line="27" pos:column="31"/></return></block></then></if>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">state<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">window<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">!=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">Z_NULL<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">&amp;&amp;<pos:position pos:line="28" pos:column="43"/></operator> <name><name pos:line="28" pos:column="36">state<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">wbits<pos:position pos:line="28" pos:column="48"/></name></name> <operator pos:line="28" pos:column="49">!=<pos:position pos:line="28" pos:column="51"/></operator> <operator pos:line="28" pos:column="52">(<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">unsigned<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">)<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="62">windowBits<pos:position pos:line="28" pos:column="72"/></name></expr>)<pos:position pos:line="28" pos:column="73"/></condition><then pos:line="28" pos:column="73"> <block pos:line="28" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ZFREE<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">strm<pos:position pos:line="29" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="21">state<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">window<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">state<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">window<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">Z_NULL<pos:position pos:line="30" pos:column="31"/></name></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/* update state and reset the rest of it */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">state<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">wrap<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">wrap<pos:position pos:line="34" pos:column="23"/></name></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">state<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">wbits<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">unsigned<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">)<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">windowBits<pos:position pos:line="35" pos:column="40"/></name></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><call><name pos:line="36" pos:column="12">inflateReset<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">strm<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function_decl></unit>

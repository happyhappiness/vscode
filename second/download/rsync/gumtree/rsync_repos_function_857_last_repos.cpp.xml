<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_857_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name><name pos:line="1" pos:column="26">argv<pos:position pos:line="1" pos:column="30"/></name><index pos:line="1" pos:column="30">[]<pos:position pos:line="1" pos:column="32"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">f<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">j<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">output<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><literal type="number" pos:line="5" pos:column="21">33<pos:position pos:line="5" pos:column="23"/></literal></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">md_context<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">ctx<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">uchar<pos:position pos:line="7" pos:column="14"/></name></type> <name><name pos:line="7" pos:column="15">buf<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><literal type="number" pos:line="7" pos:column="19">1000<pos:position pos:line="7" pos:column="23"/></literal></expr>]<pos:position pos:line="7" pos:column="24"/></index></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uchar<pos:position pos:line="8" pos:column="14"/></name></type> <name><name pos:line="8" pos:column="15">md5sum<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">MD5_DIGEST_LEN<pos:position pos:line="8" pos:column="36"/></name></expr>]<pos:position pos:line="8" pos:column="37"/></index></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">argc<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&lt;<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="20">2<pos:position pos:line="10" pos:column="21"/></literal></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22"> <block pos:line="10" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">printf<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">"\nMD5 Validation Tests:\n\n"<pos:position pos:line="11" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>

		<for pos:line="13" pos:column="17">for <control pos:line="13" pos:column="21">(<init><expr><name pos:line="13" pos:column="22">i<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></init> <condition><expr><name><name pos:line="13" pos:column="29">tests<pos:position pos:line="13" pos:column="34"/></name><index pos:line="13" pos:column="34">[<expr><name pos:line="13" pos:column="35">i<pos:position pos:line="13" pos:column="36"/></name></expr>]<pos:position pos:line="13" pos:column="37"/></index></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">str<pos:position pos:line="13" pos:column="41"/></name></expr>;<pos:position pos:line="13" pos:column="42"/></condition> <incr><expr><name pos:line="13" pos:column="43">i<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">++<pos:position pos:line="13" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="47"/></control> <block pos:line="13" pos:column="48">{
			<decl_stmt><decl><type><name pos:line="14" pos:column="25">char<pos:position pos:line="14" pos:column="29"/></name> <modifier pos:line="14" pos:column="30">*<pos:position pos:line="14" pos:column="31"/></modifier></type><name pos:line="14" pos:column="31">str<pos:position pos:line="14" pos:column="34"/></name> <init pos:line="14" pos:column="35">= <expr><name><name pos:line="14" pos:column="37">tests<pos:position pos:line="14" pos:column="42"/></name><index pos:line="14" pos:column="42">[<expr><name pos:line="14" pos:column="43">i<pos:position pos:line="14" pos:column="44"/></name></expr>]<pos:position pos:line="14" pos:column="45"/></index></name><operator pos:line="14" pos:column="45">.<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">str<pos:position pos:line="14" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="15" pos:column="25">char<pos:position pos:line="15" pos:column="29"/></name> <modifier pos:line="15" pos:column="30">*<pos:position pos:line="15" pos:column="31"/></modifier></type><name pos:line="15" pos:column="31">chk<pos:position pos:line="15" pos:column="34"/></name> <init pos:line="15" pos:column="35">= <expr><name><name pos:line="15" pos:column="37">tests<pos:position pos:line="15" pos:column="42"/></name><index pos:line="15" pos:column="42">[<expr><name pos:line="15" pos:column="43">i<pos:position pos:line="15" pos:column="44"/></name></expr>]<pos:position pos:line="15" pos:column="45"/></index></name><operator pos:line="15" pos:column="45">.<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">md5<pos:position pos:line="15" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="50"/></decl_stmt>

			<expr_stmt><expr><call><name pos:line="17" pos:column="25">printf<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><literal type="string" pos:line="17" pos:column="32">"  Test %d "<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">i<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">+<pos:position pos:line="17" pos:column="49"/></operator> <literal type="number" pos:line="17" pos:column="50">1<pos:position pos:line="17" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="19" pos:column="25">get_md5<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">md5sum<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">str<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="46">strlen<pos:position pos:line="19" pos:column="52"/></name><argument_list pos:line="19" pos:column="52">(<argument><expr><name pos:line="19" pos:column="53">str<pos:position pos:line="19" pos:column="56"/></name></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>

			<for pos:line="21" pos:column="25">for <control pos:line="21" pos:column="29">(<init><expr><name pos:line="21" pos:column="30">j<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="34">0<pos:position pos:line="21" pos:column="35"/></literal></expr>;<pos:position pos:line="21" pos:column="36"/></init> <condition><expr><name pos:line="21" pos:column="37">j<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">&lt;<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="41">MD5_DIGEST_LEN<pos:position pos:line="21" pos:column="55"/></name></expr>;<pos:position pos:line="21" pos:column="56"/></condition> <incr><expr><name pos:line="21" pos:column="57">j<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">++<pos:position pos:line="21" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="61"/></control>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="33">sprintf<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">output<pos:position pos:line="22" pos:column="47"/></name> <operator pos:line="22" pos:column="48">+<pos:position pos:line="22" pos:column="49"/></operator> <name pos:line="22" pos:column="50">j<pos:position pos:line="22" pos:column="51"/></name> <operator pos:line="22" pos:column="52">*<pos:position pos:line="22" pos:column="53"/></operator> <literal type="number" pos:line="22" pos:column="54">2<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="57">"%02x"<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="65">md5sum<pos:position pos:line="22" pos:column="71"/></name><index pos:line="22" pos:column="71">[<expr><name pos:line="22" pos:column="72">j<pos:position pos:line="22" pos:column="73"/></name></expr>]<pos:position pos:line="22" pos:column="74"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="76"/></expr_stmt></block></for>

			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><call><name pos:line="24" pos:column="29">memcmp<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">output<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="44">chk<pos:position pos:line="24" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="49">32<pos:position pos:line="24" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="25" pos:column="33">printf<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><literal type="string" pos:line="25" pos:column="40">"failed!\n"<pos:position pos:line="25" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
				<return pos:line="26" pos:column="33">return <expr><literal type="number" pos:line="26" pos:column="40">1<pos:position pos:line="26" pos:column="41"/></literal></expr>;<pos:position pos:line="26" pos:column="42"/></return>
			}<pos:position pos:line="27" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="29" pos:column="25">printf<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><literal type="string" pos:line="29" pos:column="32">"passed.\n"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="30" pos:column="18"/></block></for>

		<expr_stmt><expr><call><name pos:line="32" pos:column="17">printf<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="string" pos:line="32" pos:column="24">"\n"<pos:position pos:line="32" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><operator pos:line="36" pos:column="16">--<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">argc<pos:position pos:line="36" pos:column="22"/></name></expr>)<pos:position pos:line="36" pos:column="23"/></condition> <block pos:line="36" pos:column="24">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><operator pos:line="37" pos:column="22">(<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="23">f<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">fopen<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><operator pos:line="37" pos:column="33">*<pos:position pos:line="37" pos:column="34"/></operator><operator pos:line="37" pos:column="34">++<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">argv<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="42">"rb"<pos:position pos:line="37" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call><operator pos:line="37" pos:column="47">)<pos:position pos:line="37" pos:column="48"/></operator></expr>)<pos:position pos:line="37" pos:column="49"/></condition><then pos:line="37" pos:column="49"> <block pos:line="37" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">perror<pos:position pos:line="38" pos:column="31"/></name><argument_list pos:line="38" pos:column="31">(<argument><expr><literal type="string" pos:line="38" pos:column="32">"fopen"<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
			<return pos:line="39" pos:column="25">return <expr><literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></return>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="42" pos:column="17">md5_begin<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><operator pos:line="42" pos:column="27">&amp;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="28">ctx<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>

		<while pos:line="44" pos:column="17">while <condition pos:line="44" pos:column="23">(<expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">i<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <call><name pos:line="44" pos:column="29">fread<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">buf<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="40">1<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="43">sizeof <name pos:line="44" pos:column="50">buf<pos:position pos:line="44" pos:column="53"/></name></sizeof></expr></argument>, <argument><expr><name pos:line="44" pos:column="55">f<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call><operator pos:line="44" pos:column="57">)<pos:position pos:line="44" pos:column="58"/></operator> <operator pos:line="44" pos:column="59">&gt;<pos:position pos:line="44" pos:column="63"/></operator> <literal type="number" pos:line="44" pos:column="61">0<pos:position pos:line="44" pos:column="62"/></literal></expr>)<pos:position pos:line="44" pos:column="63"/></condition>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="25">md5_update<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><operator pos:line="45" pos:column="36">&amp;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="37">ctx<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="42">buf<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="47">i<pos:position pos:line="45" pos:column="48"/></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt></block></while>

		<expr_stmt><expr><call><name pos:line="47" pos:column="17">md5_result<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><operator pos:line="47" pos:column="28">&amp;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="29">ctx<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">md5sum<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>

		<for pos:line="49" pos:column="17">for <control pos:line="49" pos:column="21">(<init><expr><name pos:line="49" pos:column="22">j<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="26">0<pos:position pos:line="49" pos:column="27"/></literal></expr>;<pos:position pos:line="49" pos:column="28"/></init> <condition><expr><name pos:line="49" pos:column="29">j<pos:position pos:line="49" pos:column="30"/></name> <operator pos:line="49" pos:column="31">&lt;<pos:position pos:line="49" pos:column="35"/></operator> <name pos:line="49" pos:column="33">MD5_DIGEST_LEN<pos:position pos:line="49" pos:column="47"/></name></expr>;<pos:position pos:line="49" pos:column="48"/></condition> <incr><expr><name pos:line="49" pos:column="49">j<pos:position pos:line="49" pos:column="50"/></name><operator pos:line="49" pos:column="50">++<pos:position pos:line="49" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="53"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">printf<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><literal type="string" pos:line="50" pos:column="32">"%02x"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="40">md5sum<pos:position pos:line="50" pos:column="46"/></name><index pos:line="50" pos:column="46">[<expr><name pos:line="50" pos:column="47">j<pos:position pos:line="50" pos:column="48"/></name></expr>]<pos:position pos:line="50" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt></block></for>

		<expr_stmt><expr><call><name pos:line="52" pos:column="17">printf<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><literal type="string" pos:line="52" pos:column="24">"  %s\n"<pos:position pos:line="52" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="52" pos:column="34">*<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="35">argv<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></while>

	<return pos:line="55" pos:column="9">return <expr><literal type="number" pos:line="55" pos:column="16">0<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

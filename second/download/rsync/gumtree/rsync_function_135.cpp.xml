<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_135.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">do_cmd<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name pos:line="1" pos:column="12">char<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">cmd<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">machine<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">user<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">path<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">f_in<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">f_out<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name><name pos:line="3" pos:column="9">args<pos:position pos:line="3" pos:column="13"/></name><index pos:line="3" pos:column="13">[<expr><literal type="number" pos:line="3" pos:column="14">100<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="9">argc<pos:position pos:line="4" pos:column="13"/></name><init pos:line="4" pos:column="13">=<expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">tok<pos:position pos:line="5" pos:column="12"/></name></decl>,<modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">!<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">local_server<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21"> <block pos:line="7" pos:column="22">{
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">cmd<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="7">cmd<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">getenv<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">RSYNC_RSH_ENV<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt></block></then></if>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">cmd<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="7">cmd<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">RSYNC_RSH<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">cmd<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">strdup<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">cmd<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">cmd<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14"> 
      <block type="pseudo"><goto pos:line="14" pos:column="7">goto <name pos:line="14" pos:column="12">oom<pos:position pos:line="14" pos:column="15"/></name>;<pos:position pos:line="14" pos:column="16"/></goto></block></then></if>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">tok<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator><call><name pos:line="16" pos:column="14">strtok<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">cmd<pos:position pos:line="16" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="25">" "<pos:position pos:line="16" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></init><condition><expr><name pos:line="16" pos:column="30">tok<pos:position pos:line="16" pos:column="33"/></name></expr>;<pos:position pos:line="16" pos:column="34"/></condition><incr><expr><name pos:line="16" pos:column="34">tok<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">=<pos:position pos:line="16" pos:column="38"/></operator><call><name pos:line="16" pos:column="38">strtok<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">NULL<pos:position pos:line="16" pos:column="49"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="50">" "<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr></incr>)<pos:position pos:line="16" pos:column="55"/></control> <block pos:line="16" pos:column="56">{
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">args<pos:position pos:line="17" pos:column="11"/></name><index pos:line="17" pos:column="11">[<expr><name pos:line="17" pos:column="12">argc<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">++<pos:position pos:line="17" pos:column="18"/></operator></expr>]<pos:position pos:line="17" pos:column="19"/></index></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">tok<pos:position pos:line="17" pos:column="25"/></name></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></for>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">user<pos:position pos:line="20" pos:column="13"/></name></expr>)<pos:position pos:line="20" pos:column="14"/></condition><then pos:line="20" pos:column="14"> <block pos:line="20" pos:column="15">{
      <expr_stmt><expr><name><name pos:line="21" pos:column="7">args<pos:position pos:line="21" pos:column="11"/></name><index pos:line="21" pos:column="11">[<expr><name pos:line="21" pos:column="12">argc<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">++<pos:position pos:line="21" pos:column="18"/></operator></expr>]<pos:position pos:line="21" pos:column="19"/></index></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="string" pos:line="21" pos:column="22">"-l"<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="22" pos:column="7">args<pos:position pos:line="22" pos:column="11"/></name><index pos:line="22" pos:column="11">[<expr><name pos:line="22" pos:column="12">argc<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">++<pos:position pos:line="22" pos:column="18"/></operator></expr>]<pos:position pos:line="22" pos:column="19"/></index></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">user<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">args<pos:position pos:line="24" pos:column="9"/></name><index pos:line="24" pos:column="9">[<expr><name pos:line="24" pos:column="10">argc<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">++<pos:position pos:line="24" pos:column="16"/></operator></expr>]<pos:position pos:line="24" pos:column="17"/></index></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">machine<pos:position pos:line="24" pos:column="27"/></name></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="27" pos:column="3">args<pos:position pos:line="27" pos:column="7"/></name><index pos:line="27" pos:column="7">[<expr><name pos:line="27" pos:column="8">argc<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">++<pos:position pos:line="27" pos:column="14"/></operator></expr>]<pos:position pos:line="27" pos:column="15"/></index></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">rsync_path<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="29" pos:column="3">server_options<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">args<pos:position pos:line="29" pos:column="22"/></name></expr></argument>,<argument><expr><operator pos:line="29" pos:column="23">&amp;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="24">argc<pos:position pos:line="29" pos:column="28"/></name></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">path<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">&amp;&amp;<pos:position pos:line="31" pos:column="22"/></operator> <operator pos:line="31" pos:column="15">*<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">path<pos:position pos:line="31" pos:column="20"/></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">char<pos:position pos:line="32" pos:column="9"/></name> <modifier pos:line="32" pos:column="10">*<pos:position pos:line="32" pos:column="11"/></modifier></type><name pos:line="32" pos:column="11">dir<pos:position pos:line="32" pos:column="14"/></name> <init pos:line="32" pos:column="15">= <expr><call><name pos:line="32" pos:column="17">strdup<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">path<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">p<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <call><name pos:line="33" pos:column="9">strrchr<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">dir<pos:position pos:line="33" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="33" pos:column="21">'/'<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">p<pos:position pos:line="34" pos:column="10"/></name></expr>)<pos:position pos:line="34" pos:column="11"/></condition><then pos:line="34" pos:column="11"> <block pos:line="34" pos:column="12">{
      <expr_stmt><expr><operator pos:line="35" pos:column="7">*<pos:position pos:line="35" pos:column="8"/></operator><name pos:line="35" pos:column="8">p<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>;<pos:position pos:line="35" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="36" pos:column="7">args<pos:position pos:line="36" pos:column="11"/></name><index pos:line="36" pos:column="11">[<expr><name pos:line="36" pos:column="12">argc<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">++<pos:position pos:line="36" pos:column="18"/></operator></expr>]<pos:position pos:line="36" pos:column="19"/></index></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">dir<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">p<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">++<pos:position pos:line="37" pos:column="10"/></operator></expr>;<pos:position pos:line="37" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then> <else pos:line="38" pos:column="7">else <block pos:line="38" pos:column="12">{
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">args<pos:position pos:line="39" pos:column="11"/></name><index pos:line="39" pos:column="11">[<expr><name pos:line="39" pos:column="12">argc<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">++<pos:position pos:line="39" pos:column="18"/></operator></expr>]<pos:position pos:line="39" pos:column="19"/></index></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <literal type="string" pos:line="39" pos:column="22">"."<pos:position pos:line="39" pos:column="25"/></literal></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="40" pos:column="7">p<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">=<pos:position pos:line="40" pos:column="10"/></operator> <name pos:line="40" pos:column="11">dir<pos:position pos:line="40" pos:column="14"/></name></expr>;<pos:position pos:line="40" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">p<pos:position pos:line="42" pos:column="10"/></name><index pos:line="42" pos:column="10">[<expr><literal type="number" pos:line="42" pos:column="11">0<pos:position pos:line="42" pos:column="12"/></literal></expr>]<pos:position pos:line="42" pos:column="13"/></index></name></expr>)<pos:position pos:line="42" pos:column="14"/></condition><then pos:line="42" pos:column="14">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="7">args<pos:position pos:line="43" pos:column="11"/></name><index pos:line="43" pos:column="11">[<expr><name pos:line="43" pos:column="12">argc<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">++<pos:position pos:line="43" pos:column="18"/></operator></expr>]<pos:position pos:line="43" pos:column="19"/></index></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">path<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="46" pos:column="3">args<pos:position pos:line="46" pos:column="7"/></name><index pos:line="46" pos:column="7">[<expr><name pos:line="46" pos:column="8">argc<pos:position pos:line="46" pos:column="12"/></name></expr>]<pos:position pos:line="46" pos:column="13"/></index></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name pos:line="46" pos:column="16">NULL<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>

  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">verbose<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">&gt;<pos:position pos:line="48" pos:column="19"/></operator> <literal type="number" pos:line="48" pos:column="17">3<pos:position pos:line="48" pos:column="18"/></literal></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">fprintf<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">stderr<pos:position pos:line="49" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="49" pos:column="20">"cmd="<pos:position pos:line="49" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
    <for pos:line="50" pos:column="5">for <control pos:line="50" pos:column="9">(<init><expr><name pos:line="50" pos:column="10">i<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator><literal type="number" pos:line="50" pos:column="12">0<pos:position pos:line="50" pos:column="13"/></literal></expr>;<pos:position pos:line="50" pos:column="14"/></init><condition><expr><name pos:line="50" pos:column="14">i<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">&lt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">argc<pos:position pos:line="50" pos:column="20"/></name></expr>;<pos:position pos:line="50" pos:column="21"/></condition><incr><expr><name pos:line="50" pos:column="21">i<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">++<pos:position pos:line="50" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="50" pos:column="25"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="7">fprintf<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">stderr<pos:position pos:line="51" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="51" pos:column="22">"%s "<pos:position pos:line="51" pos:column="27"/></literal></expr></argument>,<argument><expr><name><name pos:line="51" pos:column="28">args<pos:position pos:line="51" pos:column="32"/></name><index pos:line="51" pos:column="32">[<expr><name pos:line="51" pos:column="33">i<pos:position pos:line="51" pos:column="34"/></name></expr>]<pos:position pos:line="51" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">fprintf<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><name pos:line="52" pos:column="13">stderr<pos:position pos:line="52" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="52" pos:column="20">"\n"<pos:position pos:line="52" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <return pos:line="55" pos:column="3">return <expr><call><name pos:line="55" pos:column="10">piped_child<pos:position pos:line="55" pos:column="21"/></name><argument_list pos:line="55" pos:column="21">(<argument><expr><name pos:line="55" pos:column="22">args<pos:position pos:line="55" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="55" pos:column="27">f_in<pos:position pos:line="55" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="55" pos:column="32">f_out<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></return>

<label><name pos:line="57" pos:column="1">oom<pos:position pos:line="57" pos:column="4"/></name>:<pos:position pos:line="57" pos:column="5"/></label>
  <expr_stmt><expr><call><name pos:line="58" pos:column="3">out_of_memory<pos:position pos:line="58" pos:column="16"/></name><argument_list pos:line="58" pos:column="16">(<argument><expr><literal type="string" pos:line="58" pos:column="17">"do_cmd"<pos:position pos:line="58" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>
  <return pos:line="59" pos:column="3">return <expr><literal type="number" pos:line="59" pos:column="10">0<pos:position pos:line="59" pos:column="11"/></literal></expr>;<pos:position pos:line="59" pos:column="12"/></return> <comment type="block" pos:line="59" pos:column="13">/* not reached */</comment>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

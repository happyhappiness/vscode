<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_278_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">recv_xattr_request<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">file_struct<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">file<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">f_in<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">item_list<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">lst<pos:position pos:line="3" pos:column="23"/></name> <init pos:line="3" pos:column="24">= <expr><name><name pos:line="3" pos:column="26">rsync_xal_l<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">.<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">items<pos:position pos:line="3" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">old_datum<pos:position pos:line="4" pos:column="24"/></name></decl>, <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="27">name<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">rsync_xa<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">rxa<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">rel_pos<pos:position pos:line="6" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="22">cnt<pos:position pos:line="6" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="27">num<pos:position pos:line="6" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="32">got_xattr_data<pos:position pos:line="6" pos:column="46"/></name> <init pos:line="6" pos:column="47">= <expr><literal type="number" pos:line="6" pos:column="49">0<pos:position pos:line="6" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">F_XATTR<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">file<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call> <operator pos:line="8" pos:column="27">&lt;<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">rprintf<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">FERROR<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="33">"recv_xattr_request: internal data error!\n"<pos:position pos:line="9" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">exit_cleanup<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">RERR_PROTOCOL<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">lst<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">+=<pos:position pos:line="12" pos:column="15"/></operator> <call><name pos:line="12" pos:column="16">F_XATTR<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">file<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">cnt<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name><name pos:line="14" pos:column="15">lst<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">count<pos:position pos:line="14" pos:column="25"/></name></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">rxa<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name><name pos:line="15" pos:column="15">lst<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">items<pos:position pos:line="15" pos:column="25"/></name></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="16" pos:column="9">num<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="number" pos:line="16" pos:column="15">0<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">rel_pos<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">read_varint<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">f_in<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator> <operator pos:line="17" pos:column="46">!=<pos:position pos:line="17" pos:column="48"/></operator> <literal type="number" pos:line="17" pos:column="49">0<pos:position pos:line="17" pos:column="50"/></literal></expr>)<pos:position pos:line="17" pos:column="51"/></condition> <block pos:line="17" pos:column="52">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">num<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">+=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">rel_pos<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
		<comment type="block" pos:line="19" pos:column="17">/* Note that the sender-related num values may not be in order on the receiver! */</comment>
		<while pos:line="20" pos:column="17">while <condition pos:line="20" pos:column="23">(<expr><name pos:line="20" pos:column="24">cnt<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&amp;&amp;<pos:position pos:line="20" pos:column="38"/></operator> <operator pos:line="20" pos:column="31">(<pos:position pos:line="20" pos:column="32"/></operator><ternary><condition><expr><name pos:line="20" pos:column="32">am_sender<pos:position pos:line="20" pos:column="41"/></name></expr> ?<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <expr><name><name pos:line="20" pos:column="44">rxa<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">num<pos:position pos:line="20" pos:column="52"/></name></name> <operator pos:line="20" pos:column="53">&lt;<pos:position pos:line="20" pos:column="57"/></operator> <name pos:line="20" pos:column="55">num<pos:position pos:line="20" pos:column="58"/></name></expr> <pos:position pos:line="20" pos:column="59"/></then><else pos:line="20" pos:column="59">: <expr><name><name pos:line="20" pos:column="61">rxa<pos:position pos:line="20" pos:column="64"/></name><operator pos:line="20" pos:column="64">-&gt;<pos:position pos:line="20" pos:column="69"/></operator><name pos:line="20" pos:column="66">num<pos:position pos:line="20" pos:column="69"/></name></name> <operator pos:line="20" pos:column="70">!=<pos:position pos:line="20" pos:column="72"/></operator> <name pos:line="20" pos:column="73">num<pos:position pos:line="20" pos:column="76"/></name></expr></else></ternary><operator pos:line="20" pos:column="76">)<pos:position pos:line="20" pos:column="77"/></operator></expr>)<pos:position pos:line="20" pos:column="78"/></condition> <block pos:line="20" pos:column="79">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">rxa<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">++<pos:position pos:line="21" pos:column="30"/></operator></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">cnt<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">--<pos:position pos:line="22" pos:column="30"/></operator></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></while>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">cnt<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">||<pos:position pos:line="24" pos:column="28"/></operator> <name><name pos:line="24" pos:column="29">rxa<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">num<pos:position pos:line="24" pos:column="37"/></name></name> <operator pos:line="24" pos:column="38">!=<pos:position pos:line="24" pos:column="40"/></operator> <name pos:line="24" pos:column="41">num<pos:position pos:line="24" pos:column="44"/></name></expr>)<pos:position pos:line="24" pos:column="45"/></condition><then pos:line="24" pos:column="45"> <block pos:line="24" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">rprintf<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">FERROR<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"[%s] could not find xattr #%d for %s\n"<pos:position pos:line="25" pos:column="81"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="26" pos:column="33">who_am_i<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">()<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">num<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="50">f_name<pos:position pos:line="26" pos:column="56"/></name><argument_list pos:line="26" pos:column="56">(<argument><expr><name pos:line="26" pos:column="57">file<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">NULL<pos:position pos:line="26" pos:column="67"/></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">exit_cleanup<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">RERR_PROTOCOL<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">!<pos:position pos:line="29" pos:column="22"/></operator><call><name pos:line="29" pos:column="22">XATTR_ABBREV<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><operator pos:line="29" pos:column="35">*<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">rxa<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call> <operator pos:line="29" pos:column="41">||<pos:position pos:line="29" pos:column="43"/></operator> <name><name pos:line="29" pos:column="44">rxa<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">datum<pos:position pos:line="29" pos:column="54"/></name><index pos:line="29" pos:column="54">[<expr><literal type="number" pos:line="29" pos:column="55">0<pos:position pos:line="29" pos:column="56"/></literal></expr>]<pos:position pos:line="29" pos:column="57"/></index></name> <operator pos:line="29" pos:column="58">!=<pos:position pos:line="29" pos:column="60"/></operator> <name pos:line="29" pos:column="61">XSTATE_ABBREV<pos:position pos:line="29" pos:column="74"/></name></expr>)<pos:position pos:line="29" pos:column="75"/></condition><then pos:line="29" pos:column="75"> <block pos:line="29" pos:column="76">{
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">rprintf<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">FERROR<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="41">"[%s] internal abbrev error on %s (%s, len=%ld)!\n"<pos:position pos:line="30" pos:column="92"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="31" pos:column="33">who_am_i<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">()<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="45">f_name<pos:position pos:line="31" pos:column="51"/></name><argument_list pos:line="31" pos:column="51">(<argument><expr><name pos:line="31" pos:column="52">file<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="58">NULL<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="65">rxa<pos:position pos:line="31" pos:column="68"/></name><operator pos:line="31" pos:column="68">-&gt;<pos:position pos:line="31" pos:column="73"/></operator><name pos:line="31" pos:column="70">name<pos:position pos:line="31" pos:column="74"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="76">(<pos:position pos:line="31" pos:column="77"/></operator><name pos:line="31" pos:column="77">long<pos:position pos:line="31" pos:column="81"/></name><operator pos:line="31" pos:column="81">)<pos:position pos:line="31" pos:column="82"/></operator><name><name pos:line="31" pos:column="82">rxa<pos:position pos:line="31" pos:column="85"/></name><operator pos:line="31" pos:column="85">-&gt;<pos:position pos:line="31" pos:column="90"/></operator><name pos:line="31" pos:column="87">datum_len<pos:position pos:line="31" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="98"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">exit_cleanup<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">RERR_PROTOCOL<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>

		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">am_sender<pos:position pos:line="35" pos:column="30"/></name></expr>)<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31"> <block pos:line="35" pos:column="32">{
			<expr_stmt><expr><name><name pos:line="36" pos:column="25">rxa<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">datum<pos:position pos:line="36" pos:column="35"/></name><index pos:line="36" pos:column="35">[<expr><literal type="number" pos:line="36" pos:column="36">0<pos:position pos:line="36" pos:column="37"/></literal></expr>]<pos:position pos:line="36" pos:column="38"/></index></name> <operator pos:line="36" pos:column="39">=<pos:position pos:line="36" pos:column="40"/></operator> <name pos:line="36" pos:column="41">XSTATE_TODO<pos:position pos:line="36" pos:column="52"/></name></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
			<continue pos:line="37" pos:column="25">continue;<pos:position pos:line="37" pos:column="34"/></continue>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="40" pos:column="17">old_datum<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <name><name pos:line="40" pos:column="29">rxa<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">-&gt;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="34">datum<pos:position pos:line="40" pos:column="39"/></name></name></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">rxa<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">datum_len<pos:position pos:line="41" pos:column="31"/></name></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <call><name pos:line="41" pos:column="34">read_varint<pos:position pos:line="41" pos:column="45"/></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">f_in<pos:position pos:line="41" pos:column="50"/></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="52"/></expr_stmt>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">rxa<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">-&gt;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="26">name_len<pos:position pos:line="43" pos:column="34"/></name></name> <operator pos:line="43" pos:column="35">+<pos:position pos:line="43" pos:column="36"/></operator> <name><name pos:line="43" pos:column="37">rxa<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">datum_len<pos:position pos:line="43" pos:column="51"/></name></name> <operator pos:line="43" pos:column="52">&lt;<pos:position pos:line="43" pos:column="56"/></operator> <name><name pos:line="43" pos:column="54">rxa<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">name_len<pos:position pos:line="43" pos:column="67"/></name></name></expr>)<pos:position pos:line="43" pos:column="68"/></condition><then pos:line="43" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">overflow_exit<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><literal type="string" pos:line="44" pos:column="39">"recv_xattr_request"<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">rxa<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">datum<pos:position pos:line="45" pos:column="27"/></name></name> <operator pos:line="45" pos:column="28">=<pos:position pos:line="45" pos:column="29"/></operator> <call><name pos:line="45" pos:column="30">new_array<pos:position pos:line="45" pos:column="39"/></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name pos:line="45" pos:column="40">char<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="46">rxa<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">-&gt;<pos:position pos:line="45" pos:column="54"/></operator><name pos:line="45" pos:column="51">datum_len<pos:position pos:line="45" pos:column="60"/></name></name> <operator pos:line="45" pos:column="61">+<pos:position pos:line="45" pos:column="62"/></operator> <name><name pos:line="45" pos:column="63">rxa<pos:position pos:line="45" pos:column="66"/></name><operator pos:line="45" pos:column="66">-&gt;<pos:position pos:line="45" pos:column="71"/></operator><name pos:line="45" pos:column="68">name_len<pos:position pos:line="45" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="78"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><name><name pos:line="46" pos:column="22">rxa<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">datum<pos:position pos:line="46" pos:column="32"/></name></name></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="25">out_of_memory<pos:position pos:line="47" pos:column="38"/></name><argument_list pos:line="47" pos:column="38">(<argument><expr><literal type="string" pos:line="47" pos:column="39">"recv_xattr_request"<pos:position pos:line="47" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="61"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="48" pos:column="17">name<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name><name pos:line="48" pos:column="24">rxa<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">-&gt;<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="29">datum<pos:position pos:line="48" pos:column="34"/></name></name> <operator pos:line="48" pos:column="35">+<pos:position pos:line="48" pos:column="36"/></operator> <name><name pos:line="48" pos:column="37">rxa<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">-&gt;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="42">datum_len<pos:position pos:line="48" pos:column="51"/></name></name></expr>;<pos:position pos:line="48" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">memcpy<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">name<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="30">rxa<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">name<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="41">rxa<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">name_len<pos:position pos:line="49" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">rxa<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">name<pos:position pos:line="50" pos:column="26"/></name></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="29">name<pos:position pos:line="50" pos:column="33"/></name></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">free<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">old_datum<pos:position pos:line="51" pos:column="31"/></name></expr></argument>)<pos:position pos:line="51" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">read_buf<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">f_in<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="32">rxa<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-&gt;<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="37">datum<pos:position pos:line="52" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="44">rxa<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">-&gt;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="49">datum_len<pos:position pos:line="52" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="53" pos:column="17">got_xattr_data<pos:position pos:line="53" pos:column="31"/></name> <operator pos:line="53" pos:column="32">=<pos:position pos:line="53" pos:column="33"/></operator> <literal type="number" pos:line="53" pos:column="34">1<pos:position pos:line="53" pos:column="35"/></literal></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></while>

	<return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">got_xattr_data<pos:position pos:line="56" pos:column="30"/></name></expr>;<pos:position pos:line="56" pos:column="31"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

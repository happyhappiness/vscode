<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_375_rsync-2.6.2.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">inflateReset<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">z<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">z<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">z<pos:position pos:line="4" pos:column="8"/></name> <operator pos:line="4" pos:column="9">==<pos:position pos:line="4" pos:column="11"/></operator> <name pos:line="4" pos:column="12">Z_NULL<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">||<pos:position pos:line="4" pos:column="21"/></operator> <name><name pos:line="4" pos:column="22">z<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">state<pos:position pos:line="4" pos:column="30"/></name></name> <operator pos:line="4" pos:column="31">==<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">Z_NULL<pos:position pos:line="4" pos:column="40"/></name></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">Z_STREAM_ERROR<pos:position pos:line="5" pos:column="26"/></name></expr>;<pos:position pos:line="5" pos:column="27"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">z<pos:position pos:line="6" pos:column="4"/></name><operator pos:line="6" pos:column="4">-&gt;<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="6">total_in<pos:position pos:line="6" pos:column="14"/></name></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="17">z<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">total_out<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="32">0<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">z<pos:position pos:line="7" pos:column="4"/></name><operator pos:line="7" pos:column="4">-&gt;<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="6">msg<pos:position pos:line="7" pos:column="9"/></name></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">Z_NULL<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">z<pos:position pos:line="8" pos:column="4"/></name><operator pos:line="8" pos:column="4">-&gt;<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="6">state<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">mode<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <ternary><condition><expr><name><name pos:line="8" pos:column="20">z<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="23">state<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">nowrap<pos:position pos:line="8" pos:column="36"/></name></name></expr> ?<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38"> <expr><name pos:line="8" pos:column="39">BLOCKS<pos:position pos:line="8" pos:column="45"/></name></expr> <pos:position pos:line="8" pos:column="46"/></then><else pos:line="8" pos:column="46">: <expr><name pos:line="8" pos:column="48">METHOD<pos:position pos:line="8" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">inflate_blocks_reset<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name><name pos:line="9" pos:column="24">z<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">state<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">blocks<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">z<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">Z_NULL<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">Tracev<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">stderr<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">,<pos:position pos:line="10" pos:column="18"/></operator> <literal type="string" pos:line="10" pos:column="19">"inflate: reset\n"<pos:position pos:line="10" pos:column="37"/></literal><operator pos:line="10" pos:column="37">)<pos:position pos:line="10" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">Z_OK<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function_decl></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_274_rsync-3.0.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unchanged_attrs<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">fname<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="40">struct<pos:position pos:line="1" pos:column="46"/></name> <name pos:line="1" pos:column="47">file_struct<pos:position pos:line="1" pos:column="58"/></name></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">file<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">stat_x<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">sxp<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><operator pos:line="3" pos:column="5">!<pos:position pos:line="3" pos:column="6"/></operator><name pos:line="3" pos:column="6">defined<pos:position pos:line="3" pos:column="13"/></name> <name pos:line="3" pos:column="14">HAVE_LUTIMES<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">||<pos:position pos:line="3" pos:column="29"/></operator> <operator pos:line="3" pos:column="30">!<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">defined<pos:position pos:line="3" pos:column="38"/></name> <name pos:line="3" pos:column="39">HAVE_UTIMES<pos:position pos:line="3" pos:column="50"/></name></expr></cpp:if>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">S_ISLNK<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name><name pos:line="4" pos:column="21">file<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">mode<pos:position pos:line="4" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33"> <block pos:line="4" pos:column="34">{
		<empty_stmt pos:line="5" pos:column="17">;<pos:position pos:line="5" pos:column="18"/></empty_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then> <elseif pos:line="6" pos:column="11">else
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">preserve_times<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">&amp;&amp;<pos:position pos:line="8" pos:column="38"/></operator> <call><name pos:line="8" pos:column="31">cmp_time<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name><name pos:line="8" pos:column="40">sxp<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">st<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">.<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">st_mtime<pos:position pos:line="8" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="58">file<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">-&gt;<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="64">modtime<pos:position pos:line="8" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call> <operator pos:line="8" pos:column="73">!=<pos:position pos:line="8" pos:column="75"/></operator> <literal type="number" pos:line="8" pos:column="76">0<pos:position pos:line="8" pos:column="77"/></literal></expr>)<pos:position pos:line="8" pos:column="78"/></condition><then pos:line="8" pos:column="78">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if></elseif></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">preserve_perms<pos:position pos:line="11" pos:column="27"/></name></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28"> <block pos:line="11" pos:column="29">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">BITS_EQUAL<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">sxp<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">st<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">.<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="41">st_mode<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="50">file<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">mode<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">CHMOD_BITS<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="74"/></condition><then pos:line="12" pos:column="74">
			<block type="pseudo"><return pos:line="13" pos:column="25">return <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>;<pos:position pos:line="13" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <elseif pos:line="14" pos:column="11">else <if pos:line="14" pos:column="16">if <condition pos:line="14" pos:column="19">(<expr><name pos:line="14" pos:column="20">preserve_executability<pos:position pos:line="14" pos:column="42"/></name>
	 <operator pos:line="15" pos:column="10">&amp;&amp;<pos:position pos:line="15" pos:column="20"/></operator> <operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><ternary><condition><expr><name><name pos:line="15" pos:column="15">sxp<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">st<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">st_mode<pos:position pos:line="15" pos:column="30"/></name></name> <operator pos:line="15" pos:column="31">&amp;<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="33">0111<pos:position pos:line="15" pos:column="37"/></literal></expr> ?<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <expr><literal type="number" pos:line="15" pos:column="40">1<pos:position pos:line="15" pos:column="41"/></literal></expr> <pos:position pos:line="15" pos:column="42"/></then><else pos:line="15" pos:column="42">: <expr><literal type="number" pos:line="15" pos:column="44">0<pos:position pos:line="15" pos:column="45"/></literal></expr></else></ternary><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator> <operator pos:line="15" pos:column="47">^<pos:position pos:line="15" pos:column="48"/></operator> <operator pos:line="15" pos:column="49">(<pos:position pos:line="15" pos:column="50"/></operator><ternary><condition><expr><name><name pos:line="15" pos:column="50">file<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">mode<pos:position pos:line="15" pos:column="60"/></name></name> <operator pos:line="15" pos:column="61">&amp;<pos:position pos:line="15" pos:column="66"/></operator> <literal type="number" pos:line="15" pos:column="63">0111<pos:position pos:line="15" pos:column="67"/></literal></expr> ?<pos:position pos:line="15" pos:column="69"/></condition><then pos:line="15" pos:column="69"> <expr><literal type="number" pos:line="15" pos:column="70">1<pos:position pos:line="15" pos:column="71"/></literal></expr> <pos:position pos:line="15" pos:column="72"/></then><else pos:line="15" pos:column="72">: <expr><literal type="number" pos:line="15" pos:column="74">0<pos:position pos:line="15" pos:column="75"/></literal></expr></else></ternary><operator pos:line="15" pos:column="75">)<pos:position pos:line="15" pos:column="76"/></operator><operator pos:line="15" pos:column="76">)<pos:position pos:line="15" pos:column="77"/></operator></expr>)<pos:position pos:line="15" pos:column="78"/></condition><then pos:line="15" pos:column="78">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if></elseif></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">am_root<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&amp;&amp;<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="24">uid_ndx<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">&amp;&amp;<pos:position pos:line="18" pos:column="42"/></operator> <name><name pos:line="18" pos:column="35">sxp<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">st<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">.<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">st_uid<pos:position pos:line="18" pos:column="49"/></name></name> <operator pos:line="18" pos:column="50">!=<pos:position pos:line="18" pos:column="52"/></operator> <operator pos:line="18" pos:column="53">(<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="54">uid_t<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">)<pos:position pos:line="18" pos:column="60"/></operator><call><name pos:line="18" pos:column="60">F_OWNER<pos:position pos:line="18" pos:column="67"/></name><argument_list pos:line="18" pos:column="67">(<argument><expr><name pos:line="18" pos:column="68">file<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="74"/></condition><then pos:line="18" pos:column="74">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">gid_ndx<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&amp;&amp;<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="24">!<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">(<pos:position pos:line="21" pos:column="26"/></operator><name><name pos:line="21" pos:column="26">file<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">flags<pos:position pos:line="21" pos:column="37"/></name></name> <operator pos:line="21" pos:column="38">&amp;<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="40">FLAG_SKIP_GROUP<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">)<pos:position pos:line="21" pos:column="56"/></operator> <operator pos:line="21" pos:column="57">&amp;&amp;<pos:position pos:line="21" pos:column="67"/></operator> <name><name pos:line="21" pos:column="60">sxp<pos:position pos:line="21" pos:column="63"/></name><operator pos:line="21" pos:column="63">-&gt;<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="65">st<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">.<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="68">st_gid<pos:position pos:line="21" pos:column="74"/></name></name> <operator pos:line="21" pos:column="75">!=<pos:position pos:line="21" pos:column="77"/></operator> <operator pos:line="21" pos:column="78">(<pos:position pos:line="21" pos:column="79"/></operator><name pos:line="21" pos:column="79">gid_t<pos:position pos:line="21" pos:column="84"/></name><operator pos:line="21" pos:column="84">)<pos:position pos:line="21" pos:column="85"/></operator><call><name pos:line="21" pos:column="85">F_GROUP<pos:position pos:line="21" pos:column="92"/></name><argument_list pos:line="21" pos:column="92">(<argument><expr><name pos:line="21" pos:column="93">file<pos:position pos:line="21" pos:column="97"/></name></expr></argument>)<pos:position pos:line="21" pos:column="98"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="99"/></condition><then pos:line="21" pos:column="99">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></return></block></then></if>

<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">SUPPORT_ACLS<pos:position pos:line="24" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">preserve_acls<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&amp;&amp;<pos:position pos:line="25" pos:column="37"/></operator> <operator pos:line="25" pos:column="30">!<pos:position pos:line="25" pos:column="31"/></operator><call><name pos:line="25" pos:column="31">S_ISLNK<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name><name pos:line="25" pos:column="39">file<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">mode<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51"> <block pos:line="25" pos:column="52">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">ACL_READY<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><operator pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">sxp<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">get_acl<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">fname<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="40">sxp<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt></block></then></if>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">set_acl<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><name pos:line="28" pos:column="29">NULL<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">file<pos:position pos:line="28" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">sxp<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <operator pos:line="28" pos:column="46">==<pos:position pos:line="28" pos:column="48"/></operator> <literal type="number" pos:line="28" pos:column="49">0<pos:position pos:line="28" pos:column="50"/></literal></expr>)<pos:position pos:line="28" pos:column="51"/></condition><then pos:line="28" pos:column="51">
			<block type="pseudo"><return pos:line="29" pos:column="25">return <expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="32" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">preserve_xattrs<pos:position pos:line="33" pos:column="28"/></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29"> <block pos:line="33" pos:column="30">{
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">!<pos:position pos:line="34" pos:column="22"/></operator><call><name pos:line="34" pos:column="22">XATTR_READY<pos:position pos:line="34" pos:column="33"/></name><argument_list pos:line="34" pos:column="33">(<argument><expr><operator pos:line="34" pos:column="34">*<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">sxp<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="40"/></condition><then pos:line="34" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">get_xattr<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name pos:line="35" pos:column="35">fname<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">sxp<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="47"/></expr_stmt></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">xattr_diff<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">file<pos:position pos:line="36" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="38">sxp<pos:position pos:line="36" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="43">0<pos:position pos:line="36" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46">
			<block type="pseudo"><return pos:line="37" pos:column="25">return <expr><literal type="number" pos:line="37" pos:column="32">0<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="41" pos:column="9">return <expr><literal type="number" pos:line="41" pos:column="16">1<pos:position pos:line="41" pos:column="17"/></literal></expr>;<pos:position pos:line="41" pos:column="18"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

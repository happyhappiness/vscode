<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_711.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">showHelpIntro<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">poptContext<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">con<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">FILE<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type> <name pos:line="1" pos:column="50">f<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <block pos:line="1" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">int<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">len<pos:position pos:line="2" pos:column="12"/></name> <init pos:line="2" pos:column="13">= <expr><literal type="number" pos:line="2" pos:column="15">6<pos:position pos:line="2" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type> <name pos:line="3" pos:column="18">fn<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">fprintf<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">f<pos:position pos:line="5" pos:column="14"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="16">POPT_<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><literal type="string" pos:line="5" pos:column="22">"Usage:"<pos:position pos:line="5" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name><name pos:line="6" pos:column="11">con<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">flags<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="24">POPT_CONTEXT_KEEP_FIRST<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">)<pos:position pos:line="6" pos:column="48"/></operator></expr>)<pos:position pos:line="6" pos:column="49"/></condition><then pos:line="6" pos:column="49"> <block pos:line="6" pos:column="50">{
	<expr_stmt><expr><name pos:line="7" pos:column="9">fn<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">con<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">optionStack<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">argv<pos:position pos:line="7" pos:column="36"/></name><index pos:line="7" pos:column="36">[<expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr>]<pos:position pos:line="7" pos:column="39"/></index></name></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">strchr<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">fn<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="24">'/'<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="30">fn<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">=<pos:position pos:line="8" pos:column="34"/></operator> <call><name pos:line="8" pos:column="35">strchr<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><name pos:line="8" pos:column="42">fn<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="46">'/'<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call> <operator pos:line="8" pos:column="51">+<pos:position pos:line="8" pos:column="52"/></operator> <literal type="number" pos:line="8" pos:column="53">1<pos:position pos:line="8" pos:column="54"/></literal></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">fprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">f<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="20">" %s"<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">fn<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">len<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">+=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">strlen<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">fn<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call> <operator pos:line="10" pos:column="27">+<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">len<pos:position pos:line="13" pos:column="15"/></name></expr>;<pos:position pos:line="13" pos:column="16"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

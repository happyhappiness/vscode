<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_279_rsync-3.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">find_fuzzy<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">file_struct<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">file<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="49">struct<pos:position pos:line="1" pos:column="55"/></name> <name pos:line="1" pos:column="56">file_list<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">dirlist<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fname_len<pos:position pos:line="3" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">fname_suf_len<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">fname_suf<pos:position pos:line="4" pos:column="30"/></name></decl>, <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="33">fname<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name><name pos:line="4" pos:column="41">file<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">basename<pos:position pos:line="4" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">lowest_dist<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">25<pos:position pos:line="5" pos:column="32"/></literal> <operator pos:line="5" pos:column="33">&lt;&lt;<pos:position pos:line="5" pos:column="41"/></operator> <literal type="number" pos:line="5" pos:column="36">16<pos:position pos:line="5" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt> <comment type="block" pos:line="5" pos:column="40">/* ignore a distance greater than 25 */</comment>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">j<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">lowest_j<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><operator pos:line="6" pos:column="27">-<pos:position pos:line="6" pos:column="28"/></operator><literal type="number" pos:line="6" pos:column="28">1<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">fname_len<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <call><name pos:line="8" pos:column="21">strlen<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">fname<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">fname_suf<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <call><name pos:line="9" pos:column="21">find_filename_suffix<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">fname<pos:position pos:line="9" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="49">fname_len<pos:position pos:line="9" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="60">&amp;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="61">fname_suf_len<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">j<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">j<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">dirlist<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">used<pos:position pos:line="11" pos:column="38"/></name></name></expr>;<pos:position pos:line="11" pos:column="39"/></condition> <incr><expr><name pos:line="11" pos:column="40">j<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">++<pos:position pos:line="11" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="44"/></control> <block pos:line="11" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="12" pos:column="17">struct<pos:position pos:line="12" pos:column="23"/></name> <name pos:line="12" pos:column="24">file_struct<pos:position pos:line="12" pos:column="35"/></name></name> <modifier pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></modifier></type><name pos:line="12" pos:column="37">fp<pos:position pos:line="12" pos:column="39"/></name> <init pos:line="12" pos:column="40">= <expr><name><name pos:line="12" pos:column="42">dirlist<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">files<pos:position pos:line="12" pos:column="56"/></name><index pos:line="12" pos:column="56">[<expr><name pos:line="12" pos:column="57">j<pos:position pos:line="12" pos:column="58"/></name></expr>]<pos:position pos:line="12" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="12" pos:column="60"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name pos:line="13" pos:column="23">char<pos:position pos:line="13" pos:column="27"/></name> <modifier pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></modifier></type><name pos:line="13" pos:column="29">suf<pos:position pos:line="13" pos:column="32"/></name></decl>, <modifier pos:line="13" pos:column="34">*<pos:position pos:line="13" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="35">name<pos:position pos:line="13" pos:column="39"/></name></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="26">suf_len<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">uint32<pos:position pos:line="15" pos:column="23"/></name></type> <name pos:line="15" pos:column="24">dist<pos:position pos:line="15" pos:column="28"/></name></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><call><name pos:line="17" pos:column="22">S_ISREG<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name><name pos:line="17" pos:column="30">fp<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">mode<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call> <operator pos:line="17" pos:column="40">||<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="43">!<pos:position pos:line="17" pos:column="44"/></operator><call><name pos:line="17" pos:column="44">F_LENGTH<pos:position pos:line="17" pos:column="52"/></name><argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">fp<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call>
		 <operator pos:line="18" pos:column="18">||<pos:position pos:line="18" pos:column="20"/></operator> <name><name pos:line="18" pos:column="21">fp<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">flags<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="33">FLAG_FILE_SENT<pos:position pos:line="18" pos:column="47"/></name></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="21" pos:column="17">name<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">fp<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">basename<pos:position pos:line="21" pos:column="36"/></name></name></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">F_LENGTH<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">fp<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call> <operator pos:line="23" pos:column="34">==<pos:position pos:line="23" pos:column="36"/></operator> <call><name pos:line="23" pos:column="37">F_LENGTH<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">(<argument><expr><name pos:line="23" pos:column="46">file<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call>
		    <operator pos:line="24" pos:column="21">&amp;&amp;<pos:position pos:line="24" pos:column="31"/></operator> <call><name pos:line="24" pos:column="24">cmp_time<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name><name pos:line="24" pos:column="33">fp<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">modtime<pos:position pos:line="24" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="46">file<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">-&gt;<pos:position pos:line="24" pos:column="55"/></operator><name pos:line="24" pos:column="52">modtime<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call> <operator pos:line="24" pos:column="61">==<pos:position pos:line="24" pos:column="63"/></operator> <literal type="number" pos:line="24" pos:column="64">0<pos:position pos:line="24" pos:column="65"/></literal></expr>)<pos:position pos:line="24" pos:column="66"/></condition><then pos:line="24" pos:column="66"> <block pos:line="24" pos:column="67">{
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">verbose<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">&gt;<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="39">4<pos:position pos:line="25" pos:column="40"/></literal></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41"> <block pos:line="25" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="26" pos:column="33">rprintf<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">FINFO<pos:position pos:line="26" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="27" pos:column="41">"fuzzy size/modtime match for %s\n"<pos:position pos:line="27" pos:column="76"/></literal></expr></argument>,
					<argument><expr><name pos:line="28" pos:column="41">name<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if>
			<return pos:line="30" pos:column="25">return <expr><name pos:line="30" pos:column="32">j<pos:position pos:line="30" pos:column="33"/></name></expr>;<pos:position pos:line="30" pos:column="34"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="33" pos:column="17">len<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">strlen<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">name<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">suf<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">find_filename_suffix<pos:position pos:line="34" pos:column="43"/></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">name<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">len<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="55">&amp;<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="56">suf_len<pos:position pos:line="34" pos:column="63"/></name></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>

		<expr_stmt><expr><name pos:line="36" pos:column="17">dist<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <call><name pos:line="36" pos:column="24">fuzzy_distance<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">name<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">len<pos:position pos:line="36" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="50">fname<pos:position pos:line="36" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="57">fname_len<pos:position pos:line="36" pos:column="66"/></name></expr></argument>)<pos:position pos:line="36" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="68"/></expr_stmt>
		<comment type="block" pos:line="37" pos:column="17">/* Add some extra weight to how well the suffixes match. */</comment>
		<expr_stmt><expr><name pos:line="38" pos:column="17">dist<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">+=<pos:position pos:line="38" pos:column="24"/></operator> <call><name pos:line="38" pos:column="25">fuzzy_distance<pos:position pos:line="38" pos:column="39"/></name><argument_list pos:line="38" pos:column="39">(<argument><expr><name pos:line="38" pos:column="40">suf<pos:position pos:line="38" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="45">suf_len<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">fname_suf<pos:position pos:line="38" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="65">fname_suf_len<pos:position pos:line="38" pos:column="78"/></name></expr></argument>)<pos:position pos:line="38" pos:column="79"/></argument_list></call>
		      <operator pos:line="39" pos:column="23">*<pos:position pos:line="39" pos:column="24"/></operator> <literal type="number" pos:line="39" pos:column="25">10<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">verbose<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">&gt;<pos:position pos:line="40" pos:column="33"/></operator> <literal type="number" pos:line="40" pos:column="31">4<pos:position pos:line="40" pos:column="32"/></literal></expr>)<pos:position pos:line="40" pos:column="33"/></condition><then pos:line="40" pos:column="33"> <block pos:line="40" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">rprintf<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">FINFO<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="40">"fuzzy distance for %s = %d.%05d\n"<pos:position pos:line="41" pos:column="75"/></literal></expr></argument>,
				<argument><expr><name pos:line="42" pos:column="33">name<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><call pos:line="42" pos:column="39">(<name pos:line="42" pos:column="40">int<pos:position pos:line="42" pos:column="43"/></name>)<argument_list pos:line="42" pos:column="44">(<argument><expr><name pos:line="42" pos:column="45">dist<pos:position pos:line="42" pos:column="49"/></name><operator pos:line="42" pos:column="49">&gt;&gt;<pos:position pos:line="42" pos:column="54"/></operator><literal type="number" pos:line="42" pos:column="51">16<pos:position pos:line="42" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><call pos:line="42" pos:column="56">(<name pos:line="42" pos:column="57">int<pos:position pos:line="42" pos:column="60"/></name>)<argument_list pos:line="42" pos:column="61">(<argument><expr><name pos:line="42" pos:column="62">dist<pos:position pos:line="42" pos:column="66"/></name><operator pos:line="42" pos:column="66">&amp;<pos:position pos:line="42" pos:column="71"/></operator><literal type="number" pos:line="42" pos:column="67">0xFFFF<pos:position pos:line="42" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">dist<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">&lt;=<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="29">lowest_dist<pos:position pos:line="44" pos:column="40"/></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41"> <block pos:line="44" pos:column="42">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">lowest_dist<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">=<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="39">dist<pos:position pos:line="45" pos:column="43"/></name></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="46" pos:column="25">lowest_j<pos:position pos:line="46" pos:column="33"/></name> <operator pos:line="46" pos:column="34">=<pos:position pos:line="46" pos:column="35"/></operator> <name pos:line="46" pos:column="36">j<pos:position pos:line="46" pos:column="37"/></name></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
	}<pos:position pos:line="48" pos:column="10"/></block></for>

	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">lowest_j<pos:position pos:line="50" pos:column="24"/></name></expr>;<pos:position pos:line="50" pos:column="25"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

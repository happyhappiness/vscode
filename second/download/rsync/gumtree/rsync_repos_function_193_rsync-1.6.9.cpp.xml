<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_193_rsync-1.6.9.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">int<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">inflate_trees_free<pos:position pos:line="1" pos:column="29"/></name><argument_list pos:line="1" pos:column="29">(<argument><expr><name pos:line="1" pos:column="30">t<pos:position pos:line="1" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="33">z<pos:position pos:line="1" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1" pos:column="35"/></argument_list>
<name pos:line="2" pos:column="1">inflate_huft<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier><name pos:line="2" pos:column="15">t<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>        <comment type="block" pos:line="2" pos:column="25">/* table to free */</comment>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">z_stream<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">z<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>            <comment type="block" pos:line="3" pos:column="25">/* for zfree function */</comment>
<comment type="block" pos:line="4" pos:column="1">/* Free the malloc'ed tables built by huft_build(), which makes a linked
   list of the tables it made, with the links in a dummy first entry of
   each table. */</comment>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">register<pos:position pos:line="8" pos:column="11"/></specifier> <name pos:line="8" pos:column="12">inflate_huft<pos:position pos:line="8" pos:column="24"/></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">p<pos:position pos:line="8" pos:column="27"/></name></decl>, <modifier pos:line="8" pos:column="29">*<pos:position pos:line="8" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="30">q<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* Go through linked list, freeing from the malloced (t[-1]) address. */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">p<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <name pos:line="11" pos:column="7">t<pos:position pos:line="11" pos:column="8"/></name></expr>;<pos:position pos:line="11" pos:column="9"/></expr_stmt>
  <while pos:line="12" pos:column="3">while <condition pos:line="12" pos:column="9">(<expr><name pos:line="12" pos:column="10">p<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">Z_NULL<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition>
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">q<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">--<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="12">p<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">)<pos:position pos:line="14" pos:column="14"/></operator><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">next<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ZFREE<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">z<pos:position pos:line="15" pos:column="12"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="14">p<pos:position pos:line="15" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="17">p<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">word<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">Nalloc<pos:position pos:line="15" pos:column="31"/></name></name> <operator pos:line="15" pos:column="32">*<pos:position pos:line="15" pos:column="33"/></operator> <sizeof pos:line="15" pos:column="34">sizeof<argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">inflate_huft<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">p<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <name pos:line="16" pos:column="9">q<pos:position pos:line="16" pos:column="10"/></name></expr>;<pos:position pos:line="16" pos:column="11"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></while> 
  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">Z_OK<pos:position pos:line="18" pos:column="14"/></name></expr>;<pos:position pos:line="18" pos:column="15"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_337.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name><name pos:line="1" pos:column="25">argv<pos:position pos:line="1" pos:column="29"/></name><index pos:line="1" pos:column="29">[]<pos:position pos:line="1" pos:column="31"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">pid<pos:position pos:line="3" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="14">status<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><literal type="number" pos:line="3" pos:column="23">0<pos:position pos:line="3" pos:column="24"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="26">status2<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><literal type="number" pos:line="3" pos:column="36">0<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">opt<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">option_index<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">shell_cmd<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">shell_machine<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">shell_path<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">shell_user<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">p<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">f_in<pos:position pos:line="11" pos:column="13"/></name></decl>,<decl><type ref="prev"/><name pos:line="11" pos:column="14">f_out<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">file_list<pos:position pos:line="12" pos:column="21"/></name></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">flist<pos:position pos:line="12" pos:column="28"/></name></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">local_name<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">SETPGRP_VOID<pos:position pos:line="15" pos:column="20"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">setpgrp<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">()<pos:position pos:line="16" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
<cpp:else pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">else<pos:position pos:line="17" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">setpgrp<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><literal type="number" pos:line="18" pos:column="13">0<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="18" pos:column="15">0<pos:position pos:line="18" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">signal<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">SIGUSR1<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="21">sigusr1_handler<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">starttime<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">time<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">am_root<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></operator><call><name pos:line="23" pos:column="16">getuid<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">()<pos:position pos:line="23" pos:column="24"/></argument_list></call> <operator pos:line="23" pos:column="25">==<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="28">0<pos:position pos:line="23" pos:column="29"/></literal><operator pos:line="23" pos:column="29">)<pos:position pos:line="23" pos:column="30"/></operator></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* we set a 0 umask so that correct file permissions can be
       carried across */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">orig_umask<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">umask<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="number" pos:line="27" pos:column="24">0<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>

    <while pos:line="29" pos:column="5">while <condition pos:line="29" pos:column="11">(<expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">opt<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="19">getopt_long<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">argc<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="37">argv<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, 
			      <argument><expr><name pos:line="30" pos:column="31">short_options<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">long_options<pos:position pos:line="30" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="60">&amp;<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="61">option_index<pos:position pos:line="30" pos:column="73"/></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call><operator pos:line="30" pos:column="74">)<pos:position pos:line="30" pos:column="75"/></operator> 
	   <operator pos:line="31" pos:column="12">!=<pos:position pos:line="31" pos:column="14"/></operator> <operator pos:line="31" pos:column="15">-<pos:position pos:line="31" pos:column="16"/></operator><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr>)<pos:position pos:line="31" pos:column="18"/></condition> <block pos:line="31" pos:column="19">{
      <switch pos:line="32" pos:column="7">switch <condition pos:line="32" pos:column="14">(<expr><name pos:line="32" pos:column="15">opt<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition> 
	<block pos:line="33" pos:column="9">{
	<case pos:line="34" pos:column="9">case <expr><name pos:line="34" pos:column="14">OPT_VERSION<pos:position pos:line="34" pos:column="25"/></name></expr>:<pos:position pos:line="34" pos:column="26"/></case>
	  <expr_stmt><expr><call><name pos:line="35" pos:column="11">printf<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><literal type="string" pos:line="35" pos:column="18">"rsync version %s  protocol version %d\n"<pos:position pos:line="35" pos:column="59"/></literal></expr></argument>,
		 <argument><expr><name pos:line="36" pos:column="18">VERSION<pos:position pos:line="36" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="36" pos:column="26">PROTOCOL_VERSION<pos:position pos:line="36" pos:column="42"/></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="37" pos:column="11">exit_cleanup<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>

	<case pos:line="39" pos:column="9">case <expr><name pos:line="39" pos:column="14">OPT_SUFFIX<pos:position pos:line="39" pos:column="24"/></name></expr>:<pos:position pos:line="39" pos:column="25"/></case>
	  <expr_stmt><expr><name pos:line="40" pos:column="11">backup_suffix<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">optarg<pos:position pos:line="40" pos:column="33"/></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
	  <break pos:line="41" pos:column="11">break;<pos:position pos:line="41" pos:column="17"/></break>

	<case pos:line="43" pos:column="9">case <expr><name pos:line="43" pos:column="14">OPT_RSYNC_PATH<pos:position pos:line="43" pos:column="28"/></name></expr>:<pos:position pos:line="43" pos:column="29"/></case>
	  <expr_stmt><expr><name pos:line="44" pos:column="11">rsync_path<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">optarg<pos:position pos:line="44" pos:column="30"/></name></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
	  <break pos:line="45" pos:column="11">break;<pos:position pos:line="45" pos:column="17"/></break>

	<case pos:line="47" pos:column="9">case <expr><literal type="char" pos:line="47" pos:column="14">'I'<pos:position pos:line="47" pos:column="17"/></literal></expr>:<pos:position pos:line="47" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="48" pos:column="11">ignore_times<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="26">1<pos:position pos:line="48" pos:column="27"/></literal></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
	  <break pos:line="49" pos:column="11">break;<pos:position pos:line="49" pos:column="17"/></break>

	<case pos:line="51" pos:column="9">case <expr><literal type="char" pos:line="51" pos:column="14">'x'<pos:position pos:line="51" pos:column="17"/></literal></expr>:<pos:position pos:line="51" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="52" pos:column="11">one_file_system<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">=<pos:position pos:line="52" pos:column="27"/></operator><literal type="number" pos:line="52" pos:column="27">1<pos:position pos:line="52" pos:column="28"/></literal></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
	  <break pos:line="53" pos:column="11">break;<pos:position pos:line="53" pos:column="17"/></break>

	<case pos:line="55" pos:column="9">case <expr><name pos:line="55" pos:column="14">OPT_DELETE<pos:position pos:line="55" pos:column="24"/></name></expr>:<pos:position pos:line="55" pos:column="25"/></case>
	  <expr_stmt><expr><name pos:line="56" pos:column="11">delete_mode<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
	  <break pos:line="57" pos:column="11">break;<pos:position pos:line="57" pos:column="17"/></break>

	<case pos:line="59" pos:column="9">case <expr><name pos:line="59" pos:column="14">OPT_NUMERIC_IDS<pos:position pos:line="59" pos:column="29"/></name></expr>:<pos:position pos:line="59" pos:column="30"/></case>
	  <expr_stmt><expr><name pos:line="60" pos:column="11">numeric_ids<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <literal type="number" pos:line="60" pos:column="25">1<pos:position pos:line="60" pos:column="26"/></literal></expr>;<pos:position pos:line="60" pos:column="27"/></expr_stmt>
	  <break pos:line="61" pos:column="11">break;<pos:position pos:line="61" pos:column="17"/></break>

	<case pos:line="63" pos:column="9">case <expr><name pos:line="63" pos:column="14">OPT_EXCLUDE<pos:position pos:line="63" pos:column="25"/></name></expr>:<pos:position pos:line="63" pos:column="26"/></case>
	  <expr_stmt><expr><call><name pos:line="64" pos:column="11">add_exclude<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">optarg<pos:position pos:line="64" pos:column="29"/></name></expr></argument>)<pos:position pos:line="64" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="31"/></expr_stmt>
	  <break pos:line="65" pos:column="11">break;<pos:position pos:line="65" pos:column="17"/></break>

	<case pos:line="67" pos:column="9">case <expr><name pos:line="67" pos:column="14">OPT_EXCLUDE_FROM<pos:position pos:line="67" pos:column="30"/></name></expr>:<pos:position pos:line="67" pos:column="31"/></case>
	  <expr_stmt><expr><call><name pos:line="68" pos:column="11">add_exclude_file<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">optarg<pos:position pos:line="68" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="68" pos:column="35">1<pos:position pos:line="68" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
	  <break pos:line="69" pos:column="11">break;<pos:position pos:line="69" pos:column="17"/></break>

	<case pos:line="71" pos:column="9">case <expr><literal type="char" pos:line="71" pos:column="14">'h'<pos:position pos:line="71" pos:column="17"/></literal></expr>:<pos:position pos:line="71" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="72" pos:column="11">usage<pos:position pos:line="72" pos:column="16"/></name><argument_list pos:line="72" pos:column="16">(<argument><expr><name pos:line="72" pos:column="17">FINFO<pos:position pos:line="72" pos:column="22"/></name></expr></argument>)<pos:position pos:line="72" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="73" pos:column="11">exit_cleanup<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><literal type="number" pos:line="73" pos:column="24">0<pos:position pos:line="73" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt>

	<case pos:line="75" pos:column="9">case <expr><literal type="char" pos:line="75" pos:column="14">'b'<pos:position pos:line="75" pos:column="17"/></literal></expr>:<pos:position pos:line="75" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="76" pos:column="11">make_backups<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">=<pos:position pos:line="76" pos:column="24"/></operator><literal type="number" pos:line="76" pos:column="24">1<pos:position pos:line="76" pos:column="25"/></literal></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
	  <break pos:line="77" pos:column="11">break;<pos:position pos:line="77" pos:column="17"/></break>

	<case pos:line="79" pos:column="9">case <expr><literal type="char" pos:line="79" pos:column="14">'n'<pos:position pos:line="79" pos:column="17"/></literal></expr>:<pos:position pos:line="79" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="80" pos:column="11">dry_run<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator><literal type="number" pos:line="80" pos:column="19">1<pos:position pos:line="80" pos:column="20"/></literal></expr>;<pos:position pos:line="80" pos:column="21"/></expr_stmt>
	  <break pos:line="81" pos:column="11">break;<pos:position pos:line="81" pos:column="17"/></break>

	<case pos:line="83" pos:column="9">case <expr><literal type="char" pos:line="83" pos:column="14">'S'<pos:position pos:line="83" pos:column="17"/></literal></expr>:<pos:position pos:line="83" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="84" pos:column="11">sparse_files<pos:position pos:line="84" pos:column="23"/></name><operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator><literal type="number" pos:line="84" pos:column="24">1<pos:position pos:line="84" pos:column="25"/></literal></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
	  <break pos:line="85" pos:column="11">break;<pos:position pos:line="85" pos:column="17"/></break>

	<case pos:line="87" pos:column="9">case <expr><literal type="char" pos:line="87" pos:column="14">'C'<pos:position pos:line="87" pos:column="17"/></literal></expr>:<pos:position pos:line="87" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="88" pos:column="11">cvs_exclude<pos:position pos:line="88" pos:column="22"/></name><operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator><literal type="number" pos:line="88" pos:column="23">1<pos:position pos:line="88" pos:column="24"/></literal></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>
	  <break pos:line="89" pos:column="11">break;<pos:position pos:line="89" pos:column="17"/></break>

	<case pos:line="91" pos:column="9">case <expr><literal type="char" pos:line="91" pos:column="14">'u'<pos:position pos:line="91" pos:column="17"/></literal></expr>:<pos:position pos:line="91" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="92" pos:column="11">update_only<pos:position pos:line="92" pos:column="22"/></name><operator pos:line="92" pos:column="22">=<pos:position pos:line="92" pos:column="23"/></operator><literal type="number" pos:line="92" pos:column="23">1<pos:position pos:line="92" pos:column="24"/></literal></expr>;<pos:position pos:line="92" pos:column="25"/></expr_stmt>
	  <break pos:line="93" pos:column="11">break;<pos:position pos:line="93" pos:column="17"/></break>

	<case pos:line="95" pos:column="9">case <expr><literal type="char" pos:line="95" pos:column="14">'l'<pos:position pos:line="95" pos:column="17"/></literal></expr>:<pos:position pos:line="95" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="96" pos:column="11">preserve_links<pos:position pos:line="96" pos:column="25"/></name><operator pos:line="96" pos:column="25">=<pos:position pos:line="96" pos:column="26"/></operator><literal type="number" pos:line="96" pos:column="26">1<pos:position pos:line="96" pos:column="27"/></literal></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt>
	  <break pos:line="97" pos:column="11">break;<pos:position pos:line="97" pos:column="17"/></break>

	<case pos:line="99" pos:column="9">case <expr><literal type="char" pos:line="99" pos:column="14">'L'<pos:position pos:line="99" pos:column="17"/></literal></expr>:<pos:position pos:line="99" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="100" pos:column="11">copy_links<pos:position pos:line="100" pos:column="21"/></name><operator pos:line="100" pos:column="21">=<pos:position pos:line="100" pos:column="22"/></operator><literal type="number" pos:line="100" pos:column="22">1<pos:position pos:line="100" pos:column="23"/></literal></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
	  <break pos:line="101" pos:column="11">break;<pos:position pos:line="101" pos:column="17"/></break>

	<case pos:line="103" pos:column="9">case <expr><literal type="char" pos:line="103" pos:column="14">'W'<pos:position pos:line="103" pos:column="17"/></literal></expr>:<pos:position pos:line="103" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="104" pos:column="11">whole_file<pos:position pos:line="104" pos:column="21"/></name><operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator><literal type="number" pos:line="104" pos:column="22">1<pos:position pos:line="104" pos:column="23"/></literal></expr>;<pos:position pos:line="104" pos:column="24"/></expr_stmt>
	  <break pos:line="105" pos:column="11">break;<pos:position pos:line="105" pos:column="17"/></break>

	<case pos:line="107" pos:column="9">case <expr><literal type="char" pos:line="107" pos:column="14">'H'<pos:position pos:line="107" pos:column="17"/></literal></expr>:<pos:position pos:line="107" pos:column="18"/></case>
<cpp:if pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">if<pos:position pos:line="108" pos:column="4"/></cpp:directive> <expr><name pos:line="108" pos:column="5">SUPPORT_HARD_LINKS<pos:position pos:line="108" pos:column="23"/></name></expr></cpp:if>
	  <expr_stmt><expr><name pos:line="109" pos:column="11">preserve_hard_links<pos:position pos:line="109" pos:column="30"/></name><operator pos:line="109" pos:column="30">=<pos:position pos:line="109" pos:column="31"/></operator><literal type="number" pos:line="109" pos:column="31">1<pos:position pos:line="109" pos:column="32"/></literal></expr>;<pos:position pos:line="109" pos:column="33"/></expr_stmt>
<cpp:else pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">else<pos:position pos:line="110" pos:column="6"/></cpp:directive></cpp:else> 
	  <expr_stmt><expr><call><name pos:line="111" pos:column="11">fprintf<pos:position pos:line="111" pos:column="18"/></name><argument_list pos:line="111" pos:column="18">(<argument><expr><name pos:line="111" pos:column="19">FERROR<pos:position pos:line="111" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="111" pos:column="26">"ERROR: hard links not supported on this platform\n"<pos:position pos:line="111" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="80"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="112" pos:column="11">exit_cleanup<pos:position pos:line="112" pos:column="23"/></name><argument_list pos:line="112" pos:column="23">(<argument><expr><literal type="number" pos:line="112" pos:column="24">1<pos:position pos:line="112" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>
	  <break pos:line="114" pos:column="11">break;<pos:position pos:line="114" pos:column="17"/></break>

	<case pos:line="116" pos:column="9">case <expr><literal type="char" pos:line="116" pos:column="14">'p'<pos:position pos:line="116" pos:column="17"/></literal></expr>:<pos:position pos:line="116" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="117" pos:column="11">preserve_perms<pos:position pos:line="117" pos:column="25"/></name><operator pos:line="117" pos:column="25">=<pos:position pos:line="117" pos:column="26"/></operator><literal type="number" pos:line="117" pos:column="26">1<pos:position pos:line="117" pos:column="27"/></literal></expr>;<pos:position pos:line="117" pos:column="28"/></expr_stmt>
	  <break pos:line="118" pos:column="11">break;<pos:position pos:line="118" pos:column="17"/></break>

	<case pos:line="120" pos:column="9">case <expr><literal type="char" pos:line="120" pos:column="14">'o'<pos:position pos:line="120" pos:column="17"/></literal></expr>:<pos:position pos:line="120" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="121" pos:column="11">preserve_uid<pos:position pos:line="121" pos:column="23"/></name><operator pos:line="121" pos:column="23">=<pos:position pos:line="121" pos:column="24"/></operator><literal type="number" pos:line="121" pos:column="24">1<pos:position pos:line="121" pos:column="25"/></literal></expr>;<pos:position pos:line="121" pos:column="26"/></expr_stmt>
	  <break pos:line="122" pos:column="11">break;<pos:position pos:line="122" pos:column="17"/></break>

	<case pos:line="124" pos:column="9">case <expr><literal type="char" pos:line="124" pos:column="14">'g'<pos:position pos:line="124" pos:column="17"/></literal></expr>:<pos:position pos:line="124" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="125" pos:column="11">preserve_gid<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">=<pos:position pos:line="125" pos:column="24"/></operator><literal type="number" pos:line="125" pos:column="24">1<pos:position pos:line="125" pos:column="25"/></literal></expr>;<pos:position pos:line="125" pos:column="26"/></expr_stmt>
	  <break pos:line="126" pos:column="11">break;<pos:position pos:line="126" pos:column="17"/></break>

	<case pos:line="128" pos:column="9">case <expr><literal type="char" pos:line="128" pos:column="14">'D'<pos:position pos:line="128" pos:column="17"/></literal></expr>:<pos:position pos:line="128" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="129" pos:column="11">preserve_devices<pos:position pos:line="129" pos:column="27"/></name><operator pos:line="129" pos:column="27">=<pos:position pos:line="129" pos:column="28"/></operator><literal type="number" pos:line="129" pos:column="28">1<pos:position pos:line="129" pos:column="29"/></literal></expr>;<pos:position pos:line="129" pos:column="30"/></expr_stmt>
	  <break pos:line="130" pos:column="11">break;<pos:position pos:line="130" pos:column="17"/></break>

	<case pos:line="132" pos:column="9">case <expr><literal type="char" pos:line="132" pos:column="14">'t'<pos:position pos:line="132" pos:column="17"/></literal></expr>:<pos:position pos:line="132" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="133" pos:column="11">preserve_times<pos:position pos:line="133" pos:column="25"/></name><operator pos:line="133" pos:column="25">=<pos:position pos:line="133" pos:column="26"/></operator><literal type="number" pos:line="133" pos:column="26">1<pos:position pos:line="133" pos:column="27"/></literal></expr>;<pos:position pos:line="133" pos:column="28"/></expr_stmt>
	  <break pos:line="134" pos:column="11">break;<pos:position pos:line="134" pos:column="17"/></break>

	<case pos:line="136" pos:column="9">case <expr><literal type="char" pos:line="136" pos:column="14">'c'<pos:position pos:line="136" pos:column="17"/></literal></expr>:<pos:position pos:line="136" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="137" pos:column="11">always_checksum<pos:position pos:line="137" pos:column="26"/></name><operator pos:line="137" pos:column="26">=<pos:position pos:line="137" pos:column="27"/></operator><literal type="number" pos:line="137" pos:column="27">1<pos:position pos:line="137" pos:column="28"/></literal></expr>;<pos:position pos:line="137" pos:column="29"/></expr_stmt>
	  <break pos:line="138" pos:column="11">break;<pos:position pos:line="138" pos:column="17"/></break>

	<case pos:line="140" pos:column="9">case <expr><literal type="char" pos:line="140" pos:column="14">'v'<pos:position pos:line="140" pos:column="17"/></literal></expr>:<pos:position pos:line="140" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="141" pos:column="11">verbose<pos:position pos:line="141" pos:column="18"/></name><operator pos:line="141" pos:column="18">++<pos:position pos:line="141" pos:column="20"/></operator></expr>;<pos:position pos:line="141" pos:column="21"/></expr_stmt>
	  <break pos:line="142" pos:column="11">break;<pos:position pos:line="142" pos:column="17"/></break>

	<case pos:line="144" pos:column="9">case <expr><literal type="char" pos:line="144" pos:column="14">'a'<pos:position pos:line="144" pos:column="17"/></literal></expr>:<pos:position pos:line="144" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="145" pos:column="11">recurse<pos:position pos:line="145" pos:column="18"/></name><operator pos:line="145" pos:column="18">=<pos:position pos:line="145" pos:column="19"/></operator><literal type="number" pos:line="145" pos:column="19">1<pos:position pos:line="145" pos:column="20"/></literal></expr>;<pos:position pos:line="145" pos:column="21"/></expr_stmt>
<cpp:if pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">if<pos:position pos:line="146" pos:column="4"/></cpp:directive> <expr><name pos:line="146" pos:column="5">SUPPORT_LINKS<pos:position pos:line="146" pos:column="18"/></name></expr></cpp:if>
	  <expr_stmt><expr><name pos:line="147" pos:column="11">preserve_links<pos:position pos:line="147" pos:column="25"/></name><operator pos:line="147" pos:column="25">=<pos:position pos:line="147" pos:column="26"/></operator><literal type="number" pos:line="147" pos:column="26">1<pos:position pos:line="147" pos:column="27"/></literal></expr>;<pos:position pos:line="147" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">endif<pos:position pos:line="148" pos:column="7"/></cpp:directive></cpp:endif>
	  <expr_stmt><expr><name pos:line="149" pos:column="11">preserve_perms<pos:position pos:line="149" pos:column="25"/></name><operator pos:line="149" pos:column="25">=<pos:position pos:line="149" pos:column="26"/></operator><literal type="number" pos:line="149" pos:column="26">1<pos:position pos:line="149" pos:column="27"/></literal></expr>;<pos:position pos:line="149" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="150" pos:column="11">preserve_times<pos:position pos:line="150" pos:column="25"/></name><operator pos:line="150" pos:column="25">=<pos:position pos:line="150" pos:column="26"/></operator><literal type="number" pos:line="150" pos:column="26">1<pos:position pos:line="150" pos:column="27"/></literal></expr>;<pos:position pos:line="150" pos:column="28"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="151" pos:column="11">preserve_gid<pos:position pos:line="151" pos:column="23"/></name><operator pos:line="151" pos:column="23">=<pos:position pos:line="151" pos:column="24"/></operator><literal type="number" pos:line="151" pos:column="24">1<pos:position pos:line="151" pos:column="25"/></literal></expr>;<pos:position pos:line="151" pos:column="26"/></expr_stmt>
	  <if pos:line="152" pos:column="11">if <condition pos:line="152" pos:column="14">(<expr><name pos:line="152" pos:column="15">am_root<pos:position pos:line="152" pos:column="22"/></name></expr>)<pos:position pos:line="152" pos:column="23"/></condition><then pos:line="152" pos:column="23"> <block pos:line="152" pos:column="24">{
	    <expr_stmt><expr><name pos:line="153" pos:column="13">preserve_devices<pos:position pos:line="153" pos:column="29"/></name><operator pos:line="153" pos:column="29">=<pos:position pos:line="153" pos:column="30"/></operator><literal type="number" pos:line="153" pos:column="30">1<pos:position pos:line="153" pos:column="31"/></literal></expr>;<pos:position pos:line="153" pos:column="32"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="154" pos:column="13">preserve_uid<pos:position pos:line="154" pos:column="25"/></name><operator pos:line="154" pos:column="25">=<pos:position pos:line="154" pos:column="26"/></operator><literal type="number" pos:line="154" pos:column="26">1<pos:position pos:line="154" pos:column="27"/></literal></expr>;<pos:position pos:line="154" pos:column="28"/></expr_stmt>
	  }<pos:position pos:line="155" pos:column="12"/></block></then></if>
	  <break pos:line="156" pos:column="11">break;<pos:position pos:line="156" pos:column="17"/></break>

	<case pos:line="158" pos:column="9">case <expr><name pos:line="158" pos:column="14">OPT_SERVER<pos:position pos:line="158" pos:column="24"/></name></expr>:<pos:position pos:line="158" pos:column="25"/></case>
	  <expr_stmt><expr><name pos:line="159" pos:column="11">am_server<pos:position pos:line="159" pos:column="20"/></name> <operator pos:line="159" pos:column="21">=<pos:position pos:line="159" pos:column="22"/></operator> <literal type="number" pos:line="159" pos:column="23">1<pos:position pos:line="159" pos:column="24"/></literal></expr>;<pos:position pos:line="159" pos:column="25"/></expr_stmt>
	  <break pos:line="160" pos:column="11">break;<pos:position pos:line="160" pos:column="17"/></break>

	<case pos:line="162" pos:column="9">case <expr><name pos:line="162" pos:column="14">OPT_SENDER<pos:position pos:line="162" pos:column="24"/></name></expr>:<pos:position pos:line="162" pos:column="25"/></case>
	  <if pos:line="163" pos:column="11">if <condition pos:line="163" pos:column="14">(<expr><operator pos:line="163" pos:column="15">!<pos:position pos:line="163" pos:column="16"/></operator><name pos:line="163" pos:column="16">am_server<pos:position pos:line="163" pos:column="25"/></name></expr>)<pos:position pos:line="163" pos:column="26"/></condition><then pos:line="163" pos:column="26"> <block pos:line="163" pos:column="27">{
	    <expr_stmt><expr><call><name pos:line="164" pos:column="13">usage<pos:position pos:line="164" pos:column="18"/></name><argument_list pos:line="164" pos:column="18">(<argument><expr><name pos:line="164" pos:column="19">FERROR<pos:position pos:line="164" pos:column="25"/></name></expr></argument>)<pos:position pos:line="164" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="27"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="165" pos:column="13">exit_cleanup<pos:position pos:line="165" pos:column="25"/></name><argument_list pos:line="165" pos:column="25">(<argument><expr><literal type="number" pos:line="165" pos:column="26">1<pos:position pos:line="165" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="29"/></expr_stmt>
	  }<pos:position pos:line="166" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name pos:line="167" pos:column="11">sender<pos:position pos:line="167" pos:column="17"/></name> <operator pos:line="167" pos:column="18">=<pos:position pos:line="167" pos:column="19"/></operator> <literal type="number" pos:line="167" pos:column="20">1<pos:position pos:line="167" pos:column="21"/></literal></expr>;<pos:position pos:line="167" pos:column="22"/></expr_stmt>
	  <break pos:line="168" pos:column="11">break;<pos:position pos:line="168" pos:column="17"/></break>

	<case pos:line="170" pos:column="9">case <expr><literal type="char" pos:line="170" pos:column="14">'r'<pos:position pos:line="170" pos:column="17"/></literal></expr>:<pos:position pos:line="170" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="171" pos:column="11">recurse<pos:position pos:line="171" pos:column="18"/></name> <operator pos:line="171" pos:column="19">=<pos:position pos:line="171" pos:column="20"/></operator> <literal type="number" pos:line="171" pos:column="21">1<pos:position pos:line="171" pos:column="22"/></literal></expr>;<pos:position pos:line="171" pos:column="23"/></expr_stmt>
	  <break pos:line="172" pos:column="11">break;<pos:position pos:line="172" pos:column="17"/></break>

	<case pos:line="174" pos:column="9">case <expr><literal type="char" pos:line="174" pos:column="14">'R'<pos:position pos:line="174" pos:column="17"/></literal></expr>:<pos:position pos:line="174" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="175" pos:column="11">relative_paths<pos:position pos:line="175" pos:column="25"/></name> <operator pos:line="175" pos:column="26">=<pos:position pos:line="175" pos:column="27"/></operator> <literal type="number" pos:line="175" pos:column="28">1<pos:position pos:line="175" pos:column="29"/></literal></expr>;<pos:position pos:line="175" pos:column="30"/></expr_stmt>
	  <break pos:line="176" pos:column="11">break;<pos:position pos:line="176" pos:column="17"/></break>

	<case pos:line="178" pos:column="9">case <expr><literal type="char" pos:line="178" pos:column="14">'e'<pos:position pos:line="178" pos:column="17"/></literal></expr>:<pos:position pos:line="178" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="179" pos:column="11">shell_cmd<pos:position pos:line="179" pos:column="20"/></name> <operator pos:line="179" pos:column="21">=<pos:position pos:line="179" pos:column="22"/></operator> <name pos:line="179" pos:column="23">optarg<pos:position pos:line="179" pos:column="29"/></name></expr>;<pos:position pos:line="179" pos:column="30"/></expr_stmt>
	  <break pos:line="180" pos:column="11">break;<pos:position pos:line="180" pos:column="17"/></break>

	<case pos:line="182" pos:column="9">case <expr><literal type="char" pos:line="182" pos:column="14">'B'<pos:position pos:line="182" pos:column="17"/></literal></expr>:<pos:position pos:line="182" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="183" pos:column="11">block_size<pos:position pos:line="183" pos:column="21"/></name> <operator pos:line="183" pos:column="22">=<pos:position pos:line="183" pos:column="23"/></operator> <call><name pos:line="183" pos:column="24">atoi<pos:position pos:line="183" pos:column="28"/></name><argument_list pos:line="183" pos:column="28">(<argument><expr><name pos:line="183" pos:column="29">optarg<pos:position pos:line="183" pos:column="35"/></name></expr></argument>)<pos:position pos:line="183" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="37"/></expr_stmt>
	  <break pos:line="184" pos:column="11">break;<pos:position pos:line="184" pos:column="17"/></break>

	<case pos:line="186" pos:column="9">case <expr><literal type="char" pos:line="186" pos:column="14">'T'<pos:position pos:line="186" pos:column="17"/></literal></expr>:<pos:position pos:line="186" pos:column="18"/></case>
		<expr_stmt><expr><name pos:line="187" pos:column="17">tmpdir<pos:position pos:line="187" pos:column="23"/></name> <operator pos:line="187" pos:column="24">=<pos:position pos:line="187" pos:column="25"/></operator> <name pos:line="187" pos:column="26">optarg<pos:position pos:line="187" pos:column="32"/></name></expr>;<pos:position pos:line="187" pos:column="33"/></expr_stmt>
		<break pos:line="188" pos:column="17">break;<pos:position pos:line="188" pos:column="23"/></break>

        <case pos:line="190" pos:column="9">case <expr><literal type="char" pos:line="190" pos:column="14">'z'<pos:position pos:line="190" pos:column="17"/></literal></expr>:<pos:position pos:line="190" pos:column="18"/></case>
	  <expr_stmt><expr><name pos:line="191" pos:column="11">do_compression<pos:position pos:line="191" pos:column="25"/></name> <operator pos:line="191" pos:column="26">=<pos:position pos:line="191" pos:column="27"/></operator> <literal type="number" pos:line="191" pos:column="28">1<pos:position pos:line="191" pos:column="29"/></literal></expr>;<pos:position pos:line="191" pos:column="30"/></expr_stmt>
	  <break pos:line="192" pos:column="11">break;<pos:position pos:line="192" pos:column="17"/></break>

	<default pos:line="194" pos:column="9">default:<pos:position pos:line="194" pos:column="17"/></default>
	  <comment type="block" pos:line="195" pos:column="11">/* fprintf(FERROR,"bad option -%c\n",opt); */</comment>
	  <expr_stmt><expr><call><name pos:line="196" pos:column="11">exit_cleanup<pos:position pos:line="196" pos:column="23"/></name><argument_list pos:line="196" pos:column="23">(<argument><expr><literal type="number" pos:line="196" pos:column="24">1<pos:position pos:line="196" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="197" pos:column="10"/></block></switch>
    }<pos:position pos:line="198" pos:column="6"/></block></while>

    <while pos:line="200" pos:column="5">while <condition pos:line="200" pos:column="11">(<expr><name pos:line="200" pos:column="12">optind<pos:position pos:line="200" pos:column="18"/></name><operator pos:line="200" pos:column="18">--<pos:position pos:line="200" pos:column="20"/></operator></expr>)<pos:position pos:line="200" pos:column="21"/></condition> <block pos:line="200" pos:column="22">{
      <expr_stmt><expr><name pos:line="201" pos:column="7">argc<pos:position pos:line="201" pos:column="11"/></name><operator pos:line="201" pos:column="11">--<pos:position pos:line="201" pos:column="13"/></operator></expr>;<pos:position pos:line="201" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="202" pos:column="7">argv<pos:position pos:line="202" pos:column="11"/></name><operator pos:line="202" pos:column="11">++<pos:position pos:line="202" pos:column="13"/></operator></expr>;<pos:position pos:line="202" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="203" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="205" pos:column="5">signal<pos:position pos:line="205" pos:column="11"/></name><argument_list pos:line="205" pos:column="11">(<argument><expr><name pos:line="205" pos:column="12">SIGCHLD<pos:position pos:line="205" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="205" pos:column="20">SIG_IGN<pos:position pos:line="205" pos:column="27"/></name></expr></argument>)<pos:position pos:line="205" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="29"/></expr_stmt>
    <macro><name pos:line="206" pos:column="5">signal<pos:position pos:line="206" pos:column="11"/></name><argument_list pos:line="206" pos:column="11">(<argument pos:line="206" pos:column="12">SIGINT<pos:position pos:line="206" pos:column="18"/></argument>,<argument pos:line="206" pos:column="19">SIGNAL_CAST sig_int<pos:position pos:line="206" pos:column="38"/></argument>)<pos:position pos:line="206" pos:column="39"/></argument_list></macro><empty_stmt pos:line="206" pos:column="39">;<pos:position pos:line="206" pos:column="40"/></empty_stmt>
    <macro><name pos:line="207" pos:column="5">signal<pos:position pos:line="207" pos:column="11"/></name><argument_list pos:line="207" pos:column="11">(<argument pos:line="207" pos:column="12">SIGPIPE<pos:position pos:line="207" pos:column="19"/></argument>,<argument pos:line="207" pos:column="20">SIGNAL_CAST sig_int<pos:position pos:line="207" pos:column="39"/></argument>)<pos:position pos:line="207" pos:column="40"/></argument_list></macro><empty_stmt pos:line="207" pos:column="40">;<pos:position pos:line="207" pos:column="41"/></empty_stmt>
    <macro><name pos:line="208" pos:column="5">signal<pos:position pos:line="208" pos:column="11"/></name><argument_list pos:line="208" pos:column="11">(<argument pos:line="208" pos:column="12">SIGHUP<pos:position pos:line="208" pos:column="18"/></argument>,<argument pos:line="208" pos:column="19">SIGNAL_CAST sig_int<pos:position pos:line="208" pos:column="38"/></argument>)<pos:position pos:line="208" pos:column="39"/></argument_list></macro><empty_stmt pos:line="208" pos:column="39">;<pos:position pos:line="208" pos:column="40"/></empty_stmt>

    <if pos:line="210" pos:column="5">if <condition pos:line="210" pos:column="8">(<expr><name pos:line="210" pos:column="9">dry_run<pos:position pos:line="210" pos:column="16"/></name></expr>)<pos:position pos:line="210" pos:column="17"/></condition><then pos:line="210" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><name pos:line="211" pos:column="7">verbose<pos:position pos:line="211" pos:column="14"/></name> <operator pos:line="211" pos:column="15">=<pos:position pos:line="211" pos:column="16"/></operator> <call><name pos:line="211" pos:column="17">MAX<pos:position pos:line="211" pos:column="20"/></name><argument_list pos:line="211" pos:column="20">(<argument><expr><name pos:line="211" pos:column="21">verbose<pos:position pos:line="211" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="211" pos:column="29">1<pos:position pos:line="211" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="32"/></expr_stmt></block></then></if>

<cpp:ifndef pos:line="213" pos:column="1">#<cpp:directive pos:line="213" pos:column="2">ifndef<pos:position pos:line="213" pos:column="8"/></cpp:directive> <name pos:line="213" pos:column="9">SUPPORT_LINKS<pos:position pos:line="213" pos:column="22"/></name></cpp:ifndef>
    <if pos:line="214" pos:column="5">if <condition pos:line="214" pos:column="8">(<expr><operator pos:line="214" pos:column="9">!<pos:position pos:line="214" pos:column="10"/></operator><name pos:line="214" pos:column="10">am_server<pos:position pos:line="214" pos:column="19"/></name> <operator pos:line="214" pos:column="20">&amp;&amp;<pos:position pos:line="214" pos:column="30"/></operator> <name pos:line="214" pos:column="23">preserve_links<pos:position pos:line="214" pos:column="37"/></name></expr>)<pos:position pos:line="214" pos:column="38"/></condition><then pos:line="214" pos:column="38"> <block pos:line="214" pos:column="39">{
	    <expr_stmt><expr><call><name pos:line="215" pos:column="13">fprintf<pos:position pos:line="215" pos:column="20"/></name><argument_list pos:line="215" pos:column="20">(<argument><expr><name pos:line="215" pos:column="21">FERROR<pos:position pos:line="215" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="215" pos:column="28">"ERROR: symbolic links not supported\n"<pos:position pos:line="215" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="69"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="216" pos:column="13">exit_cleanup<pos:position pos:line="216" pos:column="25"/></name><argument_list pos:line="216" pos:column="25">(<argument><expr><literal type="number" pos:line="216" pos:column="26">1<pos:position pos:line="216" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="217" pos:column="6"/></block></then></if>
<cpp:endif pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">endif<pos:position pos:line="218" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="220" pos:column="5">if <condition pos:line="220" pos:column="8">(<expr><name pos:line="220" pos:column="9">am_server<pos:position pos:line="220" pos:column="18"/></name></expr>)<pos:position pos:line="220" pos:column="19"/></condition><then pos:line="220" pos:column="19"> <block pos:line="220" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="221" pos:column="7">setup_protocol<pos:position pos:line="221" pos:column="21"/></name><argument_list pos:line="221" pos:column="21">(<argument><expr><name pos:line="221" pos:column="22">STDOUT_FILENO<pos:position pos:line="221" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="221" pos:column="36">STDIN_FILENO<pos:position pos:line="221" pos:column="48"/></name></expr></argument>)<pos:position pos:line="221" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="50"/></expr_stmt>
	
      <if pos:line="223" pos:column="7">if <condition pos:line="223" pos:column="10">(<expr><name pos:line="223" pos:column="11">sender<pos:position pos:line="223" pos:column="17"/></name></expr>)<pos:position pos:line="223" pos:column="18"/></condition><then pos:line="223" pos:column="18"> <block pos:line="223" pos:column="19">{
	<expr_stmt><expr><call><name pos:line="224" pos:column="9">recv_exclude_list<pos:position pos:line="224" pos:column="26"/></name><argument_list pos:line="224" pos:column="26">(<argument><expr><name pos:line="224" pos:column="27">STDIN_FILENO<pos:position pos:line="224" pos:column="39"/></name></expr></argument>)<pos:position pos:line="224" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="41"/></expr_stmt>
	<if pos:line="225" pos:column="9">if <condition pos:line="225" pos:column="12">(<expr><name pos:line="225" pos:column="13">cvs_exclude<pos:position pos:line="225" pos:column="24"/></name></expr>)<pos:position pos:line="225" pos:column="25"/></condition><then pos:line="225" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="226" pos:column="11">add_cvs_excludes<pos:position pos:line="226" pos:column="27"/></name><argument_list pos:line="226" pos:column="27">()<pos:position pos:line="226" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="30"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="227" pos:column="9">do_server_sender<pos:position pos:line="227" pos:column="25"/></name><argument_list pos:line="227" pos:column="25">(<argument><expr><name pos:line="227" pos:column="26">argc<pos:position pos:line="227" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="227" pos:column="31">argv<pos:position pos:line="227" pos:column="35"/></name></expr></argument>)<pos:position pos:line="227" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="37"/></expr_stmt>
      }<pos:position pos:line="228" pos:column="8"/></block></then> <else pos:line="228" pos:column="9">else <block pos:line="228" pos:column="14">{
	<expr_stmt><expr><call><name pos:line="229" pos:column="9">do_server_recv<pos:position pos:line="229" pos:column="23"/></name><argument_list pos:line="229" pos:column="23">(<argument><expr><name pos:line="229" pos:column="24">argc<pos:position pos:line="229" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="229" pos:column="29">argv<pos:position pos:line="229" pos:column="33"/></name></expr></argument>)<pos:position pos:line="229" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="230" pos:column="8"/></block></else></if>
      <expr_stmt><expr><call><name pos:line="231" pos:column="7">exit_cleanup<pos:position pos:line="231" pos:column="19"/></name><argument_list pos:line="231" pos:column="19">(<argument><expr><literal type="number" pos:line="231" pos:column="20">0<pos:position pos:line="231" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="232" pos:column="6"/></block></then></if>

    <if pos:line="234" pos:column="5">if <condition pos:line="234" pos:column="8">(<expr><name pos:line="234" pos:column="9">argc<pos:position pos:line="234" pos:column="13"/></name> <operator pos:line="234" pos:column="14">&lt;<pos:position pos:line="234" pos:column="18"/></operator> <literal type="number" pos:line="234" pos:column="16">2<pos:position pos:line="234" pos:column="17"/></literal></expr>)<pos:position pos:line="234" pos:column="18"/></condition><then pos:line="234" pos:column="18"> <block pos:line="234" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="235" pos:column="7">usage<pos:position pos:line="235" pos:column="12"/></name><argument_list pos:line="235" pos:column="12">(<argument><expr><name pos:line="235" pos:column="13">FERROR<pos:position pos:line="235" pos:column="19"/></name></expr></argument>)<pos:position pos:line="235" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="236" pos:column="7">exit_cleanup<pos:position pos:line="236" pos:column="19"/></name><argument_list pos:line="236" pos:column="19">(<argument><expr><literal type="number" pos:line="236" pos:column="20">1<pos:position pos:line="236" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="237" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="239" pos:column="5">p<pos:position pos:line="239" pos:column="6"/></name> <operator pos:line="239" pos:column="7">=<pos:position pos:line="239" pos:column="8"/></operator> <call><name pos:line="239" pos:column="9">strchr<pos:position pos:line="239" pos:column="15"/></name><argument_list pos:line="239" pos:column="15">(<argument><expr><name><name pos:line="239" pos:column="16">argv<pos:position pos:line="239" pos:column="20"/></name><index pos:line="239" pos:column="20">[<expr><literal type="number" pos:line="239" pos:column="21">0<pos:position pos:line="239" pos:column="22"/></literal></expr>]<pos:position pos:line="239" pos:column="23"/></index></name></expr></argument>,<argument><expr><literal type="char" pos:line="239" pos:column="24">':'<pos:position pos:line="239" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="29"/></expr_stmt>

    <if pos:line="241" pos:column="5">if <condition pos:line="241" pos:column="8">(<expr><name pos:line="241" pos:column="9">p<pos:position pos:line="241" pos:column="10"/></name></expr>)<pos:position pos:line="241" pos:column="11"/></condition><then pos:line="241" pos:column="11"> <block pos:line="241" pos:column="12">{
      <expr_stmt><expr><name pos:line="242" pos:column="7">sender<pos:position pos:line="242" pos:column="13"/></name> <operator pos:line="242" pos:column="14">=<pos:position pos:line="242" pos:column="15"/></operator> <literal type="number" pos:line="242" pos:column="16">0<pos:position pos:line="242" pos:column="17"/></literal></expr>;<pos:position pos:line="242" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="243" pos:column="7">*<pos:position pos:line="243" pos:column="8"/></operator><name pos:line="243" pos:column="8">p<pos:position pos:line="243" pos:column="9"/></name> <operator pos:line="243" pos:column="10">=<pos:position pos:line="243" pos:column="11"/></operator> <literal type="number" pos:line="243" pos:column="12">0<pos:position pos:line="243" pos:column="13"/></literal></expr>;<pos:position pos:line="243" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="244" pos:column="7">shell_machine<pos:position pos:line="244" pos:column="20"/></name> <operator pos:line="244" pos:column="21">=<pos:position pos:line="244" pos:column="22"/></operator> <name><name pos:line="244" pos:column="23">argv<pos:position pos:line="244" pos:column="27"/></name><index pos:line="244" pos:column="27">[<expr><literal type="number" pos:line="244" pos:column="28">0<pos:position pos:line="244" pos:column="29"/></literal></expr>]<pos:position pos:line="244" pos:column="30"/></index></name></expr>;<pos:position pos:line="244" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="245" pos:column="7">shell_path<pos:position pos:line="245" pos:column="17"/></name> <operator pos:line="245" pos:column="18">=<pos:position pos:line="245" pos:column="19"/></operator> <name pos:line="245" pos:column="20">p<pos:position pos:line="245" pos:column="21"/></name><operator pos:line="245" pos:column="21">+<pos:position pos:line="245" pos:column="22"/></operator><literal type="number" pos:line="245" pos:column="22">1<pos:position pos:line="245" pos:column="23"/></literal></expr>;<pos:position pos:line="245" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name pos:line="246" pos:column="7">argc<pos:position pos:line="246" pos:column="11"/></name><operator pos:line="246" pos:column="11">--<pos:position pos:line="246" pos:column="13"/></operator></expr>;<pos:position pos:line="246" pos:column="14"/></expr_stmt>
      <expr_stmt><expr><name pos:line="247" pos:column="7">argv<pos:position pos:line="247" pos:column="11"/></name><operator pos:line="247" pos:column="11">++<pos:position pos:line="247" pos:column="13"/></operator></expr>;<pos:position pos:line="247" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="248" pos:column="6"/></block></then> <else pos:line="248" pos:column="7">else <block pos:line="248" pos:column="12">{
      <expr_stmt><expr><name pos:line="249" pos:column="7">sender<pos:position pos:line="249" pos:column="13"/></name> <operator pos:line="249" pos:column="14">=<pos:position pos:line="249" pos:column="15"/></operator> <literal type="number" pos:line="249" pos:column="16">1<pos:position pos:line="249" pos:column="17"/></literal></expr>;<pos:position pos:line="249" pos:column="18"/></expr_stmt>

      <expr_stmt><expr><name pos:line="251" pos:column="7">p<pos:position pos:line="251" pos:column="8"/></name> <operator pos:line="251" pos:column="9">=<pos:position pos:line="251" pos:column="10"/></operator> <call><name pos:line="251" pos:column="11">strchr<pos:position pos:line="251" pos:column="17"/></name><argument_list pos:line="251" pos:column="17">(<argument><expr><name><name pos:line="251" pos:column="18">argv<pos:position pos:line="251" pos:column="22"/></name><index pos:line="251" pos:column="22">[<expr><name pos:line="251" pos:column="23">argc<pos:position pos:line="251" pos:column="27"/></name><operator pos:line="251" pos:column="27">-<pos:position pos:line="251" pos:column="28"/></operator><literal type="number" pos:line="251" pos:column="28">1<pos:position pos:line="251" pos:column="29"/></literal></expr>]<pos:position pos:line="251" pos:column="30"/></index></name></expr></argument>,<argument><expr><literal type="char" pos:line="251" pos:column="31">':'<pos:position pos:line="251" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="36"/></expr_stmt>
      <if pos:line="252" pos:column="7">if <condition pos:line="252" pos:column="10">(<expr><operator pos:line="252" pos:column="11">!<pos:position pos:line="252" pos:column="12"/></operator><name pos:line="252" pos:column="12">p<pos:position pos:line="252" pos:column="13"/></name></expr>)<pos:position pos:line="252" pos:column="14"/></condition><then pos:line="252" pos:column="14"> <block pos:line="252" pos:column="15">{
	<expr_stmt><expr><name pos:line="253" pos:column="9">local_server<pos:position pos:line="253" pos:column="21"/></name> <operator pos:line="253" pos:column="22">=<pos:position pos:line="253" pos:column="23"/></operator> <literal type="number" pos:line="253" pos:column="24">1<pos:position pos:line="253" pos:column="25"/></literal></expr>;<pos:position pos:line="253" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="254" pos:column="8"/></block></then></if>

      <if pos:line="256" pos:column="7">if <condition pos:line="256" pos:column="10">(<expr><name pos:line="256" pos:column="11">local_server<pos:position pos:line="256" pos:column="23"/></name></expr>)<pos:position pos:line="256" pos:column="24"/></condition><then pos:line="256" pos:column="24"> <block pos:line="256" pos:column="25">{
	<expr_stmt><expr><name pos:line="257" pos:column="9">shell_machine<pos:position pos:line="257" pos:column="22"/></name> <operator pos:line="257" pos:column="23">=<pos:position pos:line="257" pos:column="24"/></operator> <name pos:line="257" pos:column="25">NULL<pos:position pos:line="257" pos:column="29"/></name></expr>;<pos:position pos:line="257" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="258" pos:column="9">shell_path<pos:position pos:line="258" pos:column="19"/></name> <operator pos:line="258" pos:column="20">=<pos:position pos:line="258" pos:column="21"/></operator> <name><name pos:line="258" pos:column="22">argv<pos:position pos:line="258" pos:column="26"/></name><index pos:line="258" pos:column="26">[<expr><name pos:line="258" pos:column="27">argc<pos:position pos:line="258" pos:column="31"/></name><operator pos:line="258" pos:column="31">-<pos:position pos:line="258" pos:column="32"/></operator><literal type="number" pos:line="258" pos:column="32">1<pos:position pos:line="258" pos:column="33"/></literal></expr>]<pos:position pos:line="258" pos:column="34"/></index></name></expr>;<pos:position pos:line="258" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="259" pos:column="8"/></block></then> <else pos:line="259" pos:column="9">else <block pos:line="259" pos:column="14">{
	<expr_stmt><expr><operator pos:line="260" pos:column="9">*<pos:position pos:line="260" pos:column="10"/></operator><name pos:line="260" pos:column="10">p<pos:position pos:line="260" pos:column="11"/></name> <operator pos:line="260" pos:column="12">=<pos:position pos:line="260" pos:column="13"/></operator> <literal type="number" pos:line="260" pos:column="14">0<pos:position pos:line="260" pos:column="15"/></literal></expr>;<pos:position pos:line="260" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="261" pos:column="9">shell_machine<pos:position pos:line="261" pos:column="22"/></name> <operator pos:line="261" pos:column="23">=<pos:position pos:line="261" pos:column="24"/></operator> <name><name pos:line="261" pos:column="25">argv<pos:position pos:line="261" pos:column="29"/></name><index pos:line="261" pos:column="29">[<expr><name pos:line="261" pos:column="30">argc<pos:position pos:line="261" pos:column="34"/></name><operator pos:line="261" pos:column="34">-<pos:position pos:line="261" pos:column="35"/></operator><literal type="number" pos:line="261" pos:column="35">1<pos:position pos:line="261" pos:column="36"/></literal></expr>]<pos:position pos:line="261" pos:column="37"/></index></name></expr>;<pos:position pos:line="261" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="262" pos:column="9">shell_path<pos:position pos:line="262" pos:column="19"/></name> <operator pos:line="262" pos:column="20">=<pos:position pos:line="262" pos:column="21"/></operator> <name pos:line="262" pos:column="22">p<pos:position pos:line="262" pos:column="23"/></name><operator pos:line="262" pos:column="23">+<pos:position pos:line="262" pos:column="24"/></operator><literal type="number" pos:line="262" pos:column="24">1<pos:position pos:line="262" pos:column="25"/></literal></expr>;<pos:position pos:line="262" pos:column="26"/></expr_stmt>
      }<pos:position pos:line="263" pos:column="8"/></block></else></if>
      <expr_stmt><expr><name pos:line="264" pos:column="7">argc<pos:position pos:line="264" pos:column="11"/></name><operator pos:line="264" pos:column="11">--<pos:position pos:line="264" pos:column="13"/></operator></expr>;<pos:position pos:line="264" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="265" pos:column="6"/></block></else></if>

    <if pos:line="267" pos:column="5">if <condition pos:line="267" pos:column="8">(<expr><name pos:line="267" pos:column="9">shell_machine<pos:position pos:line="267" pos:column="22"/></name></expr>)<pos:position pos:line="267" pos:column="23"/></condition><then pos:line="267" pos:column="23"> <block pos:line="267" pos:column="24">{
      <expr_stmt><expr><name pos:line="268" pos:column="7">p<pos:position pos:line="268" pos:column="8"/></name> <operator pos:line="268" pos:column="9">=<pos:position pos:line="268" pos:column="10"/></operator> <call><name pos:line="268" pos:column="11">strchr<pos:position pos:line="268" pos:column="17"/></name><argument_list pos:line="268" pos:column="17">(<argument><expr><name pos:line="268" pos:column="18">shell_machine<pos:position pos:line="268" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="268" pos:column="32">'@'<pos:position pos:line="268" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="268" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="37"/></expr_stmt>
      <if pos:line="269" pos:column="7">if <condition pos:line="269" pos:column="10">(<expr><name pos:line="269" pos:column="11">p<pos:position pos:line="269" pos:column="12"/></name></expr>)<pos:position pos:line="269" pos:column="13"/></condition><then pos:line="269" pos:column="13"> <block pos:line="269" pos:column="14">{
	<expr_stmt><expr><operator pos:line="270" pos:column="9">*<pos:position pos:line="270" pos:column="10"/></operator><name pos:line="270" pos:column="10">p<pos:position pos:line="270" pos:column="11"/></name> <operator pos:line="270" pos:column="12">=<pos:position pos:line="270" pos:column="13"/></operator> <literal type="number" pos:line="270" pos:column="14">0<pos:position pos:line="270" pos:column="15"/></literal></expr>;<pos:position pos:line="270" pos:column="16"/></expr_stmt>
	<expr_stmt><expr><name pos:line="271" pos:column="9">shell_user<pos:position pos:line="271" pos:column="19"/></name> <operator pos:line="271" pos:column="20">=<pos:position pos:line="271" pos:column="21"/></operator> <name pos:line="271" pos:column="22">shell_machine<pos:position pos:line="271" pos:column="35"/></name></expr>;<pos:position pos:line="271" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name pos:line="272" pos:column="9">shell_machine<pos:position pos:line="272" pos:column="22"/></name> <operator pos:line="272" pos:column="23">=<pos:position pos:line="272" pos:column="24"/></operator> <name pos:line="272" pos:column="25">p<pos:position pos:line="272" pos:column="26"/></name><operator pos:line="272" pos:column="26">+<pos:position pos:line="272" pos:column="27"/></operator><literal type="number" pos:line="272" pos:column="27">1<pos:position pos:line="272" pos:column="28"/></literal></expr>;<pos:position pos:line="272" pos:column="29"/></expr_stmt>
      }<pos:position pos:line="273" pos:column="8"/></block></then></if>
    }<pos:position pos:line="274" pos:column="6"/></block></then></if>

    <if pos:line="276" pos:column="5">if <condition pos:line="276" pos:column="8">(<expr><name pos:line="276" pos:column="9">verbose<pos:position pos:line="276" pos:column="16"/></name> <operator pos:line="276" pos:column="17">&gt;<pos:position pos:line="276" pos:column="21"/></operator> <literal type="number" pos:line="276" pos:column="19">3<pos:position pos:line="276" pos:column="20"/></literal></expr>)<pos:position pos:line="276" pos:column="21"/></condition><then pos:line="276" pos:column="21"> <block pos:line="276" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="277" pos:column="7">fprintf<pos:position pos:line="277" pos:column="14"/></name><argument_list pos:line="277" pos:column="14">(<argument><expr><name pos:line="277" pos:column="15">FERROR<pos:position pos:line="277" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="277" pos:column="22">"cmd=%s machine=%s user=%s path=%s\n"<pos:position pos:line="277" pos:column="59"/></literal></expr></argument>,
	      <argument><expr><ternary><condition><expr><name pos:line="278" pos:column="15">shell_cmd<pos:position pos:line="278" pos:column="24"/></name></expr>?<pos:position pos:line="278" pos:column="25"/></condition><then><expr><name pos:line="278" pos:column="25">shell_cmd<pos:position pos:line="278" pos:column="34"/></name></expr></then><else pos:line="278" pos:column="34">:<expr><literal type="string" pos:line="278" pos:column="35">""<pos:position pos:line="278" pos:column="37"/></literal></expr></else></ternary></expr></argument>,
	      <argument><expr><ternary><condition><expr><name pos:line="279" pos:column="15">shell_machine<pos:position pos:line="279" pos:column="28"/></name></expr>?<pos:position pos:line="279" pos:column="29"/></condition><then><expr><name pos:line="279" pos:column="29">shell_machine<pos:position pos:line="279" pos:column="42"/></name></expr></then><else pos:line="279" pos:column="42">:<expr><literal type="string" pos:line="279" pos:column="43">""<pos:position pos:line="279" pos:column="45"/></literal></expr></else></ternary></expr></argument>,
	      <argument><expr><ternary><condition><expr><name pos:line="280" pos:column="15">shell_user<pos:position pos:line="280" pos:column="25"/></name></expr>?<pos:position pos:line="280" pos:column="26"/></condition><then><expr><name pos:line="280" pos:column="26">shell_user<pos:position pos:line="280" pos:column="36"/></name></expr></then><else pos:line="280" pos:column="36">:<expr><literal type="string" pos:line="280" pos:column="37">""<pos:position pos:line="280" pos:column="39"/></literal></expr></else></ternary></expr></argument>,
	      <argument><expr><ternary><condition><expr><name pos:line="281" pos:column="15">shell_path<pos:position pos:line="281" pos:column="25"/></name></expr>?<pos:position pos:line="281" pos:column="26"/></condition><then><expr><name pos:line="281" pos:column="26">shell_path<pos:position pos:line="281" pos:column="36"/></name></expr></then><else pos:line="281" pos:column="36">:<expr><literal type="string" pos:line="281" pos:column="37">""<pos:position pos:line="281" pos:column="39"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="281" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="282" pos:column="6"/></block></then></if>
    
    <if pos:line="284" pos:column="5">if <condition pos:line="284" pos:column="8">(<expr><operator pos:line="284" pos:column="9">!<pos:position pos:line="284" pos:column="10"/></operator><name pos:line="284" pos:column="10">sender<pos:position pos:line="284" pos:column="16"/></name> <operator pos:line="284" pos:column="17">&amp;&amp;<pos:position pos:line="284" pos:column="27"/></operator> <name pos:line="284" pos:column="20">argc<pos:position pos:line="284" pos:column="24"/></name> <operator pos:line="284" pos:column="25">!=<pos:position pos:line="284" pos:column="27"/></operator> <literal type="number" pos:line="284" pos:column="28">1<pos:position pos:line="284" pos:column="29"/></literal></expr>)<pos:position pos:line="284" pos:column="30"/></condition><then pos:line="284" pos:column="30"> <block pos:line="284" pos:column="31">{
      <expr_stmt><expr><call><name pos:line="285" pos:column="7">usage<pos:position pos:line="285" pos:column="12"/></name><argument_list pos:line="285" pos:column="12">(<argument><expr><name pos:line="285" pos:column="13">FERROR<pos:position pos:line="285" pos:column="19"/></name></expr></argument>)<pos:position pos:line="285" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="286" pos:column="7">exit_cleanup<pos:position pos:line="286" pos:column="19"/></name><argument_list pos:line="286" pos:column="19">(<argument><expr><literal type="number" pos:line="286" pos:column="20">1<pos:position pos:line="286" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="287" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="289" pos:column="5">pid<pos:position pos:line="289" pos:column="8"/></name> <operator pos:line="289" pos:column="9">=<pos:position pos:line="289" pos:column="10"/></operator> <call><name pos:line="289" pos:column="11">do_cmd<pos:position pos:line="289" pos:column="17"/></name><argument_list pos:line="289" pos:column="17">(<argument><expr><name pos:line="289" pos:column="18">shell_cmd<pos:position pos:line="289" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="289" pos:column="28">shell_machine<pos:position pos:line="289" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="289" pos:column="42">shell_user<pos:position pos:line="289" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="289" pos:column="53">shell_path<pos:position pos:line="289" pos:column="63"/></name></expr></argument>,<argument><expr><operator pos:line="289" pos:column="64">&amp;<pos:position pos:line="289" pos:column="69"/></operator><name pos:line="289" pos:column="65">f_in<pos:position pos:line="289" pos:column="69"/></name></expr></argument>,<argument><expr><operator pos:line="289" pos:column="70">&amp;<pos:position pos:line="289" pos:column="75"/></operator><name pos:line="289" pos:column="71">f_out<pos:position pos:line="289" pos:column="76"/></name></expr></argument>)<pos:position pos:line="289" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="78"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="291" pos:column="5">setup_protocol<pos:position pos:line="291" pos:column="19"/></name><argument_list pos:line="291" pos:column="19">(<argument><expr><name pos:line="291" pos:column="20">f_out<pos:position pos:line="291" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="291" pos:column="26">f_in<pos:position pos:line="291" pos:column="30"/></name></expr></argument>)<pos:position pos:line="291" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="32"/></expr_stmt>

<cpp:if pos:line="293" pos:column="1">#<cpp:directive pos:line="293" pos:column="2">if<pos:position pos:line="293" pos:column="4"/></cpp:directive> <expr><name pos:line="293" pos:column="5">HAVE_SETLINEBUF<pos:position pos:line="293" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="294" pos:column="5">setlinebuf<pos:position pos:line="294" pos:column="15"/></name><argument_list pos:line="294" pos:column="15">(<argument><expr><name pos:line="294" pos:column="16">FINFO<pos:position pos:line="294" pos:column="21"/></name></expr></argument>)<pos:position pos:line="294" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="295" pos:column="5">setlinebuf<pos:position pos:line="295" pos:column="15"/></name><argument_list pos:line="295" pos:column="15">(<argument><expr><name pos:line="295" pos:column="16">FERROR<pos:position pos:line="295" pos:column="22"/></name></expr></argument>)<pos:position pos:line="295" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="296" pos:column="1">#<cpp:directive pos:line="296" pos:column="2">endif<pos:position pos:line="296" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="298" pos:column="5">if <condition pos:line="298" pos:column="8">(<expr><name pos:line="298" pos:column="9">verbose<pos:position pos:line="298" pos:column="16"/></name> <operator pos:line="298" pos:column="17">&gt;<pos:position pos:line="298" pos:column="21"/></operator> <literal type="number" pos:line="298" pos:column="19">3<pos:position pos:line="298" pos:column="20"/></literal></expr>)<pos:position pos:line="298" pos:column="21"/></condition><then pos:line="298" pos:column="21"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="299" pos:column="7">fprintf<pos:position pos:line="299" pos:column="14"/></name><argument_list pos:line="299" pos:column="14">(<argument><expr><name pos:line="299" pos:column="15">FERROR<pos:position pos:line="299" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="299" pos:column="22">"parent=%d child=%d sender=%d recurse=%d\n"<pos:position pos:line="299" pos:column="65"/></literal></expr></argument>,
	      <argument><expr><operator pos:line="300" pos:column="15">(<pos:position pos:line="300" pos:column="16"/></operator><name pos:line="300" pos:column="16">int<pos:position pos:line="300" pos:column="19"/></name><operator pos:line="300" pos:column="19">)<pos:position pos:line="300" pos:column="20"/></operator><call><name pos:line="300" pos:column="20">getpid<pos:position pos:line="300" pos:column="26"/></name><argument_list pos:line="300" pos:column="26">()<pos:position pos:line="300" pos:column="28"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="300" pos:column="29">pid<pos:position pos:line="300" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="300" pos:column="33">sender<pos:position pos:line="300" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="300" pos:column="40">recurse<pos:position pos:line="300" pos:column="47"/></name></expr></argument>)<pos:position pos:line="300" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="49"/></expr_stmt></block></then></if>

    <if pos:line="302" pos:column="5">if <condition pos:line="302" pos:column="8">(<expr><name pos:line="302" pos:column="9">sender<pos:position pos:line="302" pos:column="15"/></name></expr>)<pos:position pos:line="302" pos:column="16"/></condition><then pos:line="302" pos:column="16"> <block pos:line="302" pos:column="17">{
      <if pos:line="303" pos:column="7">if <condition pos:line="303" pos:column="10">(<expr><name pos:line="303" pos:column="11">cvs_exclude<pos:position pos:line="303" pos:column="22"/></name></expr>)<pos:position pos:line="303" pos:column="23"/></condition><then pos:line="303" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="304" pos:column="9">add_cvs_excludes<pos:position pos:line="304" pos:column="25"/></name><argument_list pos:line="304" pos:column="25">()<pos:position pos:line="304" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="28"/></expr_stmt></block></then></if>
      <if pos:line="305" pos:column="7">if <condition pos:line="305" pos:column="10">(<expr><name pos:line="305" pos:column="11">delete_mode<pos:position pos:line="305" pos:column="22"/></name></expr>)<pos:position pos:line="305" pos:column="23"/></condition><then pos:line="305" pos:column="23"> 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="306" pos:column="9">send_exclude_list<pos:position pos:line="306" pos:column="26"/></name><argument_list pos:line="306" pos:column="26">(<argument><expr><name pos:line="306" pos:column="27">f_out<pos:position pos:line="306" pos:column="32"/></name></expr></argument>)<pos:position pos:line="306" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="34"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="307" pos:column="7">flist<pos:position pos:line="307" pos:column="12"/></name> <operator pos:line="307" pos:column="13">=<pos:position pos:line="307" pos:column="14"/></operator> <call><name pos:line="307" pos:column="15">send_file_list<pos:position pos:line="307" pos:column="29"/></name><argument_list pos:line="307" pos:column="29">(<argument><expr><name pos:line="307" pos:column="30">f_out<pos:position pos:line="307" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="307" pos:column="36">argc<pos:position pos:line="307" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="307" pos:column="41">argv<pos:position pos:line="307" pos:column="45"/></name></expr></argument>)<pos:position pos:line="307" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="47"/></expr_stmt>
      <if pos:line="308" pos:column="7">if <condition pos:line="308" pos:column="10">(<expr><name pos:line="308" pos:column="11">verbose<pos:position pos:line="308" pos:column="18"/></name> <operator pos:line="308" pos:column="19">&gt;<pos:position pos:line="308" pos:column="23"/></operator> <literal type="number" pos:line="308" pos:column="21">3<pos:position pos:line="308" pos:column="22"/></literal></expr>)<pos:position pos:line="308" pos:column="23"/></condition><then pos:line="308" pos:column="23"> 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="309" pos:column="9">fprintf<pos:position pos:line="309" pos:column="16"/></name><argument_list pos:line="309" pos:column="16">(<argument><expr><name pos:line="309" pos:column="17">FERROR<pos:position pos:line="309" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="309" pos:column="24">"file list sent\n"<pos:position pos:line="309" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="309" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="44"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="310" pos:column="7">send_files<pos:position pos:line="310" pos:column="17"/></name><argument_list pos:line="310" pos:column="17">(<argument><expr><name pos:line="310" pos:column="18">flist<pos:position pos:line="310" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="310" pos:column="24">f_out<pos:position pos:line="310" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="310" pos:column="30">f_in<pos:position pos:line="310" pos:column="34"/></name></expr></argument>)<pos:position pos:line="310" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="36"/></expr_stmt>
      <if pos:line="311" pos:column="7">if <condition pos:line="311" pos:column="10">(<expr><name pos:line="311" pos:column="11">verbose<pos:position pos:line="311" pos:column="18"/></name> <operator pos:line="311" pos:column="19">&gt;<pos:position pos:line="311" pos:column="23"/></operator> <literal type="number" pos:line="311" pos:column="21">3<pos:position pos:line="311" pos:column="22"/></literal></expr>)<pos:position pos:line="311" pos:column="23"/></condition><then pos:line="311" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="312" pos:column="9">fprintf<pos:position pos:line="312" pos:column="16"/></name><argument_list pos:line="312" pos:column="16">(<argument><expr><name pos:line="312" pos:column="17">FERROR<pos:position pos:line="312" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="312" pos:column="24">"waiting on %d\n"<pos:position pos:line="312" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="312" pos:column="42">pid<pos:position pos:line="312" pos:column="45"/></name></expr></argument>)<pos:position pos:line="312" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="312" pos:column="47"/></expr_stmt></block></then></if>
      <expr_stmt><expr><call><name pos:line="313" pos:column="7">waitpid<pos:position pos:line="313" pos:column="14"/></name><argument_list pos:line="313" pos:column="14">(<argument><expr><name pos:line="313" pos:column="15">pid<pos:position pos:line="313" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="313" pos:column="20">&amp;<pos:position pos:line="313" pos:column="25"/></operator><name pos:line="313" pos:column="21">status<pos:position pos:line="313" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="313" pos:column="29">0<pos:position pos:line="313" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="313" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="314" pos:column="7">report<pos:position pos:line="314" pos:column="13"/></name><argument_list pos:line="314" pos:column="13">(<argument><expr><operator pos:line="314" pos:column="14">-<pos:position pos:line="314" pos:column="15"/></operator><literal type="number" pos:line="314" pos:column="15">1<pos:position pos:line="314" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="315" pos:column="7">exit_cleanup<pos:position pos:line="315" pos:column="19"/></name><argument_list pos:line="315" pos:column="19">(<argument><expr><name pos:line="315" pos:column="20">status<pos:position pos:line="315" pos:column="26"/></name></expr></argument>)<pos:position pos:line="315" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="316" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="318" pos:column="5">send_exclude_list<pos:position pos:line="318" pos:column="22"/></name><argument_list pos:line="318" pos:column="22">(<argument><expr><name pos:line="318" pos:column="23">f_out<pos:position pos:line="318" pos:column="28"/></name></expr></argument>)<pos:position pos:line="318" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="320" pos:column="5">flist<pos:position pos:line="320" pos:column="10"/></name> <operator pos:line="320" pos:column="11">=<pos:position pos:line="320" pos:column="12"/></operator> <call><name pos:line="320" pos:column="13">recv_file_list<pos:position pos:line="320" pos:column="27"/></name><argument_list pos:line="320" pos:column="27">(<argument><expr><name pos:line="320" pos:column="28">f_in<pos:position pos:line="320" pos:column="32"/></name></expr></argument>)<pos:position pos:line="320" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="34"/></expr_stmt>
    <if pos:line="321" pos:column="5">if <condition pos:line="321" pos:column="8">(<expr><operator pos:line="321" pos:column="9">!<pos:position pos:line="321" pos:column="10"/></operator><name pos:line="321" pos:column="10">flist<pos:position pos:line="321" pos:column="15"/></name> <operator pos:line="321" pos:column="16">||<pos:position pos:line="321" pos:column="18"/></operator> <name><name pos:line="321" pos:column="19">flist<pos:position pos:line="321" pos:column="24"/></name><operator pos:line="321" pos:column="24">-&gt;<pos:position pos:line="321" pos:column="29"/></operator><name pos:line="321" pos:column="26">count<pos:position pos:line="321" pos:column="31"/></name></name> <operator pos:line="321" pos:column="32">==<pos:position pos:line="321" pos:column="34"/></operator> <literal type="number" pos:line="321" pos:column="35">0<pos:position pos:line="321" pos:column="36"/></literal></expr>)<pos:position pos:line="321" pos:column="37"/></condition><then pos:line="321" pos:column="37"> <block pos:line="321" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="322" pos:column="7">fprintf<pos:position pos:line="322" pos:column="14"/></name><argument_list pos:line="322" pos:column="14">(<argument><expr><name pos:line="322" pos:column="15">FERROR<pos:position pos:line="322" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="322" pos:column="22">"nothing to do\n"<pos:position pos:line="322" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="323" pos:column="7">exit_cleanup<pos:position pos:line="323" pos:column="19"/></name><argument_list pos:line="323" pos:column="19">(<argument><expr><literal type="number" pos:line="323" pos:column="20">0<pos:position pos:line="323" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="323" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="324" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="326" pos:column="5">local_name<pos:position pos:line="326" pos:column="15"/></name> <operator pos:line="326" pos:column="16">=<pos:position pos:line="326" pos:column="17"/></operator> <call><name pos:line="326" pos:column="18">get_local_name<pos:position pos:line="326" pos:column="32"/></name><argument_list pos:line="326" pos:column="32">(<argument><expr><name pos:line="326" pos:column="33">flist<pos:position pos:line="326" pos:column="38"/></name></expr></argument>,<argument><expr><name><name pos:line="326" pos:column="39">argv<pos:position pos:line="326" pos:column="43"/></name><index pos:line="326" pos:column="43">[<expr><literal type="number" pos:line="326" pos:column="44">0<pos:position pos:line="326" pos:column="45"/></literal></expr>]<pos:position pos:line="326" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="326" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name pos:line="328" pos:column="5">status2<pos:position pos:line="328" pos:column="12"/></name> <operator pos:line="328" pos:column="13">=<pos:position pos:line="328" pos:column="14"/></operator> <call><name pos:line="328" pos:column="15">do_recv<pos:position pos:line="328" pos:column="22"/></name><argument_list pos:line="328" pos:column="22">(<argument><expr><name pos:line="328" pos:column="23">f_in<pos:position pos:line="328" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="328" pos:column="28">f_out<pos:position pos:line="328" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="328" pos:column="34">flist<pos:position pos:line="328" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="328" pos:column="40">local_name<pos:position pos:line="328" pos:column="50"/></name></expr></argument>)<pos:position pos:line="328" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="330" pos:column="5">report<pos:position pos:line="330" pos:column="11"/></name><argument_list pos:line="330" pos:column="11">(<argument><expr><name pos:line="330" pos:column="12">f_in<pos:position pos:line="330" pos:column="16"/></name></expr></argument>)<pos:position pos:line="330" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="332" pos:column="5">waitpid<pos:position pos:line="332" pos:column="12"/></name><argument_list pos:line="332" pos:column="12">(<argument><expr><name pos:line="332" pos:column="13">pid<pos:position pos:line="332" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="332" pos:column="18">&amp;<pos:position pos:line="332" pos:column="23"/></operator><name pos:line="332" pos:column="19">status<pos:position pos:line="332" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="332" pos:column="27">0<pos:position pos:line="332" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="332" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="30"/></expr_stmt>

    <return pos:line="334" pos:column="5">return <expr><name pos:line="334" pos:column="12">status<pos:position pos:line="334" pos:column="18"/></name> <operator pos:line="334" pos:column="19">|<pos:position pos:line="334" pos:column="20"/></operator> <name pos:line="334" pos:column="21">status2<pos:position pos:line="334" pos:column="28"/></name></expr>;<pos:position pos:line="334" pos:column="29"/></return>
}<pos:position pos:line="335" pos:column="2"/></block></function></unit>

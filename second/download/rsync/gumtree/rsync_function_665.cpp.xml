<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_665.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">send_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">argc<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name><name pos:line="1" pos:column="55">argv<pos:position pos:line="1" pos:column="59"/></name><index pos:line="1" pos:column="59">[]<pos:position pos:line="1" pos:column="61"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="15">l<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">STRUCT_STAT<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>,<modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">dir<pos:position pos:line="5" pos:column="21"/></name></decl>,<modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="23">olddir<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">lastpath<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><name pos:line="6" pos:column="23">MAXPATHLEN<pos:position pos:line="6" pos:column="33"/></name></expr>]<pos:position pos:line="6" pos:column="34"/></index></name><init pos:line="6" pos:column="34">=<expr><literal type="string" pos:line="6" pos:column="35">""<pos:position pos:line="6" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">file_list<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">flist<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int64<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">start_write<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">verbose<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="24">recurse<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&amp;&amp;<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="35">!<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">am_server<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">&amp;&amp;<pos:position pos:line="10" pos:column="56"/></operator> <name pos:line="10" pos:column="49">f<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">!=<pos:position pos:line="10" pos:column="53"/></operator> <operator pos:line="10" pos:column="54">-<pos:position pos:line="10" pos:column="55"/></operator><literal type="number" pos:line="10" pos:column="55">1<pos:position pos:line="10" pos:column="56"/></literal></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57"> <block pos:line="10" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">rprintf<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">FINFO<pos:position pos:line="11" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="31">"building file list ... "<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rflush<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">FINFO<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">start_write<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="23">stats<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">total_written<pos:position pos:line="15" pos:column="42"/></name></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">flist<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator>struct <name pos:line="17" pos:column="25">file_list<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">*<pos:position pos:line="17" pos:column="36"/></operator><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator><call><name pos:line="17" pos:column="37">malloc<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">(<argument><expr><sizeof pos:line="17" pos:column="44">sizeof<argument_list pos:line="17" pos:column="50">(<argument><expr><name><name pos:line="17" pos:column="51">flist<pos:position pos:line="17" pos:column="56"/></name><index pos:line="17" pos:column="56">[<expr><literal type="number" pos:line="17" pos:column="57">0<pos:position pos:line="17" pos:column="58"/></literal></expr>]<pos:position pos:line="17" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">flist<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="21">out_of_memory<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><literal type="string" pos:line="18" pos:column="35">"send_file_list"<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">flist<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">count<pos:position pos:line="20" pos:column="21"/></name></name><operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">flist<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">malloced<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="number" pos:line="21" pos:column="27">1000<pos:position pos:line="21" pos:column="31"/></literal></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">flist<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">files<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator>struct <name pos:line="22" pos:column="32">file_struct<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">*<pos:position pos:line="22" pos:column="45"/></operator><operator pos:line="22" pos:column="45">*<pos:position pos:line="22" pos:column="46"/></operator><operator pos:line="22" pos:column="46">)<pos:position pos:line="22" pos:column="47"/></operator><call><name pos:line="22" pos:column="47">malloc<pos:position pos:line="22" pos:column="53"/></name><argument_list pos:line="22" pos:column="53">(<argument><expr><sizeof pos:line="22" pos:column="54">sizeof<argument_list pos:line="22" pos:column="60">(<argument><expr><name><name pos:line="22" pos:column="61">flist<pos:position pos:line="22" pos:column="66"/></name><operator pos:line="22" pos:column="66">-&gt;<pos:position pos:line="22" pos:column="71"/></operator><name pos:line="22" pos:column="68">files<pos:position pos:line="22" pos:column="73"/></name><index pos:line="22" pos:column="73">[<expr><literal type="number" pos:line="22" pos:column="74">0<pos:position pos:line="22" pos:column="75"/></literal></expr>]<pos:position pos:line="22" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></sizeof><operator pos:line="22" pos:column="77">*<pos:position pos:line="22" pos:column="78"/></operator>
						     <name><name pos:line="23" pos:column="54">flist<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">-&gt;<pos:position pos:line="23" pos:column="64"/></operator><name pos:line="23" pos:column="61">malloced<pos:position pos:line="23" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">flist<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">files<pos:position pos:line="24" pos:column="26"/></name></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="28">out_of_memory<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><literal type="string" pos:line="24" pos:column="42">"send_file_list"<pos:position pos:line="24" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="60"/></expr_stmt></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">f<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">!=<pos:position pos:line="26" pos:column="17"/></operator> <operator pos:line="26" pos:column="18">-<pos:position pos:line="26" pos:column="19"/></operator><literal type="number" pos:line="26" pos:column="19">1<pos:position pos:line="26" pos:column="20"/></literal></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block pos:line="26" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">io_start_buffering<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">f<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">i<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></init><condition><expr><name pos:line="30" pos:column="18">i<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">&lt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">argc<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></condition><incr><expr><name pos:line="30" pos:column="25">i<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">++<pos:position pos:line="30" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="29"/></control> <block pos:line="30" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">char<pos:position pos:line="31" pos:column="21"/></name> <modifier pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></modifier></type><name pos:line="31" pos:column="23">fname<pos:position pos:line="31" pos:column="28"/></name> <init pos:line="31" pos:column="29">= <expr><name pos:line="31" pos:column="31">topsrcname<pos:position pos:line="31" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="42"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="33" pos:column="17">strlcpy<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name pos:line="33" pos:column="25">fname<pos:position pos:line="33" pos:column="30"/></name></expr></argument>,<argument><expr><name><name pos:line="33" pos:column="31">argv<pos:position pos:line="33" pos:column="35"/></name><index pos:line="33" pos:column="35">[<expr><name pos:line="33" pos:column="36">i<pos:position pos:line="33" pos:column="37"/></name></expr>]<pos:position pos:line="33" pos:column="38"/></index></name></expr></argument>,<argument><expr><name pos:line="33" pos:column="39">MAXPATHLEN<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>

		<expr_stmt><expr><name pos:line="35" pos:column="17">l<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">strlen<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">fname<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">l<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">!=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">1<pos:position pos:line="36" pos:column="27"/></literal> <operator pos:line="36" pos:column="28">&amp;&amp;<pos:position pos:line="36" pos:column="38"/></operator> <name><name pos:line="36" pos:column="31">fname<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><name pos:line="36" pos:column="37">l<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-<pos:position pos:line="36" pos:column="39"/></operator><literal type="number" pos:line="36" pos:column="39">1<pos:position pos:line="36" pos:column="40"/></literal></expr>]<pos:position pos:line="36" pos:column="41"/></index></name> <operator pos:line="36" pos:column="42">==<pos:position pos:line="36" pos:column="44"/></operator> <literal type="char" pos:line="36" pos:column="45">'/'<pos:position pos:line="36" pos:column="48"/></literal></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49"> <block pos:line="36" pos:column="50">{
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><operator pos:line="37" pos:column="29">(<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="30">l<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">==<pos:position pos:line="37" pos:column="34"/></operator> <literal type="number" pos:line="37" pos:column="35">2<pos:position pos:line="37" pos:column="36"/></literal><operator pos:line="37" pos:column="36">)<pos:position pos:line="37" pos:column="37"/></operator> <operator pos:line="37" pos:column="38">&amp;&amp;<pos:position pos:line="37" pos:column="48"/></operator> <operator pos:line="37" pos:column="41">(<pos:position pos:line="37" pos:column="42"/></operator><name><name pos:line="37" pos:column="42">fname<pos:position pos:line="37" pos:column="47"/></name><index pos:line="37" pos:column="47">[<expr><literal type="number" pos:line="37" pos:column="48">0<pos:position pos:line="37" pos:column="49"/></literal></expr>]<pos:position pos:line="37" pos:column="50"/></index></name> <operator pos:line="37" pos:column="51">==<pos:position pos:line="37" pos:column="53"/></operator> <literal type="char" pos:line="37" pos:column="54">'.'<pos:position pos:line="37" pos:column="57"/></literal><operator pos:line="37" pos:column="57">)<pos:position pos:line="37" pos:column="58"/></operator></expr>)<pos:position pos:line="37" pos:column="59"/></condition><then pos:line="37" pos:column="59"> <block pos:line="37" pos:column="60">{
				<comment type="block" pos:line="38" pos:column="33">/*  Turn ./ into just . rather than ./.
				    This was put in to avoid a problem with
				      rsync -aR --delete from ./
				    The send_file_name() below of ./ was
				    mysteriously preventing deletes */</comment>
				<expr_stmt><expr><name><name pos:line="43" pos:column="33">fname<pos:position pos:line="43" pos:column="38"/></name><index pos:line="43" pos:column="38">[<expr><literal type="number" pos:line="43" pos:column="39">1<pos:position pos:line="43" pos:column="40"/></literal></expr>]<pos:position pos:line="43" pos:column="41"/></index></name> <operator pos:line="43" pos:column="42">=<pos:position pos:line="43" pos:column="43"/></operator> <literal type="number" pos:line="43" pos:column="44">0<pos:position pos:line="43" pos:column="45"/></literal></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="44" pos:column="26"/></block></then> <else pos:line="44" pos:column="27">else <block pos:line="44" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="45" pos:column="33">strlcat<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument><expr><name pos:line="45" pos:column="41">fname<pos:position pos:line="45" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="45" pos:column="47">"."<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="45" pos:column="51">MAXPATHLEN<pos:position pos:line="45" pos:column="61"/></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="46" pos:column="26"/></block></else></if>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">link_stat<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">fname<pos:position pos:line="49" pos:column="36"/></name></expr></argument>,<argument><expr><operator pos:line="49" pos:column="37">&amp;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="38">st<pos:position pos:line="49" pos:column="40"/></name></expr></argument>)<pos:position pos:line="49" pos:column="41"/></argument_list></call> <operator pos:line="49" pos:column="42">!=<pos:position pos:line="49" pos:column="44"/></operator> <literal type="number" pos:line="49" pos:column="45">0<pos:position pos:line="49" pos:column="46"/></literal></expr>)<pos:position pos:line="49" pos:column="47"/></condition><then pos:line="49" pos:column="47"> <block pos:line="49" pos:column="48">{
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">f<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">!=<pos:position pos:line="50" pos:column="33"/></operator> <operator pos:line="50" pos:column="34">-<pos:position pos:line="50" pos:column="35"/></operator><literal type="number" pos:line="50" pos:column="35">1<pos:position pos:line="50" pos:column="36"/></literal></expr>)<pos:position pos:line="50" pos:column="37"/></condition><then pos:line="50" pos:column="37"> <block pos:line="50" pos:column="38">{
				<expr_stmt><expr><name pos:line="51" pos:column="33">io_error<pos:position pos:line="51" pos:column="41"/></name><operator pos:line="51" pos:column="41">=<pos:position pos:line="51" pos:column="42"/></operator><literal type="number" pos:line="51" pos:column="42">1<pos:position pos:line="51" pos:column="43"/></literal></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="52" pos:column="33">rprintf<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">FERROR<pos:position pos:line="52" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="52" pos:column="48">"link_stat %s : %s\n"<pos:position pos:line="52" pos:column="69"/></literal></expr></argument>,<argument><expr><name pos:line="52" pos:column="70">fname<pos:position pos:line="52" pos:column="75"/></name></expr></argument>,<argument><expr><call><name pos:line="52" pos:column="76">strerror<pos:position pos:line="52" pos:column="84"/></name><argument_list pos:line="52" pos:column="84">(<argument><expr><name pos:line="52" pos:column="85">errno<pos:position pos:line="52" pos:column="90"/></name></expr></argument>)<pos:position pos:line="52" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="93"/></expr_stmt>
			}<pos:position pos:line="53" pos:column="26"/></block></then></if>
			<continue pos:line="54" pos:column="25">continue;<pos:position pos:line="54" pos:column="34"/></continue>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>

		<if pos:line="57" pos:column="17">if <condition pos:line="57" pos:column="20">(<expr><call><name pos:line="57" pos:column="21">S_ISDIR<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name><name pos:line="57" pos:column="29">st<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">.<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="32">st_mode<pos:position pos:line="57" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call> <operator pos:line="57" pos:column="41">&amp;&amp;<pos:position pos:line="57" pos:column="51"/></operator> <operator pos:line="57" pos:column="44">!<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="45">recurse<pos:position pos:line="57" pos:column="52"/></name></expr>)<pos:position pos:line="57" pos:column="53"/></condition><then pos:line="57" pos:column="53"> <block pos:line="57" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">rprintf<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">FINFO<pos:position pos:line="58" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="39">"skipping directory %s\n"<pos:position pos:line="58" pos:column="64"/></literal></expr></argument>,<argument><expr><name pos:line="58" pos:column="65">fname<pos:position pos:line="58" pos:column="70"/></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
			<continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="62" pos:column="17">dir<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">NULL<pos:position pos:line="62" pos:column="27"/></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="63" pos:column="17">olddir<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">NULL<pos:position pos:line="63" pos:column="30"/></name></expr>;<pos:position pos:line="63" pos:column="31"/></expr_stmt>

		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><operator pos:line="65" pos:column="21">!<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">relative_paths<pos:position pos:line="65" pos:column="36"/></name></expr>)<pos:position pos:line="65" pos:column="37"/></condition><then pos:line="65" pos:column="37"> <block pos:line="65" pos:column="38">{
			<expr_stmt><expr><name pos:line="66" pos:column="25">p<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <call><name pos:line="66" pos:column="29">strrchr<pos:position pos:line="66" pos:column="36"/></name><argument_list pos:line="66" pos:column="36">(<argument><expr><name pos:line="66" pos:column="37">fname<pos:position pos:line="66" pos:column="42"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="66" pos:column="43">'/'<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><name pos:line="67" pos:column="29">p<pos:position pos:line="67" pos:column="30"/></name></expr>)<pos:position pos:line="67" pos:column="31"/></condition><then pos:line="67" pos:column="31"> <block pos:line="67" pos:column="32">{
				<expr_stmt><expr><operator pos:line="68" pos:column="33">*<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="34">p<pos:position pos:line="68" pos:column="35"/></name> <operator pos:line="68" pos:column="36">=<pos:position pos:line="68" pos:column="37"/></operator> <literal type="number" pos:line="68" pos:column="38">0<pos:position pos:line="68" pos:column="39"/></literal></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
				<if pos:line="69" pos:column="33">if <condition pos:line="69" pos:column="36">(<expr><name pos:line="69" pos:column="37">p<pos:position pos:line="69" pos:column="38"/></name> <operator pos:line="69" pos:column="39">==<pos:position pos:line="69" pos:column="41"/></operator> <name pos:line="69" pos:column="42">fname<pos:position pos:line="69" pos:column="47"/></name></expr>)<pos:position pos:line="69" pos:column="48"/></condition><then pos:line="69" pos:column="48"> 
					<block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="41">dir<pos:position pos:line="70" pos:column="44"/></name> <operator pos:line="70" pos:column="45">=<pos:position pos:line="70" pos:column="46"/></operator> <literal type="string" pos:line="70" pos:column="47">"/"<pos:position pos:line="70" pos:column="50"/></literal></expr>;<pos:position pos:line="70" pos:column="51"/></expr_stmt></block></then>
				<else pos:line="71" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="41">dir<pos:position pos:line="72" pos:column="44"/></name> <operator pos:line="72" pos:column="45">=<pos:position pos:line="72" pos:column="46"/></operator> <name pos:line="72" pos:column="47">fname<pos:position pos:line="72" pos:column="52"/></name></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt></block></else></if>      
				<expr_stmt><expr><name pos:line="73" pos:column="33">fname<pos:position pos:line="73" pos:column="38"/></name> <operator pos:line="73" pos:column="39">=<pos:position pos:line="73" pos:column="40"/></operator> <name pos:line="73" pos:column="41">p<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">+<pos:position pos:line="73" pos:column="43"/></operator><literal type="number" pos:line="73" pos:column="43">1<pos:position pos:line="73" pos:column="44"/></literal></expr>;<pos:position pos:line="73" pos:column="45"/></expr_stmt>      
			}<pos:position pos:line="74" pos:column="26"/></block></then></if>
		}<pos:position pos:line="75" pos:column="18"/></block></then> <elseif pos:line="75" pos:column="19">else <if pos:line="75" pos:column="24">if <condition pos:line="75" pos:column="27">(<expr><name pos:line="75" pos:column="28">f<pos:position pos:line="75" pos:column="29"/></name> <operator pos:line="75" pos:column="30">!=<pos:position pos:line="75" pos:column="32"/></operator> <operator pos:line="75" pos:column="33">-<pos:position pos:line="75" pos:column="34"/></operator><literal type="number" pos:line="75" pos:column="34">1<pos:position pos:line="75" pos:column="35"/></literal> <operator pos:line="75" pos:column="36">&amp;&amp;<pos:position pos:line="75" pos:column="46"/></operator> <operator pos:line="75" pos:column="39">(<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="40">p<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">=<pos:position pos:line="75" pos:column="42"/></operator><call><name pos:line="75" pos:column="42">strrchr<pos:position pos:line="75" pos:column="49"/></name><argument_list pos:line="75" pos:column="49">(<argument><expr><name pos:line="75" pos:column="50">fname<pos:position pos:line="75" pos:column="55"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="75" pos:column="56">'/'<pos:position pos:line="75" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call><operator pos:line="75" pos:column="60">)<pos:position pos:line="75" pos:column="61"/></operator></expr>)<pos:position pos:line="75" pos:column="62"/></condition><then pos:line="75" pos:column="62"> <block pos:line="75" pos:column="63">{
			<comment type="block" pos:line="76" pos:column="25">/* this ensures we send the intermediate directories,
			   thus getting their permissions right */</comment>
			<expr_stmt><expr><operator pos:line="78" pos:column="25">*<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="26">p<pos:position pos:line="78" pos:column="27"/></name> <operator pos:line="78" pos:column="28">=<pos:position pos:line="78" pos:column="29"/></operator> <literal type="number" pos:line="78" pos:column="30">0<pos:position pos:line="78" pos:column="31"/></literal></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><call><name pos:line="79" pos:column="29">strcmp<pos:position pos:line="79" pos:column="35"/></name><argument_list pos:line="79" pos:column="35">(<argument><expr><name pos:line="79" pos:column="36">lastpath<pos:position pos:line="79" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="45">fname<pos:position pos:line="79" pos:column="50"/></name></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="52"/></condition><then pos:line="79" pos:column="52"> <block pos:line="79" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="80" pos:column="33">strlcpy<pos:position pos:line="80" pos:column="40"/></name><argument_list pos:line="80" pos:column="40">(<argument><expr><name pos:line="80" pos:column="41">lastpath<pos:position pos:line="80" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="51">fname<pos:position pos:line="80" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="80" pos:column="58">sizeof<argument_list pos:line="80" pos:column="64">(<argument><expr><name pos:line="80" pos:column="65">lastpath<pos:position pos:line="80" pos:column="73"/></name></expr></argument>)<pos:position pos:line="80" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="80" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="81" pos:column="33">*<pos:position pos:line="81" pos:column="34"/></operator><name pos:line="81" pos:column="34">p<pos:position pos:line="81" pos:column="35"/></name> <operator pos:line="81" pos:column="36">=<pos:position pos:line="81" pos:column="37"/></operator> <literal type="char" pos:line="81" pos:column="38">'/'<pos:position pos:line="81" pos:column="41"/></literal></expr>;<pos:position pos:line="81" pos:column="42"/></expr_stmt>
				<for pos:line="82" pos:column="33">for <control pos:line="82" pos:column="37">(<init><expr><name pos:line="82" pos:column="38">p<pos:position pos:line="82" pos:column="39"/></name><operator pos:line="82" pos:column="39">=<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="40">fname<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">+<pos:position pos:line="82" pos:column="46"/></operator><literal type="number" pos:line="82" pos:column="46">1<pos:position pos:line="82" pos:column="47"/></literal></expr>;<pos:position pos:line="82" pos:column="48"/></init> <condition><expr><operator pos:line="82" pos:column="49">(<pos:position pos:line="82" pos:column="50"/></operator><name pos:line="82" pos:column="50">p<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">=<pos:position pos:line="82" pos:column="52"/></operator><call><name pos:line="82" pos:column="52">strchr<pos:position pos:line="82" pos:column="58"/></name><argument_list pos:line="82" pos:column="58">(<argument><expr><name pos:line="82" pos:column="59">p<pos:position pos:line="82" pos:column="60"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="82" pos:column="61">'/'<pos:position pos:line="82" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="65"/></argument_list></call><operator pos:line="82" pos:column="65">)<pos:position pos:line="82" pos:column="66"/></operator></expr>;<pos:position pos:line="82" pos:column="67"/></condition> <incr><expr><name pos:line="82" pos:column="68">p<pos:position pos:line="82" pos:column="69"/></name><operator pos:line="82" pos:column="69">++<pos:position pos:line="82" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="82" pos:column="72"/></control> <block pos:line="82" pos:column="73">{
					<decl_stmt><decl><type><name pos:line="83" pos:column="41">int<pos:position pos:line="83" pos:column="44"/></name></type> <name pos:line="83" pos:column="45">copy_links_saved<pos:position pos:line="83" pos:column="61"/></name> <init pos:line="83" pos:column="62">= <expr><name pos:line="83" pos:column="64">copy_links<pos:position pos:line="83" pos:column="74"/></name></expr></init></decl>;<pos:position pos:line="83" pos:column="75"/></decl_stmt>
					<decl_stmt><decl><type><name pos:line="84" pos:column="41">int<pos:position pos:line="84" pos:column="44"/></name></type> <name pos:line="84" pos:column="45">recurse_saved<pos:position pos:line="84" pos:column="58"/></name> <init pos:line="84" pos:column="59">= <expr><name pos:line="84" pos:column="61">recurse<pos:position pos:line="84" pos:column="68"/></name></expr></init></decl>;<pos:position pos:line="84" pos:column="69"/></decl_stmt>
					<expr_stmt><expr><operator pos:line="85" pos:column="41">*<pos:position pos:line="85" pos:column="42"/></operator><name pos:line="85" pos:column="42">p<pos:position pos:line="85" pos:column="43"/></name> <operator pos:line="85" pos:column="44">=<pos:position pos:line="85" pos:column="45"/></operator> <literal type="number" pos:line="85" pos:column="46">0<pos:position pos:line="85" pos:column="47"/></literal></expr>;<pos:position pos:line="85" pos:column="48"/></expr_stmt>
					<expr_stmt><expr><name pos:line="86" pos:column="41">copy_links<pos:position pos:line="86" pos:column="51"/></name> <operator pos:line="86" pos:column="52">=<pos:position pos:line="86" pos:column="53"/></operator> <name pos:line="86" pos:column="54">copy_unsafe_links<pos:position pos:line="86" pos:column="71"/></name></expr>;<pos:position pos:line="86" pos:column="72"/></expr_stmt>
					<comment type="block" pos:line="87" pos:column="41">/* set recurse to 1 to prevent make_file
					   from ignoring directory, but still
					   turn off the recursive parameter to
					   send_file_name */</comment>
					<expr_stmt><expr><name pos:line="91" pos:column="41">recurse<pos:position pos:line="91" pos:column="48"/></name> <operator pos:line="91" pos:column="49">=<pos:position pos:line="91" pos:column="50"/></operator> <literal type="number" pos:line="91" pos:column="51">1<pos:position pos:line="91" pos:column="52"/></literal></expr>;<pos:position pos:line="91" pos:column="53"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="92" pos:column="41">send_file_name<pos:position pos:line="92" pos:column="55"/></name><argument_list pos:line="92" pos:column="55">(<argument><expr><name pos:line="92" pos:column="56">f<pos:position pos:line="92" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="59">flist<pos:position pos:line="92" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="66">fname<pos:position pos:line="92" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="73">0<pos:position pos:line="92" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="76">0<pos:position pos:line="92" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="79"/></expr_stmt>
					<expr_stmt><expr><name pos:line="93" pos:column="41">copy_links<pos:position pos:line="93" pos:column="51"/></name> <operator pos:line="93" pos:column="52">=<pos:position pos:line="93" pos:column="53"/></operator> <name pos:line="93" pos:column="54">copy_links_saved<pos:position pos:line="93" pos:column="70"/></name></expr>;<pos:position pos:line="93" pos:column="71"/></expr_stmt>
					<expr_stmt><expr><name pos:line="94" pos:column="41">recurse<pos:position pos:line="94" pos:column="48"/></name> <operator pos:line="94" pos:column="49">=<pos:position pos:line="94" pos:column="50"/></operator> <name pos:line="94" pos:column="51">recurse_saved<pos:position pos:line="94" pos:column="64"/></name></expr>;<pos:position pos:line="94" pos:column="65"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="95" pos:column="41">*<pos:position pos:line="95" pos:column="42"/></operator><name pos:line="95" pos:column="42">p<pos:position pos:line="95" pos:column="43"/></name> <operator pos:line="95" pos:column="44">=<pos:position pos:line="95" pos:column="45"/></operator> <literal type="char" pos:line="95" pos:column="46">'/'<pos:position pos:line="95" pos:column="49"/></literal></expr>;<pos:position pos:line="95" pos:column="50"/></expr_stmt>
				}<pos:position pos:line="96" pos:column="34"/></block></for>
			}<pos:position pos:line="97" pos:column="26"/></block></then> <else pos:line="97" pos:column="27">else <block pos:line="97" pos:column="32">{
				<expr_stmt><expr><operator pos:line="98" pos:column="33">*<pos:position pos:line="98" pos:column="34"/></operator><name pos:line="98" pos:column="34">p<pos:position pos:line="98" pos:column="35"/></name> <operator pos:line="98" pos:column="36">=<pos:position pos:line="98" pos:column="37"/></operator> <literal type="char" pos:line="98" pos:column="38">'/'<pos:position pos:line="98" pos:column="41"/></literal></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="99" pos:column="26"/></block></else></if>
		}<pos:position pos:line="100" pos:column="18"/></block></then></if></elseif></if>
		
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><operator pos:line="102" pos:column="21">!<pos:position pos:line="102" pos:column="22"/></operator><operator pos:line="102" pos:column="22">*<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="23">fname<pos:position pos:line="102" pos:column="28"/></name></expr>)<pos:position pos:line="102" pos:column="29"/></condition><then pos:line="102" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="25">fname<pos:position pos:line="103" pos:column="30"/></name> <operator pos:line="103" pos:column="31">=<pos:position pos:line="103" pos:column="32"/></operator> <literal type="string" pos:line="103" pos:column="33">"."<pos:position pos:line="103" pos:column="36"/></literal></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt></block></then></if>
		
		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><name pos:line="105" pos:column="21">dir<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">&amp;&amp;<pos:position pos:line="105" pos:column="35"/></operator> <operator pos:line="105" pos:column="28">*<pos:position pos:line="105" pos:column="29"/></operator><name pos:line="105" pos:column="29">dir<pos:position pos:line="105" pos:column="32"/></name></expr>)<pos:position pos:line="105" pos:column="33"/></condition><then pos:line="105" pos:column="33"> <block pos:line="105" pos:column="34">{
			<expr_stmt><expr><name pos:line="106" pos:column="25">olddir<pos:position pos:line="106" pos:column="31"/></name> <operator pos:line="106" pos:column="32">=<pos:position pos:line="106" pos:column="33"/></operator> <call><name pos:line="106" pos:column="34">push_dir<pos:position pos:line="106" pos:column="42"/></name><argument_list pos:line="106" pos:column="42">(<argument><expr><name pos:line="106" pos:column="43">dir<pos:position pos:line="106" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="48">1<pos:position pos:line="106" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="51"/></expr_stmt>

			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><operator pos:line="108" pos:column="29">!<pos:position pos:line="108" pos:column="30"/></operator><name pos:line="108" pos:column="30">olddir<pos:position pos:line="108" pos:column="36"/></name></expr>)<pos:position pos:line="108" pos:column="37"/></condition><then pos:line="108" pos:column="37"> <block pos:line="108" pos:column="38">{
				<expr_stmt><expr><name pos:line="109" pos:column="33">io_error<pos:position pos:line="109" pos:column="41"/></name><operator pos:line="109" pos:column="41">=<pos:position pos:line="109" pos:column="42"/></operator><literal type="number" pos:line="109" pos:column="42">1<pos:position pos:line="109" pos:column="43"/></literal></expr>;<pos:position pos:line="109" pos:column="44"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="110" pos:column="33">rprintf<pos:position pos:line="110" pos:column="40"/></name><argument_list pos:line="110" pos:column="40">(<argument><expr><name pos:line="110" pos:column="41">FERROR<pos:position pos:line="110" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="110" pos:column="48">"push_dir %s : %s\n"<pos:position pos:line="110" pos:column="68"/></literal></expr></argument>,
					<argument><expr><name pos:line="111" pos:column="41">dir<pos:position pos:line="111" pos:column="44"/></name></expr></argument>,<argument><expr><call><name pos:line="111" pos:column="45">strerror<pos:position pos:line="111" pos:column="53"/></name><argument_list pos:line="111" pos:column="53">(<argument><expr><name pos:line="111" pos:column="54">errno<pos:position pos:line="111" pos:column="59"/></name></expr></argument>)<pos:position pos:line="111" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="62"/></expr_stmt>
				<continue pos:line="112" pos:column="33">continue;<pos:position pos:line="112" pos:column="42"/></continue>
			}<pos:position pos:line="113" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="115" pos:column="25">flist_dir<pos:position pos:line="115" pos:column="34"/></name> <operator pos:line="115" pos:column="35">=<pos:position pos:line="115" pos:column="36"/></operator> <name pos:line="115" pos:column="37">dir<pos:position pos:line="115" pos:column="40"/></name></expr>;<pos:position pos:line="115" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="116" pos:column="18"/></block></then></if>
		
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><name pos:line="118" pos:column="21">one_file_system<pos:position pos:line="118" pos:column="36"/></name></expr>)<pos:position pos:line="118" pos:column="37"/></condition><then pos:line="118" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="25">set_filesystem<pos:position pos:line="119" pos:column="39"/></name><argument_list pos:line="119" pos:column="39">(<argument><expr><name pos:line="119" pos:column="40">fname<pos:position pos:line="119" pos:column="45"/></name></expr></argument>)<pos:position pos:line="119" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="47"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="121" pos:column="17">send_file_name<pos:position pos:line="121" pos:column="31"/></name><argument_list pos:line="121" pos:column="31">(<argument><expr><name pos:line="121" pos:column="32">f<pos:position pos:line="121" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="121" pos:column="34">flist<pos:position pos:line="121" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="121" pos:column="40">fname<pos:position pos:line="121" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="121" pos:column="46">recurse<pos:position pos:line="121" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="121" pos:column="54">FLAG_DELETE<pos:position pos:line="121" pos:column="65"/></name></expr></argument>)<pos:position pos:line="121" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="67"/></expr_stmt>

		<if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><name pos:line="123" pos:column="21">olddir<pos:position pos:line="123" pos:column="27"/></name> <operator pos:line="123" pos:column="28">!=<pos:position pos:line="123" pos:column="30"/></operator> <name pos:line="123" pos:column="31">NULL<pos:position pos:line="123" pos:column="35"/></name></expr>)<pos:position pos:line="123" pos:column="36"/></condition><then pos:line="123" pos:column="36"> <block pos:line="123" pos:column="37">{
			<expr_stmt><expr><name pos:line="124" pos:column="25">flist_dir<pos:position pos:line="124" pos:column="34"/></name> <operator pos:line="124" pos:column="35">=<pos:position pos:line="124" pos:column="36"/></operator> <name pos:line="124" pos:column="37">NULL<pos:position pos:line="124" pos:column="41"/></name></expr>;<pos:position pos:line="124" pos:column="42"/></expr_stmt>
			<if pos:line="125" pos:column="25">if <condition pos:line="125" pos:column="28">(<expr><call><name pos:line="125" pos:column="29">pop_dir<pos:position pos:line="125" pos:column="36"/></name><argument_list pos:line="125" pos:column="36">(<argument><expr><name pos:line="125" pos:column="37">olddir<pos:position pos:line="125" pos:column="43"/></name></expr></argument>)<pos:position pos:line="125" pos:column="44"/></argument_list></call> <operator pos:line="125" pos:column="45">!=<pos:position pos:line="125" pos:column="47"/></operator> <literal type="number" pos:line="125" pos:column="48">0<pos:position pos:line="125" pos:column="49"/></literal></expr>)<pos:position pos:line="125" pos:column="50"/></condition><then pos:line="125" pos:column="50"> <block pos:line="125" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="126" pos:column="33">rprintf<pos:position pos:line="126" pos:column="40"/></name><argument_list pos:line="126" pos:column="40">(<argument><expr><name pos:line="126" pos:column="41">FERROR<pos:position pos:line="126" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="126" pos:column="48">"pop_dir %s : %s\n"<pos:position pos:line="126" pos:column="67"/></literal></expr></argument>,
					<argument><expr><name pos:line="127" pos:column="41">dir<pos:position pos:line="127" pos:column="44"/></name></expr></argument>,<argument><expr><call><name pos:line="127" pos:column="45">strerror<pos:position pos:line="127" pos:column="53"/></name><argument_list pos:line="127" pos:column="53">(<argument><expr><name pos:line="127" pos:column="54">errno<pos:position pos:line="127" pos:column="59"/></name></expr></argument>)<pos:position pos:line="127" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="128" pos:column="33">exit_cleanup<pos:position pos:line="128" pos:column="45"/></name><argument_list pos:line="128" pos:column="45">(<argument><expr><name pos:line="128" pos:column="46">RERR_FILESELECT<pos:position pos:line="128" pos:column="61"/></name></expr></argument>)<pos:position pos:line="128" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="129" pos:column="26"/></block></then></if>
		}<pos:position pos:line="130" pos:column="18"/></block></then></if>
	}<pos:position pos:line="131" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="133" pos:column="9">topsrcname<pos:position pos:line="133" pos:column="19"/></name><index pos:line="133" pos:column="19">[<expr><literal type="number" pos:line="133" pos:column="20">0<pos:position pos:line="133" pos:column="21"/></literal></expr>]<pos:position pos:line="133" pos:column="22"/></index></name> <operator pos:line="133" pos:column="23">=<pos:position pos:line="133" pos:column="24"/></operator> <literal type="char" pos:line="133" pos:column="25">'\0'<pos:position pos:line="133" pos:column="29"/></literal></expr>;<pos:position pos:line="133" pos:column="30"/></expr_stmt>

	<if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">f<pos:position pos:line="135" pos:column="14"/></name> <operator pos:line="135" pos:column="15">!=<pos:position pos:line="135" pos:column="17"/></operator> <operator pos:line="135" pos:column="18">-<pos:position pos:line="135" pos:column="19"/></operator><literal type="number" pos:line="135" pos:column="19">1<pos:position pos:line="135" pos:column="20"/></literal></expr>)<pos:position pos:line="135" pos:column="21"/></condition><then pos:line="135" pos:column="21"> <block pos:line="135" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="136" pos:column="17">send_file_entry<pos:position pos:line="136" pos:column="32"/></name><argument_list pos:line="136" pos:column="32">(<argument><expr><name pos:line="136" pos:column="33">NULL<pos:position pos:line="136" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="136" pos:column="38">f<pos:position pos:line="136" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="136" pos:column="40">0<pos:position pos:line="136" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="137" pos:column="10"/></block></then></if>

	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name pos:line="139" pos:column="13">verbose<pos:position pos:line="139" pos:column="20"/></name> <operator pos:line="139" pos:column="21">&amp;&amp;<pos:position pos:line="139" pos:column="31"/></operator> <name pos:line="139" pos:column="24">recurse<pos:position pos:line="139" pos:column="31"/></name> <operator pos:line="139" pos:column="32">&amp;&amp;<pos:position pos:line="139" pos:column="42"/></operator> <operator pos:line="139" pos:column="35">!<pos:position pos:line="139" pos:column="36"/></operator><name pos:line="139" pos:column="36">am_server<pos:position pos:line="139" pos:column="45"/></name> <operator pos:line="139" pos:column="46">&amp;&amp;<pos:position pos:line="139" pos:column="56"/></operator> <name pos:line="139" pos:column="49">f<pos:position pos:line="139" pos:column="50"/></name> <operator pos:line="139" pos:column="51">!=<pos:position pos:line="139" pos:column="53"/></operator> <operator pos:line="139" pos:column="54">-<pos:position pos:line="139" pos:column="55"/></operator><literal type="number" pos:line="139" pos:column="55">1<pos:position pos:line="139" pos:column="56"/></literal></expr>)<pos:position pos:line="139" pos:column="57"/></condition><then pos:line="139" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="17">rprintf<pos:position pos:line="140" pos:column="24"/></name><argument_list pos:line="140" pos:column="24">(<argument><expr><name pos:line="140" pos:column="25">FINFO<pos:position pos:line="140" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="140" pos:column="31">"done\n"<pos:position pos:line="140" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="41"/></expr_stmt></block></then></if>
	
	<expr_stmt><expr><call><name pos:line="142" pos:column="9">clean_flist<pos:position pos:line="142" pos:column="20"/></name><argument_list pos:line="142" pos:column="20">(<argument><expr><name pos:line="142" pos:column="21">flist<pos:position pos:line="142" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="28">0<pos:position pos:line="142" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="31"/></expr_stmt>
	
	<comment type="block" pos:line="144" pos:column="9">/* now send the uid/gid list. This was introduced in protocol
           version 15 */</comment>
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">f<pos:position pos:line="146" pos:column="14"/></name> <operator pos:line="146" pos:column="15">!=<pos:position pos:line="146" pos:column="17"/></operator> <operator pos:line="146" pos:column="18">-<pos:position pos:line="146" pos:column="19"/></operator><literal type="number" pos:line="146" pos:column="19">1<pos:position pos:line="146" pos:column="20"/></literal> <operator pos:line="146" pos:column="21">&amp;&amp;<pos:position pos:line="146" pos:column="31"/></operator> <name pos:line="146" pos:column="24">remote_version<pos:position pos:line="146" pos:column="38"/></name> <operator pos:line="146" pos:column="39">&gt;=<pos:position pos:line="146" pos:column="44"/></operator> <literal type="number" pos:line="146" pos:column="42">15<pos:position pos:line="146" pos:column="44"/></literal></expr>)<pos:position pos:line="146" pos:column="45"/></condition><then pos:line="146" pos:column="45"> <block pos:line="146" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="147" pos:column="17">send_uid_list<pos:position pos:line="147" pos:column="30"/></name><argument_list pos:line="147" pos:column="30">(<argument><expr><name pos:line="147" pos:column="31">f<pos:position pos:line="147" pos:column="32"/></name></expr></argument>)<pos:position pos:line="147" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="148" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="150" pos:column="9">/* if protocol version is &gt;= 17 then send the io_error flag */</comment>
	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">f<pos:position pos:line="151" pos:column="14"/></name> <operator pos:line="151" pos:column="15">!=<pos:position pos:line="151" pos:column="17"/></operator> <operator pos:line="151" pos:column="18">-<pos:position pos:line="151" pos:column="19"/></operator><literal type="number" pos:line="151" pos:column="19">1<pos:position pos:line="151" pos:column="20"/></literal> <operator pos:line="151" pos:column="21">&amp;&amp;<pos:position pos:line="151" pos:column="31"/></operator> <name pos:line="151" pos:column="24">remote_version<pos:position pos:line="151" pos:column="38"/></name> <operator pos:line="151" pos:column="39">&gt;=<pos:position pos:line="151" pos:column="44"/></operator> <literal type="number" pos:line="151" pos:column="42">17<pos:position pos:line="151" pos:column="44"/></literal></expr>)<pos:position pos:line="151" pos:column="45"/></condition><then pos:line="151" pos:column="45"> <block pos:line="151" pos:column="46">{
		<decl_stmt><decl><specifier pos:line="152" pos:column="17">extern<pos:position pos:line="152" pos:column="23"/></specifier> <type><name pos:line="152" pos:column="24">int<pos:position pos:line="152" pos:column="27"/></name></type> <name pos:line="152" pos:column="28">module_id<pos:position pos:line="152" pos:column="37"/></name></decl>;<pos:position pos:line="152" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="153" pos:column="17">write_int<pos:position pos:line="153" pos:column="26"/></name><argument_list pos:line="153" pos:column="26">(<argument><expr><name pos:line="153" pos:column="27">f<pos:position pos:line="153" pos:column="28"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="153" pos:column="30">lp_ignore_errors<pos:position pos:line="153" pos:column="46"/></name><argument_list pos:line="153" pos:column="46">(<argument><expr><name pos:line="153" pos:column="47">module_id<pos:position pos:line="153" pos:column="56"/></name></expr></argument>)<pos:position pos:line="153" pos:column="57"/></argument_list></call></expr>?<pos:position pos:line="153" pos:column="58"/></condition><then pos:line="153" pos:column="58"> <expr><literal type="number" pos:line="153" pos:column="59">0<pos:position pos:line="153" pos:column="60"/></literal></expr> <pos:position pos:line="153" pos:column="61"/></then><else pos:line="153" pos:column="61">: <expr><name pos:line="153" pos:column="63">io_error<pos:position pos:line="153" pos:column="71"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="153" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="154" pos:column="10"/></block></then></if>

	<if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><name pos:line="156" pos:column="13">f<pos:position pos:line="156" pos:column="14"/></name> <operator pos:line="156" pos:column="15">!=<pos:position pos:line="156" pos:column="17"/></operator> <operator pos:line="156" pos:column="18">-<pos:position pos:line="156" pos:column="19"/></operator><literal type="number" pos:line="156" pos:column="19">1<pos:position pos:line="156" pos:column="20"/></literal></expr>)<pos:position pos:line="156" pos:column="21"/></condition><then pos:line="156" pos:column="21"> <block pos:line="156" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="157" pos:column="17">io_end_buffering<pos:position pos:line="157" pos:column="33"/></name><argument_list pos:line="157" pos:column="33">(<argument><expr><name pos:line="157" pos:column="34">f<pos:position pos:line="157" pos:column="35"/></name></expr></argument>)<pos:position pos:line="157" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="158" pos:column="17">stats<pos:position pos:line="158" pos:column="22"/></name><operator pos:line="158" pos:column="22">.<pos:position pos:line="158" pos:column="23"/></operator><name pos:line="158" pos:column="23">flist_size<pos:position pos:line="158" pos:column="33"/></name></name> <operator pos:line="158" pos:column="34">=<pos:position pos:line="158" pos:column="35"/></operator> <name><name pos:line="158" pos:column="36">stats<pos:position pos:line="158" pos:column="41"/></name><operator pos:line="158" pos:column="41">.<pos:position pos:line="158" pos:column="42"/></operator><name pos:line="158" pos:column="42">total_written<pos:position pos:line="158" pos:column="55"/></name></name> <operator pos:line="158" pos:column="56">-<pos:position pos:line="158" pos:column="57"/></operator> <name pos:line="158" pos:column="58">start_write<pos:position pos:line="158" pos:column="69"/></name></expr>;<pos:position pos:line="158" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="159" pos:column="17">stats<pos:position pos:line="159" pos:column="22"/></name><operator pos:line="159" pos:column="22">.<pos:position pos:line="159" pos:column="23"/></operator><name pos:line="159" pos:column="23">num_files<pos:position pos:line="159" pos:column="32"/></name></name> <operator pos:line="159" pos:column="33">=<pos:position pos:line="159" pos:column="34"/></operator> <name><name pos:line="159" pos:column="35">flist<pos:position pos:line="159" pos:column="40"/></name><operator pos:line="159" pos:column="40">-&gt;<pos:position pos:line="159" pos:column="45"/></operator><name pos:line="159" pos:column="42">count<pos:position pos:line="159" pos:column="47"/></name></name></expr>;<pos:position pos:line="159" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="160" pos:column="10"/></block></then></if>

	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name pos:line="162" pos:column="13">verbose<pos:position pos:line="162" pos:column="20"/></name> <operator pos:line="162" pos:column="21">&gt;<pos:position pos:line="162" pos:column="25"/></operator> <literal type="number" pos:line="162" pos:column="23">2<pos:position pos:line="162" pos:column="24"/></literal></expr>)<pos:position pos:line="162" pos:column="25"/></condition><then pos:line="162" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="17">rprintf<pos:position pos:line="163" pos:column="24"/></name><argument_list pos:line="163" pos:column="24">(<argument><expr><name pos:line="163" pos:column="25">FINFO<pos:position pos:line="163" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="163" pos:column="31">"send_file_list done\n"<pos:position pos:line="163" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="56"/></expr_stmt></block></then></if>

	<return pos:line="165" pos:column="9">return <expr><name pos:line="165" pos:column="16">flist<pos:position pos:line="165" pos:column="21"/></name></expr>;<pos:position pos:line="165" pos:column="22"/></return>
}<pos:position pos:line="166" pos:column="2"/></block></function></unit>

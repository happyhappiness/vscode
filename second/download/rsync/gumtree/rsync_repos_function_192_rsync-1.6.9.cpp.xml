<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_192_rsync-1.6.9.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">int<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">inflate_trees_fixed<pos:position pos:line="1" pos:column="30"/></name><argument_list pos:line="1" pos:column="30">(<argument><expr><name pos:line="1" pos:column="31">bl<pos:position pos:line="1" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="35">bd<pos:position pos:line="1" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="39">tl<pos:position pos:line="1" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="43">td<pos:position pos:line="1" pos:column="45"/></name></expr></argument>)<pos:position pos:line="1" pos:column="46"/></argument_list>
<name pos:line="2" pos:column="1">uIntf<pos:position pos:line="2" pos:column="6"/></name> <modifier pos:line="2" pos:column="7">*<pos:position pos:line="2" pos:column="8"/></modifier><name pos:line="2" pos:column="8">bl<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>               <comment type="block" pos:line="2" pos:column="26">/* literal desired/actual bit depth */</comment>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">uIntf<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">bd<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>               <comment type="block" pos:line="3" pos:column="26">/* distance desired/actual bit depth */</comment>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">inflate_huft<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier> <name pos:line="4" pos:column="16">FAR<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">tl<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>  <comment type="block" pos:line="4" pos:column="26">/* literal/length tree result */</comment>
<decl_stmt><decl><type><name pos:line="5" pos:column="1">inflate_huft<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier> <name pos:line="5" pos:column="16">FAR<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">td<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>  <comment type="block" pos:line="5" pos:column="26">/* distance tree result */</comment>
<block pos:line="6" pos:column="1">{
  <comment type="block" pos:line="7" pos:column="3">/* build fixed tables if not built already--lock out other instances */</comment>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">MULTI_THREADED<pos:position pos:line="8" pos:column="22"/></name></cpp:ifdef>
  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><operator pos:line="9" pos:column="10">++<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">fixed_lock<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&gt;<pos:position pos:line="9" pos:column="27"/></operator> <literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>)<pos:position pos:line="9" pos:column="27"/></condition>
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">fixed_lock<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">--<pos:position pos:line="10" pos:column="17"/></operator></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt></block></while>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">fixed_built<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
  <block pos:line="13" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">k<pos:position pos:line="14" pos:column="10"/></name></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>              <comment type="block" pos:line="14" pos:column="25">/* temporary variable */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">unsigned<pos:position pos:line="15" pos:column="13"/></name></type> <name><name pos:line="15" pos:column="14">c<pos:position pos:line="15" pos:column="15"/></name><index pos:line="15" pos:column="15">[<expr><literal type="number" pos:line="15" pos:column="16">288<pos:position pos:line="15" pos:column="19"/></literal></expr>]<pos:position pos:line="15" pos:column="20"/></index></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>    <comment type="block" pos:line="15" pos:column="25">/* length list for huft_build */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">z_stream<pos:position pos:line="16" pos:column="13"/></name></type> <name pos:line="16" pos:column="14">z<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>         <comment type="block" pos:line="16" pos:column="25">/* for falloc function */</comment>

    <comment type="block" pos:line="18" pos:column="5">/* set up fake z_stream for memory routines */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">z<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">.<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">zalloc<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">falloc<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">z<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">.<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">zfree<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">ffree<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">z<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">.<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">opaque<pos:position pos:line="21" pos:column="13"/></name></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">Z_NULL<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* literal table */</comment>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">k<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><name pos:line="24" pos:column="17">k<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="21">144<pos:position pos:line="24" pos:column="24"/></literal></expr>;<pos:position pos:line="24" pos:column="25"/></condition> <incr><expr><name pos:line="24" pos:column="26">k<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">++<pos:position pos:line="24" pos:column="29"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="30"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="7">c<pos:position pos:line="25" pos:column="8"/></name><index pos:line="25" pos:column="8">[<expr><name pos:line="25" pos:column="9">k<pos:position pos:line="25" pos:column="10"/></name></expr>]<pos:position pos:line="25" pos:column="11"/></index></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">8<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt></block></for>
    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init pos:line="26" pos:column="10">;<pos:position pos:line="26" pos:column="11"/></init> <condition><expr><name pos:line="26" pos:column="12">k<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">&lt;<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="16">256<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></condition> <incr><expr><name pos:line="26" pos:column="21">k<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">++<pos:position pos:line="26" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="25"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="7">c<pos:position pos:line="27" pos:column="8"/></name><index pos:line="27" pos:column="8">[<expr><name pos:line="27" pos:column="9">k<pos:position pos:line="27" pos:column="10"/></name></expr>]<pos:position pos:line="27" pos:column="11"/></index></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">9<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt></block></for>
    <for pos:line="28" pos:column="5">for <control pos:line="28" pos:column="9">(<init pos:line="28" pos:column="10">;<pos:position pos:line="28" pos:column="11"/></init> <condition><expr><name pos:line="28" pos:column="12">k<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">&lt;<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="16">280<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></condition> <incr><expr><name pos:line="28" pos:column="21">k<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">++<pos:position pos:line="28" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="25"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="7">c<pos:position pos:line="29" pos:column="8"/></name><index pos:line="29" pos:column="8">[<expr><name pos:line="29" pos:column="9">k<pos:position pos:line="29" pos:column="10"/></name></expr>]<pos:position pos:line="29" pos:column="11"/></index></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <literal type="number" pos:line="29" pos:column="14">7<pos:position pos:line="29" pos:column="15"/></literal></expr>;<pos:position pos:line="29" pos:column="16"/></expr_stmt></block></for>
    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init pos:line="30" pos:column="10">;<pos:position pos:line="30" pos:column="11"/></init> <condition><expr><name pos:line="30" pos:column="12">k<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">&lt;<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="16">288<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></condition> <incr><expr><name pos:line="30" pos:column="21">k<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">++<pos:position pos:line="30" pos:column="24"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="25"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="7">c<pos:position pos:line="31" pos:column="8"/></name><index pos:line="31" pos:column="8">[<expr><name pos:line="31" pos:column="9">k<pos:position pos:line="31" pos:column="10"/></name></expr>]<pos:position pos:line="31" pos:column="11"/></index></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="14">8<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt></block></for>
    <expr_stmt><expr><name pos:line="32" pos:column="5">fixed_bl<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="number" pos:line="32" pos:column="16">7<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">huft_build<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">c<pos:position pos:line="33" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="19">288<pos:position pos:line="33" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="24">257<pos:position pos:line="33" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">cplens<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">cplext<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="45">&amp;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="46">fixed_tl<pos:position pos:line="33" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="56">&amp;<pos:position pos:line="33" pos:column="61"/></operator><name pos:line="33" pos:column="57">fixed_bl<pos:position pos:line="33" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="67">&amp;<pos:position pos:line="33" pos:column="72"/></operator><name pos:line="33" pos:column="68">z<pos:position pos:line="33" pos:column="69"/></name></expr></argument>)<pos:position pos:line="33" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>

    <comment type="block" pos:line="35" pos:column="5">/* distance table */</comment>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">k<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="number" pos:line="36" pos:column="14">0<pos:position pos:line="36" pos:column="15"/></literal></expr>;<pos:position pos:line="36" pos:column="16"/></init> <condition><expr><name pos:line="36" pos:column="17">k<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&lt;<pos:position pos:line="36" pos:column="23"/></operator> <literal type="number" pos:line="36" pos:column="21">30<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></condition> <incr><expr><name pos:line="36" pos:column="25">k<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">++<pos:position pos:line="36" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="29"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="7">c<pos:position pos:line="37" pos:column="8"/></name><index pos:line="37" pos:column="8">[<expr><name pos:line="37" pos:column="9">k<pos:position pos:line="37" pos:column="10"/></name></expr>]<pos:position pos:line="37" pos:column="11"/></index></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">5<pos:position pos:line="37" pos:column="15"/></literal></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt></block></for>
    <expr_stmt><expr><name pos:line="38" pos:column="5">fixed_bd<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <literal type="number" pos:line="38" pos:column="16">5<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">huft_build<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">c<pos:position pos:line="39" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="19">30<pos:position pos:line="39" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="23">0<pos:position pos:line="39" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="26">cpdist<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">cpdext<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="42">&amp;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="43">fixed_td<pos:position pos:line="39" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="53">&amp;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="54">fixed_bd<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="64">&amp;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="65">z<pos:position pos:line="39" pos:column="66"/></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* done */</comment>
    <expr_stmt><expr><name pos:line="42" pos:column="5">fixed_built<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">1<pos:position pos:line="42" pos:column="20"/></literal></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>
<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">MULTI_THREADED<pos:position pos:line="44" pos:column="22"/></name></cpp:ifdef>
  <expr_stmt><expr><name pos:line="45" pos:column="3">fixed_lock<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">--<pos:position pos:line="45" pos:column="15"/></operator></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><operator pos:line="47" pos:column="3">*<pos:position pos:line="47" pos:column="4"/></operator><name pos:line="47" pos:column="4">bl<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <name pos:line="47" pos:column="9">fixed_bl<pos:position pos:line="47" pos:column="17"/></name></expr>;<pos:position pos:line="47" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="48" pos:column="3">*<pos:position pos:line="48" pos:column="4"/></operator><name pos:line="48" pos:column="4">bd<pos:position pos:line="48" pos:column="6"/></name> <operator pos:line="48" pos:column="7">=<pos:position pos:line="48" pos:column="8"/></operator> <name pos:line="48" pos:column="9">fixed_bd<pos:position pos:line="48" pos:column="17"/></name></expr>;<pos:position pos:line="48" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="49" pos:column="3">*<pos:position pos:line="49" pos:column="4"/></operator><name pos:line="49" pos:column="4">tl<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <name pos:line="49" pos:column="9">fixed_tl<pos:position pos:line="49" pos:column="17"/></name></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><operator pos:line="50" pos:column="3">*<pos:position pos:line="50" pos:column="4"/></operator><name pos:line="50" pos:column="4">td<pos:position pos:line="50" pos:column="6"/></name> <operator pos:line="50" pos:column="7">=<pos:position pos:line="50" pos:column="8"/></operator> <name pos:line="50" pos:column="9">fixed_td<pos:position pos:line="50" pos:column="17"/></name></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><name pos:line="51" pos:column="10">Z_OK<pos:position pos:line="51" pos:column="14"/></name></expr>;<pos:position pos:line="51" pos:column="15"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></unit>

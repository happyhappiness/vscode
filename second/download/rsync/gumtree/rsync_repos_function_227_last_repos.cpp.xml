<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_227_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">show_progress<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">OFF_T<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">ofs<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">OFF_T<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">size<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">timeval<pos:position pos:line="3" pos:column="23"/></name></name></type> <name pos:line="3" pos:column="24">now<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">defined<pos:position pos:line="4" pos:column="12"/></name> <name pos:line="4" pos:column="13">HAVE_GETPGRP<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">&amp;&amp;<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="29">defined<pos:position pos:line="4" pos:column="36"/></name> <name pos:line="4" pos:column="37">HAVE_TCGETPGRP<pos:position pos:line="4" pos:column="51"/></name></expr></cpp:if>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">pid_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">pgrp<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><operator pos:line="5" pos:column="29">-<pos:position pos:line="5" pos:column="30"/></operator><literal type="number" pos:line="5" pos:column="30">1<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">pid_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">tc_pgrp<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">am_server<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
		<block type="pseudo"><return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>

<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">defined<pos:position pos:line="12" pos:column="12"/></name> <name pos:line="12" pos:column="13">HAVE_GETPGRP<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">&amp;&amp;<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="29">defined<pos:position pos:line="12" pos:column="36"/></name> <name pos:line="12" pos:column="37">HAVE_TCGETPGRP<pos:position pos:line="12" pos:column="51"/></name></expr></cpp:if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">pgrp<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">-<pos:position pos:line="13" pos:column="22"/></operator><literal type="number" pos:line="13" pos:column="22">1<pos:position pos:line="13" pos:column="23"/></literal></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">pgrp<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">getpgrp<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">GETPGRP_ARG<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">gettimeofday<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><operator pos:line="17" pos:column="22">&amp;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="23">now<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="28">NULL<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">INFO_GTE<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">PROGRESS<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="32">2<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <block pos:line="19" pos:column="36">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">ofs<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name><name pos:line="20" pos:column="23">stats<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">total_transferred_size<pos:position pos:line="20" pos:column="51"/></name></name> <operator pos:line="20" pos:column="52">-<pos:position pos:line="20" pos:column="53"/></operator> <name pos:line="20" pos:column="54">size<pos:position pos:line="20" pos:column="58"/></name> <operator pos:line="20" pos:column="59">+<pos:position pos:line="20" pos:column="60"/></operator> <name pos:line="20" pos:column="61">ofs<pos:position pos:line="20" pos:column="64"/></name></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">size<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">stats<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">total_size<pos:position pos:line="21" pos:column="40"/></name></name></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">ph_start<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">.<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">time<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">.<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">tv_sec<pos:position pos:line="24" pos:column="34"/></name></name></expr>)<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <block pos:line="24" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">i<pos:position pos:line="25" pos:column="22"/></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>

		<comment type="block" pos:line="27" pos:column="17">/* Try to guess the real starting time when the sender started
		 * to send us data by using the time we last received some data
		 * in the last file (if it was recent enough). */</comment>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">msdiff<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name><name pos:line="30" pos:column="29">ph_list<pos:position pos:line="30" pos:column="36"/></name><index pos:line="30" pos:column="36">[<expr><name pos:line="30" pos:column="37">newest_hpos<pos:position pos:line="30" pos:column="48"/></name></expr>]<pos:position pos:line="30" pos:column="49"/></index></name><operator pos:line="30" pos:column="49">.<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="50">time<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="56">&amp;<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="57">now<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call> <operator pos:line="30" pos:column="62">&lt;=<pos:position pos:line="30" pos:column="67"/></operator> <literal type="number" pos:line="30" pos:column="65">1500<pos:position pos:line="30" pos:column="69"/></literal></expr>)<pos:position pos:line="30" pos:column="70"/></condition><then pos:line="30" pos:column="70"> <block pos:line="30" pos:column="71">{
			<expr_stmt><expr><name><name pos:line="31" pos:column="25">ph_start<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">time<pos:position pos:line="31" pos:column="38"/></name></name> <operator pos:line="31" pos:column="39">=<pos:position pos:line="31" pos:column="40"/></operator> <name><name pos:line="31" pos:column="41">ph_list<pos:position pos:line="31" pos:column="48"/></name><index pos:line="31" pos:column="48">[<expr><name pos:line="31" pos:column="49">newest_hpos<pos:position pos:line="31" pos:column="60"/></name></expr>]<pos:position pos:line="31" pos:column="61"/></index></name><operator pos:line="31" pos:column="61">.<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="62">time<pos:position pos:line="31" pos:column="66"/></name></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">ph_start<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">ofs<pos:position pos:line="32" pos:column="37"/></name></name> <operator pos:line="32" pos:column="38">=<pos:position pos:line="32" pos:column="39"/></operator> <literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then> <else pos:line="33" pos:column="19">else <block pos:line="33" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">ph_start<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">.<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">time<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">.<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">tv_sec<pos:position pos:line="34" pos:column="45"/></name></name> <operator pos:line="34" pos:column="46">=<pos:position pos:line="34" pos:column="47"/></operator> <name><name pos:line="34" pos:column="48">now<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">.<pos:position pos:line="34" pos:column="52"/></operator><name pos:line="34" pos:column="52">tv_sec<pos:position pos:line="34" pos:column="58"/></name></name></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="35" pos:column="25">ph_start<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">.<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">time<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">tv_usec<pos:position pos:line="35" pos:column="46"/></name></name> <operator pos:line="35" pos:column="47">=<pos:position pos:line="35" pos:column="48"/></operator> <name><name pos:line="35" pos:column="49">now<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">.<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">tv_usec<pos:position pos:line="35" pos:column="60"/></name></name></expr>;<pos:position pos:line="35" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="36" pos:column="25">ph_start<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">.<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="34">ofs<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">=<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">ofs<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></else></if>

		<for pos:line="39" pos:column="17">for <control pos:line="39" pos:column="21">(<init><expr><name pos:line="39" pos:column="22">i<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></init> <condition><expr><name pos:line="39" pos:column="29">i<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">&lt;<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="33">PROGRESS_HISTORY_SECS<pos:position pos:line="39" pos:column="54"/></name></expr>;<pos:position pos:line="39" pos:column="55"/></condition> <incr><expr><name pos:line="39" pos:column="56">i<pos:position pos:line="39" pos:column="57"/></name><operator pos:line="39" pos:column="57">++<pos:position pos:line="39" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="60"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="25">ph_list<pos:position pos:line="40" pos:column="32"/></name><index pos:line="40" pos:column="32">[<expr><name pos:line="40" pos:column="33">i<pos:position pos:line="40" pos:column="34"/></name></expr>]<pos:position pos:line="40" pos:column="35"/></index></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">ph_start<pos:position pos:line="40" pos:column="46"/></name></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt></block></for>
	}<pos:position pos:line="41" pos:column="10"/></block></then>
	<else pos:line="42" pos:column="9">else <block pos:line="42" pos:column="14">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><call><name pos:line="43" pos:column="21">msdiff<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><operator pos:line="43" pos:column="28">&amp;<pos:position pos:line="43" pos:column="33"/></operator><name><name pos:line="43" pos:column="29">ph_list<pos:position pos:line="43" pos:column="36"/></name><index pos:line="43" pos:column="36">[<expr><name pos:line="43" pos:column="37">newest_hpos<pos:position pos:line="43" pos:column="48"/></name></expr>]<pos:position pos:line="43" pos:column="49"/></index></name><operator pos:line="43" pos:column="49">.<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="50">time<pos:position pos:line="43" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="56">&amp;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="57">now<pos:position pos:line="43" pos:column="60"/></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call> <operator pos:line="43" pos:column="62">&lt;<pos:position pos:line="43" pos:column="66"/></operator> <literal type="number" pos:line="43" pos:column="64">1000<pos:position pos:line="43" pos:column="68"/></literal></expr>)<pos:position pos:line="43" pos:column="69"/></condition><then pos:line="43" pos:column="69">
			<block type="pseudo"><return pos:line="44" pos:column="25">return;<pos:position pos:line="44" pos:column="32"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="46" pos:column="17">newest_hpos<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <name pos:line="46" pos:column="31">oldest_hpos<pos:position pos:line="46" pos:column="42"/></name></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="47" pos:column="17">oldest_hpos<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">=<pos:position pos:line="47" pos:column="30"/></operator> <operator pos:line="47" pos:column="31">(<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="32">oldest_hpos<pos:position pos:line="47" pos:column="43"/></name> <operator pos:line="47" pos:column="44">+<pos:position pos:line="47" pos:column="45"/></operator> <literal type="number" pos:line="47" pos:column="46">1<pos:position pos:line="47" pos:column="47"/></literal><operator pos:line="47" pos:column="47">)<pos:position pos:line="47" pos:column="48"/></operator> <operator pos:line="47" pos:column="49">%<pos:position pos:line="47" pos:column="50"/></operator> <name pos:line="47" pos:column="51">PROGRESS_HISTORY_SECS<pos:position pos:line="47" pos:column="72"/></name></expr>;<pos:position pos:line="47" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">ph_list<pos:position pos:line="48" pos:column="24"/></name><index pos:line="48" pos:column="24">[<expr><name pos:line="48" pos:column="25">newest_hpos<pos:position pos:line="48" pos:column="36"/></name></expr>]<pos:position pos:line="48" pos:column="37"/></index></name><operator pos:line="48" pos:column="37">.<pos:position pos:line="48" pos:column="38"/></operator><name><name pos:line="48" pos:column="38">time<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">.<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="43">tv_sec<pos:position pos:line="48" pos:column="49"/></name></name> <operator pos:line="48" pos:column="50">=<pos:position pos:line="48" pos:column="51"/></operator> <name><name pos:line="48" pos:column="52">now<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">.<pos:position pos:line="48" pos:column="56"/></operator><name pos:line="48" pos:column="56">tv_sec<pos:position pos:line="48" pos:column="62"/></name></name></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="49" pos:column="17">ph_list<pos:position pos:line="49" pos:column="24"/></name><index pos:line="49" pos:column="24">[<expr><name pos:line="49" pos:column="25">newest_hpos<pos:position pos:line="49" pos:column="36"/></name></expr>]<pos:position pos:line="49" pos:column="37"/></index></name><operator pos:line="49" pos:column="37">.<pos:position pos:line="49" pos:column="38"/></operator><name><name pos:line="49" pos:column="38">time<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">.<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="43">tv_usec<pos:position pos:line="49" pos:column="50"/></name></name> <operator pos:line="49" pos:column="51">=<pos:position pos:line="49" pos:column="52"/></operator> <name><name pos:line="49" pos:column="53">now<pos:position pos:line="49" pos:column="56"/></name><operator pos:line="49" pos:column="56">.<pos:position pos:line="49" pos:column="57"/></operator><name pos:line="49" pos:column="57">tv_usec<pos:position pos:line="49" pos:column="64"/></name></name></expr>;<pos:position pos:line="49" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="50" pos:column="17">ph_list<pos:position pos:line="50" pos:column="24"/></name><index pos:line="50" pos:column="24">[<expr><name pos:line="50" pos:column="25">newest_hpos<pos:position pos:line="50" pos:column="36"/></name></expr>]<pos:position pos:line="50" pos:column="37"/></index></name><operator pos:line="50" pos:column="37">.<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="38">ofs<pos:position pos:line="50" pos:column="41"/></name> <operator pos:line="50" pos:column="42">=<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="44">ofs<pos:position pos:line="50" pos:column="47"/></name></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></else></if>

<cpp:if pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">if<pos:position pos:line="53" pos:column="4"/></cpp:directive> <expr><name pos:line="53" pos:column="5">defined<pos:position pos:line="53" pos:column="12"/></name> <name pos:line="53" pos:column="13">HAVE_GETPGRP<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">&amp;&amp;<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="29">defined<pos:position pos:line="53" pos:column="36"/></name> <name pos:line="53" pos:column="37">HAVE_TCGETPGRP<pos:position pos:line="53" pos:column="51"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="54" pos:column="9">tc_pgrp<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <call><name pos:line="54" pos:column="19">tcgetpgrp<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">STDOUT_FILENO<pos:position pos:line="54" pos:column="42"/></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">tc_pgrp<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">!=<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">pgrp<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">&amp;&amp;<pos:position pos:line="55" pos:column="39"/></operator> <name pos:line="55" pos:column="32">tc_pgrp<pos:position pos:line="55" pos:column="39"/></name> <operator pos:line="55" pos:column="40">!=<pos:position pos:line="55" pos:column="42"/></operator> <operator pos:line="55" pos:column="43">-<pos:position pos:line="55" pos:column="44"/></operator><literal type="number" pos:line="55" pos:column="44">1<pos:position pos:line="55" pos:column="45"/></literal></expr>)<pos:position pos:line="55" pos:column="46"/></condition><then pos:line="55" pos:column="46">
		<block type="pseudo"><return pos:line="56" pos:column="17">return;<pos:position pos:line="56" pos:column="24"/></return></block></then></if>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="59" pos:column="9">rprint_progress<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">ofs<pos:position pos:line="59" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="30">size<pos:position pos:line="59" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="36">&amp;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="37">now<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">False<pos:position pos:line="59" pos:column="47"/></name></expr></argument>)<pos:position pos:line="59" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="49"/></expr_stmt>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

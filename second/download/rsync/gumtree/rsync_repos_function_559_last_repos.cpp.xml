<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_559_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_output_words<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">output_struct<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">words<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">short<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">levels<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			       <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">str<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">uchar<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">priority<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">s<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">j<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="21">lev<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">( <init pos:line="7" pos:column="15">;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">str<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></condition> <incr><expr><name pos:line="7" pos:column="22">str<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">s<pos:position pos:line="7" pos:column="29"/></name></expr></incr>)<pos:position pos:line="7" pos:column="30"/></control> <block pos:line="7" pos:column="31">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">s<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">strchr<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">str<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="38">','<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">NULL<pos:position pos:line="8" pos:column="51"/></name></expr>)<pos:position pos:line="8" pos:column="52"/></condition><then pos:line="8" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">len<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">s<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">++<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">str<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt></block></then>
		<else pos:line="10" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">len<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">strlen<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">str<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt></block></else></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">len<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">!<pos:position pos:line="14" pos:column="22"/></operator><call><name pos:line="14" pos:column="22">isDigit<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">str<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <block pos:line="14" pos:column="36">{
			<while pos:line="15" pos:column="25">while <condition pos:line="15" pos:column="31">(<expr><name pos:line="15" pos:column="32">len<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">&amp;&amp;<pos:position pos:line="15" pos:column="46"/></operator> <call><name pos:line="15" pos:column="39">isDigit<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">str<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">+<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">len<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-<pos:position pos:line="15" pos:column="55"/></operator><literal type="number" pos:line="15" pos:column="55">1<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="58"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="33">len<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">--<pos:position pos:line="16" pos:column="38"/></operator></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt></block></while>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">lev<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <ternary><condition><expr><call><name pos:line="18" pos:column="23">isDigit<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">str<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">+<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">len<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr> ?<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <expr><call><name pos:line="18" pos:column="42">atoi<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">str<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">+<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">len<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr> <pos:position pos:line="18" pos:column="56"/></then><else pos:line="18" pos:column="56">: <expr><literal type="number" pos:line="18" pos:column="58">1<pos:position pos:line="18" pos:column="59"/></literal></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">lev<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">&gt;<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="27">MAX_OUT_LEVEL<pos:position pos:line="19" pos:column="40"/></name></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">lev<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">MAX_OUT_LEVEL<pos:position pos:line="20" pos:column="44"/></name></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt></block></then></if>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">len<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="28">4<pos:position pos:line="21" pos:column="29"/></literal> <operator pos:line="21" pos:column="30">&amp;&amp;<pos:position pos:line="21" pos:column="40"/></operator> <call><name pos:line="21" pos:column="33">strncasecmp<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">str<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="50">"help"<pos:position pos:line="21" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="58">4<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call> <operator pos:line="21" pos:column="61">==<pos:position pos:line="21" pos:column="63"/></operator> <literal type="number" pos:line="21" pos:column="64">0<pos:position pos:line="21" pos:column="65"/></literal></expr>)<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66"> <block pos:line="21" pos:column="67">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">output_item_help<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">words<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">exit_cleanup<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><literal type="number" pos:line="23" pos:column="38">0<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">len<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">==<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="28">4<pos:position pos:line="25" pos:column="29"/></literal> <operator pos:line="25" pos:column="30">&amp;&amp;<pos:position pos:line="25" pos:column="40"/></operator> <call><name pos:line="25" pos:column="33">strncasecmp<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">str<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="50">"none"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="58">4<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call> <operator pos:line="25" pos:column="61">==<pos:position pos:line="25" pos:column="63"/></operator> <literal type="number" pos:line="25" pos:column="64">0<pos:position pos:line="25" pos:column="65"/></literal></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">len<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="31">lev<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="37">0<pos:position pos:line="26" pos:column="38"/></literal></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt></block></then>
		<elseif pos:line="27" pos:column="17">else <if pos:line="27" pos:column="22">if <condition pos:line="27" pos:column="25">(<expr><name pos:line="27" pos:column="26">len<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">==<pos:position pos:line="27" pos:column="32"/></operator> <literal type="number" pos:line="27" pos:column="33">3<pos:position pos:line="27" pos:column="34"/></literal> <operator pos:line="27" pos:column="35">&amp;&amp;<pos:position pos:line="27" pos:column="45"/></operator> <call><name pos:line="27" pos:column="38">strncasecmp<pos:position pos:line="27" pos:column="49"/></name><argument_list pos:line="27" pos:column="49">(<argument><expr><name pos:line="27" pos:column="50">str<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="55">"all"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="62">3<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call> <operator pos:line="27" pos:column="65">==<pos:position pos:line="27" pos:column="67"/></operator> <literal type="number" pos:line="27" pos:column="68">0<pos:position pos:line="27" pos:column="69"/></literal></expr>)<pos:position pos:line="27" pos:column="70"/></condition><then pos:line="27" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">len<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt></block></then></if></elseif></if>
		<for pos:line="29" pos:column="17">for <control pos:line="29" pos:column="21">(<init><expr><name pos:line="29" pos:column="22">j<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></init> <condition><expr><name><name pos:line="29" pos:column="29">words<pos:position pos:line="29" pos:column="34"/></name><index pos:line="29" pos:column="34">[<expr><name pos:line="29" pos:column="35">j<pos:position pos:line="29" pos:column="36"/></name></expr>]<pos:position pos:line="29" pos:column="37"/></index></name><operator pos:line="29" pos:column="37">.<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="38">name<pos:position pos:line="29" pos:column="42"/></name></expr>;<pos:position pos:line="29" pos:column="43"/></condition> <incr><expr><name pos:line="29" pos:column="44">j<pos:position pos:line="29" pos:column="45"/></name><operator pos:line="29" pos:column="45">++<pos:position pos:line="29" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="48"/></control> <block pos:line="29" pos:column="49">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><operator pos:line="30" pos:column="29">!<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">len<pos:position pos:line="30" pos:column="33"/></name>
			 <operator pos:line="31" pos:column="26">||<pos:position pos:line="31" pos:column="28"/></operator> <operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">len<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">==<pos:position pos:line="31" pos:column="36"/></operator> <name><name pos:line="31" pos:column="37">words<pos:position pos:line="31" pos:column="42"/></name><index pos:line="31" pos:column="42">[<expr><name pos:line="31" pos:column="43">j<pos:position pos:line="31" pos:column="44"/></name></expr>]<pos:position pos:line="31" pos:column="45"/></index></name><operator pos:line="31" pos:column="45">.<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">namelen<pos:position pos:line="31" pos:column="53"/></name> <operator pos:line="31" pos:column="54">&amp;&amp;<pos:position pos:line="31" pos:column="64"/></operator> <call><name pos:line="31" pos:column="57">strncasecmp<pos:position pos:line="31" pos:column="68"/></name><argument_list pos:line="31" pos:column="68">(<argument><expr><name pos:line="31" pos:column="69">str<pos:position pos:line="31" pos:column="72"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="74">words<pos:position pos:line="31" pos:column="79"/></name><index pos:line="31" pos:column="79">[<expr><name pos:line="31" pos:column="80">j<pos:position pos:line="31" pos:column="81"/></name></expr>]<pos:position pos:line="31" pos:column="82"/></index></name><operator pos:line="31" pos:column="82">.<pos:position pos:line="31" pos:column="83"/></operator><name pos:line="31" pos:column="83">name<pos:position pos:line="31" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="89">len<pos:position pos:line="31" pos:column="92"/></name></expr></argument>)<pos:position pos:line="31" pos:column="93"/></argument_list></call> <operator pos:line="31" pos:column="94">==<pos:position pos:line="31" pos:column="96"/></operator> <literal type="number" pos:line="31" pos:column="97">0<pos:position pos:line="31" pos:column="98"/></literal><operator pos:line="31" pos:column="98">)<pos:position pos:line="31" pos:column="99"/></operator></expr>)<pos:position pos:line="31" pos:column="100"/></condition><then pos:line="31" pos:column="100"> <block pos:line="31" pos:column="101">{
				<if pos:line="32" pos:column="33">if <condition pos:line="32" pos:column="36">(<expr><name pos:line="32" pos:column="37">priority<pos:position pos:line="32" pos:column="45"/></name> <operator pos:line="32" pos:column="46">&gt;=<pos:position pos:line="32" pos:column="51"/></operator> <name><name pos:line="32" pos:column="49">words<pos:position pos:line="32" pos:column="54"/></name><index pos:line="32" pos:column="54">[<expr><name pos:line="32" pos:column="55">j<pos:position pos:line="32" pos:column="56"/></name></expr>]<pos:position pos:line="32" pos:column="57"/></index></name><operator pos:line="32" pos:column="57">.<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">priority<pos:position pos:line="32" pos:column="66"/></name></expr>)<pos:position pos:line="32" pos:column="67"/></condition><then pos:line="32" pos:column="67"> <block pos:line="32" pos:column="68">{
					<expr_stmt><expr><name><name pos:line="33" pos:column="41">words<pos:position pos:line="33" pos:column="46"/></name><index pos:line="33" pos:column="46">[<expr><name pos:line="33" pos:column="47">j<pos:position pos:line="33" pos:column="48"/></name></expr>]<pos:position pos:line="33" pos:column="49"/></index></name><operator pos:line="33" pos:column="49">.<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="50">priority<pos:position pos:line="33" pos:column="58"/></name> <operator pos:line="33" pos:column="59">=<pos:position pos:line="33" pos:column="60"/></operator> <name pos:line="33" pos:column="61">priority<pos:position pos:line="33" pos:column="69"/></name></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="34" pos:column="41">levels<pos:position pos:line="34" pos:column="47"/></name><index pos:line="34" pos:column="47">[<expr><name pos:line="34" pos:column="48">j<pos:position pos:line="34" pos:column="49"/></name></expr>]<pos:position pos:line="34" pos:column="50"/></index></name> <operator pos:line="34" pos:column="51">=<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="53">lev<pos:position pos:line="34" pos:column="56"/></name></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
				}<pos:position pos:line="35" pos:column="34"/></block></then></if>
				<if pos:line="36" pos:column="33">if <condition pos:line="36" pos:column="36">(<expr><name pos:line="36" pos:column="37">len<pos:position pos:line="36" pos:column="40"/></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41">
					<block type="pseudo"><break pos:line="37" pos:column="41">break;<pos:position pos:line="37" pos:column="47"/></break></block></then></if>
			}<pos:position pos:line="38" pos:column="26"/></block></then></if>
		}<pos:position pos:line="39" pos:column="18"/></block></for>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">len<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">&amp;&amp;<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="28">!<pos:position pos:line="40" pos:column="29"/></operator><name><name pos:line="40" pos:column="29">words<pos:position pos:line="40" pos:column="34"/></name><index pos:line="40" pos:column="34">[<expr><name pos:line="40" pos:column="35">j<pos:position pos:line="40" pos:column="36"/></name></expr>]<pos:position pos:line="40" pos:column="37"/></index></name><operator pos:line="40" pos:column="37">.<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">name<pos:position pos:line="40" pos:column="42"/></name></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">rprintf<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">FERROR<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="41">"Unknown %s item: \"%.*s\"\n"<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="42" pos:column="33">words<pos:position pos:line="42" pos:column="38"/></name><index pos:line="42" pos:column="38">[<expr><name pos:line="42" pos:column="39">j<pos:position pos:line="42" pos:column="40"/></name></expr>]<pos:position pos:line="42" pos:column="41"/></index></name><operator pos:line="42" pos:column="41">.<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="42">help<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">len<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="53">str<pos:position pos:line="42" pos:column="56"/></name></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">exit_cleanup<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">RERR_SYNTAX<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

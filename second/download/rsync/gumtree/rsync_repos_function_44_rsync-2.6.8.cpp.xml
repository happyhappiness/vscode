<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_44_rsync-2.6.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">pop_local_filters<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">mem<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">filter_list_struct<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">ap<pos:position pos:line="3" pos:column="38"/></name></decl>, <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="41">pop<pos:position pos:line="3" pos:column="44"/></name> <init pos:line="3" pos:column="45">= <expr><operator pos:line="3" pos:column="47">(<pos:position pos:line="3" pos:column="48"/></operator>struct <name pos:line="3" pos:column="55">filter_list_struct<pos:position pos:line="3" pos:column="73"/></name><operator pos:line="3" pos:column="73">*<pos:position pos:line="3" pos:column="74"/></operator><operator pos:line="3" pos:column="74">)<pos:position pos:line="3" pos:column="75"/></operator><name pos:line="3" pos:column="75">mem<pos:position pos:line="3" pos:column="78"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="79"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">mergelist_cnt<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></init> <condition><expr><name pos:line="6" pos:column="33">i<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">--<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="37">&gt;<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="39">0<pos:position pos:line="6" pos:column="40"/></literal></expr>;<pos:position pos:line="6" pos:column="41"/></condition> <incr/>)<pos:position pos:line="6" pos:column="43"/></control> <block pos:line="6" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="7" pos:column="17">struct<pos:position pos:line="7" pos:column="23"/></name> <name pos:line="7" pos:column="24">filter_struct<pos:position pos:line="7" pos:column="37"/></name></name> <modifier pos:line="7" pos:column="38">*<pos:position pos:line="7" pos:column="39"/></modifier></type><name pos:line="7" pos:column="39">ex<pos:position pos:line="7" pos:column="41"/></name> <init pos:line="7" pos:column="42">= <expr><name><name pos:line="7" pos:column="44">mergelist_parents<pos:position pos:line="7" pos:column="61"/></name><index pos:line="7" pos:column="61">[<expr><name pos:line="7" pos:column="62">i<pos:position pos:line="7" pos:column="63"/></name></expr>]<pos:position pos:line="7" pos:column="64"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="65"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="8" pos:column="17">struct<pos:position pos:line="8" pos:column="23"/></name> <name pos:line="8" pos:column="24">filter_list_struct<pos:position pos:line="8" pos:column="42"/></name></name> <modifier pos:line="8" pos:column="43">*<pos:position pos:line="8" pos:column="44"/></modifier></type><name pos:line="8" pos:column="44">lp<pos:position pos:line="8" pos:column="46"/></name> <init pos:line="8" pos:column="47">= <expr><name><name pos:line="8" pos:column="49">ex<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">u<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">.<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="55">mergelist<pos:position pos:line="8" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="65"/></decl_stmt>

		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">verbose<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&gt;<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="31">2<pos:position pos:line="10" pos:column="32"/></literal></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33"> <block pos:line="10" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">rprintf<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">FINFO<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="40">"[%s] popping filter list%s\n"<pos:position pos:line="11" pos:column="70"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="12" pos:column="33">who_am_i<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">()<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="45">lp<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">-&gt;<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="49">debug_type<pos:position pos:line="12" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="15" pos:column="17">clear_filter_list<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">lp<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></for>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">pop<pos:position pos:line="18" pos:column="17"/></name></expr>)<pos:position pos:line="18" pos:column="18"/></condition><then pos:line="18" pos:column="18">
		<block type="pseudo"><return pos:line="19" pos:column="17">return;<pos:position pos:line="19" pos:column="24"/></return></block></then></if>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr><operator pos:line="21" pos:column="19">,<pos:position pos:line="21" pos:column="20"/></operator> <expr><name pos:line="21" pos:column="21">ap<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">pop<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></init> <condition><expr><name pos:line="21" pos:column="31">i<pos:position pos:line="21" pos:column="32"/></name> <operator pos:line="21" pos:column="33">&lt;<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="35">mergelist_cnt<pos:position pos:line="21" pos:column="48"/></name></expr>;<pos:position pos:line="21" pos:column="49"/></condition> <incr><expr><name pos:line="21" pos:column="50">i<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">++<pos:position pos:line="21" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="54"/></control> <block pos:line="21" pos:column="55">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">memcpy<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name><name pos:line="22" pos:column="24">mergelist_parents<pos:position pos:line="22" pos:column="41"/></name><index pos:line="22" pos:column="41">[<expr><name pos:line="22" pos:column="42">i<pos:position pos:line="22" pos:column="43"/></name></expr>]<pos:position pos:line="22" pos:column="44"/></index></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name><name pos:line="22" pos:column="46">u<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">.<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="48">mergelist<pos:position pos:line="22" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="59">ap<pos:position pos:line="22" pos:column="61"/></name><operator pos:line="22" pos:column="61">++<pos:position pos:line="22" pos:column="63"/></operator></expr></argument>,
		       <argument><expr><sizeof pos:line="23" pos:column="24">sizeof <argument_list pos:line="23" pos:column="31">(<argument><expr pos:line="23" pos:column="32">struct <name pos:line="23" pos:column="39">filter_list_struct<pos:position pos:line="23" pos:column="57"/></name></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">free<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">pop<pos:position pos:line="26" pos:column="17"/></name></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

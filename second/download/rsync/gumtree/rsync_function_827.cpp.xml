<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_827.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">full_fname<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><specifier pos:line="1" pos:column="18">const<pos:position pos:line="1" pos:column="23"/></specifier> <name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">fn<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">result<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">NULL<pos:position pos:line="3" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">m1<pos:position pos:line="4" pos:column="17"/></name></decl>, <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">m2<pos:position pos:line="4" pos:column="22"/></name></decl>, <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="25">m3<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p1<pos:position pos:line="5" pos:column="17"/></name></decl>, <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="20">p2<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">result<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">free<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">result<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">fn<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <literal type="char" pos:line="10" pos:column="20">'/'<pos:position pos:line="10" pos:column="23"/></literal></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">p1<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">p2<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <literal type="string" pos:line="11" pos:column="27">""<pos:position pos:line="11" pos:column="29"/></literal></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt></block></then>
	<else pos:line="12" pos:column="9">else <block pos:line="12" pos:column="14">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">p1<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">curr_dir<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">+<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">module_dirlen<pos:position pos:line="13" pos:column="46"/></name></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
		<for pos:line="14" pos:column="17">for <control pos:line="14" pos:column="21">(<init><expr><name pos:line="14" pos:column="22">p2<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">p1<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></init> <condition><expr><operator pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">p2<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">==<pos:position pos:line="14" pos:column="37"/></operator> <literal type="char" pos:line="14" pos:column="38">'/'<pos:position pos:line="14" pos:column="41"/></literal></expr>;<pos:position pos:line="14" pos:column="42"/></condition> <incr><expr><name pos:line="14" pos:column="43">p2<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">++<pos:position pos:line="14" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="48"/></control> <block pos:line="14" pos:column="49">{}<pos:position pos:line="14" pos:column="51"/></block></for>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">p2<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">p2<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <literal type="string" pos:line="16" pos:column="30">"/"<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="17" pos:column="10"/></block></else></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">module_id<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&gt;=<pos:position pos:line="18" pos:column="28"/></operator> <literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28"> <block pos:line="18" pos:column="29">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">m1<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="string" pos:line="19" pos:column="22">" (in "<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">m2<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <call><name pos:line="20" pos:column="22">lp_name<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">module_id<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">m3<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="string" pos:line="21" pos:column="22">")"<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">m1<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">m2<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">m3<pos:position pos:line="23" pos:column="29"/></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <literal type="string" pos:line="23" pos:column="32">""<pos:position pos:line="23" pos:column="34"/></literal></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt></block></else></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">asprintf<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="23">result<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"\"%s%s%s\"%s%s%s"<pos:position pos:line="25" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">p1<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">p2<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">fn<pos:position pos:line="25" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="63">m1<pos:position pos:line="25" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="67">m2<pos:position pos:line="25" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="71">m3<pos:position pos:line="25" pos:column="73"/></name></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call> <operator pos:line="25" pos:column="75">&lt;=<pos:position pos:line="25" pos:column="80"/></operator> <literal type="number" pos:line="25" pos:column="78">0<pos:position pos:line="25" pos:column="79"/></literal></expr>)<pos:position pos:line="25" pos:column="80"/></condition><then pos:line="25" pos:column="80">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">out_of_memory<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><literal type="string" pos:line="26" pos:column="31">"full_fname"<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt></block></then></if>

	<return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">result<pos:position pos:line="28" pos:column="22"/></name></expr>;<pos:position pos:line="28" pos:column="23"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

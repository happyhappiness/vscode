<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_293_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">flush_delete_delay<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">deldelay_fd<pos:position pos:line="3" pos:column="24"/></name> <operator pos:line="3" pos:column="25">&lt;<pos:position pos:line="3" pos:column="29"/></operator> <literal type="number" pos:line="3" pos:column="27">0<pos:position pos:line="3" pos:column="28"/></literal> <operator pos:line="3" pos:column="29">&amp;&amp;<pos:position pos:line="3" pos:column="39"/></operator> <operator pos:line="3" pos:column="32">!<pos:position pos:line="3" pos:column="33"/></operator><call><name pos:line="3" pos:column="33">start_delete_delay_temp<pos:position pos:line="3" pos:column="56"/></name><argument_list pos:line="3" pos:column="56">()<pos:position pos:line="3" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="59"/></condition><then pos:line="3" pos:column="59">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></return></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">write<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">deldelay_fd<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">deldelay_buf<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">deldelay_cnt<pos:position pos:line="5" pos:column="58"/></name></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call> <operator pos:line="5" pos:column="60">!=<pos:position pos:line="5" pos:column="62"/></operator> <name pos:line="5" pos:column="63">deldelay_cnt<pos:position pos:line="5" pos:column="75"/></name></expr>)<pos:position pos:line="5" pos:column="76"/></condition><then pos:line="5" pos:column="76"> <block pos:line="5" pos:column="77">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">rsyserr<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">FERROR<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">errno<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="40">"flush of delete-delay buffer"<pos:position pos:line="6" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">delete_during<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">=<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="33">0<pos:position pos:line="7" pos:column="34"/></literal></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">delete_after<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">=<pos:position pos:line="8" pos:column="31"/></operator> <operator pos:line="8" pos:column="32">!<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">inc_recurse<pos:position pos:line="8" pos:column="44"/></name></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">close<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">deldelay_fd<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="12" pos:column="9">deldelay_cnt<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

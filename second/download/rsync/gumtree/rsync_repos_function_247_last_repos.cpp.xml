<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_247_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">try_bind_local<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">s<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">ai_family<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">ai_socktype<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">bind_addr<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">error<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">addrinfo<pos:position pos:line="5" pos:column="24"/></name></name></type> <name pos:line="5" pos:column="25">bhints<pos:position pos:line="5" pos:column="31"/></name></decl>, <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="34">bres_all<pos:position pos:line="5" pos:column="42"/></name></decl>, <modifier pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="45">r<pos:position pos:line="5" pos:column="46"/></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="17">bhints<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="28">sizeof <name pos:line="7" pos:column="35">bhints<pos:position pos:line="7" pos:column="41"/></name></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">bhints<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">ai_family<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">ai_family<pos:position pos:line="8" pos:column="37"/></name></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">bhints<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">ai_socktype<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">ai_socktype<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">bhints<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">ai_flags<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">AI_PASSIVE<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">error<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <call><name pos:line="11" pos:column="22">getaddrinfo<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">bind_addr<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">NULL<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="51">&amp;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="52">bhints<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="60">&amp;<pos:position pos:line="11" pos:column="65"/></operator><name pos:line="11" pos:column="61">bres_all<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call><operator pos:line="11" pos:column="70">)<pos:position pos:line="11" pos:column="71"/></operator></expr>)<pos:position pos:line="11" pos:column="72"/></condition><then pos:line="11" pos:column="72"> <block pos:line="11" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FERROR<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">RSYNC_NAME<pos:position pos:line="12" pos:column="43"/></name> <literal type="string" pos:line="12" pos:column="44">": getaddrinfo %s: %s\n"<pos:position pos:line="12" pos:column="68"/></literal></expr></argument>,
			<argument><expr><name pos:line="13" pos:column="25">bind_addr<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="36">gai_strerror<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">error<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">r<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">bres_all<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></init> <condition><expr><name pos:line="17" pos:column="28">r<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></condition> <incr><expr><name pos:line="17" pos:column="31">r<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <name><name pos:line="17" pos:column="35">r<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">ai_next<pos:position pos:line="17" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="46"/></control> <block pos:line="17" pos:column="47">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">bind<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">s<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="29">r<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">ai_addr<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="41">r<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">ai_addrlen<pos:position pos:line="18" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call> <operator pos:line="18" pos:column="56">==<pos:position pos:line="18" pos:column="58"/></operator> <operator pos:line="18" pos:column="59">-<pos:position pos:line="18" pos:column="60"/></operator><literal type="number" pos:line="18" pos:column="60">1<pos:position pos:line="18" pos:column="61"/></literal></expr>)<pos:position pos:line="18" pos:column="62"/></condition><then pos:line="18" pos:column="62">
			<block type="pseudo"><continue pos:line="19" pos:column="25">continue;<pos:position pos:line="19" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">freeaddrinfo<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">bres_all<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">s<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></for>

	<comment type="block" pos:line="24" pos:column="9">/* no error message; there might be some problem that allows
	 * creation of the socket but not binding, perhaps if the
	 * machine has no ipv6 address of this name. */</comment>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">freeaddrinfo<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">bres_all<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
	<return pos:line="28" pos:column="9">return <expr><operator pos:line="28" pos:column="16">-<pos:position pos:line="28" pos:column="17"/></operator><literal type="number" pos:line="28" pos:column="17">1<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

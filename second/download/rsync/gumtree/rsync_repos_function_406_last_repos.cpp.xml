<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_406_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">set_file_attrs<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fname<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">file_struct<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">file<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">stat_x<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">sxp<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
		   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">fnamecmp<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">flags<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">updated<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">stat_x<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">sx2<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">change_uid<pos:position pos:line="6" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="25">change_gid<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">mode_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">new_mode<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">file<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">mode<pos:position pos:line="7" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">inherit<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">sxp<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">dry_run<pos:position pos:line="11" pos:column="28"/></name></expr>)<pos:position pos:line="11" pos:column="29"/></condition><then pos:line="11" pos:column="29">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><literal type="number" pos:line="12" pos:column="32">1<pos:position pos:line="12" pos:column="33"/></literal></expr>;<pos:position pos:line="12" pos:column="34"/></return></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">link_stat<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">fname<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="38">&amp;<pos:position pos:line="13" pos:column="43"/></operator><name><name pos:line="13" pos:column="39">sx2<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">.<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">st<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call> <operator pos:line="13" pos:column="50">&lt;<pos:position pos:line="13" pos:column="54"/></operator> <literal type="number" pos:line="13" pos:column="52">0<pos:position pos:line="13" pos:column="53"/></literal></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54"> <block pos:line="13" pos:column="55">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">rsyserr<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">FERROR_XFER<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">errno<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="53">"stat %s failed"<pos:position pos:line="14" pos:column="69"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="15" pos:column="33">full_fname<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">fname<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
			<return pos:line="16" pos:column="25">return <expr><literal type="number" pos:line="16" pos:column="32">0<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></return>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">init_stat_x<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><operator pos:line="18" pos:column="29">&amp;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="30">sx2<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">sxp<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <operator pos:line="19" pos:column="23">&amp;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="24">sx2<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">inherit<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <operator pos:line="20" pos:column="27">!<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">preserve_perms<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">inherit<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <operator pos:line="22" pos:column="27">!<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">preserve_perms<pos:position pos:line="22" pos:column="42"/></name> <operator pos:line="22" pos:column="43">&amp;&amp;<pos:position pos:line="22" pos:column="53"/></operator> <name><name pos:line="22" pos:column="46">file<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">flags<pos:position pos:line="22" pos:column="57"/></name></name> <operator pos:line="22" pos:column="58">&amp;<pos:position pos:line="22" pos:column="63"/></operator> <name pos:line="22" pos:column="60">FLAG_DIR_CREATED<pos:position pos:line="22" pos:column="76"/></name></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt></block></else></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">inherit<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&amp;&amp;<pos:position pos:line="24" pos:column="31"/></operator> <call><name pos:line="24" pos:column="24">S_ISDIR<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">new_mode<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call> <operator pos:line="24" pos:column="42">&amp;&amp;<pos:position pos:line="24" pos:column="52"/></operator> <name><name pos:line="24" pos:column="45">sxp<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">st<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">.<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="53">st_mode<pos:position pos:line="24" pos:column="60"/></name></name> <operator pos:line="24" pos:column="61">&amp;<pos:position pos:line="24" pos:column="66"/></operator> <name pos:line="24" pos:column="63">S_ISGID<pos:position pos:line="24" pos:column="70"/></name></expr>)<pos:position pos:line="24" pos:column="71"/></condition><then pos:line="24" pos:column="71"> <block pos:line="24" pos:column="72">{
		<comment type="block" pos:line="25" pos:column="17">/* We just created this directory and its setgid
		 * bit is on, so make sure it stays on. */</comment>
		<expr_stmt><expr><name pos:line="27" pos:column="17">new_mode<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">|=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">S_ISGID<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">daemon_chmod_modes<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">&amp;&amp;<pos:position pos:line="30" pos:column="42"/></operator> <operator pos:line="30" pos:column="35">!<pos:position pos:line="30" pos:column="36"/></operator><call><name pos:line="30" pos:column="36">S_ISLNK<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">new_mode<pos:position pos:line="30" pos:column="52"/></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="54"/></condition><then pos:line="30" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">new_mode<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">=<pos:position pos:line="31" pos:column="27"/></operator> <call><name pos:line="31" pos:column="28">tweak_mode<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">new_mode<pos:position pos:line="31" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="49">daemon_chmod_modes<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">SUPPORT_ACLS<pos:position pos:line="33" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">preserve_acls<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">&amp;&amp;<pos:position pos:line="34" pos:column="37"/></operator> <operator pos:line="34" pos:column="30">!<pos:position pos:line="34" pos:column="31"/></operator><call><name pos:line="34" pos:column="31">S_ISLNK<pos:position pos:line="34" pos:column="38"/></name><argument_list pos:line="34" pos:column="38">(<argument><expr><name><name pos:line="34" pos:column="39">file<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">-&gt;<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="45">mode<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call> <operator pos:line="34" pos:column="51">&amp;&amp;<pos:position pos:line="34" pos:column="61"/></operator> <operator pos:line="34" pos:column="54">!<pos:position pos:line="34" pos:column="55"/></operator><call><name pos:line="34" pos:column="55">ACL_READY<pos:position pos:line="34" pos:column="64"/></name><argument_list pos:line="34" pos:column="64">(<argument><expr><operator pos:line="34" pos:column="65">*<pos:position pos:line="34" pos:column="66"/></operator><name pos:line="34" pos:column="66">sxp<pos:position pos:line="34" pos:column="69"/></name></expr></argument>)<pos:position pos:line="34" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="71"/></condition><then pos:line="34" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">get_acl<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">fname<pos:position pos:line="35" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">sxp<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt></block></then></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="38" pos:column="9">change_uid<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">am_root<pos:position pos:line="38" pos:column="29"/></name> <operator pos:line="38" pos:column="30">&amp;&amp;<pos:position pos:line="38" pos:column="40"/></operator> <name pos:line="38" pos:column="33">uid_ndx<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">&amp;&amp;<pos:position pos:line="38" pos:column="51"/></operator> <name><name pos:line="38" pos:column="44">sxp<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">st<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">.<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="52">st_uid<pos:position pos:line="38" pos:column="58"/></name></name> <operator pos:line="38" pos:column="59">!=<pos:position pos:line="38" pos:column="61"/></operator> <operator pos:line="38" pos:column="62">(<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="63">uid_t<pos:position pos:line="38" pos:column="68"/></name><operator pos:line="38" pos:column="68">)<pos:position pos:line="38" pos:column="69"/></operator><call><name pos:line="38" pos:column="69">F_OWNER<pos:position pos:line="38" pos:column="76"/></name><argument_list pos:line="38" pos:column="76">(<argument><expr><name pos:line="38" pos:column="77">file<pos:position pos:line="38" pos:column="81"/></name></expr></argument>)<pos:position pos:line="38" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="83"/></expr_stmt>
	<expr_stmt><expr><name pos:line="39" pos:column="9">change_gid<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">gid_ndx<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">&amp;&amp;<pos:position pos:line="39" pos:column="40"/></operator> <operator pos:line="39" pos:column="33">!<pos:position pos:line="39" pos:column="34"/></operator><operator pos:line="39" pos:column="34">(<pos:position pos:line="39" pos:column="35"/></operator><name><name pos:line="39" pos:column="35">file<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">flags<pos:position pos:line="39" pos:column="46"/></name></name> <operator pos:line="39" pos:column="47">&amp;<pos:position pos:line="39" pos:column="52"/></operator> <name pos:line="39" pos:column="49">FLAG_SKIP_GROUP<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">)<pos:position pos:line="39" pos:column="65"/></operator>
		  <operator pos:line="40" pos:column="19">&amp;&amp;<pos:position pos:line="40" pos:column="29"/></operator> <name><name pos:line="40" pos:column="22">sxp<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">st<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">.<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">st_gid<pos:position pos:line="40" pos:column="36"/></name></name> <operator pos:line="40" pos:column="37">!=<pos:position pos:line="40" pos:column="39"/></operator> <operator pos:line="40" pos:column="40">(<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">gid_t<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">)<pos:position pos:line="40" pos:column="47"/></operator><call><name pos:line="40" pos:column="47">F_GROUP<pos:position pos:line="40" pos:column="54"/></name><argument_list pos:line="40" pos:column="54">(<argument><expr><name pos:line="40" pos:column="55">file<pos:position pos:line="40" pos:column="59"/></name></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>
<cpp:ifndef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifndef<pos:position pos:line="41" pos:column="8"/></cpp:directive> <name pos:line="41" pos:column="9">CAN_CHOWN_SYMLINK<pos:position pos:line="41" pos:column="26"/></name></cpp:ifndef>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">S_ISLNK<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name><name pos:line="42" pos:column="21">sxp<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">st<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">st_mode<pos:position pos:line="42" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38"> <block pos:line="42" pos:column="39">{
		<empty_stmt pos:line="43" pos:column="17">;<pos:position pos:line="43" pos:column="18"/></empty_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then> <elseif pos:line="44" pos:column="11">else
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">change_uid<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">||<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">change_gid<pos:position pos:line="46" pos:column="37"/></name></expr>)<pos:position pos:line="46" pos:column="38"/></condition><then pos:line="46" pos:column="38"> <block pos:line="46" pos:column="39">{
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><call><name pos:line="47" pos:column="21">DEBUG_GTE<pos:position pos:line="47" pos:column="30"/></name><argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">OWN<pos:position pos:line="47" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="36">1<pos:position pos:line="47" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="39"/></condition><then pos:line="47" pos:column="39"> <block pos:line="47" pos:column="40">{
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><name pos:line="48" pos:column="29">change_uid<pos:position pos:line="48" pos:column="39"/></name></expr>)<pos:position pos:line="48" pos:column="40"/></condition><then pos:line="48" pos:column="40"> <block pos:line="48" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="49" pos:column="33">rprintf<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">(<argument><expr><name pos:line="49" pos:column="41">FINFO<pos:position pos:line="49" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="50" pos:column="41">"set uid of %s from %u to %u\n"<pos:position pos:line="50" pos:column="72"/></literal></expr></argument>,
					<argument><expr><name pos:line="51" pos:column="41">fname<pos:position pos:line="51" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="48">(<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="49">unsigned<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">)<pos:position pos:line="51" pos:column="58"/></operator><name><name pos:line="51" pos:column="58">sxp<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">-&gt;<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="63">st<pos:position pos:line="51" pos:column="65"/></name><operator pos:line="51" pos:column="65">.<pos:position pos:line="51" pos:column="66"/></operator><name pos:line="51" pos:column="66">st_uid<pos:position pos:line="51" pos:column="72"/></name></name></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="74">F_OWNER<pos:position pos:line="51" pos:column="81"/></name><argument_list pos:line="51" pos:column="81">(<argument><expr><name pos:line="51" pos:column="82">file<pos:position pos:line="51" pos:column="86"/></name></expr></argument>)<pos:position pos:line="51" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="89"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></then></if>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><name pos:line="53" pos:column="29">change_gid<pos:position pos:line="53" pos:column="39"/></name></expr>)<pos:position pos:line="53" pos:column="40"/></condition><then pos:line="53" pos:column="40"> <block pos:line="53" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="54" pos:column="33">rprintf<pos:position pos:line="54" pos:column="40"/></name><argument_list pos:line="54" pos:column="40">(<argument><expr><name pos:line="54" pos:column="41">FINFO<pos:position pos:line="54" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="55" pos:column="41">"set gid of %s from %u to %u\n"<pos:position pos:line="55" pos:column="72"/></literal></expr></argument>,
					<argument><expr><name pos:line="56" pos:column="41">fname<pos:position pos:line="56" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="48">(<pos:position pos:line="56" pos:column="49"/></operator><name pos:line="56" pos:column="49">unsigned<pos:position pos:line="56" pos:column="57"/></name><operator pos:line="56" pos:column="57">)<pos:position pos:line="56" pos:column="58"/></operator><name><name pos:line="56" pos:column="58">sxp<pos:position pos:line="56" pos:column="61"/></name><operator pos:line="56" pos:column="61">-&gt;<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="63">st<pos:position pos:line="56" pos:column="65"/></name><operator pos:line="56" pos:column="65">.<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="66">st_gid<pos:position pos:line="56" pos:column="72"/></name></name></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="74">F_GROUP<pos:position pos:line="56" pos:column="81"/></name><argument_list pos:line="56" pos:column="81">(<argument><expr><name pos:line="56" pos:column="82">file<pos:position pos:line="56" pos:column="86"/></name></expr></argument>)<pos:position pos:line="56" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="89"/></expr_stmt>
			}<pos:position pos:line="57" pos:column="26"/></block></then></if>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">am_root<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">&gt;=<pos:position pos:line="59" pos:column="34"/></operator> <literal type="number" pos:line="59" pos:column="32">0<pos:position pos:line="59" pos:column="33"/></literal></expr>)<pos:position pos:line="59" pos:column="34"/></condition><then pos:line="59" pos:column="34"> <block pos:line="59" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="60" pos:column="25">uid_t<pos:position pos:line="60" pos:column="30"/></name></type> <name pos:line="60" pos:column="31">uid<pos:position pos:line="60" pos:column="34"/></name> <init pos:line="60" pos:column="35">= <expr><ternary><condition><expr><name pos:line="60" pos:column="37">change_uid<pos:position pos:line="60" pos:column="47"/></name></expr> ?<pos:position pos:line="60" pos:column="49"/></condition><then pos:line="60" pos:column="49"> <expr><operator pos:line="60" pos:column="50">(<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="51">uid_t<pos:position pos:line="60" pos:column="56"/></name><operator pos:line="60" pos:column="56">)<pos:position pos:line="60" pos:column="57"/></operator><call><name pos:line="60" pos:column="57">F_OWNER<pos:position pos:line="60" pos:column="64"/></name><argument_list pos:line="60" pos:column="64">(<argument><expr><name pos:line="60" pos:column="65">file<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr> <pos:position pos:line="60" pos:column="71"/></then><else pos:line="60" pos:column="71">: <expr><name><name pos:line="60" pos:column="73">sxp<pos:position pos:line="60" pos:column="76"/></name><operator pos:line="60" pos:column="76">-&gt;<pos:position pos:line="60" pos:column="81"/></operator><name pos:line="60" pos:column="78">st<pos:position pos:line="60" pos:column="80"/></name><operator pos:line="60" pos:column="80">.<pos:position pos:line="60" pos:column="81"/></operator><name pos:line="60" pos:column="81">st_uid<pos:position pos:line="60" pos:column="87"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="60" pos:column="88"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="61" pos:column="25">gid_t<pos:position pos:line="61" pos:column="30"/></name></type> <name pos:line="61" pos:column="31">gid<pos:position pos:line="61" pos:column="34"/></name> <init pos:line="61" pos:column="35">= <expr><ternary><condition><expr><name pos:line="61" pos:column="37">change_gid<pos:position pos:line="61" pos:column="47"/></name></expr> ?<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49"> <expr><operator pos:line="61" pos:column="50">(<pos:position pos:line="61" pos:column="51"/></operator><name pos:line="61" pos:column="51">gid_t<pos:position pos:line="61" pos:column="56"/></name><operator pos:line="61" pos:column="56">)<pos:position pos:line="61" pos:column="57"/></operator><call><name pos:line="61" pos:column="57">F_GROUP<pos:position pos:line="61" pos:column="64"/></name><argument_list pos:line="61" pos:column="64">(<argument><expr><name pos:line="61" pos:column="65">file<pos:position pos:line="61" pos:column="69"/></name></expr></argument>)<pos:position pos:line="61" pos:column="70"/></argument_list></call></expr> <pos:position pos:line="61" pos:column="71"/></then><else pos:line="61" pos:column="71">: <expr><name><name pos:line="61" pos:column="73">sxp<pos:position pos:line="61" pos:column="76"/></name><operator pos:line="61" pos:column="76">-&gt;<pos:position pos:line="61" pos:column="81"/></operator><name pos:line="61" pos:column="78">st<pos:position pos:line="61" pos:column="80"/></name><operator pos:line="61" pos:column="80">.<pos:position pos:line="61" pos:column="81"/></operator><name pos:line="61" pos:column="81">st_gid<pos:position pos:line="61" pos:column="87"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="61" pos:column="88"/></decl_stmt>
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><call><name pos:line="62" pos:column="29">do_lchown<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><name pos:line="62" pos:column="39">fname<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">uid<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="51">gid<pos:position pos:line="62" pos:column="54"/></name></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call> <operator pos:line="62" pos:column="56">!=<pos:position pos:line="62" pos:column="58"/></operator> <literal type="number" pos:line="62" pos:column="59">0<pos:position pos:line="62" pos:column="60"/></literal></expr>)<pos:position pos:line="62" pos:column="61"/></condition><then pos:line="62" pos:column="61"> <block pos:line="62" pos:column="62">{
				<comment type="block" pos:line="63" pos:column="33">/* We shouldn't have attempted to change uid
				 * or gid unless have the privilege. */</comment>
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">rsyserr<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><name pos:line="65" pos:column="41">FERROR_XFER<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">errno<pos:position pos:line="65" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="61">"%s %s failed"<pos:position pos:line="65" pos:column="75"/></literal></expr></argument>,
				    <argument><expr><ternary><condition><expr><name pos:line="66" pos:column="37">change_uid<pos:position pos:line="66" pos:column="47"/></name></expr> ?<pos:position pos:line="66" pos:column="49"/></condition><then pos:line="66" pos:column="49"> <expr><literal type="string" pos:line="66" pos:column="50">"chown"<pos:position pos:line="66" pos:column="57"/></literal></expr> <pos:position pos:line="66" pos:column="58"/></then><else pos:line="66" pos:column="58">: <expr><literal type="string" pos:line="66" pos:column="60">"chgrp"<pos:position pos:line="66" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
				    <argument><expr><call><name pos:line="67" pos:column="37">full_fname<pos:position pos:line="67" pos:column="47"/></name><argument_list pos:line="67" pos:column="47">(<argument><expr><name pos:line="67" pos:column="48">fname<pos:position pos:line="67" pos:column="53"/></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="56"/></expr_stmt>
				<goto pos:line="68" pos:column="33">goto <name pos:line="68" pos:column="38">cleanup<pos:position pos:line="68" pos:column="45"/></name>;<pos:position pos:line="68" pos:column="46"/></goto>
			}<pos:position pos:line="69" pos:column="26"/></block></then></if>
			<if pos:line="70" pos:column="25">if <condition pos:line="70" pos:column="28">(<expr><name pos:line="70" pos:column="29">uid<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">==<pos:position pos:line="70" pos:column="35"/></operator> <operator pos:line="70" pos:column="36">(<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="37">uid_t<pos:position pos:line="70" pos:column="42"/></name><operator pos:line="70" pos:column="42">)<pos:position pos:line="70" pos:column="43"/></operator><operator pos:line="70" pos:column="43">-<pos:position pos:line="70" pos:column="44"/></operator><literal type="number" pos:line="70" pos:column="44">1<pos:position pos:line="70" pos:column="45"/></literal> <operator pos:line="70" pos:column="46">&amp;&amp;<pos:position pos:line="70" pos:column="56"/></operator> <name><name pos:line="70" pos:column="49">sxp<pos:position pos:line="70" pos:column="52"/></name><operator pos:line="70" pos:column="52">-&gt;<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="54">st<pos:position pos:line="70" pos:column="56"/></name><operator pos:line="70" pos:column="56">.<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="57">st_uid<pos:position pos:line="70" pos:column="63"/></name></name> <operator pos:line="70" pos:column="64">!=<pos:position pos:line="70" pos:column="66"/></operator> <operator pos:line="70" pos:column="67">(<pos:position pos:line="70" pos:column="68"/></operator><name pos:line="70" pos:column="68">uid_t<pos:position pos:line="70" pos:column="73"/></name><operator pos:line="70" pos:column="73">)<pos:position pos:line="70" pos:column="74"/></operator><operator pos:line="70" pos:column="74">-<pos:position pos:line="70" pos:column="75"/></operator><literal type="number" pos:line="70" pos:column="75">1<pos:position pos:line="70" pos:column="76"/></literal></expr>)<pos:position pos:line="70" pos:column="77"/></condition><then pos:line="70" pos:column="77">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="33">rprintf<pos:position pos:line="71" pos:column="40"/></name><argument_list pos:line="71" pos:column="40">(<argument><expr><name pos:line="71" pos:column="41">FERROR_XFER<pos:position pos:line="71" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="54">"uid 4294967295 (-1) is impossible to set on %s\n"<pos:position pos:line="71" pos:column="104"/></literal></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="106">full_fname<pos:position pos:line="71" pos:column="116"/></name><argument_list pos:line="71" pos:column="116">(<argument><expr><name pos:line="71" pos:column="117">fname<pos:position pos:line="71" pos:column="122"/></name></expr></argument>)<pos:position pos:line="71" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="125"/></expr_stmt></block></then></if>
			<if pos:line="72" pos:column="25">if <condition pos:line="72" pos:column="28">(<expr><name pos:line="72" pos:column="29">gid<pos:position pos:line="72" pos:column="32"/></name> <operator pos:line="72" pos:column="33">==<pos:position pos:line="72" pos:column="35"/></operator> <operator pos:line="72" pos:column="36">(<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="37">gid_t<pos:position pos:line="72" pos:column="42"/></name><operator pos:line="72" pos:column="42">)<pos:position pos:line="72" pos:column="43"/></operator><operator pos:line="72" pos:column="43">-<pos:position pos:line="72" pos:column="44"/></operator><literal type="number" pos:line="72" pos:column="44">1<pos:position pos:line="72" pos:column="45"/></literal> <operator pos:line="72" pos:column="46">&amp;&amp;<pos:position pos:line="72" pos:column="56"/></operator> <name><name pos:line="72" pos:column="49">sxp<pos:position pos:line="72" pos:column="52"/></name><operator pos:line="72" pos:column="52">-&gt;<pos:position pos:line="72" pos:column="57"/></operator><name pos:line="72" pos:column="54">st<pos:position pos:line="72" pos:column="56"/></name><operator pos:line="72" pos:column="56">.<pos:position pos:line="72" pos:column="57"/></operator><name pos:line="72" pos:column="57">st_gid<pos:position pos:line="72" pos:column="63"/></name></name> <operator pos:line="72" pos:column="64">!=<pos:position pos:line="72" pos:column="66"/></operator> <operator pos:line="72" pos:column="67">(<pos:position pos:line="72" pos:column="68"/></operator><name pos:line="72" pos:column="68">gid_t<pos:position pos:line="72" pos:column="73"/></name><operator pos:line="72" pos:column="73">)<pos:position pos:line="72" pos:column="74"/></operator><operator pos:line="72" pos:column="74">-<pos:position pos:line="72" pos:column="75"/></operator><literal type="number" pos:line="72" pos:column="75">1<pos:position pos:line="72" pos:column="76"/></literal></expr>)<pos:position pos:line="72" pos:column="77"/></condition><then pos:line="72" pos:column="77">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="33">rprintf<pos:position pos:line="73" pos:column="40"/></name><argument_list pos:line="73" pos:column="40">(<argument><expr><name pos:line="73" pos:column="41">FERROR_XFER<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="54">"gid 4294967295 (-1) is impossible to set on %s\n"<pos:position pos:line="73" pos:column="104"/></literal></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="106">full_fname<pos:position pos:line="73" pos:column="116"/></name><argument_list pos:line="73" pos:column="116">(<argument><expr><name pos:line="73" pos:column="117">fname<pos:position pos:line="73" pos:column="122"/></name></expr></argument>)<pos:position pos:line="73" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="125"/></expr_stmt></block></then></if>
			<comment type="block" pos:line="74" pos:column="25">/* A lchown had been done, so we need to re-stat if
			 * the destination had the setuid or setgid bits set
			 * (due to the side effect of the chown call). */</comment>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><name><name pos:line="77" pos:column="29">sxp<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">-&gt;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="34">st<pos:position pos:line="77" pos:column="36"/></name><operator pos:line="77" pos:column="36">.<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="37">st_mode<pos:position pos:line="77" pos:column="44"/></name></name> <operator pos:line="77" pos:column="45">&amp;<pos:position pos:line="77" pos:column="50"/></operator> <operator pos:line="77" pos:column="47">(<pos:position pos:line="77" pos:column="48"/></operator><name pos:line="77" pos:column="48">S_ISUID<pos:position pos:line="77" pos:column="55"/></name> <operator pos:line="77" pos:column="56">|<pos:position pos:line="77" pos:column="57"/></operator> <name pos:line="77" pos:column="58">S_ISGID<pos:position pos:line="77" pos:column="65"/></name><operator pos:line="77" pos:column="65">)<pos:position pos:line="77" pos:column="66"/></operator></expr>)<pos:position pos:line="77" pos:column="67"/></condition><then pos:line="77" pos:column="67"> <block pos:line="77" pos:column="68">{
				<expr_stmt><expr><call><name pos:line="78" pos:column="33">link_stat<pos:position pos:line="78" pos:column="42"/></name><argument_list pos:line="78" pos:column="42">(<argument><expr><name pos:line="78" pos:column="43">fname<pos:position pos:line="78" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="50">&amp;<pos:position pos:line="78" pos:column="55"/></operator><name><name pos:line="78" pos:column="51">sxp<pos:position pos:line="78" pos:column="54"/></name><operator pos:line="78" pos:column="54">-&gt;<pos:position pos:line="78" pos:column="59"/></operator><name pos:line="78" pos:column="56">st<pos:position pos:line="78" pos:column="58"/></name></name></expr></argument>,
					  <argument><expr><name pos:line="79" pos:column="43">keep_dirlinks<pos:position pos:line="79" pos:column="56"/></name> <operator pos:line="79" pos:column="57">&amp;&amp;<pos:position pos:line="79" pos:column="67"/></operator> <call><name pos:line="79" pos:column="60">S_ISDIR<pos:position pos:line="79" pos:column="67"/></name><argument_list pos:line="79" pos:column="67">(<argument><expr><name><name pos:line="79" pos:column="68">sxp<pos:position pos:line="79" pos:column="71"/></name><operator pos:line="79" pos:column="71">-&gt;<pos:position pos:line="79" pos:column="76"/></operator><name pos:line="79" pos:column="73">st<pos:position pos:line="79" pos:column="75"/></name><operator pos:line="79" pos:column="75">.<pos:position pos:line="79" pos:column="76"/></operator><name pos:line="79" pos:column="76">st_mode<pos:position pos:line="79" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="86"/></expr_stmt>
			}<pos:position pos:line="80" pos:column="26"/></block></then></if>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="82" pos:column="17">updated<pos:position pos:line="82" pos:column="24"/></name> <operator pos:line="82" pos:column="25">=<pos:position pos:line="82" pos:column="26"/></operator> <literal type="number" pos:line="82" pos:column="27">1<pos:position pos:line="82" pos:column="28"/></literal></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="83" pos:column="10"/></block></then></if></elseif></if>

<cpp:ifdef pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">ifdef<pos:position pos:line="85" pos:column="7"/></cpp:directive> <name pos:line="85" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="85" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">am_root<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">&lt;<pos:position pos:line="86" pos:column="25"/></operator> <literal type="number" pos:line="86" pos:column="23">0<pos:position pos:line="86" pos:column="24"/></literal></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="17">set_stat_xattr<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><name pos:line="87" pos:column="32">fname<pos:position pos:line="87" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="39">file<pos:position pos:line="87" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="45">new_mode<pos:position pos:line="87" pos:column="53"/></name></expr></argument>)<pos:position pos:line="87" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="55"/></expr_stmt></block></then></if>
	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">preserve_xattrs<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">&amp;&amp;<pos:position pos:line="88" pos:column="39"/></operator> <name pos:line="88" pos:column="32">fnamecmp<pos:position pos:line="88" pos:column="40"/></name></expr>)<pos:position pos:line="88" pos:column="41"/></condition><then pos:line="88" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="17">set_xattr<pos:position pos:line="89" pos:column="26"/></name><argument_list pos:line="89" pos:column="26">(<argument><expr><name pos:line="89" pos:column="27">fname<pos:position pos:line="89" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="34">file<pos:position pos:line="89" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="40">fnamecmp<pos:position pos:line="89" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="50">sxp<pos:position pos:line="89" pos:column="53"/></name></expr></argument>)<pos:position pos:line="89" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="55"/></expr_stmt></block></then></if>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><operator pos:line="92" pos:column="13">!<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">preserve_times<pos:position pos:line="92" pos:column="28"/></name>
	 <operator pos:line="93" pos:column="10">||<pos:position pos:line="93" pos:column="12"/></operator> <operator pos:line="93" pos:column="13">(<pos:position pos:line="93" pos:column="14"/></operator><operator pos:line="93" pos:column="14">!<pos:position pos:line="93" pos:column="15"/></operator><operator pos:line="93" pos:column="15">(<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="16">preserve_times<pos:position pos:line="93" pos:column="30"/></name> <operator pos:line="93" pos:column="31">&amp;<pos:position pos:line="93" pos:column="36"/></operator> <name pos:line="93" pos:column="33">PRESERVE_DIR_TIMES<pos:position pos:line="93" pos:column="51"/></name><operator pos:line="93" pos:column="51">)<pos:position pos:line="93" pos:column="52"/></operator> <operator pos:line="93" pos:column="53">&amp;&amp;<pos:position pos:line="93" pos:column="63"/></operator> <call><name pos:line="93" pos:column="56">S_ISDIR<pos:position pos:line="93" pos:column="63"/></name><argument_list pos:line="93" pos:column="63">(<argument><expr><name><name pos:line="93" pos:column="64">sxp<pos:position pos:line="93" pos:column="67"/></name><operator pos:line="93" pos:column="67">-&gt;<pos:position pos:line="93" pos:column="72"/></operator><name pos:line="93" pos:column="69">st<pos:position pos:line="93" pos:column="71"/></name><operator pos:line="93" pos:column="71">.<pos:position pos:line="93" pos:column="72"/></operator><name pos:line="93" pos:column="72">st_mode<pos:position pos:line="93" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="80"/></argument_list></call><operator pos:line="93" pos:column="80">)<pos:position pos:line="93" pos:column="81"/></operator>
	 <operator pos:line="94" pos:column="10">||<pos:position pos:line="94" pos:column="12"/></operator> <operator pos:line="94" pos:column="13">(<pos:position pos:line="94" pos:column="14"/></operator><operator pos:line="94" pos:column="14">!<pos:position pos:line="94" pos:column="15"/></operator><operator pos:line="94" pos:column="15">(<pos:position pos:line="94" pos:column="16"/></operator><name pos:line="94" pos:column="16">preserve_times<pos:position pos:line="94" pos:column="30"/></name> <operator pos:line="94" pos:column="31">&amp;<pos:position pos:line="94" pos:column="36"/></operator> <name pos:line="94" pos:column="33">PRESERVE_LINK_TIMES<pos:position pos:line="94" pos:column="52"/></name><operator pos:line="94" pos:column="52">)<pos:position pos:line="94" pos:column="53"/></operator> <operator pos:line="94" pos:column="54">&amp;&amp;<pos:position pos:line="94" pos:column="64"/></operator> <call><name pos:line="94" pos:column="57">S_ISLNK<pos:position pos:line="94" pos:column="64"/></name><argument_list pos:line="94" pos:column="64">(<argument><expr><name><name pos:line="94" pos:column="65">sxp<pos:position pos:line="94" pos:column="68"/></name><operator pos:line="94" pos:column="68">-&gt;<pos:position pos:line="94" pos:column="73"/></operator><name pos:line="94" pos:column="70">st<pos:position pos:line="94" pos:column="72"/></name><operator pos:line="94" pos:column="72">.<pos:position pos:line="94" pos:column="73"/></operator><name pos:line="94" pos:column="73">st_mode<pos:position pos:line="94" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="81"/></argument_list></call><operator pos:line="94" pos:column="81">)<pos:position pos:line="94" pos:column="82"/></operator></expr>)<pos:position pos:line="94" pos:column="83"/></condition><then pos:line="94" pos:column="83">
		<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="17">flags<pos:position pos:line="95" pos:column="22"/></name> <operator pos:line="95" pos:column="23">|=<pos:position pos:line="95" pos:column="25"/></operator> <name pos:line="95" pos:column="26">ATTRS_SKIP_MTIME<pos:position pos:line="95" pos:column="42"/></name></expr>;<pos:position pos:line="95" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><operator pos:line="96" pos:column="13">!<pos:position pos:line="96" pos:column="14"/></operator><operator pos:line="96" pos:column="14">(<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="15">flags<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">&amp;<pos:position pos:line="96" pos:column="26"/></operator> <name pos:line="96" pos:column="23">ATTRS_SKIP_MTIME<pos:position pos:line="96" pos:column="39"/></name><operator pos:line="96" pos:column="39">)<pos:position pos:line="96" pos:column="40"/></operator>
	 <operator pos:line="97" pos:column="10">&amp;&amp;<pos:position pos:line="97" pos:column="20"/></operator> <operator pos:line="97" pos:column="13">(<pos:position pos:line="97" pos:column="14"/></operator><name><name pos:line="97" pos:column="14">sxp<pos:position pos:line="97" pos:column="17"/></name><operator pos:line="97" pos:column="17">-&gt;<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="19">st<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">.<pos:position pos:line="97" pos:column="22"/></operator><name pos:line="97" pos:column="22">st_mtime<pos:position pos:line="97" pos:column="30"/></name></name> <operator pos:line="97" pos:column="31">!=<pos:position pos:line="97" pos:column="33"/></operator> <name><name pos:line="97" pos:column="34">file<pos:position pos:line="97" pos:column="38"/></name><operator pos:line="97" pos:column="38">-&gt;<pos:position pos:line="97" pos:column="43"/></operator><name pos:line="97" pos:column="40">modtime<pos:position pos:line="97" pos:column="47"/></name></name>
<cpp:ifdef pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">ifdef<pos:position pos:line="98" pos:column="7"/></cpp:directive> <name pos:line="98" pos:column="8">ST_MTIME_NSEC<pos:position pos:line="98" pos:column="21"/></name></cpp:ifdef>
	  <operator pos:line="99" pos:column="11">||<pos:position pos:line="99" pos:column="13"/></operator> <operator pos:line="99" pos:column="14">(<pos:position pos:line="99" pos:column="15"/></operator><call><name pos:line="99" pos:column="15">NSEC_BUMP<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">file<pos:position pos:line="99" pos:column="29"/></name></expr></argument>)<pos:position pos:line="99" pos:column="30"/></argument_list></call> <operator pos:line="99" pos:column="31">&amp;&amp;<pos:position pos:line="99" pos:column="41"/></operator> <operator pos:line="99" pos:column="34">(<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="35">uint32<pos:position pos:line="99" pos:column="41"/></name><operator pos:line="99" pos:column="41">)<pos:position pos:line="99" pos:column="42"/></operator><name><name pos:line="99" pos:column="42">sxp<pos:position pos:line="99" pos:column="45"/></name><operator pos:line="99" pos:column="45">-&gt;<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="47">st<pos:position pos:line="99" pos:column="49"/></name><operator pos:line="99" pos:column="49">.<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="50">ST_MTIME_NSEC<pos:position pos:line="99" pos:column="63"/></name></name> <operator pos:line="99" pos:column="64">!=<pos:position pos:line="99" pos:column="66"/></operator> <call><name pos:line="99" pos:column="67">F_MOD_NSEC<pos:position pos:line="99" pos:column="77"/></name><argument_list pos:line="99" pos:column="77">(<argument><expr><name pos:line="99" pos:column="78">file<pos:position pos:line="99" pos:column="82"/></name></expr></argument>)<pos:position pos:line="99" pos:column="83"/></argument_list></call><operator pos:line="99" pos:column="83">)<pos:position pos:line="99" pos:column="84"/></operator>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
	  <operator pos:line="101" pos:column="11">)<pos:position pos:line="101" pos:column="12"/></operator></expr>)<pos:position pos:line="101" pos:column="13"/></condition><then pos:line="101" pos:column="13"> <block pos:line="101" pos:column="14">{
		<decl_stmt><decl><type><name pos:line="102" pos:column="17">int<pos:position pos:line="102" pos:column="20"/></name></type> <name pos:line="102" pos:column="21">ret<pos:position pos:line="102" pos:column="24"/></name> <init pos:line="102" pos:column="25">= <expr><call><name pos:line="102" pos:column="27">set_modtime<pos:position pos:line="102" pos:column="38"/></name><argument_list pos:line="102" pos:column="38">(<argument><expr><name pos:line="102" pos:column="39">fname<pos:position pos:line="102" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="46">file<pos:position pos:line="102" pos:column="50"/></name><operator pos:line="102" pos:column="50">-&gt;<pos:position pos:line="102" pos:column="55"/></operator><name pos:line="102" pos:column="52">modtime<pos:position pos:line="102" pos:column="59"/></name></name></expr></argument>, <argument><expr><call><name pos:line="102" pos:column="61">F_MOD_NSEC<pos:position pos:line="102" pos:column="71"/></name><argument_list pos:line="102" pos:column="71">(<argument><expr><name pos:line="102" pos:column="72">file<pos:position pos:line="102" pos:column="76"/></name></expr></argument>)<pos:position pos:line="102" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="79">sxp<pos:position pos:line="102" pos:column="82"/></name><operator pos:line="102" pos:column="82">-&gt;<pos:position pos:line="102" pos:column="87"/></operator><name pos:line="102" pos:column="84">st<pos:position pos:line="102" pos:column="86"/></name><operator pos:line="102" pos:column="86">.<pos:position pos:line="102" pos:column="87"/></operator><name pos:line="102" pos:column="87">st_mode<pos:position pos:line="102" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="102" pos:column="96"/></decl_stmt>
		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><name pos:line="103" pos:column="21">ret<pos:position pos:line="103" pos:column="24"/></name> <operator pos:line="103" pos:column="25">&lt;<pos:position pos:line="103" pos:column="29"/></operator> <literal type="number" pos:line="103" pos:column="27">0<pos:position pos:line="103" pos:column="28"/></literal></expr>)<pos:position pos:line="103" pos:column="29"/></condition><then pos:line="103" pos:column="29"> <block pos:line="103" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">rsyserr<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">FERROR_XFER<pos:position pos:line="104" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="46">errno<pos:position pos:line="104" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="53">"failed to set times on %s"<pos:position pos:line="104" pos:column="80"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="105" pos:column="33">full_fname<pos:position pos:line="105" pos:column="43"/></name><argument_list pos:line="105" pos:column="43">(<argument><expr><name pos:line="105" pos:column="44">fname<pos:position pos:line="105" pos:column="49"/></name></expr></argument>)<pos:position pos:line="105" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="52"/></expr_stmt>
			<goto pos:line="106" pos:column="25">goto <name pos:line="106" pos:column="30">cleanup<pos:position pos:line="106" pos:column="37"/></name>;<pos:position pos:line="106" pos:column="38"/></goto>
		}<pos:position pos:line="107" pos:column="18"/></block></then></if>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">ret<pos:position pos:line="108" pos:column="24"/></name> <operator pos:line="108" pos:column="25">==<pos:position pos:line="108" pos:column="27"/></operator> <literal type="number" pos:line="108" pos:column="28">0<pos:position pos:line="108" pos:column="29"/></literal></expr>)<pos:position pos:line="108" pos:column="30"/></condition><then pos:line="108" pos:column="30"> <comment type="block" pos:line="108" pos:column="31">/* ret == 1 if symlink could not be set */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="25">updated<pos:position pos:line="109" pos:column="32"/></name> <operator pos:line="109" pos:column="33">=<pos:position pos:line="109" pos:column="34"/></operator> <literal type="number" pos:line="109" pos:column="35">1<pos:position pos:line="109" pos:column="36"/></literal></expr>;<pos:position pos:line="109" pos:column="37"/></expr_stmt></block></then>
		<else pos:line="110" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="111" pos:column="25">file<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">-&gt;<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="31">flags<pos:position pos:line="111" pos:column="36"/></name></name> <operator pos:line="111" pos:column="37">|=<pos:position pos:line="111" pos:column="39"/></operator> <name pos:line="111" pos:column="40">FLAG_TIME_FAILED<pos:position pos:line="111" pos:column="56"/></name></expr>;<pos:position pos:line="111" pos:column="57"/></expr_stmt></block></else></if>
	}<pos:position pos:line="112" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">ifdef<pos:position pos:line="114" pos:column="7"/></cpp:directive> <name pos:line="114" pos:column="8">SUPPORT_ACLS<pos:position pos:line="114" pos:column="20"/></name></cpp:ifdef>
	<comment type="block" pos:line="115" pos:column="9">/* It's OK to call set_acl() now, even for a dir, as the generator
	 * will enable owner-writability using chmod, if necessary.
	 * 
	 * If set_acl() changes permission bits in the process of setting
	 * an access ACL, it changes sxp-&gt;st.st_mode so we know whether we
	 * need to chmod(). */</comment>
	<if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">preserve_acls<pos:position pos:line="121" pos:column="26"/></name> <operator pos:line="121" pos:column="27">&amp;&amp;<pos:position pos:line="121" pos:column="37"/></operator> <operator pos:line="121" pos:column="30">!<pos:position pos:line="121" pos:column="31"/></operator><call><name pos:line="121" pos:column="31">S_ISLNK<pos:position pos:line="121" pos:column="38"/></name><argument_list pos:line="121" pos:column="38">(<argument><expr><name pos:line="121" pos:column="39">new_mode<pos:position pos:line="121" pos:column="47"/></name></expr></argument>)<pos:position pos:line="121" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="49"/></condition><then pos:line="121" pos:column="49"> <block pos:line="121" pos:column="50">{
		<if pos:line="122" pos:column="17">if <condition pos:line="122" pos:column="20">(<expr><call><name pos:line="122" pos:column="21">set_acl<pos:position pos:line="122" pos:column="28"/></name><argument_list pos:line="122" pos:column="28">(<argument><expr><name pos:line="122" pos:column="29">fname<pos:position pos:line="122" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="36">file<pos:position pos:line="122" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="42">sxp<pos:position pos:line="122" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="47">new_mode<pos:position pos:line="122" pos:column="55"/></name></expr></argument>)<pos:position pos:line="122" pos:column="56"/></argument_list></call> <operator pos:line="122" pos:column="57">&gt;<pos:position pos:line="122" pos:column="61"/></operator> <literal type="number" pos:line="122" pos:column="59">0<pos:position pos:line="122" pos:column="60"/></literal></expr>)<pos:position pos:line="122" pos:column="61"/></condition><then pos:line="122" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="123" pos:column="25">updated<pos:position pos:line="123" pos:column="32"/></name> <operator pos:line="123" pos:column="33">=<pos:position pos:line="123" pos:column="34"/></operator> <literal type="number" pos:line="123" pos:column="35">1<pos:position pos:line="123" pos:column="36"/></literal></expr>;<pos:position pos:line="123" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="124" pos:column="10"/></block></then></if>
<cpp:endif pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">endif<pos:position pos:line="125" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">ifdef<pos:position pos:line="127" pos:column="7"/></cpp:directive> <name pos:line="127" pos:column="8">HAVE_CHMOD<pos:position pos:line="127" pos:column="18"/></name></cpp:ifdef>
	<if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><operator pos:line="128" pos:column="13">!<pos:position pos:line="128" pos:column="14"/></operator><call><name pos:line="128" pos:column="14">BITS_EQUAL<pos:position pos:line="128" pos:column="24"/></name><argument_list pos:line="128" pos:column="24">(<argument><expr><name><name pos:line="128" pos:column="25">sxp<pos:position pos:line="128" pos:column="28"/></name><operator pos:line="128" pos:column="28">-&gt;<pos:position pos:line="128" pos:column="33"/></operator><name pos:line="128" pos:column="30">st<pos:position pos:line="128" pos:column="32"/></name><operator pos:line="128" pos:column="32">.<pos:position pos:line="128" pos:column="33"/></operator><name pos:line="128" pos:column="33">st_mode<pos:position pos:line="128" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="42">new_mode<pos:position pos:line="128" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="52">CHMOD_BITS<pos:position pos:line="128" pos:column="62"/></name></expr></argument>)<pos:position pos:line="128" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="64"/></condition><then pos:line="128" pos:column="64"> <block pos:line="128" pos:column="65">{
		<decl_stmt><decl><type><name pos:line="129" pos:column="17">int<pos:position pos:line="129" pos:column="20"/></name></type> <name pos:line="129" pos:column="21">ret<pos:position pos:line="129" pos:column="24"/></name> <init pos:line="129" pos:column="25">= <expr><ternary><condition><expr><name pos:line="129" pos:column="27">am_root<pos:position pos:line="129" pos:column="34"/></name> <operator pos:line="129" pos:column="35">&lt;<pos:position pos:line="129" pos:column="39"/></operator> <literal type="number" pos:line="129" pos:column="37">0<pos:position pos:line="129" pos:column="38"/></literal></expr> ?<pos:position pos:line="129" pos:column="40"/></condition><then pos:line="129" pos:column="40"> <expr><literal type="number" pos:line="129" pos:column="41">0<pos:position pos:line="129" pos:column="42"/></literal></expr> <pos:position pos:line="129" pos:column="43"/></then><else pos:line="129" pos:column="43">: <expr><call><name pos:line="129" pos:column="45">do_chmod<pos:position pos:line="129" pos:column="53"/></name><argument_list pos:line="129" pos:column="53">(<argument><expr><name pos:line="129" pos:column="54">fname<pos:position pos:line="129" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="61">new_mode<pos:position pos:line="129" pos:column="69"/></name></expr></argument>)<pos:position pos:line="129" pos:column="70"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="129" pos:column="71"/></decl_stmt>
		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><name pos:line="130" pos:column="21">ret<pos:position pos:line="130" pos:column="24"/></name> <operator pos:line="130" pos:column="25">&lt;<pos:position pos:line="130" pos:column="29"/></operator> <literal type="number" pos:line="130" pos:column="27">0<pos:position pos:line="130" pos:column="28"/></literal></expr>)<pos:position pos:line="130" pos:column="29"/></condition><then pos:line="130" pos:column="29"> <block pos:line="130" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="131" pos:column="25">rsyserr<pos:position pos:line="131" pos:column="32"/></name><argument_list pos:line="131" pos:column="32">(<argument><expr><name pos:line="131" pos:column="33">FERROR_XFER<pos:position pos:line="131" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="46">errno<pos:position pos:line="131" pos:column="51"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="132" pos:column="33">"failed to set permissions on %s"<pos:position pos:line="132" pos:column="66"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="133" pos:column="33">full_fname<pos:position pos:line="133" pos:column="43"/></name><argument_list pos:line="133" pos:column="43">(<argument><expr><name pos:line="133" pos:column="44">fname<pos:position pos:line="133" pos:column="49"/></name></expr></argument>)<pos:position pos:line="133" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="52"/></expr_stmt>
			<goto pos:line="134" pos:column="25">goto <name pos:line="134" pos:column="30">cleanup<pos:position pos:line="134" pos:column="37"/></name>;<pos:position pos:line="134" pos:column="38"/></goto>
		}<pos:position pos:line="135" pos:column="18"/></block></then></if>
		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><name pos:line="136" pos:column="21">ret<pos:position pos:line="136" pos:column="24"/></name> <operator pos:line="136" pos:column="25">==<pos:position pos:line="136" pos:column="27"/></operator> <literal type="number" pos:line="136" pos:column="28">0<pos:position pos:line="136" pos:column="29"/></literal></expr>)<pos:position pos:line="136" pos:column="30"/></condition><then pos:line="136" pos:column="30"> <comment type="block" pos:line="136" pos:column="31">/* ret == 1 if symlink could not be set */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="25">updated<pos:position pos:line="137" pos:column="32"/></name> <operator pos:line="137" pos:column="33">=<pos:position pos:line="137" pos:column="34"/></operator> <literal type="number" pos:line="137" pos:column="35">1<pos:position pos:line="137" pos:column="36"/></literal></expr>;<pos:position pos:line="137" pos:column="37"/></expr_stmt></block></then></if>
	}<pos:position pos:line="138" pos:column="10"/></block></then></if>
<cpp:endif pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">endif<pos:position pos:line="139" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><call><name pos:line="141" pos:column="13">INFO_GTE<pos:position pos:line="141" pos:column="21"/></name><argument_list pos:line="141" pos:column="21">(<argument><expr><name pos:line="141" pos:column="22">NAME<pos:position pos:line="141" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="28">2<pos:position pos:line="141" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="30"/></argument_list></call> <operator pos:line="141" pos:column="31">&amp;&amp;<pos:position pos:line="141" pos:column="41"/></operator> <name pos:line="141" pos:column="34">flags<pos:position pos:line="141" pos:column="39"/></name> <operator pos:line="141" pos:column="40">&amp;<pos:position pos:line="141" pos:column="45"/></operator> <name pos:line="141" pos:column="42">ATTRS_REPORT<pos:position pos:line="141" pos:column="54"/></name></expr>)<pos:position pos:line="141" pos:column="55"/></condition><then pos:line="141" pos:column="55"> <block pos:line="141" pos:column="56">{
		<if pos:line="142" pos:column="17">if <condition pos:line="142" pos:column="20">(<expr><name pos:line="142" pos:column="21">updated<pos:position pos:line="142" pos:column="28"/></name></expr>)<pos:position pos:line="142" pos:column="29"/></condition><then pos:line="142" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="25">rprintf<pos:position pos:line="143" pos:column="32"/></name><argument_list pos:line="143" pos:column="32">(<argument><expr><name pos:line="143" pos:column="33">FCLIENT<pos:position pos:line="143" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="42">"%s\n"<pos:position pos:line="143" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="50">fname<pos:position pos:line="143" pos:column="55"/></name></expr></argument>)<pos:position pos:line="143" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="57"/></expr_stmt></block></then>
		<else pos:line="144" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="25">rprintf<pos:position pos:line="145" pos:column="32"/></name><argument_list pos:line="145" pos:column="32">(<argument><expr><name pos:line="145" pos:column="33">FCLIENT<pos:position pos:line="145" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="42">"%s is uptodate\n"<pos:position pos:line="145" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="62">fname<pos:position pos:line="145" pos:column="67"/></name></expr></argument>)<pos:position pos:line="145" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="69"/></expr_stmt></block></else></if>
	}<pos:position pos:line="146" pos:column="10"/></block></then></if>
  <label><name pos:line="147" pos:column="3">cleanup<pos:position pos:line="147" pos:column="10"/></name>:<pos:position pos:line="147" pos:column="11"/></label>
	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name pos:line="148" pos:column="13">sxp<pos:position pos:line="148" pos:column="16"/></name> <operator pos:line="148" pos:column="17">==<pos:position pos:line="148" pos:column="19"/></operator> <operator pos:line="148" pos:column="20">&amp;<pos:position pos:line="148" pos:column="25"/></operator><name pos:line="148" pos:column="21">sx2<pos:position pos:line="148" pos:column="24"/></name></expr>)<pos:position pos:line="148" pos:column="25"/></condition><then pos:line="148" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="17">free_stat_x<pos:position pos:line="149" pos:column="28"/></name><argument_list pos:line="149" pos:column="28">(<argument><expr><operator pos:line="149" pos:column="29">&amp;<pos:position pos:line="149" pos:column="34"/></operator><name pos:line="149" pos:column="30">sx2<pos:position pos:line="149" pos:column="33"/></name></expr></argument>)<pos:position pos:line="149" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="35"/></expr_stmt></block></then></if>
	<return pos:line="150" pos:column="9">return <expr><name pos:line="150" pos:column="16">updated<pos:position pos:line="150" pos:column="23"/></name></expr>;<pos:position pos:line="150" pos:column="24"/></return>
}<pos:position pos:line="151" pos:column="2"/></block></function></unit>

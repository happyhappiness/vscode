<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_526_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_file_entry<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">f<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">fname<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="55">struct<pos:position pos:line="1" pos:column="61"/></name> <name pos:line="1" pos:column="62">file_struct<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">file<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
<cpp:ifdef pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">ifdef<pos:position pos:line="2" pos:column="7"/></cpp:directive> <name pos:line="2" pos:column="8">SUPPORT_LINKS<pos:position pos:line="2" pos:column="21"/></name></cpp:ifdef>
			    <parameter><decl><type><specifier pos:line="3" pos:column="29">const<pos:position pos:line="3" pos:column="34"/></specifier> <name pos:line="3" pos:column="35">char<pos:position pos:line="3" pos:column="39"/></name> <modifier pos:line="3" pos:column="40">*<pos:position pos:line="3" pos:column="41"/></modifier></type><name pos:line="3" pos:column="41">symlink_name<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">int<pos:position pos:line="3" pos:column="58"/></name></type> <name pos:line="3" pos:column="59">symlink_len<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>,
<cpp:endif pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">endif<pos:position pos:line="4" pos:column="7"/></cpp:directive></cpp:endif>
			    <parameter><decl><type><name pos:line="5" pos:column="29">int<pos:position pos:line="5" pos:column="32"/></name></type> <name pos:line="5" pos:column="33">ndx<pos:position pos:line="5" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="5" pos:column="38">int<pos:position pos:line="5" pos:column="41"/></name></type> <name pos:line="5" pos:column="42">first_ndx<pos:position pos:line="5" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="52"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">time_t<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">modtime<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">mode_t<pos:position pos:line="8" pos:column="22"/></name></type> <name pos:line="8" pos:column="23">mode<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="9" pos:column="26"/></name></cpp:ifdef>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">int64<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">dev<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><specifier pos:line="12" pos:column="9">static<pos:position pos:line="12" pos:column="15"/></specifier> <type><name pos:line="12" pos:column="16">dev_t<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">rdev<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">static<pos:position pos:line="13" pos:column="15"/></specifier> <type><name pos:line="13" pos:column="16">uint32<pos:position pos:line="13" pos:column="22"/></name></type> <name pos:line="13" pos:column="23">rdev_major<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="14" pos:column="9">static<pos:position pos:line="14" pos:column="15"/></specifier> <type><name pos:line="14" pos:column="16">uid_t<pos:position pos:line="14" pos:column="21"/></name></type> <name pos:line="14" pos:column="22">uid<pos:position pos:line="14" pos:column="25"/></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="15" pos:column="9">static<pos:position pos:line="15" pos:column="15"/></specifier> <type><name pos:line="15" pos:column="16">gid_t<pos:position pos:line="15" pos:column="21"/></name></type> <name pos:line="15" pos:column="22">gid<pos:position pos:line="15" pos:column="25"/></name></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="16" pos:column="9">static<pos:position pos:line="16" pos:column="15"/></specifier> <type><specifier pos:line="16" pos:column="16">const<pos:position pos:line="16" pos:column="21"/></specifier> <name pos:line="16" pos:column="22">char<pos:position pos:line="16" pos:column="26"/></name> <modifier pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></modifier></type><name pos:line="16" pos:column="28">user_name<pos:position pos:line="16" pos:column="37"/></name></decl>, <modifier pos:line="16" pos:column="39">*<pos:position pos:line="16" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="16" pos:column="40">group_name<pos:position pos:line="16" pos:column="50"/></name></decl>;<pos:position pos:line="16" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="17" pos:column="9">static<pos:position pos:line="17" pos:column="15"/></specifier> <type><name pos:line="17" pos:column="16">char<pos:position pos:line="17" pos:column="20"/></name></type> <name><name pos:line="17" pos:column="21">lastname<pos:position pos:line="17" pos:column="29"/></name><index pos:line="17" pos:column="29">[<expr><name pos:line="17" pos:column="30">MAXPATHLEN<pos:position pos:line="17" pos:column="40"/></name></expr>]<pos:position pos:line="17" pos:column="41"/></index></name></decl>;<pos:position pos:line="17" pos:column="42"/></decl_stmt>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="18" pos:column="26"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">first_hlink_ndx<pos:position pos:line="19" pos:column="28"/></name> <init pos:line="19" pos:column="29">= <expr><operator pos:line="19" pos:column="31">-<pos:position pos:line="19" pos:column="32"/></operator><literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">l1<pos:position pos:line="21" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="21" pos:column="17">l2<pos:position pos:line="21" pos:column="19"/></name></decl>;<pos:position pos:line="21" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">xflags<pos:position pos:line="22" pos:column="19"/></name></decl>;<pos:position pos:line="22" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="24" pos:column="9">/* Initialize starting value of xflags and adjust counts. */</comment>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">S_ISREG<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">file<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">mode<pos:position pos:line="25" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">xflags<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt></block></then>
	<elseif pos:line="27" pos:column="9">else <if pos:line="27" pos:column="14">if <condition pos:line="27" pos:column="17">(<expr><call><name pos:line="27" pos:column="18">S_ISDIR<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">file<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">mode<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="38"/></condition><then pos:line="27" pos:column="38"> <block pos:line="27" pos:column="39">{
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">stats<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">num_dirs<pos:position pos:line="28" pos:column="31"/></name></name><operator pos:line="28" pos:column="31">++<pos:position pos:line="28" pos:column="33"/></operator></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">protocol_version<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">&gt;=<pos:position pos:line="29" pos:column="43"/></operator> <literal type="number" pos:line="29" pos:column="41">30<pos:position pos:line="29" pos:column="43"/></literal></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44"> <block pos:line="29" pos:column="45">{
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name><name pos:line="30" pos:column="29">file<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">flags<pos:position pos:line="30" pos:column="40"/></name></name> <operator pos:line="30" pos:column="41">&amp;<pos:position pos:line="30" pos:column="46"/></operator> <name pos:line="30" pos:column="43">FLAG_CONTENT_DIR<pos:position pos:line="30" pos:column="59"/></name></expr>)<pos:position pos:line="30" pos:column="60"/></condition><then pos:line="30" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="33">xflags<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">=<pos:position pos:line="31" pos:column="41"/></operator> <name><name pos:line="31" pos:column="42">file<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">flags<pos:position pos:line="31" pos:column="53"/></name></name> <operator pos:line="31" pos:column="54">&amp;<pos:position pos:line="31" pos:column="59"/></operator> <name pos:line="31" pos:column="56">FLAG_TOP_DIR<pos:position pos:line="31" pos:column="68"/></name></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt></block></then>
			<elseif pos:line="32" pos:column="25">else <if pos:line="32" pos:column="30">if <condition pos:line="32" pos:column="33">(<expr><name><name pos:line="32" pos:column="34">file<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">flags<pos:position pos:line="32" pos:column="45"/></name></name> <operator pos:line="32" pos:column="46">&amp;<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="48">FLAG_IMPLIED_DIR<pos:position pos:line="32" pos:column="64"/></name></expr>)<pos:position pos:line="32" pos:column="65"/></condition><then pos:line="32" pos:column="65">
				<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="33">xflags<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">=<pos:position pos:line="33" pos:column="41"/></operator> <name pos:line="33" pos:column="42">XMIT_TOP_DIR<pos:position pos:line="33" pos:column="54"/></name> <operator pos:line="33" pos:column="55">|<pos:position pos:line="33" pos:column="56"/></operator> <name pos:line="33" pos:column="57">XMIT_NO_CONTENT_DIR<pos:position pos:line="33" pos:column="76"/></name></expr>;<pos:position pos:line="33" pos:column="77"/></expr_stmt></block></then></if></elseif>
			<else pos:line="34" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="33">xflags<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">=<pos:position pos:line="35" pos:column="41"/></operator> <name pos:line="35" pos:column="42">XMIT_NO_CONTENT_DIR<pos:position pos:line="35" pos:column="61"/></name></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt></block></else></if>
		}<pos:position pos:line="36" pos:column="18"/></block></then> <else pos:line="36" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">xflags<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <name><name pos:line="37" pos:column="34">file<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">flags<pos:position pos:line="37" pos:column="45"/></name></name> <operator pos:line="37" pos:column="46">&amp;<pos:position pos:line="37" pos:column="51"/></operator> <name pos:line="37" pos:column="48">FLAG_TOP_DIR<pos:position pos:line="37" pos:column="60"/></name></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt></block></else></if> <comment type="block" pos:line="37" pos:column="62">/* FLAG_TOP_DIR == XMIT_TOP_DIR */</comment>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if></elseif> <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><call><name pos:line="39" pos:column="21">S_ISLNK<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">file<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">mode<pos:position pos:line="39" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="25">stats<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">.<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="31">num_symlinks<pos:position pos:line="40" pos:column="43"/></name></name><operator pos:line="40" pos:column="43">++<pos:position pos:line="40" pos:column="45"/></operator></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt></block></then>
		<elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><call><name pos:line="41" pos:column="26">IS_DEVICE<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name><name pos:line="41" pos:column="36">file<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">mode<pos:position pos:line="41" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="48"/></condition><then pos:line="41" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="25">stats<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">.<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">num_devices<pos:position pos:line="42" pos:column="42"/></name></name><operator pos:line="42" pos:column="42">++<pos:position pos:line="42" pos:column="44"/></operator></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="43" pos:column="17">else <if pos:line="43" pos:column="22">if <condition pos:line="43" pos:column="25">(<expr><call><name pos:line="43" pos:column="26">IS_SPECIAL<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><name><name pos:line="43" pos:column="37">file<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">mode<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="49"/></condition><then pos:line="43" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="25">stats<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">.<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">num_specials<pos:position pos:line="44" pos:column="43"/></name></name><operator pos:line="44" pos:column="43">++<pos:position pos:line="44" pos:column="45"/></operator></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="45" pos:column="17">xflags<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <literal type="number" pos:line="45" pos:column="26">0<pos:position pos:line="45" pos:column="27"/></literal></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></else></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">file<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">mode<pos:position pos:line="48" pos:column="23"/></name></name> <operator pos:line="48" pos:column="24">==<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">mode<pos:position pos:line="48" pos:column="31"/></name></expr>)<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="17">xflags<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">|=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">XMIT_SAME_MODE<pos:position pos:line="49" pos:column="41"/></name></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt></block></then>
	<else pos:line="50" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="17">mode<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <name><name pos:line="51" pos:column="24">file<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">mode<pos:position pos:line="51" pos:column="34"/></name></name></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt></block></else></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">preserve_devices<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">&amp;&amp;<pos:position pos:line="53" pos:column="40"/></operator> <call><name pos:line="53" pos:column="33">IS_DEVICE<pos:position pos:line="53" pos:column="42"/></name><argument_list pos:line="53" pos:column="42">(<argument><expr><name pos:line="53" pos:column="43">mode<pos:position pos:line="53" pos:column="47"/></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="49"/></condition><then pos:line="53" pos:column="49"> <block pos:line="53" pos:column="50">{
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">protocol_version<pos:position pos:line="54" pos:column="37"/></name> <operator pos:line="54" pos:column="38">&lt;<pos:position pos:line="54" pos:column="42"/></operator> <literal type="number" pos:line="54" pos:column="40">28<pos:position pos:line="54" pos:column="42"/></literal></expr>)<pos:position pos:line="54" pos:column="43"/></condition><then pos:line="54" pos:column="43"> <block pos:line="54" pos:column="44">{
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><name pos:line="55" pos:column="29">tmp_rdev<pos:position pos:line="55" pos:column="37"/></name> <operator pos:line="55" pos:column="38">==<pos:position pos:line="55" pos:column="40"/></operator> <name pos:line="55" pos:column="41">rdev<pos:position pos:line="55" pos:column="45"/></name></expr>)<pos:position pos:line="55" pos:column="46"/></condition><then pos:line="55" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="33">xflags<pos:position pos:line="56" pos:column="39"/></name> <operator pos:line="56" pos:column="40">|=<pos:position pos:line="56" pos:column="42"/></operator> <name pos:line="56" pos:column="43">XMIT_SAME_RDEV_pre28<pos:position pos:line="56" pos:column="63"/></name></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt></block></then>
			<else pos:line="57" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="33">rdev<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">=<pos:position pos:line="58" pos:column="39"/></operator> <name pos:line="58" pos:column="40">tmp_rdev<pos:position pos:line="58" pos:column="48"/></name></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt></block></else></if>
		}<pos:position pos:line="59" pos:column="18"/></block></then> <else pos:line="59" pos:column="19">else <block pos:line="59" pos:column="24">{
			<expr_stmt><expr><name pos:line="60" pos:column="25">rdev<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <name pos:line="60" pos:column="32">tmp_rdev<pos:position pos:line="60" pos:column="40"/></name></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><operator pos:line="61" pos:column="29">(<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="30">uint32<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">)<pos:position pos:line="61" pos:column="37"/></operator><call><name pos:line="61" pos:column="37">major<pos:position pos:line="61" pos:column="42"/></name><argument_list pos:line="61" pos:column="42">(<argument><expr><name pos:line="61" pos:column="43">rdev<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call> <operator pos:line="61" pos:column="49">==<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="52">rdev_major<pos:position pos:line="61" pos:column="62"/></name></expr>)<pos:position pos:line="61" pos:column="63"/></condition><then pos:line="61" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="33">xflags<pos:position pos:line="62" pos:column="39"/></name> <operator pos:line="62" pos:column="40">|=<pos:position pos:line="62" pos:column="42"/></operator> <name pos:line="62" pos:column="43">XMIT_SAME_RDEV_MAJOR<pos:position pos:line="62" pos:column="63"/></name></expr>;<pos:position pos:line="62" pos:column="64"/></expr_stmt></block></then>
			<else pos:line="63" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="33">rdev_major<pos:position pos:line="64" pos:column="43"/></name> <operator pos:line="64" pos:column="44">=<pos:position pos:line="64" pos:column="45"/></operator> <call><name pos:line="64" pos:column="46">major<pos:position pos:line="64" pos:column="51"/></name><argument_list pos:line="64" pos:column="51">(<argument><expr><name pos:line="64" pos:column="52">rdev<pos:position pos:line="64" pos:column="56"/></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt></block></else></if>
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">protocol_version<pos:position pos:line="65" pos:column="45"/></name> <operator pos:line="65" pos:column="46">&lt;<pos:position pos:line="65" pos:column="50"/></operator> <literal type="number" pos:line="65" pos:column="48">30<pos:position pos:line="65" pos:column="50"/></literal> <operator pos:line="65" pos:column="51">&amp;&amp;<pos:position pos:line="65" pos:column="61"/></operator> <operator pos:line="65" pos:column="54">(<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="55">uint32<pos:position pos:line="65" pos:column="61"/></name><operator pos:line="65" pos:column="61">)<pos:position pos:line="65" pos:column="62"/></operator><call><name pos:line="65" pos:column="62">minor<pos:position pos:line="65" pos:column="67"/></name><argument_list pos:line="65" pos:column="67">(<argument><expr><name pos:line="65" pos:column="68">rdev<pos:position pos:line="65" pos:column="72"/></name></expr></argument>)<pos:position pos:line="65" pos:column="73"/></argument_list></call> <operator pos:line="65" pos:column="74">&lt;=<pos:position pos:line="65" pos:column="79"/></operator> <literal type="number" pos:line="65" pos:column="77">0xFFu<pos:position pos:line="65" pos:column="82"/></literal></expr>)<pos:position pos:line="65" pos:column="83"/></condition><then pos:line="65" pos:column="83">
				<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="33">xflags<pos:position pos:line="66" pos:column="39"/></name> <operator pos:line="66" pos:column="40">|=<pos:position pos:line="66" pos:column="42"/></operator> <name pos:line="66" pos:column="43">XMIT_RDEV_MINOR_8_pre30<pos:position pos:line="66" pos:column="66"/></name></expr>;<pos:position pos:line="66" pos:column="67"/></expr_stmt></block></then></if>
		}<pos:position pos:line="67" pos:column="18"/></block></else></if>
	}<pos:position pos:line="68" pos:column="10"/></block></then> <elseif pos:line="68" pos:column="11">else <if pos:line="68" pos:column="16">if <condition pos:line="68" pos:column="19">(<expr><name pos:line="68" pos:column="20">preserve_specials<pos:position pos:line="68" pos:column="37"/></name> <operator pos:line="68" pos:column="38">&amp;&amp;<pos:position pos:line="68" pos:column="48"/></operator> <call><name pos:line="68" pos:column="41">IS_SPECIAL<pos:position pos:line="68" pos:column="51"/></name><argument_list pos:line="68" pos:column="51">(<argument><expr><name pos:line="68" pos:column="52">mode<pos:position pos:line="68" pos:column="56"/></name></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call> <operator pos:line="68" pos:column="58">&amp;&amp;<pos:position pos:line="68" pos:column="68"/></operator> <name pos:line="68" pos:column="61">protocol_version<pos:position pos:line="68" pos:column="77"/></name> <operator pos:line="68" pos:column="78">&lt;<pos:position pos:line="68" pos:column="82"/></operator> <literal type="number" pos:line="68" pos:column="80">31<pos:position pos:line="68" pos:column="82"/></literal></expr>)<pos:position pos:line="68" pos:column="83"/></condition><then pos:line="68" pos:column="83"> <block pos:line="68" pos:column="84">{
		<comment type="block" pos:line="69" pos:column="17">/* Special files don't need an rdev number, so just make
		 * the historical transmission of the value efficient. */</comment>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><name pos:line="71" pos:column="21">protocol_version<pos:position pos:line="71" pos:column="37"/></name> <operator pos:line="71" pos:column="38">&lt;<pos:position pos:line="71" pos:column="42"/></operator> <literal type="number" pos:line="71" pos:column="40">28<pos:position pos:line="71" pos:column="42"/></literal></expr>)<pos:position pos:line="71" pos:column="43"/></condition><then pos:line="71" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="25">xflags<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">|=<pos:position pos:line="72" pos:column="34"/></operator> <name pos:line="72" pos:column="35">XMIT_SAME_RDEV_pre28<pos:position pos:line="72" pos:column="55"/></name></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt></block></then>
		<else pos:line="73" pos:column="17">else <block pos:line="73" pos:column="22">{
			<expr_stmt><expr><name pos:line="74" pos:column="25">rdev<pos:position pos:line="74" pos:column="29"/></name> <operator pos:line="74" pos:column="30">=<pos:position pos:line="74" pos:column="31"/></operator> <call><name pos:line="74" pos:column="32">MAKEDEV<pos:position pos:line="74" pos:column="39"/></name><argument_list pos:line="74" pos:column="39">(<argument><expr><call><name pos:line="74" pos:column="40">major<pos:position pos:line="74" pos:column="45"/></name><argument_list pos:line="74" pos:column="45">(<argument><expr><name pos:line="74" pos:column="46">rdev<pos:position pos:line="74" pos:column="50"/></name></expr></argument>)<pos:position pos:line="74" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="53">0<pos:position pos:line="74" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name pos:line="75" pos:column="25">xflags<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">|=<pos:position pos:line="75" pos:column="34"/></operator> <name pos:line="75" pos:column="35">XMIT_SAME_RDEV_MAJOR<pos:position pos:line="75" pos:column="55"/></name></expr>;<pos:position pos:line="75" pos:column="56"/></expr_stmt>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">protocol_version<pos:position pos:line="76" pos:column="45"/></name> <operator pos:line="76" pos:column="46">&lt;<pos:position pos:line="76" pos:column="50"/></operator> <literal type="number" pos:line="76" pos:column="48">30<pos:position pos:line="76" pos:column="50"/></literal></expr>)<pos:position pos:line="76" pos:column="51"/></condition><then pos:line="76" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="33">xflags<pos:position pos:line="77" pos:column="39"/></name> <operator pos:line="77" pos:column="40">|=<pos:position pos:line="77" pos:column="42"/></operator> <name pos:line="77" pos:column="43">XMIT_RDEV_MINOR_8_pre30<pos:position pos:line="77" pos:column="66"/></name></expr>;<pos:position pos:line="77" pos:column="67"/></expr_stmt></block></then></if>
		}<pos:position pos:line="78" pos:column="18"/></block></else></if>
	}<pos:position pos:line="79" pos:column="10"/></block></then></if></elseif> <elseif pos:line="79" pos:column="11">else <if pos:line="79" pos:column="16">if <condition pos:line="79" pos:column="19">(<expr><name pos:line="79" pos:column="20">protocol_version<pos:position pos:line="79" pos:column="36"/></name> <operator pos:line="79" pos:column="37">&lt;<pos:position pos:line="79" pos:column="41"/></operator> <literal type="number" pos:line="79" pos:column="39">28<pos:position pos:line="79" pos:column="41"/></literal></expr>)<pos:position pos:line="79" pos:column="42"/></condition><then pos:line="79" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="17">rdev<pos:position pos:line="80" pos:column="21"/></name> <operator pos:line="80" pos:column="22">=<pos:position pos:line="80" pos:column="23"/></operator> <call><name pos:line="80" pos:column="24">MAKEDEV<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><literal type="number" pos:line="80" pos:column="32">0<pos:position pos:line="80" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="35">0<pos:position pos:line="80" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt></block></then></if></elseif></if>
	<if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><operator pos:line="81" pos:column="13">!<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="14">preserve_uid<pos:position pos:line="81" pos:column="26"/></name> <operator pos:line="81" pos:column="27">||<pos:position pos:line="81" pos:column="29"/></operator> <operator pos:line="81" pos:column="30">(<pos:position pos:line="81" pos:column="31"/></operator><operator pos:line="81" pos:column="31">(<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="32">uid_t<pos:position pos:line="81" pos:column="37"/></name><operator pos:line="81" pos:column="37">)<pos:position pos:line="81" pos:column="38"/></operator><call><name pos:line="81" pos:column="38">F_OWNER<pos:position pos:line="81" pos:column="45"/></name><argument_list pos:line="81" pos:column="45">(<argument><expr><name pos:line="81" pos:column="46">file<pos:position pos:line="81" pos:column="50"/></name></expr></argument>)<pos:position pos:line="81" pos:column="51"/></argument_list></call> <operator pos:line="81" pos:column="52">==<pos:position pos:line="81" pos:column="54"/></operator> <name pos:line="81" pos:column="55">uid<pos:position pos:line="81" pos:column="58"/></name> <operator pos:line="81" pos:column="59">&amp;&amp;<pos:position pos:line="81" pos:column="69"/></operator> <operator pos:line="81" pos:column="62">*<pos:position pos:line="81" pos:column="63"/></operator><name pos:line="81" pos:column="63">lastname<pos:position pos:line="81" pos:column="71"/></name><operator pos:line="81" pos:column="71">)<pos:position pos:line="81" pos:column="72"/></operator></expr>)<pos:position pos:line="81" pos:column="73"/></condition><then pos:line="81" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="17">xflags<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">|=<pos:position pos:line="82" pos:column="26"/></operator> <name pos:line="82" pos:column="27">XMIT_SAME_UID<pos:position pos:line="82" pos:column="40"/></name></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="83" pos:column="9">else <block pos:line="83" pos:column="14">{
		<expr_stmt><expr><name pos:line="84" pos:column="17">uid<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <call><name pos:line="84" pos:column="23">F_OWNER<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">file<pos:position pos:line="84" pos:column="35"/></name></expr></argument>)<pos:position pos:line="84" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="37"/></expr_stmt>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><operator pos:line="85" pos:column="21">!<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">numeric_ids<pos:position pos:line="85" pos:column="33"/></name></expr>)<pos:position pos:line="85" pos:column="34"/></condition><then pos:line="85" pos:column="34"> <block pos:line="85" pos:column="35">{
			<expr_stmt><expr><name pos:line="86" pos:column="25">user_name<pos:position pos:line="86" pos:column="34"/></name> <operator pos:line="86" pos:column="35">=<pos:position pos:line="86" pos:column="36"/></operator> <call><name pos:line="86" pos:column="37">add_uid<pos:position pos:line="86" pos:column="44"/></name><argument_list pos:line="86" pos:column="44">(<argument><expr><name pos:line="86" pos:column="45">uid<pos:position pos:line="86" pos:column="48"/></name></expr></argument>)<pos:position pos:line="86" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="50"/></expr_stmt>
			<if pos:line="87" pos:column="25">if <condition pos:line="87" pos:column="28">(<expr><name pos:line="87" pos:column="29">inc_recurse<pos:position pos:line="87" pos:column="40"/></name> <operator pos:line="87" pos:column="41">&amp;&amp;<pos:position pos:line="87" pos:column="51"/></operator> <name pos:line="87" pos:column="44">user_name<pos:position pos:line="87" pos:column="53"/></name></expr>)<pos:position pos:line="87" pos:column="54"/></condition><then pos:line="87" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="33">xflags<pos:position pos:line="88" pos:column="39"/></name> <operator pos:line="88" pos:column="40">|=<pos:position pos:line="88" pos:column="42"/></operator> <name pos:line="88" pos:column="43">XMIT_USER_NAME_FOLLOWS<pos:position pos:line="88" pos:column="65"/></name></expr>;<pos:position pos:line="88" pos:column="66"/></expr_stmt></block></then></if>
		}<pos:position pos:line="89" pos:column="18"/></block></then></if>
	}<pos:position pos:line="90" pos:column="10"/></block></else></if>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><name pos:line="91" pos:column="14">preserve_gid<pos:position pos:line="91" pos:column="26"/></name> <operator pos:line="91" pos:column="27">||<pos:position pos:line="91" pos:column="29"/></operator> <operator pos:line="91" pos:column="30">(<pos:position pos:line="91" pos:column="31"/></operator><operator pos:line="91" pos:column="31">(<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="32">gid_t<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">)<pos:position pos:line="91" pos:column="38"/></operator><call><name pos:line="91" pos:column="38">F_GROUP<pos:position pos:line="91" pos:column="45"/></name><argument_list pos:line="91" pos:column="45">(<argument><expr><name pos:line="91" pos:column="46">file<pos:position pos:line="91" pos:column="50"/></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call> <operator pos:line="91" pos:column="52">==<pos:position pos:line="91" pos:column="54"/></operator> <name pos:line="91" pos:column="55">gid<pos:position pos:line="91" pos:column="58"/></name> <operator pos:line="91" pos:column="59">&amp;&amp;<pos:position pos:line="91" pos:column="69"/></operator> <operator pos:line="91" pos:column="62">*<pos:position pos:line="91" pos:column="63"/></operator><name pos:line="91" pos:column="63">lastname<pos:position pos:line="91" pos:column="71"/></name><operator pos:line="91" pos:column="71">)<pos:position pos:line="91" pos:column="72"/></operator></expr>)<pos:position pos:line="91" pos:column="73"/></condition><then pos:line="91" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="17">xflags<pos:position pos:line="92" pos:column="23"/></name> <operator pos:line="92" pos:column="24">|=<pos:position pos:line="92" pos:column="26"/></operator> <name pos:line="92" pos:column="27">XMIT_SAME_GID<pos:position pos:line="92" pos:column="40"/></name></expr>;<pos:position pos:line="92" pos:column="41"/></expr_stmt></block></then>
	<else pos:line="93" pos:column="9">else <block pos:line="93" pos:column="14">{
		<expr_stmt><expr><name pos:line="94" pos:column="17">gid<pos:position pos:line="94" pos:column="20"/></name> <operator pos:line="94" pos:column="21">=<pos:position pos:line="94" pos:column="22"/></operator> <call><name pos:line="94" pos:column="23">F_GROUP<pos:position pos:line="94" pos:column="30"/></name><argument_list pos:line="94" pos:column="30">(<argument><expr><name pos:line="94" pos:column="31">file<pos:position pos:line="94" pos:column="35"/></name></expr></argument>)<pos:position pos:line="94" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="37"/></expr_stmt>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><operator pos:line="95" pos:column="21">!<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="22">numeric_ids<pos:position pos:line="95" pos:column="33"/></name></expr>)<pos:position pos:line="95" pos:column="34"/></condition><then pos:line="95" pos:column="34"> <block pos:line="95" pos:column="35">{
			<expr_stmt><expr><name pos:line="96" pos:column="25">group_name<pos:position pos:line="96" pos:column="35"/></name> <operator pos:line="96" pos:column="36">=<pos:position pos:line="96" pos:column="37"/></operator> <call><name pos:line="96" pos:column="38">add_gid<pos:position pos:line="96" pos:column="45"/></name><argument_list pos:line="96" pos:column="45">(<argument><expr><name pos:line="96" pos:column="46">gid<pos:position pos:line="96" pos:column="49"/></name></expr></argument>)<pos:position pos:line="96" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="51"/></expr_stmt>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><name pos:line="97" pos:column="29">inc_recurse<pos:position pos:line="97" pos:column="40"/></name> <operator pos:line="97" pos:column="41">&amp;&amp;<pos:position pos:line="97" pos:column="51"/></operator> <name pos:line="97" pos:column="44">group_name<pos:position pos:line="97" pos:column="54"/></name></expr>)<pos:position pos:line="97" pos:column="55"/></condition><then pos:line="97" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="33">xflags<pos:position pos:line="98" pos:column="39"/></name> <operator pos:line="98" pos:column="40">|=<pos:position pos:line="98" pos:column="42"/></operator> <name pos:line="98" pos:column="43">XMIT_GROUP_NAME_FOLLOWS<pos:position pos:line="98" pos:column="66"/></name></expr>;<pos:position pos:line="98" pos:column="67"/></expr_stmt></block></then></if>
		}<pos:position pos:line="99" pos:column="18"/></block></then></if>
	}<pos:position pos:line="100" pos:column="10"/></block></else></if>
	<if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name><name pos:line="101" pos:column="13">file<pos:position pos:line="101" pos:column="17"/></name><operator pos:line="101" pos:column="17">-&gt;<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="19">modtime<pos:position pos:line="101" pos:column="26"/></name></name> <operator pos:line="101" pos:column="27">==<pos:position pos:line="101" pos:column="29"/></operator> <name pos:line="101" pos:column="30">modtime<pos:position pos:line="101" pos:column="37"/></name></expr>)<pos:position pos:line="101" pos:column="38"/></condition><then pos:line="101" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="17">xflags<pos:position pos:line="102" pos:column="23"/></name> <operator pos:line="102" pos:column="24">|=<pos:position pos:line="102" pos:column="26"/></operator> <name pos:line="102" pos:column="27">XMIT_SAME_TIME<pos:position pos:line="102" pos:column="41"/></name></expr>;<pos:position pos:line="102" pos:column="42"/></expr_stmt></block></then>
	<else pos:line="103" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="17">modtime<pos:position pos:line="104" pos:column="24"/></name> <operator pos:line="104" pos:column="25">=<pos:position pos:line="104" pos:column="26"/></operator> <name><name pos:line="104" pos:column="27">file<pos:position pos:line="104" pos:column="31"/></name><operator pos:line="104" pos:column="31">-&gt;<pos:position pos:line="104" pos:column="36"/></operator><name pos:line="104" pos:column="33">modtime<pos:position pos:line="104" pos:column="40"/></name></name></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt></block></else></if>
	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><call><name pos:line="105" pos:column="13">NSEC_BUMP<pos:position pos:line="105" pos:column="22"/></name><argument_list pos:line="105" pos:column="22">(<argument><expr><name pos:line="105" pos:column="23">file<pos:position pos:line="105" pos:column="27"/></name></expr></argument>)<pos:position pos:line="105" pos:column="28"/></argument_list></call> <operator pos:line="105" pos:column="29">&amp;&amp;<pos:position pos:line="105" pos:column="39"/></operator> <name pos:line="105" pos:column="32">protocol_version<pos:position pos:line="105" pos:column="48"/></name> <operator pos:line="105" pos:column="49">&gt;=<pos:position pos:line="105" pos:column="54"/></operator> <literal type="number" pos:line="105" pos:column="52">31<pos:position pos:line="105" pos:column="54"/></literal></expr>)<pos:position pos:line="105" pos:column="55"/></condition><then pos:line="105" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="17">xflags<pos:position pos:line="106" pos:column="23"/></name> <operator pos:line="106" pos:column="24">|=<pos:position pos:line="106" pos:column="26"/></operator> <name pos:line="106" pos:column="27">XMIT_MOD_NSEC<pos:position pos:line="106" pos:column="40"/></name></expr>;<pos:position pos:line="106" pos:column="41"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">ifdef<pos:position pos:line="108" pos:column="7"/></cpp:directive> <name pos:line="108" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="108" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">tmp_dev<pos:position pos:line="109" pos:column="20"/></name> <operator pos:line="109" pos:column="21">!=<pos:position pos:line="109" pos:column="23"/></operator> <operator pos:line="109" pos:column="24">-<pos:position pos:line="109" pos:column="25"/></operator><literal type="number" pos:line="109" pos:column="25">1<pos:position pos:line="109" pos:column="26"/></literal></expr>)<pos:position pos:line="109" pos:column="27"/></condition><then pos:line="109" pos:column="27"> <block pos:line="109" pos:column="28">{
		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><name pos:line="110" pos:column="21">protocol_version<pos:position pos:line="110" pos:column="37"/></name> <operator pos:line="110" pos:column="38">&gt;=<pos:position pos:line="110" pos:column="43"/></operator> <literal type="number" pos:line="110" pos:column="41">30<pos:position pos:line="110" pos:column="43"/></literal></expr>)<pos:position pos:line="110" pos:column="44"/></condition><then pos:line="110" pos:column="44"> <block pos:line="110" pos:column="45">{
			<decl_stmt><decl><type><name><name pos:line="111" pos:column="25">struct<pos:position pos:line="111" pos:column="31"/></name> <name pos:line="111" pos:column="32">ht_int64_node<pos:position pos:line="111" pos:column="45"/></name></name> <modifier pos:line="111" pos:column="46">*<pos:position pos:line="111" pos:column="47"/></modifier></type><name pos:line="111" pos:column="47">np<pos:position pos:line="111" pos:column="49"/></name> <init pos:line="111" pos:column="50">= <expr><call><name pos:line="111" pos:column="52">idev_find<pos:position pos:line="111" pos:column="61"/></name><argument_list pos:line="111" pos:column="61">(<argument><expr><name pos:line="111" pos:column="62">tmp_dev<pos:position pos:line="111" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="71">tmp_ino<pos:position pos:line="111" pos:column="78"/></name></expr></argument>)<pos:position pos:line="111" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="111" pos:column="80"/></decl_stmt>
			<expr_stmt><expr><name pos:line="112" pos:column="25">first_hlink_ndx<pos:position pos:line="112" pos:column="40"/></name> <operator pos:line="112" pos:column="41">=<pos:position pos:line="112" pos:column="42"/></operator> <operator pos:line="112" pos:column="43">(<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="44">int32<pos:position pos:line="112" pos:column="49"/></name><operator pos:line="112" pos:column="49">)<pos:position pos:line="112" pos:column="50"/></operator><operator pos:line="112" pos:column="50">(<pos:position pos:line="112" pos:column="51"/></operator><name pos:line="112" pos:column="51">long<pos:position pos:line="112" pos:column="55"/></name><operator pos:line="112" pos:column="55">)<pos:position pos:line="112" pos:column="56"/></operator><name><name pos:line="112" pos:column="56">np<pos:position pos:line="112" pos:column="58"/></name><operator pos:line="112" pos:column="58">-&gt;<pos:position pos:line="112" pos:column="63"/></operator><name pos:line="112" pos:column="60">data<pos:position pos:line="112" pos:column="64"/></name></name> <operator pos:line="112" pos:column="65">-<pos:position pos:line="112" pos:column="66"/></operator> <literal type="number" pos:line="112" pos:column="67">1<pos:position pos:line="112" pos:column="68"/></literal></expr>;<pos:position pos:line="112" pos:column="69"/></expr_stmt>
			<if pos:line="113" pos:column="25">if <condition pos:line="113" pos:column="28">(<expr><name pos:line="113" pos:column="29">first_hlink_ndx<pos:position pos:line="113" pos:column="44"/></name> <operator pos:line="113" pos:column="45">&lt;<pos:position pos:line="113" pos:column="49"/></operator> <literal type="number" pos:line="113" pos:column="47">0<pos:position pos:line="113" pos:column="48"/></literal></expr>)<pos:position pos:line="113" pos:column="49"/></condition><then pos:line="113" pos:column="49"> <block pos:line="113" pos:column="50">{
				<expr_stmt><expr><name><name pos:line="114" pos:column="33">np<pos:position pos:line="114" pos:column="35"/></name><operator pos:line="114" pos:column="35">-&gt;<pos:position pos:line="114" pos:column="40"/></operator><name pos:line="114" pos:column="37">data<pos:position pos:line="114" pos:column="41"/></name></name> <operator pos:line="114" pos:column="42">=<pos:position pos:line="114" pos:column="43"/></operator> <operator pos:line="114" pos:column="44">(<pos:position pos:line="114" pos:column="45"/></operator><name pos:line="114" pos:column="45">void<pos:position pos:line="114" pos:column="49"/></name><operator pos:line="114" pos:column="49">*<pos:position pos:line="114" pos:column="50"/></operator><operator pos:line="114" pos:column="50">)<pos:position pos:line="114" pos:column="51"/></operator><call pos:line="114" pos:column="51">(<name pos:line="114" pos:column="52">long<pos:position pos:line="114" pos:column="56"/></name>)<argument_list pos:line="114" pos:column="57">(<argument><expr><name pos:line="114" pos:column="58">first_ndx<pos:position pos:line="114" pos:column="67"/></name> <operator pos:line="114" pos:column="68">+<pos:position pos:line="114" pos:column="69"/></operator> <name pos:line="114" pos:column="70">ndx<pos:position pos:line="114" pos:column="73"/></name> <operator pos:line="114" pos:column="74">+<pos:position pos:line="114" pos:column="75"/></operator> <literal type="number" pos:line="114" pos:column="76">1<pos:position pos:line="114" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><name pos:line="115" pos:column="33">xflags<pos:position pos:line="115" pos:column="39"/></name> <operator pos:line="115" pos:column="40">|=<pos:position pos:line="115" pos:column="42"/></operator> <name pos:line="115" pos:column="43">XMIT_HLINK_FIRST<pos:position pos:line="115" pos:column="59"/></name></expr>;<pos:position pos:line="115" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="116" pos:column="26"/></block></then></if>
			<if pos:line="117" pos:column="25">if <condition pos:line="117" pos:column="28">(<expr><call><name pos:line="117" pos:column="29">DEBUG_GTE<pos:position pos:line="117" pos:column="38"/></name><argument_list pos:line="117" pos:column="38">(<argument><expr><name pos:line="117" pos:column="39">HLINK<pos:position pos:line="117" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="46">1<pos:position pos:line="117" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="49"/></condition><then pos:line="117" pos:column="49"> <block pos:line="117" pos:column="50">{
				<if pos:line="118" pos:column="33">if <condition pos:line="118" pos:column="36">(<expr><name pos:line="118" pos:column="37">first_hlink_ndx<pos:position pos:line="118" pos:column="52"/></name> <operator pos:line="118" pos:column="53">&gt;=<pos:position pos:line="118" pos:column="58"/></operator> <literal type="number" pos:line="118" pos:column="56">0<pos:position pos:line="118" pos:column="57"/></literal></expr>)<pos:position pos:line="118" pos:column="58"/></condition><then pos:line="118" pos:column="58"> <block pos:line="118" pos:column="59">{
					<expr_stmt><expr><call><name pos:line="119" pos:column="41">rprintf<pos:position pos:line="119" pos:column="48"/></name><argument_list pos:line="119" pos:column="48">(<argument><expr><name pos:line="119" pos:column="49">FINFO<pos:position pos:line="119" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="56">"[%s] #%d hard-links #%d (%sabbrev)\n"<pos:position pos:line="119" pos:column="94"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="120" pos:column="49">who_am_i<pos:position pos:line="120" pos:column="57"/></name><argument_list pos:line="120" pos:column="57">()<pos:position pos:line="120" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="120" pos:column="61">first_ndx<pos:position pos:line="120" pos:column="70"/></name> <operator pos:line="120" pos:column="71">+<pos:position pos:line="120" pos:column="72"/></operator> <name pos:line="120" pos:column="73">ndx<pos:position pos:line="120" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="78">first_hlink_ndx<pos:position pos:line="120" pos:column="93"/></name></expr></argument>,
						<argument><expr><ternary><condition><expr><name pos:line="121" pos:column="49">first_hlink_ndx<pos:position pos:line="121" pos:column="64"/></name> <operator pos:line="121" pos:column="65">&gt;=<pos:position pos:line="121" pos:column="70"/></operator> <name pos:line="121" pos:column="68">first_ndx<pos:position pos:line="121" pos:column="77"/></name></expr> ?<pos:position pos:line="121" pos:column="79"/></condition><then pos:line="121" pos:column="79"> <expr><literal type="string" pos:line="121" pos:column="80">""<pos:position pos:line="121" pos:column="82"/></literal></expr> <pos:position pos:line="121" pos:column="83"/></then><else pos:line="121" pos:column="83">: <expr><literal type="string" pos:line="121" pos:column="85">"un"<pos:position pos:line="121" pos:column="89"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="121" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="91"/></expr_stmt>
				}<pos:position pos:line="122" pos:column="34"/></block></then> <elseif pos:line="122" pos:column="35">else <if pos:line="122" pos:column="40">if <condition pos:line="122" pos:column="43">(<expr><call><name pos:line="122" pos:column="44">DEBUG_GTE<pos:position pos:line="122" pos:column="53"/></name><argument_list pos:line="122" pos:column="53">(<argument><expr><name pos:line="122" pos:column="54">HLINK<pos:position pos:line="122" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="61">3<pos:position pos:line="122" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="122" pos:column="64"/></condition><then pos:line="122" pos:column="64"> <block pos:line="122" pos:column="65">{
					<expr_stmt><expr><call><name pos:line="123" pos:column="41">rprintf<pos:position pos:line="123" pos:column="48"/></name><argument_list pos:line="123" pos:column="48">(<argument><expr><name pos:line="123" pos:column="49">FINFO<pos:position pos:line="123" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="56">"[%s] dev:inode for #%d is %s:%s\n"<pos:position pos:line="123" pos:column="91"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="124" pos:column="49">who_am_i<pos:position pos:line="124" pos:column="57"/></name><argument_list pos:line="124" pos:column="57">()<pos:position pos:line="124" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="124" pos:column="61">first_ndx<pos:position pos:line="124" pos:column="70"/></name> <operator pos:line="124" pos:column="71">+<pos:position pos:line="124" pos:column="72"/></operator> <name pos:line="124" pos:column="73">ndx<pos:position pos:line="124" pos:column="76"/></name></expr></argument>,
						<argument><expr><call><name pos:line="125" pos:column="49">big_num<pos:position pos:line="125" pos:column="56"/></name><argument_list pos:line="125" pos:column="56">(<argument><expr><name pos:line="125" pos:column="57">tmp_dev<pos:position pos:line="125" pos:column="64"/></name></expr></argument>)<pos:position pos:line="125" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="125" pos:column="67">big_num<pos:position pos:line="125" pos:column="74"/></name><argument_list pos:line="125" pos:column="74">(<argument><expr><name pos:line="125" pos:column="75">tmp_ino<pos:position pos:line="125" pos:column="82"/></name></expr></argument>)<pos:position pos:line="125" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="85"/></expr_stmt>
				}<pos:position pos:line="126" pos:column="34"/></block></then></if></elseif></if>
			}<pos:position pos:line="127" pos:column="26"/></block></then></if>
		}<pos:position pos:line="128" pos:column="18"/></block></then> <else pos:line="128" pos:column="19">else <block pos:line="128" pos:column="24">{
			<if pos:line="129" pos:column="25">if <condition pos:line="129" pos:column="28">(<expr><name pos:line="129" pos:column="29">tmp_dev<pos:position pos:line="129" pos:column="36"/></name> <operator pos:line="129" pos:column="37">==<pos:position pos:line="129" pos:column="39"/></operator> <name pos:line="129" pos:column="40">dev<pos:position pos:line="129" pos:column="43"/></name></expr>)<pos:position pos:line="129" pos:column="44"/></condition><then pos:line="129" pos:column="44"> <block pos:line="129" pos:column="45">{
				<if pos:line="130" pos:column="33">if <condition pos:line="130" pos:column="36">(<expr><name pos:line="130" pos:column="37">protocol_version<pos:position pos:line="130" pos:column="53"/></name> <operator pos:line="130" pos:column="54">&gt;=<pos:position pos:line="130" pos:column="59"/></operator> <literal type="number" pos:line="130" pos:column="57">28<pos:position pos:line="130" pos:column="59"/></literal></expr>)<pos:position pos:line="130" pos:column="60"/></condition><then pos:line="130" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><name pos:line="131" pos:column="41">xflags<pos:position pos:line="131" pos:column="47"/></name> <operator pos:line="131" pos:column="48">|=<pos:position pos:line="131" pos:column="50"/></operator> <name pos:line="131" pos:column="51">XMIT_SAME_DEV_pre30<pos:position pos:line="131" pos:column="70"/></name></expr>;<pos:position pos:line="131" pos:column="71"/></expr_stmt></block></then></if>
			}<pos:position pos:line="132" pos:column="26"/></block></then> <else pos:line="132" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="33">dev<pos:position pos:line="133" pos:column="36"/></name> <operator pos:line="133" pos:column="37">=<pos:position pos:line="133" pos:column="38"/></operator> <name pos:line="133" pos:column="39">tmp_dev<pos:position pos:line="133" pos:column="46"/></name></expr>;<pos:position pos:line="133" pos:column="47"/></expr_stmt></block></else></if>
		}<pos:position pos:line="134" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="135" pos:column="17">xflags<pos:position pos:line="135" pos:column="23"/></name> <operator pos:line="135" pos:column="24">|=<pos:position pos:line="135" pos:column="26"/></operator> <name pos:line="135" pos:column="27">XMIT_HLINKED<pos:position pos:line="135" pos:column="39"/></name></expr>;<pos:position pos:line="135" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="136" pos:column="10"/></block></then></if>
<cpp:endif pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">endif<pos:position pos:line="137" pos:column="7"/></cpp:directive></cpp:endif>

	<for pos:line="139" pos:column="9">for <control pos:line="139" pos:column="13">(<init><expr><name pos:line="139" pos:column="14">l1<pos:position pos:line="139" pos:column="16"/></name> <operator pos:line="139" pos:column="17">=<pos:position pos:line="139" pos:column="18"/></operator> <literal type="number" pos:line="139" pos:column="19">0<pos:position pos:line="139" pos:column="20"/></literal></expr>;<pos:position pos:line="139" pos:column="21"/></init>
	    <condition><expr><name><name pos:line="140" pos:column="13">lastname<pos:position pos:line="140" pos:column="21"/></name><index pos:line="140" pos:column="21">[<expr><name pos:line="140" pos:column="22">l1<pos:position pos:line="140" pos:column="24"/></name></expr>]<pos:position pos:line="140" pos:column="25"/></index></name> <operator pos:line="140" pos:column="26">&amp;&amp;<pos:position pos:line="140" pos:column="36"/></operator> <operator pos:line="140" pos:column="29">(<pos:position pos:line="140" pos:column="30"/></operator><name><name pos:line="140" pos:column="30">fname<pos:position pos:line="140" pos:column="35"/></name><index pos:line="140" pos:column="35">[<expr><name pos:line="140" pos:column="36">l1<pos:position pos:line="140" pos:column="38"/></name></expr>]<pos:position pos:line="140" pos:column="39"/></index></name> <operator pos:line="140" pos:column="40">==<pos:position pos:line="140" pos:column="42"/></operator> <name><name pos:line="140" pos:column="43">lastname<pos:position pos:line="140" pos:column="51"/></name><index pos:line="140" pos:column="51">[<expr><name pos:line="140" pos:column="52">l1<pos:position pos:line="140" pos:column="54"/></name></expr>]<pos:position pos:line="140" pos:column="55"/></index></name><operator pos:line="140" pos:column="55">)<pos:position pos:line="140" pos:column="56"/></operator> <operator pos:line="140" pos:column="57">&amp;&amp;<pos:position pos:line="140" pos:column="67"/></operator> <operator pos:line="140" pos:column="60">(<pos:position pos:line="140" pos:column="61"/></operator><name pos:line="140" pos:column="61">l1<pos:position pos:line="140" pos:column="63"/></name> <operator pos:line="140" pos:column="64">&lt;<pos:position pos:line="140" pos:column="68"/></operator> <literal type="number" pos:line="140" pos:column="66">255<pos:position pos:line="140" pos:column="69"/></literal><operator pos:line="140" pos:column="69">)<pos:position pos:line="140" pos:column="70"/></operator></expr>;<pos:position pos:line="140" pos:column="71"/></condition>
	    <incr><expr><name pos:line="141" pos:column="13">l1<pos:position pos:line="141" pos:column="15"/></name><operator pos:line="141" pos:column="15">++<pos:position pos:line="141" pos:column="17"/></operator></expr></incr>)<pos:position pos:line="141" pos:column="18"/></control> <block pos:line="141" pos:column="19">{}<pos:position pos:line="141" pos:column="21"/></block></for>
	<expr_stmt><expr><name pos:line="142" pos:column="9">l2<pos:position pos:line="142" pos:column="11"/></name> <operator pos:line="142" pos:column="12">=<pos:position pos:line="142" pos:column="13"/></operator> <call><name pos:line="142" pos:column="14">strlen<pos:position pos:line="142" pos:column="20"/></name><argument_list pos:line="142" pos:column="20">(<argument><expr><name pos:line="142" pos:column="21">fname<pos:position pos:line="142" pos:column="26"/></name><operator pos:line="142" pos:column="26">+<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="27">l1<pos:position pos:line="142" pos:column="29"/></name></expr></argument>)<pos:position pos:line="142" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="31"/></expr_stmt>

	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">l1<pos:position pos:line="144" pos:column="15"/></name> <operator pos:line="144" pos:column="16">&gt;<pos:position pos:line="144" pos:column="20"/></operator> <literal type="number" pos:line="144" pos:column="18">0<pos:position pos:line="144" pos:column="19"/></literal></expr>)<pos:position pos:line="144" pos:column="20"/></condition><then pos:line="144" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="17">xflags<pos:position pos:line="145" pos:column="23"/></name> <operator pos:line="145" pos:column="24">|=<pos:position pos:line="145" pos:column="26"/></operator> <name pos:line="145" pos:column="27">XMIT_SAME_NAME<pos:position pos:line="145" pos:column="41"/></name></expr>;<pos:position pos:line="145" pos:column="42"/></expr_stmt></block></then></if>
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">l2<pos:position pos:line="146" pos:column="15"/></name> <operator pos:line="146" pos:column="16">&gt;<pos:position pos:line="146" pos:column="20"/></operator> <literal type="number" pos:line="146" pos:column="18">255<pos:position pos:line="146" pos:column="21"/></literal></expr>)<pos:position pos:line="146" pos:column="22"/></condition><then pos:line="146" pos:column="22">
		<block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="17">xflags<pos:position pos:line="147" pos:column="23"/></name> <operator pos:line="147" pos:column="24">|=<pos:position pos:line="147" pos:column="26"/></operator> <name pos:line="147" pos:column="27">XMIT_LONG_NAME<pos:position pos:line="147" pos:column="41"/></name></expr>;<pos:position pos:line="147" pos:column="42"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="149" pos:column="9">/* We must make sure we don't send a zero flag byte or the
	 * other end will terminate the flist transfer.  Note that
	 * the use of XMIT_TOP_DIR on a non-dir has no meaning, so
	 * it's harmless way to add a bit to the first flag byte. */</comment>
	<if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name pos:line="153" pos:column="13">protocol_version<pos:position pos:line="153" pos:column="29"/></name> <operator pos:line="153" pos:column="30">&gt;=<pos:position pos:line="153" pos:column="35"/></operator> <literal type="number" pos:line="153" pos:column="33">28<pos:position pos:line="153" pos:column="35"/></literal></expr>)<pos:position pos:line="153" pos:column="36"/></condition><then pos:line="153" pos:column="36"> <block pos:line="153" pos:column="37">{
		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><operator pos:line="154" pos:column="21">!<pos:position pos:line="154" pos:column="22"/></operator><name pos:line="154" pos:column="22">xflags<pos:position pos:line="154" pos:column="28"/></name> <operator pos:line="154" pos:column="29">&amp;&amp;<pos:position pos:line="154" pos:column="39"/></operator> <operator pos:line="154" pos:column="32">!<pos:position pos:line="154" pos:column="33"/></operator><call><name pos:line="154" pos:column="33">S_ISDIR<pos:position pos:line="154" pos:column="40"/></name><argument_list pos:line="154" pos:column="40">(<argument><expr><name pos:line="154" pos:column="41">mode<pos:position pos:line="154" pos:column="45"/></name></expr></argument>)<pos:position pos:line="154" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="47"/></condition><then pos:line="154" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="155" pos:column="25">xflags<pos:position pos:line="155" pos:column="31"/></name> <operator pos:line="155" pos:column="32">|=<pos:position pos:line="155" pos:column="34"/></operator> <name pos:line="155" pos:column="35">XMIT_TOP_DIR<pos:position pos:line="155" pos:column="47"/></name></expr>;<pos:position pos:line="155" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><operator pos:line="156" pos:column="21">(<pos:position pos:line="156" pos:column="22"/></operator><name pos:line="156" pos:column="22">xflags<pos:position pos:line="156" pos:column="28"/></name> <operator pos:line="156" pos:column="29">&amp;<pos:position pos:line="156" pos:column="34"/></operator> <literal type="number" pos:line="156" pos:column="31">0xFF00<pos:position pos:line="156" pos:column="37"/></literal><operator pos:line="156" pos:column="37">)<pos:position pos:line="156" pos:column="38"/></operator> <operator pos:line="156" pos:column="39">||<pos:position pos:line="156" pos:column="41"/></operator> <operator pos:line="156" pos:column="42">!<pos:position pos:line="156" pos:column="43"/></operator><name pos:line="156" pos:column="43">xflags<pos:position pos:line="156" pos:column="49"/></name></expr>)<pos:position pos:line="156" pos:column="50"/></condition><then pos:line="156" pos:column="50"> <block pos:line="156" pos:column="51">{
			<expr_stmt><expr><name pos:line="157" pos:column="25">xflags<pos:position pos:line="157" pos:column="31"/></name> <operator pos:line="157" pos:column="32">|=<pos:position pos:line="157" pos:column="34"/></operator> <name pos:line="157" pos:column="35">XMIT_EXTENDED_FLAGS<pos:position pos:line="157" pos:column="54"/></name></expr>;<pos:position pos:line="157" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="158" pos:column="25">write_shortint<pos:position pos:line="158" pos:column="39"/></name><argument_list pos:line="158" pos:column="39">(<argument><expr><name pos:line="158" pos:column="40">f<pos:position pos:line="158" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="43">xflags<pos:position pos:line="158" pos:column="49"/></name></expr></argument>)<pos:position pos:line="158" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="159" pos:column="18"/></block></then> <else pos:line="159" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="25">write_byte<pos:position pos:line="160" pos:column="35"/></name><argument_list pos:line="160" pos:column="35">(<argument><expr><name pos:line="160" pos:column="36">f<pos:position pos:line="160" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="39">xflags<pos:position pos:line="160" pos:column="45"/></name></expr></argument>)<pos:position pos:line="160" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="47"/></expr_stmt></block></else></if>
	}<pos:position pos:line="161" pos:column="10"/></block></then> <else pos:line="161" pos:column="11">else <block pos:line="161" pos:column="16">{
		<if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><operator pos:line="162" pos:column="21">!<pos:position pos:line="162" pos:column="22"/></operator><operator pos:line="162" pos:column="22">(<pos:position pos:line="162" pos:column="23"/></operator><name pos:line="162" pos:column="23">xflags<pos:position pos:line="162" pos:column="29"/></name> <operator pos:line="162" pos:column="30">&amp;<pos:position pos:line="162" pos:column="35"/></operator> <literal type="number" pos:line="162" pos:column="32">0xFF<pos:position pos:line="162" pos:column="36"/></literal><operator pos:line="162" pos:column="36">)<pos:position pos:line="162" pos:column="37"/></operator></expr>)<pos:position pos:line="162" pos:column="38"/></condition><then pos:line="162" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="163" pos:column="25">xflags<pos:position pos:line="163" pos:column="31"/></name> <operator pos:line="163" pos:column="32">|=<pos:position pos:line="163" pos:column="34"/></operator> <ternary><condition><expr><call><name pos:line="163" pos:column="35">S_ISDIR<pos:position pos:line="163" pos:column="42"/></name><argument_list pos:line="163" pos:column="42">(<argument><expr><name pos:line="163" pos:column="43">mode<pos:position pos:line="163" pos:column="47"/></name></expr></argument>)<pos:position pos:line="163" pos:column="48"/></argument_list></call></expr> ?<pos:position pos:line="163" pos:column="50"/></condition><then pos:line="163" pos:column="50"> <expr><name pos:line="163" pos:column="51">XMIT_LONG_NAME<pos:position pos:line="163" pos:column="65"/></name></expr> <pos:position pos:line="163" pos:column="66"/></then><else pos:line="163" pos:column="66">: <expr><name pos:line="163" pos:column="68">XMIT_TOP_DIR<pos:position pos:line="163" pos:column="80"/></name></expr></else></ternary></expr>;<pos:position pos:line="163" pos:column="81"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="164" pos:column="17">write_byte<pos:position pos:line="164" pos:column="27"/></name><argument_list pos:line="164" pos:column="27">(<argument><expr><name pos:line="164" pos:column="28">f<pos:position pos:line="164" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="31">xflags<pos:position pos:line="164" pos:column="37"/></name></expr></argument>)<pos:position pos:line="164" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="165" pos:column="10"/></block></else></if>
	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name pos:line="166" pos:column="13">xflags<pos:position pos:line="166" pos:column="19"/></name> <operator pos:line="166" pos:column="20">&amp;<pos:position pos:line="166" pos:column="25"/></operator> <name pos:line="166" pos:column="22">XMIT_SAME_NAME<pos:position pos:line="166" pos:column="36"/></name></expr>)<pos:position pos:line="166" pos:column="37"/></condition><then pos:line="166" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="167" pos:column="17">write_byte<pos:position pos:line="167" pos:column="27"/></name><argument_list pos:line="167" pos:column="27">(<argument><expr><name pos:line="167" pos:column="28">f<pos:position pos:line="167" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="31">l1<pos:position pos:line="167" pos:column="33"/></name></expr></argument>)<pos:position pos:line="167" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name pos:line="168" pos:column="13">xflags<pos:position pos:line="168" pos:column="19"/></name> <operator pos:line="168" pos:column="20">&amp;<pos:position pos:line="168" pos:column="25"/></operator> <name pos:line="168" pos:column="22">XMIT_LONG_NAME<pos:position pos:line="168" pos:column="36"/></name></expr>)<pos:position pos:line="168" pos:column="37"/></condition><then pos:line="168" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="169" pos:column="17">write_varint30<pos:position pos:line="169" pos:column="31"/></name><argument_list pos:line="169" pos:column="31">(<argument><expr><name pos:line="169" pos:column="32">f<pos:position pos:line="169" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="35">l2<pos:position pos:line="169" pos:column="37"/></name></expr></argument>)<pos:position pos:line="169" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="39"/></expr_stmt></block></then>
	<else pos:line="170" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="17">write_byte<pos:position pos:line="171" pos:column="27"/></name><argument_list pos:line="171" pos:column="27">(<argument><expr><name pos:line="171" pos:column="28">f<pos:position pos:line="171" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="31">l2<pos:position pos:line="171" pos:column="33"/></name></expr></argument>)<pos:position pos:line="171" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="35"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="172" pos:column="9">write_buf<pos:position pos:line="172" pos:column="18"/></name><argument_list pos:line="172" pos:column="18">(<argument><expr><name pos:line="172" pos:column="19">f<pos:position pos:line="172" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="22">fname<pos:position pos:line="172" pos:column="27"/></name> <operator pos:line="172" pos:column="28">+<pos:position pos:line="172" pos:column="29"/></operator> <name pos:line="172" pos:column="30">l1<pos:position pos:line="172" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="34">l2<pos:position pos:line="172" pos:column="36"/></name></expr></argument>)<pos:position pos:line="172" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="38"/></expr_stmt>

<cpp:ifdef pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">ifdef<pos:position pos:line="174" pos:column="7"/></cpp:directive> <name pos:line="174" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="174" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><name pos:line="175" pos:column="13">first_hlink_ndx<pos:position pos:line="175" pos:column="28"/></name> <operator pos:line="175" pos:column="29">&gt;=<pos:position pos:line="175" pos:column="34"/></operator> <literal type="number" pos:line="175" pos:column="32">0<pos:position pos:line="175" pos:column="33"/></literal></expr>)<pos:position pos:line="175" pos:column="34"/></condition><then pos:line="175" pos:column="34"> <block pos:line="175" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="176" pos:column="17">write_varint<pos:position pos:line="176" pos:column="29"/></name><argument_list pos:line="176" pos:column="29">(<argument><expr><name pos:line="176" pos:column="30">f<pos:position pos:line="176" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="176" pos:column="33">first_hlink_ndx<pos:position pos:line="176" pos:column="48"/></name></expr></argument>)<pos:position pos:line="176" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="50"/></expr_stmt>
		<if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><name pos:line="177" pos:column="21">first_hlink_ndx<pos:position pos:line="177" pos:column="36"/></name> <operator pos:line="177" pos:column="37">&gt;=<pos:position pos:line="177" pos:column="42"/></operator> <name pos:line="177" pos:column="40">first_ndx<pos:position pos:line="177" pos:column="49"/></name></expr>)<pos:position pos:line="177" pos:column="50"/></condition><then pos:line="177" pos:column="50">
			<block type="pseudo"><goto pos:line="178" pos:column="25">goto <name pos:line="178" pos:column="30">the_end<pos:position pos:line="178" pos:column="37"/></name>;<pos:position pos:line="178" pos:column="38"/></goto></block></then></if>
	}<pos:position pos:line="179" pos:column="10"/></block></then></if>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif<pos:position pos:line="180" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="182" pos:column="9">write_varlong30<pos:position pos:line="182" pos:column="24"/></name><argument_list pos:line="182" pos:column="24">(<argument><expr><name pos:line="182" pos:column="25">f<pos:position pos:line="182" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="182" pos:column="28">F_LENGTH<pos:position pos:line="182" pos:column="36"/></name><argument_list pos:line="182" pos:column="36">(<argument><expr><name pos:line="182" pos:column="37">file<pos:position pos:line="182" pos:column="41"/></name></expr></argument>)<pos:position pos:line="182" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="182" pos:column="44">3<pos:position pos:line="182" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="47"/></expr_stmt>
	<if pos:line="183" pos:column="9">if <condition pos:line="183" pos:column="12">(<expr><operator pos:line="183" pos:column="13">!<pos:position pos:line="183" pos:column="14"/></operator><operator pos:line="183" pos:column="14">(<pos:position pos:line="183" pos:column="15"/></operator><name pos:line="183" pos:column="15">xflags<pos:position pos:line="183" pos:column="21"/></name> <operator pos:line="183" pos:column="22">&amp;<pos:position pos:line="183" pos:column="27"/></operator> <name pos:line="183" pos:column="24">XMIT_SAME_TIME<pos:position pos:line="183" pos:column="38"/></name><operator pos:line="183" pos:column="38">)<pos:position pos:line="183" pos:column="39"/></operator></expr>)<pos:position pos:line="183" pos:column="40"/></condition><then pos:line="183" pos:column="40"> <block pos:line="183" pos:column="41">{
		<if pos:line="184" pos:column="17">if <condition pos:line="184" pos:column="20">(<expr><name pos:line="184" pos:column="21">protocol_version<pos:position pos:line="184" pos:column="37"/></name> <operator pos:line="184" pos:column="38">&gt;=<pos:position pos:line="184" pos:column="43"/></operator> <literal type="number" pos:line="184" pos:column="41">30<pos:position pos:line="184" pos:column="43"/></literal></expr>)<pos:position pos:line="184" pos:column="44"/></condition><then pos:line="184" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="185" pos:column="25">write_varlong<pos:position pos:line="185" pos:column="38"/></name><argument_list pos:line="185" pos:column="38">(<argument><expr><name pos:line="185" pos:column="39">f<pos:position pos:line="185" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="42">modtime<pos:position pos:line="185" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="51">4<pos:position pos:line="185" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="54"/></expr_stmt></block></then>
		<else pos:line="186" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="187" pos:column="25">write_int<pos:position pos:line="187" pos:column="34"/></name><argument_list pos:line="187" pos:column="34">(<argument><expr><name pos:line="187" pos:column="35">f<pos:position pos:line="187" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="38">modtime<pos:position pos:line="187" pos:column="45"/></name></expr></argument>)<pos:position pos:line="187" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="47"/></expr_stmt></block></else></if>
	}<pos:position pos:line="188" pos:column="10"/></block></then></if>
	<if pos:line="189" pos:column="9">if <condition pos:line="189" pos:column="12">(<expr><name pos:line="189" pos:column="13">xflags<pos:position pos:line="189" pos:column="19"/></name> <operator pos:line="189" pos:column="20">&amp;<pos:position pos:line="189" pos:column="25"/></operator> <name pos:line="189" pos:column="22">XMIT_MOD_NSEC<pos:position pos:line="189" pos:column="35"/></name></expr>)<pos:position pos:line="189" pos:column="36"/></condition><then pos:line="189" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="190" pos:column="17">write_varint<pos:position pos:line="190" pos:column="29"/></name><argument_list pos:line="190" pos:column="29">(<argument><expr><name pos:line="190" pos:column="30">f<pos:position pos:line="190" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="190" pos:column="33">F_MOD_NSEC<pos:position pos:line="190" pos:column="43"/></name><argument_list pos:line="190" pos:column="43">(<argument><expr><name pos:line="190" pos:column="44">file<pos:position pos:line="190" pos:column="48"/></name></expr></argument>)<pos:position pos:line="190" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="190" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><operator pos:line="191" pos:column="13">!<pos:position pos:line="191" pos:column="14"/></operator><operator pos:line="191" pos:column="14">(<pos:position pos:line="191" pos:column="15"/></operator><name pos:line="191" pos:column="15">xflags<pos:position pos:line="191" pos:column="21"/></name> <operator pos:line="191" pos:column="22">&amp;<pos:position pos:line="191" pos:column="27"/></operator> <name pos:line="191" pos:column="24">XMIT_SAME_MODE<pos:position pos:line="191" pos:column="38"/></name><operator pos:line="191" pos:column="38">)<pos:position pos:line="191" pos:column="39"/></operator></expr>)<pos:position pos:line="191" pos:column="40"/></condition><then pos:line="191" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="192" pos:column="17">write_int<pos:position pos:line="192" pos:column="26"/></name><argument_list pos:line="192" pos:column="26">(<argument><expr><name pos:line="192" pos:column="27">f<pos:position pos:line="192" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="192" pos:column="30">to_wire_mode<pos:position pos:line="192" pos:column="42"/></name><argument_list pos:line="192" pos:column="42">(<argument><expr><name pos:line="192" pos:column="43">mode<pos:position pos:line="192" pos:column="47"/></name></expr></argument>)<pos:position pos:line="192" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="192" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="50"/></expr_stmt></block></then></if>
	<if pos:line="193" pos:column="9">if <condition pos:line="193" pos:column="12">(<expr><name pos:line="193" pos:column="13">preserve_uid<pos:position pos:line="193" pos:column="25"/></name> <operator pos:line="193" pos:column="26">&amp;&amp;<pos:position pos:line="193" pos:column="36"/></operator> <operator pos:line="193" pos:column="29">!<pos:position pos:line="193" pos:column="30"/></operator><operator pos:line="193" pos:column="30">(<pos:position pos:line="193" pos:column="31"/></operator><name pos:line="193" pos:column="31">xflags<pos:position pos:line="193" pos:column="37"/></name> <operator pos:line="193" pos:column="38">&amp;<pos:position pos:line="193" pos:column="43"/></operator> <name pos:line="193" pos:column="40">XMIT_SAME_UID<pos:position pos:line="193" pos:column="53"/></name><operator pos:line="193" pos:column="53">)<pos:position pos:line="193" pos:column="54"/></operator></expr>)<pos:position pos:line="193" pos:column="55"/></condition><then pos:line="193" pos:column="55"> <block pos:line="193" pos:column="56">{
		<if pos:line="194" pos:column="17">if <condition pos:line="194" pos:column="20">(<expr><name pos:line="194" pos:column="21">protocol_version<pos:position pos:line="194" pos:column="37"/></name> <operator pos:line="194" pos:column="38">&lt;<pos:position pos:line="194" pos:column="42"/></operator> <literal type="number" pos:line="194" pos:column="40">30<pos:position pos:line="194" pos:column="42"/></literal></expr>)<pos:position pos:line="194" pos:column="43"/></condition><then pos:line="194" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="195" pos:column="25">write_int<pos:position pos:line="195" pos:column="34"/></name><argument_list pos:line="195" pos:column="34">(<argument><expr><name pos:line="195" pos:column="35">f<pos:position pos:line="195" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="38">uid<pos:position pos:line="195" pos:column="41"/></name></expr></argument>)<pos:position pos:line="195" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="43"/></expr_stmt></block></then>
		<else pos:line="196" pos:column="17">else <block pos:line="196" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="197" pos:column="25">write_varint<pos:position pos:line="197" pos:column="37"/></name><argument_list pos:line="197" pos:column="37">(<argument><expr><name pos:line="197" pos:column="38">f<pos:position pos:line="197" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="41">uid<pos:position pos:line="197" pos:column="44"/></name></expr></argument>)<pos:position pos:line="197" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="46"/></expr_stmt>
			<if pos:line="198" pos:column="25">if <condition pos:line="198" pos:column="28">(<expr><name pos:line="198" pos:column="29">xflags<pos:position pos:line="198" pos:column="35"/></name> <operator pos:line="198" pos:column="36">&amp;<pos:position pos:line="198" pos:column="41"/></operator> <name pos:line="198" pos:column="38">XMIT_USER_NAME_FOLLOWS<pos:position pos:line="198" pos:column="60"/></name></expr>)<pos:position pos:line="198" pos:column="61"/></condition><then pos:line="198" pos:column="61"> <block pos:line="198" pos:column="62">{
				<decl_stmt><decl><type><name pos:line="199" pos:column="33">int<pos:position pos:line="199" pos:column="36"/></name></type> <name pos:line="199" pos:column="37">len<pos:position pos:line="199" pos:column="40"/></name> <init pos:line="199" pos:column="41">= <expr><call><name pos:line="199" pos:column="43">strlen<pos:position pos:line="199" pos:column="49"/></name><argument_list pos:line="199" pos:column="49">(<argument><expr><name pos:line="199" pos:column="50">user_name<pos:position pos:line="199" pos:column="59"/></name></expr></argument>)<pos:position pos:line="199" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="199" pos:column="61"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="200" pos:column="33">write_byte<pos:position pos:line="200" pos:column="43"/></name><argument_list pos:line="200" pos:column="43">(<argument><expr><name pos:line="200" pos:column="44">f<pos:position pos:line="200" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="47">len<pos:position pos:line="200" pos:column="50"/></name></expr></argument>)<pos:position pos:line="200" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="201" pos:column="33">write_buf<pos:position pos:line="201" pos:column="42"/></name><argument_list pos:line="201" pos:column="42">(<argument><expr><name pos:line="201" pos:column="43">f<pos:position pos:line="201" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="46">user_name<pos:position pos:line="201" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="57">len<pos:position pos:line="201" pos:column="60"/></name></expr></argument>)<pos:position pos:line="201" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="62"/></expr_stmt>
			}<pos:position pos:line="202" pos:column="26"/></block></then></if>
		}<pos:position pos:line="203" pos:column="18"/></block></else></if>
	}<pos:position pos:line="204" pos:column="10"/></block></then></if>
	<if pos:line="205" pos:column="9">if <condition pos:line="205" pos:column="12">(<expr><name pos:line="205" pos:column="13">preserve_gid<pos:position pos:line="205" pos:column="25"/></name> <operator pos:line="205" pos:column="26">&amp;&amp;<pos:position pos:line="205" pos:column="36"/></operator> <operator pos:line="205" pos:column="29">!<pos:position pos:line="205" pos:column="30"/></operator><operator pos:line="205" pos:column="30">(<pos:position pos:line="205" pos:column="31"/></operator><name pos:line="205" pos:column="31">xflags<pos:position pos:line="205" pos:column="37"/></name> <operator pos:line="205" pos:column="38">&amp;<pos:position pos:line="205" pos:column="43"/></operator> <name pos:line="205" pos:column="40">XMIT_SAME_GID<pos:position pos:line="205" pos:column="53"/></name><operator pos:line="205" pos:column="53">)<pos:position pos:line="205" pos:column="54"/></operator></expr>)<pos:position pos:line="205" pos:column="55"/></condition><then pos:line="205" pos:column="55"> <block pos:line="205" pos:column="56">{
		<if pos:line="206" pos:column="17">if <condition pos:line="206" pos:column="20">(<expr><name pos:line="206" pos:column="21">protocol_version<pos:position pos:line="206" pos:column="37"/></name> <operator pos:line="206" pos:column="38">&lt;<pos:position pos:line="206" pos:column="42"/></operator> <literal type="number" pos:line="206" pos:column="40">30<pos:position pos:line="206" pos:column="42"/></literal></expr>)<pos:position pos:line="206" pos:column="43"/></condition><then pos:line="206" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="207" pos:column="25">write_int<pos:position pos:line="207" pos:column="34"/></name><argument_list pos:line="207" pos:column="34">(<argument><expr><name pos:line="207" pos:column="35">f<pos:position pos:line="207" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="38">gid<pos:position pos:line="207" pos:column="41"/></name></expr></argument>)<pos:position pos:line="207" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="43"/></expr_stmt></block></then>
		<else pos:line="208" pos:column="17">else <block pos:line="208" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="209" pos:column="25">write_varint<pos:position pos:line="209" pos:column="37"/></name><argument_list pos:line="209" pos:column="37">(<argument><expr><name pos:line="209" pos:column="38">f<pos:position pos:line="209" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="41">gid<pos:position pos:line="209" pos:column="44"/></name></expr></argument>)<pos:position pos:line="209" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="46"/></expr_stmt>
			<if pos:line="210" pos:column="25">if <condition pos:line="210" pos:column="28">(<expr><name pos:line="210" pos:column="29">xflags<pos:position pos:line="210" pos:column="35"/></name> <operator pos:line="210" pos:column="36">&amp;<pos:position pos:line="210" pos:column="41"/></operator> <name pos:line="210" pos:column="38">XMIT_GROUP_NAME_FOLLOWS<pos:position pos:line="210" pos:column="61"/></name></expr>)<pos:position pos:line="210" pos:column="62"/></condition><then pos:line="210" pos:column="62"> <block pos:line="210" pos:column="63">{
				<decl_stmt><decl><type><name pos:line="211" pos:column="33">int<pos:position pos:line="211" pos:column="36"/></name></type> <name pos:line="211" pos:column="37">len<pos:position pos:line="211" pos:column="40"/></name> <init pos:line="211" pos:column="41">= <expr><call><name pos:line="211" pos:column="43">strlen<pos:position pos:line="211" pos:column="49"/></name><argument_list pos:line="211" pos:column="49">(<argument><expr><name pos:line="211" pos:column="50">group_name<pos:position pos:line="211" pos:column="60"/></name></expr></argument>)<pos:position pos:line="211" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="211" pos:column="62"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="212" pos:column="33">write_byte<pos:position pos:line="212" pos:column="43"/></name><argument_list pos:line="212" pos:column="43">(<argument><expr><name pos:line="212" pos:column="44">f<pos:position pos:line="212" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="47">len<pos:position pos:line="212" pos:column="50"/></name></expr></argument>)<pos:position pos:line="212" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="213" pos:column="33">write_buf<pos:position pos:line="213" pos:column="42"/></name><argument_list pos:line="213" pos:column="42">(<argument><expr><name pos:line="213" pos:column="43">f<pos:position pos:line="213" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="46">group_name<pos:position pos:line="213" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="58">len<pos:position pos:line="213" pos:column="61"/></name></expr></argument>)<pos:position pos:line="213" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="214" pos:column="26"/></block></then></if>
		}<pos:position pos:line="215" pos:column="18"/></block></else></if>
	}<pos:position pos:line="216" pos:column="10"/></block></then></if>
	<if pos:line="217" pos:column="9">if <condition pos:line="217" pos:column="12">(<expr><operator pos:line="217" pos:column="13">(<pos:position pos:line="217" pos:column="14"/></operator><name pos:line="217" pos:column="14">preserve_devices<pos:position pos:line="217" pos:column="30"/></name> <operator pos:line="217" pos:column="31">&amp;&amp;<pos:position pos:line="217" pos:column="41"/></operator> <call><name pos:line="217" pos:column="34">IS_DEVICE<pos:position pos:line="217" pos:column="43"/></name><argument_list pos:line="217" pos:column="43">(<argument><expr><name pos:line="217" pos:column="44">mode<pos:position pos:line="217" pos:column="48"/></name></expr></argument>)<pos:position pos:line="217" pos:column="49"/></argument_list></call><operator pos:line="217" pos:column="49">)<pos:position pos:line="217" pos:column="50"/></operator>
	 <operator pos:line="218" pos:column="10">||<pos:position pos:line="218" pos:column="12"/></operator> <operator pos:line="218" pos:column="13">(<pos:position pos:line="218" pos:column="14"/></operator><name pos:line="218" pos:column="14">preserve_specials<pos:position pos:line="218" pos:column="31"/></name> <operator pos:line="218" pos:column="32">&amp;&amp;<pos:position pos:line="218" pos:column="42"/></operator> <call><name pos:line="218" pos:column="35">IS_SPECIAL<pos:position pos:line="218" pos:column="45"/></name><argument_list pos:line="218" pos:column="45">(<argument><expr><name pos:line="218" pos:column="46">mode<pos:position pos:line="218" pos:column="50"/></name></expr></argument>)<pos:position pos:line="218" pos:column="51"/></argument_list></call> <operator pos:line="218" pos:column="52">&amp;&amp;<pos:position pos:line="218" pos:column="62"/></operator> <name pos:line="218" pos:column="55">protocol_version<pos:position pos:line="218" pos:column="71"/></name> <operator pos:line="218" pos:column="72">&lt;<pos:position pos:line="218" pos:column="76"/></operator> <literal type="number" pos:line="218" pos:column="74">31<pos:position pos:line="218" pos:column="76"/></literal><operator pos:line="218" pos:column="76">)<pos:position pos:line="218" pos:column="77"/></operator></expr>)<pos:position pos:line="218" pos:column="78"/></condition><then pos:line="218" pos:column="78"> <block pos:line="218" pos:column="79">{
		<if pos:line="219" pos:column="17">if <condition pos:line="219" pos:column="20">(<expr><name pos:line="219" pos:column="21">protocol_version<pos:position pos:line="219" pos:column="37"/></name> <operator pos:line="219" pos:column="38">&lt;<pos:position pos:line="219" pos:column="42"/></operator> <literal type="number" pos:line="219" pos:column="40">28<pos:position pos:line="219" pos:column="42"/></literal></expr>)<pos:position pos:line="219" pos:column="43"/></condition><then pos:line="219" pos:column="43"> <block pos:line="219" pos:column="44">{
			<if pos:line="220" pos:column="25">if <condition pos:line="220" pos:column="28">(<expr><operator pos:line="220" pos:column="29">!<pos:position pos:line="220" pos:column="30"/></operator><operator pos:line="220" pos:column="30">(<pos:position pos:line="220" pos:column="31"/></operator><name pos:line="220" pos:column="31">xflags<pos:position pos:line="220" pos:column="37"/></name> <operator pos:line="220" pos:column="38">&amp;<pos:position pos:line="220" pos:column="43"/></operator> <name pos:line="220" pos:column="40">XMIT_SAME_RDEV_pre28<pos:position pos:line="220" pos:column="60"/></name><operator pos:line="220" pos:column="60">)<pos:position pos:line="220" pos:column="61"/></operator></expr>)<pos:position pos:line="220" pos:column="62"/></condition><then pos:line="220" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="221" pos:column="33">write_int<pos:position pos:line="221" pos:column="42"/></name><argument_list pos:line="221" pos:column="42">(<argument><expr><name pos:line="221" pos:column="43">f<pos:position pos:line="221" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="221" pos:column="46">(<pos:position pos:line="221" pos:column="47"/></operator><name pos:line="221" pos:column="47">int<pos:position pos:line="221" pos:column="50"/></name><operator pos:line="221" pos:column="50">)<pos:position pos:line="221" pos:column="51"/></operator><name pos:line="221" pos:column="51">rdev<pos:position pos:line="221" pos:column="55"/></name></expr></argument>)<pos:position pos:line="221" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="57"/></expr_stmt></block></then></if>
		}<pos:position pos:line="222" pos:column="18"/></block></then> <else pos:line="222" pos:column="19">else <block pos:line="222" pos:column="24">{
			<if pos:line="223" pos:column="25">if <condition pos:line="223" pos:column="28">(<expr><operator pos:line="223" pos:column="29">!<pos:position pos:line="223" pos:column="30"/></operator><operator pos:line="223" pos:column="30">(<pos:position pos:line="223" pos:column="31"/></operator><name pos:line="223" pos:column="31">xflags<pos:position pos:line="223" pos:column="37"/></name> <operator pos:line="223" pos:column="38">&amp;<pos:position pos:line="223" pos:column="43"/></operator> <name pos:line="223" pos:column="40">XMIT_SAME_RDEV_MAJOR<pos:position pos:line="223" pos:column="60"/></name><operator pos:line="223" pos:column="60">)<pos:position pos:line="223" pos:column="61"/></operator></expr>)<pos:position pos:line="223" pos:column="62"/></condition><then pos:line="223" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="224" pos:column="33">write_varint30<pos:position pos:line="224" pos:column="47"/></name><argument_list pos:line="224" pos:column="47">(<argument><expr><name pos:line="224" pos:column="48">f<pos:position pos:line="224" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="224" pos:column="51">major<pos:position pos:line="224" pos:column="56"/></name><argument_list pos:line="224" pos:column="56">(<argument><expr><name pos:line="224" pos:column="57">rdev<pos:position pos:line="224" pos:column="61"/></name></expr></argument>)<pos:position pos:line="224" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="224" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="64"/></expr_stmt></block></then></if>
			<if pos:line="225" pos:column="25">if <condition pos:line="225" pos:column="28">(<expr><name pos:line="225" pos:column="29">protocol_version<pos:position pos:line="225" pos:column="45"/></name> <operator pos:line="225" pos:column="46">&gt;=<pos:position pos:line="225" pos:column="51"/></operator> <literal type="number" pos:line="225" pos:column="49">30<pos:position pos:line="225" pos:column="51"/></literal></expr>)<pos:position pos:line="225" pos:column="52"/></condition><then pos:line="225" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="226" pos:column="33">write_varint<pos:position pos:line="226" pos:column="45"/></name><argument_list pos:line="226" pos:column="45">(<argument><expr><name pos:line="226" pos:column="46">f<pos:position pos:line="226" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="226" pos:column="49">minor<pos:position pos:line="226" pos:column="54"/></name><argument_list pos:line="226" pos:column="54">(<argument><expr><name pos:line="226" pos:column="55">rdev<pos:position pos:line="226" pos:column="59"/></name></expr></argument>)<pos:position pos:line="226" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="226" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="62"/></expr_stmt></block></then>
			<elseif pos:line="227" pos:column="25">else <if pos:line="227" pos:column="30">if <condition pos:line="227" pos:column="33">(<expr><name pos:line="227" pos:column="34">xflags<pos:position pos:line="227" pos:column="40"/></name> <operator pos:line="227" pos:column="41">&amp;<pos:position pos:line="227" pos:column="46"/></operator> <name pos:line="227" pos:column="43">XMIT_RDEV_MINOR_8_pre30<pos:position pos:line="227" pos:column="66"/></name></expr>)<pos:position pos:line="227" pos:column="67"/></condition><then pos:line="227" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="228" pos:column="33">write_byte<pos:position pos:line="228" pos:column="43"/></name><argument_list pos:line="228" pos:column="43">(<argument><expr><name pos:line="228" pos:column="44">f<pos:position pos:line="228" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="228" pos:column="47">minor<pos:position pos:line="228" pos:column="52"/></name><argument_list pos:line="228" pos:column="52">(<argument><expr><name pos:line="228" pos:column="53">rdev<pos:position pos:line="228" pos:column="57"/></name></expr></argument>)<pos:position pos:line="228" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="228" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="60"/></expr_stmt></block></then></if></elseif>
			<else pos:line="229" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="230" pos:column="33">write_int<pos:position pos:line="230" pos:column="42"/></name><argument_list pos:line="230" pos:column="42">(<argument><expr><name pos:line="230" pos:column="43">f<pos:position pos:line="230" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="230" pos:column="46">minor<pos:position pos:line="230" pos:column="51"/></name><argument_list pos:line="230" pos:column="51">(<argument><expr><name pos:line="230" pos:column="52">rdev<pos:position pos:line="230" pos:column="56"/></name></expr></argument>)<pos:position pos:line="230" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="230" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="59"/></expr_stmt></block></else></if>
		}<pos:position pos:line="231" pos:column="18"/></block></else></if>
	}<pos:position pos:line="232" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="234" pos:column="1">#<cpp:directive pos:line="234" pos:column="2">ifdef<pos:position pos:line="234" pos:column="7"/></cpp:directive> <name pos:line="234" pos:column="8">SUPPORT_LINKS<pos:position pos:line="234" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="235" pos:column="9">if <condition pos:line="235" pos:column="12">(<expr><name pos:line="235" pos:column="13">symlink_len<pos:position pos:line="235" pos:column="24"/></name></expr>)<pos:position pos:line="235" pos:column="25"/></condition><then pos:line="235" pos:column="25"> <block pos:line="235" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="236" pos:column="17">write_varint30<pos:position pos:line="236" pos:column="31"/></name><argument_list pos:line="236" pos:column="31">(<argument><expr><name pos:line="236" pos:column="32">f<pos:position pos:line="236" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="35">symlink_len<pos:position pos:line="236" pos:column="46"/></name></expr></argument>)<pos:position pos:line="236" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="237" pos:column="17">write_buf<pos:position pos:line="237" pos:column="26"/></name><argument_list pos:line="237" pos:column="26">(<argument><expr><name pos:line="237" pos:column="27">f<pos:position pos:line="237" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="30">symlink_name<pos:position pos:line="237" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="44">symlink_len<pos:position pos:line="237" pos:column="55"/></name></expr></argument>)<pos:position pos:line="237" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="238" pos:column="10"/></block></then></if>
<cpp:endif pos:line="239" pos:column="1">#<cpp:directive pos:line="239" pos:column="2">endif<pos:position pos:line="239" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">ifdef<pos:position pos:line="241" pos:column="7"/></cpp:directive> <name pos:line="241" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="241" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="242" pos:column="9">if <condition pos:line="242" pos:column="12">(<expr><name pos:line="242" pos:column="13">tmp_dev<pos:position pos:line="242" pos:column="20"/></name> <operator pos:line="242" pos:column="21">!=<pos:position pos:line="242" pos:column="23"/></operator> <operator pos:line="242" pos:column="24">-<pos:position pos:line="242" pos:column="25"/></operator><literal type="number" pos:line="242" pos:column="25">1<pos:position pos:line="242" pos:column="26"/></literal> <operator pos:line="242" pos:column="27">&amp;&amp;<pos:position pos:line="242" pos:column="37"/></operator> <name pos:line="242" pos:column="30">protocol_version<pos:position pos:line="242" pos:column="46"/></name> <operator pos:line="242" pos:column="47">&lt;<pos:position pos:line="242" pos:column="51"/></operator> <literal type="number" pos:line="242" pos:column="49">30<pos:position pos:line="242" pos:column="51"/></literal></expr>)<pos:position pos:line="242" pos:column="52"/></condition><then pos:line="242" pos:column="52"> <block pos:line="242" pos:column="53">{
		<comment type="block" pos:line="243" pos:column="17">/* Older protocols expect the dev number to be transmitted
		 * 1-incremented so that it is never zero. */</comment>
		<if pos:line="245" pos:column="17">if <condition pos:line="245" pos:column="20">(<expr><name pos:line="245" pos:column="21">protocol_version<pos:position pos:line="245" pos:column="37"/></name> <operator pos:line="245" pos:column="38">&lt;<pos:position pos:line="245" pos:column="42"/></operator> <literal type="number" pos:line="245" pos:column="40">26<pos:position pos:line="245" pos:column="42"/></literal></expr>)<pos:position pos:line="245" pos:column="43"/></condition><then pos:line="245" pos:column="43"> <block pos:line="245" pos:column="44">{
			<comment type="block" pos:line="246" pos:column="25">/* 32-bit dev_t and ino_t */</comment>
			<expr_stmt><expr><call><name pos:line="247" pos:column="25">write_int<pos:position pos:line="247" pos:column="34"/></name><argument_list pos:line="247" pos:column="34">(<argument><expr><name pos:line="247" pos:column="35">f<pos:position pos:line="247" pos:column="36"/></name></expr></argument>, <argument><expr><call pos:line="247" pos:column="38">(<name pos:line="247" pos:column="39">int32<pos:position pos:line="247" pos:column="44"/></name>)<argument_list pos:line="247" pos:column="45">(<argument><expr><name pos:line="247" pos:column="46">dev<pos:position pos:line="247" pos:column="49"/></name><operator pos:line="247" pos:column="49">+<pos:position pos:line="247" pos:column="50"/></operator><literal type="number" pos:line="247" pos:column="50">1<pos:position pos:line="247" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="247" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="248" pos:column="25">write_int<pos:position pos:line="248" pos:column="34"/></name><argument_list pos:line="248" pos:column="34">(<argument><expr><name pos:line="248" pos:column="35">f<pos:position pos:line="248" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="248" pos:column="38">(<pos:position pos:line="248" pos:column="39"/></operator><name pos:line="248" pos:column="39">int32<pos:position pos:line="248" pos:column="44"/></name><operator pos:line="248" pos:column="44">)<pos:position pos:line="248" pos:column="45"/></operator><name pos:line="248" pos:column="45">tmp_ino<pos:position pos:line="248" pos:column="52"/></name></expr></argument>)<pos:position pos:line="248" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="249" pos:column="18"/></block></then> <else pos:line="249" pos:column="19">else <block pos:line="249" pos:column="24">{
			<comment type="block" pos:line="250" pos:column="25">/* 64-bit dev_t and ino_t */</comment>
			<if pos:line="251" pos:column="25">if <condition pos:line="251" pos:column="28">(<expr><operator pos:line="251" pos:column="29">!<pos:position pos:line="251" pos:column="30"/></operator><operator pos:line="251" pos:column="30">(<pos:position pos:line="251" pos:column="31"/></operator><name pos:line="251" pos:column="31">xflags<pos:position pos:line="251" pos:column="37"/></name> <operator pos:line="251" pos:column="38">&amp;<pos:position pos:line="251" pos:column="43"/></operator> <name pos:line="251" pos:column="40">XMIT_SAME_DEV_pre30<pos:position pos:line="251" pos:column="59"/></name><operator pos:line="251" pos:column="59">)<pos:position pos:line="251" pos:column="60"/></operator></expr>)<pos:position pos:line="251" pos:column="61"/></condition><then pos:line="251" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="252" pos:column="33">write_longint<pos:position pos:line="252" pos:column="46"/></name><argument_list pos:line="252" pos:column="46">(<argument><expr><name pos:line="252" pos:column="47">f<pos:position pos:line="252" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="50">dev<pos:position pos:line="252" pos:column="53"/></name><operator pos:line="252" pos:column="53">+<pos:position pos:line="252" pos:column="54"/></operator><literal type="number" pos:line="252" pos:column="54">1<pos:position pos:line="252" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="252" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="57"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="253" pos:column="25">write_longint<pos:position pos:line="253" pos:column="38"/></name><argument_list pos:line="253" pos:column="38">(<argument><expr><name pos:line="253" pos:column="39">f<pos:position pos:line="253" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="42">tmp_ino<pos:position pos:line="253" pos:column="49"/></name></expr></argument>)<pos:position pos:line="253" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="254" pos:column="18"/></block></else></if>
	}<pos:position pos:line="255" pos:column="10"/></block></then></if>
<cpp:endif pos:line="256" pos:column="1">#<cpp:directive pos:line="256" pos:column="2">endif<pos:position pos:line="256" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="258" pos:column="9">if <condition pos:line="258" pos:column="12">(<expr><name pos:line="258" pos:column="13">always_checksum<pos:position pos:line="258" pos:column="28"/></name> <operator pos:line="258" pos:column="29">&amp;&amp;<pos:position pos:line="258" pos:column="39"/></operator> <operator pos:line="258" pos:column="32">(<pos:position pos:line="258" pos:column="33"/></operator><call><name pos:line="258" pos:column="33">S_ISREG<pos:position pos:line="258" pos:column="40"/></name><argument_list pos:line="258" pos:column="40">(<argument><expr><name pos:line="258" pos:column="41">mode<pos:position pos:line="258" pos:column="45"/></name></expr></argument>)<pos:position pos:line="258" pos:column="46"/></argument_list></call> <operator pos:line="258" pos:column="47">||<pos:position pos:line="258" pos:column="49"/></operator> <name pos:line="258" pos:column="50">protocol_version<pos:position pos:line="258" pos:column="66"/></name> <operator pos:line="258" pos:column="67">&lt;<pos:position pos:line="258" pos:column="71"/></operator> <literal type="number" pos:line="258" pos:column="69">28<pos:position pos:line="258" pos:column="71"/></literal><operator pos:line="258" pos:column="71">)<pos:position pos:line="258" pos:column="72"/></operator></expr>)<pos:position pos:line="258" pos:column="73"/></condition><then pos:line="258" pos:column="73"> <block pos:line="258" pos:column="74">{
		<decl_stmt><decl><type><specifier pos:line="259" pos:column="17">const<pos:position pos:line="259" pos:column="22"/></specifier> <name pos:line="259" pos:column="23">char<pos:position pos:line="259" pos:column="27"/></name> <modifier pos:line="259" pos:column="28">*<pos:position pos:line="259" pos:column="29"/></modifier></type><name pos:line="259" pos:column="29">sum<pos:position pos:line="259" pos:column="32"/></name></decl>;<pos:position pos:line="259" pos:column="33"/></decl_stmt>
		<if pos:line="260" pos:column="17">if <condition pos:line="260" pos:column="20">(<expr><call><name pos:line="260" pos:column="21">S_ISREG<pos:position pos:line="260" pos:column="28"/></name><argument_list pos:line="260" pos:column="28">(<argument><expr><name pos:line="260" pos:column="29">mode<pos:position pos:line="260" pos:column="33"/></name></expr></argument>)<pos:position pos:line="260" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="260" pos:column="35"/></condition><then pos:line="260" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="261" pos:column="25">sum<pos:position pos:line="261" pos:column="28"/></name> <operator pos:line="261" pos:column="29">=<pos:position pos:line="261" pos:column="30"/></operator> <name pos:line="261" pos:column="31">tmp_sum<pos:position pos:line="261" pos:column="38"/></name></expr>;<pos:position pos:line="261" pos:column="39"/></expr_stmt></block></then>
		<else pos:line="262" pos:column="17">else <block pos:line="262" pos:column="22">{
			<comment type="block" pos:line="263" pos:column="25">/* Prior to 28, we sent a useless set of nulls. */</comment>
			<expr_stmt><expr><name pos:line="264" pos:column="25">sum<pos:position pos:line="264" pos:column="28"/></name> <operator pos:line="264" pos:column="29">=<pos:position pos:line="264" pos:column="30"/></operator> <name pos:line="264" pos:column="31">empty_sum<pos:position pos:line="264" pos:column="40"/></name></expr>;<pos:position pos:line="264" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="265" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="266" pos:column="17">write_buf<pos:position pos:line="266" pos:column="26"/></name><argument_list pos:line="266" pos:column="26">(<argument><expr><name pos:line="266" pos:column="27">f<pos:position pos:line="266" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="30">sum<pos:position pos:line="266" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="266" pos:column="35">checksum_len<pos:position pos:line="266" pos:column="47"/></name></expr></argument>)<pos:position pos:line="266" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="267" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">ifdef<pos:position pos:line="269" pos:column="7"/></cpp:directive> <name pos:line="269" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="269" pos:column="26"/></name></cpp:ifdef>
  <label><name pos:line="270" pos:column="3">the_end<pos:position pos:line="270" pos:column="10"/></name>:<pos:position pos:line="270" pos:column="11"/></label>
<cpp:endif pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">endif<pos:position pos:line="271" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="272" pos:column="9">strlcpy<pos:position pos:line="272" pos:column="16"/></name><argument_list pos:line="272" pos:column="16">(<argument><expr><name pos:line="272" pos:column="17">lastname<pos:position pos:line="272" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="27">fname<pos:position pos:line="272" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="34">MAXPATHLEN<pos:position pos:line="272" pos:column="44"/></name></expr></argument>)<pos:position pos:line="272" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="46"/></expr_stmt>

	<if pos:line="274" pos:column="9">if <condition pos:line="274" pos:column="12">(<expr><call><name pos:line="274" pos:column="13">S_ISREG<pos:position pos:line="274" pos:column="20"/></name><argument_list pos:line="274" pos:column="20">(<argument><expr><name pos:line="274" pos:column="21">mode<pos:position pos:line="274" pos:column="25"/></name></expr></argument>)<pos:position pos:line="274" pos:column="26"/></argument_list></call> <operator pos:line="274" pos:column="27">||<pos:position pos:line="274" pos:column="29"/></operator> <call><name pos:line="274" pos:column="30">S_ISLNK<pos:position pos:line="274" pos:column="37"/></name><argument_list pos:line="274" pos:column="37">(<argument><expr><name pos:line="274" pos:column="38">mode<pos:position pos:line="274" pos:column="42"/></name></expr></argument>)<pos:position pos:line="274" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="274" pos:column="44"/></condition><then pos:line="274" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="275" pos:column="17">stats<pos:position pos:line="275" pos:column="22"/></name><operator pos:line="275" pos:column="22">.<pos:position pos:line="275" pos:column="23"/></operator><name pos:line="275" pos:column="23">total_size<pos:position pos:line="275" pos:column="33"/></name></name> <operator pos:line="275" pos:column="34">+=<pos:position pos:line="275" pos:column="36"/></operator> <call><name pos:line="275" pos:column="37">F_LENGTH<pos:position pos:line="275" pos:column="45"/></name><argument_list pos:line="275" pos:column="45">(<argument><expr><name pos:line="275" pos:column="46">file<pos:position pos:line="275" pos:column="50"/></name></expr></argument>)<pos:position pos:line="275" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="52"/></expr_stmt></block></then></if>
}<pos:position pos:line="276" pos:column="2"/></block></function></unit>

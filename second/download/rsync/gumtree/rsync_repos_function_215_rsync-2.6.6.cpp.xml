<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_215_rsync-2.6.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">log_item<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">file_struct<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">file<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">stats<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">initial_stats<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
	      <parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">iflags<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">hlink<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">s_or_r<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><ternary><condition><expr><name pos:line="4" pos:column="24">am_sender<pos:position pos:line="4" pos:column="33"/></name></expr> ?<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35"> <expr><literal type="string" pos:line="4" pos:column="36">"send"<pos:position pos:line="4" pos:column="42"/></literal></expr> <pos:position pos:line="4" pos:column="43"/></then><else pos:line="4" pos:column="43">: <expr><literal type="string" pos:line="4" pos:column="45">"recv"<pos:position pos:line="4" pos:column="51"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">lp_transfer_logging<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">module_id<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44"> <block pos:line="6" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">log_formatted<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">FLOG<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="37">lp_log_format<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">module_id<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="63">s_or_r<pos:position pos:line="7" pos:column="69"/></name></expr></argument>,
			      <argument><expr><name pos:line="8" pos:column="31">file<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">initial_stats<pos:position pos:line="8" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">iflags<pos:position pos:line="8" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="60">hlink<pos:position pos:line="8" pos:column="65"/></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then> <elseif pos:line="9" pos:column="11">else <if pos:line="9" pos:column="16">if <condition pos:line="9" pos:column="19">(<expr><name pos:line="9" pos:column="20">log_format<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&amp;&amp;<pos:position pos:line="9" pos:column="41"/></operator> <operator pos:line="9" pos:column="34">!<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">am_server<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">log_formatted<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">FINFO<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">log_format<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">s_or_r<pos:position pos:line="10" pos:column="56"/></name></expr></argument>,
			      <argument><expr><name pos:line="11" pos:column="31">file<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">initial_stats<pos:position pos:line="11" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="52">iflags<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">hlink<pos:position pos:line="11" pos:column="65"/></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_177_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write_varint<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">f<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">int32<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">x<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">b<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">5<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uchar<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">bit<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">cnt<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">4<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">SIVAL<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">b<pos:position pos:line="7" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="18">1<pos:position pos:line="7" pos:column="19"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="21">x<pos:position pos:line="7" pos:column="22"/></name></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">cnt<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&gt;<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="22">1<pos:position pos:line="9" pos:column="23"/></literal> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <name><name pos:line="9" pos:column="27">b<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><name pos:line="9" pos:column="29">cnt<pos:position pos:line="9" pos:column="32"/></name></expr>]<pos:position pos:line="9" pos:column="33"/></index></name> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <literal type="number" pos:line="9" pos:column="37">0<pos:position pos:line="9" pos:column="38"/></literal></expr>)<pos:position pos:line="9" pos:column="39"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">cnt<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">--<pos:position pos:line="10" pos:column="22"/></operator></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt></block></while>
	<expr_stmt><expr><name pos:line="11" pos:column="9">bit<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <operator pos:line="11" pos:column="15">(<pos:position pos:line="11" pos:column="16"/></operator><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">uchar<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">)<pos:position pos:line="11" pos:column="23"/></operator><literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal><operator pos:line="11" pos:column="24">&lt;&lt;<pos:position pos:line="11" pos:column="32"/></operator><operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><literal type="number" pos:line="11" pos:column="27">7<pos:position pos:line="11" pos:column="28"/></literal><operator pos:line="11" pos:column="28">-<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">cnt<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">+<pos:position pos:line="11" pos:column="33"/></operator><literal type="number" pos:line="11" pos:column="33">1<pos:position pos:line="11" pos:column="34"/></literal><operator pos:line="11" pos:column="34">)<pos:position pos:line="11" pos:column="35"/></operator><operator pos:line="11" pos:column="35">)<pos:position pos:line="11" pos:column="36"/></operator></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">CVAL<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">b<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="21">cnt<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call> <operator pos:line="12" pos:column="26">&gt;=<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="29">bit<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
		<expr_stmt><expr><name pos:line="13" pos:column="17">cnt<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">++<pos:position pos:line="13" pos:column="22"/></operator></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">b<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">~<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="23">(<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">bit<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-<pos:position pos:line="14" pos:column="28"/></operator><literal type="number" pos:line="14" pos:column="28">1<pos:position pos:line="14" pos:column="29"/></literal><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><name pos:line="15" pos:column="20">cnt<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&gt;<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">b<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="22">b<pos:position pos:line="16" pos:column="23"/></name><index pos:line="16" pos:column="23">[<expr><name pos:line="16" pos:column="24">cnt<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name> <operator pos:line="16" pos:column="29">|<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="31">~<pos:position pos:line="16" pos:column="32"/></operator><operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">bit<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">*<pos:position pos:line="16" pos:column="37"/></operator><literal type="number" pos:line="16" pos:column="37">2<pos:position pos:line="16" pos:column="38"/></literal><operator pos:line="16" pos:column="38">-<pos:position pos:line="16" pos:column="39"/></operator><literal type="number" pos:line="16" pos:column="39">1<pos:position pos:line="16" pos:column="40"/></literal><operator pos:line="16" pos:column="40">)<pos:position pos:line="16" pos:column="41"/></operator></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt></block></then></if></elseif>
	<else pos:line="17" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">b<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">b<pos:position pos:line="18" pos:column="23"/></name><index pos:line="18" pos:column="23">[<expr><name pos:line="18" pos:column="24">cnt<pos:position pos:line="18" pos:column="27"/></name></expr>]<pos:position pos:line="18" pos:column="28"/></index></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">write_buf<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">f<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="22">b<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="25">cnt<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

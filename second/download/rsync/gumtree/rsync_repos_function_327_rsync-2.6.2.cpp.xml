<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_327_rsync-2.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_refuse_options<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">bp<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">poptOption<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">op<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">cp<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><literal type="number" pos:line="6" pos:column="16">1<pos:position pos:line="6" pos:column="17"/></literal></expr>)<pos:position pos:line="6" pos:column="18"/></condition> <block pos:line="6" pos:column="19">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">cp<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">=<pos:position pos:line="7" pos:column="26"/></operator> <call><name pos:line="7" pos:column="27">strchr<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">bp<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="38">' '<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator> <operator pos:line="7" pos:column="44">!=<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="47">NULL<pos:position pos:line="7" pos:column="51"/></name></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">cp<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <literal type="char" pos:line="8" pos:column="30">'\0'<pos:position pos:line="8" pos:column="34"/></literal></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt></block></then></if>
		<for pos:line="9" pos:column="17">for <control pos:line="9" pos:column="21">(<init><expr><name pos:line="9" pos:column="22">op<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">long_options<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></init> <condition pos:line="9" pos:column="41">;<pos:position pos:line="9" pos:column="42"/></condition> <incr><expr><name pos:line="9" pos:column="43">op<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">++<pos:position pos:line="9" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="48"/></control> <block pos:line="9" pos:column="49">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><operator pos:line="10" pos:column="29">!<pos:position pos:line="10" pos:column="30"/></operator><name><name pos:line="10" pos:column="30">op<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">longName<pos:position pos:line="10" pos:column="42"/></name></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="11" pos:column="33">rprintf<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">FLOG<pos:position pos:line="11" pos:column="45"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="12" pos:column="37">"Unknown option %s in \"refuse options\" setting\n"<pos:position pos:line="12" pos:column="88"/></literal></expr></argument>,
				    <argument><expr><name pos:line="13" pos:column="37">bp<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
				<break pos:line="14" pos:column="33">break;<pos:position pos:line="14" pos:column="39"/></break>
			}<pos:position pos:line="15" pos:column="26"/></block></then></if>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><call><name pos:line="16" pos:column="29">strcmp<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">bp<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="40">op<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">longName<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call> <operator pos:line="16" pos:column="54">==<pos:position pos:line="16" pos:column="56"/></operator> <literal type="number" pos:line="16" pos:column="57">0<pos:position pos:line="16" pos:column="58"/></literal></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59"> <block pos:line="16" pos:column="60">{
				<expr_stmt><expr><name><name pos:line="17" pos:column="33">op<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">val<pos:position pos:line="17" pos:column="40"/></name></name> <operator pos:line="17" pos:column="41">=<pos:position pos:line="17" pos:column="42"/></operator> <operator pos:line="17" pos:column="43">(<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">op<pos:position pos:line="17" pos:column="46"/></name> <operator pos:line="17" pos:column="47">-<pos:position pos:line="17" pos:column="48"/></operator> <name pos:line="17" pos:column="49">long_options<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator><operator pos:line="17" pos:column="62">+<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="63">OPT_REFUSED_BASE<pos:position pos:line="17" pos:column="79"/></name></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>
				<break pos:line="18" pos:column="33">break;<pos:position pos:line="18" pos:column="39"/></break>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if>
		}<pos:position pos:line="20" pos:column="18"/></block></for>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">cp<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
			<block type="pseudo"><break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">cp<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="char" pos:line="23" pos:column="23">' '<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">bp<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">cp<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">+<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">1<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="25" pos:column="10"/></block></while>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

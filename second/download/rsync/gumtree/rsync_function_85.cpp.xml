<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_85.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">read_check<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">f<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">n<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">read_buffer_len<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">==<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">read_buffer_p<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">read_buffer<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">n<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">num_waiting<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">f<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">&lt;=<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="29">0<pos:position pos:line="9" pos:column="30"/></literal></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
    <block type="pseudo"><return pos:line="10" pos:column="5">return;<pos:position pos:line="10" pos:column="12"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">read_buffer_p<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">!=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">read_buffer<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36"> <block pos:line="12" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memmove<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">read_buffer<pos:position pos:line="13" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="25">read_buffer_p<pos:position pos:line="13" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="39">read_buffer_len<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">read_buffer_p<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">read_buffer<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">n<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">&gt;<pos:position pos:line="17" pos:column="13"/></operator> <operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">read_buffer_size<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">-<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">read_buffer_len<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">)<pos:position pos:line="17" pos:column="47"/></operator></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <block pos:line="17" pos:column="49">{
    <expr_stmt><expr><name pos:line="18" pos:column="5">read_buffer_size<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">+=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">n<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">read_buffer<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22">
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">read_buffer<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">char<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator><call><name pos:line="20" pos:column="29">malloc<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">read_buffer_size<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt></block></then>
    <else pos:line="21" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">read_buffer<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <operator pos:line="22" pos:column="21">(<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">char<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">*<pos:position pos:line="22" pos:column="28"/></operator><operator pos:line="22" pos:column="28">)<pos:position pos:line="22" pos:column="29"/></operator><call><name pos:line="22" pos:column="29">realloc<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">read_buffer<pos:position pos:line="22" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="49">read_buffer_size<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt></block></else></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">read_buffer<pos:position pos:line="23" pos:column="21"/></name></expr>)<pos:position pos:line="23" pos:column="22"/></condition><then pos:line="23" pos:column="22"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="23">out_of_memory<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><literal type="string" pos:line="23" pos:column="37">"read check"<pos:position pos:line="23" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt></block></then></if>      
    <expr_stmt><expr><name pos:line="24" pos:column="5">read_buffer_p<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">read_buffer<pos:position pos:line="24" pos:column="32"/></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>      
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">n<pos:position pos:line="27" pos:column="4"/></name> <operator pos:line="27" pos:column="5">=<pos:position pos:line="27" pos:column="6"/></operator> <call><name pos:line="27" pos:column="7">read<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">f<pos:position pos:line="27" pos:column="13"/></name></expr></argument>,<argument><expr><name pos:line="27" pos:column="14">read_buffer<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">+<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">read_buffer_len<pos:position pos:line="27" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="27" pos:column="42">n<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">n<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">&gt;<pos:position pos:line="28" pos:column="13"/></operator> <literal type="number" pos:line="28" pos:column="11">0<pos:position pos:line="28" pos:column="12"/></literal></expr>)<pos:position pos:line="28" pos:column="13"/></condition><then pos:line="28" pos:column="13"> <block pos:line="28" pos:column="14">{
    <expr_stmt><expr><name pos:line="29" pos:column="5">read_buffer_len<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">+=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">n<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

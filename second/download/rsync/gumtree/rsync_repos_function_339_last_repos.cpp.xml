<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_339_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">log_exit<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">code<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">file<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">line<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">code<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">==<pos:position pos:line="3" pos:column="20"/></operator> <literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr>)<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23"> <block pos:line="3" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">rprintf<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">FLOG<pos:position pos:line="4" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="4" pos:column="30">"sent %s bytes  received %s bytes  total size %s\n"<pos:position pos:line="4" pos:column="81"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="5" pos:column="25">big_num<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name><name pos:line="5" pos:column="33">stats<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">.<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">total_written<pos:position pos:line="5" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="6" pos:column="25">big_num<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name><name pos:line="6" pos:column="33">stats<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">total_read<pos:position pos:line="6" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="7" pos:column="25">big_num<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name><name pos:line="7" pos:column="33">stats<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">total_size<pos:position pos:line="7" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then> <elseif pos:line="8" pos:column="11">else <if pos:line="8" pos:column="16">if <condition pos:line="8" pos:column="19">(<expr><name pos:line="8" pos:column="20">am_server<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">!=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">2<pos:position pos:line="8" pos:column="34"/></literal></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35"> <block pos:line="8" pos:column="36">{
		<decl_stmt><decl><type><specifier pos:line="9" pos:column="17">const<pos:position pos:line="9" pos:column="22"/></specifier> <name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">name<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>

		<expr_stmt><expr><name pos:line="11" pos:column="17">name<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <call><name pos:line="11" pos:column="24">rerr_name<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">code<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">name<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">name<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <literal type="string" pos:line="13" pos:column="32">"unexplained error"<pos:position pos:line="13" pos:column="51"/></literal></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="15" pos:column="17">/* VANISHED is not an error, only a warning */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">code<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">==<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">RERR_VANISHED<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">rprintf<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">FWARNING<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="43">"rsync warning: %s (code %d) at %s(%d) [%s=%s]\n"<pos:position pos:line="17" pos:column="92"/></literal></expr></argument>,
				<argument><expr><name pos:line="18" pos:column="33">name<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">code<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">file<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">line<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="57">who_am_i<pos:position pos:line="18" pos:column="65"/></name><argument_list pos:line="18" pos:column="65">()<pos:position pos:line="18" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="69">RSYNC_VERSION<pos:position pos:line="18" pos:column="82"/></name></expr></argument>)<pos:position pos:line="18" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then> <else pos:line="19" pos:column="19">else <block pos:line="19" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">rprintf<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">FERROR<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="41">"rsync error: %s (code %d) at %s(%d) [%s=%s]\n"<pos:position pos:line="20" pos:column="88"/></literal></expr></argument>,
				<argument><expr><name pos:line="21" pos:column="33">name<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="39">code<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">file<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">line<pos:position pos:line="21" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="57">who_am_i<pos:position pos:line="21" pos:column="65"/></name><argument_list pos:line="21" pos:column="65">()<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="69">RSYNC_VERSION<pos:position pos:line="21" pos:column="82"/></name></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></else></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_472_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">configLine<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">poptContext<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">con<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">line<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">int<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">nameLength<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><call><name pos:line="2" pos:column="22">strlen<pos:position pos:line="2" pos:column="28"/></name><argument_list pos:line="2" pos:column="28">(<argument><expr><name><name pos:line="2" pos:column="29">con<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">-&gt;<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="34">appName<pos:position pos:line="2" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="2" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type> <name pos:line="3" pos:column="12">opt<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">poptAlias<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">alias<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type> <name pos:line="5" pos:column="12">entryType<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type> <name pos:line="6" pos:column="12">longName<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">shortName<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="char" pos:line="7" pos:column="22">'\0'<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">strncmp<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">line<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="23">con<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">appName<pos:position pos:line="9" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">nameLength<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block type="pseudo"><return pos:line="9" pos:column="50">return;<pos:position pos:line="9" pos:column="57"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">line<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">+=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">nameLength<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">line<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">||<pos:position pos:line="11" pos:column="18"/></operator> <operator pos:line="11" pos:column="19">!<pos:position pos:line="11" pos:column="20"/></operator><call><name pos:line="11" pos:column="20">isspace<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><operator pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">line<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35"> <block type="pseudo"><return pos:line="11" pos:column="36">return;<pos:position pos:line="11" pos:column="43"/></return></block></then></if>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">*<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">line<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&amp;&amp;<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="21">isspace<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><operator pos:line="12" pos:column="29">*<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">line<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="36"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="37">line<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">++<pos:position pos:line="12" pos:column="43"/></operator></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></while>
    <expr_stmt><expr><name pos:line="13" pos:column="5">entryType<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">line<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>

    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">!<pos:position pos:line="15" pos:column="13"/></operator><operator pos:line="15" pos:column="13">*<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">line<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">||<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">!<pos:position pos:line="15" pos:column="23"/></operator><call><name pos:line="15" pos:column="23">isspace<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><operator pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">line<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="38"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="39">line<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">++<pos:position pos:line="15" pos:column="45"/></operator></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt></block></while>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">line<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">++<pos:position pos:line="16" pos:column="12"/></operator> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="char" pos:line="16" pos:column="15">'\0'<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><operator pos:line="17" pos:column="12">*<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">line<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&amp;&amp;<pos:position pos:line="17" pos:column="28"/></operator> <call><name pos:line="17" pos:column="21">isspace<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">line<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="36"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="37">line<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">++<pos:position pos:line="17" pos:column="43"/></operator></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt></block></while>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><operator pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">line<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block type="pseudo"><return pos:line="18" pos:column="17">return;<pos:position pos:line="18" pos:column="24"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="19" pos:column="5">opt<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <name pos:line="19" pos:column="11">line<pos:position pos:line="19" pos:column="15"/></name></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt>

    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><operator pos:line="21" pos:column="12">!<pos:position pos:line="21" pos:column="13"/></operator><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">line<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">||<pos:position pos:line="21" pos:column="21"/></operator> <operator pos:line="21" pos:column="22">!<pos:position pos:line="21" pos:column="23"/></operator><call><name pos:line="21" pos:column="23">isspace<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">*<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">line<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="38"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="39">line<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">++<pos:position pos:line="21" pos:column="45"/></operator></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt></block></while>
    <expr_stmt><expr><operator pos:line="22" pos:column="5">*<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">line<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">++<pos:position pos:line="22" pos:column="12"/></operator> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="char" pos:line="22" pos:column="15">'\0'<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">*<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">line<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">&amp;&amp;<pos:position pos:line="23" pos:column="28"/></operator> <call><name pos:line="23" pos:column="21">isspace<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><operator pos:line="23" pos:column="29">*<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">line<pos:position pos:line="23" pos:column="34"/></name></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="36"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="37">line<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">++<pos:position pos:line="23" pos:column="43"/></operator></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt></block></while>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><operator pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">line<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16"> <block type="pseudo"><return pos:line="24" pos:column="17">return;<pos:position pos:line="24" pos:column="24"/></return></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">opt<pos:position pos:line="26" pos:column="12"/></name><index pos:line="26" pos:column="12">[<expr><literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr>]<pos:position pos:line="26" pos:column="15"/></index></name> <operator pos:line="26" pos:column="16">==<pos:position pos:line="26" pos:column="18"/></operator> <literal type="char" pos:line="26" pos:column="19">'-'<pos:position pos:line="26" pos:column="22"/></literal> <operator pos:line="26" pos:column="23">&amp;&amp;<pos:position pos:line="26" pos:column="33"/></operator> <name><name pos:line="26" pos:column="26">opt<pos:position pos:line="26" pos:column="29"/></name><index pos:line="26" pos:column="29">[<expr><literal type="number" pos:line="26" pos:column="30">1<pos:position pos:line="26" pos:column="31"/></literal></expr>]<pos:position pos:line="26" pos:column="32"/></index></name> <operator pos:line="26" pos:column="33">==<pos:position pos:line="26" pos:column="35"/></operator> <literal type="char" pos:line="26" pos:column="36">'-'<pos:position pos:line="26" pos:column="39"/></literal></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40">
	<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">longName<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">opt<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">+<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">2<pos:position pos:line="27" pos:column="27"/></literal></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt></block></then>
    <elseif pos:line="28" pos:column="5">else <if pos:line="28" pos:column="10">if <condition pos:line="28" pos:column="13">(<expr><name><name pos:line="28" pos:column="14">opt<pos:position pos:line="28" pos:column="17"/></name><index pos:line="28" pos:column="17">[<expr><literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr>]<pos:position pos:line="28" pos:column="20"/></index></name> <operator pos:line="28" pos:column="21">==<pos:position pos:line="28" pos:column="23"/></operator> <literal type="char" pos:line="28" pos:column="24">'-'<pos:position pos:line="28" pos:column="27"/></literal> <operator pos:line="28" pos:column="28">&amp;&amp;<pos:position pos:line="28" pos:column="38"/></operator> <operator pos:line="28" pos:column="31">!<pos:position pos:line="28" pos:column="32"/></operator><name><name pos:line="28" pos:column="32">opt<pos:position pos:line="28" pos:column="35"/></name><index pos:line="28" pos:column="35">[<expr><literal type="number" pos:line="28" pos:column="36">2<pos:position pos:line="28" pos:column="37"/></literal></expr>]<pos:position pos:line="28" pos:column="38"/></index></name></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39">
	<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="9">shortName<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name><name pos:line="29" pos:column="21">opt<pos:position pos:line="29" pos:column="24"/></name><index pos:line="29" pos:column="24">[<expr><literal type="number" pos:line="29" pos:column="25">1<pos:position pos:line="29" pos:column="26"/></literal></expr>]<pos:position pos:line="29" pos:column="27"/></index></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><call><name pos:line="31" pos:column="10">strcmp<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">entryType<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="28">"alias"<pos:position pos:line="31" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37"> <block pos:line="31" pos:column="38">{
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">poptParseArgvString<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><name pos:line="32" pos:column="33">line<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="39">&amp;<pos:position pos:line="32" pos:column="44"/></operator><name><name pos:line="32" pos:column="40">alias<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">.<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="46">argc<pos:position pos:line="32" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="52">&amp;<pos:position pos:line="32" pos:column="57"/></operator><name><name pos:line="32" pos:column="53">alias<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">.<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="59">argv<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="65"/></condition><then pos:line="32" pos:column="65"> <block type="pseudo"><return pos:line="32" pos:column="66">return;<pos:position pos:line="32" pos:column="73"/></return></block></then></if>
	<expr_stmt><expr><name><name pos:line="33" pos:column="9">alias<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">.<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">longName<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">longName<pos:position pos:line="33" pos:column="34"/></name></expr><operator pos:line="33" pos:column="34">,<pos:position pos:line="33" pos:column="35"/></operator> <expr><name><name pos:line="33" pos:column="36">alias<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">.<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="42">shortName<pos:position pos:line="33" pos:column="51"/></name></name> <operator pos:line="33" pos:column="52">=<pos:position pos:line="33" pos:column="53"/></operator> <name pos:line="33" pos:column="54">shortName<pos:position pos:line="33" pos:column="63"/></name></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">poptAddAlias<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">con<pos:position pos:line="34" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="27">alias<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="34">0<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if <condition pos:line="35" pos:column="15">(<expr><operator pos:line="35" pos:column="16">!<pos:position pos:line="35" pos:column="17"/></operator><call><name pos:line="35" pos:column="17">strcmp<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">entryType<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"exec"<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <block pos:line="35" pos:column="44">{
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">con<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">execs<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <call><name pos:line="36" pos:column="22">realloc<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">con<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">-&gt;<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="35">execs<pos:position pos:line="36" pos:column="40"/></name></name></expr></argument>,
				<argument><expr><sizeof pos:line="37" pos:column="33">sizeof<argument_list pos:line="37" pos:column="39">(<argument><expr><operator pos:line="37" pos:column="40">*<pos:position pos:line="37" pos:column="41"/></operator><name><name pos:line="37" pos:column="41">con<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">execs<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></sizeof> <operator pos:line="37" pos:column="53">*<pos:position pos:line="37" pos:column="54"/></operator> <operator pos:line="37" pos:column="55">(<pos:position pos:line="37" pos:column="56"/></operator><name><name pos:line="37" pos:column="56">con<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">-&gt;<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="61">numExecs<pos:position pos:line="37" pos:column="69"/></name></name> <operator pos:line="37" pos:column="70">+<pos:position pos:line="37" pos:column="71"/></operator> <literal type="number" pos:line="37" pos:column="72">1<pos:position pos:line="37" pos:column="73"/></literal><operator pos:line="37" pos:column="73">)<pos:position pos:line="37" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">longName<pos:position pos:line="38" pos:column="21"/></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="13">con<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">execs<pos:position pos:line="39" pos:column="23"/></name><index pos:line="39" pos:column="23">[<expr><name><name pos:line="39" pos:column="24">con<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">numExecs<pos:position pos:line="39" pos:column="37"/></name></name></expr>]<pos:position pos:line="39" pos:column="38"/></index></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">longName<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">=<pos:position pos:line="39" pos:column="49"/></operator> <call><name pos:line="39" pos:column="50">xstrdup<pos:position pos:line="39" pos:column="57"/></name><argument_list pos:line="39" pos:column="57">(<argument><expr><name pos:line="39" pos:column="58">longName<pos:position pos:line="39" pos:column="66"/></name></expr></argument>)<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="68"/></expr_stmt></block></then>
	<else pos:line="40" pos:column="9">else
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="13">con<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">execs<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><name><name pos:line="41" pos:column="24">con<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">numExecs<pos:position pos:line="41" pos:column="37"/></name></name></expr>]<pos:position pos:line="41" pos:column="38"/></index></name><operator pos:line="41" pos:column="38">.<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">longName<pos:position pos:line="41" pos:column="47"/></name> <operator pos:line="41" pos:column="48">=<pos:position pos:line="41" pos:column="49"/></operator> <name pos:line="41" pos:column="50">NULL<pos:position pos:line="41" pos:column="54"/></name></expr>;<pos:position pos:line="41" pos:column="55"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name><name pos:line="43" pos:column="9">con<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">execs<pos:position pos:line="43" pos:column="19"/></name><index pos:line="43" pos:column="19">[<expr><name><name pos:line="43" pos:column="20">con<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">numExecs<pos:position pos:line="43" pos:column="33"/></name></name></expr>]<pos:position pos:line="43" pos:column="34"/></index></name><operator pos:line="43" pos:column="34">.<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">shortName<pos:position pos:line="43" pos:column="44"/></name> <operator pos:line="43" pos:column="45">=<pos:position pos:line="43" pos:column="46"/></operator> <name pos:line="43" pos:column="47">shortName<pos:position pos:line="43" pos:column="56"/></name></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">con<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">execs<pos:position pos:line="44" pos:column="19"/></name><index pos:line="44" pos:column="19">[<expr><name><name pos:line="44" pos:column="20">con<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">numExecs<pos:position pos:line="44" pos:column="33"/></name></name></expr>]<pos:position pos:line="44" pos:column="34"/></index></name><operator pos:line="44" pos:column="34">.<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">script<pos:position pos:line="44" pos:column="41"/></name> <operator pos:line="44" pos:column="42">=<pos:position pos:line="44" pos:column="43"/></operator> <call><name pos:line="44" pos:column="44">xstrdup<pos:position pos:line="44" pos:column="51"/></name><argument_list pos:line="44" pos:column="51">(<argument><expr><name pos:line="44" pos:column="52">line<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">con<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">numExecs<pos:position pos:line="46" pos:column="22"/></name></name><operator pos:line="46" pos:column="22">++<pos:position pos:line="46" pos:column="24"/></operator></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

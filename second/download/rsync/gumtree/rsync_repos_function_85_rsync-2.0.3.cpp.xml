<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_85_rsync-2.0.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">simple_send_token<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">f<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">token<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
			      <parameter><decl><type><name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">map_struct<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">buf<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">offset<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="65">int<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">n<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">n<pos:position pos:line="4" pos:column="8"/></name> <operator pos:line="4" pos:column="9">&gt;<pos:position pos:line="4" pos:column="13"/></operator> <literal type="number" pos:line="4" pos:column="11">0<pos:position pos:line="4" pos:column="12"/></literal></expr>)<pos:position pos:line="4" pos:column="13"/></condition><then pos:line="4" pos:column="13"> <block pos:line="4" pos:column="14">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">l<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><name pos:line="6" pos:column="12">l<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">&lt;<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="16">n<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition> <block pos:line="6" pos:column="19">{
      <decl_stmt><decl><type><name pos:line="7" pos:column="7">int<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">n1<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><call><name pos:line="7" pos:column="16">MIN<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">CHUNK_SIZE<pos:position pos:line="7" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="31">n<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">l<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="8" pos:column="7">write_int<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">f<pos:position pos:line="8" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="19">n1<pos:position pos:line="8" pos:column="21"/></name></expr></argument>)<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">write_buf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">f<pos:position pos:line="9" pos:column="18"/></name></expr></argument>,<argument><expr><call><name pos:line="9" pos:column="19">map_ptr<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">buf<pos:position pos:line="9" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="31">offset<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">+<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">l<pos:position pos:line="9" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="40">n1<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="9" pos:column="44">n1<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="10" pos:column="7">l<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">+=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">n1<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></while>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">write_int<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">f<pos:position pos:line="13" pos:column="14"/></name></expr></argument>,<argument><expr><operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">token<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">+<pos:position pos:line="13" pos:column="23"/></operator><literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_798_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sys_acl_set_file<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">name<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">SMB_ACL_TYPE_T<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">type<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">SMB_ACL_T<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">acl_d<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">stat<pos:position pos:line="3" pos:column="20"/></name></name></type>	<name pos:line="3" pos:column="25">s<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">acl<pos:position pos:line="4" pos:column="19"/></name></name>	<modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">acl_p<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>		<name pos:line="5" pos:column="25">acl_count<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">acl<pos:position pos:line="6" pos:column="19"/></name></name>	<modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">acl_buf<pos:position pos:line="6" pos:column="33"/></name>	<init pos:line="6" pos:column="41">= <expr><name pos:line="6" pos:column="43">NULL<pos:position pos:line="6" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>		<name pos:line="7" pos:column="25">ret<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

	<if pos:line="9" pos:column="9">if<condition pos:line="9" pos:column="11">(<expr><call><name pos:line="9" pos:column="12">hpux_acl_call_presence<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">()<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">==<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">False<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
		<comment type="block" pos:line="10" pos:column="17">/* Looks like we don't have the acl() system call on HPUX. 
		 * May be the system doesn't have the latest version of JFS.
		 */</comment>
		<expr_stmt><expr><name pos:line="13" pos:column="17">errno<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">ENOSYS<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return> 
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">type<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">!=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">SMB_ACL_TYPE_ACCESS<pos:position pos:line="17" pos:column="40"/></name> <operator pos:line="17" pos:column="41">&amp;&amp;<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="44">type<pos:position pos:line="17" pos:column="48"/></name> <operator pos:line="17" pos:column="49">!=<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="52">SMB_ACL_TYPE_DEFAULT<pos:position pos:line="17" pos:column="72"/></name></expr>)<pos:position pos:line="17" pos:column="73"/></condition><then pos:line="17" pos:column="73"> <block pos:line="17" pos:column="74">{
		<expr_stmt><expr><name pos:line="18" pos:column="17">errno<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="25">EINVAL<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">acl_sort<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">acl_d<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call> <operator pos:line="22" pos:column="29">!=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">-<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">acl_p<pos:position pos:line="26" pos:column="14"/></name>		<operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator><name><name pos:line="26" pos:column="28">acl_d<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">acl<pos:position pos:line="26" pos:column="38"/></name><index pos:line="26" pos:column="38">[<expr><literal type="number" pos:line="26" pos:column="39">0<pos:position pos:line="26" pos:column="40"/></literal></expr>]<pos:position pos:line="26" pos:column="41"/></index></name></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">acl_count<pos:position pos:line="27" pos:column="18"/></name>	<operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">acl_d<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">count<pos:position pos:line="27" pos:column="39"/></name></name></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>

	<comment type="block" pos:line="29" pos:column="9">/*
	 * if it's a directory there is extra work to do
	 * since the acl() system call will replace both
	 * the access ACLs and the default ACLs (if any)
	 */</comment>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">stat<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">name<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">s<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call> <operator pos:line="34" pos:column="28">!=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="31">0<pos:position pos:line="34" pos:column="32"/></literal></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33"> <block pos:line="34" pos:column="34">{
		<return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">-<pos:position pos:line="35" pos:column="25"/></operator><literal type="number" pos:line="35" pos:column="25">1<pos:position pos:line="35" pos:column="26"/></literal></expr>;<pos:position pos:line="35" pos:column="27"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">S_ISDIR<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name><name pos:line="37" pos:column="21">s<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">.<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="23">st_mode<pos:position pos:line="37" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="32"/></condition><then pos:line="37" pos:column="32"> <block pos:line="37" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="38" pos:column="17">SMB_ACL_T<pos:position pos:line="38" pos:column="26"/></name></type>	<name pos:line="38" pos:column="33">acc_acl<pos:position pos:line="38" pos:column="40"/></name></decl>;<pos:position pos:line="38" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">SMB_ACL_T<pos:position pos:line="39" pos:column="26"/></name></type>	<name pos:line="39" pos:column="33">def_acl<pos:position pos:line="39" pos:column="40"/></name></decl>;<pos:position pos:line="39" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">SMB_ACL_T<pos:position pos:line="40" pos:column="26"/></name></type>	<name pos:line="40" pos:column="33">tmp_acl<pos:position pos:line="40" pos:column="40"/></name></decl>;<pos:position pos:line="40" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="41" pos:column="17">int<pos:position pos:line="41" pos:column="20"/></name></type>		<name pos:line="41" pos:column="33">i<pos:position pos:line="41" pos:column="34"/></name></decl>;<pos:position pos:line="41" pos:column="35"/></decl_stmt>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">type<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">==<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="29">SMB_ACL_TYPE_ACCESS<pos:position pos:line="43" pos:column="48"/></name></expr>)<pos:position pos:line="43" pos:column="49"/></condition><then pos:line="43" pos:column="49"> <block pos:line="43" pos:column="50">{
			<expr_stmt><expr><name pos:line="44" pos:column="25">acc_acl<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">=<pos:position pos:line="44" pos:column="34"/></operator> <name pos:line="44" pos:column="35">acl_d<pos:position pos:line="44" pos:column="40"/></name></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">def_acl<pos:position pos:line="45" pos:column="32"/></name> <operator pos:line="45" pos:column="33">=<pos:position pos:line="45" pos:column="34"/></operator> <name pos:line="45" pos:column="35">tmp_acl<pos:position pos:line="45" pos:column="42"/></name> <operator pos:line="45" pos:column="43">=<pos:position pos:line="45" pos:column="44"/></operator> <call><name pos:line="45" pos:column="45">sys_acl_get_file<pos:position pos:line="45" pos:column="61"/></name><argument_list pos:line="45" pos:column="61">(<argument><expr><name pos:line="45" pos:column="62">name<pos:position pos:line="45" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="68">SMB_ACL_TYPE_DEFAULT<pos:position pos:line="45" pos:column="88"/></name></expr></argument>)<pos:position pos:line="45" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="90"/></expr_stmt>

		}<pos:position pos:line="47" pos:column="18"/></block></then> <else pos:line="47" pos:column="19">else <block pos:line="47" pos:column="24">{
			<expr_stmt><expr><name pos:line="48" pos:column="25">def_acl<pos:position pos:line="48" pos:column="32"/></name> <operator pos:line="48" pos:column="33">=<pos:position pos:line="48" pos:column="34"/></operator> <name pos:line="48" pos:column="35">acl_d<pos:position pos:line="48" pos:column="40"/></name></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">acc_acl<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">=<pos:position pos:line="49" pos:column="34"/></operator> <name pos:line="49" pos:column="35">tmp_acl<pos:position pos:line="49" pos:column="42"/></name> <operator pos:line="49" pos:column="43">=<pos:position pos:line="49" pos:column="44"/></operator> <call><name pos:line="49" pos:column="45">sys_acl_get_file<pos:position pos:line="49" pos:column="61"/></name><argument_list pos:line="49" pos:column="61">(<argument><expr><name pos:line="49" pos:column="62">name<pos:position pos:line="49" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="68">SMB_ACL_TYPE_ACCESS<pos:position pos:line="49" pos:column="87"/></name></expr></argument>)<pos:position pos:line="49" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="89"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></else></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">tmp_acl<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">==<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">NULL<pos:position pos:line="52" pos:column="36"/></name></expr>)<pos:position pos:line="52" pos:column="37"/></condition><then pos:line="52" pos:column="37"> <block pos:line="52" pos:column="38">{
			<return pos:line="53" pos:column="25">return <expr><operator pos:line="53" pos:column="32">-<pos:position pos:line="53" pos:column="33"/></operator><literal type="number" pos:line="53" pos:column="33">1<pos:position pos:line="53" pos:column="34"/></literal></expr>;<pos:position pos:line="53" pos:column="35"/></return>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="56" pos:column="17">/*
		 * allocate a temporary buffer for the complete ACL
		 */</comment>
		<expr_stmt><expr><name pos:line="59" pos:column="17">acl_count<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <name><name pos:line="59" pos:column="29">acc_acl<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">-&gt;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="38">count<pos:position pos:line="59" pos:column="43"/></name></name> <operator pos:line="59" pos:column="44">+<pos:position pos:line="59" pos:column="45"/></operator> <name><name pos:line="59" pos:column="46">def_acl<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">-&gt;<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="55">count<pos:position pos:line="59" pos:column="60"/></name></name></expr>;<pos:position pos:line="59" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="60" pos:column="17">acl_p<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <name pos:line="60" pos:column="25">acl_buf<pos:position pos:line="60" pos:column="32"/></name> <operator pos:line="60" pos:column="33">=<pos:position pos:line="60" pos:column="34"/></operator> <call><name pos:line="60" pos:column="35">SMB_MALLOC_ARRAY<pos:position pos:line="60" pos:column="51"/></name><argument_list pos:line="60" pos:column="51">(<argument><expr pos:line="60" pos:column="52">struct <name pos:line="60" pos:column="59">acl<pos:position pos:line="60" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="64">acl_count<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">acl_buf<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">==<pos:position pos:line="62" pos:column="31"/></operator> <name pos:line="62" pos:column="32">NULL<pos:position pos:line="62" pos:column="36"/></name></expr>)<pos:position pos:line="62" pos:column="37"/></condition><then pos:line="62" pos:column="37"> <block pos:line="62" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">sys_acl_free_acl<pos:position pos:line="63" pos:column="41"/></name><argument_list pos:line="63" pos:column="41">(<argument><expr><name pos:line="63" pos:column="42">tmp_acl<pos:position pos:line="63" pos:column="49"/></name></expr></argument>)<pos:position pos:line="63" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="64" pos:column="25">errno<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">=<pos:position pos:line="64" pos:column="32"/></operator> <name pos:line="64" pos:column="33">ENOMEM<pos:position pos:line="64" pos:column="39"/></name></expr>;<pos:position pos:line="64" pos:column="40"/></expr_stmt>
			<return pos:line="65" pos:column="25">return <expr><operator pos:line="65" pos:column="32">-<pos:position pos:line="65" pos:column="33"/></operator><literal type="number" pos:line="65" pos:column="33">1<pos:position pos:line="65" pos:column="34"/></literal></expr>;<pos:position pos:line="65" pos:column="35"/></return>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="68" pos:column="17">/*
		 * copy the access control and default entries into the buffer
		 */</comment>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">memcpy<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><operator pos:line="71" pos:column="24">&amp;<pos:position pos:line="71" pos:column="29"/></operator><name><name pos:line="71" pos:column="25">acl_buf<pos:position pos:line="71" pos:column="32"/></name><index pos:line="71" pos:column="32">[<expr><literal type="number" pos:line="71" pos:column="33">0<pos:position pos:line="71" pos:column="34"/></literal></expr>]<pos:position pos:line="71" pos:column="35"/></index></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="37">&amp;<pos:position pos:line="71" pos:column="42"/></operator><name><name pos:line="71" pos:column="38">acc_acl<pos:position pos:line="71" pos:column="45"/></name><operator pos:line="71" pos:column="45">-&gt;<pos:position pos:line="71" pos:column="50"/></operator><name pos:line="71" pos:column="47">acl<pos:position pos:line="71" pos:column="50"/></name><index pos:line="71" pos:column="50">[<expr><literal type="number" pos:line="71" pos:column="51">0<pos:position pos:line="71" pos:column="52"/></literal></expr>]<pos:position pos:line="71" pos:column="53"/></index></name></expr></argument>,
			<argument><expr><name><name pos:line="72" pos:column="25">acc_acl<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">-&gt;<pos:position pos:line="72" pos:column="37"/></operator><name pos:line="72" pos:column="34">count<pos:position pos:line="72" pos:column="39"/></name></name> <operator pos:line="72" pos:column="40">*<pos:position pos:line="72" pos:column="41"/></operator> <sizeof pos:line="72" pos:column="42">sizeof<argument_list pos:line="72" pos:column="48">(<argument><expr><name><name pos:line="72" pos:column="49">acl_buf<pos:position pos:line="72" pos:column="56"/></name><index pos:line="72" pos:column="56">[<expr><literal type="number" pos:line="72" pos:column="57">0<pos:position pos:line="72" pos:column="58"/></literal></expr>]<pos:position pos:line="72" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="62"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="74" pos:column="17">memcpy<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><operator pos:line="74" pos:column="24">&amp;<pos:position pos:line="74" pos:column="29"/></operator><name><name pos:line="74" pos:column="25">acl_buf<pos:position pos:line="74" pos:column="32"/></name><index pos:line="74" pos:column="32">[<expr><name><name pos:line="74" pos:column="33">acc_acl<pos:position pos:line="74" pos:column="40"/></name><operator pos:line="74" pos:column="40">-&gt;<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="42">count<pos:position pos:line="74" pos:column="47"/></name></name></expr>]<pos:position pos:line="74" pos:column="48"/></index></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="50">&amp;<pos:position pos:line="74" pos:column="55"/></operator><name><name pos:line="74" pos:column="51">def_acl<pos:position pos:line="74" pos:column="58"/></name><operator pos:line="74" pos:column="58">-&gt;<pos:position pos:line="74" pos:column="63"/></operator><name pos:line="74" pos:column="60">acl<pos:position pos:line="74" pos:column="63"/></name><index pos:line="74" pos:column="63">[<expr><literal type="number" pos:line="74" pos:column="64">0<pos:position pos:line="74" pos:column="65"/></literal></expr>]<pos:position pos:line="74" pos:column="66"/></index></name></expr></argument>,
			<argument><expr><name><name pos:line="75" pos:column="25">def_acl<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">count<pos:position pos:line="75" pos:column="39"/></name></name> <operator pos:line="75" pos:column="40">*<pos:position pos:line="75" pos:column="41"/></operator> <sizeof pos:line="75" pos:column="42">sizeof<argument_list pos:line="75" pos:column="48">(<argument><expr><name><name pos:line="75" pos:column="49">acl_buf<pos:position pos:line="75" pos:column="56"/></name><index pos:line="75" pos:column="56">[<expr><literal type="number" pos:line="75" pos:column="57">0<pos:position pos:line="75" pos:column="58"/></literal></expr>]<pos:position pos:line="75" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="75" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="62"/></expr_stmt>

		<comment type="block" pos:line="77" pos:column="17">/*
		 * set the ACL_DEFAULT flag on the default entries
		 */</comment>
		<for pos:line="80" pos:column="17">for <control pos:line="80" pos:column="21">(<init><expr><name pos:line="80" pos:column="22">i<pos:position pos:line="80" pos:column="23"/></name> <operator pos:line="80" pos:column="24">=<pos:position pos:line="80" pos:column="25"/></operator> <name><name pos:line="80" pos:column="26">acc_acl<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">-&gt;<pos:position pos:line="80" pos:column="38"/></operator><name pos:line="80" pos:column="35">count<pos:position pos:line="80" pos:column="40"/></name></name></expr>;<pos:position pos:line="80" pos:column="41"/></init> <condition><expr><name pos:line="80" pos:column="42">i<pos:position pos:line="80" pos:column="43"/></name> <operator pos:line="80" pos:column="44">&lt;<pos:position pos:line="80" pos:column="48"/></operator> <name pos:line="80" pos:column="46">acl_count<pos:position pos:line="80" pos:column="55"/></name></expr>;<pos:position pos:line="80" pos:column="56"/></condition> <incr><expr><name pos:line="80" pos:column="57">i<pos:position pos:line="80" pos:column="58"/></name><operator pos:line="80" pos:column="58">++<pos:position pos:line="80" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="61"/></control> <block pos:line="80" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="81" pos:column="25">acl_buf<pos:position pos:line="81" pos:column="32"/></name><index pos:line="81" pos:column="32">[<expr><name pos:line="81" pos:column="33">i<pos:position pos:line="81" pos:column="34"/></name></expr>]<pos:position pos:line="81" pos:column="35"/></index></name><operator pos:line="81" pos:column="35">.<pos:position pos:line="81" pos:column="36"/></operator><name pos:line="81" pos:column="36">a_type<pos:position pos:line="81" pos:column="42"/></name> <operator pos:line="81" pos:column="43">|=<pos:position pos:line="81" pos:column="45"/></operator> <name pos:line="81" pos:column="46">ACL_DEFAULT<pos:position pos:line="81" pos:column="57"/></name></expr>;<pos:position pos:line="81" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="82" pos:column="18"/></block></for>

		<expr_stmt><expr><call><name pos:line="84" pos:column="17">sys_acl_free_acl<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name pos:line="84" pos:column="34">tmp_acl<pos:position pos:line="84" pos:column="41"/></name></expr></argument>)<pos:position pos:line="84" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="43"/></expr_stmt>

	}<pos:position pos:line="86" pos:column="10"/></block></then> <elseif pos:line="86" pos:column="11">else <if pos:line="86" pos:column="16">if <condition pos:line="86" pos:column="19">(<expr><name pos:line="86" pos:column="20">type<pos:position pos:line="86" pos:column="24"/></name> <operator pos:line="86" pos:column="25">!=<pos:position pos:line="86" pos:column="27"/></operator> <name pos:line="86" pos:column="28">SMB_ACL_TYPE_ACCESS<pos:position pos:line="86" pos:column="47"/></name></expr>)<pos:position pos:line="86" pos:column="48"/></condition><then pos:line="86" pos:column="48"> <block pos:line="86" pos:column="49">{
		<expr_stmt><expr><name pos:line="87" pos:column="17">errno<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">=<pos:position pos:line="87" pos:column="24"/></operator> <name pos:line="87" pos:column="25">EINVAL<pos:position pos:line="87" pos:column="31"/></name></expr>;<pos:position pos:line="87" pos:column="32"/></expr_stmt>
		<return pos:line="88" pos:column="17">return <expr><operator pos:line="88" pos:column="24">-<pos:position pos:line="88" pos:column="25"/></operator><literal type="number" pos:line="88" pos:column="25">1<pos:position pos:line="88" pos:column="26"/></literal></expr>;<pos:position pos:line="88" pos:column="27"/></return>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="91" pos:column="9">ret<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <call><name pos:line="91" pos:column="15">acl<pos:position pos:line="91" pos:column="18"/></name><argument_list pos:line="91" pos:column="18">(<argument><expr><name pos:line="91" pos:column="19">name<pos:position pos:line="91" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="25">ACL_SET<pos:position pos:line="91" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="34">acl_count<pos:position pos:line="91" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="45">acl_p<pos:position pos:line="91" pos:column="50"/></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="52"/></expr_stmt>

	<if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">acl_buf<pos:position pos:line="93" pos:column="20"/></name></expr>)<pos:position pos:line="93" pos:column="21"/></condition><then pos:line="93" pos:column="21"> <block pos:line="93" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="94" pos:column="17">free<pos:position pos:line="94" pos:column="21"/></name><argument_list pos:line="94" pos:column="21">(<argument><expr><name pos:line="94" pos:column="22">acl_buf<pos:position pos:line="94" pos:column="29"/></name></expr></argument>)<pos:position pos:line="94" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if>

	<return pos:line="97" pos:column="9">return <expr><name pos:line="97" pos:column="16">ret<pos:position pos:line="97" pos:column="19"/></name></expr>;<pos:position pos:line="97" pos:column="20"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

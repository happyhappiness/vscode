<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_699_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">block_state<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">deflate_fast<pos:position pos:line="1" pos:column="31"/></name><argument_list pos:line="1" pos:column="31">(<argument><expr><name pos:line="1" pos:column="32">s<pos:position pos:line="1" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="35">flush<pos:position pos:line="1" pos:column="40"/></name></expr></argument>)<pos:position pos:line="1" pos:column="41"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">flush<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">IPos<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">hash_head<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>       <comment type="block" pos:line="5" pos:column="27">/* head of the hash chain */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">bflush<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>           <comment type="block" pos:line="6" pos:column="27">/* set if current block must be flushed */</comment>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init pos:line="8" pos:column="10">;<pos:position pos:line="8" pos:column="11"/></init><condition pos:line="8" pos:column="11">;<pos:position pos:line="8" pos:column="12"/></condition><incr/>)<pos:position pos:line="8" pos:column="13"/></control> <block pos:line="8" pos:column="14">{
        <comment type="block" pos:line="9" pos:column="9">/* Make sure that we always have enough lookahead, except
         * at the end of the input file. We need MAX_MATCH bytes
         * for the next match, plus MIN_MATCH bytes to insert the
         * string following the next match.
         */</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">s<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">lookahead<pos:position pos:line="14" pos:column="25"/></name></name> <operator pos:line="14" pos:column="26">&lt;<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="28">MIN_LOOKAHEAD<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">fill_window<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">s<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name><name pos:line="16" pos:column="17">s<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">lookahead<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">&lt;<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="32">MIN_LOOKAHEAD<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">&amp;&amp;<pos:position pos:line="16" pos:column="56"/></operator> <name pos:line="16" pos:column="49">flush<pos:position pos:line="16" pos:column="54"/></name> <operator pos:line="16" pos:column="55">==<pos:position pos:line="16" pos:column="57"/></operator> <name pos:line="16" pos:column="58">Z_NO_FLUSH<pos:position pos:line="16" pos:column="68"/></name></expr>)<pos:position pos:line="16" pos:column="69"/></condition><then pos:line="16" pos:column="69"> <block pos:line="16" pos:column="70">{
                <return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">need_more<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name><name pos:line="19" pos:column="17">s<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">lookahead<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">==<pos:position pos:line="19" pos:column="32"/></operator> <literal type="number" pos:line="19" pos:column="33">0<pos:position pos:line="19" pos:column="34"/></literal></expr>)<pos:position pos:line="19" pos:column="35"/></condition><then pos:line="19" pos:column="35"> <block type="pseudo"><break pos:line="19" pos:column="36">break;<pos:position pos:line="19" pos:column="42"/></break></block></then></if> <comment type="block" pos:line="19" pos:column="43">/* flush the current block */</comment>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="22" pos:column="9">/* Insert the string window[strstart .. strstart+2] in the
         * dictionary, and set hash_head to the head of the hash chain:
         */</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">hash_head<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <name pos:line="25" pos:column="21">NIL<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">s<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">lookahead<pos:position pos:line="26" pos:column="25"/></name></name> <operator pos:line="26" pos:column="26">&gt;=<pos:position pos:line="26" pos:column="31"/></operator> <name pos:line="26" pos:column="29">MIN_MATCH<pos:position pos:line="26" pos:column="38"/></name></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <block pos:line="26" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">INSERT_STRING<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">(<argument><expr><name pos:line="27" pos:column="27">s<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="30">s<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">strstart<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="43">hash_head<pos:position pos:line="27" pos:column="52"/></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">flush<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">==<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">Z_INSERT_ONLY<pos:position pos:line="30" pos:column="35"/></name></expr>)<pos:position pos:line="30" pos:column="36"/></condition><then pos:line="30" pos:column="36"> <block pos:line="30" pos:column="37">{
	    <expr_stmt><expr><name><name pos:line="31" pos:column="13">s<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">strstart<pos:position pos:line="31" pos:column="24"/></name></name><operator pos:line="31" pos:column="24">++<pos:position pos:line="31" pos:column="26"/></operator></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
	    <expr_stmt><expr><name><name pos:line="32" pos:column="13">s<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">lookahead<pos:position pos:line="32" pos:column="25"/></name></name><operator pos:line="32" pos:column="25">--<pos:position pos:line="32" pos:column="27"/></operator></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
	    <continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="36" pos:column="9">/* Find the longest match, discarding those &lt;= prev_length.
         * At this point we have always match_length &lt; MIN_MATCH
         */</comment>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">hash_head<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">!=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">NIL<pos:position pos:line="39" pos:column="29"/></name> <operator pos:line="39" pos:column="30">&amp;&amp;<pos:position pos:line="39" pos:column="40"/></operator> <name><name pos:line="39" pos:column="33">s<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">-&gt;<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="36">strstart<pos:position pos:line="39" pos:column="44"/></name></name> <operator pos:line="39" pos:column="45">-<pos:position pos:line="39" pos:column="46"/></operator> <name pos:line="39" pos:column="47">hash_head<pos:position pos:line="39" pos:column="56"/></name> <operator pos:line="39" pos:column="57">&lt;=<pos:position pos:line="39" pos:column="62"/></operator> <call><name pos:line="39" pos:column="60">MAX_DIST<pos:position pos:line="39" pos:column="68"/></name><argument_list pos:line="39" pos:column="68">(<argument><expr><name pos:line="39" pos:column="69">s<pos:position pos:line="39" pos:column="70"/></name></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="72"/></condition><then pos:line="39" pos:column="72"> <block pos:line="39" pos:column="73">{
            <comment type="block" pos:line="40" pos:column="13">/* To simplify the code, we prevent matches with the string
             * of window index 0 (in particular we have to avoid a match
             * of the string with itself at the start of the input file).
             */</comment>
            <expr_stmt><expr><name><name pos:line="44" pos:column="13">s<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">match_length<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">=<pos:position pos:line="44" pos:column="30"/></operator> <call><name pos:line="44" pos:column="31">longest_match<pos:position pos:line="44" pos:column="44"/></name> <argument_list pos:line="44" pos:column="45">(<argument><expr><name pos:line="44" pos:column="46">s<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">hash_head<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
            <comment type="block" pos:line="45" pos:column="13">/* longest_match() sets match_start */</comment>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name><name pos:line="47" pos:column="13">s<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">match_length<pos:position pos:line="47" pos:column="28"/></name></name> <operator pos:line="47" pos:column="29">&gt;=<pos:position pos:line="47" pos:column="34"/></operator> <name pos:line="47" pos:column="32">MIN_MATCH<pos:position pos:line="47" pos:column="41"/></name></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42"> <block pos:line="47" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">check_match<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">s<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="28">s<pos:position pos:line="48" pos:column="29"/></name><operator pos:line="48" pos:column="29">-&gt;<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="31">strstart<pos:position pos:line="48" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="41">s<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">match_start<pos:position pos:line="48" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="57">s<pos:position pos:line="48" pos:column="58"/></name><operator pos:line="48" pos:column="58">-&gt;<pos:position pos:line="48" pos:column="63"/></operator><name pos:line="48" pos:column="60">match_length<pos:position pos:line="48" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="74"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="50" pos:column="13">_tr_tally_dist<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name pos:line="50" pos:column="28">s<pos:position pos:line="50" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="31">s<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">-&gt;<pos:position pos:line="50" pos:column="37"/></operator><name pos:line="50" pos:column="34">strstart<pos:position pos:line="50" pos:column="42"/></name></name> <operator pos:line="50" pos:column="43">-<pos:position pos:line="50" pos:column="44"/></operator> <name><name pos:line="50" pos:column="45">s<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">match_start<pos:position pos:line="50" pos:column="59"/></name></name></expr></argument>,
                           <argument><expr><name><name pos:line="51" pos:column="28">s<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">match_length<pos:position pos:line="51" pos:column="43"/></name></name> <operator pos:line="51" pos:column="44">-<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="46">MIN_MATCH<pos:position pos:line="51" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="57">bflush<pos:position pos:line="51" pos:column="63"/></name></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="53" pos:column="13">s<pos:position pos:line="53" pos:column="14"/></name><operator pos:line="53" pos:column="14">-&gt;<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="16">lookahead<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">-=<pos:position pos:line="53" pos:column="28"/></operator> <name><name pos:line="53" pos:column="29">s<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">-&gt;<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="32">match_length<pos:position pos:line="53" pos:column="44"/></name></name></expr>;<pos:position pos:line="53" pos:column="45"/></expr_stmt>

            <comment type="block" pos:line="55" pos:column="13">/* Insert new strings in the hash table only if the match length
             * is not too large. This saves time but degrades compression.
             */</comment>
<cpp:ifndef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifndef<pos:position pos:line="58" pos:column="8"/></cpp:directive> <name pos:line="58" pos:column="9">FASTEST<pos:position pos:line="58" pos:column="16"/></name></cpp:ifndef>
            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><name><name pos:line="59" pos:column="17">s<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">match_length<pos:position pos:line="59" pos:column="32"/></name></name> <operator pos:line="59" pos:column="33">&lt;=<pos:position pos:line="59" pos:column="38"/></operator> <name><name pos:line="59" pos:column="36">s<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">max_insert_length<pos:position pos:line="59" pos:column="56"/></name></name> <operator pos:line="59" pos:column="57">&amp;&amp;<pos:position pos:line="59" pos:column="67"/></operator>
                <name><name pos:line="60" pos:column="17">s<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">lookahead<pos:position pos:line="60" pos:column="29"/></name></name> <operator pos:line="60" pos:column="30">&gt;=<pos:position pos:line="60" pos:column="35"/></operator> <name pos:line="60" pos:column="33">MIN_MATCH<pos:position pos:line="60" pos:column="42"/></name></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43"> <block pos:line="60" pos:column="44">{
                <expr_stmt><expr><name><name pos:line="61" pos:column="17">s<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">match_length<pos:position pos:line="61" pos:column="32"/></name></name><operator pos:line="61" pos:column="32">--<pos:position pos:line="61" pos:column="34"/></operator></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt> <comment type="block" pos:line="61" pos:column="36">/* string at strstart already in table */</comment>
                <do pos:line="62" pos:column="17">do <block pos:line="62" pos:column="20">{
                    <expr_stmt><expr><name><name pos:line="63" pos:column="21">s<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">strstart<pos:position pos:line="63" pos:column="32"/></name></name><operator pos:line="63" pos:column="32">++<pos:position pos:line="63" pos:column="34"/></operator></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="64" pos:column="21">INSERT_STRING<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">s<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="38">s<pos:position pos:line="64" pos:column="39"/></name><operator pos:line="64" pos:column="39">-&gt;<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="41">strstart<pos:position pos:line="64" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="51">hash_head<pos:position pos:line="64" pos:column="60"/></name></expr></argument>)<pos:position pos:line="64" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="62"/></expr_stmt>
                    <comment type="block" pos:line="65" pos:column="21">/* strstart never exceeds WSIZE-MAX_MATCH, so there are
                     * always MIN_MATCH bytes ahead.
                     */</comment>
                }<pos:position pos:line="68" pos:column="18"/></block> while <condition pos:line="68" pos:column="25">(<expr><operator pos:line="68" pos:column="26">--<pos:position pos:line="68" pos:column="28"/></operator><name><name pos:line="68" pos:column="28">s<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">-&gt;<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="31">match_length<pos:position pos:line="68" pos:column="43"/></name></name> <operator pos:line="68" pos:column="44">!=<pos:position pos:line="68" pos:column="46"/></operator> <literal type="number" pos:line="68" pos:column="47">0<pos:position pos:line="68" pos:column="48"/></literal></expr>)<pos:position pos:line="68" pos:column="49"/></condition>;<pos:position pos:line="68" pos:column="50"/></do>
                <expr_stmt><expr><name><name pos:line="69" pos:column="17">s<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">strstart<pos:position pos:line="69" pos:column="28"/></name></name><operator pos:line="69" pos:column="28">++<pos:position pos:line="69" pos:column="30"/></operator></expr>;<pos:position pos:line="69" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="70" pos:column="14"/></block></then> <else pos:line="70" pos:column="15">else
<cpp:endif pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">endif<pos:position pos:line="71" pos:column="7"/></cpp:directive></cpp:endif>
            <block pos:line="72" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="73" pos:column="17">s<pos:position pos:line="73" pos:column="18"/></name><operator pos:line="73" pos:column="18">-&gt;<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="20">strstart<pos:position pos:line="73" pos:column="28"/></name></name> <operator pos:line="73" pos:column="29">+=<pos:position pos:line="73" pos:column="31"/></operator> <name><name pos:line="73" pos:column="32">s<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">-&gt;<pos:position pos:line="73" pos:column="38"/></operator><name pos:line="73" pos:column="35">match_length<pos:position pos:line="73" pos:column="47"/></name></name></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="74" pos:column="17">s<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">match_length<pos:position pos:line="74" pos:column="32"/></name></name> <operator pos:line="74" pos:column="33">=<pos:position pos:line="74" pos:column="34"/></operator> <literal type="number" pos:line="74" pos:column="35">0<pos:position pos:line="74" pos:column="36"/></literal></expr>;<pos:position pos:line="74" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="75" pos:column="17">s<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">ins_h<pos:position pos:line="75" pos:column="25"/></name></name> <operator pos:line="75" pos:column="26">=<pos:position pos:line="75" pos:column="27"/></operator> <name><name pos:line="75" pos:column="28">s<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">-&gt;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="31">window<pos:position pos:line="75" pos:column="37"/></name><index pos:line="75" pos:column="37">[<expr><name><name pos:line="75" pos:column="38">s<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">strstart<pos:position pos:line="75" pos:column="49"/></name></name></expr>]<pos:position pos:line="75" pos:column="50"/></index></name></expr>;<pos:position pos:line="75" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">UPDATE_HASH<pos:position pos:line="76" pos:column="28"/></name><argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">s<pos:position pos:line="76" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="32">s<pos:position pos:line="76" pos:column="33"/></name><operator pos:line="76" pos:column="33">-&gt;<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="35">ins_h<pos:position pos:line="76" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="42">s<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">-&gt;<pos:position pos:line="76" pos:column="48"/></operator><name pos:line="76" pos:column="45">window<pos:position pos:line="76" pos:column="51"/></name><index pos:line="76" pos:column="51">[<expr><name><name pos:line="76" pos:column="52">s<pos:position pos:line="76" pos:column="53"/></name><operator pos:line="76" pos:column="53">-&gt;<pos:position pos:line="76" pos:column="58"/></operator><name pos:line="76" pos:column="55">strstart<pos:position pos:line="76" pos:column="63"/></name></name><operator pos:line="76" pos:column="63">+<pos:position pos:line="76" pos:column="64"/></operator><literal type="number" pos:line="76" pos:column="64">1<pos:position pos:line="76" pos:column="65"/></literal></expr>]<pos:position pos:line="76" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="76" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="68"/></expr_stmt>
<cpp:if pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">if<pos:position pos:line="77" pos:column="4"/></cpp:directive> <expr><name pos:line="77" pos:column="5">MIN_MATCH<pos:position pos:line="77" pos:column="14"/></name> <operator pos:line="77" pos:column="15">!=<pos:position pos:line="77" pos:column="17"/></operator> <literal type="number" pos:line="77" pos:column="18">3<pos:position pos:line="77" pos:column="19"/></literal></expr></cpp:if>
                <decl_stmt><decl><type><name pos:line="78" pos:column="17">Call<pos:position pos:line="78" pos:column="21"/></name></type> <name pos:line="78" pos:column="22">UPDATE_HASH<pos:position pos:line="78" pos:column="33"/></name><argument_list pos:line="78" pos:column="33">()<pos:position pos:line="78" pos:column="35"/></argument_list> <name pos:line="78" pos:column="36">MIN_MATCH<pos:position pos:line="78" pos:column="45"/></name>-3 <name pos:line="78" pos:column="48">more<pos:position pos:line="78" pos:column="52"/></name> <name pos:line="78" pos:column="53">times<pos:position pos:line="78" pos:column="58"/></name></decl></decl_stmt>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>
                <comment type="block" pos:line="80" pos:column="17">/* If lookahead &lt; MIN_MATCH, ins_h is garbage, but it does not
                 * matter since it will be recomputed at next deflate call.
                 */</comment>
            }<pos:position pos:line="83" pos:column="14"/></block></else></if>
        }<pos:position pos:line="84" pos:column="10"/></block></then> <else pos:line="84" pos:column="11">else <block pos:line="84" pos:column="16">{
            <comment type="block" pos:line="85" pos:column="13">/* No match, output a literal byte */</comment>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">Tracevv<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><operator pos:line="86" pos:column="21">(<pos:position pos:line="86" pos:column="22"/></operator><name pos:line="86" pos:column="22">stderr<pos:position pos:line="86" pos:column="28"/></name><operator pos:line="86" pos:column="28">,<pos:position pos:line="86" pos:column="29"/></operator><literal type="string" pos:line="86" pos:column="29">"%c"<pos:position pos:line="86" pos:column="33"/></literal><operator pos:line="86" pos:column="33">,<pos:position pos:line="86" pos:column="34"/></operator> <name><name pos:line="86" pos:column="35">s<pos:position pos:line="86" pos:column="36"/></name><operator pos:line="86" pos:column="36">-&gt;<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="38">window<pos:position pos:line="86" pos:column="44"/></name><index pos:line="86" pos:column="44">[<expr><name><name pos:line="86" pos:column="45">s<pos:position pos:line="86" pos:column="46"/></name><operator pos:line="86" pos:column="46">-&gt;<pos:position pos:line="86" pos:column="51"/></operator><name pos:line="86" pos:column="48">strstart<pos:position pos:line="86" pos:column="56"/></name></name></expr>]<pos:position pos:line="86" pos:column="57"/></index></name><operator pos:line="86" pos:column="57">)<pos:position pos:line="86" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="86" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="87" pos:column="13">_tr_tally_lit<pos:position pos:line="87" pos:column="26"/></name> <argument_list pos:line="87" pos:column="27">(<argument><expr><name pos:line="87" pos:column="28">s<pos:position pos:line="87" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="31">s<pos:position pos:line="87" pos:column="32"/></name><operator pos:line="87" pos:column="32">-&gt;<pos:position pos:line="87" pos:column="37"/></operator><name pos:line="87" pos:column="34">window<pos:position pos:line="87" pos:column="40"/></name><index pos:line="87" pos:column="40">[<expr><name><name pos:line="87" pos:column="41">s<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">strstart<pos:position pos:line="87" pos:column="52"/></name></name></expr>]<pos:position pos:line="87" pos:column="53"/></index></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="55">bflush<pos:position pos:line="87" pos:column="61"/></name></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">s<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">-&gt;<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="16">lookahead<pos:position pos:line="88" pos:column="25"/></name></name><operator pos:line="88" pos:column="25">--<pos:position pos:line="88" pos:column="27"/></operator></expr>;<pos:position pos:line="88" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="89" pos:column="13">s<pos:position pos:line="89" pos:column="14"/></name><operator pos:line="89" pos:column="14">-&gt;<pos:position pos:line="89" pos:column="19"/></operator><name pos:line="89" pos:column="16">strstart<pos:position pos:line="89" pos:column="24"/></name></name><operator pos:line="89" pos:column="24">++<pos:position pos:line="89" pos:column="26"/></operator></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>
        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">bflush<pos:position pos:line="91" pos:column="19"/></name></expr>)<pos:position pos:line="91" pos:column="20"/></condition><then pos:line="91" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="91" pos:column="21">FLUSH_BLOCK<pos:position pos:line="91" pos:column="32"/></name><argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">s<pos:position pos:line="91" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="36">0<pos:position pos:line="91" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="39"/></expr_stmt></block></then></if>
    }<pos:position pos:line="92" pos:column="6"/></block></for>
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">flush<pos:position pos:line="93" pos:column="14"/></name> <operator pos:line="93" pos:column="15">==<pos:position pos:line="93" pos:column="17"/></operator> <name pos:line="93" pos:column="18">Z_INSERT_ONLY<pos:position pos:line="93" pos:column="31"/></name></expr>)<pos:position pos:line="93" pos:column="32"/></condition><then pos:line="93" pos:column="32"> <block pos:line="93" pos:column="33">{
	<expr_stmt><expr><name><name pos:line="94" pos:column="9">s<pos:position pos:line="94" pos:column="10"/></name><operator pos:line="94" pos:column="10">-&gt;<pos:position pos:line="94" pos:column="15"/></operator><name pos:line="94" pos:column="12">block_start<pos:position pos:line="94" pos:column="23"/></name></name> <operator pos:line="94" pos:column="24">=<pos:position pos:line="94" pos:column="25"/></operator> <name><name pos:line="94" pos:column="26">s<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">-&gt;<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="29">strstart<pos:position pos:line="94" pos:column="37"/></name></name></expr>;<pos:position pos:line="94" pos:column="38"/></expr_stmt>
	<return pos:line="95" pos:column="9">return <expr><name pos:line="95" pos:column="16">need_more<pos:position pos:line="95" pos:column="25"/></name></expr>;<pos:position pos:line="95" pos:column="26"/></return>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="97" pos:column="5">s<pos:position pos:line="97" pos:column="6"/></name><operator pos:line="97" pos:column="6">-&gt;<pos:position pos:line="97" pos:column="11"/></operator><name pos:line="97" pos:column="8">insert<pos:position pos:line="97" pos:column="14"/></name></name> <operator pos:line="97" pos:column="15">=<pos:position pos:line="97" pos:column="16"/></operator> <ternary><condition><expr><name><name pos:line="97" pos:column="17">s<pos:position pos:line="97" pos:column="18"/></name><operator pos:line="97" pos:column="18">-&gt;<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="20">strstart<pos:position pos:line="97" pos:column="28"/></name></name> <operator pos:line="97" pos:column="29">&lt;<pos:position pos:line="97" pos:column="33"/></operator> <name pos:line="97" pos:column="31">MIN_MATCH<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">-<pos:position pos:line="97" pos:column="41"/></operator><literal type="number" pos:line="97" pos:column="41">1<pos:position pos:line="97" pos:column="42"/></literal></expr> ?<pos:position pos:line="97" pos:column="44"/></condition><then pos:line="97" pos:column="44"> <expr><name><name pos:line="97" pos:column="45">s<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">-&gt;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="48">strstart<pos:position pos:line="97" pos:column="56"/></name></name></expr> <pos:position pos:line="97" pos:column="57"/></then><else pos:line="97" pos:column="57">: <expr><name pos:line="97" pos:column="59">MIN_MATCH<pos:position pos:line="97" pos:column="68"/></name><operator pos:line="97" pos:column="68">-<pos:position pos:line="97" pos:column="69"/></operator><literal type="number" pos:line="97" pos:column="69">1<pos:position pos:line="97" pos:column="70"/></literal></expr></else></ternary></expr>;<pos:position pos:line="97" pos:column="71"/></expr_stmt>
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">flush<pos:position pos:line="98" pos:column="14"/></name> <operator pos:line="98" pos:column="15">==<pos:position pos:line="98" pos:column="17"/></operator> <name pos:line="98" pos:column="18">Z_FINISH<pos:position pos:line="98" pos:column="26"/></name></expr>)<pos:position pos:line="98" pos:column="27"/></condition><then pos:line="98" pos:column="27"> <block pos:line="98" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">FLUSH_BLOCK<pos:position pos:line="99" pos:column="20"/></name><argument_list pos:line="99" pos:column="20">(<argument><expr><name pos:line="99" pos:column="21">s<pos:position pos:line="99" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="99" pos:column="24">1<pos:position pos:line="99" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="27"/></expr_stmt>
        <return pos:line="100" pos:column="9">return <expr><name pos:line="100" pos:column="16">finish_done<pos:position pos:line="100" pos:column="27"/></name></expr>;<pos:position pos:line="100" pos:column="28"/></return>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><name><name pos:line="102" pos:column="9">s<pos:position pos:line="102" pos:column="10"/></name><operator pos:line="102" pos:column="10">-&gt;<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="12">last_lit<pos:position pos:line="102" pos:column="20"/></name></name></expr>)<pos:position pos:line="102" pos:column="21"/></condition><then pos:line="102" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="9">FLUSH_BLOCK<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><name pos:line="103" pos:column="21">s<pos:position pos:line="103" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="24">0<pos:position pos:line="103" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="27"/></expr_stmt></block></then></if>
    <return pos:line="104" pos:column="5">return <expr><name pos:line="104" pos:column="12">block_done<pos:position pos:line="104" pos:column="22"/></name></expr>;<pos:position pos:line="104" pos:column="23"/></return>
}<pos:position pos:line="105" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_583_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">output_summary<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">INFO_GTE<pos:position pos:line="3" pos:column="21"/></name><argument_list pos:line="3" pos:column="21">(<argument><expr><name pos:line="3" pos:column="22">STATS<pos:position pos:line="3" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="29">2<pos:position pos:line="3" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <block pos:line="3" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">rprintf<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">FCLIENT<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="34">"\n"<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">output_itemized_counts<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><literal type="string" pos:line="5" pos:column="40">"Number of files"<pos:position pos:line="5" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="59">&amp;<pos:position pos:line="5" pos:column="64"/></operator><name><name pos:line="5" pos:column="60">stats<pos:position pos:line="5" pos:column="65"/></name><operator pos:line="5" pos:column="65">.<pos:position pos:line="5" pos:column="66"/></operator><name pos:line="5" pos:column="66">num_files<pos:position pos:line="5" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="77"/></expr_stmt>
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name pos:line="6" pos:column="21">protocol_version<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">&gt;=<pos:position pos:line="6" pos:column="43"/></operator> <literal type="number" pos:line="6" pos:column="41">29<pos:position pos:line="6" pos:column="43"/></literal></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="25">output_itemized_counts<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">(<argument><expr><literal type="string" pos:line="7" pos:column="48">"Number of created files"<pos:position pos:line="7" pos:column="73"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="75">&amp;<pos:position pos:line="7" pos:column="80"/></operator><name><name pos:line="7" pos:column="76">stats<pos:position pos:line="7" pos:column="81"/></name><operator pos:line="7" pos:column="81">.<pos:position pos:line="7" pos:column="82"/></operator><name pos:line="7" pos:column="82">created_files<pos:position pos:line="7" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="97"/></expr_stmt></block></then></if>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">protocol_version<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">&gt;=<pos:position pos:line="8" pos:column="43"/></operator> <literal type="number" pos:line="8" pos:column="41">31<pos:position pos:line="8" pos:column="43"/></literal></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="25">output_itemized_counts<pos:position pos:line="9" pos:column="47"/></name><argument_list pos:line="9" pos:column="47">(<argument><expr><literal type="string" pos:line="9" pos:column="48">"Number of deleted files"<pos:position pos:line="9" pos:column="73"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="75">&amp;<pos:position pos:line="9" pos:column="80"/></operator><name><name pos:line="9" pos:column="76">stats<pos:position pos:line="9" pos:column="81"/></name><operator pos:line="9" pos:column="81">.<pos:position pos:line="9" pos:column="82"/></operator><name pos:line="9" pos:column="82">deleted_files<pos:position pos:line="9" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="97"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">rprintf<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">FINFO<pos:position pos:line="10" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="31">"Number of regular files transferred: %s\n"<pos:position pos:line="10" pos:column="74"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="11" pos:column="25">comma_num<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name><name pos:line="11" pos:column="35">stats<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">xferred_files<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FINFO<pos:position pos:line="12" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="31">"Total file size: %s bytes\n"<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="13" pos:column="25">human_num<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name><name pos:line="13" pos:column="35">stats<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">total_size<pos:position pos:line="13" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">rprintf<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">FINFO<pos:position pos:line="14" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="14" pos:column="31">"Total transferred file size: %s bytes\n"<pos:position pos:line="14" pos:column="72"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="15" pos:column="25">human_num<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name><name pos:line="15" pos:column="35">stats<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">.<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">total_transferred_size<pos:position pos:line="15" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">rprintf<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">FINFO<pos:position pos:line="16" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="31">"Literal data: %s bytes\n"<pos:position pos:line="16" pos:column="57"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="17" pos:column="25">human_num<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name><name pos:line="17" pos:column="35">stats<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">.<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">literal_data<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">rprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">FINFO<pos:position pos:line="18" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="18" pos:column="31">"Matched data: %s bytes\n"<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="19" pos:column="25">human_num<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name><name pos:line="19" pos:column="35">stats<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">matched_data<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">rprintf<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">FINFO<pos:position pos:line="20" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="20" pos:column="31">"File list size: %s\n"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="21" pos:column="25">human_num<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name><name pos:line="21" pos:column="35">stats<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">flist_size<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">stats<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">flist_buildtime<pos:position pos:line="22" pos:column="42"/></name></name></expr>)<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <block pos:line="22" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">rprintf<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">FINFO<pos:position pos:line="23" pos:column="38"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="24" pos:column="33">"File list generation time: %s seconds\n"<pos:position pos:line="24" pos:column="74"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="25" pos:column="33">comma_dnum<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><operator pos:line="25" pos:column="44">(<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">double<pos:position pos:line="25" pos:column="51"/></name><operator pos:line="25" pos:column="51">)<pos:position pos:line="25" pos:column="52"/></operator><name><name pos:line="25" pos:column="52">stats<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">.<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="58">flist_buildtime<pos:position pos:line="25" pos:column="73"/></name></name> <operator pos:line="25" pos:column="74">/<pos:position pos:line="25" pos:column="75"/></operator> <literal type="number" pos:line="25" pos:column="76">1000<pos:position pos:line="25" pos:column="80"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="82">3<pos:position pos:line="25" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">rprintf<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">FINFO<pos:position pos:line="26" pos:column="38"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="27" pos:column="33">"File list transfer time: %s seconds\n"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="28" pos:column="33">comma_dnum<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">(<argument><expr><operator pos:line="28" pos:column="44">(<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">double<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">)<pos:position pos:line="28" pos:column="52"/></operator><name><name pos:line="28" pos:column="52">stats<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">.<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">flist_xfertime<pos:position pos:line="28" pos:column="72"/></name></name> <operator pos:line="28" pos:column="73">/<pos:position pos:line="28" pos:column="74"/></operator> <literal type="number" pos:line="28" pos:column="75">1000<pos:position pos:line="28" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="81">3<pos:position pos:line="28" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">rprintf<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">FINFO<pos:position pos:line="30" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="30" pos:column="31">"Total bytes sent: %s\n"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="31" pos:column="25">human_num<pos:position pos:line="31" pos:column="34"/></name><argument_list pos:line="31" pos:column="34">(<argument><expr><name pos:line="31" pos:column="35">total_written<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">rprintf<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">FINFO<pos:position pos:line="32" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="32" pos:column="31">"Total bytes received: %s\n"<pos:position pos:line="32" pos:column="59"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="33" pos:column="25">human_num<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">total_read<pos:position pos:line="33" pos:column="45"/></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">INFO_GTE<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">STATS<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="29">1<pos:position pos:line="36" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32"> <block pos:line="36" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">rprintf<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">FCLIENT<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="34">"\n"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">rprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">FINFO<pos:position pos:line="38" pos:column="30"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="39" pos:column="25">"sent %s bytes  received %s bytes  %s bytes/sec\n"<pos:position pos:line="39" pos:column="75"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="40" pos:column="25">human_num<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">total_written<pos:position pos:line="40" pos:column="48"/></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="51">human_num<pos:position pos:line="40" pos:column="60"/></name><argument_list pos:line="40" pos:column="60">(<argument><expr><name pos:line="40" pos:column="61">total_read<pos:position pos:line="40" pos:column="71"/></name></expr></argument>)<pos:position pos:line="40" pos:column="72"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="41" pos:column="25">human_dnum<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><operator pos:line="41" pos:column="36">(<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">total_written<pos:position pos:line="41" pos:column="50"/></name> <operator pos:line="41" pos:column="51">+<pos:position pos:line="41" pos:column="52"/></operator> <name pos:line="41" pos:column="53">total_read<pos:position pos:line="41" pos:column="63"/></name><operator pos:line="41" pos:column="63">)<pos:position pos:line="41" pos:column="64"/></operator><operator pos:line="41" pos:column="64">/<pos:position pos:line="41" pos:column="65"/></operator><operator pos:line="41" pos:column="65">(<pos:position pos:line="41" pos:column="66"/></operator><literal type="number" pos:line="41" pos:column="66">0.5<pos:position pos:line="41" pos:column="69"/></literal> <operator pos:line="41" pos:column="70">+<pos:position pos:line="41" pos:column="71"/></operator> <operator pos:line="41" pos:column="72">(<pos:position pos:line="41" pos:column="73"/></operator><name pos:line="41" pos:column="73">endtime<pos:position pos:line="41" pos:column="80"/></name> <operator pos:line="41" pos:column="81">-<pos:position pos:line="41" pos:column="82"/></operator> <name pos:line="41" pos:column="83">starttime<pos:position pos:line="41" pos:column="92"/></name><operator pos:line="41" pos:column="92">)<pos:position pos:line="41" pos:column="93"/></operator><operator pos:line="41" pos:column="93">)<pos:position pos:line="41" pos:column="94"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="96">2<pos:position pos:line="41" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="100"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">rprintf<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">FINFO<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="32">"total size is %s  speedup is %s%s\n"<pos:position pos:line="42" pos:column="69"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="43" pos:column="25">human_num<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><name><name pos:line="43" pos:column="35">stats<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">.<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="41">total_size<pos:position pos:line="43" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="52"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="44" pos:column="25">comma_dnum<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><operator pos:line="44" pos:column="36">(<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">double<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">)<pos:position pos:line="44" pos:column="44"/></operator><name><name pos:line="44" pos:column="44">stats<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">.<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="50">total_size<pos:position pos:line="44" pos:column="60"/></name></name> <operator pos:line="44" pos:column="61">/<pos:position pos:line="44" pos:column="62"/></operator> <operator pos:line="44" pos:column="63">(<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="64">total_written<pos:position pos:line="44" pos:column="77"/></name><operator pos:line="44" pos:column="77">+<pos:position pos:line="44" pos:column="78"/></operator><name pos:line="44" pos:column="78">total_read<pos:position pos:line="44" pos:column="88"/></name><operator pos:line="44" pos:column="88">)<pos:position pos:line="44" pos:column="89"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="91">2<pos:position pos:line="44" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="93"/></argument_list></call></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="45" pos:column="25">write_batch<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">&lt;<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="39">0<pos:position pos:line="45" pos:column="40"/></literal></expr> ?<pos:position pos:line="45" pos:column="42"/></condition><then pos:line="45" pos:column="42"> <expr><literal type="string" pos:line="45" pos:column="43">" (BATCH ONLY)"<pos:position pos:line="45" pos:column="58"/></literal></expr> <pos:position pos:line="45" pos:column="59"/></then><else pos:line="45" pos:column="59">: <expr><ternary><condition><expr><name pos:line="45" pos:column="61">dry_run<pos:position pos:line="45" pos:column="68"/></name></expr> ?<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70"> <expr><literal type="string" pos:line="45" pos:column="71">" (DRY RUN)"<pos:position pos:line="45" pos:column="83"/></literal></expr> <pos:position pos:line="45" pos:column="84"/></then><else pos:line="45" pos:column="84">: <expr><literal type="string" pos:line="45" pos:column="86">""<pos:position pos:line="45" pos:column="88"/></literal></expr></else></ternary></expr></else></ternary></expr></argument>)<pos:position pos:line="45" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="90"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">fflush<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">stdout<pos:position pos:line="48" pos:column="22"/></name></expr></argument>)<pos:position pos:line="48" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">fflush<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">stderr<pos:position pos:line="49" pos:column="22"/></name></expr></argument>)<pos:position pos:line="49" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

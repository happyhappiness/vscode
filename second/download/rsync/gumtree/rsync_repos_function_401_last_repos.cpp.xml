<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_401_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">iconvbufs<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">iconv_t<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">ic<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">xbuf<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">in<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">xbuf<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">out<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">flags<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ICONV_CONST<pos:position pos:line="3" pos:column="20"/></name> <name pos:line="3" pos:column="21">char<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">ibuf<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">icnt<pos:position pos:line="4" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="22">ocnt<pos:position pos:line="4" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="28">opos<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">obuf<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">out<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">size<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">&amp;&amp;<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="27">flags<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">&amp;<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="35">ICB_EXPAND_OUT<pos:position pos:line="7" pos:column="49"/></name></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50"> <block pos:line="7" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">size_t<pos:position pos:line="8" pos:column="23"/></name></type> <name pos:line="8" pos:column="24">siz<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><call><name pos:line="8" pos:column="30">ROUND_UP_1024<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><name><name pos:line="8" pos:column="44">in<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">len<pos:position pos:line="8" pos:column="51"/></name></name> <operator pos:line="8" pos:column="52">*<pos:position pos:line="8" pos:column="53"/></operator> <literal type="number" pos:line="8" pos:column="54">2<pos:position pos:line="8" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="57"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">alloc_xbuf<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">out<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">siz<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <elseif pos:line="10" pos:column="11">else <if pos:line="10" pos:column="16">if <condition pos:line="10" pos:column="19">(<expr><name><name pos:line="10" pos:column="20">out<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">len<pos:position pos:line="10" pos:column="28"/></name></name><operator pos:line="10" pos:column="28">+<pos:position pos:line="10" pos:column="29"/></operator><literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal> <operator pos:line="10" pos:column="31">&gt;=<pos:position pos:line="10" pos:column="36"/></operator> <name><name pos:line="10" pos:column="34">out<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">size<pos:position pos:line="10" pos:column="43"/></name></name></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <block pos:line="10" pos:column="45">{
		<comment type="block" pos:line="11" pos:column="17">/* There is no room to even start storing data. */</comment>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">(<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">flags<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&amp;<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="31">ICB_EXPAND_OUT<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">)<pos:position pos:line="12" pos:column="46"/></operator> <operator pos:line="12" pos:column="47">||<pos:position pos:line="12" pos:column="49"/></operator> <name pos:line="12" pos:column="50">flags<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">&amp;<pos:position pos:line="12" pos:column="61"/></operator> <name pos:line="12" pos:column="58">ICB_CIRCULAR_OUT<pos:position pos:line="12" pos:column="74"/></name></expr>)<pos:position pos:line="12" pos:column="75"/></condition><then pos:line="12" pos:column="75"> <block pos:line="12" pos:column="76">{
			<expr_stmt><expr><name pos:line="13" pos:column="25">errno<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">E2BIG<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
			<return pos:line="14" pos:column="25">return <expr><operator pos:line="14" pos:column="32">-<pos:position pos:line="14" pos:column="33"/></operator><literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal></expr>;<pos:position pos:line="14" pos:column="35"/></return>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">realloc_xbuf<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">out<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="35">out<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">size<pos:position pos:line="16" pos:column="44"/></name></name> <operator pos:line="16" pos:column="45">+<pos:position pos:line="16" pos:column="46"/></operator> <call><name pos:line="16" pos:column="47">ROUND_UP_1024<pos:position pos:line="16" pos:column="60"/></name><argument_list pos:line="16" pos:column="60">(<argument><expr><name><name pos:line="16" pos:column="61">in<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-&gt;<pos:position pos:line="16" pos:column="68"/></operator><name pos:line="16" pos:column="65">len<pos:position pos:line="16" pos:column="68"/></name></name> <operator pos:line="16" pos:column="69">*<pos:position pos:line="16" pos:column="70"/></operator> <literal type="number" pos:line="16" pos:column="71">2<pos:position pos:line="16" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">flags<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&amp;<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="21">ICB_INIT<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">iconv<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">ic<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">NULL<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="33">0<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">NULL<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="42">0<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="22" pos:column="9">ibuf<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name><name pos:line="22" pos:column="16">in<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">buf<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">+<pos:position pos:line="22" pos:column="25"/></operator> <name><name pos:line="22" pos:column="26">in<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">-&gt;<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="30">pos<pos:position pos:line="22" pos:column="33"/></name></name></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="23" pos:column="9">icnt<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name><name pos:line="23" pos:column="16">in<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">-&gt;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="20">len<pos:position pos:line="23" pos:column="23"/></name></name></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><name pos:line="25" pos:column="9">opos<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name><name pos:line="25" pos:column="16">out<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">pos<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">+<pos:position pos:line="25" pos:column="26"/></operator> <name><name pos:line="25" pos:column="27">out<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">len<pos:position pos:line="25" pos:column="35"/></name></name></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">flags<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">&amp;<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="21">ICB_CIRCULAR_OUT<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">opos<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">&gt;=<pos:position pos:line="27" pos:column="31"/></operator> <name><name pos:line="27" pos:column="29">out<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">size<pos:position pos:line="27" pos:column="38"/></name></name></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39"> <block pos:line="27" pos:column="40">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">opos<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">-=<pos:position pos:line="28" pos:column="32"/></operator> <name><name pos:line="28" pos:column="33">out<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">size<pos:position pos:line="28" pos:column="42"/></name></name></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
			<comment type="block" pos:line="29" pos:column="25">/* We know that out-&gt;pos is not 0 due to the "no room" check
			 * above, so this can't go "negative". */</comment>
			<expr_stmt><expr><name pos:line="31" pos:column="25">ocnt<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name><name pos:line="31" pos:column="32">out<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">pos<pos:position pos:line="31" pos:column="40"/></name></name> <operator pos:line="31" pos:column="41">-<pos:position pos:line="31" pos:column="42"/></operator> <name pos:line="31" pos:column="43">opos<pos:position pos:line="31" pos:column="47"/></name> <operator pos:line="31" pos:column="48">-<pos:position pos:line="31" pos:column="49"/></operator> <literal type="number" pos:line="31" pos:column="50">1<pos:position pos:line="31" pos:column="51"/></literal></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then> <else pos:line="32" pos:column="19">else <block pos:line="32" pos:column="24">{
			<comment type="block" pos:line="33" pos:column="25">/* Allow the use of all bytes to the physical end of the buffer
			 * unless pos is 0, in which case we reserve our trailing '\0'. */</comment>
			<expr_stmt><expr><name pos:line="35" pos:column="25">ocnt<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="32">out<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">size<pos:position pos:line="35" pos:column="41"/></name></name> <operator pos:line="35" pos:column="42">-<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="44">opos<pos:position pos:line="35" pos:column="48"/></name> <operator pos:line="35" pos:column="49">-<pos:position pos:line="35" pos:column="50"/></operator> <operator pos:line="35" pos:column="51">(<pos:position pos:line="35" pos:column="52"/></operator><ternary><condition><expr><name><name pos:line="35" pos:column="52">out<pos:position pos:line="35" pos:column="55"/></name><operator pos:line="35" pos:column="55">-&gt;<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="57">pos<pos:position pos:line="35" pos:column="60"/></name></name></expr> ?<pos:position pos:line="35" pos:column="62"/></condition><then pos:line="35" pos:column="62"> <expr><literal type="number" pos:line="35" pos:column="63">0<pos:position pos:line="35" pos:column="64"/></literal></expr> <pos:position pos:line="35" pos:column="65"/></then><else pos:line="35" pos:column="65">: <expr><literal type="number" pos:line="35" pos:column="67">1<pos:position pos:line="35" pos:column="68"/></literal></expr></else></ternary><operator pos:line="35" pos:column="68">)<pos:position pos:line="35" pos:column="69"/></operator></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></else></if>
	}<pos:position pos:line="37" pos:column="10"/></block></then> <else pos:line="37" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">ocnt<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <name><name pos:line="38" pos:column="24">out<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">size<pos:position pos:line="38" pos:column="33"/></name></name> <operator pos:line="38" pos:column="34">-<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="36">opos<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">-<pos:position pos:line="38" pos:column="42"/></operator> <literal type="number" pos:line="38" pos:column="43">1<pos:position pos:line="38" pos:column="44"/></literal></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="39" pos:column="9">obuf<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <name><name pos:line="39" pos:column="16">out<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">buf<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">+<pos:position pos:line="39" pos:column="26"/></operator> <name pos:line="39" pos:column="27">opos<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>

	<while pos:line="41" pos:column="9">while <condition pos:line="41" pos:column="15">(<expr><name pos:line="41" pos:column="16">icnt<pos:position pos:line="41" pos:column="20"/></name></expr>)<pos:position pos:line="41" pos:column="21"/></condition> <block pos:line="41" pos:column="22">{
		<while pos:line="42" pos:column="17">while <condition pos:line="42" pos:column="23">(<expr><call><name pos:line="42" pos:column="24">iconv<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">ic<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="34">&amp;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="35">ibuf<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="41">&amp;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="42">icnt<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="48">&amp;<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="49">obuf<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="55">&amp;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="56">ocnt<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call> <operator pos:line="42" pos:column="62">==<pos:position pos:line="42" pos:column="64"/></operator> <operator pos:line="42" pos:column="65">(<pos:position pos:line="42" pos:column="66"/></operator><name pos:line="42" pos:column="66">size_t<pos:position pos:line="42" pos:column="72"/></name><operator pos:line="42" pos:column="72">)<pos:position pos:line="42" pos:column="73"/></operator><operator pos:line="42" pos:column="73">-<pos:position pos:line="42" pos:column="74"/></operator><literal type="number" pos:line="42" pos:column="74">1<pos:position pos:line="42" pos:column="75"/></literal></expr>)<pos:position pos:line="42" pos:column="76"/></condition> <block pos:line="42" pos:column="77">{
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><name pos:line="43" pos:column="29">errno<pos:position pos:line="43" pos:column="34"/></name> <operator pos:line="43" pos:column="35">==<pos:position pos:line="43" pos:column="37"/></operator> <name pos:line="43" pos:column="38">EINTR<pos:position pos:line="43" pos:column="43"/></name></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44">
				<block type="pseudo"><continue pos:line="44" pos:column="33">continue;<pos:position pos:line="44" pos:column="42"/></continue></block></then></if>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">errno<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">==<pos:position pos:line="45" pos:column="37"/></operator> <name pos:line="45" pos:column="38">EINVAL<pos:position pos:line="45" pos:column="44"/></name></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <block pos:line="45" pos:column="46">{
				<if pos:line="46" pos:column="33">if <condition pos:line="46" pos:column="36">(<expr><operator pos:line="46" pos:column="37">!<pos:position pos:line="46" pos:column="38"/></operator><operator pos:line="46" pos:column="38">(<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">flags<pos:position pos:line="46" pos:column="44"/></name> <operator pos:line="46" pos:column="45">&amp;<pos:position pos:line="46" pos:column="50"/></operator> <name pos:line="46" pos:column="47">ICB_INCLUDE_INCOMPLETE<pos:position pos:line="46" pos:column="69"/></name><operator pos:line="46" pos:column="69">)<pos:position pos:line="46" pos:column="70"/></operator></expr>)<pos:position pos:line="46" pos:column="71"/></condition><then pos:line="46" pos:column="71">
					<block type="pseudo"><goto pos:line="47" pos:column="41">goto <name pos:line="47" pos:column="46">finish<pos:position pos:line="47" pos:column="52"/></name>;<pos:position pos:line="47" pos:column="53"/></goto></block></then></if>
				<if pos:line="48" pos:column="33">if <condition pos:line="48" pos:column="36">(<expr><operator pos:line="48" pos:column="37">!<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="38">ocnt<pos:position pos:line="48" pos:column="42"/></name></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43">
					<block type="pseudo"><goto pos:line="49" pos:column="41">goto <name pos:line="49" pos:column="46">e2big<pos:position pos:line="49" pos:column="51"/></name>;<pos:position pos:line="49" pos:column="52"/></goto></block></then></if>
			}<pos:position pos:line="50" pos:column="26"/></block></then> <elseif pos:line="50" pos:column="27">else <if pos:line="50" pos:column="32">if <condition pos:line="50" pos:column="35">(<expr><name pos:line="50" pos:column="36">errno<pos:position pos:line="50" pos:column="41"/></name> <operator pos:line="50" pos:column="42">==<pos:position pos:line="50" pos:column="44"/></operator> <name pos:line="50" pos:column="45">EILSEQ<pos:position pos:line="50" pos:column="51"/></name></expr>)<pos:position pos:line="50" pos:column="52"/></condition><then pos:line="50" pos:column="52"> <block pos:line="50" pos:column="53">{
				<if pos:line="51" pos:column="33">if <condition pos:line="51" pos:column="36">(<expr><operator pos:line="51" pos:column="37">!<pos:position pos:line="51" pos:column="38"/></operator><operator pos:line="51" pos:column="38">(<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">flags<pos:position pos:line="51" pos:column="44"/></name> <operator pos:line="51" pos:column="45">&amp;<pos:position pos:line="51" pos:column="50"/></operator> <name pos:line="51" pos:column="47">ICB_INCLUDE_BAD<pos:position pos:line="51" pos:column="62"/></name><operator pos:line="51" pos:column="62">)<pos:position pos:line="51" pos:column="63"/></operator></expr>)<pos:position pos:line="51" pos:column="64"/></condition><then pos:line="51" pos:column="64">
					<block type="pseudo"><goto pos:line="52" pos:column="41">goto <name pos:line="52" pos:column="46">finish<pos:position pos:line="52" pos:column="52"/></name>;<pos:position pos:line="52" pos:column="53"/></goto></block></then></if>
				<if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><operator pos:line="53" pos:column="37">!<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">ocnt<pos:position pos:line="53" pos:column="42"/></name></expr>)<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43">
					<block type="pseudo"><goto pos:line="54" pos:column="41">goto <name pos:line="54" pos:column="46">e2big<pos:position pos:line="54" pos:column="51"/></name>;<pos:position pos:line="54" pos:column="52"/></goto></block></then></if>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if></elseif> <elseif pos:line="55" pos:column="27">else <if pos:line="55" pos:column="32">if <condition pos:line="55" pos:column="35">(<expr><name pos:line="55" pos:column="36">errno<pos:position pos:line="55" pos:column="41"/></name> <operator pos:line="55" pos:column="42">==<pos:position pos:line="55" pos:column="44"/></operator> <name pos:line="55" pos:column="45">E2BIG<pos:position pos:line="55" pos:column="50"/></name></expr>)<pos:position pos:line="55" pos:column="51"/></condition><then pos:line="55" pos:column="51"> <block pos:line="55" pos:column="52">{
				<decl_stmt><decl><type><name pos:line="56" pos:column="33">size_t<pos:position pos:line="56" pos:column="39"/></name></type> <name pos:line="56" pos:column="40">siz<pos:position pos:line="56" pos:column="43"/></name></decl>;<pos:position pos:line="56" pos:column="44"/></decl_stmt>
			  <label><name pos:line="57" pos:column="27">e2big<pos:position pos:line="57" pos:column="32"/></name>:<pos:position pos:line="57" pos:column="33"/></label>
				<expr_stmt><expr><name pos:line="58" pos:column="33">opos<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">=<pos:position pos:line="58" pos:column="39"/></operator> <name pos:line="58" pos:column="40">obuf<pos:position pos:line="58" pos:column="44"/></name> <operator pos:line="58" pos:column="45">-<pos:position pos:line="58" pos:column="46"/></operator> <name><name pos:line="58" pos:column="47">out<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">-&gt;<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="52">buf<pos:position pos:line="58" pos:column="55"/></name></name></expr>;<pos:position pos:line="58" pos:column="56"/></expr_stmt>
				<if pos:line="59" pos:column="33">if <condition pos:line="59" pos:column="36">(<expr><name pos:line="59" pos:column="37">flags<pos:position pos:line="59" pos:column="42"/></name> <operator pos:line="59" pos:column="43">&amp;<pos:position pos:line="59" pos:column="48"/></operator> <name pos:line="59" pos:column="45">ICB_CIRCULAR_OUT<pos:position pos:line="59" pos:column="61"/></name> <operator pos:line="59" pos:column="62">&amp;&amp;<pos:position pos:line="59" pos:column="72"/></operator> <name><name pos:line="59" pos:column="65">out<pos:position pos:line="59" pos:column="68"/></name><operator pos:line="59" pos:column="68">-&gt;<pos:position pos:line="59" pos:column="73"/></operator><name pos:line="59" pos:column="70">pos<pos:position pos:line="59" pos:column="73"/></name></name> <operator pos:line="59" pos:column="74">&gt;<pos:position pos:line="59" pos:column="78"/></operator> <literal type="number" pos:line="59" pos:column="76">1<pos:position pos:line="59" pos:column="77"/></literal> <operator pos:line="59" pos:column="78">&amp;&amp;<pos:position pos:line="59" pos:column="88"/></operator> <name pos:line="59" pos:column="81">opos<pos:position pos:line="59" pos:column="85"/></name> <operator pos:line="59" pos:column="86">&gt;<pos:position pos:line="59" pos:column="90"/></operator> <name><name pos:line="59" pos:column="88">out<pos:position pos:line="59" pos:column="91"/></name><operator pos:line="59" pos:column="91">-&gt;<pos:position pos:line="59" pos:column="96"/></operator><name pos:line="59" pos:column="93">pos<pos:position pos:line="59" pos:column="96"/></name></name></expr>)<pos:position pos:line="59" pos:column="97"/></condition><then pos:line="59" pos:column="97"> <block pos:line="59" pos:column="98">{
					<comment type="block" pos:line="60" pos:column="41">/* We are in a divided circular buffer at the physical
					 * end with room to wrap to the start.  If iconv() refused
					 * to use one or more trailing bytes in the buffer, we
					 * set the size to ignore the unused bytes. */</comment>
					<if pos:line="64" pos:column="41">if <condition pos:line="64" pos:column="44">(<expr><name pos:line="64" pos:column="45">opos<pos:position pos:line="64" pos:column="49"/></name> <operator pos:line="64" pos:column="50">&lt;<pos:position pos:line="64" pos:column="54"/></operator> <name><name pos:line="64" pos:column="52">out<pos:position pos:line="64" pos:column="55"/></name><operator pos:line="64" pos:column="55">-&gt;<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="57">size<pos:position pos:line="64" pos:column="61"/></name></name></expr>)<pos:position pos:line="64" pos:column="62"/></condition><then pos:line="64" pos:column="62">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="49">reduce_iobuf_size<pos:position pos:line="65" pos:column="66"/></name><argument_list pos:line="65" pos:column="66">(<argument><expr><name pos:line="65" pos:column="67">out<pos:position pos:line="65" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="72">opos<pos:position pos:line="65" pos:column="76"/></name></expr></argument>)<pos:position pos:line="65" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="78"/></expr_stmt></block></then></if>
					<expr_stmt><expr><name pos:line="66" pos:column="41">obuf<pos:position pos:line="66" pos:column="45"/></name> <operator pos:line="66" pos:column="46">=<pos:position pos:line="66" pos:column="47"/></operator> <name><name pos:line="66" pos:column="48">out<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">-&gt;<pos:position pos:line="66" pos:column="56"/></operator><name pos:line="66" pos:column="53">buf<pos:position pos:line="66" pos:column="56"/></name></name></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
					<expr_stmt><expr><name pos:line="67" pos:column="41">ocnt<pos:position pos:line="67" pos:column="45"/></name> <operator pos:line="67" pos:column="46">=<pos:position pos:line="67" pos:column="47"/></operator> <name><name pos:line="67" pos:column="48">out<pos:position pos:line="67" pos:column="51"/></name><operator pos:line="67" pos:column="51">-&gt;<pos:position pos:line="67" pos:column="56"/></operator><name pos:line="67" pos:column="53">pos<pos:position pos:line="67" pos:column="56"/></name></name> <operator pos:line="67" pos:column="57">-<pos:position pos:line="67" pos:column="58"/></operator> <literal type="number" pos:line="67" pos:column="59">1<pos:position pos:line="67" pos:column="60"/></literal></expr>;<pos:position pos:line="67" pos:column="61"/></expr_stmt>
					<continue pos:line="68" pos:column="41">continue;<pos:position pos:line="68" pos:column="50"/></continue>
				}<pos:position pos:line="69" pos:column="34"/></block></then></if>
				<if pos:line="70" pos:column="33">if <condition pos:line="70" pos:column="36">(<expr><operator pos:line="70" pos:column="37">!<pos:position pos:line="70" pos:column="38"/></operator><operator pos:line="70" pos:column="38">(<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="39">flags<pos:position pos:line="70" pos:column="44"/></name> <operator pos:line="70" pos:column="45">&amp;<pos:position pos:line="70" pos:column="50"/></operator> <name pos:line="70" pos:column="47">ICB_EXPAND_OUT<pos:position pos:line="70" pos:column="61"/></name><operator pos:line="70" pos:column="61">)<pos:position pos:line="70" pos:column="62"/></operator> <operator pos:line="70" pos:column="63">||<pos:position pos:line="70" pos:column="65"/></operator> <name pos:line="70" pos:column="66">flags<pos:position pos:line="70" pos:column="71"/></name> <operator pos:line="70" pos:column="72">&amp;<pos:position pos:line="70" pos:column="77"/></operator> <name pos:line="70" pos:column="74">ICB_CIRCULAR_OUT<pos:position pos:line="70" pos:column="90"/></name></expr>)<pos:position pos:line="70" pos:column="91"/></condition><then pos:line="70" pos:column="91"> <block pos:line="70" pos:column="92">{
					<expr_stmt><expr><name pos:line="71" pos:column="41">errno<pos:position pos:line="71" pos:column="46"/></name> <operator pos:line="71" pos:column="47">=<pos:position pos:line="71" pos:column="48"/></operator> <name pos:line="71" pos:column="49">E2BIG<pos:position pos:line="71" pos:column="54"/></name></expr>;<pos:position pos:line="71" pos:column="55"/></expr_stmt>
					<goto pos:line="72" pos:column="41">goto <name pos:line="72" pos:column="46">finish<pos:position pos:line="72" pos:column="52"/></name>;<pos:position pos:line="72" pos:column="53"/></goto>
				}<pos:position pos:line="73" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name pos:line="74" pos:column="33">siz<pos:position pos:line="74" pos:column="36"/></name> <operator pos:line="74" pos:column="37">=<pos:position pos:line="74" pos:column="38"/></operator> <call><name pos:line="74" pos:column="39">ROUND_UP_1024<pos:position pos:line="74" pos:column="52"/></name><argument_list pos:line="74" pos:column="52">(<argument><expr><name><name pos:line="74" pos:column="53">in<pos:position pos:line="74" pos:column="55"/></name><operator pos:line="74" pos:column="55">-&gt;<pos:position pos:line="74" pos:column="60"/></operator><name pos:line="74" pos:column="57">len<pos:position pos:line="74" pos:column="60"/></name></name> <operator pos:line="74" pos:column="61">*<pos:position pos:line="74" pos:column="62"/></operator> <literal type="number" pos:line="74" pos:column="63">2<pos:position pos:line="74" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="75" pos:column="33">realloc_xbuf<pos:position pos:line="75" pos:column="45"/></name><argument_list pos:line="75" pos:column="45">(<argument><expr><name pos:line="75" pos:column="46">out<pos:position pos:line="75" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="51">out<pos:position pos:line="75" pos:column="54"/></name><operator pos:line="75" pos:column="54">-&gt;<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="56">size<pos:position pos:line="75" pos:column="60"/></name></name> <operator pos:line="75" pos:column="61">+<pos:position pos:line="75" pos:column="62"/></operator> <name pos:line="75" pos:column="63">siz<pos:position pos:line="75" pos:column="66"/></name></expr></argument>)<pos:position pos:line="75" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><name pos:line="76" pos:column="33">obuf<pos:position pos:line="76" pos:column="37"/></name> <operator pos:line="76" pos:column="38">=<pos:position pos:line="76" pos:column="39"/></operator> <name><name pos:line="76" pos:column="40">out<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">-&gt;<pos:position pos:line="76" pos:column="48"/></operator><name pos:line="76" pos:column="45">buf<pos:position pos:line="76" pos:column="48"/></name></name> <operator pos:line="76" pos:column="49">+<pos:position pos:line="76" pos:column="50"/></operator> <name pos:line="76" pos:column="51">opos<pos:position pos:line="76" pos:column="55"/></name></expr>;<pos:position pos:line="76" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="77" pos:column="33">ocnt<pos:position pos:line="77" pos:column="37"/></name> <operator pos:line="77" pos:column="38">+=<pos:position pos:line="77" pos:column="40"/></operator> <name pos:line="77" pos:column="41">siz<pos:position pos:line="77" pos:column="44"/></name></expr>;<pos:position pos:line="77" pos:column="45"/></expr_stmt>
				<continue pos:line="78" pos:column="33">continue;<pos:position pos:line="78" pos:column="42"/></continue>
			}<pos:position pos:line="79" pos:column="26"/></block></then></if></elseif> <else pos:line="79" pos:column="27">else <block pos:line="79" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="80" pos:column="33">rsyserr<pos:position pos:line="80" pos:column="40"/></name><argument_list pos:line="80" pos:column="40">(<argument><expr><name pos:line="80" pos:column="41">FERROR<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="49">errno<pos:position pos:line="80" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="56">"unexpected error from iconv()"<pos:position pos:line="80" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="89"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="81" pos:column="33">exit_cleanup<pos:position pos:line="81" pos:column="45"/></name><argument_list pos:line="81" pos:column="45">(<argument><expr><name pos:line="81" pos:column="46">RERR_UNSUPPORTED<pos:position pos:line="81" pos:column="62"/></name></expr></argument>)<pos:position pos:line="81" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="82" pos:column="26"/></block></else></if>
			<expr_stmt><expr><operator pos:line="83" pos:column="25">*<pos:position pos:line="83" pos:column="26"/></operator><name pos:line="83" pos:column="26">obuf<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">++<pos:position pos:line="83" pos:column="32"/></operator> <operator pos:line="83" pos:column="33">=<pos:position pos:line="83" pos:column="34"/></operator> <operator pos:line="83" pos:column="35">*<pos:position pos:line="83" pos:column="36"/></operator><name pos:line="83" pos:column="36">ibuf<pos:position pos:line="83" pos:column="40"/></name><operator pos:line="83" pos:column="40">++<pos:position pos:line="83" pos:column="42"/></operator></expr>;<pos:position pos:line="83" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="84" pos:column="25">ocnt<pos:position pos:line="84" pos:column="29"/></name><operator pos:line="84" pos:column="29">--<pos:position pos:line="84" pos:column="31"/></operator></expr><operator pos:line="84" pos:column="31">,<pos:position pos:line="84" pos:column="32"/></operator> <expr><name pos:line="84" pos:column="33">icnt<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">--<pos:position pos:line="84" pos:column="39"/></operator></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><operator pos:line="85" pos:column="29">!<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="30">icnt<pos:position pos:line="85" pos:column="34"/></name></expr>)<pos:position pos:line="85" pos:column="35"/></condition><then pos:line="85" pos:column="35">
				<block type="pseudo"><break pos:line="86" pos:column="33">break;<pos:position pos:line="86" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="87" pos:column="18"/></block></while>
	}<pos:position pos:line="88" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="90" pos:column="9">errno<pos:position pos:line="90" pos:column="14"/></name> <operator pos:line="90" pos:column="15">=<pos:position pos:line="90" pos:column="16"/></operator> <literal type="number" pos:line="90" pos:column="17">0<pos:position pos:line="90" pos:column="18"/></literal></expr>;<pos:position pos:line="90" pos:column="19"/></expr_stmt>

  <label><name pos:line="92" pos:column="3">finish<pos:position pos:line="92" pos:column="9"/></name>:<pos:position pos:line="92" pos:column="10"/></label>
	<expr_stmt><expr><name pos:line="93" pos:column="9">opos<pos:position pos:line="93" pos:column="13"/></name> <operator pos:line="93" pos:column="14">=<pos:position pos:line="93" pos:column="15"/></operator> <name pos:line="93" pos:column="16">obuf<pos:position pos:line="93" pos:column="20"/></name> <operator pos:line="93" pos:column="21">-<pos:position pos:line="93" pos:column="22"/></operator> <name><name pos:line="93" pos:column="23">out<pos:position pos:line="93" pos:column="26"/></name><operator pos:line="93" pos:column="26">-&gt;<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="28">buf<pos:position pos:line="93" pos:column="31"/></name></name></expr>;<pos:position pos:line="93" pos:column="32"/></expr_stmt>
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">flags<pos:position pos:line="94" pos:column="18"/></name> <operator pos:line="94" pos:column="19">&amp;<pos:position pos:line="94" pos:column="24"/></operator> <name pos:line="94" pos:column="21">ICB_CIRCULAR_OUT<pos:position pos:line="94" pos:column="37"/></name> <operator pos:line="94" pos:column="38">&amp;&amp;<pos:position pos:line="94" pos:column="48"/></operator> <name pos:line="94" pos:column="41">opos<pos:position pos:line="94" pos:column="45"/></name> <operator pos:line="94" pos:column="46">&lt;<pos:position pos:line="94" pos:column="50"/></operator> <name><name pos:line="94" pos:column="48">out<pos:position pos:line="94" pos:column="51"/></name><operator pos:line="94" pos:column="51">-&gt;<pos:position pos:line="94" pos:column="56"/></operator><name pos:line="94" pos:column="53">pos<pos:position pos:line="94" pos:column="56"/></name></name></expr>)<pos:position pos:line="94" pos:column="57"/></condition><then pos:line="94" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="17">opos<pos:position pos:line="95" pos:column="21"/></name> <operator pos:line="95" pos:column="22">+=<pos:position pos:line="95" pos:column="24"/></operator> <name><name pos:line="95" pos:column="25">out<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">-&gt;<pos:position pos:line="95" pos:column="33"/></operator><name pos:line="95" pos:column="30">size<pos:position pos:line="95" pos:column="34"/></name></name></expr>;<pos:position pos:line="95" pos:column="35"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="96" pos:column="9">out<pos:position pos:line="96" pos:column="12"/></name><operator pos:line="96" pos:column="12">-&gt;<pos:position pos:line="96" pos:column="17"/></operator><name pos:line="96" pos:column="14">len<pos:position pos:line="96" pos:column="17"/></name></name> <operator pos:line="96" pos:column="18">=<pos:position pos:line="96" pos:column="19"/></operator> <name pos:line="96" pos:column="20">opos<pos:position pos:line="96" pos:column="24"/></name> <operator pos:line="96" pos:column="25">-<pos:position pos:line="96" pos:column="26"/></operator> <name><name pos:line="96" pos:column="27">out<pos:position pos:line="96" pos:column="30"/></name><operator pos:line="96" pos:column="30">-&gt;<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="32">pos<pos:position pos:line="96" pos:column="35"/></name></name></expr>;<pos:position pos:line="96" pos:column="36"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="98" pos:column="9">in<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">len<pos:position pos:line="98" pos:column="16"/></name></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <name pos:line="98" pos:column="19">icnt<pos:position pos:line="98" pos:column="23"/></name></expr>;<pos:position pos:line="98" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="99" pos:column="9">in<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">-&gt;<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="13">pos<pos:position pos:line="99" pos:column="16"/></name></name> <operator pos:line="99" pos:column="17">=<pos:position pos:line="99" pos:column="18"/></operator> <name pos:line="99" pos:column="19">ibuf<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">-<pos:position pos:line="99" pos:column="25"/></operator> <name><name pos:line="99" pos:column="26">in<pos:position pos:line="99" pos:column="28"/></name><operator pos:line="99" pos:column="28">-&gt;<pos:position pos:line="99" pos:column="33"/></operator><name pos:line="99" pos:column="30">buf<pos:position pos:line="99" pos:column="33"/></name></name></expr>;<pos:position pos:line="99" pos:column="34"/></expr_stmt>

	<return pos:line="101" pos:column="9">return <expr><ternary><condition><expr><name pos:line="101" pos:column="16">errno<pos:position pos:line="101" pos:column="21"/></name></expr> ?<pos:position pos:line="101" pos:column="23"/></condition><then pos:line="101" pos:column="23"> <expr><operator pos:line="101" pos:column="24">-<pos:position pos:line="101" pos:column="25"/></operator><literal type="number" pos:line="101" pos:column="25">1<pos:position pos:line="101" pos:column="26"/></literal></expr> <pos:position pos:line="101" pos:column="27"/></then><else pos:line="101" pos:column="27">: <expr><literal type="number" pos:line="101" pos:column="29">0<pos:position pos:line="101" pos:column="30"/></literal></expr></else></ternary></expr>;<pos:position pos:line="101" pos:column="31"/></return>
}<pos:position pos:line="102" pos:column="2"/></block></function></unit>

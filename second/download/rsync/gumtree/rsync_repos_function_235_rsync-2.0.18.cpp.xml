<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_235_rsync-2.0.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">start_client<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">argc<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name><index pos:line="1" pos:column="45">[]<pos:position pos:line="1" pos:column="47"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">p<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">shell_machine<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">shell_path<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">shell_user<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">pid<pos:position pos:line="7" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="18">ret<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">f_in<pos:position pos:line="8" pos:column="17"/></name></decl>,<decl><type ref="prev"/><name pos:line="8" pos:column="18">f_out<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">extern<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">int<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">local_server<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">extern<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">int<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">am_sender<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">extern<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name pos:line="11" pos:column="22">shell_cmd<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">p<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">strchr<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name><name pos:line="13" pos:column="20">argv<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr>]<pos:position pos:line="13" pos:column="27"/></index></name></expr></argument>,<argument><expr><literal type="char" pos:line="13" pos:column="28">':'<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">p<pos:position pos:line="15" pos:column="14"/></name></expr>)<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15"> <block pos:line="15" pos:column="16">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name><name pos:line="16" pos:column="21">p<pos:position pos:line="16" pos:column="22"/></name><index pos:line="16" pos:column="22">[<expr><literal type="number" pos:line="16" pos:column="23">1<pos:position pos:line="16" pos:column="24"/></literal></expr>]<pos:position pos:line="16" pos:column="25"/></index></name> <operator pos:line="16" pos:column="26">==<pos:position pos:line="16" pos:column="28"/></operator> <literal type="char" pos:line="16" pos:column="29">':'<pos:position pos:line="16" pos:column="32"/></literal></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33"> <block pos:line="16" pos:column="34">{
			<expr_stmt><expr><operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">p<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
			<return pos:line="18" pos:column="25">return <expr><call><name pos:line="18" pos:column="32">start_socket_client<pos:position pos:line="18" pos:column="51"/></name><argument_list pos:line="18" pos:column="51">(<argument><expr><name><name pos:line="18" pos:column="52">argv<pos:position pos:line="18" pos:column="56"/></name><index pos:line="18" pos:column="56">[<expr><literal type="number" pos:line="18" pos:column="57">0<pos:position pos:line="18" pos:column="58"/></literal></expr>]<pos:position pos:line="18" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">p<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">+<pos:position pos:line="18" pos:column="63"/></operator><literal type="number" pos:line="18" pos:column="63">2<pos:position pos:line="18" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="66">argc<pos:position pos:line="18" pos:column="70"/></name><operator pos:line="18" pos:column="70">-<pos:position pos:line="18" pos:column="71"/></operator><literal type="number" pos:line="18" pos:column="71">1<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="74">argv<pos:position pos:line="18" pos:column="78"/></name><operator pos:line="18" pos:column="78">+<pos:position pos:line="18" pos:column="79"/></operator><literal type="number" pos:line="18" pos:column="79">1<pos:position pos:line="18" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="82"/></return>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>

		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">argc<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">&lt;<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="28">2<pos:position pos:line="21" pos:column="29"/></literal></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">usage<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">FERROR<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">exit_cleanup<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><literal type="number" pos:line="23" pos:column="38">1<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="26" pos:column="17">am_sender<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <literal type="number" pos:line="26" pos:column="29">0<pos:position pos:line="26" pos:column="30"/></literal></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">p<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="22">0<pos:position pos:line="27" pos:column="23"/></literal></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">shell_machine<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <name><name pos:line="28" pos:column="33">argv<pos:position pos:line="28" pos:column="37"/></name><index pos:line="28" pos:column="37">[<expr><literal type="number" pos:line="28" pos:column="38">0<pos:position pos:line="28" pos:column="39"/></literal></expr>]<pos:position pos:line="28" pos:column="40"/></index></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">shell_path<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">p<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">+<pos:position pos:line="29" pos:column="32"/></operator><literal type="number" pos:line="29" pos:column="32">1<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">argc<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">--<pos:position pos:line="30" pos:column="23"/></operator></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">argv<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">++<pos:position pos:line="31" pos:column="23"/></operator></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
		<expr_stmt><expr><name pos:line="33" pos:column="17">am_sender<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <literal type="number" pos:line="33" pos:column="29">1<pos:position pos:line="33" pos:column="30"/></literal></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>

		<expr_stmt><expr><name pos:line="35" pos:column="17">p<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">strchr<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name><name pos:line="35" pos:column="28">argv<pos:position pos:line="35" pos:column="32"/></name><index pos:line="35" pos:column="32">[<expr><name pos:line="35" pos:column="33">argc<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-<pos:position pos:line="35" pos:column="38"/></operator><literal type="number" pos:line="35" pos:column="38">1<pos:position pos:line="35" pos:column="39"/></literal></expr>]<pos:position pos:line="35" pos:column="40"/></index></name></expr></argument>,<argument><expr><literal type="char" pos:line="35" pos:column="41">':'<pos:position pos:line="35" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">p<pos:position pos:line="36" pos:column="23"/></name></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24"> <block pos:line="36" pos:column="25">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">local_server<pos:position pos:line="37" pos:column="37"/></name> <operator pos:line="37" pos:column="38">=<pos:position pos:line="37" pos:column="39"/></operator> <literal type="number" pos:line="37" pos:column="40">1<pos:position pos:line="37" pos:column="41"/></literal></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <elseif pos:line="38" pos:column="19">else <if pos:line="38" pos:column="24">if <condition pos:line="38" pos:column="27">(<expr><name><name pos:line="38" pos:column="28">p<pos:position pos:line="38" pos:column="29"/></name><index pos:line="38" pos:column="29">[<expr><literal type="number" pos:line="38" pos:column="30">1<pos:position pos:line="38" pos:column="31"/></literal></expr>]<pos:position pos:line="38" pos:column="32"/></index></name> <operator pos:line="38" pos:column="33">==<pos:position pos:line="38" pos:column="35"/></operator> <literal type="char" pos:line="38" pos:column="36">':'<pos:position pos:line="38" pos:column="39"/></literal></expr>)<pos:position pos:line="38" pos:column="40"/></condition><then pos:line="38" pos:column="40"> <block pos:line="38" pos:column="41">{
			<expr_stmt><expr><operator pos:line="39" pos:column="25">*<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">p<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <literal type="number" pos:line="39" pos:column="30">0<pos:position pos:line="39" pos:column="31"/></literal></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
			<return pos:line="40" pos:column="25">return <expr><call><name pos:line="40" pos:column="32">start_socket_client<pos:position pos:line="40" pos:column="51"/></name><argument_list pos:line="40" pos:column="51">(<argument><expr><name><name pos:line="40" pos:column="52">argv<pos:position pos:line="40" pos:column="56"/></name><index pos:line="40" pos:column="56">[<expr><name pos:line="40" pos:column="57">argc<pos:position pos:line="40" pos:column="61"/></name><operator pos:line="40" pos:column="61">-<pos:position pos:line="40" pos:column="62"/></operator><literal type="number" pos:line="40" pos:column="62">1<pos:position pos:line="40" pos:column="63"/></literal></expr>]<pos:position pos:line="40" pos:column="64"/></index></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="66">p<pos:position pos:line="40" pos:column="67"/></name><operator pos:line="40" pos:column="67">+<pos:position pos:line="40" pos:column="68"/></operator><literal type="number" pos:line="40" pos:column="68">2<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="71">argc<pos:position pos:line="40" pos:column="75"/></name><operator pos:line="40" pos:column="75">-<pos:position pos:line="40" pos:column="76"/></operator><literal type="number" pos:line="40" pos:column="76">1<pos:position pos:line="40" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="79">argv<pos:position pos:line="40" pos:column="83"/></name></expr></argument>)<pos:position pos:line="40" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="85"/></return>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">argc<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">&lt;<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="28">2<pos:position pos:line="43" pos:column="29"/></literal></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30"> <block pos:line="43" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">usage<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">FERROR<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">exit_cleanup<pos:position pos:line="45" pos:column="37"/></name><argument_list pos:line="45" pos:column="37">(<argument><expr><literal type="number" pos:line="45" pos:column="38">1<pos:position pos:line="45" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>
		
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">local_server<pos:position pos:line="48" pos:column="33"/></name></expr>)<pos:position pos:line="48" pos:column="34"/></condition><then pos:line="48" pos:column="34"> <block pos:line="48" pos:column="35">{
			<expr_stmt><expr><name pos:line="49" pos:column="25">shell_machine<pos:position pos:line="49" pos:column="38"/></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <name pos:line="49" pos:column="41">NULL<pos:position pos:line="49" pos:column="45"/></name></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="50" pos:column="25">shell_path<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <name><name pos:line="50" pos:column="38">argv<pos:position pos:line="50" pos:column="42"/></name><index pos:line="50" pos:column="42">[<expr><name pos:line="50" pos:column="43">argc<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">-<pos:position pos:line="50" pos:column="48"/></operator><literal type="number" pos:line="50" pos:column="48">1<pos:position pos:line="50" pos:column="49"/></literal></expr>]<pos:position pos:line="50" pos:column="50"/></index></name></expr>;<pos:position pos:line="50" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then> <else pos:line="51" pos:column="19">else <block pos:line="51" pos:column="24">{
			<expr_stmt><expr><operator pos:line="52" pos:column="25">*<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">p<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="30">0<pos:position pos:line="52" pos:column="31"/></literal></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="53" pos:column="25">shell_machine<pos:position pos:line="53" pos:column="38"/></name> <operator pos:line="53" pos:column="39">=<pos:position pos:line="53" pos:column="40"/></operator> <name><name pos:line="53" pos:column="41">argv<pos:position pos:line="53" pos:column="45"/></name><index pos:line="53" pos:column="45">[<expr><name pos:line="53" pos:column="46">argc<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">-<pos:position pos:line="53" pos:column="51"/></operator><literal type="number" pos:line="53" pos:column="51">1<pos:position pos:line="53" pos:column="52"/></literal></expr>]<pos:position pos:line="53" pos:column="53"/></index></name></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="54" pos:column="25">shell_path<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">=<pos:position pos:line="54" pos:column="37"/></operator> <name pos:line="54" pos:column="38">p<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">+<pos:position pos:line="54" pos:column="40"/></operator><literal type="number" pos:line="54" pos:column="40">1<pos:position pos:line="54" pos:column="41"/></literal></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="56" pos:column="17">argc<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">--<pos:position pos:line="56" pos:column="23"/></operator></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="57" pos:column="10"/></block></else></if>
	
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">shell_machine<pos:position pos:line="59" pos:column="26"/></name></expr>)<pos:position pos:line="59" pos:column="27"/></condition><then pos:line="59" pos:column="27"> <block pos:line="59" pos:column="28">{
		<expr_stmt><expr><name pos:line="60" pos:column="17">p<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <call><name pos:line="60" pos:column="21">strchr<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">shell_machine<pos:position pos:line="60" pos:column="41"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="60" pos:column="42">'@'<pos:position pos:line="60" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="47"/></expr_stmt>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">p<pos:position pos:line="61" pos:column="22"/></name></expr>)<pos:position pos:line="61" pos:column="23"/></condition><then pos:line="61" pos:column="23"> <block pos:line="61" pos:column="24">{
			<expr_stmt><expr><operator pos:line="62" pos:column="25">*<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">p<pos:position pos:line="62" pos:column="27"/></name> <operator pos:line="62" pos:column="28">=<pos:position pos:line="62" pos:column="29"/></operator> <literal type="number" pos:line="62" pos:column="30">0<pos:position pos:line="62" pos:column="31"/></literal></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="63" pos:column="25">shell_user<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <name pos:line="63" pos:column="38">shell_machine<pos:position pos:line="63" pos:column="51"/></name></expr>;<pos:position pos:line="63" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="64" pos:column="25">shell_machine<pos:position pos:line="64" pos:column="38"/></name> <operator pos:line="64" pos:column="39">=<pos:position pos:line="64" pos:column="40"/></operator> <name pos:line="64" pos:column="41">p<pos:position pos:line="64" pos:column="42"/></name><operator pos:line="64" pos:column="42">+<pos:position pos:line="64" pos:column="43"/></operator><literal type="number" pos:line="64" pos:column="43">1<pos:position pos:line="64" pos:column="44"/></literal></expr>;<pos:position pos:line="64" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">verbose<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">&gt;<pos:position pos:line="68" pos:column="25"/></operator> <literal type="number" pos:line="68" pos:column="23">3<pos:position pos:line="68" pos:column="24"/></literal></expr>)<pos:position pos:line="68" pos:column="25"/></condition><then pos:line="68" pos:column="25"> <block pos:line="68" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">rprintf<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">FINFO<pos:position pos:line="69" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="69" pos:column="31">"cmd=%s machine=%s user=%s path=%s\n"<pos:position pos:line="69" pos:column="68"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="70" pos:column="25">shell_cmd<pos:position pos:line="70" pos:column="34"/></name></expr>?<pos:position pos:line="70" pos:column="35"/></condition><then><expr><name pos:line="70" pos:column="35">shell_cmd<pos:position pos:line="70" pos:column="44"/></name></expr></then><else pos:line="70" pos:column="44">:<expr><literal type="string" pos:line="70" pos:column="45">""<pos:position pos:line="70" pos:column="47"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="71" pos:column="25">shell_machine<pos:position pos:line="71" pos:column="38"/></name></expr>?<pos:position pos:line="71" pos:column="39"/></condition><then><expr><name pos:line="71" pos:column="39">shell_machine<pos:position pos:line="71" pos:column="52"/></name></expr></then><else pos:line="71" pos:column="52">:<expr><literal type="string" pos:line="71" pos:column="53">""<pos:position pos:line="71" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="72" pos:column="25">shell_user<pos:position pos:line="72" pos:column="35"/></name></expr>?<pos:position pos:line="72" pos:column="36"/></condition><then><expr><name pos:line="72" pos:column="36">shell_user<pos:position pos:line="72" pos:column="46"/></name></expr></then><else pos:line="72" pos:column="46">:<expr><literal type="string" pos:line="72" pos:column="47">""<pos:position pos:line="72" pos:column="49"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="73" pos:column="25">shell_path<pos:position pos:line="73" pos:column="35"/></name></expr>?<pos:position pos:line="73" pos:column="36"/></condition><then><expr><name pos:line="73" pos:column="36">shell_path<pos:position pos:line="73" pos:column="46"/></name></expr></then><else pos:line="73" pos:column="46">:<expr><literal type="string" pos:line="73" pos:column="47">""<pos:position pos:line="73" pos:column="49"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if>
	
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><operator pos:line="76" pos:column="13">!<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">am_sender<pos:position pos:line="76" pos:column="23"/></name> <operator pos:line="76" pos:column="24">&amp;&amp;<pos:position pos:line="76" pos:column="34"/></operator> <name pos:line="76" pos:column="27">argc<pos:position pos:line="76" pos:column="31"/></name> <operator pos:line="76" pos:column="32">!=<pos:position pos:line="76" pos:column="34"/></operator> <literal type="number" pos:line="76" pos:column="35">1<pos:position pos:line="76" pos:column="36"/></literal></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37"> <block pos:line="76" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">usage<pos:position pos:line="77" pos:column="22"/></name><argument_list pos:line="77" pos:column="22">(<argument><expr><name pos:line="77" pos:column="23">FERROR<pos:position pos:line="77" pos:column="29"/></name></expr></argument>)<pos:position pos:line="77" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">exit_cleanup<pos:position pos:line="78" pos:column="29"/></name><argument_list pos:line="78" pos:column="29">(<argument><expr><literal type="number" pos:line="78" pos:column="30">1<pos:position pos:line="78" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="79" pos:column="10"/></block></then></if>
	
	<expr_stmt><expr><name pos:line="81" pos:column="9">pid<pos:position pos:line="81" pos:column="12"/></name> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <call><name pos:line="81" pos:column="15">do_cmd<pos:position pos:line="81" pos:column="21"/></name><argument_list pos:line="81" pos:column="21">(<argument><expr><name pos:line="81" pos:column="22">shell_cmd<pos:position pos:line="81" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="81" pos:column="32">shell_machine<pos:position pos:line="81" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="81" pos:column="46">shell_user<pos:position pos:line="81" pos:column="56"/></name></expr></argument>,<argument><expr><name pos:line="81" pos:column="57">shell_path<pos:position pos:line="81" pos:column="67"/></name></expr></argument>,<argument><expr><operator pos:line="81" pos:column="68">&amp;<pos:position pos:line="81" pos:column="73"/></operator><name pos:line="81" pos:column="69">f_in<pos:position pos:line="81" pos:column="73"/></name></expr></argument>,<argument><expr><operator pos:line="81" pos:column="74">&amp;<pos:position pos:line="81" pos:column="79"/></operator><name pos:line="81" pos:column="75">f_out<pos:position pos:line="81" pos:column="80"/></name></expr></argument>)<pos:position pos:line="81" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="82"/></expr_stmt>
	
<cpp:if pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">if<pos:position pos:line="83" pos:column="4"/></cpp:directive> <expr><name pos:line="83" pos:column="5">HAVE_SETLINEBUF<pos:position pos:line="83" pos:column="20"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="84" pos:column="9">setlinebuf<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">stdout<pos:position pos:line="84" pos:column="26"/></name></expr></argument>)<pos:position pos:line="84" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">setlinebuf<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><name pos:line="85" pos:column="20">stderr<pos:position pos:line="85" pos:column="26"/></name></expr></argument>)<pos:position pos:line="85" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif<pos:position pos:line="86" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="88" pos:column="9">ret<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">=<pos:position pos:line="88" pos:column="14"/></operator> <call><name pos:line="88" pos:column="15">client_run<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">f_in<pos:position pos:line="88" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="32">f_out<pos:position pos:line="88" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">pid<pos:position pos:line="88" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="44">argc<pos:position pos:line="88" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">argv<pos:position pos:line="88" pos:column="54"/></name></expr></argument>)<pos:position pos:line="88" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="56"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="90" pos:column="9">fflush<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><name pos:line="90" pos:column="16">stdout<pos:position pos:line="90" pos:column="22"/></name></expr></argument>)<pos:position pos:line="90" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">fflush<pos:position pos:line="91" pos:column="15"/></name><argument_list pos:line="91" pos:column="15">(<argument><expr><name pos:line="91" pos:column="16">stderr<pos:position pos:line="91" pos:column="22"/></name></expr></argument>)<pos:position pos:line="91" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="24"/></expr_stmt>

	<return pos:line="93" pos:column="9">return <expr><name pos:line="93" pos:column="16">ret<pos:position pos:line="93" pos:column="19"/></name></expr>;<pos:position pos:line="93" pos:column="20"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_541_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">send_extra_file_list<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">f<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">at_least<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">file_list<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">flist<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int64<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">start_write<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint16<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">prev_flags<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">save_io_error<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">io_error<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">flist_eof<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
		<block type="pseudo"><return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">at_least<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">&lt;<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">at_least<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">file_total<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">-<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">file_old_total<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">+<pos:position pos:line="12" pos:column="57"/></operator> <literal type="number" pos:line="12" pos:column="58">1<pos:position pos:line="12" pos:column="59"/></literal></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="14" pos:column="9">/* Keep sending data until we have the requested number of
	 * files in the upcoming file-lists. */</comment>
	<while pos:line="16" pos:column="9">while <condition pos:line="16" pos:column="15">(<expr><name pos:line="16" pos:column="16">file_total<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">-<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">file_old_total<pos:position pos:line="16" pos:column="43"/></name> <operator pos:line="16" pos:column="44">&lt;<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="46">at_least<pos:position pos:line="16" pos:column="54"/></name></expr>)<pos:position pos:line="16" pos:column="55"/></condition> <block pos:line="16" pos:column="56">{
		<decl_stmt><decl><type><name><name pos:line="17" pos:column="17">struct<pos:position pos:line="17" pos:column="23"/></name> <name pos:line="17" pos:column="24">file_struct<pos:position pos:line="17" pos:column="35"/></name></name> <modifier pos:line="17" pos:column="36">*<pos:position pos:line="17" pos:column="37"/></modifier></type><name pos:line="17" pos:column="37">file<pos:position pos:line="17" pos:column="41"/></name> <init pos:line="17" pos:column="42">= <expr><name><name pos:line="17" pos:column="44">dir_flist<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">sorted<pos:position pos:line="17" pos:column="61"/></name><index pos:line="17" pos:column="61">[<expr><name pos:line="17" pos:column="62">send_dir_ndx<pos:position pos:line="17" pos:column="74"/></name></expr>]<pos:position pos:line="17" pos:column="75"/></index></name></expr></init></decl>;<pos:position pos:line="17" pos:column="76"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">int<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">dir_ndx<pos:position pos:line="18" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="30">dstart<pos:position pos:line="18" pos:column="36"/></name> <init pos:line="18" pos:column="37">= <expr><name><name pos:line="18" pos:column="39">stats<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">num_dirs<pos:position pos:line="18" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="19" pos:column="17">const<pos:position pos:line="19" pos:column="22"/></specifier> <name pos:line="19" pos:column="23">char<pos:position pos:line="19" pos:column="27"/></name> <modifier pos:line="19" pos:column="28">*<pos:position pos:line="19" pos:column="29"/></modifier></type><name pos:line="19" pos:column="29">pathname<pos:position pos:line="19" pos:column="37"/></name> <init pos:line="19" pos:column="38">= <expr><call><name pos:line="19" pos:column="40">F_PATHNAME<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">file<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="57"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">int32<pos:position pos:line="20" pos:column="22"/></name> <modifier pos:line="20" pos:column="23">*<pos:position pos:line="20" pos:column="24"/></modifier></type><name pos:line="20" pos:column="24">dp<pos:position pos:line="20" pos:column="26"/></name></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>

		<expr_stmt><expr><name pos:line="22" pos:column="17">flist<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">flist_new<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="38">"send_extra_file_list"<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">start_write<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name><name pos:line="23" pos:column="31">stats<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">.<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">total_written<pos:position pos:line="23" pos:column="50"/></name></name></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">unsort_ndx<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">dir_ndx<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <call><name pos:line="26" pos:column="35">F_NDX<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">file<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt></block></then>
		<else pos:line="27" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">dir_ndx<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">send_dir_ndx<pos:position pos:line="28" pos:column="47"/></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">write_ndx<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">f<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">NDX_FLIST_OFFSET<pos:position pos:line="29" pos:column="46"/></name> <operator pos:line="29" pos:column="47">-<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="49">dir_ndx<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">flist<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">parent_ndx<pos:position pos:line="30" pos:column="34"/></name></name> <operator pos:line="30" pos:column="35">=<pos:position pos:line="30" pos:column="36"/></operator> <name pos:line="30" pos:column="37">dir_ndx<pos:position pos:line="30" pos:column="44"/></name></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="32" pos:column="17">send1extra<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">f<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">file<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">flist<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">prev_flags<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <name><name pos:line="33" pos:column="30">file<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">-&gt;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="36">flags<pos:position pos:line="33" pos:column="41"/></name></name></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">dp<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <call><name pos:line="34" pos:column="22">F_DIR_NODE_P<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">file<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>

		<comment type="block" pos:line="36" pos:column="17">/* If there are any duplicate directory names that follow, we
		 * send all the dirs together in one file-list.  The dir_flist
		 * tree links all the child subdirs onto the last dup dir. */</comment>
		<while pos:line="39" pos:column="17">while <condition pos:line="39" pos:column="23">(<expr><operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="25">dir_ndx<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <call><name pos:line="39" pos:column="35">DIR_NEXT_SIBLING<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">(<argument><expr><name pos:line="39" pos:column="52">dp<pos:position pos:line="39" pos:column="54"/></name></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call><operator pos:line="39" pos:column="55">)<pos:position pos:line="39" pos:column="56"/></operator> <operator pos:line="39" pos:column="57">&gt;=<pos:position pos:line="39" pos:column="62"/></operator> <literal type="number" pos:line="39" pos:column="60">0<pos:position pos:line="39" pos:column="61"/></literal>
		    <operator pos:line="40" pos:column="21">&amp;&amp;<pos:position pos:line="40" pos:column="31"/></operator> <name><name pos:line="40" pos:column="24">dir_flist<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">sorted<pos:position pos:line="40" pos:column="41"/></name><index pos:line="40" pos:column="41">[<expr><name pos:line="40" pos:column="42">dir_ndx<pos:position pos:line="40" pos:column="49"/></name></expr>]<pos:position pos:line="40" pos:column="50"/></index></name><operator pos:line="40" pos:column="50">-&gt;<pos:position pos:line="40" pos:column="55"/></operator><name pos:line="40" pos:column="52">flags<pos:position pos:line="40" pos:column="57"/></name> <operator pos:line="40" pos:column="58">&amp;<pos:position pos:line="40" pos:column="63"/></operator> <name pos:line="40" pos:column="60">FLAG_DUPLICATE<pos:position pos:line="40" pos:column="74"/></name></expr>)<pos:position pos:line="40" pos:column="75"/></condition> <block pos:line="40" pos:column="76">{
			<expr_stmt><expr><name pos:line="41" pos:column="25">send_dir_ndx<pos:position pos:line="41" pos:column="37"/></name> <operator pos:line="41" pos:column="38">=<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">dir_ndx<pos:position pos:line="41" pos:column="47"/></name></expr>;<pos:position pos:line="41" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">file<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <name><name pos:line="42" pos:column="32">dir_flist<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">sorted<pos:position pos:line="42" pos:column="49"/></name><index pos:line="42" pos:column="49">[<expr><name pos:line="42" pos:column="50">dir_ndx<pos:position pos:line="42" pos:column="57"/></name></expr>]<pos:position pos:line="42" pos:column="58"/></index></name></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
			<comment type="block" pos:line="43" pos:column="25">/* Try to avoid some duplicate scanning of identical dirs. */</comment>
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><call><name pos:line="44" pos:column="29">F_PATHNAME<pos:position pos:line="44" pos:column="39"/></name><argument_list pos:line="44" pos:column="39">(<argument><expr><name pos:line="44" pos:column="40">file<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call> <operator pos:line="44" pos:column="46">==<pos:position pos:line="44" pos:column="48"/></operator> <name pos:line="44" pos:column="49">pathname<pos:position pos:line="44" pos:column="57"/></name> <operator pos:line="44" pos:column="58">&amp;&amp;<pos:position pos:line="44" pos:column="68"/></operator> <name pos:line="44" pos:column="61">prev_flags<pos:position pos:line="44" pos:column="71"/></name> <operator pos:line="44" pos:column="72">&amp;<pos:position pos:line="44" pos:column="77"/></operator> <name pos:line="44" pos:column="74">FLAG_CONTENT_DIR<pos:position pos:line="44" pos:column="90"/></name></expr>)<pos:position pos:line="44" pos:column="91"/></condition><then pos:line="44" pos:column="91">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="33">file<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">flags<pos:position pos:line="45" pos:column="44"/></name></name> <operator pos:line="45" pos:column="45">&amp;=<pos:position pos:line="45" pos:column="51"/></operator> <operator pos:line="45" pos:column="48">~<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="49">FLAG_CONTENT_DIR<pos:position pos:line="45" pos:column="65"/></name></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">send1extra<pos:position pos:line="46" pos:column="35"/></name><argument_list pos:line="46" pos:column="35">(<argument><expr><name pos:line="46" pos:column="36">f<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">file<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">flist<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="47" pos:column="25">prev_flags<pos:position pos:line="47" pos:column="35"/></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <name><name pos:line="47" pos:column="38">file<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">flags<pos:position pos:line="47" pos:column="49"/></name></name></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="48" pos:column="25">dp<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <call><name pos:line="48" pos:column="30">F_DIR_NODE_P<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">file<pos:position pos:line="48" pos:column="47"/></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></while>

		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">io_error<pos:position pos:line="51" pos:column="29"/></name> <operator pos:line="51" pos:column="30">==<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">save_io_error<pos:position pos:line="51" pos:column="46"/></name> <operator pos:line="51" pos:column="47">||<pos:position pos:line="51" pos:column="49"/></operator> <name pos:line="51" pos:column="50">ignore_errors<pos:position pos:line="51" pos:column="63"/></name></expr>)<pos:position pos:line="51" pos:column="64"/></condition><then pos:line="51" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="25">write_byte<pos:position pos:line="52" pos:column="35"/></name><argument_list pos:line="52" pos:column="35">(<argument><expr><name pos:line="52" pos:column="36">f<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="39">0<pos:position pos:line="52" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt></block></then>
		<elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><name pos:line="53" pos:column="26">use_safe_inc_flist<pos:position pos:line="53" pos:column="44"/></name></expr>)<pos:position pos:line="53" pos:column="45"/></condition><then pos:line="53" pos:column="45"> <block pos:line="53" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">write_shortint<pos:position pos:line="54" pos:column="39"/></name><argument_list pos:line="54" pos:column="39">(<argument><expr><name pos:line="54" pos:column="40">f<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">XMIT_EXTENDED_FLAGS<pos:position pos:line="54" pos:column="62"/></name><operator pos:line="54" pos:column="62">|<pos:position pos:line="54" pos:column="63"/></operator><name pos:line="54" pos:column="63">XMIT_IO_ERROR_ENDLIST<pos:position pos:line="54" pos:column="84"/></name></expr></argument>)<pos:position pos:line="54" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">write_varint<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">f<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">io_error<pos:position pos:line="55" pos:column="49"/></name></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif> <else pos:line="56" pos:column="19">else <block pos:line="56" pos:column="24">{
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><name pos:line="57" pos:column="29">delete_during<pos:position pos:line="57" pos:column="42"/></name></expr>)<pos:position pos:line="57" pos:column="43"/></condition><then pos:line="57" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="33">fatal_unsafe_io_error<pos:position pos:line="58" pos:column="54"/></name><argument_list pos:line="58" pos:column="54">()<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">write_byte<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">f<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="39">0<pos:position pos:line="59" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></else></if>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><name pos:line="62" pos:column="21">need_unsorted_flist<pos:position pos:line="62" pos:column="40"/></name></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41"> <block pos:line="62" pos:column="42">{
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><operator pos:line="63" pos:column="29">!<pos:position pos:line="63" pos:column="30"/></operator><operator pos:line="63" pos:column="30">(<pos:position pos:line="63" pos:column="31"/></operator><name><name pos:line="63" pos:column="31">flist<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">-&gt;<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="38">sorted<pos:position pos:line="63" pos:column="44"/></name></name> <operator pos:line="63" pos:column="45">=<pos:position pos:line="63" pos:column="46"/></operator> <call><name pos:line="63" pos:column="47">new_array<pos:position pos:line="63" pos:column="56"/></name><argument_list pos:line="63" pos:column="56">(<argument><expr pos:line="63" pos:column="57">struct <name pos:line="63" pos:column="64">file_struct<pos:position pos:line="63" pos:column="75"/></name> <operator pos:line="63" pos:column="76">*<pos:position pos:line="63" pos:column="77"/></operator></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="79">flist<pos:position pos:line="63" pos:column="84"/></name><operator pos:line="63" pos:column="84">-&gt;<pos:position pos:line="63" pos:column="89"/></operator><name pos:line="63" pos:column="86">used<pos:position pos:line="63" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="91"/></argument_list></call><operator pos:line="63" pos:column="91">)<pos:position pos:line="63" pos:column="92"/></operator></expr>)<pos:position pos:line="63" pos:column="93"/></condition><then pos:line="63" pos:column="93">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="33">out_of_memory<pos:position pos:line="64" pos:column="46"/></name><argument_list pos:line="64" pos:column="46">(<argument><expr><literal type="string" pos:line="64" pos:column="47">"send_extra_file_list"<pos:position pos:line="64" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">memcpy<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name><name pos:line="65" pos:column="32">flist<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-&gt;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="39">sorted<pos:position pos:line="65" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="47">flist<pos:position pos:line="65" pos:column="52"/></name><operator pos:line="65" pos:column="52">-&gt;<pos:position pos:line="65" pos:column="57"/></operator><name pos:line="65" pos:column="54">files<pos:position pos:line="65" pos:column="59"/></name></name></expr></argument>,
			       <argument><expr><name><name pos:line="66" pos:column="32">flist<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">-&gt;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="39">used<pos:position pos:line="66" pos:column="43"/></name></name> <operator pos:line="66" pos:column="44">*<pos:position pos:line="66" pos:column="45"/></operator> <sizeof pos:line="66" pos:column="46">sizeof <argument_list pos:line="66" pos:column="53">(<argument><expr pos:line="66" pos:column="54">struct <name pos:line="66" pos:column="61">file_struct<pos:position pos:line="66" pos:column="72"/></name><operator pos:line="66" pos:column="72">*<pos:position pos:line="66" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="67" pos:column="18"/></block></then> <else pos:line="67" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="25">flist<pos:position pos:line="68" pos:column="30"/></name><operator pos:line="68" pos:column="30">-&gt;<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="32">sorted<pos:position pos:line="68" pos:column="38"/></name></name> <operator pos:line="68" pos:column="39">=<pos:position pos:line="68" pos:column="40"/></operator> <name><name pos:line="68" pos:column="41">flist<pos:position pos:line="68" pos:column="46"/></name><operator pos:line="68" pos:column="46">-&gt;<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="48">files<pos:position pos:line="68" pos:column="53"/></name></name></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt></block></else></if>

		<expr_stmt><expr><call><name pos:line="70" pos:column="17">flist_sort_and_clean<pos:position pos:line="70" pos:column="37"/></name><argument_list pos:line="70" pos:column="37">(<argument><expr><name pos:line="70" pos:column="38">flist<pos:position pos:line="70" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="45">0<pos:position pos:line="70" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="48"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="72" pos:column="17">add_dirs_to_tree<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">(<argument><expr><name pos:line="72" pos:column="34">send_dir_ndx<pos:position pos:line="72" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="48">flist<pos:position pos:line="72" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="55">stats<pos:position pos:line="72" pos:column="60"/></name><operator pos:line="72" pos:column="60">.<pos:position pos:line="72" pos:column="61"/></operator><name pos:line="72" pos:column="61">num_dirs<pos:position pos:line="72" pos:column="69"/></name></name> <operator pos:line="72" pos:column="70">-<pos:position pos:line="72" pos:column="71"/></operator> <name pos:line="72" pos:column="72">dstart<pos:position pos:line="72" pos:column="78"/></name></expr></argument>)<pos:position pos:line="72" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="73" pos:column="17">flist_done_allocating<pos:position pos:line="73" pos:column="38"/></name><argument_list pos:line="73" pos:column="38">(<argument><expr><name pos:line="73" pos:column="39">flist<pos:position pos:line="73" pos:column="44"/></name></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><name pos:line="75" pos:column="17">file_total<pos:position pos:line="75" pos:column="27"/></name> <operator pos:line="75" pos:column="28">+=<pos:position pos:line="75" pos:column="30"/></operator> <name><name pos:line="75" pos:column="31">flist<pos:position pos:line="75" pos:column="36"/></name><operator pos:line="75" pos:column="36">-&gt;<pos:position pos:line="75" pos:column="41"/></operator><name pos:line="75" pos:column="38">used<pos:position pos:line="75" pos:column="42"/></name></name></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="76" pos:column="17">stats<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">.<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">flist_size<pos:position pos:line="76" pos:column="33"/></name></name> <operator pos:line="76" pos:column="34">+=<pos:position pos:line="76" pos:column="36"/></operator> <name><name pos:line="76" pos:column="37">stats<pos:position pos:line="76" pos:column="42"/></name><operator pos:line="76" pos:column="42">.<pos:position pos:line="76" pos:column="43"/></operator><name pos:line="76" pos:column="43">total_written<pos:position pos:line="76" pos:column="56"/></name></name> <operator pos:line="76" pos:column="57">-<pos:position pos:line="76" pos:column="58"/></operator> <name pos:line="76" pos:column="59">start_write<pos:position pos:line="76" pos:column="70"/></name></expr>;<pos:position pos:line="76" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="77" pos:column="17">stats<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">.<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="23">num_files<pos:position pos:line="77" pos:column="32"/></name></name> <operator pos:line="77" pos:column="33">+=<pos:position pos:line="77" pos:column="35"/></operator> <name><name pos:line="77" pos:column="36">flist<pos:position pos:line="77" pos:column="41"/></name><operator pos:line="77" pos:column="41">-&gt;<pos:position pos:line="77" pos:column="46"/></operator><name pos:line="77" pos:column="43">used<pos:position pos:line="77" pos:column="47"/></name></name></expr>;<pos:position pos:line="77" pos:column="48"/></expr_stmt>
		<if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><call><name pos:line="78" pos:column="21">DEBUG_GTE<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><name pos:line="78" pos:column="31">FLIST<pos:position pos:line="78" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="38">3<pos:position pos:line="78" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="41"/></condition><then pos:line="78" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="25">output_flist<pos:position pos:line="79" pos:column="37"/></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name pos:line="79" pos:column="38">flist<pos:position pos:line="79" pos:column="43"/></name></expr></argument>)<pos:position pos:line="79" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="45"/></expr_stmt></block></then></if>

		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><call><name pos:line="81" pos:column="21">DIR_FIRST_CHILD<pos:position pos:line="81" pos:column="36"/></name><argument_list pos:line="81" pos:column="36">(<argument><expr><name pos:line="81" pos:column="37">dp<pos:position pos:line="81" pos:column="39"/></name></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call> <operator pos:line="81" pos:column="41">&gt;=<pos:position pos:line="81" pos:column="46"/></operator> <literal type="number" pos:line="81" pos:column="44">0<pos:position pos:line="81" pos:column="45"/></literal></expr>)<pos:position pos:line="81" pos:column="46"/></condition><then pos:line="81" pos:column="46"> <block pos:line="81" pos:column="47">{
			<expr_stmt><expr><name pos:line="82" pos:column="25">send_dir_ndx<pos:position pos:line="82" pos:column="37"/></name> <operator pos:line="82" pos:column="38">=<pos:position pos:line="82" pos:column="39"/></operator> <call><name pos:line="82" pos:column="40">DIR_FIRST_CHILD<pos:position pos:line="82" pos:column="55"/></name><argument_list pos:line="82" pos:column="55">(<argument><expr><name pos:line="82" pos:column="56">dp<pos:position pos:line="82" pos:column="58"/></name></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name pos:line="83" pos:column="25">send_dir_depth<pos:position pos:line="83" pos:column="39"/></name><operator pos:line="83" pos:column="39">++<pos:position pos:line="83" pos:column="41"/></operator></expr>;<pos:position pos:line="83" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then> <else pos:line="84" pos:column="19">else <block pos:line="84" pos:column="24">{
			<while pos:line="85" pos:column="25">while <condition pos:line="85" pos:column="31">(<expr><call><name pos:line="85" pos:column="32">DIR_NEXT_SIBLING<pos:position pos:line="85" pos:column="48"/></name><argument_list pos:line="85" pos:column="48">(<argument><expr><name pos:line="85" pos:column="49">dp<pos:position pos:line="85" pos:column="51"/></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call> <operator pos:line="85" pos:column="53">&lt;<pos:position pos:line="85" pos:column="57"/></operator> <literal type="number" pos:line="85" pos:column="55">0<pos:position pos:line="85" pos:column="56"/></literal></expr>)<pos:position pos:line="85" pos:column="57"/></condition> <block pos:line="85" pos:column="58">{
				<if pos:line="86" pos:column="33">if <condition pos:line="86" pos:column="36">(<expr><operator pos:line="86" pos:column="37">(<pos:position pos:line="86" pos:column="38"/></operator><name pos:line="86" pos:column="38">send_dir_ndx<pos:position pos:line="86" pos:column="50"/></name> <operator pos:line="86" pos:column="51">=<pos:position pos:line="86" pos:column="52"/></operator> <call><name pos:line="86" pos:column="53">DIR_PARENT<pos:position pos:line="86" pos:column="63"/></name><argument_list pos:line="86" pos:column="63">(<argument><expr><name pos:line="86" pos:column="64">dp<pos:position pos:line="86" pos:column="66"/></name></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call><operator pos:line="86" pos:column="67">)<pos:position pos:line="86" pos:column="68"/></operator> <operator pos:line="86" pos:column="69">&lt;<pos:position pos:line="86" pos:column="73"/></operator> <literal type="number" pos:line="86" pos:column="71">0<pos:position pos:line="86" pos:column="72"/></literal></expr>)<pos:position pos:line="86" pos:column="73"/></condition><then pos:line="86" pos:column="73"> <block pos:line="86" pos:column="74">{
					<expr_stmt><expr><call><name pos:line="87" pos:column="41">write_ndx<pos:position pos:line="87" pos:column="50"/></name><argument_list pos:line="87" pos:column="50">(<argument><expr><name pos:line="87" pos:column="51">f<pos:position pos:line="87" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="54">NDX_FLIST_EOF<pos:position pos:line="87" pos:column="67"/></name></expr></argument>)<pos:position pos:line="87" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="69"/></expr_stmt>
					<expr_stmt><expr><name pos:line="88" pos:column="41">flist_eof<pos:position pos:line="88" pos:column="50"/></name> <operator pos:line="88" pos:column="51">=<pos:position pos:line="88" pos:column="52"/></operator> <literal type="number" pos:line="88" pos:column="53">1<pos:position pos:line="88" pos:column="54"/></literal></expr>;<pos:position pos:line="88" pos:column="55"/></expr_stmt>
					<if pos:line="89" pos:column="41">if <condition pos:line="89" pos:column="44">(<expr><call><name pos:line="89" pos:column="45">DEBUG_GTE<pos:position pos:line="89" pos:column="54"/></name><argument_list pos:line="89" pos:column="54">(<argument><expr><name pos:line="89" pos:column="55">FLIST<pos:position pos:line="89" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="62">3<pos:position pos:line="89" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="65"/></condition><then pos:line="89" pos:column="65">
						<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="49">rprintf<pos:position pos:line="90" pos:column="56"/></name><argument_list pos:line="90" pos:column="56">(<argument><expr><name pos:line="90" pos:column="57">FINFO<pos:position pos:line="90" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="64">"[%s] flist_eof=1\n"<pos:position pos:line="90" pos:column="84"/></literal></expr></argument>, <argument><expr><call><name pos:line="90" pos:column="86">who_am_i<pos:position pos:line="90" pos:column="94"/></name><argument_list pos:line="90" pos:column="94">()<pos:position pos:line="90" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="98"/></expr_stmt></block></then></if>
					<expr_stmt><expr><call><name pos:line="91" pos:column="41">change_local_filter_dir<pos:position pos:line="91" pos:column="64"/></name><argument_list pos:line="91" pos:column="64">(<argument><expr><name pos:line="91" pos:column="65">NULL<pos:position pos:line="91" pos:column="69"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="71">0<pos:position pos:line="91" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="74">0<pos:position pos:line="91" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="77"/></expr_stmt>
					<goto pos:line="92" pos:column="41">goto <name pos:line="92" pos:column="46">finish<pos:position pos:line="92" pos:column="52"/></name>;<pos:position pos:line="92" pos:column="53"/></goto>
				}<pos:position pos:line="93" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name pos:line="94" pos:column="33">send_dir_depth<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">--<pos:position pos:line="94" pos:column="49"/></operator></expr>;<pos:position pos:line="94" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="95" pos:column="33">file<pos:position pos:line="95" pos:column="37"/></name> <operator pos:line="95" pos:column="38">=<pos:position pos:line="95" pos:column="39"/></operator> <name><name pos:line="95" pos:column="40">dir_flist<pos:position pos:line="95" pos:column="49"/></name><operator pos:line="95" pos:column="49">-&gt;<pos:position pos:line="95" pos:column="54"/></operator><name pos:line="95" pos:column="51">sorted<pos:position pos:line="95" pos:column="57"/></name><index pos:line="95" pos:column="57">[<expr><name pos:line="95" pos:column="58">send_dir_ndx<pos:position pos:line="95" pos:column="70"/></name></expr>]<pos:position pos:line="95" pos:column="71"/></index></name></expr>;<pos:position pos:line="95" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><name pos:line="96" pos:column="33">dp<pos:position pos:line="96" pos:column="35"/></name> <operator pos:line="96" pos:column="36">=<pos:position pos:line="96" pos:column="37"/></operator> <call><name pos:line="96" pos:column="38">F_DIR_NODE_P<pos:position pos:line="96" pos:column="50"/></name><argument_list pos:line="96" pos:column="50">(<argument><expr><name pos:line="96" pos:column="51">file<pos:position pos:line="96" pos:column="55"/></name></expr></argument>)<pos:position pos:line="96" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="57"/></expr_stmt>
			}<pos:position pos:line="97" pos:column="26"/></block></while>
			<expr_stmt><expr><name pos:line="98" pos:column="25">send_dir_ndx<pos:position pos:line="98" pos:column="37"/></name> <operator pos:line="98" pos:column="38">=<pos:position pos:line="98" pos:column="39"/></operator> <call><name pos:line="98" pos:column="40">DIR_NEXT_SIBLING<pos:position pos:line="98" pos:column="56"/></name><argument_list pos:line="98" pos:column="56">(<argument><expr><name pos:line="98" pos:column="57">dp<pos:position pos:line="98" pos:column="59"/></name></expr></argument>)<pos:position pos:line="98" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="99" pos:column="18"/></block></else></if>
	}<pos:position pos:line="100" pos:column="10"/></block></while>

  <label><name pos:line="102" pos:column="3">finish<pos:position pos:line="102" pos:column="9"/></name>:<pos:position pos:line="102" pos:column="10"/></label>
	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">io_error<pos:position pos:line="103" pos:column="21"/></name> <operator pos:line="103" pos:column="22">!=<pos:position pos:line="103" pos:column="24"/></operator> <name pos:line="103" pos:column="25">save_io_error<pos:position pos:line="103" pos:column="38"/></name> <operator pos:line="103" pos:column="39">&amp;&amp;<pos:position pos:line="103" pos:column="49"/></operator> <name pos:line="103" pos:column="42">protocol_version<pos:position pos:line="103" pos:column="58"/></name> <operator pos:line="103" pos:column="59">==<pos:position pos:line="103" pos:column="61"/></operator> <literal type="number" pos:line="103" pos:column="62">30<pos:position pos:line="103" pos:column="64"/></literal> <operator pos:line="103" pos:column="65">&amp;&amp;<pos:position pos:line="103" pos:column="75"/></operator> <operator pos:line="103" pos:column="68">!<pos:position pos:line="103" pos:column="69"/></operator><name pos:line="103" pos:column="69">ignore_errors<pos:position pos:line="103" pos:column="82"/></name></expr>)<pos:position pos:line="103" pos:column="83"/></condition><then pos:line="103" pos:column="83">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="17">send_msg_int<pos:position pos:line="104" pos:column="29"/></name><argument_list pos:line="104" pos:column="29">(<argument><expr><name pos:line="104" pos:column="30">MSG_IO_ERROR<pos:position pos:line="104" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="44">io_error<pos:position pos:line="104" pos:column="52"/></name></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="54"/></expr_stmt></block></then></if>
}<pos:position pos:line="105" pos:column="2"/></block></function></unit>

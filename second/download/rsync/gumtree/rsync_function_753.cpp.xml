<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_753.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">server_options<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">args<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">argc<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ac<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><operator pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="19">argc<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">argstr<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">50<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">arg<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">x<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">blocking_io<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">==<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">-<pos:position pos:line="9" pos:column="29"/></operator><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">blocking_io<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="12" pos:column="9">args<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><name pos:line="12" pos:column="14">ac<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">++<pos:position pos:line="12" pos:column="18"/></operator></expr>]<pos:position pos:line="12" pos:column="19"/></index></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="string" pos:line="12" pos:column="22">"--server"<pos:position pos:line="12" pos:column="32"/></literal></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">daemon_over_rsh<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">args<pos:position pos:line="15" pos:column="21"/></name><index pos:line="15" pos:column="21">[<expr><name pos:line="15" pos:column="22">ac<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">++<pos:position pos:line="15" pos:column="26"/></operator></expr>]<pos:position pos:line="15" pos:column="27"/></index></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <literal type="string" pos:line="15" pos:column="30">"--daemon"<pos:position pos:line="15" pos:column="40"/></literal></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">argc<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">ac<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
		<comment type="block" pos:line="17" pos:column="17">/* if we're passing --daemon, we're done */</comment>
		<return pos:line="18" pos:column="17">return;<pos:position pos:line="18" pos:column="24"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">am_sender<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="17">args<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><name pos:line="22" pos:column="22">ac<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">++<pos:position pos:line="22" pos:column="26"/></operator></expr>]<pos:position pos:line="22" pos:column="27"/></index></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="string" pos:line="22" pos:column="30">"--sender"<pos:position pos:line="22" pos:column="40"/></literal></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">x<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <literal type="number" pos:line="24" pos:column="13">1<pos:position pos:line="24" pos:column="14"/></literal></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">argstr<pos:position pos:line="25" pos:column="15"/></name><index pos:line="25" pos:column="15">[<expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>]<pos:position pos:line="25" pos:column="18"/></index></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="char" pos:line="25" pos:column="21">'-'<pos:position pos:line="25" pos:column="24"/></literal></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="25">verbose<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></condition> <incr><expr><name pos:line="26" pos:column="34">i<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">++<pos:position pos:line="26" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="17">argstr<pos:position pos:line="27" pos:column="23"/></name><index pos:line="27" pos:column="23">[<expr><name pos:line="27" pos:column="24">x<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">++<pos:position pos:line="27" pos:column="27"/></operator></expr>]<pos:position pos:line="27" pos:column="28"/></index></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="char" pos:line="27" pos:column="31">'v'<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt></block></for>

	<comment type="block" pos:line="29" pos:column="9">/* the -q option is intentionally left out */</comment>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">make_backups<pos:position pos:line="30" pos:column="25"/></name></expr>)<pos:position pos:line="30" pos:column="26"/></condition><then pos:line="30" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="17">argstr<pos:position pos:line="31" pos:column="23"/></name><index pos:line="31" pos:column="23">[<expr><name pos:line="31" pos:column="24">x<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">++<pos:position pos:line="31" pos:column="27"/></operator></expr>]<pos:position pos:line="31" pos:column="28"/></index></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <literal type="char" pos:line="31" pos:column="31">'b'<pos:position pos:line="31" pos:column="34"/></literal></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">update_only<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="17">argstr<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><name pos:line="33" pos:column="24">x<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">++<pos:position pos:line="33" pos:column="27"/></operator></expr>]<pos:position pos:line="33" pos:column="28"/></index></name> <operator pos:line="33" pos:column="29">=<pos:position pos:line="33" pos:column="30"/></operator> <literal type="char" pos:line="33" pos:column="31">'u'<pos:position pos:line="33" pos:column="34"/></literal></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">dry_run<pos:position pos:line="34" pos:column="20"/></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="17">argstr<pos:position pos:line="35" pos:column="23"/></name><index pos:line="35" pos:column="23">[<expr><name pos:line="35" pos:column="24">x<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">++<pos:position pos:line="35" pos:column="27"/></operator></expr>]<pos:position pos:line="35" pos:column="28"/></index></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="char" pos:line="35" pos:column="31">'n'<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">preserve_links<pos:position pos:line="36" pos:column="27"/></name></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">argstr<pos:position pos:line="37" pos:column="23"/></name><index pos:line="37" pos:column="23">[<expr><name pos:line="37" pos:column="24">x<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">++<pos:position pos:line="37" pos:column="27"/></operator></expr>]<pos:position pos:line="37" pos:column="28"/></index></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <literal type="char" pos:line="37" pos:column="31">'l'<pos:position pos:line="37" pos:column="34"/></literal></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">copy_links<pos:position pos:line="38" pos:column="23"/></name></expr>)<pos:position pos:line="38" pos:column="24"/></condition><then pos:line="38" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="17">argstr<pos:position pos:line="39" pos:column="23"/></name><index pos:line="39" pos:column="23">[<expr><name pos:line="39" pos:column="24">x<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">++<pos:position pos:line="39" pos:column="27"/></operator></expr>]<pos:position pos:line="39" pos:column="28"/></index></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <literal type="char" pos:line="39" pos:column="31">'L'<pos:position pos:line="39" pos:column="34"/></literal></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">whole_file<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">&gt;<pos:position pos:line="41" pos:column="28"/></operator> <literal type="number" pos:line="41" pos:column="26">0<pos:position pos:line="41" pos:column="27"/></literal></expr>)<pos:position pos:line="41" pos:column="28"/></condition><then pos:line="41" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="17">argstr<pos:position pos:line="42" pos:column="23"/></name><index pos:line="42" pos:column="23">[<expr><name pos:line="42" pos:column="24">x<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">++<pos:position pos:line="42" pos:column="27"/></operator></expr>]<pos:position pos:line="42" pos:column="28"/></index></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <literal type="char" pos:line="42" pos:column="31">'W'<pos:position pos:line="42" pos:column="34"/></literal></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="43" pos:column="9">/* We don't need to send --no-whole-file, because it's the
	 * default for remote transfers, and in any case old versions
	 * of rsync will not understand it. */</comment>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">preserve_hard_links<pos:position pos:line="47" pos:column="32"/></name></expr>)<pos:position pos:line="47" pos:column="33"/></condition><then pos:line="47" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="17">argstr<pos:position pos:line="48" pos:column="23"/></name><index pos:line="48" pos:column="23">[<expr><name pos:line="48" pos:column="24">x<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">++<pos:position pos:line="48" pos:column="27"/></operator></expr>]<pos:position pos:line="48" pos:column="28"/></index></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <literal type="char" pos:line="48" pos:column="31">'H'<pos:position pos:line="48" pos:column="34"/></literal></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">preserve_uid<pos:position pos:line="49" pos:column="25"/></name></expr>)<pos:position pos:line="49" pos:column="26"/></condition><then pos:line="49" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="17">argstr<pos:position pos:line="50" pos:column="23"/></name><index pos:line="50" pos:column="23">[<expr><name pos:line="50" pos:column="24">x<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">++<pos:position pos:line="50" pos:column="27"/></operator></expr>]<pos:position pos:line="50" pos:column="28"/></index></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="char" pos:line="50" pos:column="31">'o'<pos:position pos:line="50" pos:column="34"/></literal></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">preserve_gid<pos:position pos:line="51" pos:column="25"/></name></expr>)<pos:position pos:line="51" pos:column="26"/></condition><then pos:line="51" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="52" pos:column="17">argstr<pos:position pos:line="52" pos:column="23"/></name><index pos:line="52" pos:column="23">[<expr><name pos:line="52" pos:column="24">x<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">++<pos:position pos:line="52" pos:column="27"/></operator></expr>]<pos:position pos:line="52" pos:column="28"/></index></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <literal type="char" pos:line="52" pos:column="31">'g'<pos:position pos:line="52" pos:column="34"/></literal></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">preserve_devices<pos:position pos:line="53" pos:column="29"/></name></expr>)<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="54" pos:column="17">argstr<pos:position pos:line="54" pos:column="23"/></name><index pos:line="54" pos:column="23">[<expr><name pos:line="54" pos:column="24">x<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">++<pos:position pos:line="54" pos:column="27"/></operator></expr>]<pos:position pos:line="54" pos:column="28"/></index></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <literal type="char" pos:line="54" pos:column="31">'D'<pos:position pos:line="54" pos:column="34"/></literal></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">preserve_times<pos:position pos:line="55" pos:column="27"/></name></expr>)<pos:position pos:line="55" pos:column="28"/></condition><then pos:line="55" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="17">argstr<pos:position pos:line="56" pos:column="23"/></name><index pos:line="56" pos:column="23">[<expr><name pos:line="56" pos:column="24">x<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">++<pos:position pos:line="56" pos:column="27"/></operator></expr>]<pos:position pos:line="56" pos:column="28"/></index></name> <operator pos:line="56" pos:column="29">=<pos:position pos:line="56" pos:column="30"/></operator> <literal type="char" pos:line="56" pos:column="31">'t'<pos:position pos:line="56" pos:column="34"/></literal></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">preserve_perms<pos:position pos:line="57" pos:column="27"/></name></expr>)<pos:position pos:line="57" pos:column="28"/></condition><then pos:line="57" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="17">argstr<pos:position pos:line="58" pos:column="23"/></name><index pos:line="58" pos:column="23">[<expr><name pos:line="58" pos:column="24">x<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">++<pos:position pos:line="58" pos:column="27"/></operator></expr>]<pos:position pos:line="58" pos:column="28"/></index></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <literal type="char" pos:line="58" pos:column="31">'p'<pos:position pos:line="58" pos:column="34"/></literal></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">recurse<pos:position pos:line="59" pos:column="20"/></name></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="17">argstr<pos:position pos:line="60" pos:column="23"/></name><index pos:line="60" pos:column="23">[<expr><name pos:line="60" pos:column="24">x<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">++<pos:position pos:line="60" pos:column="27"/></operator></expr>]<pos:position pos:line="60" pos:column="28"/></index></name> <operator pos:line="60" pos:column="29">=<pos:position pos:line="60" pos:column="30"/></operator> <literal type="char" pos:line="60" pos:column="31">'r'<pos:position pos:line="60" pos:column="34"/></literal></expr>;<pos:position pos:line="60" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">always_checksum<pos:position pos:line="61" pos:column="28"/></name></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="62" pos:column="17">argstr<pos:position pos:line="62" pos:column="23"/></name><index pos:line="62" pos:column="23">[<expr><name pos:line="62" pos:column="24">x<pos:position pos:line="62" pos:column="25"/></name><operator pos:line="62" pos:column="25">++<pos:position pos:line="62" pos:column="27"/></operator></expr>]<pos:position pos:line="62" pos:column="28"/></index></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <literal type="char" pos:line="62" pos:column="31">'c'<pos:position pos:line="62" pos:column="34"/></literal></expr>;<pos:position pos:line="62" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">cvs_exclude<pos:position pos:line="63" pos:column="24"/></name></expr>)<pos:position pos:line="63" pos:column="25"/></condition><then pos:line="63" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="17">argstr<pos:position pos:line="64" pos:column="23"/></name><index pos:line="64" pos:column="23">[<expr><name pos:line="64" pos:column="24">x<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">++<pos:position pos:line="64" pos:column="27"/></operator></expr>]<pos:position pos:line="64" pos:column="28"/></index></name> <operator pos:line="64" pos:column="29">=<pos:position pos:line="64" pos:column="30"/></operator> <literal type="char" pos:line="64" pos:column="31">'C'<pos:position pos:line="64" pos:column="34"/></literal></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">ignore_times<pos:position pos:line="65" pos:column="25"/></name></expr>)<pos:position pos:line="65" pos:column="26"/></condition><then pos:line="65" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="17">argstr<pos:position pos:line="66" pos:column="23"/></name><index pos:line="66" pos:column="23">[<expr><name pos:line="66" pos:column="24">x<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">++<pos:position pos:line="66" pos:column="27"/></operator></expr>]<pos:position pos:line="66" pos:column="28"/></index></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <literal type="char" pos:line="66" pos:column="31">'I'<pos:position pos:line="66" pos:column="34"/></literal></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">relative_paths<pos:position pos:line="67" pos:column="27"/></name></expr>)<pos:position pos:line="67" pos:column="28"/></condition><then pos:line="67" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="17">argstr<pos:position pos:line="68" pos:column="23"/></name><index pos:line="68" pos:column="23">[<expr><name pos:line="68" pos:column="24">x<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">++<pos:position pos:line="68" pos:column="27"/></operator></expr>]<pos:position pos:line="68" pos:column="28"/></index></name> <operator pos:line="68" pos:column="29">=<pos:position pos:line="68" pos:column="30"/></operator> <literal type="char" pos:line="68" pos:column="31">'R'<pos:position pos:line="68" pos:column="34"/></literal></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">one_file_system<pos:position pos:line="69" pos:column="28"/></name></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="17">argstr<pos:position pos:line="70" pos:column="23"/></name><index pos:line="70" pos:column="23">[<expr><name pos:line="70" pos:column="24">x<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">++<pos:position pos:line="70" pos:column="27"/></operator></expr>]<pos:position pos:line="70" pos:column="28"/></index></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <literal type="char" pos:line="70" pos:column="31">'x'<pos:position pos:line="70" pos:column="34"/></literal></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">sparse_files<pos:position pos:line="71" pos:column="25"/></name></expr>)<pos:position pos:line="71" pos:column="26"/></condition><then pos:line="71" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="17">argstr<pos:position pos:line="72" pos:column="23"/></name><index pos:line="72" pos:column="23">[<expr><name pos:line="72" pos:column="24">x<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">++<pos:position pos:line="72" pos:column="27"/></operator></expr>]<pos:position pos:line="72" pos:column="28"/></index></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <literal type="char" pos:line="72" pos:column="31">'S'<pos:position pos:line="72" pos:column="34"/></literal></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">do_compression<pos:position pos:line="73" pos:column="27"/></name></expr>)<pos:position pos:line="73" pos:column="28"/></condition><then pos:line="73" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="17">argstr<pos:position pos:line="74" pos:column="23"/></name><index pos:line="74" pos:column="23">[<expr><name pos:line="74" pos:column="24">x<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">++<pos:position pos:line="74" pos:column="27"/></operator></expr>]<pos:position pos:line="74" pos:column="28"/></index></name> <operator pos:line="74" pos:column="29">=<pos:position pos:line="74" pos:column="30"/></operator> <literal type="char" pos:line="74" pos:column="31">'z'<pos:position pos:line="74" pos:column="34"/></literal></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="76" pos:column="9">/* this is a complete hack - blame Rusty

	   this is a hack to make the list_only (remote file list)
	   more useful */</comment>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">list_only<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">&amp;&amp;<pos:position pos:line="80" pos:column="33"/></operator> <operator pos:line="80" pos:column="26">!<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="27">recurse<pos:position pos:line="80" pos:column="34"/></name></expr>)<pos:position pos:line="80" pos:column="35"/></condition><then pos:line="80" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="17">argstr<pos:position pos:line="81" pos:column="23"/></name><index pos:line="81" pos:column="23">[<expr><name pos:line="81" pos:column="24">x<pos:position pos:line="81" pos:column="25"/></name><operator pos:line="81" pos:column="25">++<pos:position pos:line="81" pos:column="27"/></operator></expr>]<pos:position pos:line="81" pos:column="28"/></index></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <literal type="char" pos:line="81" pos:column="31">'r'<pos:position pos:line="81" pos:column="34"/></literal></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="83" pos:column="9">argstr<pos:position pos:line="83" pos:column="15"/></name><index pos:line="83" pos:column="15">[<expr><name pos:line="83" pos:column="16">x<pos:position pos:line="83" pos:column="17"/></name></expr>]<pos:position pos:line="83" pos:column="18"/></index></name> <operator pos:line="83" pos:column="19">=<pos:position pos:line="83" pos:column="20"/></operator> <literal type="number" pos:line="83" pos:column="21">0<pos:position pos:line="83" pos:column="22"/></literal></expr>;<pos:position pos:line="83" pos:column="23"/></expr_stmt>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">x<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">!=<pos:position pos:line="85" pos:column="17"/></operator> <literal type="number" pos:line="85" pos:column="18">1<pos:position pos:line="85" pos:column="19"/></literal></expr>)<pos:position pos:line="85" pos:column="20"/></condition><then pos:line="85" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="86" pos:column="17">args<pos:position pos:line="86" pos:column="21"/></name><index pos:line="86" pos:column="21">[<expr><name pos:line="86" pos:column="22">ac<pos:position pos:line="86" pos:column="24"/></name><operator pos:line="86" pos:column="24">++<pos:position pos:line="86" pos:column="26"/></operator></expr>]<pos:position pos:line="86" pos:column="27"/></index></name> <operator pos:line="86" pos:column="28">=<pos:position pos:line="86" pos:column="29"/></operator> <name pos:line="86" pos:column="30">argstr<pos:position pos:line="86" pos:column="36"/></name></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt></block></then></if>

	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">block_size<pos:position pos:line="88" pos:column="23"/></name></expr>)<pos:position pos:line="88" pos:column="24"/></condition><then pos:line="88" pos:column="24"> <block pos:line="88" pos:column="25">{
		<if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><call><name pos:line="89" pos:column="21">asprintf<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><operator pos:line="89" pos:column="30">&amp;<pos:position pos:line="89" pos:column="35"/></operator><name pos:line="89" pos:column="31">arg<pos:position pos:line="89" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="36">"-B%u"<pos:position pos:line="89" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="44">block_size<pos:position pos:line="89" pos:column="54"/></name></expr></argument>)<pos:position pos:line="89" pos:column="55"/></argument_list></call> <operator pos:line="89" pos:column="56">&lt;<pos:position pos:line="89" pos:column="60"/></operator> <literal type="number" pos:line="89" pos:column="58">0<pos:position pos:line="89" pos:column="59"/></literal></expr>)<pos:position pos:line="89" pos:column="60"/></condition><then pos:line="89" pos:column="60">
			<block type="pseudo"><goto pos:line="90" pos:column="25">goto <name pos:line="90" pos:column="30">oom<pos:position pos:line="90" pos:column="33"/></name>;<pos:position pos:line="90" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="91" pos:column="17">args<pos:position pos:line="91" pos:column="21"/></name><index pos:line="91" pos:column="21">[<expr><name pos:line="91" pos:column="22">ac<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">++<pos:position pos:line="91" pos:column="26"/></operator></expr>]<pos:position pos:line="91" pos:column="27"/></index></name> <operator pos:line="91" pos:column="28">=<pos:position pos:line="91" pos:column="29"/></operator> <name pos:line="91" pos:column="30">arg<pos:position pos:line="91" pos:column="33"/></name></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="92" pos:column="10"/></block></then></if>

	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">max_delete<pos:position pos:line="94" pos:column="23"/></name> <operator pos:line="94" pos:column="24">&amp;&amp;<pos:position pos:line="94" pos:column="34"/></operator> <name pos:line="94" pos:column="27">am_sender<pos:position pos:line="94" pos:column="36"/></name></expr>)<pos:position pos:line="94" pos:column="37"/></condition><then pos:line="94" pos:column="37"> <block pos:line="94" pos:column="38">{
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><call><name pos:line="95" pos:column="21">asprintf<pos:position pos:line="95" pos:column="29"/></name><argument_list pos:line="95" pos:column="29">(<argument><expr><operator pos:line="95" pos:column="30">&amp;<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="31">arg<pos:position pos:line="95" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="36">"--max-delete=%d"<pos:position pos:line="95" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="55">max_delete<pos:position pos:line="95" pos:column="65"/></name></expr></argument>)<pos:position pos:line="95" pos:column="66"/></argument_list></call> <operator pos:line="95" pos:column="67">&lt;<pos:position pos:line="95" pos:column="71"/></operator> <literal type="number" pos:line="95" pos:column="69">0<pos:position pos:line="95" pos:column="70"/></literal></expr>)<pos:position pos:line="95" pos:column="71"/></condition><then pos:line="95" pos:column="71">
			<block type="pseudo"><goto pos:line="96" pos:column="25">goto <name pos:line="96" pos:column="30">oom<pos:position pos:line="96" pos:column="33"/></name>;<pos:position pos:line="96" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">args<pos:position pos:line="97" pos:column="21"/></name><index pos:line="97" pos:column="21">[<expr><name pos:line="97" pos:column="22">ac<pos:position pos:line="97" pos:column="24"/></name><operator pos:line="97" pos:column="24">++<pos:position pos:line="97" pos:column="26"/></operator></expr>]<pos:position pos:line="97" pos:column="27"/></index></name> <operator pos:line="97" pos:column="28">=<pos:position pos:line="97" pos:column="29"/></operator> <name pos:line="97" pos:column="30">arg<pos:position pos:line="97" pos:column="33"/></name></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then></if>

	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">batch_prefix<pos:position pos:line="100" pos:column="25"/></name></expr>)<pos:position pos:line="100" pos:column="26"/></condition><then pos:line="100" pos:column="26"> <block pos:line="100" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="101" pos:column="17">char<pos:position pos:line="101" pos:column="21"/></name> <modifier pos:line="101" pos:column="22">*<pos:position pos:line="101" pos:column="23"/></modifier></type><name pos:line="101" pos:column="23">r_or_w<pos:position pos:line="101" pos:column="29"/></name> <init pos:line="101" pos:column="30">= <expr><ternary><condition><expr><name pos:line="101" pos:column="32">write_batch<pos:position pos:line="101" pos:column="43"/></name></expr> ?<pos:position pos:line="101" pos:column="45"/></condition><then pos:line="101" pos:column="45"> <expr><literal type="string" pos:line="101" pos:column="46">"write"<pos:position pos:line="101" pos:column="53"/></literal></expr> <pos:position pos:line="101" pos:column="54"/></then><else pos:line="101" pos:column="54">: <expr><literal type="string" pos:line="101" pos:column="56">"read"<pos:position pos:line="101" pos:column="62"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="101" pos:column="63"/></decl_stmt>
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><call><name pos:line="102" pos:column="21">asprintf<pos:position pos:line="102" pos:column="29"/></name><argument_list pos:line="102" pos:column="29">(<argument><expr><operator pos:line="102" pos:column="30">&amp;<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="31">arg<pos:position pos:line="102" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="36">"--%s-batch=%s"<pos:position pos:line="102" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="53">r_or_w<pos:position pos:line="102" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="61">batch_prefix<pos:position pos:line="102" pos:column="73"/></name></expr></argument>)<pos:position pos:line="102" pos:column="74"/></argument_list></call> <operator pos:line="102" pos:column="75">&lt;<pos:position pos:line="102" pos:column="79"/></operator> <literal type="number" pos:line="102" pos:column="77">0<pos:position pos:line="102" pos:column="78"/></literal></expr>)<pos:position pos:line="102" pos:column="79"/></condition><then pos:line="102" pos:column="79">
			<block type="pseudo"><goto pos:line="103" pos:column="25">goto <name pos:line="103" pos:column="30">oom<pos:position pos:line="103" pos:column="33"/></name>;<pos:position pos:line="103" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="104" pos:column="17">args<pos:position pos:line="104" pos:column="21"/></name><index pos:line="104" pos:column="21">[<expr><name pos:line="104" pos:column="22">ac<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">++<pos:position pos:line="104" pos:column="26"/></operator></expr>]<pos:position pos:line="104" pos:column="27"/></index></name> <operator pos:line="104" pos:column="28">=<pos:position pos:line="104" pos:column="29"/></operator> <name pos:line="104" pos:column="30">arg<pos:position pos:line="104" pos:column="33"/></name></expr>;<pos:position pos:line="104" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="105" pos:column="10"/></block></then></if>

	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">io_timeout<pos:position pos:line="107" pos:column="23"/></name></expr>)<pos:position pos:line="107" pos:column="24"/></condition><then pos:line="107" pos:column="24"> <block pos:line="107" pos:column="25">{
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><call><name pos:line="108" pos:column="21">asprintf<pos:position pos:line="108" pos:column="29"/></name><argument_list pos:line="108" pos:column="29">(<argument><expr><operator pos:line="108" pos:column="30">&amp;<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="31">arg<pos:position pos:line="108" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="36">"--timeout=%d"<pos:position pos:line="108" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="52">io_timeout<pos:position pos:line="108" pos:column="62"/></name></expr></argument>)<pos:position pos:line="108" pos:column="63"/></argument_list></call> <operator pos:line="108" pos:column="64">&lt;<pos:position pos:line="108" pos:column="68"/></operator> <literal type="number" pos:line="108" pos:column="66">0<pos:position pos:line="108" pos:column="67"/></literal></expr>)<pos:position pos:line="108" pos:column="68"/></condition><then pos:line="108" pos:column="68">
			<block type="pseudo"><goto pos:line="109" pos:column="25">goto <name pos:line="109" pos:column="30">oom<pos:position pos:line="109" pos:column="33"/></name>;<pos:position pos:line="109" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="110" pos:column="17">args<pos:position pos:line="110" pos:column="21"/></name><index pos:line="110" pos:column="21">[<expr><name pos:line="110" pos:column="22">ac<pos:position pos:line="110" pos:column="24"/></name><operator pos:line="110" pos:column="24">++<pos:position pos:line="110" pos:column="26"/></operator></expr>]<pos:position pos:line="110" pos:column="27"/></index></name> <operator pos:line="110" pos:column="28">=<pos:position pos:line="110" pos:column="29"/></operator> <name pos:line="110" pos:column="30">arg<pos:position pos:line="110" pos:column="33"/></name></expr>;<pos:position pos:line="110" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">bwlimit<pos:position pos:line="113" pos:column="20"/></name></expr>)<pos:position pos:line="113" pos:column="21"/></condition><then pos:line="113" pos:column="21"> <block pos:line="113" pos:column="22">{
		<if pos:line="114" pos:column="17">if <condition pos:line="114" pos:column="20">(<expr><call><name pos:line="114" pos:column="21">asprintf<pos:position pos:line="114" pos:column="29"/></name><argument_list pos:line="114" pos:column="29">(<argument><expr><operator pos:line="114" pos:column="30">&amp;<pos:position pos:line="114" pos:column="35"/></operator><name pos:line="114" pos:column="31">arg<pos:position pos:line="114" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="36">"--bwlimit=%d"<pos:position pos:line="114" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="52">bwlimit<pos:position pos:line="114" pos:column="59"/></name></expr></argument>)<pos:position pos:line="114" pos:column="60"/></argument_list></call> <operator pos:line="114" pos:column="61">&lt;<pos:position pos:line="114" pos:column="65"/></operator> <literal type="number" pos:line="114" pos:column="63">0<pos:position pos:line="114" pos:column="64"/></literal></expr>)<pos:position pos:line="114" pos:column="65"/></condition><then pos:line="114" pos:column="65">
			<block type="pseudo"><goto pos:line="115" pos:column="25">goto <name pos:line="115" pos:column="30">oom<pos:position pos:line="115" pos:column="33"/></name>;<pos:position pos:line="115" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="116" pos:column="17">args<pos:position pos:line="116" pos:column="21"/></name><index pos:line="116" pos:column="21">[<expr><name pos:line="116" pos:column="22">ac<pos:position pos:line="116" pos:column="24"/></name><operator pos:line="116" pos:column="24">++<pos:position pos:line="116" pos:column="26"/></operator></expr>]<pos:position pos:line="116" pos:column="27"/></index></name> <operator pos:line="116" pos:column="28">=<pos:position pos:line="116" pos:column="29"/></operator> <name pos:line="116" pos:column="30">arg<pos:position pos:line="116" pos:column="33"/></name></expr>;<pos:position pos:line="116" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="117" pos:column="10"/></block></then></if>

	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">backup_dir<pos:position pos:line="119" pos:column="23"/></name></expr>)<pos:position pos:line="119" pos:column="24"/></condition><then pos:line="119" pos:column="24"> <block pos:line="119" pos:column="25">{
		<expr_stmt><expr><name><name pos:line="120" pos:column="17">args<pos:position pos:line="120" pos:column="21"/></name><index pos:line="120" pos:column="21">[<expr><name pos:line="120" pos:column="22">ac<pos:position pos:line="120" pos:column="24"/></name><operator pos:line="120" pos:column="24">++<pos:position pos:line="120" pos:column="26"/></operator></expr>]<pos:position pos:line="120" pos:column="27"/></index></name> <operator pos:line="120" pos:column="28">=<pos:position pos:line="120" pos:column="29"/></operator> <literal type="string" pos:line="120" pos:column="30">"--backup-dir"<pos:position pos:line="120" pos:column="44"/></literal></expr>;<pos:position pos:line="120" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="121" pos:column="17">args<pos:position pos:line="121" pos:column="21"/></name><index pos:line="121" pos:column="21">[<expr><name pos:line="121" pos:column="22">ac<pos:position pos:line="121" pos:column="24"/></name><operator pos:line="121" pos:column="24">++<pos:position pos:line="121" pos:column="26"/></operator></expr>]<pos:position pos:line="121" pos:column="27"/></index></name> <operator pos:line="121" pos:column="28">=<pos:position pos:line="121" pos:column="29"/></operator> <name pos:line="121" pos:column="30">backup_dir<pos:position pos:line="121" pos:column="40"/></name></expr>;<pos:position pos:line="121" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="122" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="124" pos:column="9">/* Only send --suffix if it specifies a non-default value. */</comment>
	<if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><call><name pos:line="125" pos:column="13">strcmp<pos:position pos:line="125" pos:column="19"/></name><argument_list pos:line="125" pos:column="19">(<argument><expr><name pos:line="125" pos:column="20">backup_suffix<pos:position pos:line="125" pos:column="33"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="125" pos:column="35">backup_dir<pos:position pos:line="125" pos:column="45"/></name></expr> ?<pos:position pos:line="125" pos:column="47"/></condition><then pos:line="125" pos:column="47"> <expr><literal type="string" pos:line="125" pos:column="48">""<pos:position pos:line="125" pos:column="50"/></literal></expr> <pos:position pos:line="125" pos:column="51"/></then><else pos:line="125" pos:column="51">: <expr><name pos:line="125" pos:column="53">BACKUP_SUFFIX<pos:position pos:line="125" pos:column="66"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="125" pos:column="67"/></argument_list></call> <operator pos:line="125" pos:column="68">!=<pos:position pos:line="125" pos:column="70"/></operator> <literal type="number" pos:line="125" pos:column="71">0<pos:position pos:line="125" pos:column="72"/></literal></expr>)<pos:position pos:line="125" pos:column="73"/></condition><then pos:line="125" pos:column="73"> <block pos:line="125" pos:column="74">{
		<comment type="block" pos:line="126" pos:column="17">/* We use the following syntax to avoid weirdness with '~'. */</comment>
		<if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><call><name pos:line="127" pos:column="21">asprintf<pos:position pos:line="127" pos:column="29"/></name><argument_list pos:line="127" pos:column="29">(<argument><expr><operator pos:line="127" pos:column="30">&amp;<pos:position pos:line="127" pos:column="35"/></operator><name pos:line="127" pos:column="31">arg<pos:position pos:line="127" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="36">"--suffix=%s"<pos:position pos:line="127" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="51">backup_suffix<pos:position pos:line="127" pos:column="64"/></name></expr></argument>)<pos:position pos:line="127" pos:column="65"/></argument_list></call> <operator pos:line="127" pos:column="66">&lt;<pos:position pos:line="127" pos:column="70"/></operator> <literal type="number" pos:line="127" pos:column="68">0<pos:position pos:line="127" pos:column="69"/></literal></expr>)<pos:position pos:line="127" pos:column="70"/></condition><then pos:line="127" pos:column="70">
			<block type="pseudo"><goto pos:line="128" pos:column="25">goto <name pos:line="128" pos:column="30">oom<pos:position pos:line="128" pos:column="33"/></name>;<pos:position pos:line="128" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="129" pos:column="17">args<pos:position pos:line="129" pos:column="21"/></name><index pos:line="129" pos:column="21">[<expr><name pos:line="129" pos:column="22">ac<pos:position pos:line="129" pos:column="24"/></name><operator pos:line="129" pos:column="24">++<pos:position pos:line="129" pos:column="26"/></operator></expr>]<pos:position pos:line="129" pos:column="27"/></index></name> <operator pos:line="129" pos:column="28">=<pos:position pos:line="129" pos:column="29"/></operator> <name pos:line="129" pos:column="30">arg<pos:position pos:line="129" pos:column="33"/></name></expr>;<pos:position pos:line="129" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="130" pos:column="10"/></block></then></if>

	<if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><name pos:line="132" pos:column="13">delete_excluded<pos:position pos:line="132" pos:column="28"/></name></expr>)<pos:position pos:line="132" pos:column="29"/></condition><then pos:line="132" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="133" pos:column="17">args<pos:position pos:line="133" pos:column="21"/></name><index pos:line="133" pos:column="21">[<expr><name pos:line="133" pos:column="22">ac<pos:position pos:line="133" pos:column="24"/></name><operator pos:line="133" pos:column="24">++<pos:position pos:line="133" pos:column="26"/></operator></expr>]<pos:position pos:line="133" pos:column="27"/></index></name> <operator pos:line="133" pos:column="28">=<pos:position pos:line="133" pos:column="29"/></operator> <literal type="string" pos:line="133" pos:column="30">"--delete-excluded"<pos:position pos:line="133" pos:column="49"/></literal></expr>;<pos:position pos:line="133" pos:column="50"/></expr_stmt></block></then>
	<elseif pos:line="134" pos:column="9">else <if pos:line="134" pos:column="14">if <condition pos:line="134" pos:column="17">(<expr><name pos:line="134" pos:column="18">delete_mode<pos:position pos:line="134" pos:column="29"/></name></expr>)<pos:position pos:line="134" pos:column="30"/></condition><then pos:line="134" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="135" pos:column="17">args<pos:position pos:line="135" pos:column="21"/></name><index pos:line="135" pos:column="21">[<expr><name pos:line="135" pos:column="22">ac<pos:position pos:line="135" pos:column="24"/></name><operator pos:line="135" pos:column="24">++<pos:position pos:line="135" pos:column="26"/></operator></expr>]<pos:position pos:line="135" pos:column="27"/></index></name> <operator pos:line="135" pos:column="28">=<pos:position pos:line="135" pos:column="29"/></operator> <literal type="string" pos:line="135" pos:column="30">"--delete"<pos:position pos:line="135" pos:column="40"/></literal></expr>;<pos:position pos:line="135" pos:column="41"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">size_only<pos:position pos:line="137" pos:column="22"/></name></expr>)<pos:position pos:line="137" pos:column="23"/></condition><then pos:line="137" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="138" pos:column="17">args<pos:position pos:line="138" pos:column="21"/></name><index pos:line="138" pos:column="21">[<expr><name pos:line="138" pos:column="22">ac<pos:position pos:line="138" pos:column="24"/></name><operator pos:line="138" pos:column="24">++<pos:position pos:line="138" pos:column="26"/></operator></expr>]<pos:position pos:line="138" pos:column="27"/></index></name> <operator pos:line="138" pos:column="28">=<pos:position pos:line="138" pos:column="29"/></operator> <literal type="string" pos:line="138" pos:column="30">"--size-only"<pos:position pos:line="138" pos:column="43"/></literal></expr>;<pos:position pos:line="138" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><name pos:line="140" pos:column="13">modify_window_set<pos:position pos:line="140" pos:column="30"/></name></expr>)<pos:position pos:line="140" pos:column="31"/></condition><then pos:line="140" pos:column="31"> <block pos:line="140" pos:column="32">{
		<if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><call><name pos:line="141" pos:column="21">asprintf<pos:position pos:line="141" pos:column="29"/></name><argument_list pos:line="141" pos:column="29">(<argument><expr><operator pos:line="141" pos:column="30">&amp;<pos:position pos:line="141" pos:column="35"/></operator><name pos:line="141" pos:column="31">arg<pos:position pos:line="141" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="36">"--modify-window=%d"<pos:position pos:line="141" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="141" pos:column="58">modify_window<pos:position pos:line="141" pos:column="71"/></name></expr></argument>)<pos:position pos:line="141" pos:column="72"/></argument_list></call> <operator pos:line="141" pos:column="73">&lt;<pos:position pos:line="141" pos:column="77"/></operator> <literal type="number" pos:line="141" pos:column="75">0<pos:position pos:line="141" pos:column="76"/></literal></expr>)<pos:position pos:line="141" pos:column="77"/></condition><then pos:line="141" pos:column="77">
			<block type="pseudo"><goto pos:line="142" pos:column="25">goto <name pos:line="142" pos:column="30">oom<pos:position pos:line="142" pos:column="33"/></name>;<pos:position pos:line="142" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="143" pos:column="17">args<pos:position pos:line="143" pos:column="21"/></name><index pos:line="143" pos:column="21">[<expr><name pos:line="143" pos:column="22">ac<pos:position pos:line="143" pos:column="24"/></name><operator pos:line="143" pos:column="24">++<pos:position pos:line="143" pos:column="26"/></operator></expr>]<pos:position pos:line="143" pos:column="27"/></index></name> <operator pos:line="143" pos:column="28">=<pos:position pos:line="143" pos:column="29"/></operator> <name pos:line="143" pos:column="30">arg<pos:position pos:line="143" pos:column="33"/></name></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="144" pos:column="10"/></block></then></if>

	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">keep_partial<pos:position pos:line="146" pos:column="25"/></name></expr>)<pos:position pos:line="146" pos:column="26"/></condition><then pos:line="146" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="147" pos:column="17">args<pos:position pos:line="147" pos:column="21"/></name><index pos:line="147" pos:column="21">[<expr><name pos:line="147" pos:column="22">ac<pos:position pos:line="147" pos:column="24"/></name><operator pos:line="147" pos:column="24">++<pos:position pos:line="147" pos:column="26"/></operator></expr>]<pos:position pos:line="147" pos:column="27"/></index></name> <operator pos:line="147" pos:column="28">=<pos:position pos:line="147" pos:column="29"/></operator> <literal type="string" pos:line="147" pos:column="30">"--partial"<pos:position pos:line="147" pos:column="41"/></literal></expr>;<pos:position pos:line="147" pos:column="42"/></expr_stmt></block></then></if>

	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">force_delete<pos:position pos:line="149" pos:column="25"/></name></expr>)<pos:position pos:line="149" pos:column="26"/></condition><then pos:line="149" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="150" pos:column="17">args<pos:position pos:line="150" pos:column="21"/></name><index pos:line="150" pos:column="21">[<expr><name pos:line="150" pos:column="22">ac<pos:position pos:line="150" pos:column="24"/></name><operator pos:line="150" pos:column="24">++<pos:position pos:line="150" pos:column="26"/></operator></expr>]<pos:position pos:line="150" pos:column="27"/></index></name> <operator pos:line="150" pos:column="28">=<pos:position pos:line="150" pos:column="29"/></operator> <literal type="string" pos:line="150" pos:column="30">"--force"<pos:position pos:line="150" pos:column="39"/></literal></expr>;<pos:position pos:line="150" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><name pos:line="152" pos:column="13">delete_after<pos:position pos:line="152" pos:column="25"/></name></expr>)<pos:position pos:line="152" pos:column="26"/></condition><then pos:line="152" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="17">args<pos:position pos:line="153" pos:column="21"/></name><index pos:line="153" pos:column="21">[<expr><name pos:line="153" pos:column="22">ac<pos:position pos:line="153" pos:column="24"/></name><operator pos:line="153" pos:column="24">++<pos:position pos:line="153" pos:column="26"/></operator></expr>]<pos:position pos:line="153" pos:column="27"/></index></name> <operator pos:line="153" pos:column="28">=<pos:position pos:line="153" pos:column="29"/></operator> <literal type="string" pos:line="153" pos:column="30">"--delete-after"<pos:position pos:line="153" pos:column="46"/></literal></expr>;<pos:position pos:line="153" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><name pos:line="155" pos:column="13">ignore_errors<pos:position pos:line="155" pos:column="26"/></name></expr>)<pos:position pos:line="155" pos:column="27"/></condition><then pos:line="155" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="156" pos:column="17">args<pos:position pos:line="156" pos:column="21"/></name><index pos:line="156" pos:column="21">[<expr><name pos:line="156" pos:column="22">ac<pos:position pos:line="156" pos:column="24"/></name><operator pos:line="156" pos:column="24">++<pos:position pos:line="156" pos:column="26"/></operator></expr>]<pos:position pos:line="156" pos:column="27"/></index></name> <operator pos:line="156" pos:column="28">=<pos:position pos:line="156" pos:column="29"/></operator> <literal type="string" pos:line="156" pos:column="30">"--ignore-errors"<pos:position pos:line="156" pos:column="47"/></literal></expr>;<pos:position pos:line="156" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">(<expr><name pos:line="158" pos:column="13">copy_unsafe_links<pos:position pos:line="158" pos:column="30"/></name></expr>)<pos:position pos:line="158" pos:column="31"/></condition><then pos:line="158" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="159" pos:column="17">args<pos:position pos:line="159" pos:column="21"/></name><index pos:line="159" pos:column="21">[<expr><name pos:line="159" pos:column="22">ac<pos:position pos:line="159" pos:column="24"/></name><operator pos:line="159" pos:column="24">++<pos:position pos:line="159" pos:column="26"/></operator></expr>]<pos:position pos:line="159" pos:column="27"/></index></name> <operator pos:line="159" pos:column="28">=<pos:position pos:line="159" pos:column="29"/></operator> <literal type="string" pos:line="159" pos:column="30">"--copy-unsafe-links"<pos:position pos:line="159" pos:column="51"/></literal></expr>;<pos:position pos:line="159" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">safe_symlinks<pos:position pos:line="161" pos:column="26"/></name></expr>)<pos:position pos:line="161" pos:column="27"/></condition><then pos:line="161" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="162" pos:column="17">args<pos:position pos:line="162" pos:column="21"/></name><index pos:line="162" pos:column="21">[<expr><name pos:line="162" pos:column="22">ac<pos:position pos:line="162" pos:column="24"/></name><operator pos:line="162" pos:column="24">++<pos:position pos:line="162" pos:column="26"/></operator></expr>]<pos:position pos:line="162" pos:column="27"/></index></name> <operator pos:line="162" pos:column="28">=<pos:position pos:line="162" pos:column="29"/></operator> <literal type="string" pos:line="162" pos:column="30">"--safe-links"<pos:position pos:line="162" pos:column="44"/></literal></expr>;<pos:position pos:line="162" pos:column="45"/></expr_stmt></block></then></if>

	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name pos:line="164" pos:column="13">numeric_ids<pos:position pos:line="164" pos:column="24"/></name></expr>)<pos:position pos:line="164" pos:column="25"/></condition><then pos:line="164" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="165" pos:column="17">args<pos:position pos:line="165" pos:column="21"/></name><index pos:line="165" pos:column="21">[<expr><name pos:line="165" pos:column="22">ac<pos:position pos:line="165" pos:column="24"/></name><operator pos:line="165" pos:column="24">++<pos:position pos:line="165" pos:column="26"/></operator></expr>]<pos:position pos:line="165" pos:column="27"/></index></name> <operator pos:line="165" pos:column="28">=<pos:position pos:line="165" pos:column="29"/></operator> <literal type="string" pos:line="165" pos:column="30">"--numeric-ids"<pos:position pos:line="165" pos:column="45"/></literal></expr>;<pos:position pos:line="165" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">only_existing<pos:position pos:line="167" pos:column="26"/></name> <operator pos:line="167" pos:column="27">&amp;&amp;<pos:position pos:line="167" pos:column="37"/></operator> <name pos:line="167" pos:column="30">am_sender<pos:position pos:line="167" pos:column="39"/></name></expr>)<pos:position pos:line="167" pos:column="40"/></condition><then pos:line="167" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="168" pos:column="17">args<pos:position pos:line="168" pos:column="21"/></name><index pos:line="168" pos:column="21">[<expr><name pos:line="168" pos:column="22">ac<pos:position pos:line="168" pos:column="24"/></name><operator pos:line="168" pos:column="24">++<pos:position pos:line="168" pos:column="26"/></operator></expr>]<pos:position pos:line="168" pos:column="27"/></index></name> <operator pos:line="168" pos:column="28">=<pos:position pos:line="168" pos:column="29"/></operator> <literal type="string" pos:line="168" pos:column="30">"--existing"<pos:position pos:line="168" pos:column="42"/></literal></expr>;<pos:position pos:line="168" pos:column="43"/></expr_stmt></block></then></if>

	<if pos:line="170" pos:column="9">if <condition pos:line="170" pos:column="12">(<expr><name pos:line="170" pos:column="13">opt_ignore_existing<pos:position pos:line="170" pos:column="32"/></name> <operator pos:line="170" pos:column="33">&amp;&amp;<pos:position pos:line="170" pos:column="43"/></operator> <name pos:line="170" pos:column="36">am_sender<pos:position pos:line="170" pos:column="45"/></name></expr>)<pos:position pos:line="170" pos:column="46"/></condition><then pos:line="170" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="171" pos:column="17">args<pos:position pos:line="171" pos:column="21"/></name><index pos:line="171" pos:column="21">[<expr><name pos:line="171" pos:column="22">ac<pos:position pos:line="171" pos:column="24"/></name><operator pos:line="171" pos:column="24">++<pos:position pos:line="171" pos:column="26"/></operator></expr>]<pos:position pos:line="171" pos:column="27"/></index></name> <operator pos:line="171" pos:column="28">=<pos:position pos:line="171" pos:column="29"/></operator> <literal type="string" pos:line="171" pos:column="30">"--ignore-existing"<pos:position pos:line="171" pos:column="49"/></literal></expr>;<pos:position pos:line="171" pos:column="50"/></expr_stmt></block></then></if>

	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><name pos:line="173" pos:column="13">tmpdir<pos:position pos:line="173" pos:column="19"/></name></expr>)<pos:position pos:line="173" pos:column="20"/></condition><then pos:line="173" pos:column="20"> <block pos:line="173" pos:column="21">{
		<expr_stmt><expr><name><name pos:line="174" pos:column="17">args<pos:position pos:line="174" pos:column="21"/></name><index pos:line="174" pos:column="21">[<expr><name pos:line="174" pos:column="22">ac<pos:position pos:line="174" pos:column="24"/></name><operator pos:line="174" pos:column="24">++<pos:position pos:line="174" pos:column="26"/></operator></expr>]<pos:position pos:line="174" pos:column="27"/></index></name> <operator pos:line="174" pos:column="28">=<pos:position pos:line="174" pos:column="29"/></operator> <literal type="string" pos:line="174" pos:column="30">"--temp-dir"<pos:position pos:line="174" pos:column="42"/></literal></expr>;<pos:position pos:line="174" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="175" pos:column="17">args<pos:position pos:line="175" pos:column="21"/></name><index pos:line="175" pos:column="21">[<expr><name pos:line="175" pos:column="22">ac<pos:position pos:line="175" pos:column="24"/></name><operator pos:line="175" pos:column="24">++<pos:position pos:line="175" pos:column="26"/></operator></expr>]<pos:position pos:line="175" pos:column="27"/></index></name> <operator pos:line="175" pos:column="28">=<pos:position pos:line="175" pos:column="29"/></operator> <name pos:line="175" pos:column="30">tmpdir<pos:position pos:line="175" pos:column="36"/></name></expr>;<pos:position pos:line="175" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="176" pos:column="10"/></block></then></if>

	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name pos:line="178" pos:column="13">compare_dest<pos:position pos:line="178" pos:column="25"/></name> <operator pos:line="178" pos:column="26">&amp;&amp;<pos:position pos:line="178" pos:column="36"/></operator> <name pos:line="178" pos:column="29">am_sender<pos:position pos:line="178" pos:column="38"/></name></expr>)<pos:position pos:line="178" pos:column="39"/></condition><then pos:line="178" pos:column="39"> <block pos:line="178" pos:column="40">{
		<comment type="block" pos:line="179" pos:column="17">/* the server only needs this option if it is not the sender,
		 *   and it may be an older version that doesn't know this
		 *   option, so don't send it if client is the sender.
		 */</comment>
		<expr_stmt><expr><name><name pos:line="183" pos:column="17">args<pos:position pos:line="183" pos:column="21"/></name><index pos:line="183" pos:column="21">[<expr><name pos:line="183" pos:column="22">ac<pos:position pos:line="183" pos:column="24"/></name><operator pos:line="183" pos:column="24">++<pos:position pos:line="183" pos:column="26"/></operator></expr>]<pos:position pos:line="183" pos:column="27"/></index></name> <operator pos:line="183" pos:column="28">=<pos:position pos:line="183" pos:column="29"/></operator> <ternary><condition><expr><name pos:line="183" pos:column="30">link_dest<pos:position pos:line="183" pos:column="39"/></name></expr> ?<pos:position pos:line="183" pos:column="41"/></condition><then pos:line="183" pos:column="41"> <expr><literal type="string" pos:line="183" pos:column="42">"--link-dest"<pos:position pos:line="183" pos:column="55"/></literal></expr> <pos:position pos:line="183" pos:column="56"/></then><else pos:line="183" pos:column="56">: <expr><literal type="string" pos:line="183" pos:column="58">"--compare-dest"<pos:position pos:line="183" pos:column="74"/></literal></expr></else></ternary></expr>;<pos:position pos:line="183" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="184" pos:column="17">args<pos:position pos:line="184" pos:column="21"/></name><index pos:line="184" pos:column="21">[<expr><name pos:line="184" pos:column="22">ac<pos:position pos:line="184" pos:column="24"/></name><operator pos:line="184" pos:column="24">++<pos:position pos:line="184" pos:column="26"/></operator></expr>]<pos:position pos:line="184" pos:column="27"/></index></name> <operator pos:line="184" pos:column="28">=<pos:position pos:line="184" pos:column="29"/></operator> <name pos:line="184" pos:column="30">compare_dest<pos:position pos:line="184" pos:column="42"/></name></expr>;<pos:position pos:line="184" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="185" pos:column="10"/></block></then></if>

	<if pos:line="187" pos:column="9">if <condition pos:line="187" pos:column="12">(<expr><name pos:line="187" pos:column="13">files_from<pos:position pos:line="187" pos:column="23"/></name> <operator pos:line="187" pos:column="24">&amp;&amp;<pos:position pos:line="187" pos:column="34"/></operator> <operator pos:line="187" pos:column="27">(<pos:position pos:line="187" pos:column="28"/></operator><operator pos:line="187" pos:column="28">!<pos:position pos:line="187" pos:column="29"/></operator><name pos:line="187" pos:column="29">am_sender<pos:position pos:line="187" pos:column="38"/></name> <operator pos:line="187" pos:column="39">||<pos:position pos:line="187" pos:column="41"/></operator> <name pos:line="187" pos:column="42">remote_filesfrom_file<pos:position pos:line="187" pos:column="63"/></name><operator pos:line="187" pos:column="63">)<pos:position pos:line="187" pos:column="64"/></operator></expr>)<pos:position pos:line="187" pos:column="65"/></condition><then pos:line="187" pos:column="65"> <block pos:line="187" pos:column="66">{
		<if pos:line="188" pos:column="17">if <condition pos:line="188" pos:column="20">(<expr><name pos:line="188" pos:column="21">remote_filesfrom_file<pos:position pos:line="188" pos:column="42"/></name></expr>)<pos:position pos:line="188" pos:column="43"/></condition><then pos:line="188" pos:column="43"> <block pos:line="188" pos:column="44">{
			<expr_stmt><expr><name><name pos:line="189" pos:column="25">args<pos:position pos:line="189" pos:column="29"/></name><index pos:line="189" pos:column="29">[<expr><name pos:line="189" pos:column="30">ac<pos:position pos:line="189" pos:column="32"/></name><operator pos:line="189" pos:column="32">++<pos:position pos:line="189" pos:column="34"/></operator></expr>]<pos:position pos:line="189" pos:column="35"/></index></name> <operator pos:line="189" pos:column="36">=<pos:position pos:line="189" pos:column="37"/></operator> <literal type="string" pos:line="189" pos:column="38">"--files-from"<pos:position pos:line="189" pos:column="52"/></literal></expr>;<pos:position pos:line="189" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="190" pos:column="25">args<pos:position pos:line="190" pos:column="29"/></name><index pos:line="190" pos:column="29">[<expr><name pos:line="190" pos:column="30">ac<pos:position pos:line="190" pos:column="32"/></name><operator pos:line="190" pos:column="32">++<pos:position pos:line="190" pos:column="34"/></operator></expr>]<pos:position pos:line="190" pos:column="35"/></index></name> <operator pos:line="190" pos:column="36">=<pos:position pos:line="190" pos:column="37"/></operator> <name pos:line="190" pos:column="38">remote_filesfrom_file<pos:position pos:line="190" pos:column="59"/></name></expr>;<pos:position pos:line="190" pos:column="60"/></expr_stmt>
			<if pos:line="191" pos:column="25">if <condition pos:line="191" pos:column="28">(<expr><name pos:line="191" pos:column="29">eol_nulls<pos:position pos:line="191" pos:column="38"/></name></expr>)<pos:position pos:line="191" pos:column="39"/></condition><then pos:line="191" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="192" pos:column="33">args<pos:position pos:line="192" pos:column="37"/></name><index pos:line="192" pos:column="37">[<expr><name pos:line="192" pos:column="38">ac<pos:position pos:line="192" pos:column="40"/></name><operator pos:line="192" pos:column="40">++<pos:position pos:line="192" pos:column="42"/></operator></expr>]<pos:position pos:line="192" pos:column="43"/></index></name> <operator pos:line="192" pos:column="44">=<pos:position pos:line="192" pos:column="45"/></operator> <literal type="string" pos:line="192" pos:column="46">"--from0"<pos:position pos:line="192" pos:column="55"/></literal></expr>;<pos:position pos:line="192" pos:column="56"/></expr_stmt></block></then></if>
		}<pos:position pos:line="193" pos:column="18"/></block></then> <else pos:line="193" pos:column="19">else <block pos:line="193" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="194" pos:column="25">args<pos:position pos:line="194" pos:column="29"/></name><index pos:line="194" pos:column="29">[<expr><name pos:line="194" pos:column="30">ac<pos:position pos:line="194" pos:column="32"/></name><operator pos:line="194" pos:column="32">++<pos:position pos:line="194" pos:column="34"/></operator></expr>]<pos:position pos:line="194" pos:column="35"/></index></name> <operator pos:line="194" pos:column="36">=<pos:position pos:line="194" pos:column="37"/></operator> <literal type="string" pos:line="194" pos:column="38">"--files-from=-"<pos:position pos:line="194" pos:column="54"/></literal></expr>;<pos:position pos:line="194" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="195" pos:column="25">args<pos:position pos:line="195" pos:column="29"/></name><index pos:line="195" pos:column="29">[<expr><name pos:line="195" pos:column="30">ac<pos:position pos:line="195" pos:column="32"/></name><operator pos:line="195" pos:column="32">++<pos:position pos:line="195" pos:column="34"/></operator></expr>]<pos:position pos:line="195" pos:column="35"/></index></name> <operator pos:line="195" pos:column="36">=<pos:position pos:line="195" pos:column="37"/></operator> <literal type="string" pos:line="195" pos:column="38">"--from0"<pos:position pos:line="195" pos:column="47"/></literal></expr>;<pos:position pos:line="195" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="196" pos:column="18"/></block></else></if>
	}<pos:position pos:line="197" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="199" pos:column="9">*<pos:position pos:line="199" pos:column="10"/></operator><name pos:line="199" pos:column="10">argc<pos:position pos:line="199" pos:column="14"/></name> <operator pos:line="199" pos:column="15">=<pos:position pos:line="199" pos:column="16"/></operator> <name pos:line="199" pos:column="17">ac<pos:position pos:line="199" pos:column="19"/></name></expr>;<pos:position pos:line="199" pos:column="20"/></expr_stmt>
	<return pos:line="200" pos:column="9">return;<pos:position pos:line="200" pos:column="16"/></return>

    <label><name pos:line="202" pos:column="5">oom<pos:position pos:line="202" pos:column="8"/></name>:<pos:position pos:line="202" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="203" pos:column="9">out_of_memory<pos:position pos:line="203" pos:column="22"/></name><argument_list pos:line="203" pos:column="22">(<argument><expr><literal type="string" pos:line="203" pos:column="23">"server_options"<pos:position pos:line="203" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="41"/></expr_stmt>
}<pos:position pos:line="204" pos:column="2"/></block></function></unit>

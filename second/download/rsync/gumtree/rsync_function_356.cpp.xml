<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_356.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">delete_file<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">fname<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">DIR<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">d<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">dirent<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">di<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><name pos:line="5" pos:column="18">MAXPATHLEN<pos:position pos:line="5" pos:column="28"/></name></expr>]<pos:position pos:line="5" pos:column="29"/></index></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">extern<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">force_delete<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">stat<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ret<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">do_unlink<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">fname<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call> <operator pos:line="10" pos:column="30">==<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal> <operator pos:line="10" pos:column="35">||<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">errno<pos:position pos:line="10" pos:column="43"/></name> <operator pos:line="10" pos:column="44">==<pos:position pos:line="10" pos:column="46"/></operator> <name pos:line="10" pos:column="47">ENOENT<pos:position pos:line="10" pos:column="53"/></name></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54"> <block type="pseudo"><return pos:line="10" pos:column="55">return <expr><literal type="number" pos:line="10" pos:column="62">0<pos:position pos:line="10" pos:column="63"/></literal></expr>;<pos:position pos:line="10" pos:column="64"/></return></block></then></if>

<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">SUPPORT_LINKS<pos:position pos:line="12" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ret<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">lstat<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">fname<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="28">&amp;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="29">st<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="15" pos:column="9">ret<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">stat<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">fname<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="27">&amp;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="28">st<pos:position pos:line="15" pos:column="30"/></name></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ret<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">fprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">FERROR<pos:position pos:line="18" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="18" pos:column="32">"stat(%s) : %s\n"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">fname<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="58">strerror<pos:position pos:line="18" pos:column="66"/></name><argument_list pos:line="18" pos:column="66">(<argument><expr><name pos:line="18" pos:column="67">errno<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="75"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">S_ISDIR<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name><name pos:line="22" pos:column="22">st<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">st_mode<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">fprintf<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">FERROR<pos:position pos:line="23" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="23" pos:column="32">"unlink(%s) : %s\n"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">fname<pos:position pos:line="23" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="60">strerror<pos:position pos:line="23" pos:column="68"/></name><argument_list pos:line="23" pos:column="68">(<argument><expr><name pos:line="23" pos:column="69">errno<pos:position pos:line="23" pos:column="74"/></name></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="77"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><operator pos:line="24" pos:column="24">-<pos:position pos:line="24" pos:column="25"/></operator><literal type="number" pos:line="24" pos:column="25">1<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">do_rmdir<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">fname<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call> <operator pos:line="27" pos:column="29">==<pos:position pos:line="27" pos:column="31"/></operator> <literal type="number" pos:line="27" pos:column="32">0<pos:position pos:line="27" pos:column="33"/></literal> <operator pos:line="27" pos:column="34">||<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">errno<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">==<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">ENOENT<pos:position pos:line="27" pos:column="52"/></name></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53"> <block type="pseudo"><return pos:line="27" pos:column="54">return <expr><literal type="number" pos:line="27" pos:column="61">0<pos:position pos:line="27" pos:column="62"/></literal></expr>;<pos:position pos:line="27" pos:column="63"/></return></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">force_delete<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">||<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">errno<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">!=<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="39">ENOTEMPTY<pos:position pos:line="28" pos:column="48"/></name></expr>)<pos:position pos:line="28" pos:column="49"/></condition><then pos:line="28" pos:column="49"> <block pos:line="28" pos:column="50">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">fprintf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">FERROR<pos:position pos:line="29" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="32">"rmdir(%s) : %s\n"<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="52">fname<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="59">strerror<pos:position pos:line="29" pos:column="67"/></name><argument_list pos:line="29" pos:column="67">(<argument><expr><name pos:line="29" pos:column="68">errno<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="76"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">-<pos:position pos:line="30" pos:column="25"/></operator><literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="33" pos:column="9">/* now we do a recsursive delete on the directory ... */</comment>
	<expr_stmt><expr><name pos:line="34" pos:column="9">d<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">opendir<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">fname<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">d<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">fprintf<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">FERROR<pos:position pos:line="36" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="32">"opendir(%s): %s\n"<pos:position pos:line="36" pos:column="51"/></literal></expr></argument>,
			<argument><expr><name pos:line="37" pos:column="25">fname<pos:position pos:line="37" pos:column="30"/></name></expr></argument>,<argument><expr><call><name pos:line="37" pos:column="31">strerror<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">errno<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
		<return pos:line="38" pos:column="17">return <expr><operator pos:line="38" pos:column="24">-<pos:position pos:line="38" pos:column="25"/></operator><literal type="number" pos:line="38" pos:column="25">1<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></return>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">di<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator><call><name pos:line="41" pos:column="17">readdir<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">d<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></init> <condition><expr><name pos:line="41" pos:column="29">di<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></condition> <incr><expr><name pos:line="41" pos:column="33">di<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">=<pos:position pos:line="41" pos:column="36"/></operator><call><name pos:line="41" pos:column="36">readdir<pos:position pos:line="41" pos:column="43"/></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name pos:line="41" pos:column="44">d<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr></incr>)<pos:position pos:line="41" pos:column="47"/></control> <block pos:line="41" pos:column="48">{
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name pos:line="42" pos:column="21">strcmp<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">di<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">d_name<pos:position pos:line="42" pos:column="38"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="42" pos:column="39">"."<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call><operator pos:line="42" pos:column="43">==<pos:position pos:line="42" pos:column="45"/></operator><literal type="number" pos:line="42" pos:column="45">0<pos:position pos:line="42" pos:column="46"/></literal> <operator pos:line="42" pos:column="47">||<pos:position pos:line="42" pos:column="49"/></operator>
		    <call><name pos:line="43" pos:column="21">strcmp<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name><name pos:line="43" pos:column="28">di<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">d_name<pos:position pos:line="43" pos:column="38"/></name></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="39">".."<pos:position pos:line="43" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call><operator pos:line="43" pos:column="44">==<pos:position pos:line="43" pos:column="46"/></operator><literal type="number" pos:line="43" pos:column="46">0<pos:position pos:line="43" pos:column="47"/></literal></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48">
			<block type="pseudo"><continue pos:line="44" pos:column="25">continue;<pos:position pos:line="44" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">strncpy<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">buf<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="30">fname<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="37">(<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">MAXPATHLEN<pos:position pos:line="45" pos:column="48"/></name><operator pos:line="45" pos:column="48">-<pos:position pos:line="45" pos:column="49"/></operator><call><name pos:line="45" pos:column="49">strlen<pos:position pos:line="45" pos:column="55"/></name><argument_list pos:line="45" pos:column="55">(<argument><expr><name><name pos:line="45" pos:column="56">di<pos:position pos:line="45" pos:column="58"/></name><operator pos:line="45" pos:column="58">-&gt;<pos:position pos:line="45" pos:column="63"/></operator><name pos:line="45" pos:column="60">d_name<pos:position pos:line="45" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="67"/></argument_list></call><operator pos:line="45" pos:column="67">)<pos:position pos:line="45" pos:column="68"/></operator><operator pos:line="45" pos:column="68">-<pos:position pos:line="45" pos:column="69"/></operator><literal type="number" pos:line="45" pos:column="69">2<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">strcat<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">buf<pos:position pos:line="46" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="29">"/"<pos:position pos:line="46" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">strcat<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">buf<pos:position pos:line="47" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="29">di<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">-&gt;<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="33">d_name<pos:position pos:line="47" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="48" pos:column="17">buf<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><name pos:line="48" pos:column="21">MAXPATHLEN<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-<pos:position pos:line="48" pos:column="32"/></operator><literal type="number" pos:line="48" pos:column="32">1<pos:position pos:line="48" pos:column="33"/></literal></expr>]<pos:position pos:line="48" pos:column="34"/></index></name> <operator pos:line="48" pos:column="35">=<pos:position pos:line="48" pos:column="36"/></operator> <literal type="number" pos:line="48" pos:column="37">0<pos:position pos:line="48" pos:column="38"/></literal></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">verbose<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">&gt;<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="31">0<pos:position pos:line="49" pos:column="32"/></literal></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">fprintf<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">FINFO<pos:position pos:line="50" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="50" pos:column="39">"deleting %s\n"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="56">buf<pos:position pos:line="50" pos:column="59"/></name></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name pos:line="51" pos:column="21">delete_file<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">buf<pos:position pos:line="51" pos:column="36"/></name></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call> <operator pos:line="51" pos:column="38">!=<pos:position pos:line="51" pos:column="40"/></operator> <literal type="number" pos:line="51" pos:column="41">0<pos:position pos:line="51" pos:column="42"/></literal></expr>)<pos:position pos:line="51" pos:column="43"/></condition><then pos:line="51" pos:column="43"> <block pos:line="51" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">closedir<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">d<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
			<return pos:line="53" pos:column="25">return <expr><operator pos:line="53" pos:column="32">-<pos:position pos:line="53" pos:column="33"/></operator><literal type="number" pos:line="53" pos:column="33">1<pos:position pos:line="53" pos:column="34"/></literal></expr>;<pos:position pos:line="53" pos:column="35"/></return>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></for>	

	<expr_stmt><expr><call><name pos:line="57" pos:column="9">closedir<pos:position pos:line="57" pos:column="17"/></name><argument_list pos:line="57" pos:column="17">(<argument><expr><name pos:line="57" pos:column="18">d<pos:position pos:line="57" pos:column="19"/></name></expr></argument>)<pos:position pos:line="57" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
	
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">do_rmdir<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">fname<pos:position pos:line="59" pos:column="27"/></name></expr></argument>)<pos:position pos:line="59" pos:column="28"/></argument_list></call> <operator pos:line="59" pos:column="29">!=<pos:position pos:line="59" pos:column="31"/></operator> <literal type="number" pos:line="59" pos:column="32">0<pos:position pos:line="59" pos:column="33"/></literal></expr>)<pos:position pos:line="59" pos:column="34"/></condition><then pos:line="59" pos:column="34"> <block pos:line="59" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">fprintf<pos:position pos:line="60" pos:column="24"/></name><argument_list pos:line="60" pos:column="24">(<argument><expr><name pos:line="60" pos:column="25">FERROR<pos:position pos:line="60" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="60" pos:column="32">"rmdir(%s) : %s\n"<pos:position pos:line="60" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="52">fname<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="59">strerror<pos:position pos:line="60" pos:column="67"/></name><argument_list pos:line="60" pos:column="67">(<argument><expr><name pos:line="60" pos:column="68">errno<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="76"/></expr_stmt>
		<return pos:line="61" pos:column="17">return <expr><operator pos:line="61" pos:column="24">-<pos:position pos:line="61" pos:column="25"/></operator><literal type="number" pos:line="61" pos:column="25">1<pos:position pos:line="61" pos:column="26"/></literal></expr>;<pos:position pos:line="61" pos:column="27"/></return>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<return pos:line="64" pos:column="9">return <expr><literal type="number" pos:line="64" pos:column="16">0<pos:position pos:line="64" pos:column="17"/></literal></expr>;<pos:position pos:line="64" pos:column="18"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

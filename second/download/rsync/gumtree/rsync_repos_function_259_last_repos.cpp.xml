<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_259_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">send_files<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">f_in<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">f_out<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><operator pos:line="3" pos:column="18">-<pos:position pos:line="3" pos:column="19"/></operator><literal type="number" pos:line="3" pos:column="19">1<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">sum_struct<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">s<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">map_struct<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">mbuf<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">NULL<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">STRUCT_STAT<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">st<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">fname<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><name pos:line="7" pos:column="20">MAXPATHLEN<pos:position pos:line="7" pos:column="30"/></name></expr>]<pos:position pos:line="7" pos:column="31"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="33">xname<pos:position pos:line="7" pos:column="38"/></name><index pos:line="7" pos:column="38">[<expr><name pos:line="7" pos:column="39">MAXPATHLEN<pos:position pos:line="7" pos:column="49"/></name></expr>]<pos:position pos:line="7" pos:column="50"/></index></name></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">path<pos:position pos:line="8" pos:column="25"/></name></decl>, <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="28">slash<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">uchar<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">fnamecmp_type<pos:position pos:line="9" pos:column="28"/></name></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">iflags<pos:position pos:line="10" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="21">xlen<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">file_struct<pos:position pos:line="11" pos:column="27"/></name></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">file<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">phase<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="24">max_phase<pos:position pos:line="12" pos:column="33"/></name> <init pos:line="12" pos:column="34">= <expr><ternary><condition><expr><name pos:line="12" pos:column="36">protocol_version<pos:position pos:line="12" pos:column="52"/></name> <operator pos:line="12" pos:column="53">&gt;=<pos:position pos:line="12" pos:column="58"/></operator> <literal type="number" pos:line="12" pos:column="56">29<pos:position pos:line="12" pos:column="58"/></literal></expr> ?<pos:position pos:line="12" pos:column="60"/></condition><then pos:line="12" pos:column="60"> <expr><literal type="number" pos:line="12" pos:column="61">2<pos:position pos:line="12" pos:column="62"/></literal></expr> <pos:position pos:line="12" pos:column="63"/></then><else pos:line="12" pos:column="63">: <expr><literal type="number" pos:line="12" pos:column="65">1<pos:position pos:line="12" pos:column="66"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="12" pos:column="67"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">itemizing<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><ternary><condition><expr><name pos:line="13" pos:column="25">am_server<pos:position pos:line="13" pos:column="34"/></name></expr> ?<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <expr><name pos:line="13" pos:column="37">logfile_format_has_i<pos:position pos:line="13" pos:column="57"/></name></expr> <pos:position pos:line="13" pos:column="58"/></then><else pos:line="13" pos:column="58">: <expr><name pos:line="13" pos:column="60">stdout_format_has_i<pos:position pos:line="13" pos:column="79"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="80"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">enum<pos:position pos:line="14" pos:column="13"/></name> <name pos:line="14" pos:column="14">logcode<pos:position pos:line="14" pos:column="21"/></name></name></type> <name pos:line="14" pos:column="22">log_code<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><ternary><condition><expr><name pos:line="14" pos:column="33">log_before_transfer<pos:position pos:line="14" pos:column="52"/></name></expr> ?<pos:position pos:line="14" pos:column="54"/></condition><then pos:line="14" pos:column="54"> <expr><name pos:line="14" pos:column="55">FLOG<pos:position pos:line="14" pos:column="59"/></name></expr> <pos:position pos:line="14" pos:column="60"/></then><else pos:line="14" pos:column="60">: <expr><name pos:line="14" pos:column="62">FINFO<pos:position pos:line="14" pos:column="67"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="14" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">f_xfer<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><ternary><condition><expr><name pos:line="15" pos:column="22">write_batch<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">&lt;<pos:position pos:line="15" pos:column="38"/></operator> <literal type="number" pos:line="15" pos:column="36">0<pos:position pos:line="15" pos:column="37"/></literal></expr> ?<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39"> <expr><name pos:line="15" pos:column="40">batch_fd<pos:position pos:line="15" pos:column="48"/></name></expr> <pos:position pos:line="15" pos:column="49"/></then><else pos:line="15" pos:column="49">: <expr><name pos:line="15" pos:column="51">f_out<pos:position pos:line="15" pos:column="56"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="15" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">save_io_error<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><name pos:line="16" pos:column="29">io_error<pos:position pos:line="16" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">ndx<pos:position pos:line="17" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="18">j<pos:position pos:line="17" pos:column="19"/></name></decl>;<pos:position pos:line="17" pos:column="20"/></decl_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">DEBUG_GTE<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">SEND<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="29">1<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">rprintf<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">FINFO<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"send_files starting\n"<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt></block></then></if>

	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr>)<pos:position pos:line="22" pos:column="18"/></condition> <block pos:line="22" pos:column="19">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">inc_recurse<pos:position pos:line="23" pos:column="32"/></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33"> <block pos:line="23" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">send_extra_file_list<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">f_out<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">MIN_FILECNT_LOOKAHEAD<pos:position pos:line="24" pos:column="74"/></name></expr></argument>)<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="76"/></expr_stmt>
			<expr_stmt><expr><name pos:line="25" pos:column="25">extra_flist_sending_enabled<pos:position pos:line="25" pos:column="52"/></name> <operator pos:line="25" pos:column="53">=<pos:position pos:line="25" pos:column="54"/></operator> <operator pos:line="25" pos:column="55">!<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">flist_eof<pos:position pos:line="25" pos:column="65"/></name></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="28" pos:column="17">/* This call also sets cur_flist. */</comment>
		<expr_stmt><expr><name pos:line="29" pos:column="17">ndx<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">read_ndx_and_attrs<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">f_in<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">f_out<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="55">&amp;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="56">iflags<pos:position pos:line="29" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="64">&amp;<pos:position pos:line="29" pos:column="69"/></operator><name pos:line="29" pos:column="65">fnamecmp_type<pos:position pos:line="29" pos:column="78"/></name></expr></argument>,
					 <argument><expr><name pos:line="30" pos:column="42">xname<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="49">&amp;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="50">xlen<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">extra_flist_sending_enabled<pos:position pos:line="31" pos:column="44"/></name> <operator pos:line="31" pos:column="45">=<pos:position pos:line="31" pos:column="46"/></operator> <name pos:line="31" pos:column="47">False<pos:position pos:line="31" pos:column="52"/></name></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">ndx<pos:position pos:line="33" pos:column="24"/></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">NDX_DONE<pos:position pos:line="33" pos:column="36"/></name></expr>)<pos:position pos:line="33" pos:column="37"/></condition><then pos:line="33" pos:column="37"> <block pos:line="33" pos:column="38">{
			<if pos:line="34" pos:column="25">if <condition pos:line="34" pos:column="28">(<expr><operator pos:line="34" pos:column="29">!<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">am_server<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">&amp;&amp;<pos:position pos:line="34" pos:column="50"/></operator> <call><name pos:line="34" pos:column="43">INFO_GTE<pos:position pos:line="34" pos:column="51"/></name><argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">PROGRESS<pos:position pos:line="34" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="62">2<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="64"/></argument_list></call> <operator pos:line="34" pos:column="65">&amp;&amp;<pos:position pos:line="34" pos:column="75"/></operator> <name pos:line="34" pos:column="68">cur_flist<pos:position pos:line="34" pos:column="77"/></name></expr>)<pos:position pos:line="34" pos:column="78"/></condition><then pos:line="34" pos:column="78"> <block pos:line="34" pos:column="79">{
				<expr_stmt><expr><call><name pos:line="35" pos:column="33">set_current_file_index<pos:position pos:line="35" pos:column="55"/></name><argument_list pos:line="35" pos:column="55">(<argument><expr><name pos:line="35" pos:column="56">NULL<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="62">0<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">end_progress<pos:position pos:line="36" pos:column="45"/></name><argument_list pos:line="36" pos:column="45">(<argument><expr><literal type="number" pos:line="36" pos:column="46">0<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="37" pos:column="26"/></block></then></if>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><name pos:line="38" pos:column="29">inc_recurse<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">&amp;&amp;<pos:position pos:line="38" pos:column="51"/></operator> <name pos:line="38" pos:column="44">first_flist<pos:position pos:line="38" pos:column="55"/></name></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56"> <block pos:line="38" pos:column="57">{
				<expr_stmt><expr><name pos:line="39" pos:column="33">file_old_total<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">-=<pos:position pos:line="39" pos:column="50"/></operator> <name><name pos:line="39" pos:column="51">first_flist<pos:position pos:line="39" pos:column="62"/></name><operator pos:line="39" pos:column="62">-&gt;<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="64">used<pos:position pos:line="39" pos:column="68"/></name></name></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="40" pos:column="33">flist_free<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">first_flist<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
				<if pos:line="41" pos:column="33">if <condition pos:line="41" pos:column="36">(<expr><name pos:line="41" pos:column="37">first_flist<pos:position pos:line="41" pos:column="48"/></name></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49"> <block pos:line="41" pos:column="50">{
					<if pos:line="42" pos:column="41">if <condition pos:line="42" pos:column="44">(<expr><name pos:line="42" pos:column="45">first_flist<pos:position pos:line="42" pos:column="56"/></name> <operator pos:line="42" pos:column="57">==<pos:position pos:line="42" pos:column="59"/></operator> <name pos:line="42" pos:column="60">cur_flist<pos:position pos:line="42" pos:column="69"/></name></expr>)<pos:position pos:line="42" pos:column="70"/></condition><then pos:line="42" pos:column="70">
						<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="49">file_old_total<pos:position pos:line="43" pos:column="63"/></name> <operator pos:line="43" pos:column="64">=<pos:position pos:line="43" pos:column="65"/></operator> <name><name pos:line="43" pos:column="66">cur_flist<pos:position pos:line="43" pos:column="75"/></name><operator pos:line="43" pos:column="75">-&gt;<pos:position pos:line="43" pos:column="80"/></operator><name pos:line="43" pos:column="77">used<pos:position pos:line="43" pos:column="81"/></name></name></expr>;<pos:position pos:line="43" pos:column="82"/></expr_stmt></block></then></if>
					<expr_stmt><expr><call><name pos:line="44" pos:column="41">write_ndx<pos:position pos:line="44" pos:column="50"/></name><argument_list pos:line="44" pos:column="50">(<argument><expr><name pos:line="44" pos:column="51">f_out<pos:position pos:line="44" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="58">NDX_DONE<pos:position pos:line="44" pos:column="66"/></name></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>
					<continue pos:line="45" pos:column="41">continue;<pos:position pos:line="45" pos:column="50"/></continue>
				}<pos:position pos:line="46" pos:column="34"/></block></then></if>
			}<pos:position pos:line="47" pos:column="26"/></block></then></if>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><operator pos:line="48" pos:column="29">++<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="31">phase<pos:position pos:line="48" pos:column="36"/></name> <operator pos:line="48" pos:column="37">&gt;<pos:position pos:line="48" pos:column="41"/></operator> <name pos:line="48" pos:column="39">max_phase<pos:position pos:line="48" pos:column="48"/></name></expr>)<pos:position pos:line="48" pos:column="49"/></condition><then pos:line="48" pos:column="49">
				<block type="pseudo"><break pos:line="49" pos:column="33">break;<pos:position pos:line="49" pos:column="39"/></break></block></then></if>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><call><name pos:line="50" pos:column="29">DEBUG_GTE<pos:position pos:line="50" pos:column="38"/></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name pos:line="50" pos:column="39">SEND<pos:position pos:line="50" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="45">1<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="48"/></condition><then pos:line="50" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="33">rprintf<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">FINFO<pos:position pos:line="51" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="48">"send_files phase=%d\n"<pos:position pos:line="51" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="73">phase<pos:position pos:line="51" pos:column="78"/></name></expr></argument>)<pos:position pos:line="51" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="80"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="52" pos:column="25">write_ndx<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">f_out<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="42">NDX_DONE<pos:position pos:line="52" pos:column="50"/></name></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
			<continue pos:line="53" pos:column="25">continue;<pos:position pos:line="53" pos:column="34"/></continue>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">inc_recurse<pos:position pos:line="56" pos:column="32"/></name></expr>)<pos:position pos:line="56" pos:column="33"/></condition><then pos:line="56" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="25">send_extra_file_list<pos:position pos:line="57" pos:column="45"/></name><argument_list pos:line="57" pos:column="45">(<argument><expr><name pos:line="57" pos:column="46">f_out<pos:position pos:line="57" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="53">MIN_FILECNT_LOOKAHEAD<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="76"/></expr_stmt></block></then></if>

		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">ndx<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">-<pos:position pos:line="59" pos:column="26"/></operator> <name><name pos:line="59" pos:column="27">cur_flist<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">-&gt;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="38">ndx_start<pos:position pos:line="59" pos:column="47"/></name></name> <operator pos:line="59" pos:column="48">&gt;=<pos:position pos:line="59" pos:column="53"/></operator> <literal type="number" pos:line="59" pos:column="51">0<pos:position pos:line="59" pos:column="52"/></literal></expr>)<pos:position pos:line="59" pos:column="53"/></condition><then pos:line="59" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="25">file<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <name><name pos:line="60" pos:column="32">cur_flist<pos:position pos:line="60" pos:column="41"/></name><operator pos:line="60" pos:column="41">-&gt;<pos:position pos:line="60" pos:column="46"/></operator><name pos:line="60" pos:column="43">files<pos:position pos:line="60" pos:column="48"/></name><index pos:line="60" pos:column="48">[<expr><name pos:line="60" pos:column="49">ndx<pos:position pos:line="60" pos:column="52"/></name> <operator pos:line="60" pos:column="53">-<pos:position pos:line="60" pos:column="54"/></operator> <name><name pos:line="60" pos:column="55">cur_flist<pos:position pos:line="60" pos:column="64"/></name><operator pos:line="60" pos:column="64">-&gt;<pos:position pos:line="60" pos:column="69"/></operator><name pos:line="60" pos:column="66">ndx_start<pos:position pos:line="60" pos:column="75"/></name></name></expr>]<pos:position pos:line="60" pos:column="76"/></index></name></expr>;<pos:position pos:line="60" pos:column="77"/></expr_stmt></block></then>
		<else pos:line="61" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="25">file<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">=<pos:position pos:line="62" pos:column="31"/></operator> <name><name pos:line="62" pos:column="32">dir_flist<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">-&gt;<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="43">files<pos:position pos:line="62" pos:column="48"/></name><index pos:line="62" pos:column="48">[<expr><name><name pos:line="62" pos:column="49">cur_flist<pos:position pos:line="62" pos:column="58"/></name><operator pos:line="62" pos:column="58">-&gt;<pos:position pos:line="62" pos:column="63"/></operator><name pos:line="62" pos:column="60">parent_ndx<pos:position pos:line="62" pos:column="70"/></name></name></expr>]<pos:position pos:line="62" pos:column="71"/></index></name></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt></block></else></if>
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><call><name pos:line="63" pos:column="21">F_PATHNAME<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">file<pos:position pos:line="63" pos:column="36"/></name></expr></argument>)<pos:position pos:line="63" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="38"/></condition><then pos:line="63" pos:column="38"> <block pos:line="63" pos:column="39">{
			<expr_stmt><expr><name pos:line="64" pos:column="25">path<pos:position pos:line="64" pos:column="29"/></name> <operator pos:line="64" pos:column="30">=<pos:position pos:line="64" pos:column="31"/></operator> <call><name pos:line="64" pos:column="32">F_PATHNAME<pos:position pos:line="64" pos:column="42"/></name><argument_list pos:line="64" pos:column="42">(<argument><expr><name pos:line="64" pos:column="43">file<pos:position pos:line="64" pos:column="47"/></name></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="65" pos:column="25">slash<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">=<pos:position pos:line="65" pos:column="32"/></operator> <literal type="string" pos:line="65" pos:column="33">"/"<pos:position pos:line="65" pos:column="36"/></literal></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="66" pos:column="18"/></block></then> <else pos:line="66" pos:column="19">else <block pos:line="66" pos:column="24">{
			<expr_stmt><expr><name pos:line="67" pos:column="25">path<pos:position pos:line="67" pos:column="29"/></name> <operator pos:line="67" pos:column="30">=<pos:position pos:line="67" pos:column="31"/></operator> <name pos:line="67" pos:column="32">slash<pos:position pos:line="67" pos:column="37"/></name> <operator pos:line="67" pos:column="38">=<pos:position pos:line="67" pos:column="39"/></operator> <literal type="string" pos:line="67" pos:column="40">""<pos:position pos:line="67" pos:column="42"/></literal></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></else></if>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">!<pos:position pos:line="69" pos:column="22"/></operator><call><name pos:line="69" pos:column="22">change_pathname<pos:position pos:line="69" pos:column="37"/></name><argument_list pos:line="69" pos:column="37">(<argument><expr><name pos:line="69" pos:column="38">file<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">NULL<pos:position pos:line="69" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="50">0<pos:position pos:line="69" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="53"/></condition><then pos:line="69" pos:column="53">
			<block type="pseudo"><continue pos:line="70" pos:column="25">continue;<pos:position pos:line="70" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">f_name<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">file<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">fname<pos:position pos:line="71" pos:column="35"/></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><call><name pos:line="73" pos:column="21">DEBUG_GTE<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">SEND<pos:position pos:line="73" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="37">1<pos:position pos:line="73" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="40"/></condition><then pos:line="73" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="25">rprintf<pos:position pos:line="74" pos:column="32"/></name><argument_list pos:line="74" pos:column="32">(<argument><expr><name pos:line="74" pos:column="33">FINFO<pos:position pos:line="74" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="40">"send_files(%d, %s%s%s)\n"<pos:position pos:line="74" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="68">ndx<pos:position pos:line="74" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="73">path<pos:position pos:line="74" pos:column="77"/></name></expr></argument>,<argument><expr><name pos:line="74" pos:column="78">slash<pos:position pos:line="74" pos:column="83"/></name></expr></argument>,<argument><expr><name pos:line="74" pos:column="84">fname<pos:position pos:line="74" pos:column="89"/></name></expr></argument>)<pos:position pos:line="74" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="91"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef<pos:position pos:line="76" pos:column="7"/></cpp:directive> <name pos:line="76" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="76" pos:column="22"/></name></cpp:ifdef>
		<if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><name pos:line="77" pos:column="21">preserve_xattrs<pos:position pos:line="77" pos:column="36"/></name> <operator pos:line="77" pos:column="37">&amp;&amp;<pos:position pos:line="77" pos:column="47"/></operator> <name pos:line="77" pos:column="40">iflags<pos:position pos:line="77" pos:column="46"/></name> <operator pos:line="77" pos:column="47">&amp;<pos:position pos:line="77" pos:column="52"/></operator> <name pos:line="77" pos:column="49">ITEM_REPORT_XATTR<pos:position pos:line="77" pos:column="66"/></name> <operator pos:line="77" pos:column="67">&amp;&amp;<pos:position pos:line="77" pos:column="77"/></operator> <name pos:line="77" pos:column="70">do_xfers<pos:position pos:line="77" pos:column="78"/></name>
		 <operator pos:line="78" pos:column="18">&amp;&amp;<pos:position pos:line="78" pos:column="28"/></operator> <operator pos:line="78" pos:column="21">!<pos:position pos:line="78" pos:column="22"/></operator><operator pos:line="78" pos:column="22">(<pos:position pos:line="78" pos:column="23"/></operator><name pos:line="78" pos:column="23">want_xattr_optim<pos:position pos:line="78" pos:column="39"/></name> <operator pos:line="78" pos:column="40">&amp;&amp;<pos:position pos:line="78" pos:column="50"/></operator> <call><name pos:line="78" pos:column="43">BITS_SET<pos:position pos:line="78" pos:column="51"/></name><argument_list pos:line="78" pos:column="51">(<argument><expr><name pos:line="78" pos:column="52">iflags<pos:position pos:line="78" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="60">ITEM_XNAME_FOLLOWS<pos:position pos:line="78" pos:column="78"/></name><operator pos:line="78" pos:column="78">|<pos:position pos:line="78" pos:column="79"/></operator><name pos:line="78" pos:column="79">ITEM_LOCAL_CHANGE<pos:position pos:line="78" pos:column="96"/></name></expr></argument>)<pos:position pos:line="78" pos:column="97"/></argument_list></call><operator pos:line="78" pos:column="97">)<pos:position pos:line="78" pos:column="98"/></operator></expr>)<pos:position pos:line="78" pos:column="99"/></condition><then pos:line="78" pos:column="99">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="25">recv_xattr_request<pos:position pos:line="79" pos:column="43"/></name><argument_list pos:line="79" pos:column="43">(<argument><expr><name pos:line="79" pos:column="44">file<pos:position pos:line="79" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="50">f_in<pos:position pos:line="79" pos:column="54"/></name></expr></argument>)<pos:position pos:line="79" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><operator pos:line="82" pos:column="22">(<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">iflags<pos:position pos:line="82" pos:column="29"/></name> <operator pos:line="82" pos:column="30">&amp;<pos:position pos:line="82" pos:column="35"/></operator> <name pos:line="82" pos:column="32">ITEM_TRANSFER<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">)<pos:position pos:line="82" pos:column="46"/></operator></expr>)<pos:position pos:line="82" pos:column="47"/></condition><then pos:line="82" pos:column="47"> <block pos:line="82" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">maybe_log_item<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><name pos:line="83" pos:column="40">file<pos:position pos:line="83" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="46">iflags<pos:position pos:line="83" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="54">itemizing<pos:position pos:line="83" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="65">xname<pos:position pos:line="83" pos:column="70"/></name></expr></argument>)<pos:position pos:line="83" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">write_ndx_and_attrs<pos:position pos:line="84" pos:column="44"/></name><argument_list pos:line="84" pos:column="44">(<argument><expr><name pos:line="84" pos:column="45">f_out<pos:position pos:line="84" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="52">ndx<pos:position pos:line="84" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="57">iflags<pos:position pos:line="84" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="65">fname<pos:position pos:line="84" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="72">file<pos:position pos:line="84" pos:column="76"/></name></expr></argument>,
					    <argument><expr><name pos:line="85" pos:column="45">fnamecmp_type<pos:position pos:line="85" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="60">xname<pos:position pos:line="85" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="67">xlen<pos:position pos:line="85" pos:column="71"/></name></expr></argument>)<pos:position pos:line="85" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="73"/></expr_stmt>
			<if pos:line="86" pos:column="25">if <condition pos:line="86" pos:column="28">(<expr><name pos:line="86" pos:column="29">iflags<pos:position pos:line="86" pos:column="35"/></name> <operator pos:line="86" pos:column="36">&amp;<pos:position pos:line="86" pos:column="41"/></operator> <name pos:line="86" pos:column="38">ITEM_IS_NEW<pos:position pos:line="86" pos:column="49"/></name></expr>)<pos:position pos:line="86" pos:column="50"/></condition><then pos:line="86" pos:column="50"> <block pos:line="86" pos:column="51">{
				<expr_stmt><expr><name><name pos:line="87" pos:column="33">stats<pos:position pos:line="87" pos:column="38"/></name><operator pos:line="87" pos:column="38">.<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="39">created_files<pos:position pos:line="87" pos:column="52"/></name></name><operator pos:line="87" pos:column="52">++<pos:position pos:line="87" pos:column="54"/></operator></expr>;<pos:position pos:line="87" pos:column="55"/></expr_stmt>
				<if pos:line="88" pos:column="33">if <condition pos:line="88" pos:column="36">(<expr><call><name pos:line="88" pos:column="37">S_ISREG<pos:position pos:line="88" pos:column="44"/></name><argument_list pos:line="88" pos:column="44">(<argument><expr><name><name pos:line="88" pos:column="45">file<pos:position pos:line="88" pos:column="49"/></name><operator pos:line="88" pos:column="49">-&gt;<pos:position pos:line="88" pos:column="54"/></operator><name pos:line="88" pos:column="51">mode<pos:position pos:line="88" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="57"/></condition><then pos:line="88" pos:column="57"> <block pos:line="88" pos:column="58">{
					<comment type="block" pos:line="89" pos:column="41">/* Nothing further to count. */</comment>
				}<pos:position pos:line="90" pos:column="34"/></block></then> <elseif pos:line="90" pos:column="35">else <if pos:line="90" pos:column="40">if <condition pos:line="90" pos:column="43">(<expr><call><name pos:line="90" pos:column="44">S_ISDIR<pos:position pos:line="90" pos:column="51"/></name><argument_list pos:line="90" pos:column="51">(<argument><expr><name><name pos:line="90" pos:column="52">file<pos:position pos:line="90" pos:column="56"/></name><operator pos:line="90" pos:column="56">-&gt;<pos:position pos:line="90" pos:column="61"/></operator><name pos:line="90" pos:column="58">mode<pos:position pos:line="90" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="64"/></condition><then pos:line="90" pos:column="64">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="91" pos:column="41">stats<pos:position pos:line="91" pos:column="46"/></name><operator pos:line="91" pos:column="46">.<pos:position pos:line="91" pos:column="47"/></operator><name pos:line="91" pos:column="47">created_dirs<pos:position pos:line="91" pos:column="59"/></name></name><operator pos:line="91" pos:column="59">++<pos:position pos:line="91" pos:column="61"/></operator></expr>;<pos:position pos:line="91" pos:column="62"/></expr_stmt></block></then></if></elseif>
<cpp:ifdef pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">ifdef<pos:position pos:line="92" pos:column="7"/></cpp:directive> <name pos:line="92" pos:column="8">SUPPORT_LINKS<pos:position pos:line="92" pos:column="21"/></name></cpp:ifdef>
				<elseif pos:line="93" pos:column="33">else <if pos:line="93" pos:column="38">if <condition pos:line="93" pos:column="41">(<expr><call><name pos:line="93" pos:column="42">S_ISLNK<pos:position pos:line="93" pos:column="49"/></name><argument_list pos:line="93" pos:column="49">(<argument><expr><name><name pos:line="93" pos:column="50">file<pos:position pos:line="93" pos:column="54"/></name><operator pos:line="93" pos:column="54">-&gt;<pos:position pos:line="93" pos:column="59"/></operator><name pos:line="93" pos:column="56">mode<pos:position pos:line="93" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="62"/></condition><then pos:line="93" pos:column="62">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="94" pos:column="41">stats<pos:position pos:line="94" pos:column="46"/></name><operator pos:line="94" pos:column="46">.<pos:position pos:line="94" pos:column="47"/></operator><name pos:line="94" pos:column="47">created_symlinks<pos:position pos:line="94" pos:column="63"/></name></name><operator pos:line="94" pos:column="63">++<pos:position pos:line="94" pos:column="65"/></operator></expr>;<pos:position pos:line="94" pos:column="66"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>
				<elseif pos:line="96" pos:column="33">else <if pos:line="96" pos:column="38">if <condition pos:line="96" pos:column="41">(<expr><call><name pos:line="96" pos:column="42">IS_DEVICE<pos:position pos:line="96" pos:column="51"/></name><argument_list pos:line="96" pos:column="51">(<argument><expr><name><name pos:line="96" pos:column="52">file<pos:position pos:line="96" pos:column="56"/></name><operator pos:line="96" pos:column="56">-&gt;<pos:position pos:line="96" pos:column="61"/></operator><name pos:line="96" pos:column="58">mode<pos:position pos:line="96" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="64"/></condition><then pos:line="96" pos:column="64">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="41">stats<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">.<pos:position pos:line="97" pos:column="47"/></operator><name pos:line="97" pos:column="47">created_devices<pos:position pos:line="97" pos:column="62"/></name></name><operator pos:line="97" pos:column="62">++<pos:position pos:line="97" pos:column="64"/></operator></expr>;<pos:position pos:line="97" pos:column="65"/></expr_stmt></block></then></if></elseif>
				<else pos:line="98" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="99" pos:column="41">stats<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">.<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="47">created_specials<pos:position pos:line="99" pos:column="63"/></name></name><operator pos:line="99" pos:column="63">++<pos:position pos:line="99" pos:column="65"/></operator></expr>;<pos:position pos:line="99" pos:column="66"/></expr_stmt></block></else></if>
			}<pos:position pos:line="100" pos:column="26"/></block></then></if>
			<continue pos:line="101" pos:column="25">continue;<pos:position pos:line="101" pos:column="34"/></continue>
		}<pos:position pos:line="102" pos:column="18"/></block></then></if>
		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><name pos:line="103" pos:column="21">phase<pos:position pos:line="103" pos:column="26"/></name> <operator pos:line="103" pos:column="27">==<pos:position pos:line="103" pos:column="29"/></operator> <literal type="number" pos:line="103" pos:column="30">2<pos:position pos:line="103" pos:column="31"/></literal></expr>)<pos:position pos:line="103" pos:column="32"/></condition><then pos:line="103" pos:column="32"> <block pos:line="103" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">rprintf<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">FERROR<pos:position pos:line="104" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="105" pos:column="33">"got transfer request in phase 2 [%s]\n"<pos:position pos:line="105" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="106" pos:column="33">who_am_i<pos:position pos:line="106" pos:column="41"/></name><argument_list pos:line="106" pos:column="41">()<pos:position pos:line="106" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="107" pos:column="25">exit_cleanup<pos:position pos:line="107" pos:column="37"/></name><argument_list pos:line="107" pos:column="37">(<argument><expr><name pos:line="107" pos:column="38">RERR_PROTOCOL<pos:position pos:line="107" pos:column="51"/></name></expr></argument>)<pos:position pos:line="107" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if>

		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><name><name pos:line="110" pos:column="21">file<pos:position pos:line="110" pos:column="25"/></name><operator pos:line="110" pos:column="25">-&gt;<pos:position pos:line="110" pos:column="30"/></operator><name pos:line="110" pos:column="27">flags<pos:position pos:line="110" pos:column="32"/></name></name> <operator pos:line="110" pos:column="33">&amp;<pos:position pos:line="110" pos:column="38"/></operator> <name pos:line="110" pos:column="35">FLAG_FILE_SENT<pos:position pos:line="110" pos:column="49"/></name></expr>)<pos:position pos:line="110" pos:column="50"/></condition><then pos:line="110" pos:column="50"> <block pos:line="110" pos:column="51">{
			<if pos:line="111" pos:column="25">if <condition pos:line="111" pos:column="28">(<expr><name pos:line="111" pos:column="29">csum_length<pos:position pos:line="111" pos:column="40"/></name> <operator pos:line="111" pos:column="41">==<pos:position pos:line="111" pos:column="43"/></operator> <name pos:line="111" pos:column="44">SHORT_SUM_LENGTH<pos:position pos:line="111" pos:column="60"/></name></expr>)<pos:position pos:line="111" pos:column="61"/></condition><then pos:line="111" pos:column="61"> <block pos:line="111" pos:column="62">{
				<comment type="block" pos:line="112" pos:column="33">/* For inplace: redo phase turns off the backup
				 * flag so that we do a regular inplace send. */</comment>
				<expr_stmt><expr><name pos:line="114" pos:column="33">make_backups<pos:position pos:line="114" pos:column="45"/></name> <operator pos:line="114" pos:column="46">=<pos:position pos:line="114" pos:column="47"/></operator> <operator pos:line="114" pos:column="48">-<pos:position pos:line="114" pos:column="49"/></operator><name pos:line="114" pos:column="49">make_backups<pos:position pos:line="114" pos:column="61"/></name></expr>;<pos:position pos:line="114" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="115" pos:column="33">append_mode<pos:position pos:line="115" pos:column="44"/></name> <operator pos:line="115" pos:column="45">=<pos:position pos:line="115" pos:column="46"/></operator> <operator pos:line="115" pos:column="47">-<pos:position pos:line="115" pos:column="48"/></operator><name pos:line="115" pos:column="48">append_mode<pos:position pos:line="115" pos:column="59"/></name></expr>;<pos:position pos:line="115" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="116" pos:column="33">csum_length<pos:position pos:line="116" pos:column="44"/></name> <operator pos:line="116" pos:column="45">=<pos:position pos:line="116" pos:column="46"/></operator> <name pos:line="116" pos:column="47">SUM_LENGTH<pos:position pos:line="116" pos:column="57"/></name></expr>;<pos:position pos:line="116" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="117" pos:column="26"/></block></then></if>
		}<pos:position pos:line="118" pos:column="18"/></block></then> <else pos:line="118" pos:column="19">else <block pos:line="118" pos:column="24">{
			<if pos:line="119" pos:column="25">if <condition pos:line="119" pos:column="28">(<expr><name pos:line="119" pos:column="29">csum_length<pos:position pos:line="119" pos:column="40"/></name> <operator pos:line="119" pos:column="41">!=<pos:position pos:line="119" pos:column="43"/></operator> <name pos:line="119" pos:column="44">SHORT_SUM_LENGTH<pos:position pos:line="119" pos:column="60"/></name></expr>)<pos:position pos:line="119" pos:column="61"/></condition><then pos:line="119" pos:column="61"> <block pos:line="119" pos:column="62">{
				<expr_stmt><expr><name pos:line="120" pos:column="33">make_backups<pos:position pos:line="120" pos:column="45"/></name> <operator pos:line="120" pos:column="46">=<pos:position pos:line="120" pos:column="47"/></operator> <operator pos:line="120" pos:column="48">-<pos:position pos:line="120" pos:column="49"/></operator><name pos:line="120" pos:column="49">make_backups<pos:position pos:line="120" pos:column="61"/></name></expr>;<pos:position pos:line="120" pos:column="62"/></expr_stmt>
				<expr_stmt><expr><name pos:line="121" pos:column="33">append_mode<pos:position pos:line="121" pos:column="44"/></name> <operator pos:line="121" pos:column="45">=<pos:position pos:line="121" pos:column="46"/></operator> <operator pos:line="121" pos:column="47">-<pos:position pos:line="121" pos:column="48"/></operator><name pos:line="121" pos:column="48">append_mode<pos:position pos:line="121" pos:column="59"/></name></expr>;<pos:position pos:line="121" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name pos:line="122" pos:column="33">csum_length<pos:position pos:line="122" pos:column="44"/></name> <operator pos:line="122" pos:column="45">=<pos:position pos:line="122" pos:column="46"/></operator> <name pos:line="122" pos:column="47">SHORT_SUM_LENGTH<pos:position pos:line="122" pos:column="63"/></name></expr>;<pos:position pos:line="122" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="123" pos:column="26"/></block></then></if>
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><name pos:line="124" pos:column="29">iflags<pos:position pos:line="124" pos:column="35"/></name> <operator pos:line="124" pos:column="36">&amp;<pos:position pos:line="124" pos:column="41"/></operator> <name pos:line="124" pos:column="38">ITEM_IS_NEW<pos:position pos:line="124" pos:column="49"/></name></expr>)<pos:position pos:line="124" pos:column="50"/></condition><then pos:line="124" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="125" pos:column="33">stats<pos:position pos:line="125" pos:column="38"/></name><operator pos:line="125" pos:column="38">.<pos:position pos:line="125" pos:column="39"/></operator><name pos:line="125" pos:column="39">created_files<pos:position pos:line="125" pos:column="52"/></name></name><operator pos:line="125" pos:column="52">++<pos:position pos:line="125" pos:column="54"/></operator></expr>;<pos:position pos:line="125" pos:column="55"/></expr_stmt></block></then></if>
		}<pos:position pos:line="126" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="128" pos:column="17">updating_basis_file<pos:position pos:line="128" pos:column="36"/></name> <operator pos:line="128" pos:column="37">=<pos:position pos:line="128" pos:column="38"/></operator> <name pos:line="128" pos:column="39">inplace<pos:position pos:line="128" pos:column="46"/></name> <operator pos:line="128" pos:column="47">&amp;&amp;<pos:position pos:line="128" pos:column="57"/></operator> <operator pos:line="128" pos:column="50">(<pos:position pos:line="128" pos:column="51"/></operator><ternary><condition><expr><name pos:line="128" pos:column="51">protocol_version<pos:position pos:line="128" pos:column="67"/></name> <operator pos:line="128" pos:column="68">&gt;=<pos:position pos:line="128" pos:column="73"/></operator> <literal type="number" pos:line="128" pos:column="71">29<pos:position pos:line="128" pos:column="73"/></literal></expr>
			?<pos:position pos:line="129" pos:column="26"/></condition><then pos:line="129" pos:column="26"> <expr><name pos:line="129" pos:column="27">fnamecmp_type<pos:position pos:line="129" pos:column="40"/></name> <operator pos:line="129" pos:column="41">==<pos:position pos:line="129" pos:column="43"/></operator> <name pos:line="129" pos:column="44">FNAMECMP_FNAME<pos:position pos:line="129" pos:column="58"/></name></expr> <pos:position pos:line="129" pos:column="59"/></then><else pos:line="129" pos:column="59">: <expr><name pos:line="129" pos:column="61">make_backups<pos:position pos:line="129" pos:column="73"/></name> <operator pos:line="129" pos:column="74">&lt;=<pos:position pos:line="129" pos:column="79"/></operator> <literal type="number" pos:line="129" pos:column="77">0<pos:position pos:line="129" pos:column="78"/></literal></expr></else></ternary><operator pos:line="129" pos:column="78">)<pos:position pos:line="129" pos:column="79"/></operator></expr>;<pos:position pos:line="129" pos:column="80"/></expr_stmt>

		<if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><operator pos:line="131" pos:column="21">!<pos:position pos:line="131" pos:column="22"/></operator><name pos:line="131" pos:column="22">am_server<pos:position pos:line="131" pos:column="31"/></name> <operator pos:line="131" pos:column="32">&amp;&amp;<pos:position pos:line="131" pos:column="42"/></operator> <call><name pos:line="131" pos:column="35">INFO_GTE<pos:position pos:line="131" pos:column="43"/></name><argument_list pos:line="131" pos:column="43">(<argument><expr><name pos:line="131" pos:column="44">PROGRESS<pos:position pos:line="131" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="54">1<pos:position pos:line="131" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="57"/></condition><then pos:line="131" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="132" pos:column="25">set_current_file_index<pos:position pos:line="132" pos:column="47"/></name><argument_list pos:line="132" pos:column="47">(<argument><expr><name pos:line="132" pos:column="48">file<pos:position pos:line="132" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="54">ndx<pos:position pos:line="132" pos:column="57"/></name></expr></argument>)<pos:position pos:line="132" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="133" pos:column="17">stats<pos:position pos:line="133" pos:column="22"/></name><operator pos:line="133" pos:column="22">.<pos:position pos:line="133" pos:column="23"/></operator><name pos:line="133" pos:column="23">xferred_files<pos:position pos:line="133" pos:column="36"/></name></name><operator pos:line="133" pos:column="36">++<pos:position pos:line="133" pos:column="38"/></operator></expr>;<pos:position pos:line="133" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="134" pos:column="17">stats<pos:position pos:line="134" pos:column="22"/></name><operator pos:line="134" pos:column="22">.<pos:position pos:line="134" pos:column="23"/></operator><name pos:line="134" pos:column="23">total_transferred_size<pos:position pos:line="134" pos:column="45"/></name></name> <operator pos:line="134" pos:column="46">+=<pos:position pos:line="134" pos:column="48"/></operator> <call><name pos:line="134" pos:column="49">F_LENGTH<pos:position pos:line="134" pos:column="57"/></name><argument_list pos:line="134" pos:column="57">(<argument><expr><name pos:line="134" pos:column="58">file<pos:position pos:line="134" pos:column="62"/></name></expr></argument>)<pos:position pos:line="134" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="64"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="136" pos:column="17">remember_initial_stats<pos:position pos:line="136" pos:column="39"/></name><argument_list pos:line="136" pos:column="39">()<pos:position pos:line="136" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="42"/></expr_stmt>

		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><operator pos:line="138" pos:column="21">!<pos:position pos:line="138" pos:column="22"/></operator><name pos:line="138" pos:column="22">do_xfers<pos:position pos:line="138" pos:column="30"/></name></expr>)<pos:position pos:line="138" pos:column="31"/></condition><then pos:line="138" pos:column="31"> <block pos:line="138" pos:column="32">{ <comment type="block" pos:line="138" pos:column="34">/* log the transfer */</comment>
			<expr_stmt><expr><call><name pos:line="139" pos:column="25">log_item<pos:position pos:line="139" pos:column="33"/></name><argument_list pos:line="139" pos:column="33">(<argument><expr><name pos:line="139" pos:column="34">FCLIENT<pos:position pos:line="139" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="43">file<pos:position pos:line="139" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="49">iflags<pos:position pos:line="139" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="57">NULL<pos:position pos:line="139" pos:column="61"/></name></expr></argument>)<pos:position pos:line="139" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="140" pos:column="25">write_ndx_and_attrs<pos:position pos:line="140" pos:column="44"/></name><argument_list pos:line="140" pos:column="44">(<argument><expr><name pos:line="140" pos:column="45">f_out<pos:position pos:line="140" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="52">ndx<pos:position pos:line="140" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="57">iflags<pos:position pos:line="140" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="65">fname<pos:position pos:line="140" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="72">file<pos:position pos:line="140" pos:column="76"/></name></expr></argument>,
					    <argument><expr><name pos:line="141" pos:column="45">fnamecmp_type<pos:position pos:line="141" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="60">xname<pos:position pos:line="141" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="67">xlen<pos:position pos:line="141" pos:column="71"/></name></expr></argument>)<pos:position pos:line="141" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="73"/></expr_stmt>
			<continue pos:line="142" pos:column="25">continue;<pos:position pos:line="142" pos:column="34"/></continue>
		}<pos:position pos:line="143" pos:column="18"/></block></then></if>

		<if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><operator pos:line="145" pos:column="21">!<pos:position pos:line="145" pos:column="22"/></operator><operator pos:line="145" pos:column="22">(<pos:position pos:line="145" pos:column="23"/></operator><name pos:line="145" pos:column="23">s<pos:position pos:line="145" pos:column="24"/></name> <operator pos:line="145" pos:column="25">=<pos:position pos:line="145" pos:column="26"/></operator> <call><name pos:line="145" pos:column="27">receive_sums<pos:position pos:line="145" pos:column="39"/></name><argument_list pos:line="145" pos:column="39">(<argument><expr><name pos:line="145" pos:column="40">f_in<pos:position pos:line="145" pos:column="44"/></name></expr></argument>)<pos:position pos:line="145" pos:column="45"/></argument_list></call><operator pos:line="145" pos:column="45">)<pos:position pos:line="145" pos:column="46"/></operator></expr>)<pos:position pos:line="145" pos:column="47"/></condition><then pos:line="145" pos:column="47"> <block pos:line="145" pos:column="48">{
			<expr_stmt><expr><name pos:line="146" pos:column="25">io_error<pos:position pos:line="146" pos:column="33"/></name> <operator pos:line="146" pos:column="34">|=<pos:position pos:line="146" pos:column="36"/></operator> <name pos:line="146" pos:column="37">IOERR_GENERAL<pos:position pos:line="146" pos:column="50"/></name></expr>;<pos:position pos:line="146" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="147" pos:column="25">rprintf<pos:position pos:line="147" pos:column="32"/></name><argument_list pos:line="147" pos:column="32">(<argument><expr><name pos:line="147" pos:column="33">FERROR_XFER<pos:position pos:line="147" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="46">"receive_sums failed\n"<pos:position pos:line="147" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="148" pos:column="25">exit_cleanup<pos:position pos:line="148" pos:column="37"/></name><argument_list pos:line="148" pos:column="37">(<argument><expr><name pos:line="148" pos:column="38">RERR_PROTOCOL<pos:position pos:line="148" pos:column="51"/></name></expr></argument>)<pos:position pos:line="148" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="149" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="151" pos:column="17">fd<pos:position pos:line="151" pos:column="19"/></name> <operator pos:line="151" pos:column="20">=<pos:position pos:line="151" pos:column="21"/></operator> <call><name pos:line="151" pos:column="22">do_open<pos:position pos:line="151" pos:column="29"/></name><argument_list pos:line="151" pos:column="29">(<argument><expr><name pos:line="151" pos:column="30">fname<pos:position pos:line="151" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="37">O_RDONLY<pos:position pos:line="151" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="47">0<pos:position pos:line="151" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="50"/></expr_stmt>
		<if pos:line="152" pos:column="17">if <condition pos:line="152" pos:column="20">(<expr><name pos:line="152" pos:column="21">fd<pos:position pos:line="152" pos:column="23"/></name> <operator pos:line="152" pos:column="24">==<pos:position pos:line="152" pos:column="26"/></operator> <operator pos:line="152" pos:column="27">-<pos:position pos:line="152" pos:column="28"/></operator><literal type="number" pos:line="152" pos:column="28">1<pos:position pos:line="152" pos:column="29"/></literal></expr>)<pos:position pos:line="152" pos:column="30"/></condition><then pos:line="152" pos:column="30"> <block pos:line="152" pos:column="31">{
			<if pos:line="153" pos:column="25">if <condition pos:line="153" pos:column="28">(<expr><name pos:line="153" pos:column="29">errno<pos:position pos:line="153" pos:column="34"/></name> <operator pos:line="153" pos:column="35">==<pos:position pos:line="153" pos:column="37"/></operator> <name pos:line="153" pos:column="38">ENOENT<pos:position pos:line="153" pos:column="44"/></name></expr>)<pos:position pos:line="153" pos:column="45"/></condition><then pos:line="153" pos:column="45"> <block pos:line="153" pos:column="46">{
				<decl_stmt><decl><type><name><name pos:line="154" pos:column="33">enum<pos:position pos:line="154" pos:column="37"/></name> <name pos:line="154" pos:column="38">logcode<pos:position pos:line="154" pos:column="45"/></name></name></type> <name pos:line="154" pos:column="46">c<pos:position pos:line="154" pos:column="47"/></name> <init pos:line="154" pos:column="48">= <expr><ternary><condition><expr><name pos:line="154" pos:column="50">am_daemon<pos:position pos:line="154" pos:column="59"/></name>
				    <operator pos:line="155" pos:column="37">&amp;&amp;<pos:position pos:line="155" pos:column="47"/></operator> <name pos:line="155" pos:column="40">protocol_version<pos:position pos:line="155" pos:column="56"/></name> <operator pos:line="155" pos:column="57">&lt;<pos:position pos:line="155" pos:column="61"/></operator> <literal type="number" pos:line="155" pos:column="59">28<pos:position pos:line="155" pos:column="61"/></literal></expr> ?<pos:position pos:line="155" pos:column="63"/></condition><then pos:line="155" pos:column="63"> <expr><name pos:line="155" pos:column="64">FERROR<pos:position pos:line="155" pos:column="70"/></name></expr>
							     <pos:position pos:line="156" pos:column="13"/></then><else pos:line="156" pos:column="62">: <expr><name pos:line="156" pos:column="64">FWARNING<pos:position pos:line="156" pos:column="72"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="156" pos:column="73"/></decl_stmt>
				<expr_stmt><expr><name pos:line="157" pos:column="33">io_error<pos:position pos:line="157" pos:column="41"/></name> <operator pos:line="157" pos:column="42">|=<pos:position pos:line="157" pos:column="44"/></operator> <name pos:line="157" pos:column="45">IOERR_VANISHED<pos:position pos:line="157" pos:column="59"/></name></expr>;<pos:position pos:line="157" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="158" pos:column="33">rprintf<pos:position pos:line="158" pos:column="40"/></name><argument_list pos:line="158" pos:column="40">(<argument><expr><name pos:line="158" pos:column="41">c<pos:position pos:line="158" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="158" pos:column="44">"file has vanished: %s\n"<pos:position pos:line="158" pos:column="69"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="159" pos:column="41">full_fname<pos:position pos:line="159" pos:column="51"/></name><argument_list pos:line="159" pos:column="51">(<argument><expr><name pos:line="159" pos:column="52">fname<pos:position pos:line="159" pos:column="57"/></name></expr></argument>)<pos:position pos:line="159" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="159" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="160" pos:column="26"/></block></then> <else pos:line="160" pos:column="27">else <block pos:line="160" pos:column="32">{
				<expr_stmt><expr><name pos:line="161" pos:column="33">io_error<pos:position pos:line="161" pos:column="41"/></name> <operator pos:line="161" pos:column="42">|=<pos:position pos:line="161" pos:column="44"/></operator> <name pos:line="161" pos:column="45">IOERR_GENERAL<pos:position pos:line="161" pos:column="58"/></name></expr>;<pos:position pos:line="161" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="162" pos:column="33">rsyserr<pos:position pos:line="162" pos:column="40"/></name><argument_list pos:line="162" pos:column="40">(<argument><expr><name pos:line="162" pos:column="41">FERROR_XFER<pos:position pos:line="162" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="54">errno<pos:position pos:line="162" pos:column="59"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="163" pos:column="41">"send_files failed to open %s"<pos:position pos:line="163" pos:column="71"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="164" pos:column="41">full_fname<pos:position pos:line="164" pos:column="51"/></name><argument_list pos:line="164" pos:column="51">(<argument><expr><name pos:line="164" pos:column="52">fname<pos:position pos:line="164" pos:column="57"/></name></expr></argument>)<pos:position pos:line="164" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="164" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="165" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="166" pos:column="25">free_sums<pos:position pos:line="166" pos:column="34"/></name><argument_list pos:line="166" pos:column="34">(<argument><expr><name pos:line="166" pos:column="35">s<pos:position pos:line="166" pos:column="36"/></name></expr></argument>)<pos:position pos:line="166" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="38"/></expr_stmt>
			<if pos:line="167" pos:column="25">if <condition pos:line="167" pos:column="28">(<expr><name pos:line="167" pos:column="29">protocol_version<pos:position pos:line="167" pos:column="45"/></name> <operator pos:line="167" pos:column="46">&gt;=<pos:position pos:line="167" pos:column="51"/></operator> <literal type="number" pos:line="167" pos:column="49">30<pos:position pos:line="167" pos:column="51"/></literal></expr>)<pos:position pos:line="167" pos:column="52"/></condition><then pos:line="167" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="168" pos:column="33">send_msg_int<pos:position pos:line="168" pos:column="45"/></name><argument_list pos:line="168" pos:column="45">(<argument><expr><name pos:line="168" pos:column="46">MSG_NO_SEND<pos:position pos:line="168" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="59">ndx<pos:position pos:line="168" pos:column="62"/></name></expr></argument>)<pos:position pos:line="168" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="64"/></expr_stmt></block></then></if>
			<continue pos:line="169" pos:column="25">continue;<pos:position pos:line="169" pos:column="34"/></continue>
		}<pos:position pos:line="170" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="172" pos:column="17">/* map the local file */</comment>
		<if pos:line="173" pos:column="17">if <condition pos:line="173" pos:column="20">(<expr><call><name pos:line="173" pos:column="21">do_fstat<pos:position pos:line="173" pos:column="29"/></name><argument_list pos:line="173" pos:column="29">(<argument><expr><name pos:line="173" pos:column="30">fd<pos:position pos:line="173" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="34">&amp;<pos:position pos:line="173" pos:column="39"/></operator><name pos:line="173" pos:column="35">st<pos:position pos:line="173" pos:column="37"/></name></expr></argument>)<pos:position pos:line="173" pos:column="38"/></argument_list></call> <operator pos:line="173" pos:column="39">!=<pos:position pos:line="173" pos:column="41"/></operator> <literal type="number" pos:line="173" pos:column="42">0<pos:position pos:line="173" pos:column="43"/></literal></expr>)<pos:position pos:line="173" pos:column="44"/></condition><then pos:line="173" pos:column="44"> <block pos:line="173" pos:column="45">{
			<expr_stmt><expr><name pos:line="174" pos:column="25">io_error<pos:position pos:line="174" pos:column="33"/></name> <operator pos:line="174" pos:column="34">|=<pos:position pos:line="174" pos:column="36"/></operator> <name pos:line="174" pos:column="37">IOERR_GENERAL<pos:position pos:line="174" pos:column="50"/></name></expr>;<pos:position pos:line="174" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="175" pos:column="25">rsyserr<pos:position pos:line="175" pos:column="32"/></name><argument_list pos:line="175" pos:column="32">(<argument><expr><name pos:line="175" pos:column="33">FERROR_XFER<pos:position pos:line="175" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="46">errno<pos:position pos:line="175" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="53">"fstat failed"<pos:position pos:line="175" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="176" pos:column="25">free_sums<pos:position pos:line="176" pos:column="34"/></name><argument_list pos:line="176" pos:column="34">(<argument><expr><name pos:line="176" pos:column="35">s<pos:position pos:line="176" pos:column="36"/></name></expr></argument>)<pos:position pos:line="176" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="177" pos:column="25">close<pos:position pos:line="177" pos:column="30"/></name><argument_list pos:line="177" pos:column="30">(<argument><expr><name pos:line="177" pos:column="31">fd<pos:position pos:line="177" pos:column="33"/></name></expr></argument>)<pos:position pos:line="177" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="178" pos:column="25">exit_cleanup<pos:position pos:line="178" pos:column="37"/></name><argument_list pos:line="178" pos:column="37">(<argument><expr><name pos:line="178" pos:column="38">RERR_FILEIO<pos:position pos:line="178" pos:column="49"/></name></expr></argument>)<pos:position pos:line="178" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="179" pos:column="18"/></block></then></if>

		<if pos:line="181" pos:column="17">if <condition pos:line="181" pos:column="20">(<expr><name><name pos:line="181" pos:column="21">st<pos:position pos:line="181" pos:column="23"/></name><operator pos:line="181" pos:column="23">.<pos:position pos:line="181" pos:column="24"/></operator><name pos:line="181" pos:column="24">st_size<pos:position pos:line="181" pos:column="31"/></name></name></expr>)<pos:position pos:line="181" pos:column="32"/></condition><then pos:line="181" pos:column="32"> <block pos:line="181" pos:column="33">{
			<decl_stmt><decl><type><name pos:line="182" pos:column="25">int32<pos:position pos:line="182" pos:column="30"/></name></type> <name pos:line="182" pos:column="31">read_size<pos:position pos:line="182" pos:column="40"/></name> <init pos:line="182" pos:column="41">= <expr><call><name pos:line="182" pos:column="43">MAX<pos:position pos:line="182" pos:column="46"/></name><argument_list pos:line="182" pos:column="46">(<argument><expr><name><name pos:line="182" pos:column="47">s<pos:position pos:line="182" pos:column="48"/></name><operator pos:line="182" pos:column="48">-&gt;<pos:position pos:line="182" pos:column="53"/></operator><name pos:line="182" pos:column="50">blength<pos:position pos:line="182" pos:column="57"/></name></name> <operator pos:line="182" pos:column="58">*<pos:position pos:line="182" pos:column="59"/></operator> <literal type="number" pos:line="182" pos:column="60">3<pos:position pos:line="182" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="63">MAX_MAP_SIZE<pos:position pos:line="182" pos:column="75"/></name></expr></argument>)<pos:position pos:line="182" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="182" pos:column="77"/></decl_stmt>
			<expr_stmt><expr><name pos:line="183" pos:column="25">mbuf<pos:position pos:line="183" pos:column="29"/></name> <operator pos:line="183" pos:column="30">=<pos:position pos:line="183" pos:column="31"/></operator> <call><name pos:line="183" pos:column="32">map_file<pos:position pos:line="183" pos:column="40"/></name><argument_list pos:line="183" pos:column="40">(<argument><expr><name pos:line="183" pos:column="41">fd<pos:position pos:line="183" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="183" pos:column="45">st<pos:position pos:line="183" pos:column="47"/></name><operator pos:line="183" pos:column="47">.<pos:position pos:line="183" pos:column="48"/></operator><name pos:line="183" pos:column="48">st_size<pos:position pos:line="183" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="57">read_size<pos:position pos:line="183" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="183" pos:column="68">s<pos:position pos:line="183" pos:column="69"/></name><operator pos:line="183" pos:column="69">-&gt;<pos:position pos:line="183" pos:column="74"/></operator><name pos:line="183" pos:column="71">blength<pos:position pos:line="183" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="183" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="184" pos:column="18"/></block></then> <else pos:line="184" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="185" pos:column="25">mbuf<pos:position pos:line="185" pos:column="29"/></name> <operator pos:line="185" pos:column="30">=<pos:position pos:line="185" pos:column="31"/></operator> <name pos:line="185" pos:column="32">NULL<pos:position pos:line="185" pos:column="36"/></name></expr>;<pos:position pos:line="185" pos:column="37"/></expr_stmt></block></else></if>

		<if pos:line="187" pos:column="17">if <condition pos:line="187" pos:column="20">(<expr><call><name pos:line="187" pos:column="21">DEBUG_GTE<pos:position pos:line="187" pos:column="30"/></name><argument_list pos:line="187" pos:column="30">(<argument><expr><name pos:line="187" pos:column="31">DELTASUM<pos:position pos:line="187" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="41">2<pos:position pos:line="187" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="44"/></condition><then pos:line="187" pos:column="44"> <block pos:line="187" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="188" pos:column="25">rprintf<pos:position pos:line="188" pos:column="32"/></name><argument_list pos:line="188" pos:column="32">(<argument><expr><name pos:line="188" pos:column="33">FINFO<pos:position pos:line="188" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="40">"send_files mapped %s%s%s of size %s\n"<pos:position pos:line="188" pos:column="79"/></literal></expr></argument>,
				<argument><expr><name pos:line="189" pos:column="33">path<pos:position pos:line="189" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="189" pos:column="38">slash<pos:position pos:line="189" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="189" pos:column="44">fname<pos:position pos:line="189" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="189" pos:column="51">big_num<pos:position pos:line="189" pos:column="58"/></name><argument_list pos:line="189" pos:column="58">(<argument><expr><name><name pos:line="189" pos:column="59">st<pos:position pos:line="189" pos:column="61"/></name><operator pos:line="189" pos:column="61">.<pos:position pos:line="189" pos:column="62"/></operator><name pos:line="189" pos:column="62">st_size<pos:position pos:line="189" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="189" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="190" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="192" pos:column="17">write_ndx_and_attrs<pos:position pos:line="192" pos:column="36"/></name><argument_list pos:line="192" pos:column="36">(<argument><expr><name pos:line="192" pos:column="37">f_out<pos:position pos:line="192" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="44">ndx<pos:position pos:line="192" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="49">iflags<pos:position pos:line="192" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="57">fname<pos:position pos:line="192" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="64">file<pos:position pos:line="192" pos:column="68"/></name></expr></argument>,
				    <argument><expr><name pos:line="193" pos:column="37">fnamecmp_type<pos:position pos:line="193" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="52">xname<pos:position pos:line="193" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="59">xlen<pos:position pos:line="193" pos:column="63"/></name></expr></argument>)<pos:position pos:line="193" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="194" pos:column="17">write_sum_head<pos:position pos:line="194" pos:column="31"/></name><argument_list pos:line="194" pos:column="31">(<argument><expr><name pos:line="194" pos:column="32">f_xfer<pos:position pos:line="194" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="40">s<pos:position pos:line="194" pos:column="41"/></name></expr></argument>)<pos:position pos:line="194" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="43"/></expr_stmt>

		<if pos:line="196" pos:column="17">if <condition pos:line="196" pos:column="20">(<expr><call><name pos:line="196" pos:column="21">DEBUG_GTE<pos:position pos:line="196" pos:column="30"/></name><argument_list pos:line="196" pos:column="30">(<argument><expr><name pos:line="196" pos:column="31">DELTASUM<pos:position pos:line="196" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="196" pos:column="41">2<pos:position pos:line="196" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="196" pos:column="44"/></condition><then pos:line="196" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="197" pos:column="25">rprintf<pos:position pos:line="197" pos:column="32"/></name><argument_list pos:line="197" pos:column="32">(<argument><expr><name pos:line="197" pos:column="33">FINFO<pos:position pos:line="197" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="40">"calling match_sums %s%s%s\n"<pos:position pos:line="197" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="71">path<pos:position pos:line="197" pos:column="75"/></name></expr></argument>,<argument><expr><name pos:line="197" pos:column="76">slash<pos:position pos:line="197" pos:column="81"/></name></expr></argument>,<argument><expr><name pos:line="197" pos:column="82">fname<pos:position pos:line="197" pos:column="87"/></name></expr></argument>)<pos:position pos:line="197" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="89"/></expr_stmt></block></then></if>

		<if pos:line="199" pos:column="17">if <condition pos:line="199" pos:column="20">(<expr><name pos:line="199" pos:column="21">log_before_transfer<pos:position pos:line="199" pos:column="40"/></name></expr>)<pos:position pos:line="199" pos:column="41"/></condition><then pos:line="199" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="200" pos:column="25">log_item<pos:position pos:line="200" pos:column="33"/></name><argument_list pos:line="200" pos:column="33">(<argument><expr><name pos:line="200" pos:column="34">FCLIENT<pos:position pos:line="200" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="43">file<pos:position pos:line="200" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="49">iflags<pos:position pos:line="200" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="57">NULL<pos:position pos:line="200" pos:column="61"/></name></expr></argument>)<pos:position pos:line="200" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="63"/></expr_stmt></block></then>
		<elseif pos:line="201" pos:column="17">else <if pos:line="201" pos:column="22">if <condition pos:line="201" pos:column="25">(<expr><operator pos:line="201" pos:column="26">!<pos:position pos:line="201" pos:column="27"/></operator><name pos:line="201" pos:column="27">am_server<pos:position pos:line="201" pos:column="36"/></name> <operator pos:line="201" pos:column="37">&amp;&amp;<pos:position pos:line="201" pos:column="47"/></operator> <call><name pos:line="201" pos:column="40">INFO_GTE<pos:position pos:line="201" pos:column="48"/></name><argument_list pos:line="201" pos:column="48">(<argument><expr><name pos:line="201" pos:column="49">NAME<pos:position pos:line="201" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="55">1<pos:position pos:line="201" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="57"/></argument_list></call> <operator pos:line="201" pos:column="58">&amp;&amp;<pos:position pos:line="201" pos:column="68"/></operator> <call><name pos:line="201" pos:column="61">INFO_EQ<pos:position pos:line="201" pos:column="68"/></name><argument_list pos:line="201" pos:column="68">(<argument><expr><name pos:line="201" pos:column="69">PROGRESS<pos:position pos:line="201" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="79">1<pos:position pos:line="201" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="82"/></condition><then pos:line="201" pos:column="82">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="25">rprintf<pos:position pos:line="202" pos:column="32"/></name><argument_list pos:line="202" pos:column="32">(<argument><expr><name pos:line="202" pos:column="33">FCLIENT<pos:position pos:line="202" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="42">"%s\n"<pos:position pos:line="202" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="50">fname<pos:position pos:line="202" pos:column="55"/></name></expr></argument>)<pos:position pos:line="202" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="57"/></expr_stmt></block></then></if></elseif></if>

		<expr_stmt><expr><call><name pos:line="204" pos:column="17">set_compression<pos:position pos:line="204" pos:column="32"/></name><argument_list pos:line="204" pos:column="32">(<argument><expr><name pos:line="204" pos:column="33">fname<pos:position pos:line="204" pos:column="38"/></name></expr></argument>)<pos:position pos:line="204" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="40"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="206" pos:column="17">match_sums<pos:position pos:line="206" pos:column="27"/></name><argument_list pos:line="206" pos:column="27">(<argument><expr><name pos:line="206" pos:column="28">f_xfer<pos:position pos:line="206" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="36">s<pos:position pos:line="206" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="39">mbuf<pos:position pos:line="206" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="45">st<pos:position pos:line="206" pos:column="47"/></name><operator pos:line="206" pos:column="47">.<pos:position pos:line="206" pos:column="48"/></operator><name pos:line="206" pos:column="48">st_size<pos:position pos:line="206" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="57"/></expr_stmt>
		<if pos:line="207" pos:column="17">if <condition pos:line="207" pos:column="20">(<expr><call><name pos:line="207" pos:column="21">INFO_GTE<pos:position pos:line="207" pos:column="29"/></name><argument_list pos:line="207" pos:column="29">(<argument><expr><name pos:line="207" pos:column="30">PROGRESS<pos:position pos:line="207" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="207" pos:column="40">1<pos:position pos:line="207" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="207" pos:column="43"/></condition><then pos:line="207" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="208" pos:column="25">end_progress<pos:position pos:line="208" pos:column="37"/></name><argument_list pos:line="208" pos:column="37">(<argument><expr><name><name pos:line="208" pos:column="38">st<pos:position pos:line="208" pos:column="40"/></name><operator pos:line="208" pos:column="40">.<pos:position pos:line="208" pos:column="41"/></operator><name pos:line="208" pos:column="41">st_size<pos:position pos:line="208" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="50"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="210" pos:column="17">log_item<pos:position pos:line="210" pos:column="25"/></name><argument_list pos:line="210" pos:column="25">(<argument><expr><name pos:line="210" pos:column="26">log_code<pos:position pos:line="210" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="36">file<pos:position pos:line="210" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="42">iflags<pos:position pos:line="210" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="50">NULL<pos:position pos:line="210" pos:column="54"/></name></expr></argument>)<pos:position pos:line="210" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="56"/></expr_stmt>

		<if pos:line="212" pos:column="17">if <condition pos:line="212" pos:column="20">(<expr><name pos:line="212" pos:column="21">mbuf<pos:position pos:line="212" pos:column="25"/></name></expr>)<pos:position pos:line="212" pos:column="26"/></condition><then pos:line="212" pos:column="26"> <block pos:line="212" pos:column="27">{
			<expr_stmt><expr><name pos:line="213" pos:column="25">j<pos:position pos:line="213" pos:column="26"/></name> <operator pos:line="213" pos:column="27">=<pos:position pos:line="213" pos:column="28"/></operator> <call><name pos:line="213" pos:column="29">unmap_file<pos:position pos:line="213" pos:column="39"/></name><argument_list pos:line="213" pos:column="39">(<argument><expr><name pos:line="213" pos:column="40">mbuf<pos:position pos:line="213" pos:column="44"/></name></expr></argument>)<pos:position pos:line="213" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="46"/></expr_stmt>
			<if pos:line="214" pos:column="25">if <condition pos:line="214" pos:column="28">(<expr><name pos:line="214" pos:column="29">j<pos:position pos:line="214" pos:column="30"/></name></expr>)<pos:position pos:line="214" pos:column="31"/></condition><then pos:line="214" pos:column="31"> <block pos:line="214" pos:column="32">{
				<expr_stmt><expr><name pos:line="215" pos:column="33">io_error<pos:position pos:line="215" pos:column="41"/></name> <operator pos:line="215" pos:column="42">|=<pos:position pos:line="215" pos:column="44"/></operator> <name pos:line="215" pos:column="45">IOERR_GENERAL<pos:position pos:line="215" pos:column="58"/></name></expr>;<pos:position pos:line="215" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="216" pos:column="33">rsyserr<pos:position pos:line="216" pos:column="40"/></name><argument_list pos:line="216" pos:column="40">(<argument><expr><name pos:line="216" pos:column="41">FERROR_XFER<pos:position pos:line="216" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="216" pos:column="54">j<pos:position pos:line="216" pos:column="55"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="217" pos:column="41">"read errors mapping %s"<pos:position pos:line="217" pos:column="65"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="218" pos:column="41">full_fname<pos:position pos:line="218" pos:column="51"/></name><argument_list pos:line="218" pos:column="51">(<argument><expr><name pos:line="218" pos:column="52">fname<pos:position pos:line="218" pos:column="57"/></name></expr></argument>)<pos:position pos:line="218" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="218" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="219" pos:column="26"/></block></then></if>
		}<pos:position pos:line="220" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="221" pos:column="17">close<pos:position pos:line="221" pos:column="22"/></name><argument_list pos:line="221" pos:column="22">(<argument><expr><name pos:line="221" pos:column="23">fd<pos:position pos:line="221" pos:column="25"/></name></expr></argument>)<pos:position pos:line="221" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="223" pos:column="17">free_sums<pos:position pos:line="223" pos:column="26"/></name><argument_list pos:line="223" pos:column="26">(<argument><expr><name pos:line="223" pos:column="27">s<pos:position pos:line="223" pos:column="28"/></name></expr></argument>)<pos:position pos:line="223" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="30"/></expr_stmt>

		<if pos:line="225" pos:column="17">if <condition pos:line="225" pos:column="20">(<expr><call><name pos:line="225" pos:column="21">DEBUG_GTE<pos:position pos:line="225" pos:column="30"/></name><argument_list pos:line="225" pos:column="30">(<argument><expr><name pos:line="225" pos:column="31">SEND<pos:position pos:line="225" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="225" pos:column="37">1<pos:position pos:line="225" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="225" pos:column="40"/></condition><then pos:line="225" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="226" pos:column="25">rprintf<pos:position pos:line="226" pos:column="32"/></name><argument_list pos:line="226" pos:column="32">(<argument><expr><name pos:line="226" pos:column="33">FINFO<pos:position pos:line="226" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="226" pos:column="40">"sender finished %s%s%s\n"<pos:position pos:line="226" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="68">path<pos:position pos:line="226" pos:column="72"/></name></expr></argument>,<argument><expr><name pos:line="226" pos:column="73">slash<pos:position pos:line="226" pos:column="78"/></name></expr></argument>,<argument><expr><name pos:line="226" pos:column="79">fname<pos:position pos:line="226" pos:column="84"/></name></expr></argument>)<pos:position pos:line="226" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="86"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="228" pos:column="17">/* Flag that we actually sent this entry. */</comment>
		<expr_stmt><expr><name><name pos:line="229" pos:column="17">file<pos:position pos:line="229" pos:column="21"/></name><operator pos:line="229" pos:column="21">-&gt;<pos:position pos:line="229" pos:column="26"/></operator><name pos:line="229" pos:column="23">flags<pos:position pos:line="229" pos:column="28"/></name></name> <operator pos:line="229" pos:column="29">|=<pos:position pos:line="229" pos:column="31"/></operator> <name pos:line="229" pos:column="32">FLAG_FILE_SENT<pos:position pos:line="229" pos:column="46"/></name></expr>;<pos:position pos:line="229" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="230" pos:column="10"/></block></while>
	<if pos:line="231" pos:column="9">if <condition pos:line="231" pos:column="12">(<expr><name pos:line="231" pos:column="13">make_backups<pos:position pos:line="231" pos:column="25"/></name> <operator pos:line="231" pos:column="26">&lt;<pos:position pos:line="231" pos:column="30"/></operator> <literal type="number" pos:line="231" pos:column="28">0<pos:position pos:line="231" pos:column="29"/></literal></expr>)<pos:position pos:line="231" pos:column="30"/></condition><then pos:line="231" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="232" pos:column="17">make_backups<pos:position pos:line="232" pos:column="29"/></name> <operator pos:line="232" pos:column="30">=<pos:position pos:line="232" pos:column="31"/></operator> <operator pos:line="232" pos:column="32">-<pos:position pos:line="232" pos:column="33"/></operator><name pos:line="232" pos:column="33">make_backups<pos:position pos:line="232" pos:column="45"/></name></expr>;<pos:position pos:line="232" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="234" pos:column="9">if <condition pos:line="234" pos:column="12">(<expr><name pos:line="234" pos:column="13">io_error<pos:position pos:line="234" pos:column="21"/></name> <operator pos:line="234" pos:column="22">!=<pos:position pos:line="234" pos:column="24"/></operator> <name pos:line="234" pos:column="25">save_io_error<pos:position pos:line="234" pos:column="38"/></name> <operator pos:line="234" pos:column="39">&amp;&amp;<pos:position pos:line="234" pos:column="49"/></operator> <name pos:line="234" pos:column="42">protocol_version<pos:position pos:line="234" pos:column="58"/></name> <operator pos:line="234" pos:column="59">&gt;=<pos:position pos:line="234" pos:column="64"/></operator> <literal type="number" pos:line="234" pos:column="62">30<pos:position pos:line="234" pos:column="64"/></literal></expr>)<pos:position pos:line="234" pos:column="65"/></condition><then pos:line="234" pos:column="65">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="235" pos:column="17">send_msg_int<pos:position pos:line="235" pos:column="29"/></name><argument_list pos:line="235" pos:column="29">(<argument><expr><name pos:line="235" pos:column="30">MSG_IO_ERROR<pos:position pos:line="235" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="44">io_error<pos:position pos:line="235" pos:column="52"/></name></expr></argument>)<pos:position pos:line="235" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><call><name pos:line="237" pos:column="13">DEBUG_GTE<pos:position pos:line="237" pos:column="22"/></name><argument_list pos:line="237" pos:column="22">(<argument><expr><name pos:line="237" pos:column="23">SEND<pos:position pos:line="237" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="237" pos:column="29">1<pos:position pos:line="237" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="237" pos:column="32"/></condition><then pos:line="237" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="238" pos:column="17">rprintf<pos:position pos:line="238" pos:column="24"/></name><argument_list pos:line="238" pos:column="24">(<argument><expr><name pos:line="238" pos:column="25">FINFO<pos:position pos:line="238" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="32">"send files finished\n"<pos:position pos:line="238" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="240" pos:column="9">match_report<pos:position pos:line="240" pos:column="21"/></name><argument_list pos:line="240" pos:column="21">()<pos:position pos:line="240" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="24"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="242" pos:column="9">write_ndx<pos:position pos:line="242" pos:column="18"/></name><argument_list pos:line="242" pos:column="18">(<argument><expr><name pos:line="242" pos:column="19">f_out<pos:position pos:line="242" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="26">NDX_DONE<pos:position pos:line="242" pos:column="34"/></name></expr></argument>)<pos:position pos:line="242" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="36"/></expr_stmt>
}<pos:position pos:line="243" pos:column="2"/></block></function></unit>

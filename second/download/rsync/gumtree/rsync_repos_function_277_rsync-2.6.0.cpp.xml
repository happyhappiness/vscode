<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_277_rsync-2.6.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">do_open<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">char<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">pathname<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">flags<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">mode_t<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">mode<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">flags<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">!=<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="22">O_RDONLY<pos:position pos:line="3" pos:column="30"/></name></expr>)<pos:position pos:line="3" pos:column="31"/></condition><then pos:line="3" pos:column="31"> <block pos:line="3" pos:column="32">{
	    <if pos:line="4" pos:column="13">if <condition pos:line="4" pos:column="16">(<expr><name pos:line="4" pos:column="17">dry_run<pos:position pos:line="4" pos:column="24"/></name></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25"> <block type="pseudo"><return pos:line="4" pos:column="26">return <expr><operator pos:line="4" pos:column="33">-<pos:position pos:line="4" pos:column="34"/></operator><literal type="number" pos:line="4" pos:column="34">1<pos:position pos:line="4" pos:column="35"/></literal></expr>;<pos:position pos:line="4" pos:column="36"/></return></block></then></if>
	    <expr_stmt><expr><name pos:line="5" pos:column="13">CHECK_RO<pos:position pos:line="5" pos:column="21"/></name></expr></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="7" pos:column="9">/* some systems can't handle a double / */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">pathname<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name> <operator pos:line="8" pos:column="25">==<pos:position pos:line="8" pos:column="27"/></operator> <literal type="char" pos:line="8" pos:column="28">'/'<pos:position pos:line="8" pos:column="31"/></literal> <operator pos:line="8" pos:column="32">&amp;&amp;<pos:position pos:line="8" pos:column="42"/></operator> <name><name pos:line="8" pos:column="35">pathname<pos:position pos:line="8" pos:column="43"/></name><index pos:line="8" pos:column="43">[<expr><literal type="number" pos:line="8" pos:column="44">1<pos:position pos:line="8" pos:column="45"/></literal></expr>]<pos:position pos:line="8" pos:column="46"/></index></name> <operator pos:line="8" pos:column="47">==<pos:position pos:line="8" pos:column="49"/></operator> <literal type="char" pos:line="8" pos:column="50">'/'<pos:position pos:line="8" pos:column="53"/></literal></expr>)<pos:position pos:line="8" pos:column="54"/></condition><then pos:line="8" pos:column="54"> <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="55">pathname<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">++<pos:position pos:line="8" pos:column="65"/></operator></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt></block></then></if>

	<return pos:line="10" pos:column="9">return <expr><call><name pos:line="10" pos:column="16">open<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">pathname<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">flags<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">|<pos:position pos:line="10" pos:column="38"/></operator> <name pos:line="10" pos:column="39">O_BINARY<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">mode<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

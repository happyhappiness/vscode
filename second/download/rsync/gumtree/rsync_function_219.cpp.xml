<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_219.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">off_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">send_files<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name><name pos:line="1" pos:column="18">struct<pos:position pos:line="1" pos:column="24"/></name> <name pos:line="1" pos:column="25">file_list<pos:position pos:line="1" pos:column="34"/></name></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">flist<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">f_out<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">f_in<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{ 
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sum_struct<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">s<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">buf<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">stat<pos:position pos:line="6" pos:column="14"/></name></name></type> <name pos:line="6" pos:column="15">st<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">fname<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><name pos:line="7" pos:column="14">MAXPATHLEN<pos:position pos:line="7" pos:column="24"/></name></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>  
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">off_t<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">total<pos:position pos:line="8" pos:column="14"/></name><init pos:line="8" pos:column="14">=<expr><literal type="number" pos:line="8" pos:column="15">0<pos:position pos:line="8" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">i<pos:position pos:line="9" pos:column="8"/></name></decl>;<pos:position pos:line="9" pos:column="9"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">verbose<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">&gt;<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="17">2<pos:position pos:line="11" pos:column="18"/></literal></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">fprintf<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">stderr<pos:position pos:line="12" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="20">"send_files starting\n"<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="14" pos:column="3">setup_nonblocking<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">f_in<pos:position pos:line="14" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="14" pos:column="26">f_out<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

  <while pos:line="16" pos:column="3">while <condition pos:line="16" pos:column="9">(<expr><literal type="number" pos:line="16" pos:column="10">1<pos:position pos:line="16" pos:column="11"/></literal></expr>)<pos:position pos:line="16" pos:column="12"/></condition> 
    <block pos:line="17" pos:column="5">{
      <expr_stmt><expr><name pos:line="18" pos:column="7">i<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">read_int<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">f_in<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
      <if pos:line="19" pos:column="7">if <condition pos:line="19" pos:column="10">(<expr><name pos:line="19" pos:column="11">i<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">==<pos:position pos:line="19" pos:column="15"/></operator> <operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block type="pseudo"><break pos:line="19" pos:column="20">break;<pos:position pos:line="19" pos:column="26"/></break></block></then></if>

      <expr_stmt><expr><name><name pos:line="21" pos:column="7">fname<pos:position pos:line="21" pos:column="12"/></name><index pos:line="21" pos:column="12">[<expr><literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal></expr>]<pos:position pos:line="21" pos:column="15"/></index></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>
      <if pos:line="22" pos:column="7">if <condition pos:line="22" pos:column="10">(<expr><name><name pos:line="22" pos:column="11">flist<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">files<pos:position pos:line="22" pos:column="23"/></name><index pos:line="22" pos:column="23">[<expr><name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name></expr>]<pos:position pos:line="22" pos:column="26"/></index></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">dir<pos:position pos:line="22" pos:column="30"/></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">strcpy<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">fname<pos:position pos:line="23" pos:column="21"/></name></expr></argument>,<argument><expr><name><name pos:line="23" pos:column="22">flist<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">files<pos:position pos:line="23" pos:column="34"/></name><index pos:line="23" pos:column="34">[<expr><name pos:line="23" pos:column="35">i<pos:position pos:line="23" pos:column="36"/></name></expr>]<pos:position pos:line="23" pos:column="37"/></index></name><operator pos:line="23" pos:column="37">.<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">dir<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strcat<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">fname<pos:position pos:line="24" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="24" pos:column="22">"/"<pos:position pos:line="24" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="25" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">strcat<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">fname<pos:position pos:line="26" pos:column="19"/></name></expr></argument>,<argument><expr><name><name pos:line="26" pos:column="20">flist<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">files<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name pos:line="26" pos:column="33">i<pos:position pos:line="26" pos:column="34"/></name></expr>]<pos:position pos:line="26" pos:column="35"/></index></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">name<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">verbose<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&gt;<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="21">2<pos:position pos:line="28" pos:column="22"/></literal></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">fprintf<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">stderr<pos:position pos:line="29" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="24">"send_files(%d,%s)\n"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>,<argument><expr><name pos:line="29" pos:column="46">i<pos:position pos:line="29" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="48">fname<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt></block></then></if>

      <if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><name pos:line="31" pos:column="11">dry_run<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block pos:line="31" pos:column="20">{	
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">am_server<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">&amp;&amp;<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="27">verbose<pos:position pos:line="32" pos:column="34"/></name></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="11">printf<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><literal type="string" pos:line="33" pos:column="18">"%s\n"<pos:position pos:line="33" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="33" pos:column="25">fname<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">write_int<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">f_out<pos:position pos:line="34" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="34" pos:column="25">i<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
	<continue pos:line="35" pos:column="9">continue;<pos:position pos:line="35" pos:column="18"/></continue>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="38" pos:column="7">s<pos:position pos:line="38" pos:column="8"/></name> <operator pos:line="38" pos:column="9">=<pos:position pos:line="38" pos:column="10"/></operator> <call><name pos:line="38" pos:column="11">receive_sums<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">f_in<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><operator pos:line="39" pos:column="11">!<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">s<pos:position pos:line="39" pos:column="13"/></name></expr>)<pos:position pos:line="39" pos:column="14"/></condition><then pos:line="39" pos:column="14"> <block pos:line="39" pos:column="15">{
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">fprintf<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><name pos:line="40" pos:column="17">stderr<pos:position pos:line="40" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="40" pos:column="24">"receive_sums failed\n"<pos:position pos:line="40" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="49"/></expr_stmt>
	<return pos:line="41" pos:column="9">return <expr><operator pos:line="41" pos:column="16">-<pos:position pos:line="41" pos:column="17"/></operator><literal type="number" pos:line="41" pos:column="17">1<pos:position pos:line="41" pos:column="18"/></literal></expr>;<pos:position pos:line="41" pos:column="19"/></return>
      }<pos:position pos:line="42" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="44" pos:column="7">fd<pos:position pos:line="44" pos:column="9"/></name> <operator pos:line="44" pos:column="10">=<pos:position pos:line="44" pos:column="11"/></operator> <call><name pos:line="44" pos:column="12">open<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">fname<pos:position pos:line="44" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="44" pos:column="23">O_RDONLY<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><name pos:line="45" pos:column="11">fd<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">==<pos:position pos:line="45" pos:column="16"/></operator> <operator pos:line="45" pos:column="17">-<pos:position pos:line="45" pos:column="18"/></operator><literal type="number" pos:line="45" pos:column="18">1<pos:position pos:line="45" pos:column="19"/></literal></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20"> <block pos:line="45" pos:column="21">{
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">fprintf<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">stderr<pos:position pos:line="46" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="46" pos:column="24">"send_files failed to open %s: %s\n"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>,
		<argument><expr><name pos:line="47" pos:column="17">fname<pos:position pos:line="47" pos:column="22"/></name></expr></argument>,<argument><expr><call><name pos:line="47" pos:column="23">strerror<pos:position pos:line="47" pos:column="31"/></name><argument_list pos:line="47" pos:column="31">(<argument><expr><name pos:line="47" pos:column="32">errno<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
	<continue pos:line="48" pos:column="9">continue;<pos:position pos:line="48" pos:column="18"/></continue>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if>
  
      <comment type="block" pos:line="51" pos:column="7">/* map the local file */</comment>
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><call><name pos:line="52" pos:column="11">fstat<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">fd<pos:position pos:line="52" pos:column="19"/></name></expr></argument>,<argument><expr><operator pos:line="52" pos:column="20">&amp;<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="21">st<pos:position pos:line="52" pos:column="23"/></name></expr></argument>)<pos:position pos:line="52" pos:column="24"/></argument_list></call> <operator pos:line="52" pos:column="25">!=<pos:position pos:line="52" pos:column="27"/></operator> <literal type="number" pos:line="52" pos:column="28">0<pos:position pos:line="52" pos:column="29"/></literal></expr>)<pos:position pos:line="52" pos:column="30"/></condition><then pos:line="52" pos:column="30"> <block pos:line="52" pos:column="31">{
	<expr_stmt><expr><call><name pos:line="53" pos:column="9">fprintf<pos:position pos:line="53" pos:column="16"/></name><argument_list pos:line="53" pos:column="16">(<argument><expr><name pos:line="53" pos:column="17">stderr<pos:position pos:line="53" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="53" pos:column="24">"fstat failed : %s\n"<pos:position pos:line="53" pos:column="45"/></literal></expr></argument>,<argument><expr><call><name pos:line="53" pos:column="46">strerror<pos:position pos:line="53" pos:column="54"/></name><argument_list pos:line="53" pos:column="54">(<argument><expr><name pos:line="53" pos:column="55">errno<pos:position pos:line="53" pos:column="60"/></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">-<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">1<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></return>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>
      
      <if pos:line="57" pos:column="7">if <condition pos:line="57" pos:column="10">(<expr><name><name pos:line="57" pos:column="11">st<pos:position pos:line="57" pos:column="13"/></name><operator pos:line="57" pos:column="13">.<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">st_size<pos:position pos:line="57" pos:column="21"/></name></name> <operator pos:line="57" pos:column="22">&gt;<pos:position pos:line="57" pos:column="26"/></operator> <literal type="number" pos:line="57" pos:column="24">0<pos:position pos:line="57" pos:column="25"/></literal></expr>)<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26"> <block pos:line="57" pos:column="27">{
	<expr_stmt><expr><name pos:line="58" pos:column="9">buf<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <call><name pos:line="58" pos:column="15">map_file<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">fd<pos:position pos:line="58" pos:column="26"/></name></expr></argument>,<argument><expr><name><name pos:line="58" pos:column="27">st<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">.<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">st_size<pos:position pos:line="58" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
      }<pos:position pos:line="59" pos:column="8"/></block></then> <else pos:line="59" pos:column="9">else <block pos:line="59" pos:column="14">{
	<expr_stmt><expr><name pos:line="60" pos:column="9">buf<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">NULL<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="61" pos:column="8"/></block></else></if>

      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name pos:line="63" pos:column="11">verbose<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&gt;<pos:position pos:line="63" pos:column="23"/></operator> <literal type="number" pos:line="63" pos:column="21">2<pos:position pos:line="63" pos:column="22"/></literal></expr>)<pos:position pos:line="63" pos:column="23"/></condition><then pos:line="63" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="9">fprintf<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">stderr<pos:position pos:line="64" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="64" pos:column="24">"send_files mapped %s of size %d\n"<pos:position pos:line="64" pos:column="59"/></literal></expr></argument>,
		<argument><expr><name pos:line="65" pos:column="17">fname<pos:position pos:line="65" pos:column="22"/></name></expr></argument>,<argument><expr><operator pos:line="65" pos:column="23">(<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">int<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">)<pos:position pos:line="65" pos:column="28"/></operator><name><name pos:line="65" pos:column="28">st<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">.<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">st_size<pos:position pos:line="65" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt></block></then></if>

      <expr_stmt><expr><call><name pos:line="67" pos:column="7">write_int<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name pos:line="67" pos:column="17">f_out<pos:position pos:line="67" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="23">i<pos:position pos:line="67" pos:column="24"/></name></expr></argument>)<pos:position pos:line="67" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="69" pos:column="7">write_int<pos:position pos:line="69" pos:column="16"/></name><argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">f_out<pos:position pos:line="69" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="69" pos:column="23">s<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">-&gt;<pos:position pos:line="69" pos:column="29"/></operator><name pos:line="69" pos:column="26">count<pos:position pos:line="69" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">write_int<pos:position pos:line="70" pos:column="16"/></name><argument_list pos:line="70" pos:column="16">(<argument><expr><name pos:line="70" pos:column="17">f_out<pos:position pos:line="70" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="70" pos:column="23">s<pos:position pos:line="70" pos:column="24"/></name><operator pos:line="70" pos:column="24">-&gt;<pos:position pos:line="70" pos:column="29"/></operator><name pos:line="70" pos:column="26">n<pos:position pos:line="70" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="71" pos:column="7">write_int<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">f_out<pos:position pos:line="71" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="71" pos:column="23">s<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">remainder<pos:position pos:line="71" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>

      <if pos:line="73" pos:column="7">if <condition pos:line="73" pos:column="10">(<expr><name pos:line="73" pos:column="11">verbose<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">&gt;<pos:position pos:line="73" pos:column="23"/></operator> <literal type="number" pos:line="73" pos:column="21">2<pos:position pos:line="73" pos:column="22"/></literal></expr>)<pos:position pos:line="73" pos:column="23"/></condition><then pos:line="73" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="9">fprintf<pos:position pos:line="74" pos:column="16"/></name><argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">stderr<pos:position pos:line="74" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="74" pos:column="24">"calling match_sums %s\n"<pos:position pos:line="74" pos:column="49"/></literal></expr></argument>,<argument><expr><name pos:line="74" pos:column="50">fname<pos:position pos:line="74" pos:column="55"/></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt></block></then></if>

      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><operator pos:line="76" pos:column="11">!<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="12">am_server<pos:position pos:line="76" pos:column="21"/></name> <operator pos:line="76" pos:column="22">&amp;&amp;<pos:position pos:line="76" pos:column="32"/></operator> <name pos:line="76" pos:column="25">verbose<pos:position pos:line="76" pos:column="32"/></name></expr>)<pos:position pos:line="76" pos:column="33"/></condition><then pos:line="76" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="9">printf<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><literal type="string" pos:line="77" pos:column="16">"%s\n"<pos:position pos:line="77" pos:column="22"/></literal></expr></argument>,<argument><expr><name pos:line="77" pos:column="23">fname<pos:position pos:line="77" pos:column="28"/></name></expr></argument>)<pos:position pos:line="77" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="30"/></expr_stmt></block></then></if>
      
      <expr_stmt><expr><call><name pos:line="79" pos:column="7">match_sums<pos:position pos:line="79" pos:column="17"/></name><argument_list pos:line="79" pos:column="17">(<argument><expr><name pos:line="79" pos:column="18">f_out<pos:position pos:line="79" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="24">s<pos:position pos:line="79" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="26">buf<pos:position pos:line="79" pos:column="29"/></name></expr></argument>,<argument><expr><name><name pos:line="79" pos:column="30">st<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">.<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="33">st_size<pos:position pos:line="79" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">write_flush<pos:position pos:line="80" pos:column="18"/></name><argument_list pos:line="80" pos:column="18">(<argument><expr><name pos:line="80" pos:column="19">f_out<pos:position pos:line="80" pos:column="24"/></name></expr></argument>)<pos:position pos:line="80" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="26"/></expr_stmt>
      
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">unmap_file<pos:position pos:line="82" pos:column="17"/></name><argument_list pos:line="82" pos:column="17">(<argument><expr><name pos:line="82" pos:column="18">buf<pos:position pos:line="82" pos:column="21"/></name></expr></argument>,<argument><expr><name><name pos:line="82" pos:column="22">st<pos:position pos:line="82" pos:column="24"/></name><operator pos:line="82" pos:column="24">.<pos:position pos:line="82" pos:column="25"/></operator><name pos:line="82" pos:column="25">st_size<pos:position pos:line="82" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">close<pos:position pos:line="83" pos:column="12"/></name><argument_list pos:line="83" pos:column="12">(<argument><expr><name pos:line="83" pos:column="13">fd<pos:position pos:line="83" pos:column="15"/></name></expr></argument>)<pos:position pos:line="83" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="17"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="85" pos:column="7">free_sums<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><name pos:line="85" pos:column="17">s<pos:position pos:line="85" pos:column="18"/></name></expr></argument>)<pos:position pos:line="85" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="20"/></expr_stmt>

      <if pos:line="87" pos:column="7">if <condition pos:line="87" pos:column="10">(<expr><name pos:line="87" pos:column="11">verbose<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">&gt;<pos:position pos:line="87" pos:column="23"/></operator> <literal type="number" pos:line="87" pos:column="21">2<pos:position pos:line="87" pos:column="22"/></literal></expr>)<pos:position pos:line="87" pos:column="23"/></condition><then pos:line="87" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="9">fprintf<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><name pos:line="88" pos:column="17">stderr<pos:position pos:line="88" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="88" pos:column="24">"sender finished %s\n"<pos:position pos:line="88" pos:column="46"/></literal></expr></argument>,<argument><expr><name pos:line="88" pos:column="47">fname<pos:position pos:line="88" pos:column="52"/></name></expr></argument>)<pos:position pos:line="88" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="54"/></expr_stmt></block></then></if>

      <expr_stmt><expr><name pos:line="90" pos:column="7">total<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">+=<pos:position pos:line="90" pos:column="15"/></operator> <name><name pos:line="90" pos:column="16">st<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">.<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">st_size<pos:position pos:line="90" pos:column="26"/></name></name></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></while>

  <expr_stmt><expr><call><name pos:line="93" pos:column="3">match_report<pos:position pos:line="93" pos:column="15"/></name><argument_list pos:line="93" pos:column="15">()<pos:position pos:line="93" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="95" pos:column="3">write_int<pos:position pos:line="95" pos:column="12"/></name><argument_list pos:line="95" pos:column="12">(<argument><expr><name pos:line="95" pos:column="13">f_out<pos:position pos:line="95" pos:column="18"/></name></expr></argument>,<argument><expr><operator pos:line="95" pos:column="19">-<pos:position pos:line="95" pos:column="20"/></operator><literal type="number" pos:line="95" pos:column="20">1<pos:position pos:line="95" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="96" pos:column="3">write_flush<pos:position pos:line="96" pos:column="14"/></name><argument_list pos:line="96" pos:column="14">(<argument><expr><name pos:line="96" pos:column="15">f_out<pos:position pos:line="96" pos:column="20"/></name></expr></argument>)<pos:position pos:line="96" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="22"/></expr_stmt>

  <return pos:line="98" pos:column="3">return <expr><name pos:line="98" pos:column="10">total<pos:position pos:line="98" pos:column="15"/></name></expr>;<pos:position pos:line="98" pos:column="16"/></return>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

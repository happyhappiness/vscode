<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_847.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_implied_dirs<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">f<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="38">struct<pos:position pos:line="1" pos:column="44"/></name> <name pos:line="1" pos:column="45">file_list<pos:position pos:line="1" pos:column="54"/></name></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">flist<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">fname<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">start<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">limit<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">flags<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">char<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">name_type<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">file_struct<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">file<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">item_list<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">relname_list<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">relnamecache<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier><modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">rnpp<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">slash<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">len<pos:position pos:line="8" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="18">need_new_dir<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">filter_list_struct<pos:position pos:line="9" pos:column="34"/></name></name></type> <name pos:line="9" pos:column="35">save_filter_list<pos:position pos:line="9" pos:column="51"/></name> <init pos:line="9" pos:column="52">= <expr><name pos:line="9" pos:column="54">filter_list<pos:position pos:line="9" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="66"/></decl_stmt>

	<expr_stmt><expr><name pos:line="11" pos:column="9">flags<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">flags<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">|<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">FLAG_IMPLIED_DIR<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">)<pos:position pos:line="11" pos:column="43"/></operator> <operator pos:line="11" pos:column="44">&amp;<pos:position pos:line="11" pos:column="49"/></operator> <operator pos:line="11" pos:column="46">~<pos:position pos:line="11" pos:column="47"/></operator><operator pos:line="11" pos:column="47">(<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">FLAG_TOP_DIR<pos:position pos:line="11" pos:column="60"/></name> <operator pos:line="11" pos:column="61">|<pos:position pos:line="11" pos:column="62"/></operator> <name pos:line="11" pos:column="63">FLAG_CONTENT_DIR<pos:position pos:line="11" pos:column="79"/></name><operator pos:line="11" pos:column="79">)<pos:position pos:line="11" pos:column="80"/></operator></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">filter_list<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">head<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="28">filter_list<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">tail<pos:position pos:line="12" pos:column="44"/></name></name> <operator pos:line="12" pos:column="45">=<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="47">NULL<pos:position pos:line="12" pos:column="51"/></name></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt> <comment type="block" pos:line="12" pos:column="53">/* Don't filter implied dirs. */</comment>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">inc_recurse<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">lastpath_struct<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">&amp;&amp;<pos:position pos:line="15" pos:column="47"/></operator> <call><name pos:line="15" pos:column="40">F_PATHNAME<pos:position pos:line="15" pos:column="50"/></name><argument_list pos:line="15" pos:column="50">(<argument><expr><name pos:line="15" pos:column="51">lastpath_struct<pos:position pos:line="15" pos:column="66"/></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call> <operator pos:line="15" pos:column="68">==<pos:position pos:line="15" pos:column="70"/></operator> <name pos:line="15" pos:column="71">pathname<pos:position pos:line="15" pos:column="79"/></name>
		 <operator pos:line="16" pos:column="18">&amp;&amp;<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="21">lastpath_len<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">==<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="37">limit<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">-<pos:position pos:line="16" pos:column="44"/></operator> <name pos:line="16" pos:column="45">fname<pos:position pos:line="16" pos:column="50"/></name>
		 <operator pos:line="17" pos:column="18">&amp;&amp;<pos:position pos:line="17" pos:column="28"/></operator> <call><name pos:line="17" pos:column="21">strncmp<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">lastpath<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">fname<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">lastpath_len<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call> <operator pos:line="17" pos:column="60">==<pos:position pos:line="17" pos:column="62"/></operator> <literal type="number" pos:line="17" pos:column="63">0<pos:position pos:line="17" pos:column="64"/></literal></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">need_new_dir<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <literal type="number" pos:line="18" pos:column="40">0<pos:position pos:line="18" pos:column="41"/></literal></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt></block></then>
		<else pos:line="19" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">need_new_dir<pos:position pos:line="20" pos:column="37"/></name> <operator pos:line="20" pos:column="38">=<pos:position pos:line="20" pos:column="39"/></operator> <literal type="number" pos:line="20" pos:column="40">1<pos:position pos:line="20" pos:column="41"/></literal></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt></block></else></if>
	}<pos:position pos:line="21" pos:column="10"/></block></then> <else pos:line="21" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="17">need_new_dir<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="number" pos:line="22" pos:column="32">1<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt></block></else></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">need_new_dir<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">int<pos:position pos:line="25" pos:column="20"/></name></type> <name pos:line="25" pos:column="21">save_copy_links<pos:position pos:line="25" pos:column="36"/></name> <init pos:line="25" pos:column="37">= <expr><name pos:line="25" pos:column="39">copy_links<pos:position pos:line="25" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">int<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">save_xfer_dirs<pos:position pos:line="26" pos:column="35"/></name> <init pos:line="26" pos:column="36">= <expr><name pos:line="26" pos:column="38">xfer_dirs<pos:position pos:line="26" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="48"/></decl_stmt>

		<expr_stmt><expr><name pos:line="28" pos:column="17">copy_links<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">xfer_dirs<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">=<pos:position pos:line="28" pos:column="41"/></operator> <literal type="number" pos:line="28" pos:column="42">1<pos:position pos:line="28" pos:column="43"/></literal></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">limit<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="char" pos:line="30" pos:column="26">'\0'<pos:position pos:line="30" pos:column="30"/></literal></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>

		<for pos:line="32" pos:column="17">for <control pos:line="32" pos:column="21">(<init><expr><name pos:line="32" pos:column="22">slash<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">start<pos:position pos:line="32" pos:column="35"/></name></expr>;<pos:position pos:line="32" pos:column="36"/></init> <condition><expr><operator pos:line="32" pos:column="37">(<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">slash<pos:position pos:line="32" pos:column="43"/></name> <operator pos:line="32" pos:column="44">=<pos:position pos:line="32" pos:column="45"/></operator> <call><name pos:line="32" pos:column="46">strchr<pos:position pos:line="32" pos:column="52"/></name><argument_list pos:line="32" pos:column="52">(<argument><expr><name pos:line="32" pos:column="53">slash<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">+<pos:position pos:line="32" pos:column="59"/></operator><literal type="number" pos:line="32" pos:column="59">1<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="62">'/'<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call><operator pos:line="32" pos:column="66">)<pos:position pos:line="32" pos:column="67"/></operator> <operator pos:line="32" pos:column="68">!=<pos:position pos:line="32" pos:column="70"/></operator> <name pos:line="32" pos:column="71">NULL<pos:position pos:line="32" pos:column="75"/></name></expr>;<pos:position pos:line="32" pos:column="76"/></condition> <incr/>)<pos:position pos:line="32" pos:column="78"/></control> <block pos:line="32" pos:column="79">{
			<expr_stmt><expr><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">slash<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <literal type="char" pos:line="33" pos:column="34">'\0'<pos:position pos:line="33" pos:column="38"/></literal></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">send_file_name<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">f<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">flist<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">fname<pos:position pos:line="34" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="57">NULL<pos:position pos:line="34" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="63">flags<pos:position pos:line="34" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="70">ALL_FILTERS<pos:position pos:line="34" pos:column="81"/></name></expr></argument>)<pos:position pos:line="34" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="83"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="35" pos:column="25">*<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">slash<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <literal type="char" pos:line="35" pos:column="34">'/'<pos:position pos:line="35" pos:column="37"/></literal></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></for>

		<expr_stmt><expr><name pos:line="38" pos:column="17">file<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <call><name pos:line="38" pos:column="24">send_file_name<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">f<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">flist<pos:position pos:line="38" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="49">fname<pos:position pos:line="38" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="56">NULL<pos:position pos:line="38" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="62">flags<pos:position pos:line="38" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="69">ALL_FILTERS<pos:position pos:line="38" pos:column="80"/></name></expr></argument>)<pos:position pos:line="38" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="82"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">inc_recurse<pos:position pos:line="39" pos:column="32"/></name></expr>)<pos:position pos:line="39" pos:column="33"/></condition><then pos:line="39" pos:column="33"> <block pos:line="39" pos:column="34">{
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name pos:line="40" pos:column="29">file<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">&amp;&amp;<pos:position pos:line="40" pos:column="44"/></operator> <operator pos:line="40" pos:column="37">!<pos:position pos:line="40" pos:column="38"/></operator><call><name pos:line="40" pos:column="38">S_ISDIR<pos:position pos:line="40" pos:column="45"/></name><argument_list pos:line="40" pos:column="45">(<argument><expr><name><name pos:line="40" pos:column="46">file<pos:position pos:line="40" pos:column="50"/></name><operator pos:line="40" pos:column="50">-&gt;<pos:position pos:line="40" pos:column="55"/></operator><name pos:line="40" pos:column="52">mode<pos:position pos:line="40" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="33">file<pos:position pos:line="41" pos:column="37"/></name> <operator pos:line="41" pos:column="38">=<pos:position pos:line="41" pos:column="39"/></operator> <name pos:line="41" pos:column="40">NULL<pos:position pos:line="41" pos:column="44"/></name></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="42" pos:column="25">lastpath_struct<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">=<pos:position pos:line="42" pos:column="42"/></operator> <name pos:line="42" pos:column="43">file<pos:position pos:line="42" pos:column="47"/></name></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="45" pos:column="17">strlcpy<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">lastpath<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="35">fname<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="42">sizeof <name pos:line="45" pos:column="49">lastpath<pos:position pos:line="45" pos:column="57"/></name></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">lastpath_len<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">=<pos:position pos:line="46" pos:column="31"/></operator> <name pos:line="46" pos:column="32">limit<pos:position pos:line="46" pos:column="37"/></name> <operator pos:line="46" pos:column="38">-<pos:position pos:line="46" pos:column="39"/></operator> <name pos:line="46" pos:column="40">fname<pos:position pos:line="46" pos:column="45"/></name></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="48" pos:column="17">*<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">limit<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <literal type="char" pos:line="48" pos:column="26">'/'<pos:position pos:line="48" pos:column="29"/></literal></expr>;<pos:position pos:line="48" pos:column="30"/></expr_stmt>

		<expr_stmt><expr><name pos:line="50" pos:column="17">copy_links<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">save_copy_links<pos:position pos:line="50" pos:column="45"/></name></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="51" pos:column="17">xfer_dirs<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">=<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="29">save_xfer_dirs<pos:position pos:line="51" pos:column="43"/></name></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>

		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><operator pos:line="53" pos:column="21">!<pos:position pos:line="53" pos:column="22"/></operator><name pos:line="53" pos:column="22">inc_recurse<pos:position pos:line="53" pos:column="33"/></name></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34">
			<block type="pseudo"><goto pos:line="54" pos:column="25">goto <name pos:line="54" pos:column="30">done<pos:position pos:line="54" pos:column="34"/></name>;<pos:position pos:line="54" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">!<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">lastpath_struct<pos:position pos:line="57" pos:column="29"/></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30">
		<block type="pseudo"><goto pos:line="58" pos:column="17">goto <name pos:line="58" pos:column="22">done<pos:position pos:line="58" pos:column="26"/></name>;<pos:position pos:line="58" pos:column="27"/></goto></block></then></if> <comment type="block" pos:line="58" pos:column="28">/* dir must have vanished */</comment>

	<expr_stmt><expr><name pos:line="60" pos:column="9">len<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <call><name pos:line="60" pos:column="15">strlen<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">limit<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">+<pos:position pos:line="60" pos:column="28"/></operator><literal type="number" pos:line="60" pos:column="28">1<pos:position pos:line="60" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">memcpy<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><operator pos:line="61" pos:column="16">&amp;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="17">relname_list<pos:position pos:line="61" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="61" pos:column="31">F_DIR_RELNAMES_P<pos:position pos:line="61" pos:column="47"/></name><argument_list pos:line="61" pos:column="47">(<argument><expr><name pos:line="61" pos:column="48">lastpath_struct<pos:position pos:line="61" pos:column="63"/></name></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="66">sizeof <name pos:line="61" pos:column="73">relname_list<pos:position pos:line="61" pos:column="85"/></name></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="87"/></expr_stmt>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">relname_list<pos:position pos:line="62" pos:column="26"/></name></expr>)<pos:position pos:line="62" pos:column="27"/></condition><then pos:line="62" pos:column="27"> <block pos:line="62" pos:column="28">{
		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">!<pos:position pos:line="63" pos:column="22"/></operator><operator pos:line="63" pos:column="22">(<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="23">relname_list<pos:position pos:line="63" pos:column="35"/></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <call><name pos:line="63" pos:column="38">new0<pos:position pos:line="63" pos:column="42"/></name><argument_list pos:line="63" pos:column="42">(<argument><expr><name pos:line="63" pos:column="43">item_list<pos:position pos:line="63" pos:column="52"/></name></expr></argument>)<pos:position pos:line="63" pos:column="53"/></argument_list></call><operator pos:line="63" pos:column="53">)<pos:position pos:line="63" pos:column="54"/></operator></expr>)<pos:position pos:line="63" pos:column="55"/></condition><then pos:line="63" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="25">out_of_memory<pos:position pos:line="64" pos:column="38"/></name><argument_list pos:line="64" pos:column="38">(<argument><expr><literal type="string" pos:line="64" pos:column="39">"send_implied_dirs"<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="60"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="65" pos:column="17">memcpy<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><call><name pos:line="65" pos:column="24">F_DIR_RELNAMES_P<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><name pos:line="65" pos:column="41">lastpath_struct<pos:position pos:line="65" pos:column="56"/></name></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="65" pos:column="59">&amp;<pos:position pos:line="65" pos:column="64"/></operator><name pos:line="65" pos:column="60">relname_list<pos:position pos:line="65" pos:column="72"/></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="74">sizeof <name pos:line="65" pos:column="81">relname_list<pos:position pos:line="65" pos:column="93"/></name></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="95"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="67" pos:column="9">rnpp<pos:position pos:line="67" pos:column="13"/></name> <operator pos:line="67" pos:column="14">=<pos:position pos:line="67" pos:column="15"/></operator> <call><name pos:line="67" pos:column="16">EXPAND_ITEM_LIST<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">relname_list<pos:position pos:line="67" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="47">relnamecache<pos:position pos:line="67" pos:column="59"/></name> <operator pos:line="67" pos:column="60">*<pos:position pos:line="67" pos:column="61"/></operator></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="63">32<pos:position pos:line="67" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="67"/></expr_stmt>
	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><operator pos:line="68" pos:column="13">!<pos:position pos:line="68" pos:column="14"/></operator><operator pos:line="68" pos:column="14">(<pos:position pos:line="68" pos:column="15"/></operator><operator pos:line="68" pos:column="15">*<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="16">rnpp<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">=<pos:position pos:line="68" pos:column="22"/></operator> <operator pos:line="68" pos:column="23">(<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="24">relnamecache<pos:position pos:line="68" pos:column="36"/></name><operator pos:line="68" pos:column="36">*<pos:position pos:line="68" pos:column="37"/></operator><operator pos:line="68" pos:column="37">)<pos:position pos:line="68" pos:column="38"/></operator><call><name pos:line="68" pos:column="38">new_array<pos:position pos:line="68" pos:column="47"/></name><argument_list pos:line="68" pos:column="47">(<argument><expr><name pos:line="68" pos:column="48">char<pos:position pos:line="68" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="54">sizeof <argument_list pos:line="68" pos:column="61">(<argument><expr><name pos:line="68" pos:column="62">relnamecache<pos:position pos:line="68" pos:column="74"/></name></expr></argument>)<pos:position pos:line="68" pos:column="75"/></argument_list></sizeof> <operator pos:line="68" pos:column="76">+<pos:position pos:line="68" pos:column="77"/></operator> <name pos:line="68" pos:column="78">len<pos:position pos:line="68" pos:column="81"/></name></expr></argument>)<pos:position pos:line="68" pos:column="82"/></argument_list></call><operator pos:line="68" pos:column="82">)<pos:position pos:line="68" pos:column="83"/></operator></expr>)<pos:position pos:line="68" pos:column="84"/></condition><then pos:line="68" pos:column="84">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="17">out_of_memory<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><literal type="string" pos:line="69" pos:column="31">"send_implied_dirs"<pos:position pos:line="69" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><operator pos:line="70" pos:column="9">(<pos:position pos:line="70" pos:column="10"/></operator><operator pos:line="70" pos:column="10">*<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">rnpp<pos:position pos:line="70" pos:column="15"/></name><operator pos:line="70" pos:column="15">)<pos:position pos:line="70" pos:column="16"/></operator><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">name_type<pos:position pos:line="70" pos:column="27"/></name></name> <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <name pos:line="70" pos:column="30">name_type<pos:position pos:line="70" pos:column="39"/></name></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">strlcpy<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name><operator pos:line="71" pos:column="17">(<pos:position pos:line="71" pos:column="18"/></operator><operator pos:line="71" pos:column="18">*<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="19">rnpp<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">)<pos:position pos:line="71" pos:column="24"/></operator><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">fname<pos:position pos:line="71" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="33">limit<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">+<pos:position pos:line="71" pos:column="39"/></operator><literal type="number" pos:line="71" pos:column="39">1<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="42">len<pos:position pos:line="71" pos:column="45"/></name> <operator pos:line="71" pos:column="46">+<pos:position pos:line="71" pos:column="47"/></operator> <literal type="number" pos:line="71" pos:column="48">1<pos:position pos:line="71" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="51"/></expr_stmt>

<label><name pos:line="73" pos:column="1">done<pos:position pos:line="73" pos:column="5"/></name>:<pos:position pos:line="73" pos:column="6"/></label>
	<expr_stmt><expr><name pos:line="74" pos:column="9">filter_list<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <name pos:line="74" pos:column="23">save_filter_list<pos:position pos:line="74" pos:column="39"/></name></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

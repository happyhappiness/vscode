<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_562_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">limit_output_verbosity<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">level<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">short<pos:position pos:line="3" pos:column="14"/></name></type> <name><name pos:line="3" pos:column="15">info_limits<pos:position pos:line="3" pos:column="26"/></name><index pos:line="3" pos:column="26">[<expr><name pos:line="3" pos:column="27">COUNT_INFO<pos:position pos:line="3" pos:column="37"/></name></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="40">debug_limits<pos:position pos:line="3" pos:column="52"/></name><index pos:line="3" pos:column="52">[<expr><name pos:line="3" pos:column="53">COUNT_DEBUG<pos:position pos:line="3" pos:column="64"/></name></expr>]<pos:position pos:line="3" pos:column="65"/></index></name></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">j<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">level<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&gt;<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="21">MAX_VERBOSITY<pos:position pos:line="6" pos:column="34"/></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">info_limits<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="29">0<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="32">sizeof <name pos:line="9" pos:column="39">info_limits<pos:position pos:line="9" pos:column="50"/></name></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">memset<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">debug_limits<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="33">sizeof <name pos:line="10" pos:column="40">debug_limits<pos:position pos:line="10" pos:column="52"/></name></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Compute the level limits in the above arrays. */</comment>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">j<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">1<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">j<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;=<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="26">level<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></condition> <incr><expr><name pos:line="13" pos:column="33">j<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">++<pos:position pos:line="13" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="37"/></control> <block pos:line="13" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">parse_output_words<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">info_words<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">info_limits<pos:position pos:line="14" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="61">info_verbosity<pos:position pos:line="14" pos:column="75"/></name><index pos:line="14" pos:column="75">[<expr><name pos:line="14" pos:column="76">j<pos:position pos:line="14" pos:column="77"/></name></expr>]<pos:position pos:line="14" pos:column="78"/></index></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="80">LIMIT_PRIORITY<pos:position pos:line="14" pos:column="94"/></name></expr></argument>)<pos:position pos:line="14" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="96"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">parse_output_words<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">debug_words<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">debug_limits<pos:position pos:line="15" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="63">debug_verbosity<pos:position pos:line="15" pos:column="78"/></name><index pos:line="15" pos:column="78">[<expr><name pos:line="15" pos:column="79">j<pos:position pos:line="15" pos:column="80"/></name></expr>]<pos:position pos:line="15" pos:column="81"/></index></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="83">LIMIT_PRIORITY<pos:position pos:line="15" pos:column="97"/></name></expr></argument>)<pos:position pos:line="15" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="99"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></for>

	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">j<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">j<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">COUNT_INFO<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></condition> <incr><expr><name pos:line="18" pos:column="37">j<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">++<pos:position pos:line="18" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="41"/></control> <block pos:line="18" pos:column="42">{
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">info_levels<pos:position pos:line="19" pos:column="32"/></name><index pos:line="19" pos:column="32">[<expr><name pos:line="19" pos:column="33">j<pos:position pos:line="19" pos:column="34"/></name></expr>]<pos:position pos:line="19" pos:column="35"/></index></name> <operator pos:line="19" pos:column="36">&gt;<pos:position pos:line="19" pos:column="40"/></operator> <name><name pos:line="19" pos:column="38">info_limits<pos:position pos:line="19" pos:column="49"/></name><index pos:line="19" pos:column="49">[<expr><name pos:line="19" pos:column="50">j<pos:position pos:line="19" pos:column="51"/></name></expr>]<pos:position pos:line="19" pos:column="52"/></index></name></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="25">info_levels<pos:position pos:line="20" pos:column="36"/></name><index pos:line="20" pos:column="36">[<expr><name pos:line="20" pos:column="37">j<pos:position pos:line="20" pos:column="38"/></name></expr>]<pos:position pos:line="20" pos:column="39"/></index></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <name><name pos:line="20" pos:column="42">info_limits<pos:position pos:line="20" pos:column="53"/></name><index pos:line="20" pos:column="53">[<expr><name pos:line="20" pos:column="54">j<pos:position pos:line="20" pos:column="55"/></name></expr>]<pos:position pos:line="20" pos:column="56"/></index></name></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">j<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>;<pos:position pos:line="23" pos:column="20"/></init> <condition><expr><name pos:line="23" pos:column="21">j<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <name pos:line="23" pos:column="25">COUNT_DEBUG<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></condition> <incr><expr><name pos:line="23" pos:column="38">j<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">++<pos:position pos:line="23" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="42"/></control> <block pos:line="23" pos:column="43">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">debug_levels<pos:position pos:line="24" pos:column="33"/></name><index pos:line="24" pos:column="33">[<expr><name pos:line="24" pos:column="34">j<pos:position pos:line="24" pos:column="35"/></name></expr>]<pos:position pos:line="24" pos:column="36"/></index></name> <operator pos:line="24" pos:column="37">&gt;<pos:position pos:line="24" pos:column="41"/></operator> <name><name pos:line="24" pos:column="39">debug_limits<pos:position pos:line="24" pos:column="51"/></name><index pos:line="24" pos:column="51">[<expr><name pos:line="24" pos:column="52">j<pos:position pos:line="24" pos:column="53"/></name></expr>]<pos:position pos:line="24" pos:column="54"/></index></name></expr>)<pos:position pos:line="24" pos:column="55"/></condition><then pos:line="24" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="25">debug_levels<pos:position pos:line="25" pos:column="37"/></name><index pos:line="25" pos:column="37">[<expr><name pos:line="25" pos:column="38">j<pos:position pos:line="25" pos:column="39"/></name></expr>]<pos:position pos:line="25" pos:column="40"/></index></name> <operator pos:line="25" pos:column="41">=<pos:position pos:line="25" pos:column="42"/></operator> <name><name pos:line="25" pos:column="43">debug_limits<pos:position pos:line="25" pos:column="55"/></name><index pos:line="25" pos:column="55">[<expr><name pos:line="25" pos:column="56">j<pos:position pos:line="25" pos:column="57"/></name></expr>]<pos:position pos:line="25" pos:column="58"/></index></name></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt></block></then></if>
	}<pos:position pos:line="26" pos:column="10"/></block></for>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

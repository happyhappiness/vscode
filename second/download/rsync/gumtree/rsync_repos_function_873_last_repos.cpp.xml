<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_873_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">read_xattr<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">attrfd<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">void<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buf<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">size_t<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">buflen<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_STAT<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">sb<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">ssize_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">ret<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">fstat<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">attrfd<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="27">&amp;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="28">sb<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call> <operator pos:line="6" pos:column="32">&lt;<pos:position pos:line="6" pos:column="36"/></operator> <literal type="number" pos:line="6" pos:column="34">0<pos:position pos:line="6" pos:column="35"/></literal></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">ret<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <operator pos:line="7" pos:column="23">-<pos:position pos:line="7" pos:column="24"/></operator><literal type="number" pos:line="7" pos:column="24">1<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt></block></then>
	<elseif pos:line="8" pos:column="9">else <if pos:line="8" pos:column="14">if <condition pos:line="8" pos:column="17">(<expr><name><name pos:line="8" pos:column="18">sb<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">st_size<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">&gt;<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="31">SSIZE_MAX<pos:position pos:line="8" pos:column="40"/></name></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41"> <block pos:line="8" pos:column="42">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">errno<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">ERANGE<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">ret<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">-<pos:position pos:line="10" pos:column="24"/></operator><literal type="number" pos:line="10" pos:column="24">1<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if></elseif> <elseif pos:line="11" pos:column="11">else <if pos:line="11" pos:column="16">if <condition pos:line="11" pos:column="19">(<expr><name pos:line="11" pos:column="20">buflen<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">==<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">ret<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name><name pos:line="12" pos:column="23">sb<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">st_size<pos:position pos:line="12" pos:column="33"/></name></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt></block></then></if></elseif>
	<elseif pos:line="13" pos:column="9">else <if pos:line="13" pos:column="14">if <condition pos:line="13" pos:column="17">(<expr><name><name pos:line="13" pos:column="18">sb<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">st_size<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">&gt;<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="31">buflen<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <block pos:line="13" pos:column="39">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">errno<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">ERANGE<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">ret<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">-<pos:position pos:line="15" pos:column="24"/></operator><literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">size_t<pos:position pos:line="17" pos:column="23"/></name></type> <name pos:line="17" pos:column="24">bufpos<pos:position pos:line="17" pos:column="30"/></name></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>
		<for pos:line="18" pos:column="17">for <control pos:line="18" pos:column="21">(<init><expr><name pos:line="18" pos:column="22">bufpos<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></init> <condition><expr><name pos:line="18" pos:column="34">bufpos<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">&lt;<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="43">sb<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">.<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">st_size<pos:position pos:line="18" pos:column="53"/></name></name></expr>;<pos:position pos:line="18" pos:column="54"/></condition> <incr/>)<pos:position pos:line="18" pos:column="56"/></control> <block pos:line="18" pos:column="57">{
			<decl_stmt><decl><type><name pos:line="19" pos:column="25">ssize_t<pos:position pos:line="19" pos:column="32"/></name></type> <name pos:line="19" pos:column="33">cnt<pos:position pos:line="19" pos:column="36"/></name> <init pos:line="19" pos:column="37">= <expr><call><name pos:line="19" pos:column="39">read<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">attrfd<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">buf<pos:position pos:line="19" pos:column="55"/></name> <operator pos:line="19" pos:column="56">+<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">bufpos<pos:position pos:line="19" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="66">sb<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">.<pos:position pos:line="19" pos:column="69"/></operator><name pos:line="19" pos:column="69">st_size<pos:position pos:line="19" pos:column="76"/></name></name> <operator pos:line="19" pos:column="77">-<pos:position pos:line="19" pos:column="78"/></operator> <name pos:line="19" pos:column="79">bufpos<pos:position pos:line="19" pos:column="85"/></name></expr></argument>)<pos:position pos:line="19" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="87"/></decl_stmt>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><name pos:line="20" pos:column="29">cnt<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">&lt;=<pos:position pos:line="20" pos:column="38"/></operator> <literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38"> <block pos:line="20" pos:column="39">{
				<if pos:line="21" pos:column="33">if <condition pos:line="21" pos:column="36">(<expr><name pos:line="21" pos:column="37">cnt<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">&lt;<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="43">0<pos:position pos:line="21" pos:column="44"/></literal> <operator pos:line="21" pos:column="45">&amp;&amp;<pos:position pos:line="21" pos:column="55"/></operator> <name pos:line="21" pos:column="48">errno<pos:position pos:line="21" pos:column="53"/></name> <operator pos:line="21" pos:column="54">==<pos:position pos:line="21" pos:column="56"/></operator> <name pos:line="21" pos:column="57">EINTR<pos:position pos:line="21" pos:column="62"/></name></expr>)<pos:position pos:line="21" pos:column="63"/></condition><then pos:line="21" pos:column="63">
					<block type="pseudo"><continue pos:line="22" pos:column="41">continue;<pos:position pos:line="22" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><name pos:line="23" pos:column="33">bufpos<pos:position pos:line="23" pos:column="39"/></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <operator pos:line="23" pos:column="42">-<pos:position pos:line="23" pos:column="43"/></operator><literal type="number" pos:line="23" pos:column="43">1<pos:position pos:line="23" pos:column="44"/></literal></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
				<break pos:line="24" pos:column="33">break;<pos:position pos:line="24" pos:column="39"/></break>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="26" pos:column="25">bufpos<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">+=<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">cnt<pos:position pos:line="26" pos:column="38"/></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="28" pos:column="17">ret<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">bufpos<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">close<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">attrfd<pos:position pos:line="31" pos:column="21"/></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>

	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">ret<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

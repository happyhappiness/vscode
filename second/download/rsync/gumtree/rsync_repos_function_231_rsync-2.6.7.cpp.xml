<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_231_rsync-2.6.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">hard_link_one<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">file_struct<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">file<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">ndx<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">fname<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="2" pos:column="19">int<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">statret<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">STRUCT_STAT<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">st<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">toname<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">int<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">terse<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="3" pos:column="19">int<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">itemizing<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="3" pos:column="34">enum<pos:position pos:line="3" pos:column="38"/></name> <name pos:line="3" pos:column="39">logcode<pos:position pos:line="3" pos:column="46"/></name></name></type> <name pos:line="3" pos:column="47">code<pos:position pos:line="3" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">do_link<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">toname<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">fname<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36"> <block pos:line="5" pos:column="37">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><name pos:line="6" pos:column="21">terse<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
			<if pos:line="7" pos:column="25">if <condition pos:line="7" pos:column="28">(<expr><operator pos:line="7" pos:column="29">!<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">verbose<pos:position pos:line="7" pos:column="37"/></name></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38">
				<block type="pseudo"><return pos:line="8" pos:column="33">return <expr><operator pos:line="8" pos:column="40">-<pos:position pos:line="8" pos:column="41"/></operator><literal type="number" pos:line="8" pos:column="41">1<pos:position pos:line="8" pos:column="42"/></literal></expr>;<pos:position pos:line="8" pos:column="43"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="9" pos:column="25">code<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">FINFO<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="10" pos:column="18"/></block></then> <else pos:line="10" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">code<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">FERROR<pos:position pos:line="11" pos:column="38"/></name></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rsyserr<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">code<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">errno<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"link %s =&gt; %s failed"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="13" pos:column="25">full_fname<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">fname<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">toname<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">itemizing<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">itemize<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">file<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">ndx<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">statret<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">st<pos:position pos:line="18" pos:column="47"/></name></expr></argument>,
			<argument><expr><name pos:line="19" pos:column="25">ITEM_LOCAL_CHANGE<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">|<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">ITEM_XNAME_FOLLOWS<pos:position pos:line="19" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="65">0<pos:position pos:line="19" pos:column="66"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="20" pos:column="25">terse<pos:position pos:line="20" pos:column="30"/></name></expr> ?<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <expr><literal type="string" pos:line="20" pos:column="33">""<pos:position pos:line="20" pos:column="35"/></literal></expr> <pos:position pos:line="20" pos:column="36"/></then><else pos:line="20" pos:column="36">: <expr><name pos:line="20" pos:column="38">toname<pos:position pos:line="20" pos:column="44"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">code<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">&amp;&amp;<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="21">verbose<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">&amp;&amp;<pos:position pos:line="22" pos:column="39"/></operator> <operator pos:line="22" pos:column="32">!<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">terse<pos:position pos:line="22" pos:column="38"/></name></expr>)<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">rprintf<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">code<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"%s =&gt; %s\n"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="45">fname<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">toname<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt></block></then></if>
	<return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

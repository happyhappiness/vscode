<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_40_rsync-1.4.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">map_file<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">fd<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="23">off_t<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">len<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ret<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><name pos:line="3" pos:column="15">NULL<pos:position pos:line="3" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">HAVE_MMAP<pos:position pos:line="4" pos:column="17"/></name></cpp:ifdef>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">len<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">&lt;<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="13">MAX_MAP_SIZE<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">ret<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <operator pos:line="6" pos:column="11">(<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></operator><operator pos:line="6" pos:column="18">)<pos:position pos:line="6" pos:column="19"/></operator><call><name pos:line="6" pos:column="19">mmap<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="29">len<pos:position pos:line="6" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="33">PROT_READ<pos:position pos:line="6" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="43">MAP_SHARED<pos:position pos:line="6" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="6" pos:column="54">fd<pos:position pos:line="6" pos:column="56"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="57">0<pos:position pos:line="6" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="60"/></expr_stmt></block></then></if>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="8" pos:column="3">map_fd<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">fd<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">map_size<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">len<pos:position pos:line="9" pos:column="17"/></name></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt> 
  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">ret<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

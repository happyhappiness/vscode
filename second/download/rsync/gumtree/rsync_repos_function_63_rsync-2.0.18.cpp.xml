<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_63_rsync-2.0.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">readfd<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">fd<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buffer<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">N<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type>  <name pos:line="3" pos:column="14">ret<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">total<pos:position pos:line="4" pos:column="18"/></name><init pos:line="4" pos:column="18">=<expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>  
	
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">read_buffer_len<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">&lt;<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="31">N<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">&amp;&amp;<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="36">N<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">&lt;<pos:position pos:line="6" pos:column="42"/></operator> <literal type="number" pos:line="6" pos:column="40">1024<pos:position pos:line="6" pos:column="44"/></literal></expr>)<pos:position pos:line="6" pos:column="45"/></condition><then pos:line="6" pos:column="45"> <block pos:line="6" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">read_check<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">buffer_f_in<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name pos:line="10" pos:column="16">total<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&lt;<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="24">N<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition> <block pos:line="10" pos:column="27">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">read_buffer_len<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&gt;<pos:position pos:line="11" pos:column="41"/></operator> <literal type="number" pos:line="11" pos:column="39">0<pos:position pos:line="11" pos:column="40"/></literal> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <name pos:line="11" pos:column="44">buffer_f_in<pos:position pos:line="11" pos:column="55"/></name> <operator pos:line="11" pos:column="56">==<pos:position pos:line="11" pos:column="58"/></operator> <name pos:line="11" pos:column="59">fd<pos:position pos:line="11" pos:column="61"/></name></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62"> <block pos:line="11" pos:column="63">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">ret<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">=<pos:position pos:line="12" pos:column="30"/></operator> <call><name pos:line="12" pos:column="31">MIN<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">read_buffer_len<pos:position pos:line="12" pos:column="50"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="51">N<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">total<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">memcpy<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">buffer<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">+<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">total<pos:position pos:line="13" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="45">read_buffer_p<pos:position pos:line="13" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="59">ret<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="14" pos:column="25">read_buffer_p<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">+=<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">ret<pos:position pos:line="14" pos:column="45"/></name></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">read_buffer_len<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">-=<pos:position pos:line="15" pos:column="43"/></operator> <name pos:line="15" pos:column="44">ret<pos:position pos:line="15" pos:column="47"/></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="16" pos:column="25">total<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">+=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">ret<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt>
			<continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if> 

		<expr_stmt><expr><call><name pos:line="20" pos:column="17">io_flush<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">()<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>

		<expr_stmt><expr><name pos:line="22" pos:column="17">ret<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">read_unbuffered<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">fd<pos:position pos:line="22" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="42">buffer<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">+<pos:position pos:line="22" pos:column="50"/></operator> <name pos:line="22" pos:column="51">total<pos:position pos:line="22" pos:column="56"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="57">N<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">-<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">total<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name pos:line="23" pos:column="17">total<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">+=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">ret<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

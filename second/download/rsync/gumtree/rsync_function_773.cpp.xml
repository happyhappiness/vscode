<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_773.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">glob_expand_one<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">s<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">argv<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">argc<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">maxargs<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><operator pos:line="3" pos:column="5">!<pos:position pos:line="3" pos:column="6"/></operator><operator pos:line="3" pos:column="6">(<pos:position pos:line="3" pos:column="7"/></operator><call><name pos:line="3" pos:column="7">defined<pos:position pos:line="3" pos:column="14"/></name><argument_list pos:line="3" pos:column="14">(<argument><expr><name pos:line="3" pos:column="15">HAVE_GLOB<pos:position pos:line="3" pos:column="24"/></name></expr></argument>)<pos:position pos:line="3" pos:column="25"/></argument_list></call> <operator pos:line="3" pos:column="26">&amp;&amp;<pos:position pos:line="3" pos:column="36"/></operator> <call><name pos:line="3" pos:column="29">defined<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><name pos:line="3" pos:column="37">HAVE_GLOB_H<pos:position pos:line="3" pos:column="48"/></name></expr></argument>)<pos:position pos:line="3" pos:column="49"/></argument_list></call><operator pos:line="3" pos:column="49">)<pos:position pos:line="3" pos:column="50"/></operator></expr></cpp:if>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><operator pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="18">s<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">=<pos:position pos:line="4" pos:column="21"/></operator> <literal type="string" pos:line="4" pos:column="22">"."<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="5" pos:column="9">s<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <name><name pos:line="5" pos:column="13">argv<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><operator pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">argc<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name> <operator pos:line="5" pos:column="25">=<pos:position pos:line="5" pos:column="26"/></operator> <call><name pos:line="5" pos:column="27">strdup<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">s<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">exclude_server_path<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">s<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><operator pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">argc<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator><operator pos:line="7" pos:column="16">++<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">extern<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">int<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">sanitize_paths<pos:position pos:line="9" pos:column="34"/></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">glob_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">globbuf<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><operator pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">s<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17"> <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="18">s<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <literal type="string" pos:line="13" pos:column="22">"."<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">s<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name><name pos:line="15" pos:column="13">argv<pos:position pos:line="15" pos:column="17"/></name><index pos:line="15" pos:column="17">[<expr><operator pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">argc<pos:position pos:line="15" pos:column="23"/></name></expr>]<pos:position pos:line="15" pos:column="24"/></index></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <call><name pos:line="15" pos:column="27">strdup<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">s<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">sanitize_paths<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28"> <block pos:line="16" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">sanitize_path<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">s<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">NULL<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">memset<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><operator pos:line="20" pos:column="16">&amp;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="17">globbuf<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="29">sizeof <name pos:line="20" pos:column="36">globbuf<pos:position pos:line="20" pos:column="43"/></name></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">exclude_server_path<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">s<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">glob<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">s<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">NULL<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="35">globbuf<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">globbuf<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">gl_pathc<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">==<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">0<pos:position pos:line="23" pos:column="34"/></literal></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35"> <block pos:line="23" pos:column="36">{
		<expr_stmt><expr><operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><operator pos:line="24" pos:column="18">*<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">argc<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">)<pos:position pos:line="24" pos:column="24"/></operator><operator pos:line="24" pos:column="24">++<pos:position pos:line="24" pos:column="26"/></operator></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">globfree<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="27">globbuf<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
		<return pos:line="26" pos:column="17">return;<pos:position pos:line="26" pos:column="24"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">i<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <literal type="number" pos:line="28" pos:column="18">0<pos:position pos:line="28" pos:column="19"/></literal></expr>;<pos:position pos:line="28" pos:column="20"/></init> <condition><expr><name pos:line="28" pos:column="21">i<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="25">maxargs<pos:position pos:line="28" pos:column="32"/></name> <operator pos:line="28" pos:column="33">-<pos:position pos:line="28" pos:column="34"/></operator> <operator pos:line="28" pos:column="35">*<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">argc<pos:position pos:line="28" pos:column="40"/></name> <operator pos:line="28" pos:column="41">&amp;&amp;<pos:position pos:line="28" pos:column="51"/></operator> <name pos:line="28" pos:column="44">i<pos:position pos:line="28" pos:column="45"/></name> <operator pos:line="28" pos:column="46">&lt;<pos:position pos:line="28" pos:column="50"/></operator> <operator pos:line="28" pos:column="48">(<pos:position pos:line="28" pos:column="49"/></operator><name pos:line="28" pos:column="49">int<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">)<pos:position pos:line="28" pos:column="53"/></operator><name><name pos:line="28" pos:column="53">globbuf<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">.<pos:position pos:line="28" pos:column="61"/></operator><name pos:line="28" pos:column="61">gl_pathc<pos:position pos:line="28" pos:column="69"/></name></name></expr>;<pos:position pos:line="28" pos:column="70"/></condition> <incr><expr><name pos:line="28" pos:column="71">i<pos:position pos:line="28" pos:column="72"/></name><operator pos:line="28" pos:column="72">++<pos:position pos:line="28" pos:column="74"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="75"/></control> <block pos:line="28" pos:column="76">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">==<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">free<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">s<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">argv<pos:position pos:line="31" pos:column="21"/></name><index pos:line="31" pos:column="21">[<expr><operator pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="23">argc<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">+<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">i<pos:position pos:line="31" pos:column="31"/></name></expr>]<pos:position pos:line="31" pos:column="32"/></index></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <call><name pos:line="31" pos:column="35">strdup<pos:position pos:line="31" pos:column="41"/></name><argument_list pos:line="31" pos:column="41">(<argument><expr><name><name pos:line="31" pos:column="42">globbuf<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">.<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">gl_pathv<pos:position pos:line="31" pos:column="58"/></name><index pos:line="31" pos:column="58">[<expr><name pos:line="31" pos:column="59">i<pos:position pos:line="31" pos:column="60"/></name></expr>]<pos:position pos:line="31" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><name><name pos:line="32" pos:column="22">argv<pos:position pos:line="32" pos:column="26"/></name><index pos:line="32" pos:column="26">[<expr><operator pos:line="32" pos:column="27">*<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">argc<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">+<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">i<pos:position pos:line="32" pos:column="36"/></name></expr>]<pos:position pos:line="32" pos:column="37"/></index></name></expr>)<pos:position pos:line="32" pos:column="38"/></condition><then pos:line="32" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="25">out_of_memory<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><literal type="string" pos:line="33" pos:column="39">"glob_expand"<pos:position pos:line="33" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="54"/></expr_stmt></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">globfree<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">globbuf<pos:position pos:line="35" pos:column="26"/></name></expr></argument>)<pos:position pos:line="35" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">argc<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">+=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">i<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

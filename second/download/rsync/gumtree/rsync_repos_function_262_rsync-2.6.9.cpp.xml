<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_262_rsync-2.6.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">push_dir<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">dir<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">set_path_only<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">initialised<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">len<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">initialised<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26"> <block pos:line="6" pos:column="27">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">initialised<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">=<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="31">1<pos:position pos:line="7" pos:column="32"/></literal></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">getcwd<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">curr_dir<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="34">sizeof <name pos:line="8" pos:column="41">curr_dir<pos:position pos:line="8" pos:column="49"/></name></sizeof> <operator pos:line="8" pos:column="50">-<pos:position pos:line="8" pos:column="51"/></operator> <literal type="number" pos:line="8" pos:column="52">1<pos:position pos:line="8" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="9" pos:column="17">curr_dir_len<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">=<pos:position pos:line="9" pos:column="31"/></operator> <call><name pos:line="9" pos:column="32">strlen<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">curr_dir<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">dir<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">	<comment type="block" pos:line="12" pos:column="25">/* this call was probably just to initialize */</comment>
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">strlen<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">dir<pos:position pos:line="15" pos:column="25"/></name></expr></argument>)<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">1<pos:position pos:line="16" pos:column="21"/></literal> <operator pos:line="16" pos:column="22">&amp;&amp;<pos:position pos:line="16" pos:column="32"/></operator> <operator pos:line="16" pos:column="25">*<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">dir<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">==<pos:position pos:line="16" pos:column="32"/></operator> <literal type="char" pos:line="16" pos:column="33">'.'<pos:position pos:line="16" pos:column="36"/></literal></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">1<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><ternary><condition><expr><operator pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">dir<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <literal type="char" pos:line="19" pos:column="22">'/'<pos:position pos:line="19" pos:column="25"/></literal></expr> ?<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <expr><name pos:line="19" pos:column="28">len<pos:position pos:line="19" pos:column="31"/></name></expr> <pos:position pos:line="19" pos:column="32"/></then><else pos:line="19" pos:column="32">: <expr><name pos:line="19" pos:column="34">curr_dir_len<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">+<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">1<pos:position pos:line="19" pos:column="50"/></literal> <operator pos:line="19" pos:column="51">+<pos:position pos:line="19" pos:column="52"/></operator> <name pos:line="19" pos:column="53">len<pos:position pos:line="19" pos:column="56"/></name></expr></else></ternary><operator pos:line="19" pos:column="56">)<pos:position pos:line="19" pos:column="57"/></operator> <operator pos:line="19" pos:column="58">&gt;=<pos:position pos:line="19" pos:column="63"/></operator> <sizeof pos:line="19" pos:column="61">sizeof <name pos:line="19" pos:column="68">curr_dir<pos:position pos:line="19" pos:column="76"/></name></sizeof></expr>)<pos:position pos:line="19" pos:column="77"/></condition><then pos:line="19" pos:column="77">
		<block type="pseudo"><return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return></block></then></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">set_path_only<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">&amp;&amp;<pos:position pos:line="22" pos:column="38"/></operator> <call><name pos:line="22" pos:column="31">chdir<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">dir<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">*<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">dir<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <literal type="char" pos:line="25" pos:column="21">'/'<pos:position pos:line="25" pos:column="24"/></literal></expr>)<pos:position pos:line="25" pos:column="25"/></condition><then pos:line="25" pos:column="25"> <block pos:line="25" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">memcpy<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">curr_dir<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">dir<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">len<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">+<pos:position pos:line="26" pos:column="44"/></operator> <literal type="number" pos:line="26" pos:column="45">1<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">curr_dir_len<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">len<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">curr_dir<pos:position pos:line="29" pos:column="25"/></name><index pos:line="29" pos:column="25">[<expr><name pos:line="29" pos:column="26">curr_dir_len<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">++<pos:position pos:line="29" pos:column="40"/></operator></expr>]<pos:position pos:line="29" pos:column="41"/></index></name> <operator pos:line="29" pos:column="42">=<pos:position pos:line="29" pos:column="43"/></operator> <literal type="char" pos:line="29" pos:column="44">'/'<pos:position pos:line="29" pos:column="47"/></literal></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">memcpy<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">curr_dir<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">+<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">curr_dir_len<pos:position pos:line="30" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">dir<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">len<pos:position pos:line="30" pos:column="57"/></name> <operator pos:line="30" pos:column="58">+<pos:position pos:line="30" pos:column="59"/></operator> <literal type="number" pos:line="30" pos:column="60">1<pos:position pos:line="30" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">curr_dir_len<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">+=<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">len<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="34" pos:column="9">curr_dir_len<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <call><name pos:line="34" pos:column="24">clean_fname<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">curr_dir<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="46">1<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">sanitize_paths<pos:position pos:line="35" pos:column="27"/></name></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28"> <block pos:line="35" pos:column="29">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">module_dirlen<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">&gt;<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="37">curr_dir_len<pos:position pos:line="36" pos:column="49"/></name></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">module_dirlen<pos:position pos:line="37" pos:column="38"/></name> <operator pos:line="37" pos:column="39">=<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">curr_dir_len<pos:position pos:line="37" pos:column="53"/></name></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">curr_dir_depth<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <call><name pos:line="38" pos:column="34">count_dir_elements<pos:position pos:line="38" pos:column="52"/></name><argument_list pos:line="38" pos:column="52">(<argument><expr><name pos:line="38" pos:column="53">curr_dir<pos:position pos:line="38" pos:column="61"/></name> <operator pos:line="38" pos:column="62">+<pos:position pos:line="38" pos:column="63"/></operator> <name pos:line="38" pos:column="64">module_dirlen<pos:position pos:line="38" pos:column="77"/></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<return pos:line="41" pos:column="9">return <expr><literal type="number" pos:line="41" pos:column="16">1<pos:position pos:line="41" pos:column="17"/></literal></expr>;<pos:position pos:line="41" pos:column="18"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

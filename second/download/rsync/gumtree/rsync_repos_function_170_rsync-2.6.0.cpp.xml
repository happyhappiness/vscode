<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_170_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">generate_and_send_sums<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">struct<pos:position pos:line="1" pos:column="42"/></name> <name pos:line="1" pos:column="43">map_struct<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">buf<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">OFF_T<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="71">int<pos:position pos:line="1" pos:column="74"/></name></type> <name pos:line="1" pos:column="75">f_out<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">i<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">sum_struct<pos:position pos:line="4" pos:column="26"/></name></name></type> <name pos:line="4" pos:column="27">sum<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">OFF_T<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">offset<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="7" pos:column="9">sum_sizes_sqroot<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><operator pos:line="7" pos:column="26">&amp;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="27">sum<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">len<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">write_sum_head<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">f_out<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="31">&amp;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="32">sum<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">sum<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">count<pos:position pos:line="11" pos:column="34"/></name></name></expr>;<pos:position pos:line="11" pos:column="35"/></condition> <incr><expr><name pos:line="11" pos:column="36">i<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">++<pos:position pos:line="11" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="40"/></control> <block pos:line="11" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">n1<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><call><name pos:line="12" pos:column="26">MIN<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">len<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="35">sum<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">.<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">blength<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="48"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">map<pos:position pos:line="13" pos:column="26"/></name> <init pos:line="13" pos:column="27">= <expr><call><name pos:line="13" pos:column="29">map_ptr<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">buf<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">offset<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">n1<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">uint32<pos:position pos:line="14" pos:column="23"/></name></type> <name pos:line="14" pos:column="24">sum1<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><call><name pos:line="14" pos:column="31">get_checksum1<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">map<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">n1<pos:position pos:line="14" pos:column="52"/></name></expr></argument>)<pos:position pos:line="14" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="54"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="15" pos:column="17">char<pos:position pos:line="15" pos:column="21"/></name></type> <name><name pos:line="15" pos:column="22">sum2<pos:position pos:line="15" pos:column="26"/></name><index pos:line="15" pos:column="26">[<expr><name pos:line="15" pos:column="27">SUM_LENGTH<pos:position pos:line="15" pos:column="37"/></name></expr>]<pos:position pos:line="15" pos:column="38"/></index></name></decl>;<pos:position pos:line="15" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="17" pos:column="17">get_checksum2<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">map<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">n1<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">sum2<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>

		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">verbose<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">&gt;<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="31">3<pos:position pos:line="19" pos:column="32"/></literal></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">rprintf<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">FINFO<pos:position pos:line="20" pos:column="38"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="21" pos:column="33">"chunk[%ld] offset=%.0f len=%d sum1=%08lx\n"<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>,
				<argument><expr><operator pos:line="22" pos:column="33">(<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">long<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">i<pos:position pos:line="22" pos:column="40"/></name></expr></argument>,<argument><expr><operator pos:line="22" pos:column="41">(<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">double<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">offset<pos:position pos:line="22" pos:column="55"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="56">n1<pos:position pos:line="22" pos:column="58"/></name></expr></argument>,<argument><expr><operator pos:line="22" pos:column="59">(<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="60">unsigned<pos:position pos:line="22" pos:column="68"/></name> <name pos:line="22" pos:column="69">long<pos:position pos:line="22" pos:column="73"/></name><operator pos:line="22" pos:column="73">)<pos:position pos:line="22" pos:column="74"/></operator><name pos:line="22" pos:column="74">sum1<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">write_int<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">f_out<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="34">sum1<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">write_buf<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">f_out<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">sum2<pos:position pos:line="25" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="40">sum<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">.<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">s2length<pos:position pos:line="25" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">len<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">-=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">n1<pos:position pos:line="26" pos:column="26"/></name></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">offset<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">+=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">n1<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

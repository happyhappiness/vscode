<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_102_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">client_addr<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">fd<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">sockaddr_storage<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">ss<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">socklen_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">length<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><sizeof pos:line="4" pos:column="28">sizeof <name pos:line="4" pos:column="35">ss<pos:position pos:line="4" pos:column="37"/></name></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">char<pos:position pos:line="5" pos:column="20"/></name></type> <name><name pos:line="5" pos:column="21">addr_buf<pos:position pos:line="5" pos:column="29"/></name><index pos:line="5" pos:column="29">[<expr><literal type="number" pos:line="5" pos:column="30">100<pos:position pos:line="5" pos:column="33"/></literal></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">initialised<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">initialised<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block type="pseudo"><return pos:line="8" pos:column="26">return <expr><name pos:line="8" pos:column="33">addr_buf<pos:position pos:line="8" pos:column="41"/></name></expr>;<pos:position pos:line="8" pos:column="42"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">initialised<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">1<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">client_sockaddr<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">fd<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="29">&amp;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="30">ss<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="34">&amp;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="35">length<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">getnameinfo<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator>struct <name pos:line="14" pos:column="29">sockaddr<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></operator><operator pos:line="14" pos:column="39">)<pos:position pos:line="14" pos:column="40"/></operator><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="41">ss<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">length<pos:position pos:line="14" pos:column="51"/></name></expr></argument>,
		    <argument><expr><name pos:line="15" pos:column="21">addr_buf<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="31">sizeof<argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">addr_buf<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">NULL<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="55">0<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">NI_NUMERICHOST<pos:position pos:line="15" pos:column="72"/></name></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="74"/></expr_stmt>
	
	<return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">addr_buf<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_102_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">chmod_mode_struct<pos:position pos:line="1" pos:column="25"/></name></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">parse_chmod<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">modestr<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
				      <parameter><decl><type><name><name pos:line="2" pos:column="39">struct<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">chmod_mode_struct<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier><modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">root_mode_ptr<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">state<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">STATE_1ST_HALF<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">where<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">what<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="34">op<pos:position pos:line="5" pos:column="36"/></name> <init pos:line="5" pos:column="37">= <expr><literal type="number" pos:line="5" pos:column="39">0<pos:position pos:line="5" pos:column="40"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="42">topbits<pos:position pos:line="5" pos:column="49"/></name> <init pos:line="5" pos:column="50">= <expr><literal type="number" pos:line="5" pos:column="52">0<pos:position pos:line="5" pos:column="53"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="55">topoct<pos:position pos:line="5" pos:column="61"/></name> <init pos:line="5" pos:column="62">= <expr><literal type="number" pos:line="5" pos:column="64">0<pos:position pos:line="5" pos:column="65"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="67">flags<pos:position pos:line="5" pos:column="72"/></name> <init pos:line="5" pos:column="73">= <expr><literal type="number" pos:line="5" pos:column="75">0<pos:position pos:line="5" pos:column="76"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="77"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">chmod_mode_struct<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">first_mode<pos:position pos:line="6" pos:column="45"/></name> <init pos:line="6" pos:column="46">= <expr><name pos:line="6" pos:column="48">NULL<pos:position pos:line="6" pos:column="52"/></name></expr></init></decl>, <modifier pos:line="6" pos:column="54">*<pos:position pos:line="6" pos:column="55"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="55">curr_mode<pos:position pos:line="6" pos:column="64"/></name> <init pos:line="6" pos:column="65">= <expr><name pos:line="6" pos:column="67">NULL<pos:position pos:line="6" pos:column="71"/></name></expr></init></decl>,
				 <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="35">prev_mode<pos:position pos:line="7" pos:column="44"/></name> <init pos:line="7" pos:column="45">= <expr><name pos:line="7" pos:column="47">NULL<pos:position pos:line="7" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>

	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">state<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">!=<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">STATE_ERROR<pos:position pos:line="9" pos:column="36"/></name></expr>)<pos:position pos:line="9" pos:column="37"/></condition> <block pos:line="9" pos:column="38">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">*<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">modestr<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">||<pos:position pos:line="10" pos:column="33"/></operator> <operator pos:line="10" pos:column="34">*<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">modestr<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator> <literal type="char" pos:line="10" pos:column="46">','<pos:position pos:line="10" pos:column="49"/></literal></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <block pos:line="10" pos:column="51">{
			<decl_stmt><decl><type><name pos:line="11" pos:column="25">int<pos:position pos:line="11" pos:column="28"/></name></type> <name pos:line="11" pos:column="29">bits<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">op<pos:position pos:line="13" pos:column="32"/></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33"> <block pos:line="13" pos:column="34">{
				<expr_stmt><expr><name pos:line="14" pos:column="33">state<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">STATE_ERROR<pos:position pos:line="14" pos:column="52"/></name></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt>
				<break pos:line="15" pos:column="33">break;<pos:position pos:line="15" pos:column="39"/></break>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="17" pos:column="25">prev_mode<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">curr_mode<pos:position pos:line="17" pos:column="46"/></name></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">curr_mode<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <call><name pos:line="18" pos:column="37">new_array<pos:position pos:line="18" pos:column="46"/></name><argument_list pos:line="18" pos:column="46">(<argument><expr pos:line="18" pos:column="47">struct <name pos:line="18" pos:column="54">chmod_mode_struct<pos:position pos:line="18" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="73">1<pos:position pos:line="18" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="76"/></expr_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">prev_mode<pos:position pos:line="19" pos:column="38"/></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="33">prev_mode<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">next<pos:position pos:line="20" pos:column="48"/></name></name> <operator pos:line="20" pos:column="49">=<pos:position pos:line="20" pos:column="50"/></operator> <name pos:line="20" pos:column="51">curr_mode<pos:position pos:line="20" pos:column="60"/></name></expr>;<pos:position pos:line="20" pos:column="61"/></expr_stmt></block></then>
			<else pos:line="21" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="33">first_mode<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">=<pos:position pos:line="22" pos:column="45"/></operator> <name pos:line="22" pos:column="46">curr_mode<pos:position pos:line="22" pos:column="55"/></name></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name><name pos:line="23" pos:column="25">curr_mode<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">next<pos:position pos:line="23" pos:column="40"/></name></name> <operator pos:line="23" pos:column="41">=<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">NULL<pos:position pos:line="23" pos:column="47"/></name></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>

			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">where<pos:position pos:line="25" pos:column="34"/></name></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="33">bits<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="40">where<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">*<pos:position pos:line="26" pos:column="47"/></operator> <name pos:line="26" pos:column="48">what<pos:position pos:line="26" pos:column="52"/></name></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt></block></then>
			<else pos:line="27" pos:column="25">else <block pos:line="27" pos:column="30">{
				<expr_stmt><expr><name pos:line="28" pos:column="33">where<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <literal type="number" pos:line="28" pos:column="41">0111<pos:position pos:line="28" pos:column="45"/></literal></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="29" pos:column="33">bits<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">=<pos:position pos:line="29" pos:column="39"/></operator> <operator pos:line="29" pos:column="40">(<pos:position pos:line="29" pos:column="41"/></operator><name pos:line="29" pos:column="41">where<pos:position pos:line="29" pos:column="46"/></name> <operator pos:line="29" pos:column="47">*<pos:position pos:line="29" pos:column="48"/></operator> <name pos:line="29" pos:column="49">what<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">)<pos:position pos:line="29" pos:column="54"/></operator> <operator pos:line="29" pos:column="55">&amp;<pos:position pos:line="29" pos:column="60"/></operator> <operator pos:line="29" pos:column="57">~<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="58">orig_umask<pos:position pos:line="29" pos:column="68"/></name></expr>;<pos:position pos:line="29" pos:column="69"/></expr_stmt>
			}<pos:position pos:line="30" pos:column="26"/></block></else></if>

			<switch pos:line="32" pos:column="25">switch <condition pos:line="32" pos:column="32">(<expr><name pos:line="32" pos:column="33">op<pos:position pos:line="32" pos:column="35"/></name></expr>)<pos:position pos:line="32" pos:column="36"/></condition> <block pos:line="32" pos:column="37">{
			<case pos:line="33" pos:column="25">case <expr><name pos:line="33" pos:column="30">CHMOD_ADD<pos:position pos:line="33" pos:column="39"/></name></expr>:<pos:position pos:line="33" pos:column="40"/></case>
				<expr_stmt><expr><name><name pos:line="34" pos:column="33">curr_mode<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">-&gt;<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="44">ModeAND<pos:position pos:line="34" pos:column="51"/></name></name> <operator pos:line="34" pos:column="52">=<pos:position pos:line="34" pos:column="53"/></operator> <name pos:line="34" pos:column="54">CHMOD_BITS<pos:position pos:line="34" pos:column="64"/></name></expr>;<pos:position pos:line="34" pos:column="65"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="35" pos:column="33">curr_mode<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">-&gt;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="44">ModeOR<pos:position pos:line="35" pos:column="50"/></name></name>  <operator pos:line="35" pos:column="52">=<pos:position pos:line="35" pos:column="53"/></operator> <name pos:line="35" pos:column="54">bits<pos:position pos:line="35" pos:column="58"/></name> <operator pos:line="35" pos:column="59">+<pos:position pos:line="35" pos:column="60"/></operator> <name pos:line="35" pos:column="61">topoct<pos:position pos:line="35" pos:column="67"/></name></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
				<break pos:line="36" pos:column="33">break;<pos:position pos:line="36" pos:column="39"/></break>
			<case pos:line="37" pos:column="25">case <expr><name pos:line="37" pos:column="30">CHMOD_SUB<pos:position pos:line="37" pos:column="39"/></name></expr>:<pos:position pos:line="37" pos:column="40"/></case>
				<expr_stmt><expr><name><name pos:line="38" pos:column="33">curr_mode<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">ModeAND<pos:position pos:line="38" pos:column="51"/></name></name> <operator pos:line="38" pos:column="52">=<pos:position pos:line="38" pos:column="53"/></operator> <name pos:line="38" pos:column="54">CHMOD_BITS<pos:position pos:line="38" pos:column="64"/></name> <operator pos:line="38" pos:column="65">-<pos:position pos:line="38" pos:column="66"/></operator> <name pos:line="38" pos:column="67">bits<pos:position pos:line="38" pos:column="71"/></name> <operator pos:line="38" pos:column="72">-<pos:position pos:line="38" pos:column="73"/></operator> <name pos:line="38" pos:column="74">topoct<pos:position pos:line="38" pos:column="80"/></name></expr>;<pos:position pos:line="38" pos:column="81"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="39" pos:column="33">curr_mode<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">-&gt;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="44">ModeOR<pos:position pos:line="39" pos:column="50"/></name></name>  <operator pos:line="39" pos:column="52">=<pos:position pos:line="39" pos:column="53"/></operator> <literal type="number" pos:line="39" pos:column="54">0<pos:position pos:line="39" pos:column="55"/></literal></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
				<break pos:line="40" pos:column="33">break;<pos:position pos:line="40" pos:column="39"/></break>
			<case pos:line="41" pos:column="25">case <expr><name pos:line="41" pos:column="30">CHMOD_EQ<pos:position pos:line="41" pos:column="38"/></name></expr>:<pos:position pos:line="41" pos:column="39"/></case>
				<expr_stmt><expr><name><name pos:line="42" pos:column="33">curr_mode<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">ModeAND<pos:position pos:line="42" pos:column="51"/></name></name> <operator pos:line="42" pos:column="52">=<pos:position pos:line="42" pos:column="53"/></operator> <name pos:line="42" pos:column="54">CHMOD_BITS<pos:position pos:line="42" pos:column="64"/></name> <operator pos:line="42" pos:column="65">-<pos:position pos:line="42" pos:column="66"/></operator> <operator pos:line="42" pos:column="67">(<pos:position pos:line="42" pos:column="68"/></operator><name pos:line="42" pos:column="68">where<pos:position pos:line="42" pos:column="73"/></name> <operator pos:line="42" pos:column="74">*<pos:position pos:line="42" pos:column="75"/></operator> <literal type="number" pos:line="42" pos:column="76">7<pos:position pos:line="42" pos:column="77"/></literal><operator pos:line="42" pos:column="77">)<pos:position pos:line="42" pos:column="78"/></operator> <operator pos:line="42" pos:column="79">-<pos:position pos:line="42" pos:column="80"/></operator> <operator pos:line="42" pos:column="81">(<pos:position pos:line="42" pos:column="82"/></operator><ternary><condition><expr><name pos:line="42" pos:column="82">topoct<pos:position pos:line="42" pos:column="88"/></name></expr> ?<pos:position pos:line="42" pos:column="90"/></condition><then pos:line="42" pos:column="90"> <expr><name pos:line="42" pos:column="91">topbits<pos:position pos:line="42" pos:column="98"/></name></expr> <pos:position pos:line="42" pos:column="99"/></then><else pos:line="42" pos:column="99">: <expr><literal type="number" pos:line="42" pos:column="101">0<pos:position pos:line="42" pos:column="102"/></literal></expr></else></ternary><operator pos:line="42" pos:column="102">)<pos:position pos:line="42" pos:column="103"/></operator></expr>;<pos:position pos:line="42" pos:column="104"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="43" pos:column="33">curr_mode<pos:position pos:line="43" pos:column="42"/></name><operator pos:line="43" pos:column="42">-&gt;<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="44">ModeOR<pos:position pos:line="43" pos:column="50"/></name></name>  <operator pos:line="43" pos:column="52">=<pos:position pos:line="43" pos:column="53"/></operator> <name pos:line="43" pos:column="54">bits<pos:position pos:line="43" pos:column="58"/></name> <operator pos:line="43" pos:column="59">+<pos:position pos:line="43" pos:column="60"/></operator> <name pos:line="43" pos:column="61">topoct<pos:position pos:line="43" pos:column="67"/></name></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>
				<break pos:line="44" pos:column="33">break;<pos:position pos:line="44" pos:column="39"/></break>
			<case pos:line="45" pos:column="25">case <expr><name pos:line="45" pos:column="30">CHMOD_SET<pos:position pos:line="45" pos:column="39"/></name></expr>:<pos:position pos:line="45" pos:column="40"/></case>
				<expr_stmt><expr><name><name pos:line="46" pos:column="33">curr_mode<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">-&gt;<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="44">ModeAND<pos:position pos:line="46" pos:column="51"/></name></name> <operator pos:line="46" pos:column="52">=<pos:position pos:line="46" pos:column="53"/></operator> <literal type="number" pos:line="46" pos:column="54">0<pos:position pos:line="46" pos:column="55"/></literal></expr>;<pos:position pos:line="46" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="47" pos:column="33">curr_mode<pos:position pos:line="47" pos:column="42"/></name><operator pos:line="47" pos:column="42">-&gt;<pos:position pos:line="47" pos:column="47"/></operator><name pos:line="47" pos:column="44">ModeOR<pos:position pos:line="47" pos:column="50"/></name></name>  <operator pos:line="47" pos:column="52">=<pos:position pos:line="47" pos:column="53"/></operator> <name pos:line="47" pos:column="54">bits<pos:position pos:line="47" pos:column="58"/></name></expr>;<pos:position pos:line="47" pos:column="59"/></expr_stmt>
				<break pos:line="48" pos:column="33">break;<pos:position pos:line="48" pos:column="39"/></break>
			}<pos:position pos:line="49" pos:column="26"/></block></switch>

			<expr_stmt><expr><name><name pos:line="51" pos:column="25">curr_mode<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">flags<pos:position pos:line="51" pos:column="41"/></name></name> <operator pos:line="51" pos:column="42">=<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="44">flags<pos:position pos:line="51" pos:column="49"/></name></expr>;<pos:position pos:line="51" pos:column="50"/></expr_stmt>

			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">!<pos:position pos:line="53" pos:column="30"/></operator><operator pos:line="53" pos:column="30">*<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">modestr<pos:position pos:line="53" pos:column="38"/></name></expr>)<pos:position pos:line="53" pos:column="39"/></condition><then pos:line="53" pos:column="39">
				<block type="pseudo"><break pos:line="54" pos:column="33">break;<pos:position pos:line="54" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="55" pos:column="25">modestr<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">++<pos:position pos:line="55" pos:column="34"/></operator></expr>;<pos:position pos:line="55" pos:column="35"/></expr_stmt>

			<expr_stmt><expr><name pos:line="57" pos:column="25">state<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">=<pos:position pos:line="57" pos:column="32"/></operator> <name pos:line="57" pos:column="33">STATE_1ST_HALF<pos:position pos:line="57" pos:column="47"/></name></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="58" pos:column="25">where<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <name pos:line="58" pos:column="33">what<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">=<pos:position pos:line="58" pos:column="39"/></operator> <name pos:line="58" pos:column="40">op<pos:position pos:line="58" pos:column="42"/></name> <operator pos:line="58" pos:column="43">=<pos:position pos:line="58" pos:column="44"/></operator> <name pos:line="58" pos:column="45">topoct<pos:position pos:line="58" pos:column="51"/></name> <operator pos:line="58" pos:column="52">=<pos:position pos:line="58" pos:column="53"/></operator> <name pos:line="58" pos:column="54">topbits<pos:position pos:line="58" pos:column="61"/></name> <operator pos:line="58" pos:column="62">=<pos:position pos:line="58" pos:column="63"/></operator> <name pos:line="58" pos:column="64">flags<pos:position pos:line="58" pos:column="69"/></name> <operator pos:line="58" pos:column="70">=<pos:position pos:line="58" pos:column="71"/></operator> <literal type="number" pos:line="58" pos:column="72">0<pos:position pos:line="58" pos:column="73"/></literal></expr>;<pos:position pos:line="58" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if>

		<switch pos:line="61" pos:column="17">switch <condition pos:line="61" pos:column="24">(<expr><name pos:line="61" pos:column="25">state<pos:position pos:line="61" pos:column="30"/></name></expr>)<pos:position pos:line="61" pos:column="31"/></condition> <block pos:line="61" pos:column="32">{
		<case pos:line="62" pos:column="17">case <expr><name pos:line="62" pos:column="22">STATE_1ST_HALF<pos:position pos:line="62" pos:column="36"/></name></expr>:<pos:position pos:line="62" pos:column="37"/></case>
			<switch pos:line="63" pos:column="25">switch <condition pos:line="63" pos:column="32">(<expr><operator pos:line="63" pos:column="33">*<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="34">modestr<pos:position pos:line="63" pos:column="41"/></name></expr>)<pos:position pos:line="63" pos:column="42"/></condition> <block pos:line="63" pos:column="43">{
			<case pos:line="64" pos:column="25">case <expr><literal type="char" pos:line="64" pos:column="30">'D'<pos:position pos:line="64" pos:column="33"/></literal></expr>:<pos:position pos:line="64" pos:column="34"/></case>
				<if pos:line="65" pos:column="33">if <condition pos:line="65" pos:column="36">(<expr><name pos:line="65" pos:column="37">flags<pos:position pos:line="65" pos:column="42"/></name> <operator pos:line="65" pos:column="43">&amp;<pos:position pos:line="65" pos:column="48"/></operator> <name pos:line="65" pos:column="45">FLAG_FILES_ONLY<pos:position pos:line="65" pos:column="60"/></name></expr>)<pos:position pos:line="65" pos:column="61"/></condition><then pos:line="65" pos:column="61">
					<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="41">state<pos:position pos:line="66" pos:column="46"/></name> <operator pos:line="66" pos:column="47">=<pos:position pos:line="66" pos:column="48"/></operator> <name pos:line="66" pos:column="49">STATE_ERROR<pos:position pos:line="66" pos:column="60"/></name></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="67" pos:column="33">flags<pos:position pos:line="67" pos:column="38"/></name> <operator pos:line="67" pos:column="39">|=<pos:position pos:line="67" pos:column="41"/></operator> <name pos:line="67" pos:column="42">FLAG_DIRS_ONLY<pos:position pos:line="67" pos:column="56"/></name></expr>;<pos:position pos:line="67" pos:column="57"/></expr_stmt>
				<break pos:line="68" pos:column="33">break;<pos:position pos:line="68" pos:column="39"/></break>
			<case pos:line="69" pos:column="25">case <expr><literal type="char" pos:line="69" pos:column="30">'F'<pos:position pos:line="69" pos:column="33"/></literal></expr>:<pos:position pos:line="69" pos:column="34"/></case>
				<if pos:line="70" pos:column="33">if <condition pos:line="70" pos:column="36">(<expr><name pos:line="70" pos:column="37">flags<pos:position pos:line="70" pos:column="42"/></name> <operator pos:line="70" pos:column="43">&amp;<pos:position pos:line="70" pos:column="48"/></operator> <name pos:line="70" pos:column="45">FLAG_DIRS_ONLY<pos:position pos:line="70" pos:column="59"/></name></expr>)<pos:position pos:line="70" pos:column="60"/></condition><then pos:line="70" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="41">state<pos:position pos:line="71" pos:column="46"/></name> <operator pos:line="71" pos:column="47">=<pos:position pos:line="71" pos:column="48"/></operator> <name pos:line="71" pos:column="49">STATE_ERROR<pos:position pos:line="71" pos:column="60"/></name></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="72" pos:column="33">flags<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">|=<pos:position pos:line="72" pos:column="41"/></operator> <name pos:line="72" pos:column="42">FLAG_FILES_ONLY<pos:position pos:line="72" pos:column="57"/></name></expr>;<pos:position pos:line="72" pos:column="58"/></expr_stmt>
				<break pos:line="73" pos:column="33">break;<pos:position pos:line="73" pos:column="39"/></break>
			<case pos:line="74" pos:column="25">case <expr><literal type="char" pos:line="74" pos:column="30">'u'<pos:position pos:line="74" pos:column="33"/></literal></expr>:<pos:position pos:line="74" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="75" pos:column="33">where<pos:position pos:line="75" pos:column="38"/></name> <operator pos:line="75" pos:column="39">|=<pos:position pos:line="75" pos:column="41"/></operator> <literal type="number" pos:line="75" pos:column="42">0100<pos:position pos:line="75" pos:column="46"/></literal></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="76" pos:column="33">topbits<pos:position pos:line="76" pos:column="40"/></name> <operator pos:line="76" pos:column="41">|=<pos:position pos:line="76" pos:column="43"/></operator> <literal type="number" pos:line="76" pos:column="44">04000<pos:position pos:line="76" pos:column="49"/></literal></expr>;<pos:position pos:line="76" pos:column="50"/></expr_stmt>
				<break pos:line="77" pos:column="33">break;<pos:position pos:line="77" pos:column="39"/></break>
			<case pos:line="78" pos:column="25">case <expr><literal type="char" pos:line="78" pos:column="30">'g'<pos:position pos:line="78" pos:column="33"/></literal></expr>:<pos:position pos:line="78" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="79" pos:column="33">where<pos:position pos:line="79" pos:column="38"/></name> <operator pos:line="79" pos:column="39">|=<pos:position pos:line="79" pos:column="41"/></operator> <literal type="number" pos:line="79" pos:column="42">0010<pos:position pos:line="79" pos:column="46"/></literal></expr>;<pos:position pos:line="79" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="80" pos:column="33">topbits<pos:position pos:line="80" pos:column="40"/></name> <operator pos:line="80" pos:column="41">|=<pos:position pos:line="80" pos:column="43"/></operator> <literal type="number" pos:line="80" pos:column="44">02000<pos:position pos:line="80" pos:column="49"/></literal></expr>;<pos:position pos:line="80" pos:column="50"/></expr_stmt>
				<break pos:line="81" pos:column="33">break;<pos:position pos:line="81" pos:column="39"/></break>
			<case pos:line="82" pos:column="25">case <expr><literal type="char" pos:line="82" pos:column="30">'o'<pos:position pos:line="82" pos:column="33"/></literal></expr>:<pos:position pos:line="82" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="83" pos:column="33">where<pos:position pos:line="83" pos:column="38"/></name> <operator pos:line="83" pos:column="39">|=<pos:position pos:line="83" pos:column="41"/></operator> <literal type="number" pos:line="83" pos:column="42">0001<pos:position pos:line="83" pos:column="46"/></literal></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
				<break pos:line="84" pos:column="33">break;<pos:position pos:line="84" pos:column="39"/></break>
			<case pos:line="85" pos:column="25">case <expr><literal type="char" pos:line="85" pos:column="30">'a'<pos:position pos:line="85" pos:column="33"/></literal></expr>:<pos:position pos:line="85" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="86" pos:column="33">where<pos:position pos:line="86" pos:column="38"/></name> <operator pos:line="86" pos:column="39">|=<pos:position pos:line="86" pos:column="41"/></operator> <literal type="number" pos:line="86" pos:column="42">0111<pos:position pos:line="86" pos:column="46"/></literal></expr>;<pos:position pos:line="86" pos:column="47"/></expr_stmt>
				<break pos:line="87" pos:column="33">break;<pos:position pos:line="87" pos:column="39"/></break>
			<case pos:line="88" pos:column="25">case <expr><literal type="char" pos:line="88" pos:column="30">'+'<pos:position pos:line="88" pos:column="33"/></literal></expr>:<pos:position pos:line="88" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="89" pos:column="33">op<pos:position pos:line="89" pos:column="35"/></name> <operator pos:line="89" pos:column="36">=<pos:position pos:line="89" pos:column="37"/></operator> <name pos:line="89" pos:column="38">CHMOD_ADD<pos:position pos:line="89" pos:column="47"/></name></expr>;<pos:position pos:line="89" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="90" pos:column="33">state<pos:position pos:line="90" pos:column="38"/></name> <operator pos:line="90" pos:column="39">=<pos:position pos:line="90" pos:column="40"/></operator> <name pos:line="90" pos:column="41">STATE_2ND_HALF<pos:position pos:line="90" pos:column="55"/></name></expr>;<pos:position pos:line="90" pos:column="56"/></expr_stmt>
				<break pos:line="91" pos:column="33">break;<pos:position pos:line="91" pos:column="39"/></break>
			<case pos:line="92" pos:column="25">case <expr><literal type="char" pos:line="92" pos:column="30">'-'<pos:position pos:line="92" pos:column="33"/></literal></expr>:<pos:position pos:line="92" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="93" pos:column="33">op<pos:position pos:line="93" pos:column="35"/></name> <operator pos:line="93" pos:column="36">=<pos:position pos:line="93" pos:column="37"/></operator> <name pos:line="93" pos:column="38">CHMOD_SUB<pos:position pos:line="93" pos:column="47"/></name></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="94" pos:column="33">state<pos:position pos:line="94" pos:column="38"/></name> <operator pos:line="94" pos:column="39">=<pos:position pos:line="94" pos:column="40"/></operator> <name pos:line="94" pos:column="41">STATE_2ND_HALF<pos:position pos:line="94" pos:column="55"/></name></expr>;<pos:position pos:line="94" pos:column="56"/></expr_stmt>
				<break pos:line="95" pos:column="33">break;<pos:position pos:line="95" pos:column="39"/></break>
			<case pos:line="96" pos:column="25">case <expr><literal type="char" pos:line="96" pos:column="30">'='<pos:position pos:line="96" pos:column="33"/></literal></expr>:<pos:position pos:line="96" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="97" pos:column="33">op<pos:position pos:line="97" pos:column="35"/></name> <operator pos:line="97" pos:column="36">=<pos:position pos:line="97" pos:column="37"/></operator> <name pos:line="97" pos:column="38">CHMOD_EQ<pos:position pos:line="97" pos:column="46"/></name></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="98" pos:column="33">state<pos:position pos:line="98" pos:column="38"/></name> <operator pos:line="98" pos:column="39">=<pos:position pos:line="98" pos:column="40"/></operator> <name pos:line="98" pos:column="41">STATE_2ND_HALF<pos:position pos:line="98" pos:column="55"/></name></expr>;<pos:position pos:line="98" pos:column="56"/></expr_stmt>
				<break pos:line="99" pos:column="33">break;<pos:position pos:line="99" pos:column="39"/></break>
			<default pos:line="100" pos:column="25">default:<pos:position pos:line="100" pos:column="33"/></default>
				<if pos:line="101" pos:column="33">if <condition pos:line="101" pos:column="36">(<expr><call><name pos:line="101" pos:column="37">isDigit<pos:position pos:line="101" pos:column="44"/></name><argument_list pos:line="101" pos:column="44">(<argument><expr><name pos:line="101" pos:column="45">modestr<pos:position pos:line="101" pos:column="52"/></name></expr></argument>)<pos:position pos:line="101" pos:column="53"/></argument_list></call> <operator pos:line="101" pos:column="54">&amp;&amp;<pos:position pos:line="101" pos:column="64"/></operator> <operator pos:line="101" pos:column="57">*<pos:position pos:line="101" pos:column="58"/></operator><name pos:line="101" pos:column="58">modestr<pos:position pos:line="101" pos:column="65"/></name> <operator pos:line="101" pos:column="66">&lt;<pos:position pos:line="101" pos:column="70"/></operator> <literal type="char" pos:line="101" pos:column="68">'8'<pos:position pos:line="101" pos:column="71"/></literal> <operator pos:line="101" pos:column="72">&amp;&amp;<pos:position pos:line="101" pos:column="82"/></operator> <operator pos:line="101" pos:column="75">!<pos:position pos:line="101" pos:column="76"/></operator><name pos:line="101" pos:column="76">where<pos:position pos:line="101" pos:column="81"/></name></expr>)<pos:position pos:line="101" pos:column="82"/></condition><then pos:line="101" pos:column="82"> <block pos:line="101" pos:column="83">{
					<expr_stmt><expr><name pos:line="102" pos:column="41">op<pos:position pos:line="102" pos:column="43"/></name> <operator pos:line="102" pos:column="44">=<pos:position pos:line="102" pos:column="45"/></operator> <name pos:line="102" pos:column="46">CHMOD_SET<pos:position pos:line="102" pos:column="55"/></name></expr>;<pos:position pos:line="102" pos:column="56"/></expr_stmt>
					<expr_stmt><expr><name pos:line="103" pos:column="41">state<pos:position pos:line="103" pos:column="46"/></name> <operator pos:line="103" pos:column="47">=<pos:position pos:line="103" pos:column="48"/></operator>  <name pos:line="103" pos:column="50">STATE_OCTAL_NUM<pos:position pos:line="103" pos:column="65"/></name></expr>;<pos:position pos:line="103" pos:column="66"/></expr_stmt>
					<expr_stmt><expr><name pos:line="104" pos:column="41">where<pos:position pos:line="104" pos:column="46"/></name> <operator pos:line="104" pos:column="47">=<pos:position pos:line="104" pos:column="48"/></operator> <literal type="number" pos:line="104" pos:column="49">1<pos:position pos:line="104" pos:column="50"/></literal></expr>;<pos:position pos:line="104" pos:column="51"/></expr_stmt>
					<expr_stmt><expr><name pos:line="105" pos:column="41">what<pos:position pos:line="105" pos:column="45"/></name> <operator pos:line="105" pos:column="46">=<pos:position pos:line="105" pos:column="47"/></operator> <operator pos:line="105" pos:column="48">*<pos:position pos:line="105" pos:column="49"/></operator><name pos:line="105" pos:column="49">modestr<pos:position pos:line="105" pos:column="56"/></name> <operator pos:line="105" pos:column="57">-<pos:position pos:line="105" pos:column="58"/></operator> <literal type="char" pos:line="105" pos:column="59">'0'<pos:position pos:line="105" pos:column="62"/></literal></expr>;<pos:position pos:line="105" pos:column="63"/></expr_stmt>
				}<pos:position pos:line="106" pos:column="34"/></block></then> <else pos:line="106" pos:column="35">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="107" pos:column="41">state<pos:position pos:line="107" pos:column="46"/></name> <operator pos:line="107" pos:column="47">=<pos:position pos:line="107" pos:column="48"/></operator> <name pos:line="107" pos:column="49">STATE_ERROR<pos:position pos:line="107" pos:column="60"/></name></expr>;<pos:position pos:line="107" pos:column="61"/></expr_stmt></block></else></if>
				<break pos:line="108" pos:column="33">break;<pos:position pos:line="108" pos:column="39"/></break>
			}<pos:position pos:line="109" pos:column="26"/></block></switch>
			<break pos:line="110" pos:column="25">break;<pos:position pos:line="110" pos:column="31"/></break>
		<case pos:line="111" pos:column="17">case <expr><name pos:line="111" pos:column="22">STATE_2ND_HALF<pos:position pos:line="111" pos:column="36"/></name></expr>:<pos:position pos:line="111" pos:column="37"/></case>
			<switch pos:line="112" pos:column="25">switch <condition pos:line="112" pos:column="32">(<expr><operator pos:line="112" pos:column="33">*<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">modestr<pos:position pos:line="112" pos:column="41"/></name></expr>)<pos:position pos:line="112" pos:column="42"/></condition> <block pos:line="112" pos:column="43">{
			<case pos:line="113" pos:column="25">case <expr><literal type="char" pos:line="113" pos:column="30">'r'<pos:position pos:line="113" pos:column="33"/></literal></expr>:<pos:position pos:line="113" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="114" pos:column="33">what<pos:position pos:line="114" pos:column="37"/></name> <operator pos:line="114" pos:column="38">|=<pos:position pos:line="114" pos:column="40"/></operator> <literal type="number" pos:line="114" pos:column="41">4<pos:position pos:line="114" pos:column="42"/></literal></expr>;<pos:position pos:line="114" pos:column="43"/></expr_stmt>
				<break pos:line="115" pos:column="33">break;<pos:position pos:line="115" pos:column="39"/></break>
			<case pos:line="116" pos:column="25">case <expr><literal type="char" pos:line="116" pos:column="30">'w'<pos:position pos:line="116" pos:column="33"/></literal></expr>:<pos:position pos:line="116" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="117" pos:column="33">what<pos:position pos:line="117" pos:column="37"/></name> <operator pos:line="117" pos:column="38">|=<pos:position pos:line="117" pos:column="40"/></operator> <literal type="number" pos:line="117" pos:column="41">2<pos:position pos:line="117" pos:column="42"/></literal></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
				<break pos:line="118" pos:column="33">break;<pos:position pos:line="118" pos:column="39"/></break>
			<case pos:line="119" pos:column="25">case <expr><literal type="char" pos:line="119" pos:column="30">'X'<pos:position pos:line="119" pos:column="33"/></literal></expr>:<pos:position pos:line="119" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="120" pos:column="33">flags<pos:position pos:line="120" pos:column="38"/></name> <operator pos:line="120" pos:column="39">|=<pos:position pos:line="120" pos:column="41"/></operator> <name pos:line="120" pos:column="42">FLAG_X_KEEP<pos:position pos:line="120" pos:column="53"/></name></expr>;<pos:position pos:line="120" pos:column="54"/></expr_stmt>
				<comment type="block" pos:line="121" pos:column="33">/* FALL THROUGH */</comment>
			<case pos:line="122" pos:column="25">case <expr><literal type="char" pos:line="122" pos:column="30">'x'<pos:position pos:line="122" pos:column="33"/></literal></expr>:<pos:position pos:line="122" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="123" pos:column="33">what<pos:position pos:line="123" pos:column="37"/></name> <operator pos:line="123" pos:column="38">|=<pos:position pos:line="123" pos:column="40"/></operator> <literal type="number" pos:line="123" pos:column="41">1<pos:position pos:line="123" pos:column="42"/></literal></expr>;<pos:position pos:line="123" pos:column="43"/></expr_stmt>
				<break pos:line="124" pos:column="33">break;<pos:position pos:line="124" pos:column="39"/></break>
			<case pos:line="125" pos:column="25">case <expr><literal type="char" pos:line="125" pos:column="30">'s'<pos:position pos:line="125" pos:column="33"/></literal></expr>:<pos:position pos:line="125" pos:column="34"/></case>
				<if pos:line="126" pos:column="33">if <condition pos:line="126" pos:column="36">(<expr><name pos:line="126" pos:column="37">topbits<pos:position pos:line="126" pos:column="44"/></name></expr>)<pos:position pos:line="126" pos:column="45"/></condition><then pos:line="126" pos:column="45">
					<block type="pseudo"><expr_stmt><expr><name pos:line="127" pos:column="41">topoct<pos:position pos:line="127" pos:column="47"/></name> <operator pos:line="127" pos:column="48">|=<pos:position pos:line="127" pos:column="50"/></operator> <name pos:line="127" pos:column="51">topbits<pos:position pos:line="127" pos:column="58"/></name></expr>;<pos:position pos:line="127" pos:column="59"/></expr_stmt></block></then>
				<else pos:line="128" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="41">topoct<pos:position pos:line="129" pos:column="47"/></name> <operator pos:line="129" pos:column="48">=<pos:position pos:line="129" pos:column="49"/></operator> <literal type="number" pos:line="129" pos:column="50">04000<pos:position pos:line="129" pos:column="55"/></literal></expr>;<pos:position pos:line="129" pos:column="56"/></expr_stmt></block></else></if>
				<break pos:line="130" pos:column="33">break;<pos:position pos:line="130" pos:column="39"/></break>
			<case pos:line="131" pos:column="25">case <expr><literal type="char" pos:line="131" pos:column="30">'t'<pos:position pos:line="131" pos:column="33"/></literal></expr>:<pos:position pos:line="131" pos:column="34"/></case>
				<expr_stmt><expr><name pos:line="132" pos:column="33">topoct<pos:position pos:line="132" pos:column="39"/></name> <operator pos:line="132" pos:column="40">|=<pos:position pos:line="132" pos:column="42"/></operator> <literal type="number" pos:line="132" pos:column="43">01000<pos:position pos:line="132" pos:column="48"/></literal></expr>;<pos:position pos:line="132" pos:column="49"/></expr_stmt>
				<break pos:line="133" pos:column="33">break;<pos:position pos:line="133" pos:column="39"/></break>
			<default pos:line="134" pos:column="25">default:<pos:position pos:line="134" pos:column="33"/></default>
				<expr_stmt><expr><name pos:line="135" pos:column="33">state<pos:position pos:line="135" pos:column="38"/></name> <operator pos:line="135" pos:column="39">=<pos:position pos:line="135" pos:column="40"/></operator> <name pos:line="135" pos:column="41">STATE_ERROR<pos:position pos:line="135" pos:column="52"/></name></expr>;<pos:position pos:line="135" pos:column="53"/></expr_stmt>
				<break pos:line="136" pos:column="33">break;<pos:position pos:line="136" pos:column="39"/></break>
			}<pos:position pos:line="137" pos:column="26"/></block></switch>
			<break pos:line="138" pos:column="25">break;<pos:position pos:line="138" pos:column="31"/></break>
		<case pos:line="139" pos:column="17">case <expr><name pos:line="139" pos:column="22">STATE_OCTAL_NUM<pos:position pos:line="139" pos:column="37"/></name></expr>:<pos:position pos:line="139" pos:column="38"/></case>
			<if pos:line="140" pos:column="25">if <condition pos:line="140" pos:column="28">(<expr><call><name pos:line="140" pos:column="29">isDigit<pos:position pos:line="140" pos:column="36"/></name><argument_list pos:line="140" pos:column="36">(<argument><expr><name pos:line="140" pos:column="37">modestr<pos:position pos:line="140" pos:column="44"/></name></expr></argument>)<pos:position pos:line="140" pos:column="45"/></argument_list></call> <operator pos:line="140" pos:column="46">&amp;&amp;<pos:position pos:line="140" pos:column="56"/></operator> <operator pos:line="140" pos:column="49">*<pos:position pos:line="140" pos:column="50"/></operator><name pos:line="140" pos:column="50">modestr<pos:position pos:line="140" pos:column="57"/></name> <operator pos:line="140" pos:column="58">&lt;<pos:position pos:line="140" pos:column="62"/></operator> <literal type="char" pos:line="140" pos:column="60">'8'<pos:position pos:line="140" pos:column="63"/></literal></expr>)<pos:position pos:line="140" pos:column="64"/></condition><then pos:line="140" pos:column="64"> <block pos:line="140" pos:column="65">{
				<expr_stmt><expr><name pos:line="141" pos:column="33">what<pos:position pos:line="141" pos:column="37"/></name> <operator pos:line="141" pos:column="38">=<pos:position pos:line="141" pos:column="39"/></operator> <name pos:line="141" pos:column="40">what<pos:position pos:line="141" pos:column="44"/></name><operator pos:line="141" pos:column="44">*<pos:position pos:line="141" pos:column="45"/></operator><literal type="number" pos:line="141" pos:column="45">8<pos:position pos:line="141" pos:column="46"/></literal> <operator pos:line="141" pos:column="47">+<pos:position pos:line="141" pos:column="48"/></operator> <operator pos:line="141" pos:column="49">*<pos:position pos:line="141" pos:column="50"/></operator><name pos:line="141" pos:column="50">modestr<pos:position pos:line="141" pos:column="57"/></name> <operator pos:line="141" pos:column="58">-<pos:position pos:line="141" pos:column="59"/></operator> <literal type="char" pos:line="141" pos:column="60">'0'<pos:position pos:line="141" pos:column="63"/></literal></expr>;<pos:position pos:line="141" pos:column="64"/></expr_stmt>
				<if pos:line="142" pos:column="33">if <condition pos:line="142" pos:column="36">(<expr><name pos:line="142" pos:column="37">what<pos:position pos:line="142" pos:column="41"/></name> <operator pos:line="142" pos:column="42">&gt;<pos:position pos:line="142" pos:column="46"/></operator> <name pos:line="142" pos:column="44">CHMOD_BITS<pos:position pos:line="142" pos:column="54"/></name></expr>)<pos:position pos:line="142" pos:column="55"/></condition><then pos:line="142" pos:column="55">
					<block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="41">state<pos:position pos:line="143" pos:column="46"/></name> <operator pos:line="143" pos:column="47">=<pos:position pos:line="143" pos:column="48"/></operator> <name pos:line="143" pos:column="49">STATE_ERROR<pos:position pos:line="143" pos:column="60"/></name></expr>;<pos:position pos:line="143" pos:column="61"/></expr_stmt></block></then></if>
			}<pos:position pos:line="144" pos:column="26"/></block></then> <else pos:line="144" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="33">state<pos:position pos:line="145" pos:column="38"/></name> <operator pos:line="145" pos:column="39">=<pos:position pos:line="145" pos:column="40"/></operator> <name pos:line="145" pos:column="41">STATE_ERROR<pos:position pos:line="145" pos:column="52"/></name></expr>;<pos:position pos:line="145" pos:column="53"/></expr_stmt></block></else></if>
			<break pos:line="146" pos:column="25">break;<pos:position pos:line="146" pos:column="31"/></break>
		}<pos:position pos:line="147" pos:column="18"/></block></switch>
		<expr_stmt><expr><name pos:line="148" pos:column="17">modestr<pos:position pos:line="148" pos:column="24"/></name><operator pos:line="148" pos:column="24">++<pos:position pos:line="148" pos:column="26"/></operator></expr>;<pos:position pos:line="148" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="149" pos:column="10"/></block></while>

	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">state<pos:position pos:line="151" pos:column="18"/></name> <operator pos:line="151" pos:column="19">==<pos:position pos:line="151" pos:column="21"/></operator> <name pos:line="151" pos:column="22">STATE_ERROR<pos:position pos:line="151" pos:column="33"/></name></expr>)<pos:position pos:line="151" pos:column="34"/></condition><then pos:line="151" pos:column="34"> <block pos:line="151" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="152" pos:column="17">free_chmod_mode<pos:position pos:line="152" pos:column="32"/></name><argument_list pos:line="152" pos:column="32">(<argument><expr><name pos:line="152" pos:column="33">first_mode<pos:position pos:line="152" pos:column="43"/></name></expr></argument>)<pos:position pos:line="152" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="45"/></expr_stmt>
		<return pos:line="153" pos:column="17">return <expr><name pos:line="153" pos:column="24">NULL<pos:position pos:line="153" pos:column="28"/></name></expr>;<pos:position pos:line="153" pos:column="29"/></return>
	}<pos:position pos:line="154" pos:column="10"/></block></then></if>

	<if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><operator pos:line="156" pos:column="13">!<pos:position pos:line="156" pos:column="14"/></operator><operator pos:line="156" pos:column="14">(<pos:position pos:line="156" pos:column="15"/></operator><name pos:line="156" pos:column="15">curr_mode<pos:position pos:line="156" pos:column="24"/></name> <operator pos:line="156" pos:column="25">=<pos:position pos:line="156" pos:column="26"/></operator> <operator pos:line="156" pos:column="27">*<pos:position pos:line="156" pos:column="28"/></operator><name pos:line="156" pos:column="28">root_mode_ptr<pos:position pos:line="156" pos:column="41"/></name><operator pos:line="156" pos:column="41">)<pos:position pos:line="156" pos:column="42"/></operator></expr>)<pos:position pos:line="156" pos:column="43"/></condition><then pos:line="156" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="157" pos:column="17">*<pos:position pos:line="157" pos:column="18"/></operator><name pos:line="157" pos:column="18">root_mode_ptr<pos:position pos:line="157" pos:column="31"/></name> <operator pos:line="157" pos:column="32">=<pos:position pos:line="157" pos:column="33"/></operator> <name pos:line="157" pos:column="34">first_mode<pos:position pos:line="157" pos:column="44"/></name></expr>;<pos:position pos:line="157" pos:column="45"/></expr_stmt></block></then>
	<else pos:line="158" pos:column="9">else <block pos:line="158" pos:column="14">{
		<while pos:line="159" pos:column="17">while <condition pos:line="159" pos:column="23">(<expr><name><name pos:line="159" pos:column="24">curr_mode<pos:position pos:line="159" pos:column="33"/></name><operator pos:line="159" pos:column="33">-&gt;<pos:position pos:line="159" pos:column="38"/></operator><name pos:line="159" pos:column="35">next<pos:position pos:line="159" pos:column="39"/></name></name></expr>)<pos:position pos:line="159" pos:column="40"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="25">curr_mode<pos:position pos:line="160" pos:column="34"/></name> <operator pos:line="160" pos:column="35">=<pos:position pos:line="160" pos:column="36"/></operator> <name><name pos:line="160" pos:column="37">curr_mode<pos:position pos:line="160" pos:column="46"/></name><operator pos:line="160" pos:column="46">-&gt;<pos:position pos:line="160" pos:column="51"/></operator><name pos:line="160" pos:column="48">next<pos:position pos:line="160" pos:column="52"/></name></name></expr>;<pos:position pos:line="160" pos:column="53"/></expr_stmt></block></while>
		<expr_stmt><expr><name><name pos:line="161" pos:column="17">curr_mode<pos:position pos:line="161" pos:column="26"/></name><operator pos:line="161" pos:column="26">-&gt;<pos:position pos:line="161" pos:column="31"/></operator><name pos:line="161" pos:column="28">next<pos:position pos:line="161" pos:column="32"/></name></name> <operator pos:line="161" pos:column="33">=<pos:position pos:line="161" pos:column="34"/></operator> <name pos:line="161" pos:column="35">first_mode<pos:position pos:line="161" pos:column="45"/></name></expr>;<pos:position pos:line="161" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="162" pos:column="10"/></block></else></if>

	<return pos:line="164" pos:column="9">return <expr><name pos:line="164" pos:column="16">first_mode<pos:position pos:line="164" pos:column="26"/></name></expr>;<pos:position pos:line="164" pos:column="27"/></return>
}<pos:position pos:line="165" pos:column="2"/></block></function></unit>

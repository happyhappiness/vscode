<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_171_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">rsyserr<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name><name pos:line="1" pos:column="14">enum<pos:position pos:line="1" pos:column="18"/></name> <name pos:line="1" pos:column="19">logcode<pos:position pos:line="1" pos:column="26"/></name></name></type> <name pos:line="1" pos:column="27">code<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">errcode<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">format<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="66">...<pos:position pos:line="1" pos:column="69"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">va_list<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">ap<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>  
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buf<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1024<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">sys_len<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">sysmsg<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">va_start<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">ap<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">format<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
	<comment type="block" pos:line="10" pos:column="9">/* Note: might return &lt;0 */</comment>
	<expr_stmt><expr><name pos:line="11" pos:column="9">len<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name pos:line="11" pos:column="15">vsnprintf<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">buf<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="30">sizeof<argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">buf<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">format<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">ap<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">va_end<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">ap<pos:position pos:line="12" pos:column="18"/></name></expr></argument>)<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>

	<comment type="block" pos:line="14" pos:column="9">/* TODO: Put in RSYNC_NAME at the start. */</comment>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">size_t<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">)<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">len<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&gt;<pos:position pos:line="16" pos:column="30"/></operator> <sizeof pos:line="16" pos:column="28">sizeof<argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">buf<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></sizeof><operator pos:line="16" pos:column="39">-<pos:position pos:line="16" pos:column="40"/></operator><literal type="number" pos:line="16" pos:column="40">1<pos:position pos:line="16" pos:column="41"/></literal></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">exit_cleanup<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">RERR_MESSAGEIO<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="19" pos:column="9">sysmsg<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">strerror<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">errcode<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">sys_len<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <call><name pos:line="20" pos:column="19">strlen<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">sysmsg<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">size_t<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">)<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">len<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">+<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="28">3<pos:position pos:line="21" pos:column="29"/></literal> <operator pos:line="21" pos:column="30">+<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">sys_len<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">&gt;<pos:position pos:line="21" pos:column="44"/></operator> <sizeof pos:line="21" pos:column="42">sizeof<argument_list pos:line="21" pos:column="48">(<argument><expr><name pos:line="21" pos:column="49">buf<pos:position pos:line="21" pos:column="52"/></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></sizeof> <operator pos:line="21" pos:column="54">-<pos:position pos:line="21" pos:column="55"/></operator> <literal type="number" pos:line="21" pos:column="56">1<pos:position pos:line="21" pos:column="57"/></literal></expr>)<pos:position pos:line="21" pos:column="58"/></condition><then pos:line="21" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">exit_cleanup<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">RERR_MESSAGEIO<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">strcpy<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">buf<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">+<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">len<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="27">": "<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">len<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">+=<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">2<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">strcpy<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">buf<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">+<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="22">len<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="27">sysmsg<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">len<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">+=<pos:position pos:line="27" pos:column="15"/></operator> <name pos:line="27" pos:column="16">sys_len<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">strcpy<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">buf<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">+<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">len<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="27">"\n"<pos:position pos:line="28" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">len<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">++<pos:position pos:line="29" pos:column="14"/></operator></expr>;<pos:position pos:line="29" pos:column="15"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">rwrite<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">code<pos:position pos:line="31" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="22">buf<pos:position pos:line="31" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="27">len<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

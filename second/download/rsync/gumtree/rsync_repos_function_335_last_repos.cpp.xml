<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_335_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">log_format_has<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">format<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">esc<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">p<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">format<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">format<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></init> <condition><expr><operator pos:line="8" pos:column="26">(<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">p<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <call><name pos:line="8" pos:column="31">strchr<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">p<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="41">'%'<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call><operator pos:line="8" pos:column="45">)<pos:position pos:line="8" pos:column="46"/></operator> <operator pos:line="8" pos:column="47">!=<pos:position pos:line="8" pos:column="49"/></operator> <name pos:line="8" pos:column="50">NULL<pos:position pos:line="8" pos:column="54"/></name></expr>;<pos:position pos:line="8" pos:column="55"/></condition> <incr/>)<pos:position pos:line="8" pos:column="57"/></control> <block pos:line="8" pos:column="58">{
		<for pos:line="9" pos:column="17">for <control pos:line="9" pos:column="21">(<init><expr><name pos:line="9" pos:column="22">p<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">++<pos:position pos:line="9" pos:column="25"/></operator></expr>;<pos:position pos:line="9" pos:column="26"/></init> <condition><expr><operator pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">p<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">==<pos:position pos:line="9" pos:column="32"/></operator> <literal type="char" pos:line="9" pos:column="33">'\''<pos:position pos:line="9" pos:column="37"/></literal></expr>;<pos:position pos:line="9" pos:column="38"/></condition> <incr><expr><name pos:line="9" pos:column="39">p<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="43"/></control> <block pos:line="9" pos:column="44">{}<pos:position pos:line="9" pos:column="46"/></block></for> <comment type="block" pos:line="9" pos:column="47">/*SHARED ITERATOR*/</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">p<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <literal type="char" pos:line="10" pos:column="27">'-'<pos:position pos:line="10" pos:column="30"/></literal></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">p<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">++<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt></block></then></if>
		<while pos:line="12" pos:column="17">while <condition pos:line="12" pos:column="23">(<expr><call><name pos:line="12" pos:column="24">isDigit<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">p<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="35"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">p<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">++<pos:position pos:line="13" pos:column="28"/></operator></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt></block></while>
		<while pos:line="14" pos:column="17">while <condition pos:line="14" pos:column="23">(<expr><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">p<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <literal type="char" pos:line="14" pos:column="30">'\''<pos:position pos:line="14" pos:column="34"/></literal></expr>)<pos:position pos:line="14" pos:column="35"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="36">p<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">++<pos:position pos:line="14" pos:column="39"/></operator></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt></block></while>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">p<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
			<block type="pseudo"><break pos:line="16" pos:column="25">break;<pos:position pos:line="16" pos:column="31"/></break></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">p<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">==<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">esc<pos:position pos:line="17" pos:column="30"/></name></expr>)<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></for>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_44_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">do_section<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">sectionname<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">BOOL<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">isglobal<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">sectionname<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">==<pos:position pos:line="5" pos:column="28"/></operator> <literal type="char" pos:line="5" pos:column="29">']'<pos:position pos:line="5" pos:column="32"/></literal></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33"> <block pos:line="5" pos:column="34">{ <comment type="block" pos:line="5" pos:column="36">/* A special push/pop/reset directive from params.c */</comment>
		<expr_stmt><expr><name pos:line="6" pos:column="17">bInGlobalSection<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">=<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="36">1<pos:position pos:line="6" pos:column="37"/></literal></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">strcmp<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><name pos:line="7" pos:column="28">sectionname<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">+<pos:position pos:line="7" pos:column="40"/></operator><literal type="number" pos:line="7" pos:column="40">1<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="43">"push"<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call> <operator pos:line="7" pos:column="51">==<pos:position pos:line="7" pos:column="53"/></operator> <literal type="number" pos:line="7" pos:column="54">0<pos:position pos:line="7" pos:column="55"/></literal></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56"> <block pos:line="7" pos:column="57">{
			<decl_stmt><decl><type><name pos:line="8" pos:column="25">all_vars<pos:position pos:line="8" pos:column="33"/></name> <modifier pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></modifier></type><name pos:line="8" pos:column="35">vp<pos:position pos:line="8" pos:column="37"/></name> <init pos:line="8" pos:column="38">= <expr><call><name pos:line="8" pos:column="40">EXPAND_ITEM_LIST<pos:position pos:line="8" pos:column="56"/></name><argument_list pos:line="8" pos:column="56">(<argument><expr><operator pos:line="8" pos:column="57">&amp;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="58">Vars_stack<pos:position pos:line="8" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="70">all_vars<pos:position pos:line="8" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="80">2<pos:position pos:line="8" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="83"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">memcpy<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">vp<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="36">&amp;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="37">Vars<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="43">sizeof <name pos:line="9" pos:column="50">Vars<pos:position pos:line="9" pos:column="54"/></name></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="10" pos:column="18"/></block></then> <elseif pos:line="10" pos:column="19">else <if pos:line="10" pos:column="24">if <condition pos:line="10" pos:column="27">(<expr><call><name pos:line="10" pos:column="28">strcmp<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">sectionname<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">+<pos:position pos:line="10" pos:column="47"/></operator><literal type="number" pos:line="10" pos:column="47">1<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="50">"pop"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call> <operator pos:line="10" pos:column="57">==<pos:position pos:line="10" pos:column="59"/></operator> <literal type="number" pos:line="10" pos:column="60">0<pos:position pos:line="10" pos:column="61"/></literal>
		 <operator pos:line="11" pos:column="18">||<pos:position pos:line="11" pos:column="20"/></operator> <call><name pos:line="11" pos:column="21">strcmp<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">sectionname<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">+<pos:position pos:line="11" pos:column="40"/></operator><literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="43">"reset"<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call> <operator pos:line="11" pos:column="52">==<pos:position pos:line="11" pos:column="54"/></operator> <literal type="number" pos:line="11" pos:column="55">0<pos:position pos:line="11" pos:column="56"/></literal></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57"> <block pos:line="11" pos:column="58">{
			<decl_stmt><decl><type><name pos:line="12" pos:column="25">all_vars<pos:position pos:line="12" pos:column="33"/></name> <modifier pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></modifier></type><name pos:line="12" pos:column="35">vp<pos:position pos:line="12" pos:column="37"/></name> <init pos:line="12" pos:column="38">= <expr><operator pos:line="12" pos:column="40">(<pos:position pos:line="12" pos:column="41"/></operator><operator pos:line="12" pos:column="41">(<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">all_vars<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">*<pos:position pos:line="12" pos:column="51"/></operator><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator><name><name pos:line="12" pos:column="52">Vars_stack<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">.<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="63">items<pos:position pos:line="12" pos:column="68"/></name></name><operator pos:line="12" pos:column="68">)<pos:position pos:line="12" pos:column="69"/></operator> <operator pos:line="12" pos:column="70">+<pos:position pos:line="12" pos:column="71"/></operator> <name><name pos:line="12" pos:column="72">Vars_stack<pos:position pos:line="12" pos:column="82"/></name><operator pos:line="12" pos:column="82">.<pos:position pos:line="12" pos:column="83"/></operator><name pos:line="12" pos:column="83">count<pos:position pos:line="12" pos:column="88"/></name></name> <operator pos:line="12" pos:column="89">-<pos:position pos:line="12" pos:column="90"/></operator> <literal type="number" pos:line="12" pos:column="91">1<pos:position pos:line="12" pos:column="92"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="93"/></decl_stmt>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><operator pos:line="13" pos:column="29">!<pos:position pos:line="13" pos:column="30"/></operator><name><name pos:line="13" pos:column="30">Vars_stack<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">count<pos:position pos:line="13" pos:column="46"/></name></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47">
				<block type="pseudo"><return pos:line="14" pos:column="33">return <expr><name pos:line="14" pos:column="40">False<pos:position pos:line="14" pos:column="45"/></name></expr>;<pos:position pos:line="14" pos:column="46"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">memcpy<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="33">Vars<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">vp<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="43">sizeof <name pos:line="15" pos:column="50">Vars<pos:position pos:line="15" pos:column="54"/></name></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name><name pos:line="16" pos:column="29">sectionname<pos:position pos:line="16" pos:column="40"/></name><index pos:line="16" pos:column="40">[<expr><literal type="number" pos:line="16" pos:column="41">1<pos:position pos:line="16" pos:column="42"/></literal></expr>]<pos:position pos:line="16" pos:column="43"/></index></name> <operator pos:line="16" pos:column="44">==<pos:position pos:line="16" pos:column="46"/></operator> <literal type="char" pos:line="16" pos:column="47">'p'<pos:position pos:line="16" pos:column="50"/></literal></expr>)<pos:position pos:line="16" pos:column="51"/></condition><then pos:line="16" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="33">Vars_stack<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">.<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">count<pos:position pos:line="17" pos:column="49"/></name></name><operator pos:line="17" pos:column="49">--<pos:position pos:line="17" pos:column="51"/></operator></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt></block></then></if>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if></elseif> <else pos:line="18" pos:column="19">else
			<block type="pseudo"><return pos:line="19" pos:column="25">return <expr><name pos:line="19" pos:column="32">False<pos:position pos:line="19" pos:column="37"/></name></expr>;<pos:position pos:line="19" pos:column="38"/></return></block></else></if>
		<return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">True<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">isglobal<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <call><name pos:line="23" pos:column="20">strwicmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">sectionname<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">GLOBAL_NAME<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">==<pos:position pos:line="23" pos:column="57"/></operator> <literal type="number" pos:line="23" pos:column="58">0<pos:position pos:line="23" pos:column="59"/></literal></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>

	<comment type="block" pos:line="25" pos:column="9">/* At the end of the global section, add any --dparam items. */</comment>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">bInGlobalSection<pos:position pos:line="26" pos:column="29"/></name> <operator pos:line="26" pos:column="30">&amp;&amp;<pos:position pos:line="26" pos:column="40"/></operator> <operator pos:line="26" pos:column="33">!<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">isglobal<pos:position pos:line="26" pos:column="42"/></name></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43"> <block pos:line="26" pos:column="44">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name><name pos:line="27" pos:column="22">section_list<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">.<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">count<pos:position pos:line="27" pos:column="40"/></name></name></expr>)<pos:position pos:line="27" pos:column="41"/></condition><then pos:line="27" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">set_dparams<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><literal type="number" pos:line="28" pos:column="37">0<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="31" pos:column="9">/* if we've just struck a global section, note the fact. */</comment>
	<expr_stmt><expr><name pos:line="32" pos:column="9">bInGlobalSection<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="28">isglobal<pos:position pos:line="32" pos:column="36"/></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="34" pos:column="9">/* check for multiple global sections */</comment>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">bInGlobalSection<pos:position pos:line="35" pos:column="29"/></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30">
		<block type="pseudo"><return pos:line="36" pos:column="17">return <expr><name pos:line="36" pos:column="24">True<pos:position pos:line="36" pos:column="28"/></name></expr>;<pos:position pos:line="36" pos:column="29"/></return></block></then></if>

<cpp:if pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">if<pos:position pos:line="38" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="38" pos:column="5">0<pos:position pos:line="38" pos:column="6"/></literal></expr></cpp:if>
	<comment type="block" pos:line="39" pos:column="9">/* If we have a current section, tidy it up before moving on. */</comment>
	if (iSectionIndex &gt;= 0) {
		<comment type="block" pos:line="41" pos:column="17">/* Add any tidy work as needed ... */</comment>
		if (problem)
			return False;
	}
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">strchr<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">sectionname<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="33">'/'<pos:position pos:line="47" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call> <operator pos:line="47" pos:column="38">!=<pos:position pos:line="47" pos:column="40"/></operator> <name pos:line="47" pos:column="41">NULL<pos:position pos:line="47" pos:column="45"/></name></expr>)<pos:position pos:line="47" pos:column="46"/></condition><then pos:line="47" pos:column="46"> <block pos:line="47" pos:column="47">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">rprintf<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">FLOG<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="31">"Warning: invalid section name in configuration file: %s\n"<pos:position pos:line="48" pos:column="90"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="92">sectionname<pos:position pos:line="48" pos:column="103"/></name></expr></argument>)<pos:position pos:line="48" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="105"/></expr_stmt>
		<return pos:line="49" pos:column="17">return <expr><name pos:line="49" pos:column="24">False<pos:position pos:line="49" pos:column="29"/></name></expr>;<pos:position pos:line="49" pos:column="30"/></return>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">(<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">iSectionIndex<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <call><name pos:line="52" pos:column="30">add_a_section<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><name pos:line="52" pos:column="44">sectionname<pos:position pos:line="52" pos:column="55"/></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call><operator pos:line="52" pos:column="56">)<pos:position pos:line="52" pos:column="57"/></operator> <operator pos:line="52" pos:column="58">&lt;<pos:position pos:line="52" pos:column="62"/></operator> <literal type="number" pos:line="52" pos:column="60">0<pos:position pos:line="52" pos:column="61"/></literal></expr>)<pos:position pos:line="52" pos:column="62"/></condition><then pos:line="52" pos:column="62"> <block pos:line="52" pos:column="63">{
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">rprintf<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">FLOG<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="31">"Failed to add a new module\n"<pos:position pos:line="53" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><name pos:line="54" pos:column="17">bInGlobalSection<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">=<pos:position pos:line="54" pos:column="35"/></operator> <name pos:line="54" pos:column="36">True<pos:position pos:line="54" pos:column="40"/></name></expr>;<pos:position pos:line="54" pos:column="41"/></expr_stmt>
		<return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">False<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></return>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">True<pos:position pos:line="58" pos:column="20"/></name></expr>;<pos:position pos:line="58" pos:column="21"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

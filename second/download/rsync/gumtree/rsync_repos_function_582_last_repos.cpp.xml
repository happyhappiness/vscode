<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_582_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">output_itemized_counts<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">prefix<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">counts<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name><name pos:line="3" pos:column="22">labels<pos:position pos:line="3" pos:column="28"/></name><index pos:line="3" pos:column="28">[]<pos:position pos:line="3" pos:column="30"/></index></name> <init pos:line="3" pos:column="31">= <expr><block pos:line="3" pos:column="33">{ <expr><literal type="string" pos:line="3" pos:column="35">"reg"<pos:position pos:line="3" pos:column="40"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="42">"dir"<pos:position pos:line="3" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="49">"link"<pos:position pos:line="3" pos:column="55"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="57">"dev"<pos:position pos:line="3" pos:column="62"/></literal></expr>, <expr><literal type="string" pos:line="3" pos:column="64">"special"<pos:position pos:line="3" pos:column="73"/></literal></expr> }<pos:position pos:line="3" pos:column="75"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="76"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buf<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">1024<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>, <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="26">pre<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><literal type="string" pos:line="4" pos:column="32">" ("<pos:position pos:line="4" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">j<pos:position pos:line="5" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">total<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name><name pos:line="6" pos:column="21">counts<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[<expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">total<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block pos:line="7" pos:column="20">{
		<expr_stmt><expr><name><name pos:line="8" pos:column="17">counts<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>]<pos:position pos:line="8" pos:column="26"/></index></name> <operator pos:line="8" pos:column="27">-=<pos:position pos:line="8" pos:column="29"/></operator> <name><name pos:line="8" pos:column="30">counts<pos:position pos:line="8" pos:column="36"/></name><index pos:line="8" pos:column="36">[<expr><literal type="number" pos:line="8" pos:column="37">1<pos:position pos:line="8" pos:column="38"/></literal></expr>]<pos:position pos:line="8" pos:column="39"/></index></name> <operator pos:line="8" pos:column="40">+<pos:position pos:line="8" pos:column="41"/></operator> <name><name pos:line="8" pos:column="42">counts<pos:position pos:line="8" pos:column="48"/></name><index pos:line="8" pos:column="48">[<expr><literal type="number" pos:line="8" pos:column="49">2<pos:position pos:line="8" pos:column="50"/></literal></expr>]<pos:position pos:line="8" pos:column="51"/></index></name> <operator pos:line="8" pos:column="52">+<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="54">counts<pos:position pos:line="8" pos:column="60"/></name><index pos:line="8" pos:column="60">[<expr><literal type="number" pos:line="8" pos:column="61">3<pos:position pos:line="8" pos:column="62"/></literal></expr>]<pos:position pos:line="8" pos:column="63"/></index></name> <operator pos:line="8" pos:column="64">+<pos:position pos:line="8" pos:column="65"/></operator> <name><name pos:line="8" pos:column="66">counts<pos:position pos:line="8" pos:column="72"/></name><index pos:line="8" pos:column="72">[<expr><literal type="number" pos:line="8" pos:column="73">4<pos:position pos:line="8" pos:column="74"/></literal></expr>]<pos:position pos:line="8" pos:column="75"/></index></name></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt>
		<for pos:line="9" pos:column="17">for <control pos:line="9" pos:column="21">(<init><expr><name pos:line="9" pos:column="22">j<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></init> <condition><expr><name pos:line="9" pos:column="29">j<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">&lt;<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="33">5<pos:position pos:line="9" pos:column="34"/></literal></expr>;<pos:position pos:line="9" pos:column="35"/></condition> <incr><expr><name pos:line="9" pos:column="36">j<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">++<pos:position pos:line="9" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="40"/></control> <block pos:line="9" pos:column="41">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name><name pos:line="10" pos:column="29">counts<pos:position pos:line="10" pos:column="35"/></name><index pos:line="10" pos:column="35">[<expr><name pos:line="10" pos:column="36">j<pos:position pos:line="10" pos:column="37"/></name></expr>]<pos:position pos:line="10" pos:column="38"/></index></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39"> <block pos:line="10" pos:column="40">{
				<expr_stmt><expr><name pos:line="11" pos:column="33">len<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">+=<pos:position pos:line="11" pos:column="39"/></operator> <call><name pos:line="11" pos:column="40">snprintf<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">buf<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">+<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="53">len<pos:position pos:line="11" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="58">sizeof <name pos:line="11" pos:column="65">buf<pos:position pos:line="11" pos:column="68"/></name></sizeof> <operator pos:line="11" pos:column="69">-<pos:position pos:line="11" pos:column="70"/></operator> <name pos:line="11" pos:column="71">len<pos:position pos:line="11" pos:column="74"/></name> <operator pos:line="11" pos:column="75">-<pos:position pos:line="11" pos:column="76"/></operator> <literal type="number" pos:line="11" pos:column="77">2<pos:position pos:line="11" pos:column="78"/></literal></expr></argument>,
					<argument><expr><literal type="string" pos:line="12" pos:column="41">"%s%s: %s"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>,
					<argument><expr><name pos:line="13" pos:column="41">pre<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="46">labels<pos:position pos:line="13" pos:column="52"/></name><index pos:line="13" pos:column="52">[<expr><name pos:line="13" pos:column="53">j<pos:position pos:line="13" pos:column="54"/></name></expr>]<pos:position pos:line="13" pos:column="55"/></index></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="57">comma_num<pos:position pos:line="13" pos:column="66"/></name><argument_list pos:line="13" pos:column="66">(<argument><expr><name><name pos:line="13" pos:column="67">counts<pos:position pos:line="13" pos:column="73"/></name><index pos:line="13" pos:column="73">[<expr><name pos:line="13" pos:column="74">j<pos:position pos:line="13" pos:column="75"/></name></expr>]<pos:position pos:line="13" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><name pos:line="14" pos:column="33">pre<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <literal type="string" pos:line="14" pos:column="39">", "<pos:position pos:line="14" pos:column="43"/></literal></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="15" pos:column="26"/></block></then></if>
		}<pos:position pos:line="16" pos:column="18"/></block></for>
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">buf<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><name pos:line="17" pos:column="21">len<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">++<pos:position pos:line="17" pos:column="26"/></operator></expr>]<pos:position pos:line="17" pos:column="27"/></index></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="char" pos:line="17" pos:column="30">')'<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">buf<pos:position pos:line="19" pos:column="12"/></name><index pos:line="19" pos:column="12">[<expr><name pos:line="19" pos:column="13">len<pos:position pos:line="19" pos:column="16"/></name></expr>]<pos:position pos:line="19" pos:column="17"/></index></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="char" pos:line="19" pos:column="20">'\0'<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">rprintf<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">FINFO<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="24">"%s: %s%s\n"<pos:position pos:line="20" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">prefix<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="46">comma_num<pos:position pos:line="20" pos:column="55"/></name><argument_list pos:line="20" pos:column="55">(<argument><expr><name pos:line="20" pos:column="56">total<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">buf<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="69"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_87_rsync-2.6.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">read_filesfrom_line<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">fd<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">fname<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">ch<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">s<pos:position pos:line="3" pos:column="20"/></name></decl>, <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="23">eob<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><name pos:line="3" pos:column="29">fname<pos:position pos:line="3" pos:column="34"/></name> <operator pos:line="3" pos:column="35">+<pos:position pos:line="3" pos:column="36"/></operator> <name pos:line="3" pos:column="37">MAXPATHLEN<pos:position pos:line="3" pos:column="47"/></name> <operator pos:line="3" pos:column="48">-<pos:position pos:line="3" pos:column="49"/></operator> <literal type="number" pos:line="3" pos:column="50">1<pos:position pos:line="3" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">cnt<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">reading_remotely<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">filesfrom_host<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">!=<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="50">NULL<pos:position pos:line="5" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">nulls<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">eol_nulls<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">||<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="34">reading_remotely<pos:position pos:line="6" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>

  <label><name pos:line="8" pos:column="3">start<pos:position pos:line="8" pos:column="8"/></name>:<pos:position pos:line="8" pos:column="9"/></label>
	<expr_stmt><expr><name pos:line="9" pos:column="9">s<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">fname<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>)<pos:position pos:line="10" pos:column="18"/></condition> <block pos:line="10" pos:column="19">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">cnt<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">read<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">fd<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="33">ch<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="37">1<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">cnt<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&lt;<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="32">(<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">errno<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">==<pos:position pos:line="12" pos:column="41"/></operator> <name pos:line="12" pos:column="42">EWOULDBLOCK<pos:position pos:line="12" pos:column="53"/></name>
		  <operator pos:line="13" pos:column="19">||<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">errno<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">==<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">EINTR<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">||<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">errno<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">==<pos:position pos:line="13" pos:column="48"/></operator> <name pos:line="13" pos:column="49">EAGAIN<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">)<pos:position pos:line="13" pos:column="56"/></operator></expr>)<pos:position pos:line="13" pos:column="57"/></condition><then pos:line="13" pos:column="57"> <block pos:line="13" pos:column="58">{
			<decl_stmt><decl><type><name><name pos:line="14" pos:column="25">struct<pos:position pos:line="14" pos:column="31"/></name> <name pos:line="14" pos:column="32">timeval<pos:position pos:line="14" pos:column="39"/></name></name></type> <name pos:line="14" pos:column="40">tv<pos:position pos:line="14" pos:column="42"/></name></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="15" pos:column="25">fd_set<pos:position pos:line="15" pos:column="31"/></name></type> <name pos:line="15" pos:column="32">fds<pos:position pos:line="15" pos:column="35"/></name></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="16" pos:column="25">FD_ZERO<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><operator pos:line="16" pos:column="33">&amp;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="34">fds<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">FD_SET<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">fd<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="37">fds<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="18" pos:column="25">tv<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">tv_sec<pos:position pos:line="18" pos:column="34"/></name></name> <operator pos:line="18" pos:column="35">=<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="37">select_timeout<pos:position pos:line="18" pos:column="51"/></name></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="19" pos:column="25">tv<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">tv_usec<pos:position pos:line="19" pos:column="35"/></name></name> <operator pos:line="19" pos:column="36">=<pos:position pos:line="19" pos:column="37"/></operator> <literal type="number" pos:line="19" pos:column="38">0<pos:position pos:line="19" pos:column="39"/></literal></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><operator pos:line="20" pos:column="29">!<pos:position pos:line="20" pos:column="30"/></operator><call><name pos:line="20" pos:column="30">select<pos:position pos:line="20" pos:column="36"/></name><argument_list pos:line="20" pos:column="36">(<argument><expr><name pos:line="20" pos:column="37">fd<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">+<pos:position pos:line="20" pos:column="40"/></operator><literal type="number" pos:line="20" pos:column="40">1<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="43">&amp;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="44">fds<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">NULL<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">NULL<pos:position pos:line="20" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="61">&amp;<pos:position pos:line="20" pos:column="66"/></operator><name pos:line="20" pos:column="62">tv<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="66"/></condition><then pos:line="20" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="33">check_timeout<pos:position pos:line="21" pos:column="46"/></name><argument_list pos:line="21" pos:column="46">()<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt></block></then></if>
			<continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">cnt<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">!=<pos:position pos:line="24" pos:column="27"/></operator> <literal type="number" pos:line="24" pos:column="28">1<pos:position pos:line="24" pos:column="29"/></literal></expr>)<pos:position pos:line="24" pos:column="30"/></condition><then pos:line="24" pos:column="30">
			<block type="pseudo"><break pos:line="25" pos:column="25">break;<pos:position pos:line="25" pos:column="31"/></break></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><ternary><condition><expr><name pos:line="26" pos:column="21">nulls<pos:position pos:line="26" pos:column="26"/></name></expr>?<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <expr><operator pos:line="26" pos:column="28">!<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">ch<pos:position pos:line="26" pos:column="31"/></name></expr> <pos:position pos:line="26" pos:column="32"/></then><else pos:line="26" pos:column="32">: <expr><operator pos:line="26" pos:column="34">(<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">ch<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">==<pos:position pos:line="26" pos:column="40"/></operator> <literal type="char" pos:line="26" pos:column="41">'\r'<pos:position pos:line="26" pos:column="45"/></literal> <operator pos:line="26" pos:column="46">||<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="49">ch<pos:position pos:line="26" pos:column="51"/></name> <operator pos:line="26" pos:column="52">==<pos:position pos:line="26" pos:column="54"/></operator> <literal type="char" pos:line="26" pos:column="55">'\n'<pos:position pos:line="26" pos:column="59"/></literal><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator></expr></else></ternary></expr>)<pos:position pos:line="26" pos:column="61"/></condition><then pos:line="26" pos:column="61"> <block pos:line="26" pos:column="62">{
			<comment type="block" pos:line="27" pos:column="25">/* Skip empty lines if reading locally. */</comment>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">reading_remotely<pos:position pos:line="28" pos:column="46"/></name> <operator pos:line="28" pos:column="47">&amp;&amp;<pos:position pos:line="28" pos:column="57"/></operator> <name pos:line="28" pos:column="50">s<pos:position pos:line="28" pos:column="51"/></name> <operator pos:line="28" pos:column="52">==<pos:position pos:line="28" pos:column="54"/></operator> <name pos:line="28" pos:column="55">fname<pos:position pos:line="28" pos:column="60"/></name></expr>)<pos:position pos:line="28" pos:column="61"/></condition><then pos:line="28" pos:column="61">
				<block type="pseudo"><continue pos:line="29" pos:column="33">continue;<pos:position pos:line="29" pos:column="42"/></continue></block></then></if>
			<break pos:line="30" pos:column="25">break;<pos:position pos:line="30" pos:column="31"/></break>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">s<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">&lt;<pos:position pos:line="32" pos:column="27"/></operator> <name pos:line="32" pos:column="25">eob<pos:position pos:line="32" pos:column="28"/></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">s<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">++<pos:position pos:line="33" pos:column="29"/></operator> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">ch<pos:position pos:line="33" pos:column="34"/></name></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">s<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <literal type="char" pos:line="35" pos:column="14">'\0'<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>

	<comment type="block" pos:line="37" pos:column="9">/* Dump comments. */</comment>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">fname<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">==<pos:position pos:line="38" pos:column="22"/></operator> <literal type="char" pos:line="38" pos:column="23">'#'<pos:position pos:line="38" pos:column="26"/></literal> <operator pos:line="38" pos:column="27">||<pos:position pos:line="38" pos:column="29"/></operator> <operator pos:line="38" pos:column="30">*<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">fname<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">==<pos:position pos:line="38" pos:column="39"/></operator> <literal type="char" pos:line="38" pos:column="40">';'<pos:position pos:line="38" pos:column="43"/></literal></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44">
		<block type="pseudo"><goto pos:line="39" pos:column="17">goto <name pos:line="39" pos:column="22">start<pos:position pos:line="39" pos:column="27"/></name>;<pos:position pos:line="39" pos:column="28"/></goto></block></then></if>

	<return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">s<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">-<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">fname<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

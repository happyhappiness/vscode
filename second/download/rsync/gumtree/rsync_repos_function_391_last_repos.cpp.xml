<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_391_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">find_filename_suffix<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">fn<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">fn_len<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">int<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">len_ptr<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">suf<pos:position pos:line="3" pos:column="24"/></name></decl>, <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="27">s<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">BOOL<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">had_tilde<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">s_len<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* One or more dots at the start aren't a suffix. */</comment>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><name pos:line="8" pos:column="16">fn_len<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&amp;&amp;<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">fn<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">==<pos:position pos:line="8" pos:column="32"/></operator> <literal type="char" pos:line="8" pos:column="33">'.'<pos:position pos:line="8" pos:column="36"/></literal></expr>)<pos:position pos:line="8" pos:column="37"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="38">fn<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">++<pos:position pos:line="8" pos:column="42"/></operator></expr><operator pos:line="8" pos:column="42">,<pos:position pos:line="8" pos:column="43"/></operator> <expr><name pos:line="8" pos:column="44">fn_len<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">--<pos:position pos:line="8" pos:column="52"/></operator></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt></block></while>

	<comment type="block" pos:line="10" pos:column="9">/* Ignore the ~ in a "foo~" filename. */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">fn_len<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">&gt;<pos:position pos:line="11" pos:column="24"/></operator> <literal type="number" pos:line="11" pos:column="22">1<pos:position pos:line="11" pos:column="23"/></literal> <operator pos:line="11" pos:column="24">&amp;&amp;<pos:position pos:line="11" pos:column="34"/></operator> <name><name pos:line="11" pos:column="27">fn<pos:position pos:line="11" pos:column="29"/></name><index pos:line="11" pos:column="29">[<expr><name pos:line="11" pos:column="30">fn_len<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-<pos:position pos:line="11" pos:column="37"/></operator><literal type="number" pos:line="11" pos:column="37">1<pos:position pos:line="11" pos:column="38"/></literal></expr>]<pos:position pos:line="11" pos:column="39"/></index></name> <operator pos:line="11" pos:column="40">==<pos:position pos:line="11" pos:column="42"/></operator> <literal type="char" pos:line="11" pos:column="43">'~'<pos:position pos:line="11" pos:column="46"/></literal></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">fn_len<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">--<pos:position pos:line="12" pos:column="25"/></operator></expr><operator pos:line="12" pos:column="25">,<pos:position pos:line="12" pos:column="26"/></operator> <expr><name pos:line="12" pos:column="27">had_tilde<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">=<pos:position pos:line="12" pos:column="38"/></operator> <name pos:line="12" pos:column="39">True<pos:position pos:line="12" pos:column="43"/></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt></block></then>
	<else pos:line="13" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">had_tilde<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">False<pos:position pos:line="14" pos:column="34"/></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="16" pos:column="9">/* Assume we don't find an suffix. */</comment>
	<expr_stmt><expr><name pos:line="17" pos:column="9">suf<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="string" pos:line="17" pos:column="15">""<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">len_ptr<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>

	<comment type="block" pos:line="20" pos:column="9">/* Find the last significant suffix. */</comment>
	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">s<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">fn<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">+<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">fn_len<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></init> <condition><expr><name pos:line="21" pos:column="31">fn_len<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">&gt;<pos:position pos:line="21" pos:column="42"/></operator> <literal type="number" pos:line="21" pos:column="40">1<pos:position pos:line="21" pos:column="41"/></literal></expr>;<pos:position pos:line="21" pos:column="42"/></condition> <incr/>)<pos:position pos:line="21" pos:column="44"/></control> <block pos:line="21" pos:column="45">{
		<while pos:line="22" pos:column="17">while <condition pos:line="22" pos:column="23">(<expr><operator pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">--<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">s<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">!=<pos:position pos:line="22" pos:column="31"/></operator> <literal type="char" pos:line="22" pos:column="32">'.'<pos:position pos:line="22" pos:column="35"/></literal> <operator pos:line="22" pos:column="36">&amp;&amp;<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="39">s<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">!=<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">fn<pos:position pos:line="22" pos:column="46"/></name></expr>)<pos:position pos:line="22" pos:column="47"/></condition> <block pos:line="22" pos:column="48">{}<pos:position pos:line="22" pos:column="50"/></block></while>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">s<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">fn<pos:position pos:line="23" pos:column="28"/></name></expr>)<pos:position pos:line="23" pos:column="29"/></condition><then pos:line="23" pos:column="29">
			<block type="pseudo"><break pos:line="24" pos:column="25">break;<pos:position pos:line="24" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="25" pos:column="17">s_len<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">fn_len<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">-<pos:position pos:line="25" pos:column="33"/></operator> <operator pos:line="25" pos:column="34">(<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">s<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">-<pos:position pos:line="25" pos:column="38"/></operator> <name pos:line="25" pos:column="39">fn<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">)<pos:position pos:line="25" pos:column="42"/></operator></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">fn_len<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">s<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">-<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">fn<pos:position pos:line="26" pos:column="32"/></name></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">s_len<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">==<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="30">4<pos:position pos:line="27" pos:column="31"/></literal></expr>)<pos:position pos:line="27" pos:column="32"/></condition><then pos:line="27" pos:column="32"> <block pos:line="27" pos:column="33">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><call><name pos:line="28" pos:column="29">strcmp<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">s<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">+<pos:position pos:line="28" pos:column="38"/></operator><literal type="number" pos:line="28" pos:column="38">1<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">"bak"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call> <operator pos:line="28" pos:column="48">==<pos:position pos:line="28" pos:column="50"/></operator> <literal type="number" pos:line="28" pos:column="51">0<pos:position pos:line="28" pos:column="52"/></literal>
			 <operator pos:line="29" pos:column="26">||<pos:position pos:line="29" pos:column="28"/></operator> <call><name pos:line="29" pos:column="29">strcmp<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">s<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">+<pos:position pos:line="29" pos:column="38"/></operator><literal type="number" pos:line="29" pos:column="38">1<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="41">"old"<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">==<pos:position pos:line="29" pos:column="50"/></operator> <literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
				<block type="pseudo"><continue pos:line="30" pos:column="33">continue;<pos:position pos:line="30" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></then> <elseif pos:line="31" pos:column="19">else <if pos:line="31" pos:column="24">if <condition pos:line="31" pos:column="27">(<expr><name pos:line="31" pos:column="28">s_len<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">==<pos:position pos:line="31" pos:column="36"/></operator> <literal type="number" pos:line="31" pos:column="37">5<pos:position pos:line="31" pos:column="38"/></literal></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39"> <block pos:line="31" pos:column="40">{
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><call><name pos:line="32" pos:column="29">strcmp<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">s<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">+<pos:position pos:line="32" pos:column="38"/></operator><literal type="number" pos:line="32" pos:column="38">1<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="41">"orig"<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <literal type="number" pos:line="32" pos:column="52">0<pos:position pos:line="32" pos:column="53"/></literal></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54">
				<block type="pseudo"><continue pos:line="33" pos:column="33">continue;<pos:position pos:line="33" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if></elseif> <elseif pos:line="34" pos:column="19">else <if pos:line="34" pos:column="24">if <condition pos:line="34" pos:column="27">(<expr><name pos:line="34" pos:column="28">s_len<pos:position pos:line="34" pos:column="33"/></name> <operator pos:line="34" pos:column="34">&gt;<pos:position pos:line="34" pos:column="38"/></operator> <literal type="number" pos:line="34" pos:column="36">2<pos:position pos:line="34" pos:column="37"/></literal> <operator pos:line="34" pos:column="38">&amp;&amp;<pos:position pos:line="34" pos:column="48"/></operator> <name pos:line="34" pos:column="41">had_tilde<pos:position pos:line="34" pos:column="50"/></name>
		    <operator pos:line="35" pos:column="21">&amp;&amp;<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="24">s<pos:position pos:line="35" pos:column="25"/></name><index pos:line="35" pos:column="25">[<expr><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal></expr>]<pos:position pos:line="35" pos:column="28"/></index></name> <operator pos:line="35" pos:column="29">==<pos:position pos:line="35" pos:column="31"/></operator> <literal type="char" pos:line="35" pos:column="32">'~'<pos:position pos:line="35" pos:column="35"/></literal> <operator pos:line="35" pos:column="36">&amp;&amp;<pos:position pos:line="35" pos:column="46"/></operator> <call><name pos:line="35" pos:column="39">isDigit<pos:position pos:line="35" pos:column="46"/></name><argument_list pos:line="35" pos:column="46">(<argument><expr><name pos:line="35" pos:column="47">s<pos:position pos:line="35" pos:column="48"/></name> <operator pos:line="35" pos:column="49">+<pos:position pos:line="35" pos:column="50"/></operator> <literal type="number" pos:line="35" pos:column="51">2<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="54"/></condition><then pos:line="35" pos:column="54">
			<block type="pseudo"><continue pos:line="36" pos:column="25">continue;<pos:position pos:line="36" pos:column="34"/></continue></block></then></if></elseif></if>
		<expr_stmt><expr><operator pos:line="37" pos:column="17">*<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">len_ptr<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">s_len<pos:position pos:line="37" pos:column="33"/></name></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">suf<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">s<pos:position pos:line="38" pos:column="24"/></name></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">s_len<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">==<pos:position pos:line="39" pos:column="29"/></operator> <literal type="number" pos:line="39" pos:column="30">1<pos:position pos:line="39" pos:column="31"/></literal></expr>)<pos:position pos:line="39" pos:column="32"/></condition><then pos:line="39" pos:column="32">
			<block type="pseudo"><break pos:line="40" pos:column="25">break;<pos:position pos:line="40" pos:column="31"/></break></block></then></if>
		<comment type="block" pos:line="41" pos:column="17">/* Determine if the suffix is all digits. */</comment>
		<for pos:line="42" pos:column="17">for <control pos:line="42" pos:column="21">(<init><expr><name pos:line="42" pos:column="22">s<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">++<pos:position pos:line="42" pos:column="25"/></operator></expr><operator pos:line="42" pos:column="25">,<pos:position pos:line="42" pos:column="26"/></operator> <expr><name pos:line="42" pos:column="27">s_len<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">--<pos:position pos:line="42" pos:column="34"/></operator></expr>;<pos:position pos:line="42" pos:column="35"/></init> <condition><expr><name pos:line="42" pos:column="36">s_len<pos:position pos:line="42" pos:column="41"/></name> <operator pos:line="42" pos:column="42">&gt;<pos:position pos:line="42" pos:column="46"/></operator> <literal type="number" pos:line="42" pos:column="44">0<pos:position pos:line="42" pos:column="45"/></literal></expr>;<pos:position pos:line="42" pos:column="46"/></condition> <incr><expr><name pos:line="42" pos:column="47">s<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">++<pos:position pos:line="42" pos:column="50"/></operator></expr><operator pos:line="42" pos:column="50">,<pos:position pos:line="42" pos:column="51"/></operator> <expr><name pos:line="42" pos:column="52">s_len<pos:position pos:line="42" pos:column="57"/></name><operator pos:line="42" pos:column="57">--<pos:position pos:line="42" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="60"/></control> <block pos:line="42" pos:column="61">{
			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><operator pos:line="43" pos:column="29">!<pos:position pos:line="43" pos:column="30"/></operator><call><name pos:line="43" pos:column="30">isDigit<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">s<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41">
				<block type="pseudo"><return pos:line="44" pos:column="33">return <expr><name pos:line="44" pos:column="40">suf<pos:position pos:line="44" pos:column="43"/></name></expr>;<pos:position pos:line="44" pos:column="44"/></return></block></then></if>
		}<pos:position pos:line="45" pos:column="18"/></block></for>
		<comment type="block" pos:line="46" pos:column="17">/* An all-digit suffix may not be that signficant. */</comment>
		<expr_stmt><expr><name pos:line="47" pos:column="17">s<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="21">suf<pos:position pos:line="47" pos:column="24"/></name></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></for>

	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">suf<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

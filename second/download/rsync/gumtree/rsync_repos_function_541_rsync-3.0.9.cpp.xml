<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_541_rsync-3.0.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">server_options<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier><modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">args<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">argc_p<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">char<pos:position pos:line="3" pos:column="20"/></name></type> <name><name pos:line="3" pos:column="21">argstr<pos:position pos:line="3" pos:column="27"/></name><index pos:line="3" pos:column="27">[<expr><literal type="number" pos:line="3" pos:column="28">64<pos:position pos:line="3" pos:column="30"/></literal></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ac<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><operator pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">argc_p<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">arg<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">x<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* This should always remain first on the server's command-line. */</comment>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">args<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">ac<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">++<pos:position pos:line="9" pos:column="18"/></operator></expr>]<pos:position pos:line="9" pos:column="19"/></index></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <literal type="string" pos:line="9" pos:column="22">"--server"<pos:position pos:line="9" pos:column="32"/></literal></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">daemon_over_rsh<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&gt;<pos:position pos:line="11" pos:column="33"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">args<pos:position pos:line="12" pos:column="21"/></name><index pos:line="12" pos:column="21">[<expr><name pos:line="12" pos:column="22">ac<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">++<pos:position pos:line="12" pos:column="26"/></operator></expr>]<pos:position pos:line="12" pos:column="27"/></index></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <literal type="string" pos:line="12" pos:column="30">"--daemon"<pos:position pos:line="12" pos:column="40"/></literal></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">argc_p<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">ac<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
		<comment type="block" pos:line="14" pos:column="17">/* if we're passing --daemon, we're done */</comment>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">am_sender<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">args<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><name pos:line="19" pos:column="22">ac<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">++<pos:position pos:line="19" pos:column="26"/></operator></expr>]<pos:position pos:line="19" pos:column="27"/></index></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <literal type="string" pos:line="19" pos:column="30">"--sender"<pos:position pos:line="19" pos:column="40"/></literal></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">x<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">argstr<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>]<pos:position pos:line="22" pos:column="18"/></index></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="char" pos:line="22" pos:column="21">'-'<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">protect_args<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="17">argstr<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><name pos:line="25" pos:column="24">x<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">++<pos:position pos:line="25" pos:column="27"/></operator></expr>]<pos:position pos:line="25" pos:column="28"/></index></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <literal type="char" pos:line="25" pos:column="31">'s'<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt></block></then></if>

	<for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">(<init><expr><name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">i<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="25">verbose<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></condition> <incr><expr><name pos:line="27" pos:column="34">i<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">++<pos:position pos:line="27" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="38"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="17">argstr<pos:position pos:line="28" pos:column="23"/></name><index pos:line="28" pos:column="23">[<expr><name pos:line="28" pos:column="24">x<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">++<pos:position pos:line="28" pos:column="27"/></operator></expr>]<pos:position pos:line="28" pos:column="28"/></index></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <literal type="char" pos:line="28" pos:column="31">'v'<pos:position pos:line="28" pos:column="34"/></literal></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt></block></for>

	<comment type="block" pos:line="30" pos:column="9">/* the -q option is intentionally left out */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">make_backups<pos:position pos:line="31" pos:column="25"/></name></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="17">argstr<pos:position pos:line="32" pos:column="23"/></name><index pos:line="32" pos:column="23">[<expr><name pos:line="32" pos:column="24">x<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">++<pos:position pos:line="32" pos:column="27"/></operator></expr>]<pos:position pos:line="32" pos:column="28"/></index></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <literal type="char" pos:line="32" pos:column="31">'b'<pos:position pos:line="32" pos:column="34"/></literal></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">update_only<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="17">argstr<pos:position pos:line="34" pos:column="23"/></name><index pos:line="34" pos:column="23">[<expr><name pos:line="34" pos:column="24">x<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">++<pos:position pos:line="34" pos:column="27"/></operator></expr>]<pos:position pos:line="34" pos:column="28"/></index></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="char" pos:line="34" pos:column="31">'u'<pos:position pos:line="34" pos:column="34"/></literal></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">do_xfers<pos:position pos:line="35" pos:column="22"/></name></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <comment type="block" pos:line="35" pos:column="24">/* Note: NOT "dry_run"! */</comment>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="17">argstr<pos:position pos:line="36" pos:column="23"/></name><index pos:line="36" pos:column="23">[<expr><name pos:line="36" pos:column="24">x<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">++<pos:position pos:line="36" pos:column="27"/></operator></expr>]<pos:position pos:line="36" pos:column="28"/></index></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <literal type="char" pos:line="36" pos:column="31">'n'<pos:position pos:line="36" pos:column="34"/></literal></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">preserve_links<pos:position pos:line="37" pos:column="27"/></name></expr>)<pos:position pos:line="37" pos:column="28"/></condition><then pos:line="37" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="17">argstr<pos:position pos:line="38" pos:column="23"/></name><index pos:line="38" pos:column="23">[<expr><name pos:line="38" pos:column="24">x<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">++<pos:position pos:line="38" pos:column="27"/></operator></expr>]<pos:position pos:line="38" pos:column="28"/></index></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <literal type="char" pos:line="38" pos:column="31">'l'<pos:position pos:line="38" pos:column="34"/></literal></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">xfer_dirs<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">&gt;=<pos:position pos:line="39" pos:column="29"/></operator> <literal type="number" pos:line="39" pos:column="27">2<pos:position pos:line="39" pos:column="28"/></literal> <operator pos:line="39" pos:column="29">&amp;&amp;<pos:position pos:line="39" pos:column="39"/></operator> <name pos:line="39" pos:column="32">xfer_dirs<pos:position pos:line="39" pos:column="41"/></name> <operator pos:line="39" pos:column="42">&lt;<pos:position pos:line="39" pos:column="46"/></operator> <literal type="number" pos:line="39" pos:column="44">4<pos:position pos:line="39" pos:column="45"/></literal><operator pos:line="39" pos:column="45">)<pos:position pos:line="39" pos:column="46"/></operator>
	 <operator pos:line="40" pos:column="10">||<pos:position pos:line="40" pos:column="12"/></operator> <operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">xfer_dirs<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">&amp;&amp;<pos:position pos:line="40" pos:column="34"/></operator> <operator pos:line="40" pos:column="27">!<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">recurse<pos:position pos:line="40" pos:column="35"/></name> <operator pos:line="40" pos:column="36">&amp;&amp;<pos:position pos:line="40" pos:column="46"/></operator> <operator pos:line="40" pos:column="39">(<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="40">list_only<pos:position pos:line="40" pos:column="49"/></name> <operator pos:line="40" pos:column="50">||<pos:position pos:line="40" pos:column="52"/></operator> <operator pos:line="40" pos:column="53">(<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="54">delete_mode<pos:position pos:line="40" pos:column="65"/></name> <operator pos:line="40" pos:column="66">&amp;&amp;<pos:position pos:line="40" pos:column="76"/></operator> <name pos:line="40" pos:column="69">am_sender<pos:position pos:line="40" pos:column="78"/></name><operator pos:line="40" pos:column="78">)<pos:position pos:line="40" pos:column="79"/></operator><operator pos:line="40" pos:column="79">)<pos:position pos:line="40" pos:column="80"/></operator><operator pos:line="40" pos:column="80">)<pos:position pos:line="40" pos:column="81"/></operator></expr>)<pos:position pos:line="40" pos:column="82"/></condition><then pos:line="40" pos:column="82">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="17">argstr<pos:position pos:line="41" pos:column="23"/></name><index pos:line="41" pos:column="23">[<expr><name pos:line="41" pos:column="24">x<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">++<pos:position pos:line="41" pos:column="27"/></operator></expr>]<pos:position pos:line="41" pos:column="28"/></index></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <literal type="char" pos:line="41" pos:column="31">'d'<pos:position pos:line="41" pos:column="34"/></literal></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">am_sender<pos:position pos:line="42" pos:column="22"/></name></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">keep_dirlinks<pos:position pos:line="43" pos:column="34"/></name></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="25">argstr<pos:position pos:line="44" pos:column="31"/></name><index pos:line="44" pos:column="31">[<expr><name pos:line="44" pos:column="32">x<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">++<pos:position pos:line="44" pos:column="35"/></operator></expr>]<pos:position pos:line="44" pos:column="36"/></index></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <literal type="char" pos:line="44" pos:column="39">'K'<pos:position pos:line="44" pos:column="42"/></literal></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">prune_empty_dirs<pos:position pos:line="45" pos:column="37"/></name></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="46" pos:column="25">argstr<pos:position pos:line="46" pos:column="31"/></name><index pos:line="46" pos:column="31">[<expr><name pos:line="46" pos:column="32">x<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">++<pos:position pos:line="46" pos:column="35"/></operator></expr>]<pos:position pos:line="46" pos:column="36"/></index></name> <operator pos:line="46" pos:column="37">=<pos:position pos:line="46" pos:column="38"/></operator> <literal type="char" pos:line="46" pos:column="39">'m'<pos:position pos:line="46" pos:column="42"/></literal></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">omit_dir_times<pos:position pos:line="47" pos:column="35"/></name></expr>)<pos:position pos:line="47" pos:column="36"/></condition><then pos:line="47" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="25">argstr<pos:position pos:line="48" pos:column="31"/></name><index pos:line="48" pos:column="31">[<expr><name pos:line="48" pos:column="32">x<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">++<pos:position pos:line="48" pos:column="35"/></operator></expr>]<pos:position pos:line="48" pos:column="36"/></index></name> <operator pos:line="48" pos:column="37">=<pos:position pos:line="48" pos:column="38"/></operator> <literal type="char" pos:line="48" pos:column="39">'O'<pos:position pos:line="48" pos:column="42"/></literal></expr>;<pos:position pos:line="48" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="49" pos:column="10"/></block></then> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">copy_links<pos:position pos:line="50" pos:column="31"/></name></expr>)<pos:position pos:line="50" pos:column="32"/></condition><then pos:line="50" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="51" pos:column="25">argstr<pos:position pos:line="51" pos:column="31"/></name><index pos:line="51" pos:column="31">[<expr><name pos:line="51" pos:column="32">x<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">++<pos:position pos:line="51" pos:column="35"/></operator></expr>]<pos:position pos:line="51" pos:column="36"/></index></name> <operator pos:line="51" pos:column="37">=<pos:position pos:line="51" pos:column="38"/></operator> <literal type="char" pos:line="51" pos:column="39">'L'<pos:position pos:line="51" pos:column="42"/></literal></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt></block></then></if>
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">copy_dirlinks<pos:position pos:line="52" pos:column="34"/></name></expr>)<pos:position pos:line="52" pos:column="35"/></condition><then pos:line="52" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="25">argstr<pos:position pos:line="53" pos:column="31"/></name><index pos:line="53" pos:column="31">[<expr><name pos:line="53" pos:column="32">x<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">++<pos:position pos:line="53" pos:column="35"/></operator></expr>]<pos:position pos:line="53" pos:column="36"/></index></name> <operator pos:line="53" pos:column="37">=<pos:position pos:line="53" pos:column="38"/></operator> <literal type="char" pos:line="53" pos:column="39">'k'<pos:position pos:line="53" pos:column="42"/></literal></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="54" pos:column="10"/></block></else></if>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">whole_file<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">&gt;<pos:position pos:line="56" pos:column="28"/></operator> <literal type="number" pos:line="56" pos:column="26">0<pos:position pos:line="56" pos:column="27"/></literal></expr>)<pos:position pos:line="56" pos:column="28"/></condition><then pos:line="56" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="17">argstr<pos:position pos:line="57" pos:column="23"/></name><index pos:line="57" pos:column="23">[<expr><name pos:line="57" pos:column="24">x<pos:position pos:line="57" pos:column="25"/></name><operator pos:line="57" pos:column="25">++<pos:position pos:line="57" pos:column="27"/></operator></expr>]<pos:position pos:line="57" pos:column="28"/></index></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <literal type="char" pos:line="57" pos:column="31">'W'<pos:position pos:line="57" pos:column="34"/></literal></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="58" pos:column="9">/* We don't need to send --no-whole-file, because it's the
	 * default for remote transfers, and in any case old versions
	 * of rsync will not understand it. */</comment>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">preserve_hard_links<pos:position pos:line="62" pos:column="32"/></name></expr>)<pos:position pos:line="62" pos:column="33"/></condition><then pos:line="62" pos:column="33"> <block pos:line="62" pos:column="34">{
		<expr_stmt><expr><name><name pos:line="63" pos:column="17">argstr<pos:position pos:line="63" pos:column="23"/></name><index pos:line="63" pos:column="23">[<expr><name pos:line="63" pos:column="24">x<pos:position pos:line="63" pos:column="25"/></name><operator pos:line="63" pos:column="25">++<pos:position pos:line="63" pos:column="27"/></operator></expr>]<pos:position pos:line="63" pos:column="28"/></index></name> <operator pos:line="63" pos:column="29">=<pos:position pos:line="63" pos:column="30"/></operator> <literal type="char" pos:line="63" pos:column="31">'H'<pos:position pos:line="63" pos:column="34"/></literal></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">preserve_hard_links<pos:position pos:line="64" pos:column="40"/></name> <operator pos:line="64" pos:column="41">&gt;<pos:position pos:line="64" pos:column="45"/></operator> <literal type="number" pos:line="64" pos:column="43">1<pos:position pos:line="64" pos:column="44"/></literal></expr>)<pos:position pos:line="64" pos:column="45"/></condition><then pos:line="64" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="25">argstr<pos:position pos:line="65" pos:column="31"/></name><index pos:line="65" pos:column="31">[<expr><name pos:line="65" pos:column="32">x<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">++<pos:position pos:line="65" pos:column="35"/></operator></expr>]<pos:position pos:line="65" pos:column="36"/></index></name> <operator pos:line="65" pos:column="37">=<pos:position pos:line="65" pos:column="38"/></operator> <literal type="char" pos:line="65" pos:column="39">'H'<pos:position pos:line="65" pos:column="42"/></literal></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">preserve_uid<pos:position pos:line="67" pos:column="25"/></name></expr>)<pos:position pos:line="67" pos:column="26"/></condition><then pos:line="67" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="17">argstr<pos:position pos:line="68" pos:column="23"/></name><index pos:line="68" pos:column="23">[<expr><name pos:line="68" pos:column="24">x<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">++<pos:position pos:line="68" pos:column="27"/></operator></expr>]<pos:position pos:line="68" pos:column="28"/></index></name> <operator pos:line="68" pos:column="29">=<pos:position pos:line="68" pos:column="30"/></operator> <literal type="char" pos:line="68" pos:column="31">'o'<pos:position pos:line="68" pos:column="34"/></literal></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">preserve_gid<pos:position pos:line="69" pos:column="25"/></name></expr>)<pos:position pos:line="69" pos:column="26"/></condition><then pos:line="69" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="17">argstr<pos:position pos:line="70" pos:column="23"/></name><index pos:line="70" pos:column="23">[<expr><name pos:line="70" pos:column="24">x<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">++<pos:position pos:line="70" pos:column="27"/></operator></expr>]<pos:position pos:line="70" pos:column="28"/></index></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <literal type="char" pos:line="70" pos:column="31">'g'<pos:position pos:line="70" pos:column="34"/></literal></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">preserve_devices<pos:position pos:line="71" pos:column="29"/></name></expr>)<pos:position pos:line="71" pos:column="30"/></condition><then pos:line="71" pos:column="30"> <comment type="block" pos:line="71" pos:column="31">/* ignore preserve_specials here */</comment>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="17">argstr<pos:position pos:line="72" pos:column="23"/></name><index pos:line="72" pos:column="23">[<expr><name pos:line="72" pos:column="24">x<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">++<pos:position pos:line="72" pos:column="27"/></operator></expr>]<pos:position pos:line="72" pos:column="28"/></index></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <literal type="char" pos:line="72" pos:column="31">'D'<pos:position pos:line="72" pos:column="34"/></literal></expr>;<pos:position pos:line="72" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">preserve_times<pos:position pos:line="73" pos:column="27"/></name></expr>)<pos:position pos:line="73" pos:column="28"/></condition><then pos:line="73" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="74" pos:column="17">argstr<pos:position pos:line="74" pos:column="23"/></name><index pos:line="74" pos:column="23">[<expr><name pos:line="74" pos:column="24">x<pos:position pos:line="74" pos:column="25"/></name><operator pos:line="74" pos:column="25">++<pos:position pos:line="74" pos:column="27"/></operator></expr>]<pos:position pos:line="74" pos:column="28"/></index></name> <operator pos:line="74" pos:column="29">=<pos:position pos:line="74" pos:column="30"/></operator> <literal type="char" pos:line="74" pos:column="31">'t'<pos:position pos:line="74" pos:column="34"/></literal></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">preserve_perms<pos:position pos:line="75" pos:column="27"/></name></expr>)<pos:position pos:line="75" pos:column="28"/></condition><then pos:line="75" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="76" pos:column="17">argstr<pos:position pos:line="76" pos:column="23"/></name><index pos:line="76" pos:column="23">[<expr><name pos:line="76" pos:column="24">x<pos:position pos:line="76" pos:column="25"/></name><operator pos:line="76" pos:column="25">++<pos:position pos:line="76" pos:column="27"/></operator></expr>]<pos:position pos:line="76" pos:column="28"/></index></name> <operator pos:line="76" pos:column="29">=<pos:position pos:line="76" pos:column="30"/></operator> <literal type="char" pos:line="76" pos:column="31">'p'<pos:position pos:line="76" pos:column="34"/></literal></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt></block></then>
	<elseif pos:line="77" pos:column="9">else <if pos:line="77" pos:column="14">if <condition pos:line="77" pos:column="17">(<expr><name pos:line="77" pos:column="18">preserve_executability<pos:position pos:line="77" pos:column="40"/></name> <operator pos:line="77" pos:column="41">&amp;&amp;<pos:position pos:line="77" pos:column="51"/></operator> <name pos:line="77" pos:column="44">am_sender<pos:position pos:line="77" pos:column="53"/></name></expr>)<pos:position pos:line="77" pos:column="54"/></condition><then pos:line="77" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="78" pos:column="17">argstr<pos:position pos:line="78" pos:column="23"/></name><index pos:line="78" pos:column="23">[<expr><name pos:line="78" pos:column="24">x<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">++<pos:position pos:line="78" pos:column="27"/></operator></expr>]<pos:position pos:line="78" pos:column="28"/></index></name> <operator pos:line="78" pos:column="29">=<pos:position pos:line="78" pos:column="30"/></operator> <literal type="char" pos:line="78" pos:column="31">'E'<pos:position pos:line="78" pos:column="34"/></literal></expr>;<pos:position pos:line="78" pos:column="35"/></expr_stmt></block></then></if></elseif></if>
<cpp:ifdef pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">ifdef<pos:position pos:line="79" pos:column="7"/></cpp:directive> <name pos:line="79" pos:column="8">SUPPORT_ACLS<pos:position pos:line="79" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">preserve_acls<pos:position pos:line="80" pos:column="26"/></name></expr>)<pos:position pos:line="80" pos:column="27"/></condition><then pos:line="80" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="17">argstr<pos:position pos:line="81" pos:column="23"/></name><index pos:line="81" pos:column="23">[<expr><name pos:line="81" pos:column="24">x<pos:position pos:line="81" pos:column="25"/></name><operator pos:line="81" pos:column="25">++<pos:position pos:line="81" pos:column="27"/></operator></expr>]<pos:position pos:line="81" pos:column="28"/></index></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <literal type="char" pos:line="81" pos:column="31">'A'<pos:position pos:line="81" pos:column="34"/></literal></expr>;<pos:position pos:line="81" pos:column="35"/></expr_stmt></block></then></if>
<cpp:endif pos:line="82" pos:column="1">#<cpp:directive pos:line="82" pos:column="2">endif<pos:position pos:line="82" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">ifdef<pos:position pos:line="83" pos:column="7"/></cpp:directive> <name pos:line="83" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="83" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">preserve_xattrs<pos:position pos:line="84" pos:column="28"/></name></expr>)<pos:position pos:line="84" pos:column="29"/></condition><then pos:line="84" pos:column="29"> <block pos:line="84" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="85" pos:column="17">argstr<pos:position pos:line="85" pos:column="23"/></name><index pos:line="85" pos:column="23">[<expr><name pos:line="85" pos:column="24">x<pos:position pos:line="85" pos:column="25"/></name><operator pos:line="85" pos:column="25">++<pos:position pos:line="85" pos:column="27"/></operator></expr>]<pos:position pos:line="85" pos:column="28"/></index></name> <operator pos:line="85" pos:column="29">=<pos:position pos:line="85" pos:column="30"/></operator> <literal type="char" pos:line="85" pos:column="31">'X'<pos:position pos:line="85" pos:column="34"/></literal></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">preserve_xattrs<pos:position pos:line="86" pos:column="36"/></name> <operator pos:line="86" pos:column="37">&gt;<pos:position pos:line="86" pos:column="41"/></operator> <literal type="number" pos:line="86" pos:column="39">1<pos:position pos:line="86" pos:column="40"/></literal></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="87" pos:column="25">argstr<pos:position pos:line="87" pos:column="31"/></name><index pos:line="87" pos:column="31">[<expr><name pos:line="87" pos:column="32">x<pos:position pos:line="87" pos:column="33"/></name><operator pos:line="87" pos:column="33">++<pos:position pos:line="87" pos:column="35"/></operator></expr>]<pos:position pos:line="87" pos:column="36"/></index></name> <operator pos:line="87" pos:column="37">=<pos:position pos:line="87" pos:column="38"/></operator> <literal type="char" pos:line="87" pos:column="39">'X'<pos:position pos:line="87" pos:column="42"/></literal></expr>;<pos:position pos:line="87" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="88" pos:column="10"/></block></then></if>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name pos:line="90" pos:column="13">recurse<pos:position pos:line="90" pos:column="20"/></name></expr>)<pos:position pos:line="90" pos:column="21"/></condition><then pos:line="90" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="91" pos:column="17">argstr<pos:position pos:line="91" pos:column="23"/></name><index pos:line="91" pos:column="23">[<expr><name pos:line="91" pos:column="24">x<pos:position pos:line="91" pos:column="25"/></name><operator pos:line="91" pos:column="25">++<pos:position pos:line="91" pos:column="27"/></operator></expr>]<pos:position pos:line="91" pos:column="28"/></index></name> <operator pos:line="91" pos:column="29">=<pos:position pos:line="91" pos:column="30"/></operator> <literal type="char" pos:line="91" pos:column="31">'r'<pos:position pos:line="91" pos:column="34"/></literal></expr>;<pos:position pos:line="91" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">always_checksum<pos:position pos:line="92" pos:column="28"/></name></expr>)<pos:position pos:line="92" pos:column="29"/></condition><then pos:line="92" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="93" pos:column="17">argstr<pos:position pos:line="93" pos:column="23"/></name><index pos:line="93" pos:column="23">[<expr><name pos:line="93" pos:column="24">x<pos:position pos:line="93" pos:column="25"/></name><operator pos:line="93" pos:column="25">++<pos:position pos:line="93" pos:column="27"/></operator></expr>]<pos:position pos:line="93" pos:column="28"/></index></name> <operator pos:line="93" pos:column="29">=<pos:position pos:line="93" pos:column="30"/></operator> <literal type="char" pos:line="93" pos:column="31">'c'<pos:position pos:line="93" pos:column="34"/></literal></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">cvs_exclude<pos:position pos:line="94" pos:column="24"/></name></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="17">argstr<pos:position pos:line="95" pos:column="23"/></name><index pos:line="95" pos:column="23">[<expr><name pos:line="95" pos:column="24">x<pos:position pos:line="95" pos:column="25"/></name><operator pos:line="95" pos:column="25">++<pos:position pos:line="95" pos:column="27"/></operator></expr>]<pos:position pos:line="95" pos:column="28"/></index></name> <operator pos:line="95" pos:column="29">=<pos:position pos:line="95" pos:column="30"/></operator> <literal type="char" pos:line="95" pos:column="31">'C'<pos:position pos:line="95" pos:column="34"/></literal></expr>;<pos:position pos:line="95" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">ignore_times<pos:position pos:line="96" pos:column="25"/></name></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="97" pos:column="17">argstr<pos:position pos:line="97" pos:column="23"/></name><index pos:line="97" pos:column="23">[<expr><name pos:line="97" pos:column="24">x<pos:position pos:line="97" pos:column="25"/></name><operator pos:line="97" pos:column="25">++<pos:position pos:line="97" pos:column="27"/></operator></expr>]<pos:position pos:line="97" pos:column="28"/></index></name> <operator pos:line="97" pos:column="29">=<pos:position pos:line="97" pos:column="30"/></operator> <literal type="char" pos:line="97" pos:column="31">'I'<pos:position pos:line="97" pos:column="34"/></literal></expr>;<pos:position pos:line="97" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">relative_paths<pos:position pos:line="98" pos:column="27"/></name></expr>)<pos:position pos:line="98" pos:column="28"/></condition><then pos:line="98" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="99" pos:column="17">argstr<pos:position pos:line="99" pos:column="23"/></name><index pos:line="99" pos:column="23">[<expr><name pos:line="99" pos:column="24">x<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">++<pos:position pos:line="99" pos:column="27"/></operator></expr>]<pos:position pos:line="99" pos:column="28"/></index></name> <operator pos:line="99" pos:column="29">=<pos:position pos:line="99" pos:column="30"/></operator> <literal type="char" pos:line="99" pos:column="31">'R'<pos:position pos:line="99" pos:column="34"/></literal></expr>;<pos:position pos:line="99" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">one_file_system<pos:position pos:line="100" pos:column="28"/></name></expr>)<pos:position pos:line="100" pos:column="29"/></condition><then pos:line="100" pos:column="29"> <block pos:line="100" pos:column="30">{
		<expr_stmt><expr><name><name pos:line="101" pos:column="17">argstr<pos:position pos:line="101" pos:column="23"/></name><index pos:line="101" pos:column="23">[<expr><name pos:line="101" pos:column="24">x<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">++<pos:position pos:line="101" pos:column="27"/></operator></expr>]<pos:position pos:line="101" pos:column="28"/></index></name> <operator pos:line="101" pos:column="29">=<pos:position pos:line="101" pos:column="30"/></operator> <literal type="char" pos:line="101" pos:column="31">'x'<pos:position pos:line="101" pos:column="34"/></literal></expr>;<pos:position pos:line="101" pos:column="35"/></expr_stmt>
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">one_file_system<pos:position pos:line="102" pos:column="36"/></name> <operator pos:line="102" pos:column="37">&gt;<pos:position pos:line="102" pos:column="41"/></operator> <literal type="number" pos:line="102" pos:column="39">1<pos:position pos:line="102" pos:column="40"/></literal></expr>)<pos:position pos:line="102" pos:column="41"/></condition><then pos:line="102" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="103" pos:column="25">argstr<pos:position pos:line="103" pos:column="31"/></name><index pos:line="103" pos:column="31">[<expr><name pos:line="103" pos:column="32">x<pos:position pos:line="103" pos:column="33"/></name><operator pos:line="103" pos:column="33">++<pos:position pos:line="103" pos:column="35"/></operator></expr>]<pos:position pos:line="103" pos:column="36"/></index></name> <operator pos:line="103" pos:column="37">=<pos:position pos:line="103" pos:column="38"/></operator> <literal type="char" pos:line="103" pos:column="39">'x'<pos:position pos:line="103" pos:column="42"/></literal></expr>;<pos:position pos:line="103" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>
	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">sparse_files<pos:position pos:line="105" pos:column="25"/></name></expr>)<pos:position pos:line="105" pos:column="26"/></condition><then pos:line="105" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="17">argstr<pos:position pos:line="106" pos:column="23"/></name><index pos:line="106" pos:column="23">[<expr><name pos:line="106" pos:column="24">x<pos:position pos:line="106" pos:column="25"/></name><operator pos:line="106" pos:column="25">++<pos:position pos:line="106" pos:column="27"/></operator></expr>]<pos:position pos:line="106" pos:column="28"/></index></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <literal type="char" pos:line="106" pos:column="31">'S'<pos:position pos:line="106" pos:column="34"/></literal></expr>;<pos:position pos:line="106" pos:column="35"/></expr_stmt></block></then></if>
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">do_compression<pos:position pos:line="107" pos:column="27"/></name></expr>)<pos:position pos:line="107" pos:column="28"/></condition><then pos:line="107" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="108" pos:column="17">argstr<pos:position pos:line="108" pos:column="23"/></name><index pos:line="108" pos:column="23">[<expr><name pos:line="108" pos:column="24">x<pos:position pos:line="108" pos:column="25"/></name><operator pos:line="108" pos:column="25">++<pos:position pos:line="108" pos:column="27"/></operator></expr>]<pos:position pos:line="108" pos:column="28"/></index></name> <operator pos:line="108" pos:column="29">=<pos:position pos:line="108" pos:column="30"/></operator> <literal type="char" pos:line="108" pos:column="31">'z'<pos:position pos:line="108" pos:column="34"/></literal></expr>;<pos:position pos:line="108" pos:column="35"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="110" pos:column="9">set_allow_inc_recurse<pos:position pos:line="110" pos:column="30"/></name><argument_list pos:line="110" pos:column="30">()<pos:position pos:line="110" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="33"/></expr_stmt>

	<comment type="block" pos:line="112" pos:column="9">/* Checking the pre-negotiated value allows --protocol=29 override. */</comment>
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">protocol_version<pos:position pos:line="113" pos:column="29"/></name> <operator pos:line="113" pos:column="30">&gt;=<pos:position pos:line="113" pos:column="35"/></operator> <literal type="number" pos:line="113" pos:column="33">30<pos:position pos:line="113" pos:column="35"/></literal></expr>)<pos:position pos:line="113" pos:column="36"/></condition><then pos:line="113" pos:column="36"> <block pos:line="113" pos:column="37">{
		<comment type="block" pos:line="114" pos:column="17">/* We make use of the -e option to let the server know about
		 * any pre-release protocol version &amp;&amp; some behavior flags. */</comment>
		<expr_stmt><expr><name><name pos:line="116" pos:column="17">argstr<pos:position pos:line="116" pos:column="23"/></name><index pos:line="116" pos:column="23">[<expr><name pos:line="116" pos:column="24">x<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">++<pos:position pos:line="116" pos:column="27"/></operator></expr>]<pos:position pos:line="116" pos:column="28"/></index></name> <operator pos:line="116" pos:column="29">=<pos:position pos:line="116" pos:column="30"/></operator> <literal type="char" pos:line="116" pos:column="31">'e'<pos:position pos:line="116" pos:column="34"/></literal></expr>;<pos:position pos:line="116" pos:column="35"/></expr_stmt>
<cpp:if pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">if<pos:position pos:line="117" pos:column="4"/></cpp:directive> <expr><name pos:line="117" pos:column="5">SUBPROTOCOL_VERSION<pos:position pos:line="117" pos:column="24"/></name> <operator pos:line="117" pos:column="25">!=<pos:position pos:line="117" pos:column="27"/></operator> <literal type="number" pos:line="117" pos:column="28">0<pos:position pos:line="117" pos:column="29"/></literal></expr></cpp:if>
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><name pos:line="118" pos:column="21">protocol_version<pos:position pos:line="118" pos:column="37"/></name> <operator pos:line="118" pos:column="38">==<pos:position pos:line="118" pos:column="40"/></operator> <name pos:line="118" pos:column="41">PROTOCOL_VERSION<pos:position pos:line="118" pos:column="57"/></name></expr>)<pos:position pos:line="118" pos:column="58"/></condition><then pos:line="118" pos:column="58"> <block pos:line="118" pos:column="59">{
			<expr_stmt><expr><name pos:line="119" pos:column="25">x<pos:position pos:line="119" pos:column="26"/></name> <operator pos:line="119" pos:column="27">+=<pos:position pos:line="119" pos:column="29"/></operator> <call><name pos:line="119" pos:column="30">snprintf<pos:position pos:line="119" pos:column="38"/></name><argument_list pos:line="119" pos:column="38">(<argument><expr><name pos:line="119" pos:column="39">argstr<pos:position pos:line="119" pos:column="45"/></name><operator pos:line="119" pos:column="45">+<pos:position pos:line="119" pos:column="46"/></operator><name pos:line="119" pos:column="46">x<pos:position pos:line="119" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="119" pos:column="49">sizeof <name pos:line="119" pos:column="56">argstr<pos:position pos:line="119" pos:column="62"/></name></sizeof> <operator pos:line="119" pos:column="63">-<pos:position pos:line="119" pos:column="64"/></operator> <name pos:line="119" pos:column="65">x<pos:position pos:line="119" pos:column="66"/></name></expr></argument>,
				      <argument><expr><literal type="string" pos:line="120" pos:column="39">"%d.%d"<pos:position pos:line="120" pos:column="46"/></literal></expr></argument>,
				      <argument><expr><name pos:line="121" pos:column="39">PROTOCOL_VERSION<pos:position pos:line="121" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="57">SUBPROTOCOL_VERSION<pos:position pos:line="121" pos:column="76"/></name></expr></argument>)<pos:position pos:line="121" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="122" pos:column="18"/></block></then> <else pos:line="122" pos:column="19">else
<cpp:endif pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">endif<pos:position pos:line="123" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="25">argstr<pos:position pos:line="124" pos:column="31"/></name><index pos:line="124" pos:column="31">[<expr><name pos:line="124" pos:column="32">x<pos:position pos:line="124" pos:column="33"/></name><operator pos:line="124" pos:column="33">++<pos:position pos:line="124" pos:column="35"/></operator></expr>]<pos:position pos:line="124" pos:column="36"/></index></name> <operator pos:line="124" pos:column="37">=<pos:position pos:line="124" pos:column="38"/></operator> <literal type="char" pos:line="124" pos:column="39">'.'<pos:position pos:line="124" pos:column="42"/></literal></expr>;<pos:position pos:line="124" pos:column="43"/></expr_stmt></block></else></if>
		<if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><name pos:line="125" pos:column="21">allow_inc_recurse<pos:position pos:line="125" pos:column="38"/></name></expr>)<pos:position pos:line="125" pos:column="39"/></condition><then pos:line="125" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="126" pos:column="25">argstr<pos:position pos:line="126" pos:column="31"/></name><index pos:line="126" pos:column="31">[<expr><name pos:line="126" pos:column="32">x<pos:position pos:line="126" pos:column="33"/></name><operator pos:line="126" pos:column="33">++<pos:position pos:line="126" pos:column="35"/></operator></expr>]<pos:position pos:line="126" pos:column="36"/></index></name> <operator pos:line="126" pos:column="37">=<pos:position pos:line="126" pos:column="38"/></operator> <literal type="char" pos:line="126" pos:column="39">'i'<pos:position pos:line="126" pos:column="42"/></literal></expr>;<pos:position pos:line="126" pos:column="43"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">ifdef<pos:position pos:line="127" pos:column="7"/></cpp:directive> <name pos:line="127" pos:column="8">CAN_SET_SYMLINK_TIMES<pos:position pos:line="127" pos:column="29"/></name></cpp:ifdef>
		<expr_stmt><expr><name><name pos:line="128" pos:column="17">argstr<pos:position pos:line="128" pos:column="23"/></name><index pos:line="128" pos:column="23">[<expr><name pos:line="128" pos:column="24">x<pos:position pos:line="128" pos:column="25"/></name><operator pos:line="128" pos:column="25">++<pos:position pos:line="128" pos:column="27"/></operator></expr>]<pos:position pos:line="128" pos:column="28"/></index></name> <operator pos:line="128" pos:column="29">=<pos:position pos:line="128" pos:column="30"/></operator> <literal type="char" pos:line="128" pos:column="31">'L'<pos:position pos:line="128" pos:column="34"/></literal></expr>;<pos:position pos:line="128" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif<pos:position pos:line="129" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">ifdef<pos:position pos:line="130" pos:column="7"/></cpp:directive> <name pos:line="130" pos:column="8">ICONV_OPTION<pos:position pos:line="130" pos:column="20"/></name></cpp:ifdef>
		<expr_stmt><expr><name><name pos:line="131" pos:column="17">argstr<pos:position pos:line="131" pos:column="23"/></name><index pos:line="131" pos:column="23">[<expr><name pos:line="131" pos:column="24">x<pos:position pos:line="131" pos:column="25"/></name><operator pos:line="131" pos:column="25">++<pos:position pos:line="131" pos:column="27"/></operator></expr>]<pos:position pos:line="131" pos:column="28"/></index></name> <operator pos:line="131" pos:column="29">=<pos:position pos:line="131" pos:column="30"/></operator> <literal type="char" pos:line="131" pos:column="31">'s'<pos:position pos:line="131" pos:column="34"/></literal></expr>;<pos:position pos:line="131" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif<pos:position pos:line="132" pos:column="7"/></cpp:directive></cpp:endif>
		<expr_stmt><expr><name><name pos:line="133" pos:column="17">argstr<pos:position pos:line="133" pos:column="23"/></name><index pos:line="133" pos:column="23">[<expr><name pos:line="133" pos:column="24">x<pos:position pos:line="133" pos:column="25"/></name><operator pos:line="133" pos:column="25">++<pos:position pos:line="133" pos:column="27"/></operator></expr>]<pos:position pos:line="133" pos:column="28"/></index></name> <operator pos:line="133" pos:column="29">=<pos:position pos:line="133" pos:column="30"/></operator> <literal type="char" pos:line="133" pos:column="31">'f'<pos:position pos:line="133" pos:column="34"/></literal></expr>;<pos:position pos:line="133" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="134" pos:column="10"/></block></then></if>

	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name pos:line="136" pos:column="13">x<pos:position pos:line="136" pos:column="14"/></name> <operator pos:line="136" pos:column="15">&gt;=<pos:position pos:line="136" pos:column="20"/></operator> <operator pos:line="136" pos:column="18">(<pos:position pos:line="136" pos:column="19"/></operator><name pos:line="136" pos:column="19">int<pos:position pos:line="136" pos:column="22"/></name><operator pos:line="136" pos:column="22">)<pos:position pos:line="136" pos:column="23"/></operator><sizeof pos:line="136" pos:column="23">sizeof <name pos:line="136" pos:column="30">argstr<pos:position pos:line="136" pos:column="36"/></name></sizeof></expr>)<pos:position pos:line="136" pos:column="37"/></condition><then pos:line="136" pos:column="37"> <block pos:line="136" pos:column="38">{ <comment type="block" pos:line="136" pos:column="40">/* Not possible... */</comment>
		<expr_stmt><expr><call><name pos:line="137" pos:column="17">rprintf<pos:position pos:line="137" pos:column="24"/></name><argument_list pos:line="137" pos:column="24">(<argument><expr><name pos:line="137" pos:column="25">FERROR<pos:position pos:line="137" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="33">"argstr overflow in server_options().\n"<pos:position pos:line="137" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="138" pos:column="17">exit_cleanup<pos:position pos:line="138" pos:column="29"/></name><argument_list pos:line="138" pos:column="29">(<argument><expr><name pos:line="138" pos:column="30">RERR_MALLOC<pos:position pos:line="138" pos:column="41"/></name></expr></argument>)<pos:position pos:line="138" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="139" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="141" pos:column="9">argstr<pos:position pos:line="141" pos:column="15"/></name><index pos:line="141" pos:column="15">[<expr><name pos:line="141" pos:column="16">x<pos:position pos:line="141" pos:column="17"/></name></expr>]<pos:position pos:line="141" pos:column="18"/></index></name> <operator pos:line="141" pos:column="19">=<pos:position pos:line="141" pos:column="20"/></operator> <literal type="char" pos:line="141" pos:column="21">'\0'<pos:position pos:line="141" pos:column="25"/></literal></expr>;<pos:position pos:line="141" pos:column="26"/></expr_stmt>

	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">x<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">&gt;<pos:position pos:line="143" pos:column="19"/></operator> <literal type="number" pos:line="143" pos:column="17">1<pos:position pos:line="143" pos:column="18"/></literal></expr>)<pos:position pos:line="143" pos:column="19"/></condition><then pos:line="143" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="144" pos:column="17">args<pos:position pos:line="144" pos:column="21"/></name><index pos:line="144" pos:column="21">[<expr><name pos:line="144" pos:column="22">ac<pos:position pos:line="144" pos:column="24"/></name><operator pos:line="144" pos:column="24">++<pos:position pos:line="144" pos:column="26"/></operator></expr>]<pos:position pos:line="144" pos:column="27"/></index></name> <operator pos:line="144" pos:column="28">=<pos:position pos:line="144" pos:column="29"/></operator> <name pos:line="144" pos:column="30">argstr<pos:position pos:line="144" pos:column="36"/></name></expr>;<pos:position pos:line="144" pos:column="37"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">ifdef<pos:position pos:line="146" pos:column="7"/></cpp:directive> <name pos:line="146" pos:column="8">ICONV_OPTION<pos:position pos:line="146" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="147" pos:column="9">if <condition pos:line="147" pos:column="12">(<expr><name pos:line="147" pos:column="13">iconv_opt<pos:position pos:line="147" pos:column="22"/></name></expr>)<pos:position pos:line="147" pos:column="23"/></condition><then pos:line="147" pos:column="23"> <block pos:line="147" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="148" pos:column="17">char<pos:position pos:line="148" pos:column="21"/></name> <modifier pos:line="148" pos:column="22">*<pos:position pos:line="148" pos:column="23"/></modifier></type><name pos:line="148" pos:column="23">set<pos:position pos:line="148" pos:column="26"/></name> <init pos:line="148" pos:column="27">= <expr><call><name pos:line="148" pos:column="29">strchr<pos:position pos:line="148" pos:column="35"/></name><argument_list pos:line="148" pos:column="35">(<argument><expr><name pos:line="148" pos:column="36">iconv_opt<pos:position pos:line="148" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="148" pos:column="47">','<pos:position pos:line="148" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="148" pos:column="52"/></decl_stmt>
		<if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><name pos:line="149" pos:column="21">set<pos:position pos:line="149" pos:column="24"/></name></expr>)<pos:position pos:line="149" pos:column="25"/></condition><then pos:line="149" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="25">set<pos:position pos:line="150" pos:column="28"/></name><operator pos:line="150" pos:column="28">++<pos:position pos:line="150" pos:column="30"/></operator></expr>;<pos:position pos:line="150" pos:column="31"/></expr_stmt></block></then>
		<else pos:line="151" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="25">set<pos:position pos:line="152" pos:column="28"/></name> <operator pos:line="152" pos:column="29">=<pos:position pos:line="152" pos:column="30"/></operator> <name pos:line="152" pos:column="31">iconv_opt<pos:position pos:line="152" pos:column="40"/></name></expr>;<pos:position pos:line="152" pos:column="41"/></expr_stmt></block></else></if>
		<if pos:line="153" pos:column="17">if <condition pos:line="153" pos:column="20">(<expr><call><name pos:line="153" pos:column="21">asprintf<pos:position pos:line="153" pos:column="29"/></name><argument_list pos:line="153" pos:column="29">(<argument><expr><operator pos:line="153" pos:column="30">&amp;<pos:position pos:line="153" pos:column="35"/></operator><name pos:line="153" pos:column="31">arg<pos:position pos:line="153" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="36">"--iconv=%s"<pos:position pos:line="153" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="50">set<pos:position pos:line="153" pos:column="53"/></name></expr></argument>)<pos:position pos:line="153" pos:column="54"/></argument_list></call> <operator pos:line="153" pos:column="55">&lt;<pos:position pos:line="153" pos:column="59"/></operator> <literal type="number" pos:line="153" pos:column="57">0<pos:position pos:line="153" pos:column="58"/></literal></expr>)<pos:position pos:line="153" pos:column="59"/></condition><then pos:line="153" pos:column="59">
			<block type="pseudo"><goto pos:line="154" pos:column="25">goto <name pos:line="154" pos:column="30">oom<pos:position pos:line="154" pos:column="33"/></name>;<pos:position pos:line="154" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="155" pos:column="17">args<pos:position pos:line="155" pos:column="21"/></name><index pos:line="155" pos:column="21">[<expr><name pos:line="155" pos:column="22">ac<pos:position pos:line="155" pos:column="24"/></name><operator pos:line="155" pos:column="24">++<pos:position pos:line="155" pos:column="26"/></operator></expr>]<pos:position pos:line="155" pos:column="27"/></index></name> <operator pos:line="155" pos:column="28">=<pos:position pos:line="155" pos:column="29"/></operator> <name pos:line="155" pos:column="30">arg<pos:position pos:line="155" pos:column="33"/></name></expr>;<pos:position pos:line="155" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="156" pos:column="10"/></block></then></if>
<cpp:endif pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">endif<pos:position pos:line="157" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><name pos:line="159" pos:column="13">protect_args<pos:position pos:line="159" pos:column="25"/></name> <operator pos:line="159" pos:column="26">&amp;&amp;<pos:position pos:line="159" pos:column="36"/></operator> <operator pos:line="159" pos:column="29">!<pos:position pos:line="159" pos:column="30"/></operator><name pos:line="159" pos:column="30">local_server<pos:position pos:line="159" pos:column="42"/></name></expr>)<pos:position pos:line="159" pos:column="43"/></condition><then pos:line="159" pos:column="43"> <comment type="block" pos:line="159" pos:column="44">/* unprotected args stop here */</comment>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="160" pos:column="17">args<pos:position pos:line="160" pos:column="21"/></name><index pos:line="160" pos:column="21">[<expr><name pos:line="160" pos:column="22">ac<pos:position pos:line="160" pos:column="24"/></name><operator pos:line="160" pos:column="24">++<pos:position pos:line="160" pos:column="26"/></operator></expr>]<pos:position pos:line="160" pos:column="27"/></index></name> <operator pos:line="160" pos:column="28">=<pos:position pos:line="160" pos:column="29"/></operator> <name pos:line="160" pos:column="30">NULL<pos:position pos:line="160" pos:column="34"/></name></expr>;<pos:position pos:line="160" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name pos:line="162" pos:column="13">list_only<pos:position pos:line="162" pos:column="22"/></name> <operator pos:line="162" pos:column="23">&gt;<pos:position pos:line="162" pos:column="27"/></operator> <literal type="number" pos:line="162" pos:column="25">1<pos:position pos:line="162" pos:column="26"/></literal></expr>)<pos:position pos:line="162" pos:column="27"/></condition><then pos:line="162" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="163" pos:column="17">args<pos:position pos:line="163" pos:column="21"/></name><index pos:line="163" pos:column="21">[<expr><name pos:line="163" pos:column="22">ac<pos:position pos:line="163" pos:column="24"/></name><operator pos:line="163" pos:column="24">++<pos:position pos:line="163" pos:column="26"/></operator></expr>]<pos:position pos:line="163" pos:column="27"/></index></name> <operator pos:line="163" pos:column="28">=<pos:position pos:line="163" pos:column="29"/></operator> <literal type="string" pos:line="163" pos:column="30">"--list-only"<pos:position pos:line="163" pos:column="43"/></literal></expr>;<pos:position pos:line="163" pos:column="44"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="165" pos:column="9">/* This makes sure that the remote rsync can handle deleting with -d
	 * sans -r because the --no-r option was added at the same time. */</comment>
	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">xfer_dirs<pos:position pos:line="167" pos:column="22"/></name> <operator pos:line="167" pos:column="23">&amp;&amp;<pos:position pos:line="167" pos:column="33"/></operator> <operator pos:line="167" pos:column="26">!<pos:position pos:line="167" pos:column="27"/></operator><name pos:line="167" pos:column="27">recurse<pos:position pos:line="167" pos:column="34"/></name> <operator pos:line="167" pos:column="35">&amp;&amp;<pos:position pos:line="167" pos:column="45"/></operator> <name pos:line="167" pos:column="38">delete_mode<pos:position pos:line="167" pos:column="49"/></name> <operator pos:line="167" pos:column="50">&amp;&amp;<pos:position pos:line="167" pos:column="60"/></operator> <name pos:line="167" pos:column="53">am_sender<pos:position pos:line="167" pos:column="62"/></name></expr>)<pos:position pos:line="167" pos:column="63"/></condition><then pos:line="167" pos:column="63">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="168" pos:column="17">args<pos:position pos:line="168" pos:column="21"/></name><index pos:line="168" pos:column="21">[<expr><name pos:line="168" pos:column="22">ac<pos:position pos:line="168" pos:column="24"/></name><operator pos:line="168" pos:column="24">++<pos:position pos:line="168" pos:column="26"/></operator></expr>]<pos:position pos:line="168" pos:column="27"/></index></name> <operator pos:line="168" pos:column="28">=<pos:position pos:line="168" pos:column="29"/></operator> <literal type="string" pos:line="168" pos:column="30">"--no-r"<pos:position pos:line="168" pos:column="38"/></literal></expr>;<pos:position pos:line="168" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="170" pos:column="9">if <condition pos:line="170" pos:column="12">(<expr><name pos:line="170" pos:column="13">do_compression<pos:position pos:line="170" pos:column="27"/></name> <operator pos:line="170" pos:column="28">&amp;&amp;<pos:position pos:line="170" pos:column="38"/></operator> <name pos:line="170" pos:column="31">def_compress_level<pos:position pos:line="170" pos:column="49"/></name> <operator pos:line="170" pos:column="50">!=<pos:position pos:line="170" pos:column="52"/></operator> <name pos:line="170" pos:column="53">Z_DEFAULT_COMPRESSION<pos:position pos:line="170" pos:column="74"/></name></expr>)<pos:position pos:line="170" pos:column="75"/></condition><then pos:line="170" pos:column="75"> <block pos:line="170" pos:column="76">{
		<if pos:line="171" pos:column="17">if <condition pos:line="171" pos:column="20">(<expr><call><name pos:line="171" pos:column="21">asprintf<pos:position pos:line="171" pos:column="29"/></name><argument_list pos:line="171" pos:column="29">(<argument><expr><operator pos:line="171" pos:column="30">&amp;<pos:position pos:line="171" pos:column="35"/></operator><name pos:line="171" pos:column="31">arg<pos:position pos:line="171" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="36">"--compress-level=%d"<pos:position pos:line="171" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="59">def_compress_level<pos:position pos:line="171" pos:column="77"/></name></expr></argument>)<pos:position pos:line="171" pos:column="78"/></argument_list></call> <operator pos:line="171" pos:column="79">&lt;<pos:position pos:line="171" pos:column="83"/></operator> <literal type="number" pos:line="171" pos:column="81">0<pos:position pos:line="171" pos:column="82"/></literal></expr>)<pos:position pos:line="171" pos:column="83"/></condition><then pos:line="171" pos:column="83">
			<block type="pseudo"><goto pos:line="172" pos:column="25">goto <name pos:line="172" pos:column="30">oom<pos:position pos:line="172" pos:column="33"/></name>;<pos:position pos:line="172" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="173" pos:column="17">args<pos:position pos:line="173" pos:column="21"/></name><index pos:line="173" pos:column="21">[<expr><name pos:line="173" pos:column="22">ac<pos:position pos:line="173" pos:column="24"/></name><operator pos:line="173" pos:column="24">++<pos:position pos:line="173" pos:column="26"/></operator></expr>]<pos:position pos:line="173" pos:column="27"/></index></name> <operator pos:line="173" pos:column="28">=<pos:position pos:line="173" pos:column="29"/></operator> <name pos:line="173" pos:column="30">arg<pos:position pos:line="173" pos:column="33"/></name></expr>;<pos:position pos:line="173" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="174" pos:column="10"/></block></then></if>

	<if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><name pos:line="176" pos:column="13">preserve_devices<pos:position pos:line="176" pos:column="29"/></name></expr>)<pos:position pos:line="176" pos:column="30"/></condition><then pos:line="176" pos:column="30"> <block pos:line="176" pos:column="31">{
		<comment type="block" pos:line="177" pos:column="17">/* Note: sending "--devices" would not be backward-compatible. */</comment>
		<if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><operator pos:line="178" pos:column="21">!<pos:position pos:line="178" pos:column="22"/></operator><name pos:line="178" pos:column="22">preserve_specials<pos:position pos:line="178" pos:column="39"/></name></expr>)<pos:position pos:line="178" pos:column="40"/></condition><then pos:line="178" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="179" pos:column="25">args<pos:position pos:line="179" pos:column="29"/></name><index pos:line="179" pos:column="29">[<expr><name pos:line="179" pos:column="30">ac<pos:position pos:line="179" pos:column="32"/></name><operator pos:line="179" pos:column="32">++<pos:position pos:line="179" pos:column="34"/></operator></expr>]<pos:position pos:line="179" pos:column="35"/></index></name> <operator pos:line="179" pos:column="36">=<pos:position pos:line="179" pos:column="37"/></operator> <literal type="string" pos:line="179" pos:column="38">"--no-specials"<pos:position pos:line="179" pos:column="53"/></literal></expr>;<pos:position pos:line="179" pos:column="54"/></expr_stmt></block></then></if> <comment type="block" pos:line="179" pos:column="55">/* -D is already set. */</comment>
	}<pos:position pos:line="180" pos:column="10"/></block></then> <elseif pos:line="180" pos:column="11">else <if pos:line="180" pos:column="16">if <condition pos:line="180" pos:column="19">(<expr><name pos:line="180" pos:column="20">preserve_specials<pos:position pos:line="180" pos:column="37"/></name></expr>)<pos:position pos:line="180" pos:column="38"/></condition><then pos:line="180" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="181" pos:column="17">args<pos:position pos:line="181" pos:column="21"/></name><index pos:line="181" pos:column="21">[<expr><name pos:line="181" pos:column="22">ac<pos:position pos:line="181" pos:column="24"/></name><operator pos:line="181" pos:column="24">++<pos:position pos:line="181" pos:column="26"/></operator></expr>]<pos:position pos:line="181" pos:column="27"/></index></name> <operator pos:line="181" pos:column="28">=<pos:position pos:line="181" pos:column="29"/></operator> <literal type="string" pos:line="181" pos:column="30">"--specials"<pos:position pos:line="181" pos:column="42"/></literal></expr>;<pos:position pos:line="181" pos:column="43"/></expr_stmt></block></then></if></elseif></if>

	<comment type="block" pos:line="183" pos:column="9">/* The server side doesn't use our log-format, but in certain
	 * circumstances they need to know a little about the option. */</comment>
	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">stdout_format<pos:position pos:line="185" pos:column="26"/></name> <operator pos:line="185" pos:column="27">&amp;&amp;<pos:position pos:line="185" pos:column="37"/></operator> <name pos:line="185" pos:column="30">am_sender<pos:position pos:line="185" pos:column="39"/></name></expr>)<pos:position pos:line="185" pos:column="40"/></condition><then pos:line="185" pos:column="40"> <block pos:line="185" pos:column="41">{
		<comment type="block" pos:line="186" pos:column="17">/* Use --log-format, not --out-format, for compatibility. */</comment>
		<if pos:line="187" pos:column="17">if <condition pos:line="187" pos:column="20">(<expr><name pos:line="187" pos:column="21">stdout_format_has_i<pos:position pos:line="187" pos:column="40"/></name> <operator pos:line="187" pos:column="41">&gt;<pos:position pos:line="187" pos:column="45"/></operator> <literal type="number" pos:line="187" pos:column="43">1<pos:position pos:line="187" pos:column="44"/></literal></expr>)<pos:position pos:line="187" pos:column="45"/></condition><then pos:line="187" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="188" pos:column="25">args<pos:position pos:line="188" pos:column="29"/></name><index pos:line="188" pos:column="29">[<expr><name pos:line="188" pos:column="30">ac<pos:position pos:line="188" pos:column="32"/></name><operator pos:line="188" pos:column="32">++<pos:position pos:line="188" pos:column="34"/></operator></expr>]<pos:position pos:line="188" pos:column="35"/></index></name> <operator pos:line="188" pos:column="36">=<pos:position pos:line="188" pos:column="37"/></operator> <literal type="string" pos:line="188" pos:column="38">"--log-format=%i%I"<pos:position pos:line="188" pos:column="57"/></literal></expr>;<pos:position pos:line="188" pos:column="58"/></expr_stmt></block></then>
		<elseif pos:line="189" pos:column="17">else <if pos:line="189" pos:column="22">if <condition pos:line="189" pos:column="25">(<expr><name pos:line="189" pos:column="26">stdout_format_has_i<pos:position pos:line="189" pos:column="45"/></name></expr>)<pos:position pos:line="189" pos:column="46"/></condition><then pos:line="189" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="190" pos:column="25">args<pos:position pos:line="190" pos:column="29"/></name><index pos:line="190" pos:column="29">[<expr><name pos:line="190" pos:column="30">ac<pos:position pos:line="190" pos:column="32"/></name><operator pos:line="190" pos:column="32">++<pos:position pos:line="190" pos:column="34"/></operator></expr>]<pos:position pos:line="190" pos:column="35"/></index></name> <operator pos:line="190" pos:column="36">=<pos:position pos:line="190" pos:column="37"/></operator> <literal type="string" pos:line="190" pos:column="38">"--log-format=%i"<pos:position pos:line="190" pos:column="55"/></literal></expr>;<pos:position pos:line="190" pos:column="56"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="191" pos:column="17">else <if pos:line="191" pos:column="22">if <condition pos:line="191" pos:column="25">(<expr><name pos:line="191" pos:column="26">stdout_format_has_o_or_i<pos:position pos:line="191" pos:column="50"/></name></expr>)<pos:position pos:line="191" pos:column="51"/></condition><then pos:line="191" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="192" pos:column="25">args<pos:position pos:line="192" pos:column="29"/></name><index pos:line="192" pos:column="29">[<expr><name pos:line="192" pos:column="30">ac<pos:position pos:line="192" pos:column="32"/></name><operator pos:line="192" pos:column="32">++<pos:position pos:line="192" pos:column="34"/></operator></expr>]<pos:position pos:line="192" pos:column="35"/></index></name> <operator pos:line="192" pos:column="36">=<pos:position pos:line="192" pos:column="37"/></operator> <literal type="string" pos:line="192" pos:column="38">"--log-format=%o"<pos:position pos:line="192" pos:column="55"/></literal></expr>;<pos:position pos:line="192" pos:column="56"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="193" pos:column="17">else <if pos:line="193" pos:column="22">if <condition pos:line="193" pos:column="25">(<expr><operator pos:line="193" pos:column="26">!<pos:position pos:line="193" pos:column="27"/></operator><name pos:line="193" pos:column="27">verbose<pos:position pos:line="193" pos:column="34"/></name></expr>)<pos:position pos:line="193" pos:column="35"/></condition><then pos:line="193" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="194" pos:column="25">args<pos:position pos:line="194" pos:column="29"/></name><index pos:line="194" pos:column="29">[<expr><name pos:line="194" pos:column="30">ac<pos:position pos:line="194" pos:column="32"/></name><operator pos:line="194" pos:column="32">++<pos:position pos:line="194" pos:column="34"/></operator></expr>]<pos:position pos:line="194" pos:column="35"/></index></name> <operator pos:line="194" pos:column="36">=<pos:position pos:line="194" pos:column="37"/></operator> <literal type="string" pos:line="194" pos:column="38">"--log-format=X"<pos:position pos:line="194" pos:column="54"/></literal></expr>;<pos:position pos:line="194" pos:column="55"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="195" pos:column="10"/></block></then></if>

	<if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><name pos:line="197" pos:column="13">block_size<pos:position pos:line="197" pos:column="23"/></name></expr>)<pos:position pos:line="197" pos:column="24"/></condition><then pos:line="197" pos:column="24"> <block pos:line="197" pos:column="25">{
		<if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><call><name pos:line="198" pos:column="21">asprintf<pos:position pos:line="198" pos:column="29"/></name><argument_list pos:line="198" pos:column="29">(<argument><expr><operator pos:line="198" pos:column="30">&amp;<pos:position pos:line="198" pos:column="35"/></operator><name pos:line="198" pos:column="31">arg<pos:position pos:line="198" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="36">"-B%lu"<pos:position pos:line="198" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="198" pos:column="45">block_size<pos:position pos:line="198" pos:column="55"/></name></expr></argument>)<pos:position pos:line="198" pos:column="56"/></argument_list></call> <operator pos:line="198" pos:column="57">&lt;<pos:position pos:line="198" pos:column="61"/></operator> <literal type="number" pos:line="198" pos:column="59">0<pos:position pos:line="198" pos:column="60"/></literal></expr>)<pos:position pos:line="198" pos:column="61"/></condition><then pos:line="198" pos:column="61">
			<block type="pseudo"><goto pos:line="199" pos:column="25">goto <name pos:line="199" pos:column="30">oom<pos:position pos:line="199" pos:column="33"/></name>;<pos:position pos:line="199" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="200" pos:column="17">args<pos:position pos:line="200" pos:column="21"/></name><index pos:line="200" pos:column="21">[<expr><name pos:line="200" pos:column="22">ac<pos:position pos:line="200" pos:column="24"/></name><operator pos:line="200" pos:column="24">++<pos:position pos:line="200" pos:column="26"/></operator></expr>]<pos:position pos:line="200" pos:column="27"/></index></name> <operator pos:line="200" pos:column="28">=<pos:position pos:line="200" pos:column="29"/></operator> <name pos:line="200" pos:column="30">arg<pos:position pos:line="200" pos:column="33"/></name></expr>;<pos:position pos:line="200" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="201" pos:column="10"/></block></then></if>

	<if pos:line="203" pos:column="9">if <condition pos:line="203" pos:column="12">(<expr><name pos:line="203" pos:column="13">io_timeout<pos:position pos:line="203" pos:column="23"/></name></expr>)<pos:position pos:line="203" pos:column="24"/></condition><then pos:line="203" pos:column="24"> <block pos:line="203" pos:column="25">{
		<if pos:line="204" pos:column="17">if <condition pos:line="204" pos:column="20">(<expr><call><name pos:line="204" pos:column="21">asprintf<pos:position pos:line="204" pos:column="29"/></name><argument_list pos:line="204" pos:column="29">(<argument><expr><operator pos:line="204" pos:column="30">&amp;<pos:position pos:line="204" pos:column="35"/></operator><name pos:line="204" pos:column="31">arg<pos:position pos:line="204" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="36">"--timeout=%d"<pos:position pos:line="204" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="204" pos:column="52">io_timeout<pos:position pos:line="204" pos:column="62"/></name></expr></argument>)<pos:position pos:line="204" pos:column="63"/></argument_list></call> <operator pos:line="204" pos:column="64">&lt;<pos:position pos:line="204" pos:column="68"/></operator> <literal type="number" pos:line="204" pos:column="66">0<pos:position pos:line="204" pos:column="67"/></literal></expr>)<pos:position pos:line="204" pos:column="68"/></condition><then pos:line="204" pos:column="68">
			<block type="pseudo"><goto pos:line="205" pos:column="25">goto <name pos:line="205" pos:column="30">oom<pos:position pos:line="205" pos:column="33"/></name>;<pos:position pos:line="205" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="206" pos:column="17">args<pos:position pos:line="206" pos:column="21"/></name><index pos:line="206" pos:column="21">[<expr><name pos:line="206" pos:column="22">ac<pos:position pos:line="206" pos:column="24"/></name><operator pos:line="206" pos:column="24">++<pos:position pos:line="206" pos:column="26"/></operator></expr>]<pos:position pos:line="206" pos:column="27"/></index></name> <operator pos:line="206" pos:column="28">=<pos:position pos:line="206" pos:column="29"/></operator> <name pos:line="206" pos:column="30">arg<pos:position pos:line="206" pos:column="33"/></name></expr>;<pos:position pos:line="206" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="207" pos:column="10"/></block></then></if>

	<if pos:line="209" pos:column="9">if <condition pos:line="209" pos:column="12">(<expr><name pos:line="209" pos:column="13">bwlimit<pos:position pos:line="209" pos:column="20"/></name></expr>)<pos:position pos:line="209" pos:column="21"/></condition><then pos:line="209" pos:column="21"> <block pos:line="209" pos:column="22">{
		<if pos:line="210" pos:column="17">if <condition pos:line="210" pos:column="20">(<expr><call><name pos:line="210" pos:column="21">asprintf<pos:position pos:line="210" pos:column="29"/></name><argument_list pos:line="210" pos:column="29">(<argument><expr><operator pos:line="210" pos:column="30">&amp;<pos:position pos:line="210" pos:column="35"/></operator><name pos:line="210" pos:column="31">arg<pos:position pos:line="210" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="36">"--bwlimit=%d"<pos:position pos:line="210" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="210" pos:column="52">bwlimit<pos:position pos:line="210" pos:column="59"/></name></expr></argument>)<pos:position pos:line="210" pos:column="60"/></argument_list></call> <operator pos:line="210" pos:column="61">&lt;<pos:position pos:line="210" pos:column="65"/></operator> <literal type="number" pos:line="210" pos:column="63">0<pos:position pos:line="210" pos:column="64"/></literal></expr>)<pos:position pos:line="210" pos:column="65"/></condition><then pos:line="210" pos:column="65">
			<block type="pseudo"><goto pos:line="211" pos:column="25">goto <name pos:line="211" pos:column="30">oom<pos:position pos:line="211" pos:column="33"/></name>;<pos:position pos:line="211" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="212" pos:column="17">args<pos:position pos:line="212" pos:column="21"/></name><index pos:line="212" pos:column="21">[<expr><name pos:line="212" pos:column="22">ac<pos:position pos:line="212" pos:column="24"/></name><operator pos:line="212" pos:column="24">++<pos:position pos:line="212" pos:column="26"/></operator></expr>]<pos:position pos:line="212" pos:column="27"/></index></name> <operator pos:line="212" pos:column="28">=<pos:position pos:line="212" pos:column="29"/></operator> <name pos:line="212" pos:column="30">arg<pos:position pos:line="212" pos:column="33"/></name></expr>;<pos:position pos:line="212" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="213" pos:column="10"/></block></then></if>

	<if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><name pos:line="215" pos:column="13">backup_dir<pos:position pos:line="215" pos:column="23"/></name></expr>)<pos:position pos:line="215" pos:column="24"/></condition><then pos:line="215" pos:column="24"> <block pos:line="215" pos:column="25">{
		<expr_stmt><expr><name><name pos:line="216" pos:column="17">args<pos:position pos:line="216" pos:column="21"/></name><index pos:line="216" pos:column="21">[<expr><name pos:line="216" pos:column="22">ac<pos:position pos:line="216" pos:column="24"/></name><operator pos:line="216" pos:column="24">++<pos:position pos:line="216" pos:column="26"/></operator></expr>]<pos:position pos:line="216" pos:column="27"/></index></name> <operator pos:line="216" pos:column="28">=<pos:position pos:line="216" pos:column="29"/></operator> <literal type="string" pos:line="216" pos:column="30">"--backup-dir"<pos:position pos:line="216" pos:column="44"/></literal></expr>;<pos:position pos:line="216" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="217" pos:column="17">args<pos:position pos:line="217" pos:column="21"/></name><index pos:line="217" pos:column="21">[<expr><name pos:line="217" pos:column="22">ac<pos:position pos:line="217" pos:column="24"/></name><operator pos:line="217" pos:column="24">++<pos:position pos:line="217" pos:column="26"/></operator></expr>]<pos:position pos:line="217" pos:column="27"/></index></name> <operator pos:line="217" pos:column="28">=<pos:position pos:line="217" pos:column="29"/></operator> <name pos:line="217" pos:column="30">backup_dir<pos:position pos:line="217" pos:column="40"/></name></expr>;<pos:position pos:line="217" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="218" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="220" pos:column="9">/* Only send --suffix if it specifies a non-default value. */</comment>
	<if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><call><name pos:line="221" pos:column="13">strcmp<pos:position pos:line="221" pos:column="19"/></name><argument_list pos:line="221" pos:column="19">(<argument><expr><name pos:line="221" pos:column="20">backup_suffix<pos:position pos:line="221" pos:column="33"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="221" pos:column="35">backup_dir<pos:position pos:line="221" pos:column="45"/></name></expr> ?<pos:position pos:line="221" pos:column="47"/></condition><then pos:line="221" pos:column="47"> <expr><literal type="string" pos:line="221" pos:column="48">""<pos:position pos:line="221" pos:column="50"/></literal></expr> <pos:position pos:line="221" pos:column="51"/></then><else pos:line="221" pos:column="51">: <expr><name pos:line="221" pos:column="53">BACKUP_SUFFIX<pos:position pos:line="221" pos:column="66"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="221" pos:column="67"/></argument_list></call> <operator pos:line="221" pos:column="68">!=<pos:position pos:line="221" pos:column="70"/></operator> <literal type="number" pos:line="221" pos:column="71">0<pos:position pos:line="221" pos:column="72"/></literal></expr>)<pos:position pos:line="221" pos:column="73"/></condition><then pos:line="221" pos:column="73"> <block pos:line="221" pos:column="74">{
		<comment type="block" pos:line="222" pos:column="17">/* We use the following syntax to avoid weirdness with '~'. */</comment>
		<if pos:line="223" pos:column="17">if <condition pos:line="223" pos:column="20">(<expr><call><name pos:line="223" pos:column="21">asprintf<pos:position pos:line="223" pos:column="29"/></name><argument_list pos:line="223" pos:column="29">(<argument><expr><operator pos:line="223" pos:column="30">&amp;<pos:position pos:line="223" pos:column="35"/></operator><name pos:line="223" pos:column="31">arg<pos:position pos:line="223" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="223" pos:column="36">"--suffix=%s"<pos:position pos:line="223" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="223" pos:column="51">backup_suffix<pos:position pos:line="223" pos:column="64"/></name></expr></argument>)<pos:position pos:line="223" pos:column="65"/></argument_list></call> <operator pos:line="223" pos:column="66">&lt;<pos:position pos:line="223" pos:column="70"/></operator> <literal type="number" pos:line="223" pos:column="68">0<pos:position pos:line="223" pos:column="69"/></literal></expr>)<pos:position pos:line="223" pos:column="70"/></condition><then pos:line="223" pos:column="70">
			<block type="pseudo"><goto pos:line="224" pos:column="25">goto <name pos:line="224" pos:column="30">oom<pos:position pos:line="224" pos:column="33"/></name>;<pos:position pos:line="224" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="225" pos:column="17">args<pos:position pos:line="225" pos:column="21"/></name><index pos:line="225" pos:column="21">[<expr><name pos:line="225" pos:column="22">ac<pos:position pos:line="225" pos:column="24"/></name><operator pos:line="225" pos:column="24">++<pos:position pos:line="225" pos:column="26"/></operator></expr>]<pos:position pos:line="225" pos:column="27"/></index></name> <operator pos:line="225" pos:column="28">=<pos:position pos:line="225" pos:column="29"/></operator> <name pos:line="225" pos:column="30">arg<pos:position pos:line="225" pos:column="33"/></name></expr>;<pos:position pos:line="225" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="226" pos:column="10"/></block></then></if>

	<if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><name pos:line="228" pos:column="13">am_sender<pos:position pos:line="228" pos:column="22"/></name></expr>)<pos:position pos:line="228" pos:column="23"/></condition><then pos:line="228" pos:column="23"> <block pos:line="228" pos:column="24">{
		<if pos:line="229" pos:column="17">if <condition pos:line="229" pos:column="20">(<expr><name pos:line="229" pos:column="21">max_delete<pos:position pos:line="229" pos:column="31"/></name> <operator pos:line="229" pos:column="32">&gt;<pos:position pos:line="229" pos:column="36"/></operator> <literal type="number" pos:line="229" pos:column="34">0<pos:position pos:line="229" pos:column="35"/></literal></expr>)<pos:position pos:line="229" pos:column="36"/></condition><then pos:line="229" pos:column="36"> <block pos:line="229" pos:column="37">{
			<if pos:line="230" pos:column="25">if <condition pos:line="230" pos:column="28">(<expr><call><name pos:line="230" pos:column="29">asprintf<pos:position pos:line="230" pos:column="37"/></name><argument_list pos:line="230" pos:column="37">(<argument><expr><operator pos:line="230" pos:column="38">&amp;<pos:position pos:line="230" pos:column="43"/></operator><name pos:line="230" pos:column="39">arg<pos:position pos:line="230" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="44">"--max-delete=%d"<pos:position pos:line="230" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="230" pos:column="63">max_delete<pos:position pos:line="230" pos:column="73"/></name></expr></argument>)<pos:position pos:line="230" pos:column="74"/></argument_list></call> <operator pos:line="230" pos:column="75">&lt;<pos:position pos:line="230" pos:column="79"/></operator> <literal type="number" pos:line="230" pos:column="77">0<pos:position pos:line="230" pos:column="78"/></literal></expr>)<pos:position pos:line="230" pos:column="79"/></condition><then pos:line="230" pos:column="79">
				<block type="pseudo"><goto pos:line="231" pos:column="33">goto <name pos:line="231" pos:column="38">oom<pos:position pos:line="231" pos:column="41"/></name>;<pos:position pos:line="231" pos:column="42"/></goto></block></then></if>
			<expr_stmt><expr><name><name pos:line="232" pos:column="25">args<pos:position pos:line="232" pos:column="29"/></name><index pos:line="232" pos:column="29">[<expr><name pos:line="232" pos:column="30">ac<pos:position pos:line="232" pos:column="32"/></name><operator pos:line="232" pos:column="32">++<pos:position pos:line="232" pos:column="34"/></operator></expr>]<pos:position pos:line="232" pos:column="35"/></index></name> <operator pos:line="232" pos:column="36">=<pos:position pos:line="232" pos:column="37"/></operator> <name pos:line="232" pos:column="38">arg<pos:position pos:line="232" pos:column="41"/></name></expr>;<pos:position pos:line="232" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="233" pos:column="18"/></block></then> <elseif pos:line="233" pos:column="19">else <if pos:line="233" pos:column="24">if <condition pos:line="233" pos:column="27">(<expr><name pos:line="233" pos:column="28">max_delete<pos:position pos:line="233" pos:column="38"/></name> <operator pos:line="233" pos:column="39">==<pos:position pos:line="233" pos:column="41"/></operator> <literal type="number" pos:line="233" pos:column="42">0<pos:position pos:line="233" pos:column="43"/></literal></expr>)<pos:position pos:line="233" pos:column="44"/></condition><then pos:line="233" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="234" pos:column="25">args<pos:position pos:line="234" pos:column="29"/></name><index pos:line="234" pos:column="29">[<expr><name pos:line="234" pos:column="30">ac<pos:position pos:line="234" pos:column="32"/></name><operator pos:line="234" pos:column="32">++<pos:position pos:line="234" pos:column="34"/></operator></expr>]<pos:position pos:line="234" pos:column="35"/></index></name> <operator pos:line="234" pos:column="36">=<pos:position pos:line="234" pos:column="37"/></operator> <literal type="string" pos:line="234" pos:column="38">"--max-delete=-1"<pos:position pos:line="234" pos:column="55"/></literal></expr>;<pos:position pos:line="234" pos:column="56"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="235" pos:column="17">if <condition pos:line="235" pos:column="20">(<expr><name pos:line="235" pos:column="21">min_size<pos:position pos:line="235" pos:column="29"/></name></expr>)<pos:position pos:line="235" pos:column="30"/></condition><then pos:line="235" pos:column="30"> <block pos:line="235" pos:column="31">{
			<expr_stmt><expr><name><name pos:line="236" pos:column="25">args<pos:position pos:line="236" pos:column="29"/></name><index pos:line="236" pos:column="29">[<expr><name pos:line="236" pos:column="30">ac<pos:position pos:line="236" pos:column="32"/></name><operator pos:line="236" pos:column="32">++<pos:position pos:line="236" pos:column="34"/></operator></expr>]<pos:position pos:line="236" pos:column="35"/></index></name> <operator pos:line="236" pos:column="36">=<pos:position pos:line="236" pos:column="37"/></operator> <literal type="string" pos:line="236" pos:column="38">"--min-size"<pos:position pos:line="236" pos:column="50"/></literal></expr>;<pos:position pos:line="236" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="237" pos:column="25">args<pos:position pos:line="237" pos:column="29"/></name><index pos:line="237" pos:column="29">[<expr><name pos:line="237" pos:column="30">ac<pos:position pos:line="237" pos:column="32"/></name><operator pos:line="237" pos:column="32">++<pos:position pos:line="237" pos:column="34"/></operator></expr>]<pos:position pos:line="237" pos:column="35"/></index></name> <operator pos:line="237" pos:column="36">=<pos:position pos:line="237" pos:column="37"/></operator> <name pos:line="237" pos:column="38">min_size_arg<pos:position pos:line="237" pos:column="50"/></name></expr>;<pos:position pos:line="237" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="238" pos:column="18"/></block></then></if>
		<if pos:line="239" pos:column="17">if <condition pos:line="239" pos:column="20">(<expr><name pos:line="239" pos:column="21">max_size<pos:position pos:line="239" pos:column="29"/></name></expr>)<pos:position pos:line="239" pos:column="30"/></condition><then pos:line="239" pos:column="30"> <block pos:line="239" pos:column="31">{
			<expr_stmt><expr><name><name pos:line="240" pos:column="25">args<pos:position pos:line="240" pos:column="29"/></name><index pos:line="240" pos:column="29">[<expr><name pos:line="240" pos:column="30">ac<pos:position pos:line="240" pos:column="32"/></name><operator pos:line="240" pos:column="32">++<pos:position pos:line="240" pos:column="34"/></operator></expr>]<pos:position pos:line="240" pos:column="35"/></index></name> <operator pos:line="240" pos:column="36">=<pos:position pos:line="240" pos:column="37"/></operator> <literal type="string" pos:line="240" pos:column="38">"--max-size"<pos:position pos:line="240" pos:column="50"/></literal></expr>;<pos:position pos:line="240" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="241" pos:column="25">args<pos:position pos:line="241" pos:column="29"/></name><index pos:line="241" pos:column="29">[<expr><name pos:line="241" pos:column="30">ac<pos:position pos:line="241" pos:column="32"/></name><operator pos:line="241" pos:column="32">++<pos:position pos:line="241" pos:column="34"/></operator></expr>]<pos:position pos:line="241" pos:column="35"/></index></name> <operator pos:line="241" pos:column="36">=<pos:position pos:line="241" pos:column="37"/></operator> <name pos:line="241" pos:column="38">max_size_arg<pos:position pos:line="241" pos:column="50"/></name></expr>;<pos:position pos:line="241" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="242" pos:column="18"/></block></then></if>
		<if pos:line="243" pos:column="17">if <condition pos:line="243" pos:column="20">(<expr><name pos:line="243" pos:column="21">delete_before<pos:position pos:line="243" pos:column="34"/></name></expr>)<pos:position pos:line="243" pos:column="35"/></condition><then pos:line="243" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="244" pos:column="25">args<pos:position pos:line="244" pos:column="29"/></name><index pos:line="244" pos:column="29">[<expr><name pos:line="244" pos:column="30">ac<pos:position pos:line="244" pos:column="32"/></name><operator pos:line="244" pos:column="32">++<pos:position pos:line="244" pos:column="34"/></operator></expr>]<pos:position pos:line="244" pos:column="35"/></index></name> <operator pos:line="244" pos:column="36">=<pos:position pos:line="244" pos:column="37"/></operator> <literal type="string" pos:line="244" pos:column="38">"--delete-before"<pos:position pos:line="244" pos:column="55"/></literal></expr>;<pos:position pos:line="244" pos:column="56"/></expr_stmt></block></then>
		<elseif pos:line="245" pos:column="17">else <if pos:line="245" pos:column="22">if <condition pos:line="245" pos:column="25">(<expr><name pos:line="245" pos:column="26">delete_during<pos:position pos:line="245" pos:column="39"/></name> <operator pos:line="245" pos:column="40">==<pos:position pos:line="245" pos:column="42"/></operator> <literal type="number" pos:line="245" pos:column="43">2<pos:position pos:line="245" pos:column="44"/></literal></expr>)<pos:position pos:line="245" pos:column="45"/></condition><then pos:line="245" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="246" pos:column="25">args<pos:position pos:line="246" pos:column="29"/></name><index pos:line="246" pos:column="29">[<expr><name pos:line="246" pos:column="30">ac<pos:position pos:line="246" pos:column="32"/></name><operator pos:line="246" pos:column="32">++<pos:position pos:line="246" pos:column="34"/></operator></expr>]<pos:position pos:line="246" pos:column="35"/></index></name> <operator pos:line="246" pos:column="36">=<pos:position pos:line="246" pos:column="37"/></operator> <literal type="string" pos:line="246" pos:column="38">"--delete-delay"<pos:position pos:line="246" pos:column="54"/></literal></expr>;<pos:position pos:line="246" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="247" pos:column="17">else <if pos:line="247" pos:column="22">if <condition pos:line="247" pos:column="25">(<expr><name pos:line="247" pos:column="26">delete_during<pos:position pos:line="247" pos:column="39"/></name></expr>)<pos:position pos:line="247" pos:column="40"/></condition><then pos:line="247" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="248" pos:column="25">args<pos:position pos:line="248" pos:column="29"/></name><index pos:line="248" pos:column="29">[<expr><name pos:line="248" pos:column="30">ac<pos:position pos:line="248" pos:column="32"/></name><operator pos:line="248" pos:column="32">++<pos:position pos:line="248" pos:column="34"/></operator></expr>]<pos:position pos:line="248" pos:column="35"/></index></name> <operator pos:line="248" pos:column="36">=<pos:position pos:line="248" pos:column="37"/></operator> <literal type="string" pos:line="248" pos:column="38">"--delete-during"<pos:position pos:line="248" pos:column="55"/></literal></expr>;<pos:position pos:line="248" pos:column="56"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="249" pos:column="17">else <if pos:line="249" pos:column="22">if <condition pos:line="249" pos:column="25">(<expr><name pos:line="249" pos:column="26">delete_after<pos:position pos:line="249" pos:column="38"/></name></expr>)<pos:position pos:line="249" pos:column="39"/></condition><then pos:line="249" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="250" pos:column="25">args<pos:position pos:line="250" pos:column="29"/></name><index pos:line="250" pos:column="29">[<expr><name pos:line="250" pos:column="30">ac<pos:position pos:line="250" pos:column="32"/></name><operator pos:line="250" pos:column="32">++<pos:position pos:line="250" pos:column="34"/></operator></expr>]<pos:position pos:line="250" pos:column="35"/></index></name> <operator pos:line="250" pos:column="36">=<pos:position pos:line="250" pos:column="37"/></operator> <literal type="string" pos:line="250" pos:column="38">"--delete-after"<pos:position pos:line="250" pos:column="54"/></literal></expr>;<pos:position pos:line="250" pos:column="55"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="251" pos:column="17">else <if pos:line="251" pos:column="22">if <condition pos:line="251" pos:column="25">(<expr><name pos:line="251" pos:column="26">delete_mode<pos:position pos:line="251" pos:column="37"/></name> <operator pos:line="251" pos:column="38">&amp;&amp;<pos:position pos:line="251" pos:column="48"/></operator> <operator pos:line="251" pos:column="41">!<pos:position pos:line="251" pos:column="42"/></operator><name pos:line="251" pos:column="42">delete_excluded<pos:position pos:line="251" pos:column="57"/></name></expr>)<pos:position pos:line="251" pos:column="58"/></condition><then pos:line="251" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="252" pos:column="25">args<pos:position pos:line="252" pos:column="29"/></name><index pos:line="252" pos:column="29">[<expr><name pos:line="252" pos:column="30">ac<pos:position pos:line="252" pos:column="32"/></name><operator pos:line="252" pos:column="32">++<pos:position pos:line="252" pos:column="34"/></operator></expr>]<pos:position pos:line="252" pos:column="35"/></index></name> <operator pos:line="252" pos:column="36">=<pos:position pos:line="252" pos:column="37"/></operator> <literal type="string" pos:line="252" pos:column="38">"--delete"<pos:position pos:line="252" pos:column="48"/></literal></expr>;<pos:position pos:line="252" pos:column="49"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="253" pos:column="17">if <condition pos:line="253" pos:column="20">(<expr><name pos:line="253" pos:column="21">delete_excluded<pos:position pos:line="253" pos:column="36"/></name></expr>)<pos:position pos:line="253" pos:column="37"/></condition><then pos:line="253" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="254" pos:column="25">args<pos:position pos:line="254" pos:column="29"/></name><index pos:line="254" pos:column="29">[<expr><name pos:line="254" pos:column="30">ac<pos:position pos:line="254" pos:column="32"/></name><operator pos:line="254" pos:column="32">++<pos:position pos:line="254" pos:column="34"/></operator></expr>]<pos:position pos:line="254" pos:column="35"/></index></name> <operator pos:line="254" pos:column="36">=<pos:position pos:line="254" pos:column="37"/></operator> <literal type="string" pos:line="254" pos:column="38">"--delete-excluded"<pos:position pos:line="254" pos:column="57"/></literal></expr>;<pos:position pos:line="254" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="255" pos:column="17">if <condition pos:line="255" pos:column="20">(<expr><name pos:line="255" pos:column="21">force_delete<pos:position pos:line="255" pos:column="33"/></name></expr>)<pos:position pos:line="255" pos:column="34"/></condition><then pos:line="255" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="256" pos:column="25">args<pos:position pos:line="256" pos:column="29"/></name><index pos:line="256" pos:column="29">[<expr><name pos:line="256" pos:column="30">ac<pos:position pos:line="256" pos:column="32"/></name><operator pos:line="256" pos:column="32">++<pos:position pos:line="256" pos:column="34"/></operator></expr>]<pos:position pos:line="256" pos:column="35"/></index></name> <operator pos:line="256" pos:column="36">=<pos:position pos:line="256" pos:column="37"/></operator> <literal type="string" pos:line="256" pos:column="38">"--force"<pos:position pos:line="256" pos:column="47"/></literal></expr>;<pos:position pos:line="256" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="257" pos:column="17">if <condition pos:line="257" pos:column="20">(<expr><name pos:line="257" pos:column="21">write_batch<pos:position pos:line="257" pos:column="32"/></name> <operator pos:line="257" pos:column="33">&lt;<pos:position pos:line="257" pos:column="37"/></operator> <literal type="number" pos:line="257" pos:column="35">0<pos:position pos:line="257" pos:column="36"/></literal></expr>)<pos:position pos:line="257" pos:column="37"/></condition><then pos:line="257" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="258" pos:column="25">args<pos:position pos:line="258" pos:column="29"/></name><index pos:line="258" pos:column="29">[<expr><name pos:line="258" pos:column="30">ac<pos:position pos:line="258" pos:column="32"/></name><operator pos:line="258" pos:column="32">++<pos:position pos:line="258" pos:column="34"/></operator></expr>]<pos:position pos:line="258" pos:column="35"/></index></name> <operator pos:line="258" pos:column="36">=<pos:position pos:line="258" pos:column="37"/></operator> <literal type="string" pos:line="258" pos:column="38">"--only-write-batch=X"<pos:position pos:line="258" pos:column="60"/></literal></expr>;<pos:position pos:line="258" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="259" pos:column="17">if <condition pos:line="259" pos:column="20">(<expr><name pos:line="259" pos:column="21">am_root<pos:position pos:line="259" pos:column="28"/></name> <operator pos:line="259" pos:column="29">&gt;<pos:position pos:line="259" pos:column="33"/></operator> <literal type="number" pos:line="259" pos:column="31">1<pos:position pos:line="259" pos:column="32"/></literal></expr>)<pos:position pos:line="259" pos:column="33"/></condition><then pos:line="259" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="260" pos:column="25">args<pos:position pos:line="260" pos:column="29"/></name><index pos:line="260" pos:column="29">[<expr><name pos:line="260" pos:column="30">ac<pos:position pos:line="260" pos:column="32"/></name><operator pos:line="260" pos:column="32">++<pos:position pos:line="260" pos:column="34"/></operator></expr>]<pos:position pos:line="260" pos:column="35"/></index></name> <operator pos:line="260" pos:column="36">=<pos:position pos:line="260" pos:column="37"/></operator> <literal type="string" pos:line="260" pos:column="38">"--super"<pos:position pos:line="260" pos:column="47"/></literal></expr>;<pos:position pos:line="260" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="261" pos:column="17">if <condition pos:line="261" pos:column="20">(<expr><name pos:line="261" pos:column="21">size_only<pos:position pos:line="261" pos:column="30"/></name></expr>)<pos:position pos:line="261" pos:column="31"/></condition><then pos:line="261" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="262" pos:column="25">args<pos:position pos:line="262" pos:column="29"/></name><index pos:line="262" pos:column="29">[<expr><name pos:line="262" pos:column="30">ac<pos:position pos:line="262" pos:column="32"/></name><operator pos:line="262" pos:column="32">++<pos:position pos:line="262" pos:column="34"/></operator></expr>]<pos:position pos:line="262" pos:column="35"/></index></name> <operator pos:line="262" pos:column="36">=<pos:position pos:line="262" pos:column="37"/></operator> <literal type="string" pos:line="262" pos:column="38">"--size-only"<pos:position pos:line="262" pos:column="51"/></literal></expr>;<pos:position pos:line="262" pos:column="52"/></expr_stmt></block></then></if>
	}<pos:position pos:line="263" pos:column="10"/></block></then> <else pos:line="263" pos:column="11">else <block pos:line="263" pos:column="16">{
		<if pos:line="264" pos:column="17">if <condition pos:line="264" pos:column="20">(<expr><name pos:line="264" pos:column="21">skip_compress<pos:position pos:line="264" pos:column="34"/></name></expr>)<pos:position pos:line="264" pos:column="35"/></condition><then pos:line="264" pos:column="35"> <block pos:line="264" pos:column="36">{
			<if pos:line="265" pos:column="25">if <condition pos:line="265" pos:column="28">(<expr><call><name pos:line="265" pos:column="29">asprintf<pos:position pos:line="265" pos:column="37"/></name><argument_list pos:line="265" pos:column="37">(<argument><expr><operator pos:line="265" pos:column="38">&amp;<pos:position pos:line="265" pos:column="43"/></operator><name pos:line="265" pos:column="39">arg<pos:position pos:line="265" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="44">"--skip-compress=%s"<pos:position pos:line="265" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="265" pos:column="66">skip_compress<pos:position pos:line="265" pos:column="79"/></name></expr></argument>)<pos:position pos:line="265" pos:column="80"/></argument_list></call> <operator pos:line="265" pos:column="81">&lt;<pos:position pos:line="265" pos:column="85"/></operator> <literal type="number" pos:line="265" pos:column="83">0<pos:position pos:line="265" pos:column="84"/></literal></expr>)<pos:position pos:line="265" pos:column="85"/></condition><then pos:line="265" pos:column="85">
				<block type="pseudo"><goto pos:line="266" pos:column="33">goto <name pos:line="266" pos:column="38">oom<pos:position pos:line="266" pos:column="41"/></name>;<pos:position pos:line="266" pos:column="42"/></goto></block></then></if>
			<expr_stmt><expr><name><name pos:line="267" pos:column="25">args<pos:position pos:line="267" pos:column="29"/></name><index pos:line="267" pos:column="29">[<expr><name pos:line="267" pos:column="30">ac<pos:position pos:line="267" pos:column="32"/></name><operator pos:line="267" pos:column="32">++<pos:position pos:line="267" pos:column="34"/></operator></expr>]<pos:position pos:line="267" pos:column="35"/></index></name> <operator pos:line="267" pos:column="36">=<pos:position pos:line="267" pos:column="37"/></operator> <name pos:line="267" pos:column="38">arg<pos:position pos:line="267" pos:column="41"/></name></expr>;<pos:position pos:line="267" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="268" pos:column="18"/></block></then></if>
	}<pos:position pos:line="269" pos:column="10"/></block></else></if>

	<if pos:line="271" pos:column="9">if <condition pos:line="271" pos:column="12">(<expr><name pos:line="271" pos:column="13">modify_window_set<pos:position pos:line="271" pos:column="30"/></name></expr>)<pos:position pos:line="271" pos:column="31"/></condition><then pos:line="271" pos:column="31"> <block pos:line="271" pos:column="32">{
		<if pos:line="272" pos:column="17">if <condition pos:line="272" pos:column="20">(<expr><call><name pos:line="272" pos:column="21">asprintf<pos:position pos:line="272" pos:column="29"/></name><argument_list pos:line="272" pos:column="29">(<argument><expr><operator pos:line="272" pos:column="30">&amp;<pos:position pos:line="272" pos:column="35"/></operator><name pos:line="272" pos:column="31">arg<pos:position pos:line="272" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="36">"--modify-window=%d"<pos:position pos:line="272" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="272" pos:column="58">modify_window<pos:position pos:line="272" pos:column="71"/></name></expr></argument>)<pos:position pos:line="272" pos:column="72"/></argument_list></call> <operator pos:line="272" pos:column="73">&lt;<pos:position pos:line="272" pos:column="77"/></operator> <literal type="number" pos:line="272" pos:column="75">0<pos:position pos:line="272" pos:column="76"/></literal></expr>)<pos:position pos:line="272" pos:column="77"/></condition><then pos:line="272" pos:column="77">
			<block type="pseudo"><goto pos:line="273" pos:column="25">goto <name pos:line="273" pos:column="30">oom<pos:position pos:line="273" pos:column="33"/></name>;<pos:position pos:line="273" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="274" pos:column="17">args<pos:position pos:line="274" pos:column="21"/></name><index pos:line="274" pos:column="21">[<expr><name pos:line="274" pos:column="22">ac<pos:position pos:line="274" pos:column="24"/></name><operator pos:line="274" pos:column="24">++<pos:position pos:line="274" pos:column="26"/></operator></expr>]<pos:position pos:line="274" pos:column="27"/></index></name> <operator pos:line="274" pos:column="28">=<pos:position pos:line="274" pos:column="29"/></operator> <name pos:line="274" pos:column="30">arg<pos:position pos:line="274" pos:column="33"/></name></expr>;<pos:position pos:line="274" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="275" pos:column="10"/></block></then></if>

	<if pos:line="277" pos:column="9">if <condition pos:line="277" pos:column="12">(<expr><name pos:line="277" pos:column="13">checksum_seed<pos:position pos:line="277" pos:column="26"/></name></expr>)<pos:position pos:line="277" pos:column="27"/></condition><then pos:line="277" pos:column="27"> <block pos:line="277" pos:column="28">{
		<if pos:line="278" pos:column="17">if <condition pos:line="278" pos:column="20">(<expr><call><name pos:line="278" pos:column="21">asprintf<pos:position pos:line="278" pos:column="29"/></name><argument_list pos:line="278" pos:column="29">(<argument><expr><operator pos:line="278" pos:column="30">&amp;<pos:position pos:line="278" pos:column="35"/></operator><name pos:line="278" pos:column="31">arg<pos:position pos:line="278" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="278" pos:column="36">"--checksum-seed=%d"<pos:position pos:line="278" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="278" pos:column="58">checksum_seed<pos:position pos:line="278" pos:column="71"/></name></expr></argument>)<pos:position pos:line="278" pos:column="72"/></argument_list></call> <operator pos:line="278" pos:column="73">&lt;<pos:position pos:line="278" pos:column="77"/></operator> <literal type="number" pos:line="278" pos:column="75">0<pos:position pos:line="278" pos:column="76"/></literal></expr>)<pos:position pos:line="278" pos:column="77"/></condition><then pos:line="278" pos:column="77">
			<block type="pseudo"><goto pos:line="279" pos:column="25">goto <name pos:line="279" pos:column="30">oom<pos:position pos:line="279" pos:column="33"/></name>;<pos:position pos:line="279" pos:column="34"/></goto></block></then></if>
		<expr_stmt><expr><name><name pos:line="280" pos:column="17">args<pos:position pos:line="280" pos:column="21"/></name><index pos:line="280" pos:column="21">[<expr><name pos:line="280" pos:column="22">ac<pos:position pos:line="280" pos:column="24"/></name><operator pos:line="280" pos:column="24">++<pos:position pos:line="280" pos:column="26"/></operator></expr>]<pos:position pos:line="280" pos:column="27"/></index></name> <operator pos:line="280" pos:column="28">=<pos:position pos:line="280" pos:column="29"/></operator> <name pos:line="280" pos:column="30">arg<pos:position pos:line="280" pos:column="33"/></name></expr>;<pos:position pos:line="280" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="281" pos:column="10"/></block></then></if>

	<if pos:line="283" pos:column="9">if <condition pos:line="283" pos:column="12">(<expr><name pos:line="283" pos:column="13">partial_dir<pos:position pos:line="283" pos:column="24"/></name> <operator pos:line="283" pos:column="25">&amp;&amp;<pos:position pos:line="283" pos:column="35"/></operator> <name pos:line="283" pos:column="28">am_sender<pos:position pos:line="283" pos:column="37"/></name></expr>)<pos:position pos:line="283" pos:column="38"/></condition><then pos:line="283" pos:column="38"> <block pos:line="283" pos:column="39">{
		<if pos:line="284" pos:column="17">if <condition pos:line="284" pos:column="20">(<expr><name pos:line="284" pos:column="21">partial_dir<pos:position pos:line="284" pos:column="32"/></name> <operator pos:line="284" pos:column="33">!=<pos:position pos:line="284" pos:column="35"/></operator> <name pos:line="284" pos:column="36">tmp_partialdir<pos:position pos:line="284" pos:column="50"/></name></expr>)<pos:position pos:line="284" pos:column="51"/></condition><then pos:line="284" pos:column="51"> <block pos:line="284" pos:column="52">{
			<expr_stmt><expr><name><name pos:line="285" pos:column="25">args<pos:position pos:line="285" pos:column="29"/></name><index pos:line="285" pos:column="29">[<expr><name pos:line="285" pos:column="30">ac<pos:position pos:line="285" pos:column="32"/></name><operator pos:line="285" pos:column="32">++<pos:position pos:line="285" pos:column="34"/></operator></expr>]<pos:position pos:line="285" pos:column="35"/></index></name> <operator pos:line="285" pos:column="36">=<pos:position pos:line="285" pos:column="37"/></operator> <literal type="string" pos:line="285" pos:column="38">"--partial-dir"<pos:position pos:line="285" pos:column="53"/></literal></expr>;<pos:position pos:line="285" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="286" pos:column="25">args<pos:position pos:line="286" pos:column="29"/></name><index pos:line="286" pos:column="29">[<expr><name pos:line="286" pos:column="30">ac<pos:position pos:line="286" pos:column="32"/></name><operator pos:line="286" pos:column="32">++<pos:position pos:line="286" pos:column="34"/></operator></expr>]<pos:position pos:line="286" pos:column="35"/></index></name> <operator pos:line="286" pos:column="36">=<pos:position pos:line="286" pos:column="37"/></operator> <name pos:line="286" pos:column="38">partial_dir<pos:position pos:line="286" pos:column="49"/></name></expr>;<pos:position pos:line="286" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="287" pos:column="18"/></block></then></if>
		<if pos:line="288" pos:column="17">if <condition pos:line="288" pos:column="20">(<expr><name pos:line="288" pos:column="21">delay_updates<pos:position pos:line="288" pos:column="34"/></name></expr>)<pos:position pos:line="288" pos:column="35"/></condition><then pos:line="288" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="289" pos:column="25">args<pos:position pos:line="289" pos:column="29"/></name><index pos:line="289" pos:column="29">[<expr><name pos:line="289" pos:column="30">ac<pos:position pos:line="289" pos:column="32"/></name><operator pos:line="289" pos:column="32">++<pos:position pos:line="289" pos:column="34"/></operator></expr>]<pos:position pos:line="289" pos:column="35"/></index></name> <operator pos:line="289" pos:column="36">=<pos:position pos:line="289" pos:column="37"/></operator> <literal type="string" pos:line="289" pos:column="38">"--delay-updates"<pos:position pos:line="289" pos:column="55"/></literal></expr>;<pos:position pos:line="289" pos:column="56"/></expr_stmt></block></then></if>
	}<pos:position pos:line="290" pos:column="10"/></block></then> <elseif pos:line="290" pos:column="11">else <if pos:line="290" pos:column="16">if <condition pos:line="290" pos:column="19">(<expr><name pos:line="290" pos:column="20">keep_partial<pos:position pos:line="290" pos:column="32"/></name> <operator pos:line="290" pos:column="33">&amp;&amp;<pos:position pos:line="290" pos:column="43"/></operator> <name pos:line="290" pos:column="36">am_sender<pos:position pos:line="290" pos:column="45"/></name></expr>)<pos:position pos:line="290" pos:column="46"/></condition><then pos:line="290" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="291" pos:column="17">args<pos:position pos:line="291" pos:column="21"/></name><index pos:line="291" pos:column="21">[<expr><name pos:line="291" pos:column="22">ac<pos:position pos:line="291" pos:column="24"/></name><operator pos:line="291" pos:column="24">++<pos:position pos:line="291" pos:column="26"/></operator></expr>]<pos:position pos:line="291" pos:column="27"/></index></name> <operator pos:line="291" pos:column="28">=<pos:position pos:line="291" pos:column="29"/></operator> <literal type="string" pos:line="291" pos:column="30">"--partial"<pos:position pos:line="291" pos:column="41"/></literal></expr>;<pos:position pos:line="291" pos:column="42"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="293" pos:column="9">if <condition pos:line="293" pos:column="12">(<expr><name pos:line="293" pos:column="13">ignore_errors<pos:position pos:line="293" pos:column="26"/></name></expr>)<pos:position pos:line="293" pos:column="27"/></condition><then pos:line="293" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="294" pos:column="17">args<pos:position pos:line="294" pos:column="21"/></name><index pos:line="294" pos:column="21">[<expr><name pos:line="294" pos:column="22">ac<pos:position pos:line="294" pos:column="24"/></name><operator pos:line="294" pos:column="24">++<pos:position pos:line="294" pos:column="26"/></operator></expr>]<pos:position pos:line="294" pos:column="27"/></index></name> <operator pos:line="294" pos:column="28">=<pos:position pos:line="294" pos:column="29"/></operator> <literal type="string" pos:line="294" pos:column="30">"--ignore-errors"<pos:position pos:line="294" pos:column="47"/></literal></expr>;<pos:position pos:line="294" pos:column="48"/></expr_stmt></block></then></if>

	<if pos:line="296" pos:column="9">if <condition pos:line="296" pos:column="12">(<expr><name pos:line="296" pos:column="13">copy_unsafe_links<pos:position pos:line="296" pos:column="30"/></name></expr>)<pos:position pos:line="296" pos:column="31"/></condition><then pos:line="296" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="297" pos:column="17">args<pos:position pos:line="297" pos:column="21"/></name><index pos:line="297" pos:column="21">[<expr><name pos:line="297" pos:column="22">ac<pos:position pos:line="297" pos:column="24"/></name><operator pos:line="297" pos:column="24">++<pos:position pos:line="297" pos:column="26"/></operator></expr>]<pos:position pos:line="297" pos:column="27"/></index></name> <operator pos:line="297" pos:column="28">=<pos:position pos:line="297" pos:column="29"/></operator> <literal type="string" pos:line="297" pos:column="30">"--copy-unsafe-links"<pos:position pos:line="297" pos:column="51"/></literal></expr>;<pos:position pos:line="297" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="299" pos:column="9">if <condition pos:line="299" pos:column="12">(<expr><name pos:line="299" pos:column="13">safe_symlinks<pos:position pos:line="299" pos:column="26"/></name></expr>)<pos:position pos:line="299" pos:column="27"/></condition><then pos:line="299" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="300" pos:column="17">args<pos:position pos:line="300" pos:column="21"/></name><index pos:line="300" pos:column="21">[<expr><name pos:line="300" pos:column="22">ac<pos:position pos:line="300" pos:column="24"/></name><operator pos:line="300" pos:column="24">++<pos:position pos:line="300" pos:column="26"/></operator></expr>]<pos:position pos:line="300" pos:column="27"/></index></name> <operator pos:line="300" pos:column="28">=<pos:position pos:line="300" pos:column="29"/></operator> <literal type="string" pos:line="300" pos:column="30">"--safe-links"<pos:position pos:line="300" pos:column="44"/></literal></expr>;<pos:position pos:line="300" pos:column="45"/></expr_stmt></block></then></if>

	<if pos:line="302" pos:column="9">if <condition pos:line="302" pos:column="12">(<expr><name pos:line="302" pos:column="13">numeric_ids<pos:position pos:line="302" pos:column="24"/></name></expr>)<pos:position pos:line="302" pos:column="25"/></condition><then pos:line="302" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="303" pos:column="17">args<pos:position pos:line="303" pos:column="21"/></name><index pos:line="303" pos:column="21">[<expr><name pos:line="303" pos:column="22">ac<pos:position pos:line="303" pos:column="24"/></name><operator pos:line="303" pos:column="24">++<pos:position pos:line="303" pos:column="26"/></operator></expr>]<pos:position pos:line="303" pos:column="27"/></index></name> <operator pos:line="303" pos:column="28">=<pos:position pos:line="303" pos:column="29"/></operator> <literal type="string" pos:line="303" pos:column="30">"--numeric-ids"<pos:position pos:line="303" pos:column="45"/></literal></expr>;<pos:position pos:line="303" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="305" pos:column="9">if <condition pos:line="305" pos:column="12">(<expr><name pos:line="305" pos:column="13">use_qsort<pos:position pos:line="305" pos:column="22"/></name></expr>)<pos:position pos:line="305" pos:column="23"/></condition><then pos:line="305" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="306" pos:column="17">args<pos:position pos:line="306" pos:column="21"/></name><index pos:line="306" pos:column="21">[<expr><name pos:line="306" pos:column="22">ac<pos:position pos:line="306" pos:column="24"/></name><operator pos:line="306" pos:column="24">++<pos:position pos:line="306" pos:column="26"/></operator></expr>]<pos:position pos:line="306" pos:column="27"/></index></name> <operator pos:line="306" pos:column="28">=<pos:position pos:line="306" pos:column="29"/></operator> <literal type="string" pos:line="306" pos:column="30">"--use-qsort"<pos:position pos:line="306" pos:column="43"/></literal></expr>;<pos:position pos:line="306" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="308" pos:column="9">if <condition pos:line="308" pos:column="12">(<expr><name pos:line="308" pos:column="13">am_sender<pos:position pos:line="308" pos:column="22"/></name></expr>)<pos:position pos:line="308" pos:column="23"/></condition><then pos:line="308" pos:column="23"> <block pos:line="308" pos:column="24">{
		<if pos:line="309" pos:column="17">if <condition pos:line="309" pos:column="20">(<expr><name pos:line="309" pos:column="21">ignore_existing<pos:position pos:line="309" pos:column="36"/></name></expr>)<pos:position pos:line="309" pos:column="37"/></condition><then pos:line="309" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="310" pos:column="25">args<pos:position pos:line="310" pos:column="29"/></name><index pos:line="310" pos:column="29">[<expr><name pos:line="310" pos:column="30">ac<pos:position pos:line="310" pos:column="32"/></name><operator pos:line="310" pos:column="32">++<pos:position pos:line="310" pos:column="34"/></operator></expr>]<pos:position pos:line="310" pos:column="35"/></index></name> <operator pos:line="310" pos:column="36">=<pos:position pos:line="310" pos:column="37"/></operator> <literal type="string" pos:line="310" pos:column="38">"--ignore-existing"<pos:position pos:line="310" pos:column="57"/></literal></expr>;<pos:position pos:line="310" pos:column="58"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="312" pos:column="17">/* Backward compatibility: send --existing, not --ignore-non-existing. */</comment>
		<if pos:line="313" pos:column="17">if <condition pos:line="313" pos:column="20">(<expr><name pos:line="313" pos:column="21">ignore_non_existing<pos:position pos:line="313" pos:column="40"/></name></expr>)<pos:position pos:line="313" pos:column="41"/></condition><then pos:line="313" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="314" pos:column="25">args<pos:position pos:line="314" pos:column="29"/></name><index pos:line="314" pos:column="29">[<expr><name pos:line="314" pos:column="30">ac<pos:position pos:line="314" pos:column="32"/></name><operator pos:line="314" pos:column="32">++<pos:position pos:line="314" pos:column="34"/></operator></expr>]<pos:position pos:line="314" pos:column="35"/></index></name> <operator pos:line="314" pos:column="36">=<pos:position pos:line="314" pos:column="37"/></operator> <literal type="string" pos:line="314" pos:column="38">"--existing"<pos:position pos:line="314" pos:column="50"/></literal></expr>;<pos:position pos:line="314" pos:column="51"/></expr_stmt></block></then></if>

		<if pos:line="316" pos:column="17">if <condition pos:line="316" pos:column="20">(<expr><name pos:line="316" pos:column="21">tmpdir<pos:position pos:line="316" pos:column="27"/></name></expr>)<pos:position pos:line="316" pos:column="28"/></condition><then pos:line="316" pos:column="28"> <block pos:line="316" pos:column="29">{
			<expr_stmt><expr><name><name pos:line="317" pos:column="25">args<pos:position pos:line="317" pos:column="29"/></name><index pos:line="317" pos:column="29">[<expr><name pos:line="317" pos:column="30">ac<pos:position pos:line="317" pos:column="32"/></name><operator pos:line="317" pos:column="32">++<pos:position pos:line="317" pos:column="34"/></operator></expr>]<pos:position pos:line="317" pos:column="35"/></index></name> <operator pos:line="317" pos:column="36">=<pos:position pos:line="317" pos:column="37"/></operator> <literal type="string" pos:line="317" pos:column="38">"--temp-dir"<pos:position pos:line="317" pos:column="50"/></literal></expr>;<pos:position pos:line="317" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="318" pos:column="25">args<pos:position pos:line="318" pos:column="29"/></name><index pos:line="318" pos:column="29">[<expr><name pos:line="318" pos:column="30">ac<pos:position pos:line="318" pos:column="32"/></name><operator pos:line="318" pos:column="32">++<pos:position pos:line="318" pos:column="34"/></operator></expr>]<pos:position pos:line="318" pos:column="35"/></index></name> <operator pos:line="318" pos:column="36">=<pos:position pos:line="318" pos:column="37"/></operator> <name pos:line="318" pos:column="38">tmpdir<pos:position pos:line="318" pos:column="44"/></name></expr>;<pos:position pos:line="318" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="319" pos:column="18"/></block></then></if>

		<if pos:line="321" pos:column="17">if <condition pos:line="321" pos:column="20">(<expr><name><name pos:line="321" pos:column="21">basis_dir<pos:position pos:line="321" pos:column="30"/></name><index pos:line="321" pos:column="30">[<expr><literal type="number" pos:line="321" pos:column="31">0<pos:position pos:line="321" pos:column="32"/></literal></expr>]<pos:position pos:line="321" pos:column="33"/></index></name></expr>)<pos:position pos:line="321" pos:column="34"/></condition><then pos:line="321" pos:column="34"> <block pos:line="321" pos:column="35">{
			<comment type="block" pos:line="322" pos:column="25">/* the server only needs this option if it is not the sender,
			 *   and it may be an older version that doesn't know this
			 *   option, so don't send it if client is the sender.
			 */</comment>
			<for pos:line="326" pos:column="25">for <control pos:line="326" pos:column="29">(<init><expr><name pos:line="326" pos:column="30">i<pos:position pos:line="326" pos:column="31"/></name> <operator pos:line="326" pos:column="32">=<pos:position pos:line="326" pos:column="33"/></operator> <literal type="number" pos:line="326" pos:column="34">0<pos:position pos:line="326" pos:column="35"/></literal></expr>;<pos:position pos:line="326" pos:column="36"/></init> <condition><expr><name pos:line="326" pos:column="37">i<pos:position pos:line="326" pos:column="38"/></name> <operator pos:line="326" pos:column="39">&lt;<pos:position pos:line="326" pos:column="43"/></operator> <name pos:line="326" pos:column="41">basis_dir_cnt<pos:position pos:line="326" pos:column="54"/></name></expr>;<pos:position pos:line="326" pos:column="55"/></condition> <incr><expr><name pos:line="326" pos:column="56">i<pos:position pos:line="326" pos:column="57"/></name><operator pos:line="326" pos:column="57">++<pos:position pos:line="326" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="326" pos:column="60"/></control> <block pos:line="326" pos:column="61">{
				<expr_stmt><expr><name><name pos:line="327" pos:column="33">args<pos:position pos:line="327" pos:column="37"/></name><index pos:line="327" pos:column="37">[<expr><name pos:line="327" pos:column="38">ac<pos:position pos:line="327" pos:column="40"/></name><operator pos:line="327" pos:column="40">++<pos:position pos:line="327" pos:column="42"/></operator></expr>]<pos:position pos:line="327" pos:column="43"/></index></name> <operator pos:line="327" pos:column="44">=<pos:position pos:line="327" pos:column="45"/></operator> <name pos:line="327" pos:column="46">dest_option<pos:position pos:line="327" pos:column="57"/></name></expr>;<pos:position pos:line="327" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="328" pos:column="33">args<pos:position pos:line="328" pos:column="37"/></name><index pos:line="328" pos:column="37">[<expr><name pos:line="328" pos:column="38">ac<pos:position pos:line="328" pos:column="40"/></name><operator pos:line="328" pos:column="40">++<pos:position pos:line="328" pos:column="42"/></operator></expr>]<pos:position pos:line="328" pos:column="43"/></index></name> <operator pos:line="328" pos:column="44">=<pos:position pos:line="328" pos:column="45"/></operator> <name><name pos:line="328" pos:column="46">basis_dir<pos:position pos:line="328" pos:column="55"/></name><index pos:line="328" pos:column="55">[<expr><name pos:line="328" pos:column="56">i<pos:position pos:line="328" pos:column="57"/></name></expr>]<pos:position pos:line="328" pos:column="58"/></index></name></expr>;<pos:position pos:line="328" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="329" pos:column="26"/></block></for>
		}<pos:position pos:line="330" pos:column="18"/></block></then></if>
	}<pos:position pos:line="331" pos:column="10"/></block></then></if>

	<if pos:line="333" pos:column="9">if <condition pos:line="333" pos:column="12">(<expr><name pos:line="333" pos:column="13">append_mode<pos:position pos:line="333" pos:column="24"/></name></expr>)<pos:position pos:line="333" pos:column="25"/></condition><then pos:line="333" pos:column="25"> <block pos:line="333" pos:column="26">{
		<if pos:line="334" pos:column="17">if <condition pos:line="334" pos:column="20">(<expr><name pos:line="334" pos:column="21">append_mode<pos:position pos:line="334" pos:column="32"/></name> <operator pos:line="334" pos:column="33">&gt;<pos:position pos:line="334" pos:column="37"/></operator> <literal type="number" pos:line="334" pos:column="35">1<pos:position pos:line="334" pos:column="36"/></literal></expr>)<pos:position pos:line="334" pos:column="37"/></condition><then pos:line="334" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="335" pos:column="25">args<pos:position pos:line="335" pos:column="29"/></name><index pos:line="335" pos:column="29">[<expr><name pos:line="335" pos:column="30">ac<pos:position pos:line="335" pos:column="32"/></name><operator pos:line="335" pos:column="32">++<pos:position pos:line="335" pos:column="34"/></operator></expr>]<pos:position pos:line="335" pos:column="35"/></index></name> <operator pos:line="335" pos:column="36">=<pos:position pos:line="335" pos:column="37"/></operator> <literal type="string" pos:line="335" pos:column="38">"--append"<pos:position pos:line="335" pos:column="48"/></literal></expr>;<pos:position pos:line="335" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="336" pos:column="17">args<pos:position pos:line="336" pos:column="21"/></name><index pos:line="336" pos:column="21">[<expr><name pos:line="336" pos:column="22">ac<pos:position pos:line="336" pos:column="24"/></name><operator pos:line="336" pos:column="24">++<pos:position pos:line="336" pos:column="26"/></operator></expr>]<pos:position pos:line="336" pos:column="27"/></index></name> <operator pos:line="336" pos:column="28">=<pos:position pos:line="336" pos:column="29"/></operator> <literal type="string" pos:line="336" pos:column="30">"--append"<pos:position pos:line="336" pos:column="40"/></literal></expr>;<pos:position pos:line="336" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="337" pos:column="10"/></block></then> <elseif pos:line="337" pos:column="11">else <if pos:line="337" pos:column="16">if <condition pos:line="337" pos:column="19">(<expr><name pos:line="337" pos:column="20">inplace<pos:position pos:line="337" pos:column="27"/></name></expr>)<pos:position pos:line="337" pos:column="28"/></condition><then pos:line="337" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="338" pos:column="17">args<pos:position pos:line="338" pos:column="21"/></name><index pos:line="338" pos:column="21">[<expr><name pos:line="338" pos:column="22">ac<pos:position pos:line="338" pos:column="24"/></name><operator pos:line="338" pos:column="24">++<pos:position pos:line="338" pos:column="26"/></operator></expr>]<pos:position pos:line="338" pos:column="27"/></index></name> <operator pos:line="338" pos:column="28">=<pos:position pos:line="338" pos:column="29"/></operator> <literal type="string" pos:line="338" pos:column="30">"--inplace"<pos:position pos:line="338" pos:column="41"/></literal></expr>;<pos:position pos:line="338" pos:column="42"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="340" pos:column="9">if <condition pos:line="340" pos:column="12">(<expr><name pos:line="340" pos:column="13">files_from<pos:position pos:line="340" pos:column="23"/></name> <operator pos:line="340" pos:column="24">&amp;&amp;<pos:position pos:line="340" pos:column="34"/></operator> <operator pos:line="340" pos:column="27">(<pos:position pos:line="340" pos:column="28"/></operator><operator pos:line="340" pos:column="28">!<pos:position pos:line="340" pos:column="29"/></operator><name pos:line="340" pos:column="29">am_sender<pos:position pos:line="340" pos:column="38"/></name> <operator pos:line="340" pos:column="39">||<pos:position pos:line="340" pos:column="41"/></operator> <name pos:line="340" pos:column="42">filesfrom_host<pos:position pos:line="340" pos:column="56"/></name><operator pos:line="340" pos:column="56">)<pos:position pos:line="340" pos:column="57"/></operator></expr>)<pos:position pos:line="340" pos:column="58"/></condition><then pos:line="340" pos:column="58"> <block pos:line="340" pos:column="59">{
		<if pos:line="341" pos:column="17">if <condition pos:line="341" pos:column="20">(<expr><name pos:line="341" pos:column="21">filesfrom_host<pos:position pos:line="341" pos:column="35"/></name></expr>)<pos:position pos:line="341" pos:column="36"/></condition><then pos:line="341" pos:column="36"> <block pos:line="341" pos:column="37">{
			<expr_stmt><expr><name><name pos:line="342" pos:column="25">args<pos:position pos:line="342" pos:column="29"/></name><index pos:line="342" pos:column="29">[<expr><name pos:line="342" pos:column="30">ac<pos:position pos:line="342" pos:column="32"/></name><operator pos:line="342" pos:column="32">++<pos:position pos:line="342" pos:column="34"/></operator></expr>]<pos:position pos:line="342" pos:column="35"/></index></name> <operator pos:line="342" pos:column="36">=<pos:position pos:line="342" pos:column="37"/></operator> <literal type="string" pos:line="342" pos:column="38">"--files-from"<pos:position pos:line="342" pos:column="52"/></literal></expr>;<pos:position pos:line="342" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="343" pos:column="25">args<pos:position pos:line="343" pos:column="29"/></name><index pos:line="343" pos:column="29">[<expr><name pos:line="343" pos:column="30">ac<pos:position pos:line="343" pos:column="32"/></name><operator pos:line="343" pos:column="32">++<pos:position pos:line="343" pos:column="34"/></operator></expr>]<pos:position pos:line="343" pos:column="35"/></index></name> <operator pos:line="343" pos:column="36">=<pos:position pos:line="343" pos:column="37"/></operator> <name pos:line="343" pos:column="38">files_from<pos:position pos:line="343" pos:column="48"/></name></expr>;<pos:position pos:line="343" pos:column="49"/></expr_stmt>
			<if pos:line="344" pos:column="25">if <condition pos:line="344" pos:column="28">(<expr><name pos:line="344" pos:column="29">eol_nulls<pos:position pos:line="344" pos:column="38"/></name></expr>)<pos:position pos:line="344" pos:column="39"/></condition><then pos:line="344" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="345" pos:column="33">args<pos:position pos:line="345" pos:column="37"/></name><index pos:line="345" pos:column="37">[<expr><name pos:line="345" pos:column="38">ac<pos:position pos:line="345" pos:column="40"/></name><operator pos:line="345" pos:column="40">++<pos:position pos:line="345" pos:column="42"/></operator></expr>]<pos:position pos:line="345" pos:column="43"/></index></name> <operator pos:line="345" pos:column="44">=<pos:position pos:line="345" pos:column="45"/></operator> <literal type="string" pos:line="345" pos:column="46">"--from0"<pos:position pos:line="345" pos:column="55"/></literal></expr>;<pos:position pos:line="345" pos:column="56"/></expr_stmt></block></then></if>
		}<pos:position pos:line="346" pos:column="18"/></block></then> <else pos:line="346" pos:column="19">else <block pos:line="346" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="347" pos:column="25">args<pos:position pos:line="347" pos:column="29"/></name><index pos:line="347" pos:column="29">[<expr><name pos:line="347" pos:column="30">ac<pos:position pos:line="347" pos:column="32"/></name><operator pos:line="347" pos:column="32">++<pos:position pos:line="347" pos:column="34"/></operator></expr>]<pos:position pos:line="347" pos:column="35"/></index></name> <operator pos:line="347" pos:column="36">=<pos:position pos:line="347" pos:column="37"/></operator> <literal type="string" pos:line="347" pos:column="38">"--files-from=-"<pos:position pos:line="347" pos:column="54"/></literal></expr>;<pos:position pos:line="347" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="348" pos:column="25">args<pos:position pos:line="348" pos:column="29"/></name><index pos:line="348" pos:column="29">[<expr><name pos:line="348" pos:column="30">ac<pos:position pos:line="348" pos:column="32"/></name><operator pos:line="348" pos:column="32">++<pos:position pos:line="348" pos:column="34"/></operator></expr>]<pos:position pos:line="348" pos:column="35"/></index></name> <operator pos:line="348" pos:column="36">=<pos:position pos:line="348" pos:column="37"/></operator> <literal type="string" pos:line="348" pos:column="38">"--from0"<pos:position pos:line="348" pos:column="47"/></literal></expr>;<pos:position pos:line="348" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="349" pos:column="18"/></block></else></if>
		<if pos:line="350" pos:column="17">if <condition pos:line="350" pos:column="20">(<expr><operator pos:line="350" pos:column="21">!<pos:position pos:line="350" pos:column="22"/></operator><name pos:line="350" pos:column="22">relative_paths<pos:position pos:line="350" pos:column="36"/></name></expr>)<pos:position pos:line="350" pos:column="37"/></condition><then pos:line="350" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="351" pos:column="25">args<pos:position pos:line="351" pos:column="29"/></name><index pos:line="351" pos:column="29">[<expr><name pos:line="351" pos:column="30">ac<pos:position pos:line="351" pos:column="32"/></name><operator pos:line="351" pos:column="32">++<pos:position pos:line="351" pos:column="34"/></operator></expr>]<pos:position pos:line="351" pos:column="35"/></index></name> <operator pos:line="351" pos:column="36">=<pos:position pos:line="351" pos:column="37"/></operator> <literal type="string" pos:line="351" pos:column="38">"--no-relative"<pos:position pos:line="351" pos:column="53"/></literal></expr>;<pos:position pos:line="351" pos:column="54"/></expr_stmt></block></then></if>
	}<pos:position pos:line="352" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="353" pos:column="9">/* It's OK that this checks the upper-bound of the protocol_version. */</comment>
	<if pos:line="354" pos:column="9">if <condition pos:line="354" pos:column="12">(<expr><name pos:line="354" pos:column="13">relative_paths<pos:position pos:line="354" pos:column="27"/></name> <operator pos:line="354" pos:column="28">&amp;&amp;<pos:position pos:line="354" pos:column="38"/></operator> <operator pos:line="354" pos:column="31">!<pos:position pos:line="354" pos:column="32"/></operator><name pos:line="354" pos:column="32">implied_dirs<pos:position pos:line="354" pos:column="44"/></name> <operator pos:line="354" pos:column="45">&amp;&amp;<pos:position pos:line="354" pos:column="55"/></operator> <operator pos:line="354" pos:column="48">(<pos:position pos:line="354" pos:column="49"/></operator><operator pos:line="354" pos:column="49">!<pos:position pos:line="354" pos:column="50"/></operator><name pos:line="354" pos:column="50">am_sender<pos:position pos:line="354" pos:column="59"/></name> <operator pos:line="354" pos:column="60">||<pos:position pos:line="354" pos:column="62"/></operator> <name pos:line="354" pos:column="63">protocol_version<pos:position pos:line="354" pos:column="79"/></name> <operator pos:line="354" pos:column="80">&gt;=<pos:position pos:line="354" pos:column="85"/></operator> <literal type="number" pos:line="354" pos:column="83">30<pos:position pos:line="354" pos:column="85"/></literal><operator pos:line="354" pos:column="85">)<pos:position pos:line="354" pos:column="86"/></operator></expr>)<pos:position pos:line="354" pos:column="87"/></condition><then pos:line="354" pos:column="87">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="355" pos:column="17">args<pos:position pos:line="355" pos:column="21"/></name><index pos:line="355" pos:column="21">[<expr><name pos:line="355" pos:column="22">ac<pos:position pos:line="355" pos:column="24"/></name><operator pos:line="355" pos:column="24">++<pos:position pos:line="355" pos:column="26"/></operator></expr>]<pos:position pos:line="355" pos:column="27"/></index></name> <operator pos:line="355" pos:column="28">=<pos:position pos:line="355" pos:column="29"/></operator> <literal type="string" pos:line="355" pos:column="30">"--no-implied-dirs"<pos:position pos:line="355" pos:column="49"/></literal></expr>;<pos:position pos:line="355" pos:column="50"/></expr_stmt></block></then></if>

	<if pos:line="357" pos:column="9">if <condition pos:line="357" pos:column="12">(<expr><name pos:line="357" pos:column="13">fuzzy_basis<pos:position pos:line="357" pos:column="24"/></name> <operator pos:line="357" pos:column="25">&amp;&amp;<pos:position pos:line="357" pos:column="35"/></operator> <name pos:line="357" pos:column="28">am_sender<pos:position pos:line="357" pos:column="37"/></name></expr>)<pos:position pos:line="357" pos:column="38"/></condition><then pos:line="357" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="358" pos:column="17">args<pos:position pos:line="358" pos:column="21"/></name><index pos:line="358" pos:column="21">[<expr><name pos:line="358" pos:column="22">ac<pos:position pos:line="358" pos:column="24"/></name><operator pos:line="358" pos:column="24">++<pos:position pos:line="358" pos:column="26"/></operator></expr>]<pos:position pos:line="358" pos:column="27"/></index></name> <operator pos:line="358" pos:column="28">=<pos:position pos:line="358" pos:column="29"/></operator> <literal type="string" pos:line="358" pos:column="30">"--fuzzy"<pos:position pos:line="358" pos:column="39"/></literal></expr>;<pos:position pos:line="358" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="360" pos:column="9">if <condition pos:line="360" pos:column="12">(<expr><name pos:line="360" pos:column="13">remove_source_files<pos:position pos:line="360" pos:column="32"/></name> <operator pos:line="360" pos:column="33">==<pos:position pos:line="360" pos:column="35"/></operator> <literal type="number" pos:line="360" pos:column="36">1<pos:position pos:line="360" pos:column="37"/></literal></expr>)<pos:position pos:line="360" pos:column="38"/></condition><then pos:line="360" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="361" pos:column="17">args<pos:position pos:line="361" pos:column="21"/></name><index pos:line="361" pos:column="21">[<expr><name pos:line="361" pos:column="22">ac<pos:position pos:line="361" pos:column="24"/></name><operator pos:line="361" pos:column="24">++<pos:position pos:line="361" pos:column="26"/></operator></expr>]<pos:position pos:line="361" pos:column="27"/></index></name> <operator pos:line="361" pos:column="28">=<pos:position pos:line="361" pos:column="29"/></operator> <literal type="string" pos:line="361" pos:column="30">"--remove-source-files"<pos:position pos:line="361" pos:column="53"/></literal></expr>;<pos:position pos:line="361" pos:column="54"/></expr_stmt></block></then>
	<elseif pos:line="362" pos:column="9">else <if pos:line="362" pos:column="14">if <condition pos:line="362" pos:column="17">(<expr><name pos:line="362" pos:column="18">remove_source_files<pos:position pos:line="362" pos:column="37"/></name></expr>)<pos:position pos:line="362" pos:column="38"/></condition><then pos:line="362" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="363" pos:column="17">args<pos:position pos:line="363" pos:column="21"/></name><index pos:line="363" pos:column="21">[<expr><name pos:line="363" pos:column="22">ac<pos:position pos:line="363" pos:column="24"/></name><operator pos:line="363" pos:column="24">++<pos:position pos:line="363" pos:column="26"/></operator></expr>]<pos:position pos:line="363" pos:column="27"/></index></name> <operator pos:line="363" pos:column="28">=<pos:position pos:line="363" pos:column="29"/></operator> <literal type="string" pos:line="363" pos:column="30">"--remove-sent-files"<pos:position pos:line="363" pos:column="51"/></literal></expr>;<pos:position pos:line="363" pos:column="52"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="365" pos:column="9">if <condition pos:line="365" pos:column="12">(<expr><name pos:line="365" pos:column="13">ac<pos:position pos:line="365" pos:column="15"/></name> <operator pos:line="365" pos:column="16">&gt;<pos:position pos:line="365" pos:column="20"/></operator> <name pos:line="365" pos:column="18">MAX_SERVER_ARGS<pos:position pos:line="365" pos:column="33"/></name></expr>)<pos:position pos:line="365" pos:column="34"/></condition><then pos:line="365" pos:column="34"> <block pos:line="365" pos:column="35">{ <comment type="block" pos:line="365" pos:column="37">/* Not possible... */</comment>
		<expr_stmt><expr><call><name pos:line="366" pos:column="17">rprintf<pos:position pos:line="366" pos:column="24"/></name><argument_list pos:line="366" pos:column="24">(<argument><expr><name pos:line="366" pos:column="25">FERROR<pos:position pos:line="366" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="366" pos:column="33">"argc overflow in server_options().\n"<pos:position pos:line="366" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="366" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="367" pos:column="17">exit_cleanup<pos:position pos:line="367" pos:column="29"/></name><argument_list pos:line="367" pos:column="29">(<argument><expr><name pos:line="367" pos:column="30">RERR_MALLOC<pos:position pos:line="367" pos:column="41"/></name></expr></argument>)<pos:position pos:line="367" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="368" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="370" pos:column="9">*<pos:position pos:line="370" pos:column="10"/></operator><name pos:line="370" pos:column="10">argc_p<pos:position pos:line="370" pos:column="16"/></name> <operator pos:line="370" pos:column="17">=<pos:position pos:line="370" pos:column="18"/></operator> <name pos:line="370" pos:column="19">ac<pos:position pos:line="370" pos:column="21"/></name></expr>;<pos:position pos:line="370" pos:column="22"/></expr_stmt>
	<return pos:line="371" pos:column="9">return;<pos:position pos:line="371" pos:column="16"/></return>

    <label><name pos:line="373" pos:column="5">oom<pos:position pos:line="373" pos:column="8"/></name>:<pos:position pos:line="373" pos:column="9"/></label>
	<expr_stmt><expr><call><name pos:line="374" pos:column="9">out_of_memory<pos:position pos:line="374" pos:column="22"/></name><argument_list pos:line="374" pos:column="22">(<argument><expr><literal type="string" pos:line="374" pos:column="23">"server_options"<pos:position pos:line="374" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="374" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="41"/></expr_stmt>
}<pos:position pos:line="375" pos:column="2"/></block></function></unit>

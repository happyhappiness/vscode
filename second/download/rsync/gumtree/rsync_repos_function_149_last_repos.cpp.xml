<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_149_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">read_line<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">fd<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">buf<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">size_t<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">bufsiz<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">int<pos:position pos:line="1" pos:column="52"/></name></type> <name pos:line="1" pos:column="53">flags<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">ch<pos:position pos:line="3" pos:column="16"/></name></decl>, <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="19">s<pos:position pos:line="3" pos:column="20"/></name></decl>, <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="23">eob<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">ICONV_OPTION<pos:position pos:line="5" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">flags<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&amp;<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="21">RL_CONVERT<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">&amp;&amp;<pos:position pos:line="6" pos:column="42"/></operator> <name><name pos:line="6" pos:column="35">iconv_buf<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">.<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">size<pos:position pos:line="6" pos:column="49"/></name></name> <operator pos:line="6" pos:column="50">&lt;<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="52">bufsiz<pos:position pos:line="6" pos:column="58"/></name></expr>)<pos:position pos:line="6" pos:column="59"/></condition><then pos:line="6" pos:column="59">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">realloc_xbuf<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="31">iconv_buf<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">bufsiz<pos:position pos:line="7" pos:column="48"/></name> <operator pos:line="7" pos:column="49">+<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">1024<pos:position pos:line="7" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt></block></then></if>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

  <label><name pos:line="10" pos:column="3">start<pos:position pos:line="10" pos:column="8"/></name>:<pos:position pos:line="10" pos:column="9"/></label>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">ICONV_OPTION<pos:position pos:line="11" pos:column="20"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="12" pos:column="13">flags<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&amp;<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="21">RL_CONVERT<pos:position pos:line="12" pos:column="31"/></name></expr> ?<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <expr><name><name pos:line="12" pos:column="34">iconv_buf<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">buf<pos:position pos:line="12" pos:column="47"/></name></name></expr> <pos:position pos:line="12" pos:column="48"/></then><else pos:line="12" pos:column="48">: <expr><name pos:line="12" pos:column="50">buf<pos:position pos:line="12" pos:column="53"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="14" pos:column="9">s<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">buf<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name pos:line="16" pos:column="9">eob<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">s<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">+<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">bufsiz<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">-<pos:position pos:line="16" pos:column="27"/></operator> <literal type="number" pos:line="16" pos:column="28">1<pos:position pos:line="16" pos:column="29"/></literal></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr>)<pos:position pos:line="17" pos:column="18"/></condition> <block pos:line="17" pos:column="19">{
		<comment type="block" pos:line="18" pos:column="17">/* We avoid read_byte() for files because files can return an EOF. */</comment>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">fd<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">==<pos:position pos:line="19" pos:column="26"/></operator> <name><name pos:line="19" pos:column="27">iobuf<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">.<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">in_fd<pos:position pos:line="19" pos:column="38"/></name></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="25">ch<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">read_byte<pos:position pos:line="20" pos:column="39"/></name><argument_list pos:line="20" pos:column="39">(<argument><expr><name pos:line="20" pos:column="40">fd<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt></block></then>
		<elseif pos:line="21" pos:column="17">else <if pos:line="21" pos:column="22">if <condition pos:line="21" pos:column="25">(<expr><call><name pos:line="21" pos:column="26">safe_read<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">fd<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="40">&amp;<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="41">ch<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="45">1<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call> <operator pos:line="21" pos:column="48">==<pos:position pos:line="21" pos:column="50"/></operator> <literal type="number" pos:line="21" pos:column="51">0<pos:position pos:line="21" pos:column="52"/></literal></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53">
			<block type="pseudo"><break pos:line="22" pos:column="25">break;<pos:position pos:line="22" pos:column="31"/></break></block></then></if></elseif></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><ternary><condition><expr><name pos:line="23" pos:column="21">flags<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">&amp;<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="29">RL_EOL_NULLS<pos:position pos:line="23" pos:column="41"/></name></expr> ?<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <expr><name pos:line="23" pos:column="44">ch<pos:position pos:line="23" pos:column="46"/></name> <operator pos:line="23" pos:column="47">==<pos:position pos:line="23" pos:column="49"/></operator> <literal type="char" pos:line="23" pos:column="50">'\0'<pos:position pos:line="23" pos:column="54"/></literal></expr> <pos:position pos:line="23" pos:column="55"/></then><else pos:line="23" pos:column="55">: <expr><operator pos:line="23" pos:column="57">(<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="58">ch<pos:position pos:line="23" pos:column="60"/></name> <operator pos:line="23" pos:column="61">==<pos:position pos:line="23" pos:column="63"/></operator> <literal type="char" pos:line="23" pos:column="64">'\r'<pos:position pos:line="23" pos:column="68"/></literal> <operator pos:line="23" pos:column="69">||<pos:position pos:line="23" pos:column="71"/></operator> <name pos:line="23" pos:column="72">ch<pos:position pos:line="23" pos:column="74"/></name> <operator pos:line="23" pos:column="75">==<pos:position pos:line="23" pos:column="77"/></operator> <literal type="char" pos:line="23" pos:column="78">'\n'<pos:position pos:line="23" pos:column="82"/></literal><operator pos:line="23" pos:column="82">)<pos:position pos:line="23" pos:column="83"/></operator></expr></else></ternary></expr>)<pos:position pos:line="23" pos:column="84"/></condition><then pos:line="23" pos:column="84"> <block pos:line="23" pos:column="85">{
			<comment type="block" pos:line="24" pos:column="25">/* Skip empty lines if dumping comments. */</comment>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">flags<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">&amp;<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="37">RL_DUMP_COMMENTS<pos:position pos:line="25" pos:column="53"/></name> <operator pos:line="25" pos:column="54">&amp;&amp;<pos:position pos:line="25" pos:column="64"/></operator> <name pos:line="25" pos:column="57">s<pos:position pos:line="25" pos:column="58"/></name> <operator pos:line="25" pos:column="59">==<pos:position pos:line="25" pos:column="61"/></operator> <name pos:line="25" pos:column="62">buf<pos:position pos:line="25" pos:column="65"/></name></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66">
				<block type="pseudo"><continue pos:line="26" pos:column="33">continue;<pos:position pos:line="26" pos:column="42"/></continue></block></then></if>
			<break pos:line="27" pos:column="25">break;<pos:position pos:line="27" pos:column="31"/></break>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">s<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="25">eob<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="30" pos:column="25">*<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">s<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">++<pos:position pos:line="30" pos:column="29"/></operator> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">ch<pos:position pos:line="30" pos:column="34"/></name></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt></block></then></if>
	}<pos:position pos:line="31" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">s<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <literal type="char" pos:line="32" pos:column="14">'\0'<pos:position pos:line="32" pos:column="18"/></literal></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">flags<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&amp;<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="21">RL_DUMP_COMMENTS<pos:position pos:line="34" pos:column="37"/></name> <operator pos:line="34" pos:column="38">&amp;&amp;<pos:position pos:line="34" pos:column="48"/></operator> <operator pos:line="34" pos:column="41">(<pos:position pos:line="34" pos:column="42"/></operator><operator pos:line="34" pos:column="42">*<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">buf<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">==<pos:position pos:line="34" pos:column="49"/></operator> <literal type="char" pos:line="34" pos:column="50">'#'<pos:position pos:line="34" pos:column="53"/></literal> <operator pos:line="34" pos:column="54">||<pos:position pos:line="34" pos:column="56"/></operator> <operator pos:line="34" pos:column="57">*<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="58">buf<pos:position pos:line="34" pos:column="61"/></name> <operator pos:line="34" pos:column="62">==<pos:position pos:line="34" pos:column="64"/></operator> <literal type="char" pos:line="34" pos:column="65">';'<pos:position pos:line="34" pos:column="68"/></literal><operator pos:line="34" pos:column="68">)<pos:position pos:line="34" pos:column="69"/></operator></expr>)<pos:position pos:line="34" pos:column="70"/></condition><then pos:line="34" pos:column="70">
		<block type="pseudo"><goto pos:line="35" pos:column="17">goto <name pos:line="35" pos:column="22">start<pos:position pos:line="35" pos:column="27"/></name>;<pos:position pos:line="35" pos:column="28"/></goto></block></then></if>

<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">ICONV_OPTION<pos:position pos:line="37" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">flags<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&amp;<pos:position pos:line="38" pos:column="24"/></operator> <name pos:line="38" pos:column="21">RL_CONVERT<pos:position pos:line="38" pos:column="31"/></name></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32"> <block pos:line="38" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">xbuf<pos:position pos:line="39" pos:column="21"/></name></type> <name pos:line="39" pos:column="22">outbuf<pos:position pos:line="39" pos:column="28"/></name></decl>;<pos:position pos:line="39" pos:column="29"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">INIT_XBUF<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">outbuf<pos:position pos:line="40" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="35">buf<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="40">0<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">bufsiz<pos:position pos:line="40" pos:column="49"/></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="41" pos:column="17">iconv_buf<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">.<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">pos<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <literal type="number" pos:line="41" pos:column="33">0<pos:position pos:line="41" pos:column="34"/></literal></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="42" pos:column="17">iconv_buf<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">len<pos:position pos:line="42" pos:column="30"/></name></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <name pos:line="42" pos:column="33">s<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">-<pos:position pos:line="42" pos:column="36"/></operator> <name><name pos:line="42" pos:column="37">iconv_buf<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">.<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="47">buf<pos:position pos:line="42" pos:column="50"/></name></name></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">iconvbufs<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">ic_recv<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="36">&amp;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="37">iconv_buf<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="48">&amp;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="49">outbuf<pos:position pos:line="43" pos:column="55"/></name></expr></argument>,
			  <argument><expr><name pos:line="44" pos:column="27">ICB_INCLUDE_BAD<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">|<pos:position pos:line="44" pos:column="44"/></operator> <name pos:line="44" pos:column="45">ICB_INCLUDE_INCOMPLETE<pos:position pos:line="44" pos:column="67"/></name> <operator pos:line="44" pos:column="68">|<pos:position pos:line="44" pos:column="69"/></operator> <name pos:line="44" pos:column="70">ICB_INIT<pos:position pos:line="44" pos:column="78"/></name></expr></argument>)<pos:position pos:line="44" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="45" pos:column="17">outbuf<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">buf<pos:position pos:line="45" pos:column="27"/></name><index pos:line="45" pos:column="27">[<expr><name><name pos:line="45" pos:column="28">outbuf<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">.<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="35">len<pos:position pos:line="45" pos:column="38"/></name></name></expr>]<pos:position pos:line="45" pos:column="39"/></index></name> <operator pos:line="45" pos:column="40">=<pos:position pos:line="45" pos:column="41"/></operator> <literal type="char" pos:line="45" pos:column="42">'\0'<pos:position pos:line="45" pos:column="46"/></literal></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
		<return pos:line="46" pos:column="17">return <expr><name><name pos:line="46" pos:column="24">outbuf<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">.<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">len<pos:position pos:line="46" pos:column="34"/></name></name></expr>;<pos:position pos:line="46" pos:column="35"/></return>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">s<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">-<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">buf<pos:position pos:line="50" pos:column="23"/></name></expr>;<pos:position pos:line="50" pos:column="24"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

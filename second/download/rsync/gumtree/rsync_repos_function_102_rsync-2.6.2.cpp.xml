<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_102_rsync-2.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">io_multiplex_write<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">enum<pos:position pos:line="1" pos:column="28"/></name> <name pos:line="1" pos:column="29">msgcode<pos:position pos:line="1" pos:column="36"/></name></name></type> <name pos:line="1" pos:column="37">code<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">buf<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">size_t<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">len<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">io_multiplexing_out<pos:position pos:line="3" pos:column="33"/></name></expr>)<pos:position pos:line="3" pos:column="34"/></condition><then pos:line="3" pos:column="34"> <block type="pseudo"><return pos:line="3" pos:column="35">return <expr><literal type="number" pos:line="3" pos:column="42">0<pos:position pos:line="3" pos:column="43"/></literal></expr>;<pos:position pos:line="3" pos:column="44"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">io_flush<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">NORMAL_FLUSH<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="6" pos:column="9">stats<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">total_written<pos:position pos:line="6" pos:column="28"/></name></name> <operator pos:line="6" pos:column="29">+=<pos:position pos:line="6" pos:column="31"/></operator> <operator pos:line="6" pos:column="32">(<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">len<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">+<pos:position pos:line="6" pos:column="37"/></operator><literal type="number" pos:line="6" pos:column="37">4<pos:position pos:line="6" pos:column="38"/></literal><operator pos:line="6" pos:column="38">)<pos:position pos:line="6" pos:column="39"/></operator></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">mplex_write<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">multiplex_out_fd<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">code<pos:position pos:line="7" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="45">buf<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="50">len<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
	<return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_456_rsync-2.5.5.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">getnameinfo<pos:position pos:line="2" pos:column="12"/></name><argument_list pos:line="2" pos:column="12">(<argument><expr><name pos:line="2" pos:column="13">sa<pos:position pos:line="2" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="17">salen<pos:position pos:line="2" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="24">host<pos:position pos:line="2" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="30">hostlen<pos:position pos:line="2" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="39">serv<pos:position pos:line="2" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="45">servlen<pos:position pos:line="2" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="54">flags<pos:position pos:line="2" pos:column="59"/></name></expr></argument>)<pos:position pos:line="2" pos:column="60"/></argument_list>
	const struct <name pos:line="3" pos:column="22">sockaddr<pos:position pos:line="3" pos:column="30"/></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier><name pos:line="3" pos:column="32">sa<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">salen<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">host<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">hostlen<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">serv<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">size_t<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">servlen<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">flags<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
<block pos:line="10" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">extern<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">int<pos:position pos:line="11" pos:column="19"/></name></type> <name pos:line="11" pos:column="20">h_errno<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">afd<pos:position pos:line="12" pos:column="19"/></name></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">afd<pos:position pos:line="12" pos:column="24"/></name></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">servent<pos:position pos:line="13" pos:column="23"/></name></name> <modifier pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></modifier></type><name pos:line="13" pos:column="25">sp<pos:position pos:line="13" pos:column="27"/></name></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">hostent<pos:position pos:line="14" pos:column="23"/></name></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier></type><name pos:line="14" pos:column="25">hp<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">u_short<pos:position pos:line="15" pos:column="16"/></name></type> <name pos:line="15" pos:column="17">port<pos:position pos:line="15" pos:column="21"/></name></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">family<pos:position pos:line="16" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="21">i<pos:position pos:line="16" pos:column="22"/></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name> <modifier pos:line="17" pos:column="14">*<pos:position pos:line="17" pos:column="15"/></modifier></type><name pos:line="17" pos:column="15">addr<pos:position pos:line="17" pos:column="19"/></name></decl>, <modifier pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="22">p<pos:position pos:line="17" pos:column="23"/></name></decl>;<pos:position pos:line="17" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">u_long<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">v4a<pos:position pos:line="18" pos:column="19"/></name></decl>;<pos:position pos:line="18" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">u_char<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">pfx<pos:position pos:line="19" pos:column="19"/></name></decl>;<pos:position pos:line="19" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">h_error<pos:position pos:line="20" pos:column="20"/></name></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name></type> <name><name pos:line="21" pos:column="14">numserv<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><literal type="number" pos:line="21" pos:column="22">512<pos:position pos:line="21" pos:column="25"/></literal></expr>]<pos:position pos:line="21" pos:column="26"/></index></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">char<pos:position pos:line="22" pos:column="13"/></name></type> <name><name pos:line="22" pos:column="14">numaddr<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><literal type="number" pos:line="22" pos:column="22">512<pos:position pos:line="22" pos:column="25"/></literal></expr>]<pos:position pos:line="22" pos:column="26"/></index></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">sa<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">==<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">NULL<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">ENI_NOSOCKET<pos:position pos:line="25" pos:column="36"/></name></expr>;<pos:position pos:line="25" pos:column="37"/></return></block></then></if>

<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">HAVE_SOCKADDR_LEN<pos:position pos:line="27" pos:column="25"/></name></cpp:ifdef>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">sa<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">sa_len<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">!=<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">salen<pos:position pos:line="28" pos:column="32"/></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33"> <block type="pseudo"><return pos:line="28" pos:column="34">return <expr><name pos:line="28" pos:column="41">ENI_SALEN<pos:position pos:line="28" pos:column="50"/></name></expr>;<pos:position pos:line="28" pos:column="51"/></return></block></then></if>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="29" pos:column="8">/* HAVE_SOCKADDR_LEN */</comment>
	
	<expr_stmt><expr><name pos:line="31" pos:column="9">family<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name><name pos:line="31" pos:column="18">sa<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">sa_family<pos:position pos:line="31" pos:column="31"/></name></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
	<for pos:line="32" pos:column="9">for <control pos:line="32" pos:column="13">(<init><expr><name pos:line="32" pos:column="14">i<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <literal type="number" pos:line="32" pos:column="18">0<pos:position pos:line="32" pos:column="19"/></literal></expr>;<pos:position pos:line="32" pos:column="20"/></init> <condition><expr><name><name pos:line="32" pos:column="21">afdl<pos:position pos:line="32" pos:column="25"/></name><index pos:line="32" pos:column="25">[<expr><name pos:line="32" pos:column="26">i<pos:position pos:line="32" pos:column="27"/></name></expr>]<pos:position pos:line="32" pos:column="28"/></index></name><operator pos:line="32" pos:column="28">.<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">a_af<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></condition> <incr><expr><name pos:line="32" pos:column="35">i<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">++<pos:position pos:line="32" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="39"/></control>
		<block type="pseudo"><if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">afdl<pos:position pos:line="33" pos:column="25"/></name><index pos:line="33" pos:column="25">[<expr><name pos:line="33" pos:column="26">i<pos:position pos:line="33" pos:column="27"/></name></expr>]<pos:position pos:line="33" pos:column="28"/></index></name><operator pos:line="33" pos:column="28">.<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="29">a_af<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">==<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">family<pos:position pos:line="33" pos:column="43"/></name></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{
			<expr_stmt><expr><name pos:line="34" pos:column="25">afd<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <operator pos:line="34" pos:column="31">&amp;<pos:position pos:line="34" pos:column="36"/></operator><name><name pos:line="34" pos:column="32">afdl<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><name pos:line="34" pos:column="37">i<pos:position pos:line="34" pos:column="38"/></name></expr>]<pos:position pos:line="34" pos:column="39"/></index></name></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt>
			<goto pos:line="35" pos:column="25">goto <name pos:line="35" pos:column="30">found<pos:position pos:line="35" pos:column="35"/></name>;<pos:position pos:line="35" pos:column="36"/></goto>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if></block></for>
	<return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">ENI_FAMILY<pos:position pos:line="37" pos:column="26"/></name></expr>;<pos:position pos:line="37" pos:column="27"/></return>
	
 <label><name pos:line="39" pos:column="2">found<pos:position pos:line="39" pos:column="7"/></name>:<pos:position pos:line="39" pos:column="8"/></label>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">salen<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">!=<pos:position pos:line="40" pos:column="21"/></operator> <name><name pos:line="40" pos:column="22">afd<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">-&gt;<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="27">a_socklen<pos:position pos:line="40" pos:column="36"/></name></name></expr>)<pos:position pos:line="40" pos:column="37"/></condition><then pos:line="40" pos:column="37"> <block type="pseudo"><return pos:line="40" pos:column="38">return <expr><name pos:line="40" pos:column="45">ENI_SALEN<pos:position pos:line="40" pos:column="54"/></name></expr>;<pos:position pos:line="40" pos:column="55"/></return></block></then></if>
	
	<expr_stmt><expr><name pos:line="42" pos:column="9">port<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><operator pos:line="42" pos:column="17">(<pos:position pos:line="42" pos:column="18"/></operator>struct <name pos:line="42" pos:column="25">sockinet<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">*<pos:position pos:line="42" pos:column="35"/></operator><operator pos:line="42" pos:column="35">)<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">sa<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">)<pos:position pos:line="42" pos:column="39"/></operator><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">si_port<pos:position pos:line="42" pos:column="48"/></name></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt> <comment type="block" pos:line="42" pos:column="50">/* network byte order */</comment>
	<expr_stmt><expr><name pos:line="43" pos:column="9">addr<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">char<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">*<pos:position pos:line="43" pos:column="23"/></operator><operator pos:line="43" pos:column="23">)<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">sa<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">+<pos:position pos:line="43" pos:column="28"/></operator> <name><name pos:line="43" pos:column="29">afd<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">a_off<pos:position pos:line="43" pos:column="39"/></name></name></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">serv<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">==<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">NULL<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">||<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">servlen<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">==<pos:position pos:line="45" pos:column="39"/></operator> <literal type="number" pos:line="45" pos:column="40">0<pos:position pos:line="45" pos:column="41"/></literal></expr>)<pos:position pos:line="45" pos:column="42"/></condition><then pos:line="45" pos:column="42"> <block pos:line="45" pos:column="43">{
		<comment type="block" pos:line="46" pos:column="17">/* what we should do? */</comment>
	}<pos:position pos:line="47" pos:column="10"/></block></then> <elseif pos:line="47" pos:column="11">else <if pos:line="47" pos:column="16">if <condition pos:line="47" pos:column="19">(<expr><name pos:line="47" pos:column="20">flags<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">&amp;<pos:position pos:line="47" pos:column="31"/></operator> <name pos:line="47" pos:column="28">NI_NUMERICSERV<pos:position pos:line="47" pos:column="42"/></name></expr>)<pos:position pos:line="47" pos:column="43"/></condition><then pos:line="47" pos:column="43"> <block pos:line="47" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">snprintf<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">numserv<pos:position pos:line="48" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="35">sizeof<argument_list pos:line="48" pos:column="41">(<argument><expr><name pos:line="48" pos:column="42">numserv<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="52">"%d"<pos:position pos:line="48" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="58">ntohs<pos:position pos:line="48" pos:column="63"/></name><argument_list pos:line="48" pos:column="63">(<argument><expr><name pos:line="48" pos:column="64">port<pos:position pos:line="48" pos:column="68"/></name></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><call><name pos:line="49" pos:column="21">strlen<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">numserv<pos:position pos:line="49" pos:column="35"/></name></expr></argument>)<pos:position pos:line="49" pos:column="36"/></argument_list></call> <operator pos:line="49" pos:column="37">&gt;<pos:position pos:line="49" pos:column="41"/></operator> <name pos:line="49" pos:column="39">servlen<pos:position pos:line="49" pos:column="46"/></name></expr>)<pos:position pos:line="49" pos:column="47"/></condition><then pos:line="49" pos:column="47">
			<block type="pseudo"><return pos:line="50" pos:column="25">return <expr><name pos:line="50" pos:column="32">ENI_MEMORY<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">strcpy<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">serv<pos:position pos:line="51" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="30">numserv<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif> <else pos:line="52" pos:column="11">else <block pos:line="52" pos:column="16">{
		<expr_stmt><expr><name pos:line="53" pos:column="17">sp<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">getservbyport<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">port<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="53" pos:column="42">(<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="43">flags<pos:position pos:line="53" pos:column="48"/></name> <operator pos:line="53" pos:column="49">&amp;<pos:position pos:line="53" pos:column="54"/></operator> <name pos:line="53" pos:column="51">NI_DGRAM<pos:position pos:line="53" pos:column="59"/></name><operator pos:line="53" pos:column="59">)<pos:position pos:line="53" pos:column="60"/></operator></expr> ?<pos:position pos:line="53" pos:column="62"/></condition><then pos:line="53" pos:column="62"> <expr><literal type="string" pos:line="53" pos:column="63">"udp"<pos:position pos:line="53" pos:column="68"/></literal></expr> <pos:position pos:line="53" pos:column="69"/></then><else pos:line="53" pos:column="69">: <expr><literal type="string" pos:line="53" pos:column="71">"tcp"<pos:position pos:line="53" pos:column="76"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="53" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="78"/></expr_stmt>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">sp<pos:position pos:line="54" pos:column="23"/></name></expr>)<pos:position pos:line="54" pos:column="24"/></condition><then pos:line="54" pos:column="24"> <block pos:line="54" pos:column="25">{
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><call><name pos:line="55" pos:column="29">strlen<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name><name pos:line="55" pos:column="36">sp<pos:position pos:line="55" pos:column="38"/></name><operator pos:line="55" pos:column="38">-&gt;<pos:position pos:line="55" pos:column="43"/></operator><name pos:line="55" pos:column="40">s_name<pos:position pos:line="55" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call> <operator pos:line="55" pos:column="48">&gt;<pos:position pos:line="55" pos:column="52"/></operator> <name pos:line="55" pos:column="50">servlen<pos:position pos:line="55" pos:column="57"/></name></expr>)<pos:position pos:line="55" pos:column="58"/></condition><then pos:line="55" pos:column="58">
				<block type="pseudo"><return pos:line="56" pos:column="33">return <expr><name pos:line="56" pos:column="40">ENI_MEMORY<pos:position pos:line="56" pos:column="50"/></name></expr>;<pos:position pos:line="56" pos:column="51"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">strcpy<pos:position pos:line="57" pos:column="31"/></name><argument_list pos:line="57" pos:column="31">(<argument><expr><name pos:line="57" pos:column="32">serv<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="38">sp<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">s_name<pos:position pos:line="57" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then> <else pos:line="58" pos:column="19">else
			<block type="pseudo"><return pos:line="59" pos:column="25">return <expr><name pos:line="59" pos:column="32">ENI_NOSERVNAME<pos:position pos:line="59" pos:column="46"/></name></expr>;<pos:position pos:line="59" pos:column="47"/></return></block></else></if>
	}<pos:position pos:line="60" pos:column="10"/></block></else></if>

	<switch pos:line="62" pos:column="9">switch <condition pos:line="62" pos:column="16">(<expr><name><name pos:line="62" pos:column="17">sa<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">-&gt;<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="21">sa_family<pos:position pos:line="62" pos:column="30"/></name></name></expr>)<pos:position pos:line="62" pos:column="31"/></condition> <block pos:line="62" pos:column="32">{
	<case pos:line="63" pos:column="9">case <expr><name pos:line="63" pos:column="14">AF_INET<pos:position pos:line="63" pos:column="21"/></name></expr>:<pos:position pos:line="63" pos:column="22"/></case>
		<expr_stmt><expr><name pos:line="64" pos:column="17">v4a<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <operator pos:line="64" pos:column="23">(<pos:position pos:line="64" pos:column="24"/></operator><operator pos:line="64" pos:column="24">(<pos:position pos:line="64" pos:column="25"/></operator>struct <name pos:line="64" pos:column="32">sockaddr_in<pos:position pos:line="64" pos:column="43"/></name> <operator pos:line="64" pos:column="44">*<pos:position pos:line="64" pos:column="45"/></operator><operator pos:line="64" pos:column="45">)<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="46">sa<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">)<pos:position pos:line="64" pos:column="49"/></operator><operator pos:line="64" pos:column="49">-&gt;<pos:position pos:line="64" pos:column="54"/></operator><name><name pos:line="64" pos:column="51">sin_addr<pos:position pos:line="64" pos:column="59"/></name><operator pos:line="64" pos:column="59">.<pos:position pos:line="64" pos:column="60"/></operator><name pos:line="64" pos:column="60">s_addr<pos:position pos:line="64" pos:column="66"/></name></name></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">IN_MULTICAST<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">v4a<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call> <operator pos:line="65" pos:column="39">||<pos:position pos:line="65" pos:column="41"/></operator> <call><name pos:line="65" pos:column="42">IN_EXPERIMENTAL<pos:position pos:line="65" pos:column="57"/></name><argument_list pos:line="65" pos:column="57">(<argument><expr><name pos:line="65" pos:column="58">v4a<pos:position pos:line="65" pos:column="61"/></name></expr></argument>)<pos:position pos:line="65" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="63"/></condition><then pos:line="65" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="25">flags<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">|=<pos:position pos:line="66" pos:column="33"/></operator> <name pos:line="66" pos:column="34">NI_NUMERICHOST<pos:position pos:line="66" pos:column="48"/></name></expr>;<pos:position pos:line="66" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="67" pos:column="17">v4a<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">&gt;&gt;=<pos:position pos:line="67" pos:column="30"/></operator> <name pos:line="67" pos:column="25">IN_CLASSA_NSHIFT<pos:position pos:line="67" pos:column="41"/></name></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">v4a<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">==<pos:position pos:line="68" pos:column="27"/></operator> <literal type="number" pos:line="68" pos:column="28">0<pos:position pos:line="68" pos:column="29"/></literal> <operator pos:line="68" pos:column="30">||<pos:position pos:line="68" pos:column="32"/></operator> <name pos:line="68" pos:column="33">v4a<pos:position pos:line="68" pos:column="36"/></name> <operator pos:line="68" pos:column="37">==<pos:position pos:line="68" pos:column="39"/></operator> <name pos:line="68" pos:column="40">IN_LOOPBACKNET<pos:position pos:line="68" pos:column="54"/></name></expr>)<pos:position pos:line="68" pos:column="55"/></condition><then pos:line="68" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="25">flags<pos:position pos:line="69" pos:column="30"/></name> <operator pos:line="69" pos:column="31">|=<pos:position pos:line="69" pos:column="33"/></operator> <name pos:line="69" pos:column="34">NI_NUMERICHOST<pos:position pos:line="69" pos:column="48"/></name></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt></block></then></if>			
		<break pos:line="70" pos:column="17">break;<pos:position pos:line="70" pos:column="23"/></break>
<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">INET6<pos:position pos:line="71" pos:column="13"/></name></cpp:ifdef>
	<case pos:line="72" pos:column="9">case <expr><name pos:line="72" pos:column="14">AF_INET6<pos:position pos:line="72" pos:column="22"/></name></expr>:<pos:position pos:line="72" pos:column="23"/></case>
		<expr_stmt><expr><name pos:line="73" pos:column="17">pfx<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <operator pos:line="73" pos:column="23">(<pos:position pos:line="73" pos:column="24"/></operator><operator pos:line="73" pos:column="24">(<pos:position pos:line="73" pos:column="25"/></operator>struct <name pos:line="73" pos:column="32">sockaddr_in6<pos:position pos:line="73" pos:column="44"/></name> <operator pos:line="73" pos:column="45">*<pos:position pos:line="73" pos:column="46"/></operator><operator pos:line="73" pos:column="46">)<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="47">sa<pos:position pos:line="73" pos:column="49"/></name><operator pos:line="73" pos:column="49">)<pos:position pos:line="73" pos:column="50"/></operator><operator pos:line="73" pos:column="50">-&gt;<pos:position pos:line="73" pos:column="55"/></operator><name><name pos:line="73" pos:column="52">sin6_addr<pos:position pos:line="73" pos:column="61"/></name><operator pos:line="73" pos:column="61">.<pos:position pos:line="73" pos:column="62"/></operator><name pos:line="73" pos:column="62">s6_addr<pos:position pos:line="73" pos:column="69"/></name><index pos:line="73" pos:column="69">[<expr><literal type="number" pos:line="73" pos:column="70">0<pos:position pos:line="73" pos:column="71"/></literal></expr>]<pos:position pos:line="73" pos:column="72"/></index></name></expr>;<pos:position pos:line="73" pos:column="73"/></expr_stmt>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">pfx<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">==<pos:position pos:line="74" pos:column="27"/></operator> <literal type="number" pos:line="74" pos:column="28">0<pos:position pos:line="74" pos:column="29"/></literal> <operator pos:line="74" pos:column="30">||<pos:position pos:line="74" pos:column="32"/></operator> <name pos:line="74" pos:column="33">pfx<pos:position pos:line="74" pos:column="36"/></name> <operator pos:line="74" pos:column="37">==<pos:position pos:line="74" pos:column="39"/></operator> <literal type="number" pos:line="74" pos:column="40">0xfe<pos:position pos:line="74" pos:column="44"/></literal> <operator pos:line="74" pos:column="45">||<pos:position pos:line="74" pos:column="47"/></operator> <name pos:line="74" pos:column="48">pfx<pos:position pos:line="74" pos:column="51"/></name> <operator pos:line="74" pos:column="52">==<pos:position pos:line="74" pos:column="54"/></operator> <literal type="number" pos:line="74" pos:column="55">0xff<pos:position pos:line="74" pos:column="59"/></literal></expr>)<pos:position pos:line="74" pos:column="60"/></condition><then pos:line="74" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="25">flags<pos:position pos:line="75" pos:column="30"/></name> <operator pos:line="75" pos:column="31">|=<pos:position pos:line="75" pos:column="33"/></operator> <name pos:line="75" pos:column="34">NI_NUMERICHOST<pos:position pos:line="75" pos:column="48"/></name></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt></block></then></if>
		<break pos:line="76" pos:column="17">break;<pos:position pos:line="76" pos:column="23"/></break>
<cpp:endif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">endif<pos:position pos:line="77" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="78" pos:column="10"/></block></switch>
	<if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">host<pos:position pos:line="79" pos:column="17"/></name> <operator pos:line="79" pos:column="18">==<pos:position pos:line="79" pos:column="20"/></operator> <name pos:line="79" pos:column="21">NULL<pos:position pos:line="79" pos:column="25"/></name> <operator pos:line="79" pos:column="26">||<pos:position pos:line="79" pos:column="28"/></operator> <name pos:line="79" pos:column="29">hostlen<pos:position pos:line="79" pos:column="36"/></name> <operator pos:line="79" pos:column="37">==<pos:position pos:line="79" pos:column="39"/></operator> <literal type="number" pos:line="79" pos:column="40">0<pos:position pos:line="79" pos:column="41"/></literal></expr>)<pos:position pos:line="79" pos:column="42"/></condition><then pos:line="79" pos:column="42"> <block pos:line="79" pos:column="43">{
		<comment type="block" pos:line="80" pos:column="17">/* what should we do? */</comment>
	}<pos:position pos:line="81" pos:column="10"/></block></then> <elseif pos:line="81" pos:column="11">else <if pos:line="81" pos:column="16">if <condition pos:line="81" pos:column="19">(<expr><name pos:line="81" pos:column="20">flags<pos:position pos:line="81" pos:column="25"/></name> <operator pos:line="81" pos:column="26">&amp;<pos:position pos:line="81" pos:column="31"/></operator> <name pos:line="81" pos:column="28">NI_NUMERICHOST<pos:position pos:line="81" pos:column="42"/></name></expr>)<pos:position pos:line="81" pos:column="43"/></condition><then pos:line="81" pos:column="43"> <block pos:line="81" pos:column="44">{
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><call><name pos:line="82" pos:column="22">inet_ntop<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name><name pos:line="82" pos:column="32">afd<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">-&gt;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="37">a_af<pos:position pos:line="82" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="43">addr<pos:position pos:line="82" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="49">numaddr<pos:position pos:line="82" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="58">sizeof<argument_list pos:line="82" pos:column="64">(<argument><expr><name pos:line="82" pos:column="65">numaddr<pos:position pos:line="82" pos:column="72"/></name></expr></argument>)<pos:position pos:line="82" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="75"/></condition><then pos:line="82" pos:column="75">
			<block type="pseudo"><return pos:line="83" pos:column="25">return <expr><name pos:line="83" pos:column="32">ENI_SYSTEM<pos:position pos:line="83" pos:column="42"/></name></expr>;<pos:position pos:line="83" pos:column="43"/></return></block></then></if>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><call><name pos:line="84" pos:column="21">strlen<pos:position pos:line="84" pos:column="27"/></name><argument_list pos:line="84" pos:column="27">(<argument><expr><name pos:line="84" pos:column="28">numaddr<pos:position pos:line="84" pos:column="35"/></name></expr></argument>)<pos:position pos:line="84" pos:column="36"/></argument_list></call> <operator pos:line="84" pos:column="37">&gt;<pos:position pos:line="84" pos:column="41"/></operator> <name pos:line="84" pos:column="39">hostlen<pos:position pos:line="84" pos:column="46"/></name></expr>)<pos:position pos:line="84" pos:column="47"/></condition><then pos:line="84" pos:column="47">
			<block type="pseudo"><return pos:line="85" pos:column="25">return <expr><name pos:line="85" pos:column="32">ENI_MEMORY<pos:position pos:line="85" pos:column="42"/></name></expr>;<pos:position pos:line="85" pos:column="43"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">strcpy<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><name pos:line="86" pos:column="24">host<pos:position pos:line="86" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="30">numaddr<pos:position pos:line="86" pos:column="37"/></name></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="87" pos:column="10"/></block></then></if></elseif> <else pos:line="87" pos:column="11">else <block pos:line="87" pos:column="16">{
<cpp:ifdef pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">ifdef<pos:position pos:line="88" pos:column="7"/></cpp:directive> <name pos:line="88" pos:column="8">INET6<pos:position pos:line="88" pos:column="13"/></name></cpp:ifdef>
		<expr_stmt><expr><name pos:line="89" pos:column="17">hp<pos:position pos:line="89" pos:column="19"/></name> <operator pos:line="89" pos:column="20">=<pos:position pos:line="89" pos:column="21"/></operator> <call><name pos:line="89" pos:column="22">getipnodebyaddr<pos:position pos:line="89" pos:column="37"/></name><argument_list pos:line="89" pos:column="37">(<argument><expr><name pos:line="89" pos:column="38">addr<pos:position pos:line="89" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="44">afd<pos:position pos:line="89" pos:column="47"/></name><operator pos:line="89" pos:column="47">-&gt;<pos:position pos:line="89" pos:column="52"/></operator><name pos:line="89" pos:column="49">a_addrlen<pos:position pos:line="89" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="60">afd<pos:position pos:line="89" pos:column="63"/></name><operator pos:line="89" pos:column="63">-&gt;<pos:position pos:line="89" pos:column="68"/></operator><name pos:line="89" pos:column="65">a_af<pos:position pos:line="89" pos:column="69"/></name></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="71">&amp;<pos:position pos:line="89" pos:column="76"/></operator><name pos:line="89" pos:column="72">h_error<pos:position pos:line="89" pos:column="79"/></name></expr></argument>)<pos:position pos:line="89" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="81"/></expr_stmt>
<cpp:else pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">else<pos:position pos:line="90" pos:column="6"/></cpp:directive></cpp:else>
		<expr_stmt><expr><name pos:line="91" pos:column="17">hp<pos:position pos:line="91" pos:column="19"/></name> <operator pos:line="91" pos:column="20">=<pos:position pos:line="91" pos:column="21"/></operator> <call><name pos:line="91" pos:column="22">gethostbyaddr<pos:position pos:line="91" pos:column="35"/></name><argument_list pos:line="91" pos:column="35">(<argument><expr><name pos:line="91" pos:column="36">addr<pos:position pos:line="91" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="42">afd<pos:position pos:line="91" pos:column="45"/></name><operator pos:line="91" pos:column="45">-&gt;<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="47">a_addrlen<pos:position pos:line="91" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="58">afd<pos:position pos:line="91" pos:column="61"/></name><operator pos:line="91" pos:column="61">-&gt;<pos:position pos:line="91" pos:column="66"/></operator><name pos:line="91" pos:column="63">a_af<pos:position pos:line="91" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name pos:line="92" pos:column="17">h_error<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">=<pos:position pos:line="92" pos:column="26"/></operator> <name pos:line="92" pos:column="27">h_errno<pos:position pos:line="92" pos:column="34"/></name></expr>;<pos:position pos:line="92" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>

		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">hp<pos:position pos:line="95" pos:column="23"/></name></expr>)<pos:position pos:line="95" pos:column="24"/></condition><then pos:line="95" pos:column="24"> <block pos:line="95" pos:column="25">{
			<if pos:line="96" pos:column="25">if <condition pos:line="96" pos:column="28">(<expr><name pos:line="96" pos:column="29">flags<pos:position pos:line="96" pos:column="34"/></name> <operator pos:line="96" pos:column="35">&amp;<pos:position pos:line="96" pos:column="40"/></operator> <name pos:line="96" pos:column="37">NI_NOFQDN<pos:position pos:line="96" pos:column="46"/></name></expr>)<pos:position pos:line="96" pos:column="47"/></condition><then pos:line="96" pos:column="47"> <block pos:line="96" pos:column="48">{
				<expr_stmt><expr><name pos:line="97" pos:column="33">p<pos:position pos:line="97" pos:column="34"/></name> <operator pos:line="97" pos:column="35">=<pos:position pos:line="97" pos:column="36"/></operator> <call><name pos:line="97" pos:column="37">strchr<pos:position pos:line="97" pos:column="43"/></name><argument_list pos:line="97" pos:column="43">(<argument><expr><name><name pos:line="97" pos:column="44">hp<pos:position pos:line="97" pos:column="46"/></name><operator pos:line="97" pos:column="46">-&gt;<pos:position pos:line="97" pos:column="51"/></operator><name pos:line="97" pos:column="48">h_name<pos:position pos:line="97" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="97" pos:column="56">'.'<pos:position pos:line="97" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="61"/></expr_stmt>
				<if pos:line="98" pos:column="33">if <condition pos:line="98" pos:column="36">(<expr><name pos:line="98" pos:column="37">p<pos:position pos:line="98" pos:column="38"/></name></expr>)<pos:position pos:line="98" pos:column="39"/></condition><then pos:line="98" pos:column="39"> <block type="pseudo"><expr_stmt><expr><operator pos:line="98" pos:column="40">*<pos:position pos:line="98" pos:column="41"/></operator><name pos:line="98" pos:column="41">p<pos:position pos:line="98" pos:column="42"/></name> <operator pos:line="98" pos:column="43">=<pos:position pos:line="98" pos:column="44"/></operator> <literal type="char" pos:line="98" pos:column="45">'\0'<pos:position pos:line="98" pos:column="49"/></literal></expr>;<pos:position pos:line="98" pos:column="50"/></expr_stmt></block></then></if>
			}<pos:position pos:line="99" pos:column="26"/></block></then></if>
			<if pos:line="100" pos:column="25">if <condition pos:line="100" pos:column="28">(<expr><call><name pos:line="100" pos:column="29">strlen<pos:position pos:line="100" pos:column="35"/></name><argument_list pos:line="100" pos:column="35">(<argument><expr><name><name pos:line="100" pos:column="36">hp<pos:position pos:line="100" pos:column="38"/></name><operator pos:line="100" pos:column="38">-&gt;<pos:position pos:line="100" pos:column="43"/></operator><name pos:line="100" pos:column="40">h_name<pos:position pos:line="100" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call> <operator pos:line="100" pos:column="48">&gt;<pos:position pos:line="100" pos:column="52"/></operator> <name pos:line="100" pos:column="50">hostlen<pos:position pos:line="100" pos:column="57"/></name></expr>)<pos:position pos:line="100" pos:column="58"/></condition><then pos:line="100" pos:column="58"> <block pos:line="100" pos:column="59">{
<cpp:ifdef pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">ifdef<pos:position pos:line="101" pos:column="7"/></cpp:directive> <name pos:line="101" pos:column="8">INET6<pos:position pos:line="101" pos:column="13"/></name></cpp:ifdef>
				<expr_stmt><expr><call><name pos:line="102" pos:column="33">freehostent<pos:position pos:line="102" pos:column="44"/></name><argument_list pos:line="102" pos:column="44">(<argument><expr><name pos:line="102" pos:column="45">hp<pos:position pos:line="102" pos:column="47"/></name></expr></argument>)<pos:position pos:line="102" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">endif<pos:position pos:line="103" pos:column="7"/></cpp:directive></cpp:endif>
				<return pos:line="104" pos:column="33">return <expr><name pos:line="104" pos:column="40">ENI_MEMORY<pos:position pos:line="104" pos:column="50"/></name></expr>;<pos:position pos:line="104" pos:column="51"/></return>
			}<pos:position pos:line="105" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="106" pos:column="25">strcpy<pos:position pos:line="106" pos:column="31"/></name><argument_list pos:line="106" pos:column="31">(<argument><expr><name pos:line="106" pos:column="32">host<pos:position pos:line="106" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="38">hp<pos:position pos:line="106" pos:column="40"/></name><operator pos:line="106" pos:column="40">-&gt;<pos:position pos:line="106" pos:column="45"/></operator><name pos:line="106" pos:column="42">h_name<pos:position pos:line="106" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="50"/></expr_stmt>
<cpp:ifdef pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">ifdef<pos:position pos:line="107" pos:column="7"/></cpp:directive> <name pos:line="107" pos:column="8">INET6<pos:position pos:line="107" pos:column="13"/></name></cpp:ifdef>
			<expr_stmt><expr><call><name pos:line="108" pos:column="25">freehostent<pos:position pos:line="108" pos:column="36"/></name><argument_list pos:line="108" pos:column="36">(<argument><expr><name pos:line="108" pos:column="37">hp<pos:position pos:line="108" pos:column="39"/></name></expr></argument>)<pos:position pos:line="108" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="110" pos:column="18"/></block></then> <else pos:line="110" pos:column="19">else <block pos:line="110" pos:column="24">{
			<if pos:line="111" pos:column="25">if <condition pos:line="111" pos:column="28">(<expr><name pos:line="111" pos:column="29">flags<pos:position pos:line="111" pos:column="34"/></name> <operator pos:line="111" pos:column="35">&amp;<pos:position pos:line="111" pos:column="40"/></operator> <name pos:line="111" pos:column="37">NI_NAMEREQD<pos:position pos:line="111" pos:column="48"/></name></expr>)<pos:position pos:line="111" pos:column="49"/></condition><then pos:line="111" pos:column="49">
				<block type="pseudo"><return pos:line="112" pos:column="33">return <expr><name pos:line="112" pos:column="40">ENI_NOHOSTNAME<pos:position pos:line="112" pos:column="54"/></name></expr>;<pos:position pos:line="112" pos:column="55"/></return></block></then></if>
			<if pos:line="113" pos:column="25">if <condition pos:line="113" pos:column="28">(<expr><operator pos:line="113" pos:column="29">!<pos:position pos:line="113" pos:column="30"/></operator><call><name pos:line="113" pos:column="30">inet_ntop<pos:position pos:line="113" pos:column="39"/></name><argument_list pos:line="113" pos:column="39">(<argument><expr><name><name pos:line="113" pos:column="40">afd<pos:position pos:line="113" pos:column="43"/></name><operator pos:line="113" pos:column="43">-&gt;<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="45">a_af<pos:position pos:line="113" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="51">addr<pos:position pos:line="113" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="57">numaddr<pos:position pos:line="113" pos:column="64"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="66">sizeof<argument_list pos:line="113" pos:column="72">(<argument><expr><name pos:line="113" pos:column="73">numaddr<pos:position pos:line="113" pos:column="80"/></name></expr></argument>)<pos:position pos:line="113" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="113" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="83"/></condition><then pos:line="113" pos:column="83">
				<block type="pseudo"><return pos:line="114" pos:column="33">return <expr><name pos:line="114" pos:column="40">ENI_NOHOSTNAME<pos:position pos:line="114" pos:column="54"/></name></expr>;<pos:position pos:line="114" pos:column="55"/></return></block></then></if>
			<if pos:line="115" pos:column="25">if <condition pos:line="115" pos:column="28">(<expr><call><name pos:line="115" pos:column="29">strlen<pos:position pos:line="115" pos:column="35"/></name><argument_list pos:line="115" pos:column="35">(<argument><expr><name pos:line="115" pos:column="36">numaddr<pos:position pos:line="115" pos:column="43"/></name></expr></argument>)<pos:position pos:line="115" pos:column="44"/></argument_list></call> <operator pos:line="115" pos:column="45">&gt;<pos:position pos:line="115" pos:column="49"/></operator> <name pos:line="115" pos:column="47">hostlen<pos:position pos:line="115" pos:column="54"/></name></expr>)<pos:position pos:line="115" pos:column="55"/></condition><then pos:line="115" pos:column="55">
				<block type="pseudo"><return pos:line="116" pos:column="33">return <expr><name pos:line="116" pos:column="40">ENI_MEMORY<pos:position pos:line="116" pos:column="50"/></name></expr>;<pos:position pos:line="116" pos:column="51"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="117" pos:column="25">strcpy<pos:position pos:line="117" pos:column="31"/></name><argument_list pos:line="117" pos:column="31">(<argument><expr><name pos:line="117" pos:column="32">host<pos:position pos:line="117" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="38">numaddr<pos:position pos:line="117" pos:column="45"/></name></expr></argument>)<pos:position pos:line="117" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="118" pos:column="18"/></block></else></if>
	}<pos:position pos:line="119" pos:column="10"/></block></else></if>
	<return pos:line="120" pos:column="9">return <expr><name pos:line="120" pos:column="16">SUCCESS<pos:position pos:line="120" pos:column="23"/></name></expr>;<pos:position pos:line="120" pos:column="24"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></unit>

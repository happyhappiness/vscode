<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_275_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">send_xattr<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="23">stat_x<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">sxp<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ndx<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">find_matching_xattr<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name><name pos:line="3" pos:column="39">sxp<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="44">xattr<pos:position pos:line="3" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* Send 0 (-1 + 1) to indicate that literal xattr data follows. */</comment>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">write_varint<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">f<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="25">ndx<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">+<pos:position pos:line="6" pos:column="30"/></operator> <literal type="number" pos:line="6" pos:column="31">1<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">ndx<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&lt;<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21"> <block pos:line="8" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">rsync_xa<pos:position pos:line="9" pos:column="25"/></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">rxa<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="10" pos:column="17">int<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">count<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><name><name pos:line="10" pos:column="29">sxp<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">xattr<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">count<pos:position pos:line="10" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="47"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">write_varint<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">f<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">count<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
		<for pos:line="12" pos:column="17">for <control pos:line="12" pos:column="21">(<init><expr><name pos:line="12" pos:column="22">rxa<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="28">sxp<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">xattr<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">items<pos:position pos:line="12" pos:column="45"/></name></name></expr>;<pos:position pos:line="12" pos:column="46"/></init> <condition><expr><name pos:line="12" pos:column="47">count<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">--<pos:position pos:line="12" pos:column="54"/></operator></expr>;<pos:position pos:line="12" pos:column="55"/></condition> <incr><expr><name pos:line="12" pos:column="56">rxa<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">++<pos:position pos:line="12" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="62"/></control> <block pos:line="12" pos:column="63">{
			<decl_stmt><decl><type><name pos:line="13" pos:column="25">size_t<pos:position pos:line="13" pos:column="31"/></name></type> <name pos:line="13" pos:column="32">name_len<pos:position pos:line="13" pos:column="40"/></name> <init pos:line="13" pos:column="41">= <expr><name><name pos:line="13" pos:column="43">rxa<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">name_len<pos:position pos:line="13" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="14" pos:column="25">const<pos:position pos:line="14" pos:column="30"/></specifier> <name pos:line="14" pos:column="31">char<pos:position pos:line="14" pos:column="35"/></name> <modifier pos:line="14" pos:column="36">*<pos:position pos:line="14" pos:column="37"/></modifier></type><name pos:line="14" pos:column="37">name<pos:position pos:line="14" pos:column="41"/></name> <init pos:line="14" pos:column="42">= <expr><name><name pos:line="14" pos:column="44">rxa<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">-&gt;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="49">name<pos:position pos:line="14" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="54"/></decl_stmt>
			<comment type="block" pos:line="15" pos:column="25">/* Strip the rsync prefix from disguised namespaces. */</comment>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">name_len<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">&gt;<pos:position pos:line="16" pos:column="42"/></operator> <name pos:line="16" pos:column="40">RPRE_LEN<pos:position pos:line="16" pos:column="48"/></name>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">HAVE_LINUX_XATTRS<pos:position pos:line="17" pos:column="25"/></name></cpp:ifdef>
			 <operator pos:line="18" pos:column="26">&amp;&amp;<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="29">am_root<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">&lt;<pos:position pos:line="18" pos:column="41"/></operator> <literal type="number" pos:line="18" pos:column="39">0<pos:position pos:line="18" pos:column="40"/></literal>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
			 <operator pos:line="20" pos:column="26">&amp;&amp;<pos:position pos:line="20" pos:column="36"/></operator> <name><name pos:line="20" pos:column="29">name<pos:position pos:line="20" pos:column="33"/></name><index pos:line="20" pos:column="33">[<expr><name pos:line="20" pos:column="34">RPRE_LEN<pos:position pos:line="20" pos:column="42"/></name></expr>]<pos:position pos:line="20" pos:column="43"/></index></name> <operator pos:line="20" pos:column="44">!=<pos:position pos:line="20" pos:column="46"/></operator> <literal type="char" pos:line="20" pos:column="47">'%'<pos:position pos:line="20" pos:column="50"/></literal> <operator pos:line="20" pos:column="51">&amp;&amp;<pos:position pos:line="20" pos:column="61"/></operator> <call><name pos:line="20" pos:column="54">HAS_PREFIX<pos:position pos:line="20" pos:column="64"/></name><argument_list pos:line="20" pos:column="64">(<argument><expr><name pos:line="20" pos:column="65">name<pos:position pos:line="20" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="71">RSYNC_PREFIX<pos:position pos:line="20" pos:column="83"/></name></expr></argument>)<pos:position pos:line="20" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="85"/></condition><then pos:line="20" pos:column="85"> <block pos:line="20" pos:column="86">{
				<expr_stmt><expr><name pos:line="21" pos:column="33">name<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">+=<pos:position pos:line="21" pos:column="40"/></operator> <name pos:line="21" pos:column="41">RPRE_LEN<pos:position pos:line="21" pos:column="49"/></name></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><name pos:line="22" pos:column="33">name_len<pos:position pos:line="22" pos:column="41"/></name> <operator pos:line="22" pos:column="42">-=<pos:position pos:line="22" pos:column="44"/></operator> <name pos:line="22" pos:column="45">RPRE_LEN<pos:position pos:line="22" pos:column="53"/></name></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then>
<cpp:ifndef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifndef<pos:position pos:line="24" pos:column="8"/></cpp:directive> <name pos:line="24" pos:column="9">HAVE_LINUX_XATTRS<pos:position pos:line="24" pos:column="26"/></name></cpp:ifndef>
			<else pos:line="25" pos:column="25">else <block pos:line="25" pos:column="30">{
				<comment type="block" pos:line="26" pos:column="33">/* Put everything else in the user namespace. */</comment>
				<expr_stmt><expr><name pos:line="27" pos:column="33">name_len<pos:position pos:line="27" pos:column="41"/></name> <operator pos:line="27" pos:column="42">+=<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="45">UPRE_LEN<pos:position pos:line="27" pos:column="53"/></name></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="28" pos:column="26"/></block></else></if>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">write_varint<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">f<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">name_len<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">write_varint<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">f<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="41">rxa<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">datum_len<pos:position pos:line="31" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef<pos:position pos:line="32" pos:column="8"/></cpp:directive> <name pos:line="32" pos:column="9">HAVE_LINUX_XATTRS<pos:position pos:line="32" pos:column="26"/></name></cpp:ifndef>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><name pos:line="33" pos:column="29">name_len<pos:position pos:line="33" pos:column="37"/></name> <operator pos:line="33" pos:column="38">&gt;<pos:position pos:line="33" pos:column="42"/></operator> <name><name pos:line="33" pos:column="40">rxa<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">name_len<pos:position pos:line="33" pos:column="53"/></name></name></expr>)<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54"> <block pos:line="33" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="34" pos:column="33">write_buf<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">f<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">USER_PREFIX<pos:position pos:line="34" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="59">UPRE_LEN<pos:position pos:line="34" pos:column="67"/></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt>
				<expr_stmt><expr><name pos:line="35" pos:column="33">name_len<pos:position pos:line="35" pos:column="41"/></name> <operator pos:line="35" pos:column="42">-=<pos:position pos:line="35" pos:column="44"/></operator> <name pos:line="35" pos:column="45">UPRE_LEN<pos:position pos:line="35" pos:column="53"/></name></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="36" pos:column="26"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">write_buf<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">f<pos:position pos:line="38" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="38">name<pos:position pos:line="38" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">name_len<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name><name pos:line="39" pos:column="29">rxa<pos:position pos:line="39" pos:column="32"/></name><operator pos:line="39" pos:column="32">-&gt;<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="34">datum_len<pos:position pos:line="39" pos:column="43"/></name></name> <operator pos:line="39" pos:column="44">&gt;<pos:position pos:line="39" pos:column="48"/></operator> <name pos:line="39" pos:column="46">MAX_FULL_DATUM<pos:position pos:line="39" pos:column="60"/></name></expr>)<pos:position pos:line="39" pos:column="61"/></condition><then pos:line="39" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="33">write_buf<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">f<pos:position pos:line="40" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="46">rxa<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">datum<pos:position pos:line="40" pos:column="56"/></name></name> <operator pos:line="40" pos:column="57">+<pos:position pos:line="40" pos:column="58"/></operator> <literal type="number" pos:line="40" pos:column="59">1<pos:position pos:line="40" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">MAX_DIGEST_LEN<pos:position pos:line="40" pos:column="76"/></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt></block></then>
			<else pos:line="41" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="33">write_bigbuf<pos:position pos:line="42" pos:column="45"/></name><argument_list pos:line="42" pos:column="45">(<argument><expr><name pos:line="42" pos:column="46">f<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="49">rxa<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">datum<pos:position pos:line="42" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="61">rxa<pos:position pos:line="42" pos:column="64"/></name><operator pos:line="42" pos:column="64">-&gt;<pos:position pos:line="42" pos:column="69"/></operator><name pos:line="42" pos:column="66">datum_len<pos:position pos:line="42" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="77"/></expr_stmt></block></else></if>
		}<pos:position pos:line="43" pos:column="18"/></block></for>
		<expr_stmt><expr><name pos:line="44" pos:column="17">ndx<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name><name pos:line="44" pos:column="23">rsync_xal_l<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">.<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">count<pos:position pos:line="44" pos:column="40"/></name></name></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt> <comment type="block" pos:line="44" pos:column="42">/* pre-incremented count */</comment>
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">rsync_xal_store<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name><name pos:line="45" pos:column="33">sxp<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">-&gt;<pos:position pos:line="45" pos:column="41"/></operator><name pos:line="45" pos:column="38">xattr<pos:position pos:line="45" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt> <comment type="block" pos:line="45" pos:column="46">/* adds item to rsync_xal_l */</comment>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">ndx<pos:position pos:line="48" pos:column="19"/></name></expr>;<pos:position pos:line="48" pos:column="20"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

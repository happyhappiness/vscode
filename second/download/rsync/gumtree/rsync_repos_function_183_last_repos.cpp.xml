<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_183_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write_byte<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">f<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="24">uchar<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">c<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">write_buf<pos:position pos:line="3" pos:column="18"/></name><argument_list pos:line="3" pos:column="18">(<argument><expr><name pos:line="3" pos:column="19">f<pos:position pos:line="3" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="22">(<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <operator pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></operator><operator pos:line="3" pos:column="29">)<pos:position pos:line="3" pos:column="30"/></operator><operator pos:line="3" pos:column="30">&amp;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="31">c<pos:position pos:line="3" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="34">1<pos:position pos:line="3" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="37"/></expr_stmt>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

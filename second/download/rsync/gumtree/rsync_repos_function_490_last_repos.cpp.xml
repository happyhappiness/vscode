<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_490_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">pack_smb_acl<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">SMB_ACL_T<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">smb_acl<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">rsync_acl<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">racl<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">ACLS_NEED_MASK<pos:position pos:line="3" pos:column="22"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uchar<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">mask_bits<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">count<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">id_access<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">ida<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">errfun<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">SMB_ACL_ENTRY_T<pos:position pos:line="9" pos:column="24"/></name></type> <name pos:line="9" pos:column="25">entry<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><operator pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">smb_acl<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <call><name pos:line="11" pos:column="26">sys_acl_init<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><call><name pos:line="11" pos:column="39">calc_sacl_entries<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><name pos:line="11" pos:column="57">racl<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call><operator pos:line="11" pos:column="63">)<pos:position pos:line="11" pos:column="64"/></operator></expr>)<pos:position pos:line="11" pos:column="65"/></condition><then pos:line="11" pos:column="65"> <block pos:line="11" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rsyserr<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FERROR_XFER<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">errno<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="45">"pack_smb_acl: sys_acl_init()"<pos:position pos:line="12" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">False<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

<cpp:ifndef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifndef<pos:position pos:line="16" pos:column="8"/></cpp:directive> <name pos:line="16" pos:column="9">HAVE_OSX_ACLS<pos:position pos:line="16" pos:column="22"/></name></cpp:ifndef>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">COE<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">( <argument><expr><name pos:line="17" pos:column="14">sys_acl_create_entry<pos:position pos:line="17" pos:column="34"/></name></expr></argument>,<argument><expr><operator pos:line="17" pos:column="35">(<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">smb_acl<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">,<pos:position pos:line="17" pos:column="44"/></operator> <operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">entry<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">)<pos:position pos:line="17" pos:column="52"/></operator></expr></argument> )<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">COE<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">( <argument><expr><name pos:line="18" pos:column="14">sys_acl_set_info<pos:position pos:line="18" pos:column="30"/></name></expr></argument>,<argument><expr><operator pos:line="18" pos:column="31">(<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">entry<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">,<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="39">SMB_ACL_USER_OBJ<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">,<pos:position pos:line="18" pos:column="56"/></operator> <name><name pos:line="18" pos:column="57">racl<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">-&gt;<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="63">user_obj<pos:position pos:line="18" pos:column="71"/></name></name> <operator pos:line="18" pos:column="72">&amp;<pos:position pos:line="18" pos:column="77"/></operator> <operator pos:line="18" pos:column="74">~<pos:position pos:line="18" pos:column="75"/></operator><name pos:line="18" pos:column="75">NO_ENTRY<pos:position pos:line="18" pos:column="83"/></name><operator pos:line="18" pos:column="83">,<pos:position pos:line="18" pos:column="84"/></operator> <literal type="number" pos:line="18" pos:column="85">0<pos:position pos:line="18" pos:column="86"/></literal><operator pos:line="18" pos:column="86">)<pos:position pos:line="18" pos:column="87"/></operator></expr></argument> )<pos:position pos:line="18" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="90"/></expr_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

	<for pos:line="21" pos:column="9">for <control pos:line="21" pos:column="13">(<init><expr><name pos:line="21" pos:column="14">ida<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name><name pos:line="21" pos:column="20">racl<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">names<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">.<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">idas<pos:position pos:line="21" pos:column="36"/></name></name></expr><operator pos:line="21" pos:column="36">,<pos:position pos:line="21" pos:column="37"/></operator> <expr><name pos:line="21" pos:column="38">count<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">=<pos:position pos:line="21" pos:column="45"/></operator> <name><name pos:line="21" pos:column="46">racl<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">names<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">.<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">count<pos:position pos:line="21" pos:column="63"/></name></name></expr>;<pos:position pos:line="21" pos:column="64"/></init> <condition><expr><name pos:line="21" pos:column="65">count<pos:position pos:line="21" pos:column="70"/></name></expr>;<pos:position pos:line="21" pos:column="71"/></condition> <incr><expr><name pos:line="21" pos:column="72">ida<pos:position pos:line="21" pos:column="75"/></name><operator pos:line="21" pos:column="75">++<pos:position pos:line="21" pos:column="77"/></operator></expr><operator pos:line="21" pos:column="77">,<pos:position pos:line="21" pos:column="78"/></operator> <expr><name pos:line="21" pos:column="79">count<pos:position pos:line="21" pos:column="84"/></name><operator pos:line="21" pos:column="84">--<pos:position pos:line="21" pos:column="86"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="87"/></control> <block pos:line="21" pos:column="88">{
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">SMB_ACL_NEED_SORT<pos:position pos:line="22" pos:column="25"/></name></cpp:ifdef>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name><name pos:line="23" pos:column="23">ida<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">access<pos:position pos:line="23" pos:column="34"/></name></name> <operator pos:line="23" pos:column="35">&amp;<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="37">NAME_IS_USER<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">)<pos:position pos:line="23" pos:column="50"/></operator></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51">
			<block type="pseudo"><break pos:line="24" pos:column="25">break;<pos:position pos:line="24" pos:column="31"/></break></block></then></if>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">COE<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">( <argument><expr><name pos:line="26" pos:column="22">sys_acl_create_entry<pos:position pos:line="26" pos:column="42"/></name></expr></argument>,<argument><expr><operator pos:line="26" pos:column="43">(<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">smb_acl<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">,<pos:position pos:line="26" pos:column="52"/></operator> <operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">entry<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator></expr></argument> )<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">COE<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">( <argument><expr><name pos:line="27" pos:column="22">sys_acl_set_info<pos:position pos:line="27" pos:column="38"/></name></expr></argument>,
		    <argument><expr><operator pos:line="28" pos:column="21">(<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">entry<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">,<pos:position pos:line="28" pos:column="28"/></operator>
		     <ternary><condition><expr><name><name pos:line="29" pos:column="22">ida<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">access<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">&amp;<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="36">NAME_IS_USER<pos:position pos:line="29" pos:column="48"/></name></expr> ?<pos:position pos:line="29" pos:column="50"/></condition><then pos:line="29" pos:column="50"> <expr><name pos:line="29" pos:column="51">SMB_ACL_USER<pos:position pos:line="29" pos:column="63"/></name></expr> <pos:position pos:line="29" pos:column="64"/></then><else pos:line="29" pos:column="64">: <expr><name pos:line="29" pos:column="66">SMB_ACL_GROUP<pos:position pos:line="29" pos:column="79"/></name></expr></else></ternary><operator pos:line="29" pos:column="79">,<pos:position pos:line="29" pos:column="80"/></operator>
		     <name><name pos:line="30" pos:column="22">ida<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">access<pos:position pos:line="30" pos:column="33"/></name></name> <operator pos:line="30" pos:column="34">&amp;<pos:position pos:line="30" pos:column="39"/></operator> <operator pos:line="30" pos:column="36">~<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="37">NAME_IS_USER<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">,<pos:position pos:line="30" pos:column="50"/></operator> <name><name pos:line="30" pos:column="51">ida<pos:position pos:line="30" pos:column="54"/></name><operator pos:line="30" pos:column="54">-&gt;<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="56">id<pos:position pos:line="30" pos:column="58"/></name></name><operator pos:line="30" pos:column="58">)<pos:position pos:line="30" pos:column="59"/></operator></expr></argument> )<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></for>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef<pos:position pos:line="33" pos:column="8"/></cpp:directive> <name pos:line="33" pos:column="9">HAVE_OSX_ACLS<pos:position pos:line="33" pos:column="22"/></name></cpp:ifndef>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">COE<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">( <argument><expr><name pos:line="34" pos:column="14">sys_acl_create_entry<pos:position pos:line="34" pos:column="34"/></name></expr></argument>,<argument><expr><operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">smb_acl<pos:position pos:line="34" pos:column="43"/></name><operator pos:line="34" pos:column="43">,<pos:position pos:line="34" pos:column="44"/></operator> <operator pos:line="34" pos:column="45">&amp;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="46">entry<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">)<pos:position pos:line="34" pos:column="52"/></operator></expr></argument> )<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">COE<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">( <argument><expr><name pos:line="35" pos:column="14">sys_acl_set_info<pos:position pos:line="35" pos:column="30"/></name></expr></argument>,<argument><expr><operator pos:line="35" pos:column="31">(<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">entry<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">,<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">SMB_ACL_GROUP_OBJ<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">,<pos:position pos:line="35" pos:column="57"/></operator> <name><name pos:line="35" pos:column="58">racl<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">-&gt;<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="64">group_obj<pos:position pos:line="35" pos:column="73"/></name></name> <operator pos:line="35" pos:column="74">&amp;<pos:position pos:line="35" pos:column="79"/></operator> <operator pos:line="35" pos:column="76">~<pos:position pos:line="35" pos:column="77"/></operator><name pos:line="35" pos:column="77">NO_ENTRY<pos:position pos:line="35" pos:column="85"/></name><operator pos:line="35" pos:column="85">,<pos:position pos:line="35" pos:column="86"/></operator> <literal type="number" pos:line="35" pos:column="87">0<pos:position pos:line="35" pos:column="88"/></literal><operator pos:line="35" pos:column="88">)<pos:position pos:line="35" pos:column="89"/></operator></expr></argument> )<pos:position pos:line="35" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="92"/></expr_stmt>

<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">SMB_ACL_NEED_SORT<pos:position pos:line="37" pos:column="25"/></name></cpp:ifdef>
	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">( <init pos:line="38" pos:column="15">;<pos:position pos:line="38" pos:column="16"/></init> <condition><expr><name pos:line="38" pos:column="17">count<pos:position pos:line="38" pos:column="22"/></name></expr>;<pos:position pos:line="38" pos:column="23"/></condition> <incr><expr><name pos:line="38" pos:column="24">ida<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">++<pos:position pos:line="38" pos:column="29"/></operator></expr><operator pos:line="38" pos:column="29">,<pos:position pos:line="38" pos:column="30"/></operator> <expr><name pos:line="38" pos:column="31">count<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">--<pos:position pos:line="38" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="39"/></control> <block pos:line="38" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">COE<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">( <argument><expr><name pos:line="39" pos:column="22">sys_acl_create_entry<pos:position pos:line="39" pos:column="42"/></name></expr></argument>,<argument><expr><operator pos:line="39" pos:column="43">(<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="44">smb_acl<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">,<pos:position pos:line="39" pos:column="52"/></operator> <operator pos:line="39" pos:column="53">&amp;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="54">entry<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">)<pos:position pos:line="39" pos:column="60"/></operator></expr></argument> )<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">COE<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">( <argument><expr><name pos:line="40" pos:column="22">sys_acl_set_info<pos:position pos:line="40" pos:column="38"/></name></expr></argument>,<argument><expr><operator pos:line="40" pos:column="39">(<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="40">entry<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">,<pos:position pos:line="40" pos:column="46"/></operator> <name pos:line="40" pos:column="47">SMB_ACL_GROUP<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">,<pos:position pos:line="40" pos:column="61"/></operator> <name><name pos:line="40" pos:column="62">ida<pos:position pos:line="40" pos:column="65"/></name><operator pos:line="40" pos:column="65">-&gt;<pos:position pos:line="40" pos:column="70"/></operator><name pos:line="40" pos:column="67">access<pos:position pos:line="40" pos:column="73"/></name></name><operator pos:line="40" pos:column="73">,<pos:position pos:line="40" pos:column="74"/></operator> <name><name pos:line="40" pos:column="75">ida<pos:position pos:line="40" pos:column="78"/></name><operator pos:line="40" pos:column="78">-&gt;<pos:position pos:line="40" pos:column="83"/></operator><name pos:line="40" pos:column="80">id<pos:position pos:line="40" pos:column="82"/></name></name><operator pos:line="40" pos:column="82">)<pos:position pos:line="40" pos:column="83"/></operator></expr></argument> )<pos:position pos:line="40" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="86"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></for>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">ACLS_NEED_MASK<pos:position pos:line="44" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="45" pos:column="9">mask_bits<pos:position pos:line="45" pos:column="18"/></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <ternary><condition><expr><name><name pos:line="45" pos:column="21">racl<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">mask_obj<pos:position pos:line="45" pos:column="35"/></name></name> <operator pos:line="45" pos:column="36">==<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="39">NO_ENTRY<pos:position pos:line="45" pos:column="47"/></name></expr> ?<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49"> <expr><name><name pos:line="45" pos:column="50">racl<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">-&gt;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="56">group_obj<pos:position pos:line="45" pos:column="65"/></name></name> <operator pos:line="45" pos:column="66">&amp;<pos:position pos:line="45" pos:column="71"/></operator> <operator pos:line="45" pos:column="68">~<pos:position pos:line="45" pos:column="69"/></operator><name pos:line="45" pos:column="69">NO_ENTRY<pos:position pos:line="45" pos:column="77"/></name></expr> <pos:position pos:line="45" pos:column="78"/></then><else pos:line="45" pos:column="78">: <expr><name><name pos:line="45" pos:column="80">racl<pos:position pos:line="45" pos:column="84"/></name><operator pos:line="45" pos:column="84">-&gt;<pos:position pos:line="45" pos:column="89"/></operator><name pos:line="45" pos:column="86">mask_obj<pos:position pos:line="45" pos:column="94"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="45" pos:column="95"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">COE<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">( <argument><expr><name pos:line="46" pos:column="14">sys_acl_create_entry<pos:position pos:line="46" pos:column="34"/></name></expr></argument>,<argument><expr><operator pos:line="46" pos:column="35">(<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">smb_acl<pos:position pos:line="46" pos:column="43"/></name><operator pos:line="46" pos:column="43">,<pos:position pos:line="46" pos:column="44"/></operator> <operator pos:line="46" pos:column="45">&amp;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="46">entry<pos:position pos:line="46" pos:column="51"/></name><operator pos:line="46" pos:column="51">)<pos:position pos:line="46" pos:column="52"/></operator></expr></argument> )<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">COE<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">( <argument><expr><name pos:line="47" pos:column="14">sys_acl_set_info<pos:position pos:line="47" pos:column="30"/></name></expr></argument>,<argument><expr><operator pos:line="47" pos:column="31">(<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="32">entry<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">,<pos:position pos:line="47" pos:column="38"/></operator> <name pos:line="47" pos:column="39">SMB_ACL_MASK<pos:position pos:line="47" pos:column="51"/></name><operator pos:line="47" pos:column="51">,<pos:position pos:line="47" pos:column="52"/></operator> <name pos:line="47" pos:column="53">mask_bits<pos:position pos:line="47" pos:column="62"/></name><operator pos:line="47" pos:column="62">,<pos:position pos:line="47" pos:column="63"/></operator> <literal type="number" pos:line="47" pos:column="64">0<pos:position pos:line="47" pos:column="65"/></literal><operator pos:line="47" pos:column="65">)<pos:position pos:line="47" pos:column="66"/></operator></expr></argument> )<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else<pos:position pos:line="48" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name><name pos:line="49" pos:column="13">racl<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">mask_obj<pos:position pos:line="49" pos:column="27"/></name></name> <operator pos:line="49" pos:column="28">!=<pos:position pos:line="49" pos:column="30"/></operator> <name pos:line="49" pos:column="31">NO_ENTRY<pos:position pos:line="49" pos:column="39"/></name></expr>)<pos:position pos:line="49" pos:column="40"/></condition><then pos:line="49" pos:column="40"> <block pos:line="49" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">COE<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">( <argument><expr><name pos:line="50" pos:column="22">sys_acl_create_entry<pos:position pos:line="50" pos:column="42"/></name></expr></argument>,<argument><expr><operator pos:line="50" pos:column="43">(<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="44">smb_acl<pos:position pos:line="50" pos:column="51"/></name><operator pos:line="50" pos:column="51">,<pos:position pos:line="50" pos:column="52"/></operator> <operator pos:line="50" pos:column="53">&amp;<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="54">entry<pos:position pos:line="50" pos:column="59"/></name><operator pos:line="50" pos:column="59">)<pos:position pos:line="50" pos:column="60"/></operator></expr></argument> )<pos:position pos:line="50" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">COE<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">( <argument><expr><name pos:line="51" pos:column="22">sys_acl_set_info<pos:position pos:line="51" pos:column="38"/></name></expr></argument>,<argument><expr><operator pos:line="51" pos:column="39">(<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">entry<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">,<pos:position pos:line="51" pos:column="46"/></operator> <name pos:line="51" pos:column="47">SMB_ACL_MASK<pos:position pos:line="51" pos:column="59"/></name><operator pos:line="51" pos:column="59">,<pos:position pos:line="51" pos:column="60"/></operator> <name><name pos:line="51" pos:column="61">racl<pos:position pos:line="51" pos:column="65"/></name><operator pos:line="51" pos:column="65">-&gt;<pos:position pos:line="51" pos:column="70"/></operator><name pos:line="51" pos:column="67">mask_obj<pos:position pos:line="51" pos:column="75"/></name></name><operator pos:line="51" pos:column="75">,<pos:position pos:line="51" pos:column="76"/></operator> <literal type="number" pos:line="51" pos:column="77">0<pos:position pos:line="51" pos:column="78"/></literal><operator pos:line="51" pos:column="78">)<pos:position pos:line="51" pos:column="79"/></operator></expr></argument> )<pos:position pos:line="51" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="82"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">COE<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">( <argument><expr><name pos:line="55" pos:column="14">sys_acl_create_entry<pos:position pos:line="55" pos:column="34"/></name></expr></argument>,<argument><expr><operator pos:line="55" pos:column="35">(<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="36">smb_acl<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">,<pos:position pos:line="55" pos:column="44"/></operator> <operator pos:line="55" pos:column="45">&amp;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="46">entry<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">)<pos:position pos:line="55" pos:column="52"/></operator></expr></argument> )<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">COE<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">( <argument><expr><name pos:line="56" pos:column="14">sys_acl_set_info<pos:position pos:line="56" pos:column="30"/></name></expr></argument>,<argument><expr><operator pos:line="56" pos:column="31">(<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="32">entry<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">,<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="39">SMB_ACL_OTHER<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">,<pos:position pos:line="56" pos:column="53"/></operator> <name><name pos:line="56" pos:column="54">racl<pos:position pos:line="56" pos:column="58"/></name><operator pos:line="56" pos:column="58">-&gt;<pos:position pos:line="56" pos:column="63"/></operator><name pos:line="56" pos:column="60">other_obj<pos:position pos:line="56" pos:column="69"/></name></name> <operator pos:line="56" pos:column="70">&amp;<pos:position pos:line="56" pos:column="75"/></operator> <operator pos:line="56" pos:column="72">~<pos:position pos:line="56" pos:column="73"/></operator><name pos:line="56" pos:column="73">NO_ENTRY<pos:position pos:line="56" pos:column="81"/></name><operator pos:line="56" pos:column="81">,<pos:position pos:line="56" pos:column="82"/></operator> <literal type="number" pos:line="56" pos:column="83">0<pos:position pos:line="56" pos:column="84"/></literal><operator pos:line="56" pos:column="84">)<pos:position pos:line="56" pos:column="85"/></operator></expr></argument> )<pos:position pos:line="56" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="88"/></expr_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">ifdef<pos:position pos:line="59" pos:column="7"/></cpp:directive> <name pos:line="59" pos:column="8">DEBUG<pos:position pos:line="59" pos:column="13"/></name></cpp:ifdef>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><call><name pos:line="60" pos:column="13">sys_acl_valid<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><operator pos:line="60" pos:column="27">*<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="28">smb_acl<pos:position pos:line="60" pos:column="35"/></name></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call> <operator pos:line="60" pos:column="37">&lt;<pos:position pos:line="60" pos:column="41"/></operator> <literal type="number" pos:line="60" pos:column="39">0<pos:position pos:line="60" pos:column="40"/></literal></expr>)<pos:position pos:line="60" pos:column="41"/></condition><then pos:line="60" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">rprintf<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">FERROR_XFER<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="38">"pack_smb_acl: warning: system says the ACL I packed is invalid\n"<pos:position pos:line="61" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="106"/></expr_stmt></block></then></if>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="64" pos:column="9">return <expr><name pos:line="64" pos:column="16">True<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></return>

  <label><name pos:line="66" pos:column="3">error_exit<pos:position pos:line="66" pos:column="13"/></name>:<pos:position pos:line="66" pos:column="14"/></label>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">errfun<pos:position pos:line="67" pos:column="19"/></name></expr>)<pos:position pos:line="67" pos:column="20"/></condition><then pos:line="67" pos:column="20"> <block pos:line="67" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">rsyserr<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">FERROR_XFER<pos:position pos:line="68" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="38">errno<pos:position pos:line="68" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="45">"pack_smb_acl %s()"<pos:position pos:line="68" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="66">errfun<pos:position pos:line="68" pos:column="72"/></name></expr></argument>)<pos:position pos:line="68" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">sys_acl_free_acl<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><operator pos:line="70" pos:column="26">*<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">smb_acl<pos:position pos:line="70" pos:column="34"/></name></expr></argument>)<pos:position pos:line="70" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>
	<return pos:line="71" pos:column="9">return <expr><name pos:line="71" pos:column="16">False<pos:position pos:line="71" pos:column="21"/></name></expr>;<pos:position pos:line="71" pos:column="22"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

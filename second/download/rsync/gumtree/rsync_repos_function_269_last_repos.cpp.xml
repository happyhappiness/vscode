<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_269_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_xattr_data<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">fname<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="48">const<pos:position pos:line="1" pos:column="53"/></specifier> <name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">name<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">size_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">len_ptr<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">no_missing_error<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">datum_len<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">sys_lgetxattr<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><name pos:line="4" pos:column="42">fname<pos:position pos:line="4" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="49">name<pos:position pos:line="4" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="55">NULL<pos:position pos:line="4" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="61">0<pos:position pos:line="4" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="64"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">extra_len<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">len_ptr<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ptr<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">len_ptr<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">datum_len<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">datum_len<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">size_t<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">-<pos:position pos:line="10" pos:column="35"/></operator><literal type="number" pos:line="10" pos:column="35">1<pos:position pos:line="10" pos:column="36"/></literal></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37"> <block pos:line="10" pos:column="38">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">errno<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">==<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">ENOTSUP<pos:position pos:line="11" pos:column="37"/></name> <operator pos:line="11" pos:column="38">||<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="41">no_missing_error<pos:position pos:line="11" pos:column="57"/></name></expr>)<pos:position pos:line="11" pos:column="58"/></condition><then pos:line="11" pos:column="58">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><name pos:line="12" pos:column="32">NULL<pos:position pos:line="12" pos:column="36"/></name></expr>;<pos:position pos:line="12" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">rsyserr<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">FERROR_XFER<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">errno<pos:position pos:line="13" pos:column="43"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="14" pos:column="25">"get_xattr_data: lgetxattr(\"%s\",\"%s\",0) failed"<pos:position pos:line="14" pos:column="76"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="15" pos:column="25">full_fname<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">fname<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">name<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">datum_len<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&amp;&amp;<pos:position pos:line="19" pos:column="34"/></operator> <operator pos:line="19" pos:column="27">!<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">extra_len<pos:position pos:line="19" pos:column="37"/></name></expr>)<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">extra_len<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt></block></then></if> <comment type="block" pos:line="20" pos:column="32">/* request non-zero amount of memory */</comment>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">datum_len<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">+<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">extra_len<pos:position pos:line="21" pos:column="34"/></name> <operator pos:line="21" pos:column="35">&lt;<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="37">datum_len<pos:position pos:line="21" pos:column="46"/></name></expr>)<pos:position pos:line="21" pos:column="47"/></condition><then pos:line="21" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">overflow_exit<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><literal type="string" pos:line="22" pos:column="31">"get_xattr_data"<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">ptr<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">new_array<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">char<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">datum_len<pos:position pos:line="23" pos:column="46"/></name> <operator pos:line="23" pos:column="47">+<pos:position pos:line="23" pos:column="48"/></operator> <name pos:line="23" pos:column="49">extra_len<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call><operator pos:line="23" pos:column="59">)<pos:position pos:line="23" pos:column="60"/></operator></expr>)<pos:position pos:line="23" pos:column="61"/></condition><then pos:line="23" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">out_of_memory<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="string" pos:line="24" pos:column="31">"get_xattr_data"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">datum_len<pos:position pos:line="26" pos:column="22"/></name></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23"> <block pos:line="26" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">size_t<pos:position pos:line="27" pos:column="23"/></name></type> <name pos:line="27" pos:column="24">len<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><call><name pos:line="27" pos:column="30">sys_lgetxattr<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">fname<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">name<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">ptr<pos:position pos:line="27" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="62">datum_len<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="73"/></decl_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">len<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">!=<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">datum_len<pos:position pos:line="28" pos:column="37"/></name></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">len<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">==<pos:position pos:line="29" pos:column="35"/></operator> <operator pos:line="29" pos:column="36">(<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">size_t<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">)<pos:position pos:line="29" pos:column="44"/></operator><operator pos:line="29" pos:column="44">-<pos:position pos:line="29" pos:column="45"/></operator><literal type="number" pos:line="29" pos:column="45">1<pos:position pos:line="29" pos:column="46"/></literal></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47"> <block pos:line="29" pos:column="48">{
				<expr_stmt><expr><call><name pos:line="30" pos:column="33">rsyserr<pos:position pos:line="30" pos:column="40"/></name><argument_list pos:line="30" pos:column="40">(<argument><expr><name pos:line="30" pos:column="41">FERROR_XFER<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">errno<pos:position pos:line="30" pos:column="59"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="31" pos:column="37">"get_xattr_data: lgetxattr(\"%s\",\"%s\",%ld)"<pos:position pos:line="31" pos:column="83"/></literal>
				    <literal type="string" pos:line="32" pos:column="37">" failed"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="48">full_fname<pos:position pos:line="32" pos:column="58"/></name><argument_list pos:line="32" pos:column="58">(<argument><expr><name pos:line="32" pos:column="59">fname<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="32" pos:column="67">name<pos:position pos:line="32" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="73">(<pos:position pos:line="32" pos:column="74"/></operator><name pos:line="32" pos:column="74">long<pos:position pos:line="32" pos:column="78"/></name><operator pos:line="32" pos:column="78">)<pos:position pos:line="32" pos:column="79"/></operator><name pos:line="32" pos:column="79">datum_len<pos:position pos:line="32" pos:column="88"/></name></expr></argument>)<pos:position pos:line="32" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="90"/></expr_stmt>
			}<pos:position pos:line="33" pos:column="26"/></block></then> <else pos:line="33" pos:column="27">else <block pos:line="33" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="34" pos:column="33">rprintf<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name pos:line="34" pos:column="41">FERROR_XFER<pos:position pos:line="34" pos:column="52"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="35" pos:column="37">"get_xattr_data: lgetxattr(\"%s\",\"%s\",%ld)"<pos:position pos:line="35" pos:column="83"/></literal>
				    <literal type="string" pos:line="36" pos:column="37">" returned %ld\n"<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="56">full_fname<pos:position pos:line="36" pos:column="66"/></name><argument_list pos:line="36" pos:column="66">(<argument><expr><name pos:line="36" pos:column="67">fname<pos:position pos:line="36" pos:column="72"/></name></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="75">name<pos:position pos:line="36" pos:column="79"/></name></expr></argument>,
				    <argument><expr><operator pos:line="37" pos:column="37">(<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">long<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">)<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">datum_len<pos:position pos:line="37" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="54">(<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="55">long<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">)<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="60">len<pos:position pos:line="37" pos:column="63"/></name></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="38" pos:column="26"/></block></else></if>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">free<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">ptr<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
			<return pos:line="40" pos:column="25">return <expr><name pos:line="40" pos:column="32">NULL<pos:position pos:line="40" pos:column="36"/></name></expr>;<pos:position pos:line="40" pos:column="37"/></return>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">ptr<pos:position pos:line="44" pos:column="19"/></name></expr>;<pos:position pos:line="44" pos:column="20"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

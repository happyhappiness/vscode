<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_782_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">hpux_acl_call_presence<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{

	<decl_stmt><decl><type><name pos:line="4" pos:column="9">shl_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">handle<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">void<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">value<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret_val<pos:position pos:line="6" pos:column="20"/></name><init pos:line="6" pos:column="20">=<expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">BOOL<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">already_checked<pos:position pos:line="7" pos:column="36"/></name><init pos:line="7" pos:column="36">=<expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>

	<if pos:line="9" pos:column="9">if<condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">already_checked<pos:position pos:line="9" pos:column="27"/></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">True<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>


	<expr_stmt><expr><name pos:line="13" pos:column="9">ret_val<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <call><name pos:line="13" pos:column="19">shl_findsym<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><operator pos:line="13" pos:column="31">&amp;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="32">handle<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"acl"<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">TYPE_PROCEDURE<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="63">&amp;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="64">value<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>

	<if pos:line="15" pos:column="9">if<condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">ret_val<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">!=<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <block pos:line="15" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">DEBUG<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><literal type="number" pos:line="16" pos:column="23">5<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="26">(<pos:position pos:line="16" pos:column="27"/></operator><literal type="string" pos:line="16" pos:column="27">"hpux_acl_call_presence: shl_findsym() returned %d, errno = %d, error %s\n"<pos:position pos:line="16" pos:column="102"/></literal><operator pos:line="16" pos:column="102">,<pos:position pos:line="16" pos:column="103"/></operator>
			<name pos:line="17" pos:column="25">ret_val<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">,<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">errno<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">,<pos:position pos:line="17" pos:column="40"/></operator> <call><name pos:line="17" pos:column="41">strerror<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><name pos:line="17" pos:column="50">errno<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call><operator pos:line="17" pos:column="56">)<pos:position pos:line="17" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">DEBUG<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="number" pos:line="18" pos:column="23">5<pos:position pos:line="18" pos:column="24"/></literal></expr></argument>,<argument><expr><operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><literal type="string" pos:line="18" pos:column="26">"hpux_acl_call_presence: acl() system call is not present. Check if you have JFS 3.3 and above?\n"<pos:position pos:line="18" pos:column="124"/></literal><operator pos:line="18" pos:column="124">)<pos:position pos:line="18" pos:column="125"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="127"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><name pos:line="19" pos:column="24">False<pos:position pos:line="19" pos:column="29"/></name></expr>;<pos:position pos:line="19" pos:column="30"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">DEBUG<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="number" pos:line="22" pos:column="15">10<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><literal type="string" pos:line="22" pos:column="19">"hpux_acl_call_presence: acl() system call is present. We have JFS 3.3 or above \n"<pos:position pos:line="22" pos:column="102"/></literal><operator pos:line="22" pos:column="102">)<pos:position pos:line="22" pos:column="103"/></operator></expr></argument>)<pos:position pos:line="22" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="105"/></expr_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">already_checked<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">True<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
	<return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">True<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_243_rsync-2.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">delete_one<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">fn<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">is_dir<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">is_dir<pos:position pos:line="3" pos:column="20"/></name></expr>)<pos:position pos:line="3" pos:column="21"/></condition><then pos:line="3" pos:column="21"> <block pos:line="3" pos:column="22">{
		<if pos:line="4" pos:column="17">if <condition pos:line="4" pos:column="20">(<expr><call><name pos:line="4" pos:column="21">robust_unlink<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">fn<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call> <operator pos:line="4" pos:column="39">!=<pos:position pos:line="4" pos:column="41"/></operator> <literal type="number" pos:line="4" pos:column="42">0<pos:position pos:line="4" pos:column="43"/></literal></expr>)<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44"> <block pos:line="4" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="5" pos:column="25">rprintf<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">FERROR<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="41">"delete_one: unlink %s failed: %s\n"<pos:position pos:line="5" pos:column="77"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="6" pos:column="33">full_fname<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">fn<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="49">strerror<pos:position pos:line="6" pos:column="57"/></name><argument_list pos:line="6" pos:column="57">(<argument><expr><name pos:line="6" pos:column="58">errno<pos:position pos:line="6" pos:column="63"/></name></expr></argument>)<pos:position pos:line="6" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="7" pos:column="18"/></block></then> <elseif pos:line="7" pos:column="19">else <if pos:line="7" pos:column="24">if <condition pos:line="7" pos:column="27">(<expr><name pos:line="7" pos:column="28">verbose<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="8" pos:column="25">rprintf<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">FINFO<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="40">"deleting %s\n"<pos:position pos:line="8" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="57">fn<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="9" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <else pos:line="10" pos:column="11">else <block pos:line="10" pos:column="16">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">do_rmdir<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">fn<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call> <operator pos:line="11" pos:column="34">!=<pos:position pos:line="11" pos:column="36"/></operator> <literal type="number" pos:line="11" pos:column="37">0<pos:position pos:line="11" pos:column="38"/></literal></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">errno<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">!=<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="38">ENOTEMPTY<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">&amp;&amp;<pos:position pos:line="12" pos:column="58"/></operator> <name pos:line="12" pos:column="51">errno<pos:position pos:line="12" pos:column="56"/></name> <operator pos:line="12" pos:column="57">!=<pos:position pos:line="12" pos:column="59"/></operator> <name pos:line="12" pos:column="60">EEXIST<pos:position pos:line="12" pos:column="66"/></name></expr>)<pos:position pos:line="12" pos:column="67"/></condition><then pos:line="12" pos:column="67"> <block pos:line="12" pos:column="68">{
				<expr_stmt><expr><call><name pos:line="13" pos:column="33">rprintf<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">FERROR<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="49">"delete_one: rmdir %s failed: %s\n"<pos:position pos:line="13" pos:column="84"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="14" pos:column="41">full_fname<pos:position pos:line="14" pos:column="51"/></name><argument_list pos:line="14" pos:column="51">(<argument><expr><name pos:line="14" pos:column="52">fn<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="57">strerror<pos:position pos:line="14" pos:column="65"/></name><argument_list pos:line="14" pos:column="65">(<argument><expr><name pos:line="14" pos:column="66">errno<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
			}<pos:position pos:line="15" pos:column="26"/></block></then></if>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <elseif pos:line="16" pos:column="19">else <if pos:line="16" pos:column="24">if <condition pos:line="16" pos:column="27">(<expr><name pos:line="16" pos:column="28">verbose<pos:position pos:line="16" pos:column="35"/></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">rprintf<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">FINFO<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"deleting directory %s\n"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="67">fn<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="19" pos:column="10"/></block></else></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_439_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">check_secret<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">module<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">user<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="63">const<pos:position pos:line="1" pos:column="68"/></specifier> <name pos:line="1" pos:column="69">char<pos:position pos:line="1" pos:column="73"/></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">group<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>,
				<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">challenge<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">char<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">pass<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">line<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">1024<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">pass2<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">MAX_DIGEST_LEN<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><literal type="number" pos:line="5" pos:column="35">2<pos:position pos:line="5" pos:column="36"/></literal></expr>]<pos:position pos:line="5" pos:column="37"/></index></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">fname<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">lp_secrets_file<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">module<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">STRUCT_STAT<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">ok<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">user_len<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><call><name pos:line="9" pos:column="24">strlen<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">user<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">group_len<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><ternary><condition><expr><name pos:line="10" pos:column="25">group<pos:position pos:line="10" pos:column="30"/></name></expr> ?<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <expr><call><name pos:line="10" pos:column="33">strlen<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><name pos:line="10" pos:column="40">group<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr> <pos:position pos:line="10" pos:column="47"/></then><else pos:line="10" pos:column="47">: <expr><literal type="number" pos:line="10" pos:column="49">0<pos:position pos:line="10" pos:column="50"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">err<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">FILE<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">fh<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">fname<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">||<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">!<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">fname<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">||<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">(<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">fh<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">=<pos:position pos:line="14" pos:column="39"/></operator> <call><name pos:line="14" pos:column="40">fopen<pos:position pos:line="14" pos:column="45"/></name><argument_list pos:line="14" pos:column="45">(<argument><expr><name pos:line="14" pos:column="46">fname<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="53">"r"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call><operator pos:line="14" pos:column="57">)<pos:position pos:line="14" pos:column="58"/></operator> <operator pos:line="14" pos:column="59">==<pos:position pos:line="14" pos:column="61"/></operator> <name pos:line="14" pos:column="62">NULL<pos:position pos:line="14" pos:column="66"/></name></expr>)<pos:position pos:line="14" pos:column="67"/></condition><then pos:line="14" pos:column="67">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="string" pos:line="15" pos:column="24">"no secrets file"<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></return></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">do_fstat<pos:position pos:line="17" pos:column="21"/></name><argument_list pos:line="17" pos:column="21">(<argument><expr><call><name pos:line="17" pos:column="22">fileno<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">fh<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">&amp;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="35">st<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call> <operator pos:line="17" pos:column="39">==<pos:position pos:line="17" pos:column="41"/></operator> <operator pos:line="17" pos:column="42">-<pos:position pos:line="17" pos:column="43"/></operator><literal type="number" pos:line="17" pos:column="43">1<pos:position pos:line="17" pos:column="44"/></literal></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45"> <block pos:line="17" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">rsyserr<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">FLOG<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">errno<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="38">"fstat(%s)"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">fname<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">ok<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><call><name pos:line="20" pos:column="20">lp_strict_modes<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">module<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <block pos:line="20" pos:column="45">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">(<pos:position pos:line="21" pos:column="22"/></operator><name><name pos:line="21" pos:column="22">st<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">st_mode<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="35">06<pos:position pos:line="21" pos:column="37"/></literal><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator> <operator pos:line="21" pos:column="39">!=<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="42">0<pos:position pos:line="21" pos:column="43"/></literal></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <block pos:line="21" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">rprintf<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">FLOG<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"secrets file must not be other-accessible (see strict modes option)\n"<pos:position pos:line="22" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="112"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">ok<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then> <elseif pos:line="24" pos:column="19">else <if pos:line="24" pos:column="24">if <condition pos:line="24" pos:column="27">(<expr><call><name pos:line="24" pos:column="28">MY_UID<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">()<pos:position pos:line="24" pos:column="36"/></argument_list></call> <operator pos:line="24" pos:column="37">==<pos:position pos:line="24" pos:column="39"/></operator> <literal type="number" pos:line="24" pos:column="40">0<pos:position pos:line="24" pos:column="41"/></literal> <operator pos:line="24" pos:column="42">&amp;&amp;<pos:position pos:line="24" pos:column="52"/></operator> <name><name pos:line="24" pos:column="45">st<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">.<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">st_uid<pos:position pos:line="24" pos:column="54"/></name></name> <operator pos:line="24" pos:column="55">!=<pos:position pos:line="24" pos:column="57"/></operator> <literal type="number" pos:line="24" pos:column="58">0<pos:position pos:line="24" pos:column="59"/></literal></expr>)<pos:position pos:line="24" pos:column="60"/></condition><then pos:line="24" pos:column="60"> <block pos:line="24" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">rprintf<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">FLOG<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"secrets file must be owned by root when running as root (see strict modes)\n"<pos:position pos:line="25" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="119"/></expr_stmt>
			<expr_stmt><expr><name pos:line="26" pos:column="25">ok<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="30">0<pos:position pos:line="26" pos:column="31"/></literal></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">ok<pos:position pos:line="29" pos:column="16"/></name></expr>)<pos:position pos:line="29" pos:column="17"/></condition><then pos:line="29" pos:column="17"> <block pos:line="29" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">fclose<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">fh<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><literal type="string" pos:line="31" pos:column="24">"ignoring secrets file"<pos:position pos:line="31" pos:column="47"/></literal></expr>;<pos:position pos:line="31" pos:column="48"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">*<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">user<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">==<pos:position pos:line="34" pos:column="21"/></operator> <literal type="char" pos:line="34" pos:column="22">'#'<pos:position pos:line="34" pos:column="25"/></literal></expr>)<pos:position pos:line="34" pos:column="26"/></condition><then pos:line="34" pos:column="26"> <block pos:line="34" pos:column="27">{
		<comment type="block" pos:line="35" pos:column="17">/* Reject attempt to match a comment. */</comment>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">fclose<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">fh<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><literal type="string" pos:line="37" pos:column="24">"invalid username"<pos:position pos:line="37" pos:column="42"/></literal></expr>;<pos:position pos:line="37" pos:column="43"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="40" pos:column="9">/* Try to find a line that starts with the user (or @group) name and a ':'. */</comment>
	<expr_stmt><expr><name pos:line="41" pos:column="9">err<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <literal type="string" pos:line="41" pos:column="15">"secret not found"<pos:position pos:line="41" pos:column="33"/></literal></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
	<while pos:line="42" pos:column="9">while <condition pos:line="42" pos:column="15">(<expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">user<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">||<pos:position pos:line="42" pos:column="24"/></operator> <name pos:line="42" pos:column="25">group<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">)<pos:position pos:line="42" pos:column="31"/></operator> <operator pos:line="42" pos:column="32">&amp;&amp;<pos:position pos:line="42" pos:column="42"/></operator> <call><name pos:line="42" pos:column="35">fgets<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">line<pos:position pos:line="42" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="47">sizeof <name pos:line="42" pos:column="54">line<pos:position pos:line="42" pos:column="58"/></name></sizeof></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">fh<pos:position pos:line="42" pos:column="62"/></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call> <operator pos:line="42" pos:column="64">!=<pos:position pos:line="42" pos:column="66"/></operator> <name pos:line="42" pos:column="67">NULL<pos:position pos:line="42" pos:column="71"/></name></expr>)<pos:position pos:line="42" pos:column="72"/></condition> <block pos:line="42" pos:column="73">{
		<decl_stmt><decl><type><specifier pos:line="43" pos:column="17">const<pos:position pos:line="43" pos:column="22"/></specifier> <name pos:line="43" pos:column="23">char<pos:position pos:line="43" pos:column="27"/></name> <modifier pos:line="43" pos:column="28">*<pos:position pos:line="43" pos:column="29"/></modifier><modifier pos:line="43" pos:column="29">*<pos:position pos:line="43" pos:column="30"/></modifier></type><name pos:line="43" pos:column="30">ptr<pos:position pos:line="43" pos:column="33"/></name></decl>, <modifier pos:line="43" pos:column="35">*<pos:position pos:line="43" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="43" pos:column="36">s<pos:position pos:line="43" pos:column="37"/></name> <init pos:line="43" pos:column="38">= <expr><call><name pos:line="43" pos:column="40">strtok<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">line<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="53">"\n\r"<pos:position pos:line="43" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">int<pos:position pos:line="44" pos:column="20"/></name></type> <name pos:line="44" pos:column="21">len<pos:position pos:line="44" pos:column="24"/></name></decl>;<pos:position pos:line="44" pos:column="25"/></decl_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">s<pos:position pos:line="45" pos:column="23"/></name></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24">
			<block type="pseudo"><continue pos:line="46" pos:column="25">continue;<pos:position pos:line="46" pos:column="34"/></continue></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><operator pos:line="47" pos:column="21">*<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">s<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">==<pos:position pos:line="47" pos:column="26"/></operator> <literal type="char" pos:line="47" pos:column="27">'@'<pos:position pos:line="47" pos:column="30"/></literal></expr>)<pos:position pos:line="47" pos:column="31"/></condition><then pos:line="47" pos:column="31"> <block pos:line="47" pos:column="32">{
			<expr_stmt><expr><name pos:line="48" pos:column="25">ptr<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <operator pos:line="48" pos:column="31">&amp;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="32">group<pos:position pos:line="48" pos:column="37"/></name></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">len<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">=<pos:position pos:line="49" pos:column="30"/></operator> <name pos:line="49" pos:column="31">group_len<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="50" pos:column="25">s<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">++<pos:position pos:line="50" pos:column="28"/></operator></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then> <else pos:line="51" pos:column="19">else <block pos:line="51" pos:column="24">{
			<expr_stmt><expr><name pos:line="52" pos:column="25">ptr<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <operator pos:line="52" pos:column="31">&amp;<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="32">user<pos:position pos:line="52" pos:column="36"/></name></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="53" pos:column="25">len<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">=<pos:position pos:line="53" pos:column="30"/></operator> <name pos:line="53" pos:column="31">user_len<pos:position pos:line="53" pos:column="39"/></name></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></else></if>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><operator pos:line="55" pos:column="21">!<pos:position pos:line="55" pos:column="22"/></operator><operator pos:line="55" pos:column="22">*<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">ptr<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">||<pos:position pos:line="55" pos:column="29"/></operator> <call><name pos:line="55" pos:column="30">strncmp<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">s<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="41">*<pos:position pos:line="55" pos:column="42"/></operator><name pos:line="55" pos:column="42">ptr<pos:position pos:line="55" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">len<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call> <operator pos:line="55" pos:column="52">!=<pos:position pos:line="55" pos:column="54"/></operator> <literal type="number" pos:line="55" pos:column="55">0<pos:position pos:line="55" pos:column="56"/></literal> <operator pos:line="55" pos:column="57">||<pos:position pos:line="55" pos:column="59"/></operator> <name><name pos:line="55" pos:column="60">s<pos:position pos:line="55" pos:column="61"/></name><index pos:line="55" pos:column="61">[<expr><name pos:line="55" pos:column="62">len<pos:position pos:line="55" pos:column="65"/></name></expr>]<pos:position pos:line="55" pos:column="66"/></index></name> <operator pos:line="55" pos:column="67">!=<pos:position pos:line="55" pos:column="69"/></operator> <literal type="char" pos:line="55" pos:column="70">':'<pos:position pos:line="55" pos:column="73"/></literal></expr>)<pos:position pos:line="55" pos:column="74"/></condition><then pos:line="55" pos:column="74">
			<block type="pseudo"><continue pos:line="56" pos:column="25">continue;<pos:position pos:line="56" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">generate_hash<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">s<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">+<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="33">len<pos:position pos:line="57" pos:column="36"/></name><operator pos:line="57" pos:column="36">+<pos:position pos:line="57" pos:column="37"/></operator><literal type="number" pos:line="57" pos:column="37">1<pos:position pos:line="57" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="40">challenge<pos:position pos:line="57" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="51">pass2<pos:position pos:line="57" pos:column="56"/></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">strcmp<pos:position pos:line="58" pos:column="27"/></name><argument_list pos:line="58" pos:column="27">(<argument><expr><name pos:line="58" pos:column="28">pass<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="34">pass2<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call> <operator pos:line="58" pos:column="41">==<pos:position pos:line="58" pos:column="43"/></operator> <literal type="number" pos:line="58" pos:column="44">0<pos:position pos:line="58" pos:column="45"/></literal></expr>)<pos:position pos:line="58" pos:column="46"/></condition><then pos:line="58" pos:column="46"> <block pos:line="58" pos:column="47">{
			<expr_stmt><expr><name pos:line="59" pos:column="25">err<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">=<pos:position pos:line="59" pos:column="30"/></operator> <name pos:line="59" pos:column="31">NULL<pos:position pos:line="59" pos:column="35"/></name></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt>
			<break pos:line="60" pos:column="25">break;<pos:position pos:line="60" pos:column="31"/></break>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="62" pos:column="17">err<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <literal type="string" pos:line="62" pos:column="23">"password mismatch"<pos:position pos:line="62" pos:column="42"/></literal></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="63" pos:column="17">*<pos:position pos:line="63" pos:column="18"/></operator><name pos:line="63" pos:column="18">ptr<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <name pos:line="63" pos:column="24">NULL<pos:position pos:line="63" pos:column="28"/></name></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt> <comment type="block" pos:line="63" pos:column="30">/* Don't look for name again. */</comment>
	}<pos:position pos:line="64" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="66" pos:column="9">fclose<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><name pos:line="66" pos:column="16">fh<pos:position pos:line="66" pos:column="18"/></name></expr></argument>)<pos:position pos:line="66" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="68" pos:column="9">memset<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name pos:line="68" pos:column="16">line<pos:position pos:line="68" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="22">0<pos:position pos:line="68" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="25">sizeof <name pos:line="68" pos:column="32">line<pos:position pos:line="68" pos:column="36"/></name></sizeof></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">memset<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">pass2<pos:position pos:line="69" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="23">0<pos:position pos:line="69" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="26">sizeof <name pos:line="69" pos:column="33">pass2<pos:position pos:line="69" pos:column="38"/></name></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="40"/></expr_stmt>

	<return pos:line="71" pos:column="9">return <expr><name pos:line="71" pos:column="16">err<pos:position pos:line="71" pos:column="19"/></name></expr>;<pos:position pos:line="71" pos:column="20"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

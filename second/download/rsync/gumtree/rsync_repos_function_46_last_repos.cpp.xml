<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_46_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">set_dparams<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">syntax_check_only<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">equal<pos:position pos:line="3" pos:column="20"/></name></decl>, <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="23">val<pos:position pos:line="3" pos:column="26"/></name></decl>, <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier><modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="30">params<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><name><name pos:line="3" pos:column="39">dparam_list<pos:position pos:line="3" pos:column="50"/></name><operator pos:line="3" pos:column="50">.<pos:position pos:line="3" pos:column="51"/></operator><name pos:line="3" pos:column="51">items<pos:position pos:line="3" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">j<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">j<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">j<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name><name pos:line="6" pos:column="25">dparam_list<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">.<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="37">count<pos:position pos:line="6" pos:column="42"/></name></name></expr>;<pos:position pos:line="6" pos:column="43"/></condition> <incr><expr><name pos:line="6" pos:column="44">j<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">++<pos:position pos:line="6" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="48"/></control> <block pos:line="6" pos:column="49">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">equal<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <call><name pos:line="7" pos:column="25">strchr<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name><name pos:line="7" pos:column="32">params<pos:position pos:line="7" pos:column="38"/></name><index pos:line="7" pos:column="38">[<expr><name pos:line="7" pos:column="39">j<pos:position pos:line="7" pos:column="40"/></name></expr>]<pos:position pos:line="7" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="43">'='<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt> <comment type="block" pos:line="7" pos:column="49">/* options.c verified this */</comment>
		<expr_stmt><expr><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">equal<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="char" pos:line="8" pos:column="26">'\0'<pos:position pos:line="8" pos:column="30"/></literal></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">syntax_check_only<pos:position pos:line="9" pos:column="38"/></name></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <block pos:line="9" pos:column="40">{
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><call><name pos:line="10" pos:column="29">map_parameter<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name><name pos:line="10" pos:column="43">params<pos:position pos:line="10" pos:column="49"/></name><index pos:line="10" pos:column="49">[<expr><name pos:line="10" pos:column="50">j<pos:position pos:line="10" pos:column="51"/></name></expr>]<pos:position pos:line="10" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call> <operator pos:line="10" pos:column="54">&lt;<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="56">0<pos:position pos:line="10" pos:column="57"/></literal></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58"> <block pos:line="10" pos:column="59">{
				<expr_stmt><expr><call><name pos:line="11" pos:column="33">rprintf<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">FERROR<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="49">"Unknown parameter \"%s\"\n"<pos:position pos:line="11" pos:column="77"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="79">params<pos:position pos:line="11" pos:column="85"/></name><index pos:line="11" pos:column="85">[<expr><name pos:line="11" pos:column="86">j<pos:position pos:line="11" pos:column="87"/></name></expr>]<pos:position pos:line="11" pos:column="88"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="90"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">equal<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">=<pos:position pos:line="12" pos:column="41"/></operator> <literal type="char" pos:line="12" pos:column="42">'='<pos:position pos:line="12" pos:column="45"/></literal></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
				<return pos:line="13" pos:column="33">return <expr><name pos:line="13" pos:column="40">False<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></return>
			}<pos:position pos:line="14" pos:column="26"/></block></then></if>
		}<pos:position pos:line="15" pos:column="18"/></block></then> <else pos:line="15" pos:column="19">else <block pos:line="15" pos:column="24">{
			<for pos:line="16" pos:column="25">for <control pos:line="16" pos:column="29">(<init><expr><name pos:line="16" pos:column="30">val<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">equal<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">+<pos:position pos:line="16" pos:column="42"/></operator><literal type="number" pos:line="16" pos:column="42">1<pos:position pos:line="16" pos:column="43"/></literal></expr>;<pos:position pos:line="16" pos:column="44"/></init> <condition><expr><call><name pos:line="16" pos:column="45">isSpace<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">(<argument><expr><name pos:line="16" pos:column="53">val<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></condition> <incr><expr><name pos:line="16" pos:column="59">val<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">++<pos:position pos:line="16" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="65"/></control> <block pos:line="16" pos:column="66">{}<pos:position pos:line="16" pos:column="68"/></block></for>
			<expr_stmt><expr><call><name pos:line="17" pos:column="25">do_parameter<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">params<pos:position pos:line="17" pos:column="44"/></name><index pos:line="17" pos:column="44">[<expr><name pos:line="17" pos:column="45">j<pos:position pos:line="17" pos:column="46"/></name></expr>]<pos:position pos:line="17" pos:column="47"/></index></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">val<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></else></if>
		<expr_stmt><expr><operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">equal<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="char" pos:line="19" pos:column="26">'='<pos:position pos:line="19" pos:column="29"/></literal></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>

	<return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">True<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

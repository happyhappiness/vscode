<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_433_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Parse<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">( <parameter><decl><type><name pos:line="1" pos:column="19">FILE<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">InFile<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>,
                   <parameter><function_decl><type><name pos:line="2" pos:column="20">BOOL<pos:position pos:line="2" pos:column="24"/></name></type> (<modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier><name pos:line="2" pos:column="27">sfunc<pos:position pos:line="2" pos:column="32"/></name>)<parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list></function_decl></parameter>,
                   <parameter><function_decl><type><name pos:line="3" pos:column="20">BOOL<pos:position pos:line="3" pos:column="24"/></name></type> (<modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier><name pos:line="3" pos:column="27">pfunc<pos:position pos:line="3" pos:column="32"/></name>)<parameter_list pos:line="3" pos:column="33">(<parameter><decl><type><name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">char<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list></function_decl></parameter> )<pos:position pos:line="3" pos:column="51"/></parameter_list>
  <comment type="block" pos:line="4" pos:column="3">/* ------------------------------------------------------------------------ **
   * Scan &amp; parse the input.
   *
   *  Input:  InFile  - Input source.
   *          sfunc   - Function to be called when a section name is scanned.
   *                    See Section().
   *          pfunc   - Function to be called when a parameter is scanned.
   *                    See Parameter().
   *
   *  Output: 1 if the file was successfully scanned, 2 if the file was
   *  scanned until a section header with no section function, else 0.
   *
   *  Notes:  The input can be viewed in terms of 'lines'.  There are four
   *          types of lines:
   *            Blank      - May contain whitespace, otherwise empty.
   *            Comment    - First non-whitespace character is a ';' or '#'.
   *                         The remainder of the line is ignored.
   *            Section    - First non-whitespace character is a '['.
   *            Parameter  - The default case.
   *
   * ------------------------------------------------------------------------ **
   */</comment>
  <block pos:line="26" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="27" pos:column="3">int<pos:position pos:line="27" pos:column="6"/></name></type>    <name pos:line="27" pos:column="10">c<pos:position pos:line="27" pos:column="11"/></name></decl>;<pos:position pos:line="27" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="29" pos:column="3">c<pos:position pos:line="29" pos:column="4"/></name> <operator pos:line="29" pos:column="5">=<pos:position pos:line="29" pos:column="6"/></operator> <call><name pos:line="29" pos:column="7">EatWhitespace<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">( <argument><expr><name pos:line="29" pos:column="22">InFile<pos:position pos:line="29" pos:column="28"/></name></expr></argument> )<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
  <while pos:line="30" pos:column="3">while<condition pos:line="30" pos:column="8">( <expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">EOF<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">!=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">c<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">)<pos:position pos:line="30" pos:column="20"/></operator> <operator pos:line="30" pos:column="21">&amp;&amp;<pos:position pos:line="30" pos:column="31"/></operator> <operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">c<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">&gt;<pos:position pos:line="30" pos:column="31"/></operator> <literal type="number" pos:line="30" pos:column="29">0<pos:position pos:line="30" pos:column="30"/></literal><operator pos:line="30" pos:column="30">)<pos:position pos:line="30" pos:column="31"/></operator></expr> )<pos:position pos:line="30" pos:column="33"/></condition>
    <block pos:line="31" pos:column="5">{
    <switch pos:line="32" pos:column="5">switch<condition pos:line="32" pos:column="11">( <expr><name pos:line="32" pos:column="13">c<pos:position pos:line="32" pos:column="14"/></name></expr> )<pos:position pos:line="32" pos:column="16"/></condition>
      <block pos:line="33" pos:column="7">{
      <case pos:line="34" pos:column="7">case <expr><literal type="char" pos:line="34" pos:column="12">'\n'<pos:position pos:line="34" pos:column="16"/></literal></expr>:<pos:position pos:line="34" pos:column="17"/></case>                        <comment type="block" pos:line="34" pos:column="41">/* Blank line. */</comment>
        <expr_stmt><expr><name pos:line="35" pos:column="9">c<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <call><name pos:line="35" pos:column="13">EatWhitespace<pos:position pos:line="35" pos:column="26"/></name><argument_list pos:line="35" pos:column="26">( <argument><expr><name pos:line="35" pos:column="28">InFile<pos:position pos:line="35" pos:column="34"/></name></expr></argument> )<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
        <break pos:line="36" pos:column="9">break;<pos:position pos:line="36" pos:column="15"/></break>

      <case pos:line="38" pos:column="7">case <expr><literal type="char" pos:line="38" pos:column="12">';'<pos:position pos:line="38" pos:column="15"/></literal></expr>:<pos:position pos:line="38" pos:column="16"/></case>                         <comment type="block" pos:line="38" pos:column="41">/* Comment line. */</comment>
      <case pos:line="39" pos:column="7">case <expr><literal type="char" pos:line="39" pos:column="12">'#'<pos:position pos:line="39" pos:column="15"/></literal></expr>:<pos:position pos:line="39" pos:column="16"/></case>
        <expr_stmt><expr><name pos:line="40" pos:column="9">c<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">EatComment<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">( <argument><expr><name pos:line="40" pos:column="25">InFile<pos:position pos:line="40" pos:column="31"/></name></expr></argument> )<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
        <break pos:line="41" pos:column="9">break;<pos:position pos:line="41" pos:column="15"/></break>

      <case pos:line="43" pos:column="7">case <expr><literal type="char" pos:line="43" pos:column="12">'['<pos:position pos:line="43" pos:column="15"/></literal></expr>:<pos:position pos:line="43" pos:column="16"/></case>                         <comment type="block" pos:line="43" pos:column="41">/* Section Header. */</comment>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">sfunc<pos:position pos:line="44" pos:column="19"/></name></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20">
          <block type="pseudo"><return pos:line="45" pos:column="11">return <expr><literal type="number" pos:line="45" pos:column="18">2<pos:position pos:line="45" pos:column="19"/></literal></expr>;<pos:position pos:line="45" pos:column="20"/></return></block></then></if>
        <if pos:line="46" pos:column="9">if<condition pos:line="46" pos:column="11">( <expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><call><name pos:line="46" pos:column="14">Section<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">( <argument><expr><name pos:line="46" pos:column="23">InFile<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="31">sfunc<pos:position pos:line="46" pos:column="36"/></name></expr></argument> )<pos:position pos:line="46" pos:column="38"/></argument_list></call></expr> )<pos:position pos:line="46" pos:column="40"/></condition><then pos:line="46" pos:column="40">
          <block type="pseudo"><return pos:line="47" pos:column="11">return <expr><literal type="number" pos:line="47" pos:column="18">0<pos:position pos:line="47" pos:column="19"/></literal></expr>;<pos:position pos:line="47" pos:column="20"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="48" pos:column="9">c<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <call><name pos:line="48" pos:column="13">EatWhitespace<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">( <argument><expr><name pos:line="48" pos:column="28">InFile<pos:position pos:line="48" pos:column="34"/></name></expr></argument> )<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
        <break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break>

      <case pos:line="51" pos:column="7">case <expr><literal type="char" pos:line="51" pos:column="12">'\\'<pos:position pos:line="51" pos:column="16"/></literal></expr>:<pos:position pos:line="51" pos:column="17"/></case>                        <comment type="block" pos:line="51" pos:column="41">/* Bogus backslash. */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">c<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <call><name pos:line="52" pos:column="13">EatWhitespace<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">( <argument><expr><name pos:line="52" pos:column="28">InFile<pos:position pos:line="52" pos:column="34"/></name></expr></argument> )<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
        <break pos:line="53" pos:column="9">break;<pos:position pos:line="53" pos:column="15"/></break>

      <case pos:line="55" pos:column="7">case <expr><literal type="char" pos:line="55" pos:column="12">'&amp;'<pos:position pos:line="55" pos:column="19"/></literal></expr>:<pos:position pos:line="55" pos:column="16"/></case>                         <comment type="block" pos:line="55" pos:column="41">/* Handle directives */</comment>
        <expr_stmt><expr><name pos:line="56" pos:column="9">the_sfunc<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">sfunc<pos:position pos:line="56" pos:column="26"/></name></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">the_pfunc<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">pfunc<pos:position pos:line="57" pos:column="26"/></name></expr>;<pos:position pos:line="57" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">c<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">Parameter<pos:position pos:line="58" pos:column="22"/></name><argument_list pos:line="58" pos:column="22">( <argument><expr><name pos:line="58" pos:column="24">InFile<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">parse_directives<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="50">c<pos:position pos:line="58" pos:column="51"/></name></expr></argument> )<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">c<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">!=<pos:position pos:line="59" pos:column="17"/></operator> <literal type="number" pos:line="59" pos:column="18">1<pos:position pos:line="59" pos:column="19"/></literal></expr>)<pos:position pos:line="59" pos:column="20"/></condition><then pos:line="59" pos:column="20">
          <block type="pseudo"><return pos:line="60" pos:column="11">return <expr><name pos:line="60" pos:column="18">c<pos:position pos:line="60" pos:column="19"/></name></expr>;<pos:position pos:line="60" pos:column="20"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="61" pos:column="9">c<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <call><name pos:line="61" pos:column="13">EatWhitespace<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">( <argument><expr><name pos:line="61" pos:column="28">InFile<pos:position pos:line="61" pos:column="34"/></name></expr></argument> )<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
        <break pos:line="62" pos:column="9">break;<pos:position pos:line="62" pos:column="15"/></break>

      <default pos:line="64" pos:column="7">default:<pos:position pos:line="64" pos:column="15"/></default>                          <comment type="block" pos:line="64" pos:column="41">/* Parameter line. */</comment>
        <if pos:line="65" pos:column="9">if<condition pos:line="65" pos:column="11">( <expr><operator pos:line="65" pos:column="13">!<pos:position pos:line="65" pos:column="14"/></operator><call><name pos:line="65" pos:column="14">Parameter<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">( <argument><expr><name pos:line="65" pos:column="25">InFile<pos:position pos:line="65" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">pfunc<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="40">c<pos:position pos:line="65" pos:column="41"/></name></expr></argument> )<pos:position pos:line="65" pos:column="43"/></argument_list></call></expr> )<pos:position pos:line="65" pos:column="45"/></condition><then pos:line="65" pos:column="45">
          <block type="pseudo"><return pos:line="66" pos:column="11">return <expr><literal type="number" pos:line="66" pos:column="18">0<pos:position pos:line="66" pos:column="19"/></literal></expr>;<pos:position pos:line="66" pos:column="20"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="67" pos:column="9">c<pos:position pos:line="67" pos:column="10"/></name> <operator pos:line="67" pos:column="11">=<pos:position pos:line="67" pos:column="12"/></operator> <call><name pos:line="67" pos:column="13">EatWhitespace<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">( <argument><expr><name pos:line="67" pos:column="28">InFile<pos:position pos:line="67" pos:column="34"/></name></expr></argument> )<pos:position pos:line="67" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
        <break pos:line="68" pos:column="9">break;<pos:position pos:line="68" pos:column="15"/></break>
      }<pos:position pos:line="69" pos:column="8"/></block></switch>
    }<pos:position pos:line="70" pos:column="6"/></block></while>
  <return pos:line="71" pos:column="3">return <expr><literal type="number" pos:line="71" pos:column="10">1<pos:position pos:line="71" pos:column="11"/></literal></expr>;<pos:position pos:line="71" pos:column="12"/></return>
  }<pos:position pos:line="72" pos:column="4"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_201_rsync-3.0.4.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">hashtable<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">hashtable_create<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">size<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">key64<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">hashtable<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">tbl<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">node_size<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><ternary><condition><expr><name pos:line="4" pos:column="25">key64<pos:position pos:line="4" pos:column="30"/></name></expr> ?<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32"> <expr><sizeof pos:line="4" pos:column="33">sizeof <argument_list pos:line="4" pos:column="40">(<argument><expr pos:line="4" pos:column="41">struct <name pos:line="4" pos:column="48">ht_int64_node<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></sizeof></expr>
			      <pos:position pos:line="5" pos:column="10"/></then><else pos:line="5" pos:column="31">: <expr><sizeof pos:line="5" pos:column="33">sizeof <argument_list pos:line="5" pos:column="40">(<argument><expr pos:line="5" pos:column="41">struct <name pos:line="5" pos:column="48">ht_int32_node<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></sizeof></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="63"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Pick a power of 2 that can hold the requested size. */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">size<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">size<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-<pos:position pos:line="8" pos:column="26"/></operator><literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator> <operator pos:line="8" pos:column="29">||<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="32">size<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">&lt;<pos:position pos:line="8" pos:column="41"/></operator> <literal type="number" pos:line="8" pos:column="39">16<pos:position pos:line="8" pos:column="41"/></literal></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42"> <block pos:line="8" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">req<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name pos:line="9" pos:column="27">size<pos:position pos:line="9" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">size<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="24">16<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
		<while pos:line="11" pos:column="17">while <condition pos:line="11" pos:column="23">(<expr><name pos:line="11" pos:column="24">size<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&lt;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="31">req<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">size<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">*=<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="33">2<pos:position pos:line="12" pos:column="34"/></literal></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt></block></while>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">tbl<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <operator pos:line="15" pos:column="21">new<pos:position pos:line="15" pos:column="24"/></operator><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator>struct <name pos:line="15" pos:column="32">hashtable<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">)<pos:position pos:line="15" pos:column="42"/></operator><operator pos:line="15" pos:column="42">)<pos:position pos:line="15" pos:column="43"/></operator>
	 <operator pos:line="16" pos:column="10">||<pos:position pos:line="16" pos:column="12"/></operator> <operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name><name pos:line="16" pos:column="15">tbl<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">nodes<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <call><name pos:line="16" pos:column="28">new_array0<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">char<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">size<pos:position pos:line="16" pos:column="49"/></name> <operator pos:line="16" pos:column="50">*<pos:position pos:line="16" pos:column="51"/></operator> <name pos:line="16" pos:column="52">node_size<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call><operator pos:line="16" pos:column="62">)<pos:position pos:line="16" pos:column="63"/></operator></expr>)<pos:position pos:line="16" pos:column="64"/></condition><then pos:line="16" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">out_of_memory<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><literal type="string" pos:line="17" pos:column="31">"hashtable_create"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="18" pos:column="9">tbl<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">size<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">size<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">tbl<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">entries<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">tbl<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">node_size<pos:position pos:line="20" pos:column="23"/></name></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">node_size<pos:position pos:line="20" pos:column="35"/></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">tbl<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">key64<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="22">key64<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>

	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">tbl<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

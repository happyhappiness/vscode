<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_477_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">invokeCallbacks<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">poptContext<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">con<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name><name pos:line="1" pos:column="52">struct<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">poptOption<pos:position pos:line="1" pos:column="69"/></name></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type> <name pos:line="1" pos:column="72">table<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">post<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list> <block pos:line="2" pos:column="39">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name><name pos:line="3" pos:column="11">struct<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">poptOption<pos:position pos:line="3" pos:column="28"/></name></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type> <name pos:line="3" pos:column="31">opt<pos:position pos:line="3" pos:column="34"/></name> <init pos:line="3" pos:column="35">= <expr><name pos:line="3" pos:column="37">table<pos:position pos:line="3" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">poptCallbackType<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">cb<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><name><name pos:line="6" pos:column="12">opt<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">longName<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">||<pos:position pos:line="6" pos:column="28"/></operator> <name><name pos:line="6" pos:column="29">opt<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">shortName<pos:position pos:line="6" pos:column="43"/></name></name> <operator pos:line="6" pos:column="44">||<pos:position pos:line="6" pos:column="46"/></operator> <name><name pos:line="6" pos:column="47">opt<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">-&gt;<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="52">arg<pos:position pos:line="6" pos:column="55"/></name></name></expr>)<pos:position pos:line="6" pos:column="56"/></condition> <block pos:line="6" pos:column="57">{
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="14">opt<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">argInfo<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="29">POPT_ARG_MASK<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">)<pos:position pos:line="7" pos:column="43"/></operator> <operator pos:line="7" pos:column="44">==<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="47">POPT_ARG_INCLUDE_TABLE<pos:position pos:line="7" pos:column="69"/></name></expr>)<pos:position pos:line="7" pos:column="70"/></condition><then pos:line="7" pos:column="70"> <block pos:line="7" pos:column="71">{
	    <expr_stmt><expr><call><name pos:line="8" pos:column="13">invokeCallbacks<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">con<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="34">opt<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">arg<pos:position pos:line="8" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">post<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then> <elseif pos:line="9" pos:column="11">else <if pos:line="9" pos:column="16">if <condition pos:line="9" pos:column="19">(<expr><operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name><name pos:line="9" pos:column="22">opt<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">argInfo<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="37">POPT_ARG_MASK<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">)<pos:position pos:line="9" pos:column="51"/></operator> <operator pos:line="9" pos:column="52">==<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="55">POPT_ARG_CALLBACK<pos:position pos:line="9" pos:column="72"/></name><operator pos:line="9" pos:column="72">)<pos:position pos:line="9" pos:column="73"/></operator> <operator pos:line="9" pos:column="74">&amp;&amp;<pos:position pos:line="9" pos:column="84"/></operator>
		   <operator pos:line="10" pos:column="20">(<pos:position pos:line="10" pos:column="21"/></operator><operator pos:line="10" pos:column="21">(<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">!<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">post<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&amp;&amp;<pos:position pos:line="10" pos:column="38"/></operator> <operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><name><name pos:line="10" pos:column="32">opt<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">argInfo<pos:position pos:line="10" pos:column="44"/></name></name> <operator pos:line="10" pos:column="45">&amp;<pos:position pos:line="10" pos:column="50"/></operator> <name pos:line="10" pos:column="47">POPT_CBFLAG_PRE<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">)<pos:position pos:line="10" pos:column="63"/></operator><operator pos:line="10" pos:column="63">)<pos:position pos:line="10" pos:column="64"/></operator> <operator pos:line="10" pos:column="65">||<pos:position pos:line="10" pos:column="67"/></operator>
		    <operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">post<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&amp;&amp;<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="31">(<pos:position pos:line="11" pos:column="32"/></operator><name><name pos:line="11" pos:column="32">opt<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">argInfo<pos:position pos:line="11" pos:column="44"/></name></name> <operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator> <name pos:line="11" pos:column="47">POPT_CBFLAG_POST<pos:position pos:line="11" pos:column="63"/></name><operator pos:line="11" pos:column="63">)<pos:position pos:line="11" pos:column="64"/></operator><operator pos:line="11" pos:column="64">)<pos:position pos:line="11" pos:column="65"/></operator><operator pos:line="11" pos:column="65">)<pos:position pos:line="11" pos:column="66"/></operator></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67"> <block pos:line="11" pos:column="68">{
	    <expr_stmt><expr><name pos:line="12" pos:column="13">cb<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">poptCallbackType<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator><name><name pos:line="12" pos:column="36">opt<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">arg<pos:position pos:line="12" pos:column="44"/></name></name></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="13" pos:column="13">cb<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">con<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="13" pos:column="21">post<pos:position pos:line="13" pos:column="25"/></name></expr> ?<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <expr><name pos:line="13" pos:column="28">POPT_CALLBACK_REASON_POST<pos:position pos:line="13" pos:column="53"/></name></expr> <pos:position pos:line="13" pos:column="54"/></then><else pos:line="13" pos:column="54">: <expr><name pos:line="13" pos:column="56">POPT_CALLBACK_REASON_PRE<pos:position pos:line="13" pos:column="80"/></name></expr></else></ternary></expr></argument>,
	       <argument><expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="28">opt<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-&gt;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="33">descrip<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><name pos:line="16" pos:column="9">opt<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">++<pos:position pos:line="16" pos:column="14"/></operator></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

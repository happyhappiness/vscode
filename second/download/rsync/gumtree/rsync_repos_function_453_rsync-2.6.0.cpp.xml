<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_453_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">domatch<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">unsigned<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">p<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">unsigned<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">char<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">text<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">matched<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">special<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">char<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">ch<pos:position pos:line="4" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">prev<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">WILD_TEST_ITERATIONS<pos:position pos:line="6" pos:column="28"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="7" pos:column="5">wildmatch_iteration_count<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">++<pos:position pos:line="7" pos:column="32"/></operator></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">( <init pos:line="10" pos:column="11">;<pos:position pos:line="10" pos:column="12"/></init> <condition><expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">ch<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <operator pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">p<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">)<pos:position pos:line="10" pos:column="22"/></operator> <operator pos:line="10" pos:column="23">!=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="char" pos:line="10" pos:column="26">'\0'<pos:position pos:line="10" pos:column="30"/></literal></expr>;<pos:position pos:line="10" pos:column="31"/></condition> <incr><expr><name pos:line="10" pos:column="32">text<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">++<pos:position pos:line="10" pos:column="38"/></operator></expr><operator pos:line="10" pos:column="38">,<pos:position pos:line="10" pos:column="39"/></operator> <expr><name pos:line="10" pos:column="40">p<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">++<pos:position pos:line="10" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="44"/></control> <block pos:line="10" pos:column="45">{
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">text<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <literal type="char" pos:line="11" pos:column="22">'\0'<pos:position pos:line="11" pos:column="26"/></literal> <operator pos:line="11" pos:column="27">&amp;&amp;<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="30">ch<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">!=<pos:position pos:line="11" pos:column="35"/></operator> <literal type="char" pos:line="11" pos:column="36">'*'<pos:position pos:line="11" pos:column="39"/></literal></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
	    <block type="pseudo"><return pos:line="12" pos:column="13">return <expr><name pos:line="12" pos:column="20">FALSE<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>
	<switch pos:line="13" pos:column="9">switch <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">ch<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition> <block pos:line="13" pos:column="21">{
	  <case pos:line="14" pos:column="11">case <expr><literal type="char" pos:line="14" pos:column="16">'\\'<pos:position pos:line="14" pos:column="20"/></literal></expr>:<pos:position pos:line="14" pos:column="21"/></case>
	    <comment type="block" pos:line="15" pos:column="13">/* Literal match with following character.  Note that the test
	     * in "default" handles the p[1] == '\0' failure case. */</comment>
	    <expr_stmt><expr><name pos:line="17" pos:column="13">ch<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></operator><operator pos:line="17" pos:column="19">++<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">p<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
	    <comment type="block" pos:line="18" pos:column="13">/* FALLTHROUGH */</comment>
	  <default pos:line="19" pos:column="11">default:<pos:position pos:line="19" pos:column="19"/></default>
	    <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">text<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">!=<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">ch<pos:position pos:line="20" pos:column="28"/></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29">
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><name pos:line="21" pos:column="24">FALSE<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></return></block></then></if>
	    <continue pos:line="22" pos:column="13">continue;<pos:position pos:line="22" pos:column="22"/></continue>
	  <case pos:line="23" pos:column="11">case <expr><literal type="char" pos:line="23" pos:column="16">'?'<pos:position pos:line="23" pos:column="19"/></literal></expr>:<pos:position pos:line="23" pos:column="20"/></case>
	    <comment type="block" pos:line="24" pos:column="13">/* Match anything but '/'. */</comment>
	    <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><operator pos:line="25" pos:column="17">*<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">text<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">==<pos:position pos:line="25" pos:column="25"/></operator> <literal type="char" pos:line="25" pos:column="26">'/'<pos:position pos:line="25" pos:column="29"/></literal></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
		<block type="pseudo"><return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">FALSE<pos:position pos:line="26" pos:column="29"/></name></expr>;<pos:position pos:line="26" pos:column="30"/></return></block></then></if>
	    <continue pos:line="27" pos:column="13">continue;<pos:position pos:line="27" pos:column="22"/></continue>
	  <case pos:line="28" pos:column="11">case <expr><literal type="char" pos:line="28" pos:column="16">'*'<pos:position pos:line="28" pos:column="19"/></literal></expr>:<pos:position pos:line="28" pos:column="20"/></case>
	    <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">*<pos:position pos:line="29" pos:column="18"/></operator><operator pos:line="29" pos:column="18">++<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">p<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">==<pos:position pos:line="29" pos:column="24"/></operator> <literal type="char" pos:line="29" pos:column="25">'*'<pos:position pos:line="29" pos:column="28"/></literal></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block pos:line="29" pos:column="30">{
		<while pos:line="30" pos:column="17">while <condition pos:line="30" pos:column="23">(<expr><operator pos:line="30" pos:column="24">*<pos:position pos:line="30" pos:column="25"/></operator><operator pos:line="30" pos:column="25">++<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="27">p<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">==<pos:position pos:line="30" pos:column="31"/></operator> <literal type="char" pos:line="30" pos:column="32">'*'<pos:position pos:line="30" pos:column="35"/></literal></expr>)<pos:position pos:line="30" pos:column="36"/></condition> <block pos:line="30" pos:column="37">{}<pos:position pos:line="30" pos:column="39"/></block></while>
		<expr_stmt><expr><name pos:line="31" pos:column="17">special<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">TRUE<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
	    }<pos:position pos:line="32" pos:column="14"/></block></then>
	    <else pos:line="33" pos:column="13">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="17">special<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">FALSE<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt></block></else></if>
	    <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">p<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <literal type="char" pos:line="35" pos:column="23">'\0'<pos:position pos:line="35" pos:column="27"/></literal></expr>)<pos:position pos:line="35" pos:column="28"/></condition><then pos:line="35" pos:column="28"> <block pos:line="35" pos:column="29">{
		<comment type="block" pos:line="36" pos:column="17">/* Trailing "**" matches everything.  Trailing "*" matches
		 * only if there are no more slash characters. */</comment>
		<return pos:line="38" pos:column="17">return <expr><ternary><condition><expr><name pos:line="38" pos:column="24">special<pos:position pos:line="38" pos:column="31"/></name></expr>?<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32"> <expr><name pos:line="38" pos:column="33">TRUE<pos:position pos:line="38" pos:column="37"/></name></expr> <pos:position pos:line="38" pos:column="38"/></then><else pos:line="38" pos:column="38">: <expr><call><name pos:line="38" pos:column="40">strchr<pos:position pos:line="38" pos:column="46"/></name><argument_list pos:line="38" pos:column="46">(<argument><expr><operator pos:line="38" pos:column="47">(<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="48">char<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">*<pos:position pos:line="38" pos:column="53"/></operator><operator pos:line="38" pos:column="53">)<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="54">text<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="60">'/'<pos:position pos:line="38" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call> <operator pos:line="38" pos:column="65">==<pos:position pos:line="38" pos:column="67"/></operator> <name pos:line="38" pos:column="68">NULL<pos:position pos:line="38" pos:column="72"/></name></expr></else></ternary></expr>;<pos:position pos:line="38" pos:column="73"/></return>
	    }<pos:position pos:line="39" pos:column="14"/></block></then></if>
	    <for pos:line="40" pos:column="13">for <control pos:line="40" pos:column="17">( <init pos:line="40" pos:column="19">;<pos:position pos:line="40" pos:column="20"/></init> <condition><expr><operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">text<pos:position pos:line="40" pos:column="26"/></name></expr>;<pos:position pos:line="40" pos:column="27"/></condition> <incr><expr><name pos:line="40" pos:column="28">text<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">++<pos:position pos:line="40" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="40" pos:column="35"/></control> <block pos:line="40" pos:column="36">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">matched<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <call><name pos:line="41" pos:column="32">domatch<pos:position pos:line="41" pos:column="39"/></name><argument_list pos:line="41" pos:column="39">(<argument><expr><name pos:line="41" pos:column="40">p<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="43">text<pos:position pos:line="41" pos:column="47"/></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call><operator pos:line="41" pos:column="48">)<pos:position pos:line="41" pos:column="49"/></operator> <operator pos:line="41" pos:column="50">!=<pos:position pos:line="41" pos:column="52"/></operator> <name pos:line="41" pos:column="53">FALSE<pos:position pos:line="41" pos:column="58"/></name></expr>)<pos:position pos:line="41" pos:column="59"/></condition><then pos:line="41" pos:column="59"> <block pos:line="41" pos:column="60">{
		    <if pos:line="42" pos:column="21">if <condition pos:line="42" pos:column="24">(<expr><operator pos:line="42" pos:column="25">!<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="26">special<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">||<pos:position pos:line="42" pos:column="36"/></operator> <name pos:line="42" pos:column="37">matched<pos:position pos:line="42" pos:column="44"/></name> <operator pos:line="42" pos:column="45">!=<pos:position pos:line="42" pos:column="47"/></operator> <name pos:line="42" pos:column="48">ABORT_TO_STARSTAR<pos:position pos:line="42" pos:column="65"/></name></expr>)<pos:position pos:line="42" pos:column="66"/></condition><then pos:line="42" pos:column="66">
			<block type="pseudo"><return pos:line="43" pos:column="25">return <expr><name pos:line="43" pos:column="32">matched<pos:position pos:line="43" pos:column="39"/></name></expr>;<pos:position pos:line="43" pos:column="40"/></return></block></then></if>
		}<pos:position pos:line="44" pos:column="18"/></block></then>
		<elseif pos:line="45" pos:column="17">else <if pos:line="45" pos:column="22">if <condition pos:line="45" pos:column="25">(<expr><operator pos:line="45" pos:column="26">!<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">special<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">&amp;&amp;<pos:position pos:line="45" pos:column="45"/></operator> <operator pos:line="45" pos:column="38">*<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">text<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">==<pos:position pos:line="45" pos:column="46"/></operator> <literal type="char" pos:line="45" pos:column="47">'/'<pos:position pos:line="45" pos:column="50"/></literal></expr>)<pos:position pos:line="45" pos:column="51"/></condition><then pos:line="45" pos:column="51">
		    <block type="pseudo"><return pos:line="46" pos:column="21">return <expr><name pos:line="46" pos:column="28">ABORT_TO_STARSTAR<pos:position pos:line="46" pos:column="45"/></name></expr>;<pos:position pos:line="46" pos:column="46"/></return></block></then></if></elseif></if>
	    }<pos:position pos:line="47" pos:column="14"/></block></for>
	    <return pos:line="48" pos:column="13">return <expr><name pos:line="48" pos:column="20">ABORT_ALL<pos:position pos:line="48" pos:column="29"/></name></expr>;<pos:position pos:line="48" pos:column="30"/></return>
	  <case pos:line="49" pos:column="11">case <expr><literal type="char" pos:line="49" pos:column="16">'['<pos:position pos:line="49" pos:column="19"/></literal></expr>:<pos:position pos:line="49" pos:column="20"/></case>
	    <expr_stmt><expr><name pos:line="50" pos:column="13">ch<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <operator pos:line="50" pos:column="18">*<pos:position pos:line="50" pos:column="19"/></operator><operator pos:line="50" pos:column="19">++<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">p<pos:position pos:line="50" pos:column="22"/></name></expr>;<pos:position pos:line="50" pos:column="23"/></expr_stmt>
<cpp:ifdef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifdef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">NEGATE_CLASS2<pos:position pos:line="51" pos:column="21"/></name></cpp:ifdef>
	    <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">ch<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">==<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">NEGATE_CLASS2<pos:position pos:line="52" pos:column="36"/></name></expr>)<pos:position pos:line="52" pos:column="37"/></condition><then pos:line="52" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="17">ch<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <name pos:line="53" pos:column="22">NEGATE_CLASS<pos:position pos:line="53" pos:column="34"/></name></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt></block></then></if>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
	    <comment type="block" pos:line="55" pos:column="13">/* Assign literal TRUE/FALSE because of "matched" comparison. */</comment>
	    <expr_stmt><expr><name pos:line="56" pos:column="13">special<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="56" pos:column="23">ch<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">==<pos:position pos:line="56" pos:column="28"/></operator> <name pos:line="56" pos:column="29">NEGATE_CLASS<pos:position pos:line="56" pos:column="41"/></name></expr>?<pos:position pos:line="56" pos:column="42"/></condition><then pos:line="56" pos:column="42"> <expr><name pos:line="56" pos:column="43">TRUE<pos:position pos:line="56" pos:column="47"/></name></expr> <pos:position pos:line="56" pos:column="48"/></then><else pos:line="56" pos:column="48">: <expr><name pos:line="56" pos:column="50">FALSE<pos:position pos:line="56" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="56" pos:column="56"/></expr_stmt>
	    <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">special<pos:position pos:line="57" pos:column="24"/></name></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25"> <block pos:line="57" pos:column="26">{
		<comment type="block" pos:line="58" pos:column="17">/* Inverted character class. */</comment>
		<expr_stmt><expr><name pos:line="59" pos:column="17">ch<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <operator pos:line="59" pos:column="22">*<pos:position pos:line="59" pos:column="23"/></operator><operator pos:line="59" pos:column="23">++<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">p<pos:position pos:line="59" pos:column="26"/></name></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
	    }<pos:position pos:line="60" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name pos:line="61" pos:column="13">prev<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">=<pos:position pos:line="61" pos:column="19"/></operator> <literal type="number" pos:line="61" pos:column="20">0<pos:position pos:line="61" pos:column="21"/></literal></expr>;<pos:position pos:line="61" pos:column="22"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="62" pos:column="13">matched<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <name pos:line="62" pos:column="23">FALSE<pos:position pos:line="62" pos:column="28"/></name></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
	    <do pos:line="63" pos:column="13">do <block pos:line="63" pos:column="16">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><operator pos:line="64" pos:column="21">!<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="22">ch<pos:position pos:line="64" pos:column="24"/></name></expr>)<pos:position pos:line="64" pos:column="25"/></condition><then pos:line="64" pos:column="25">
		    <block type="pseudo"><return pos:line="65" pos:column="21">return <expr><name pos:line="65" pos:column="28">ABORT_ALL<pos:position pos:line="65" pos:column="37"/></name></expr>;<pos:position pos:line="65" pos:column="38"/></return></block></then></if>
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name pos:line="66" pos:column="21">ch<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">==<pos:position pos:line="66" pos:column="26"/></operator> <literal type="char" pos:line="66" pos:column="27">'\\'<pos:position pos:line="66" pos:column="31"/></literal></expr>)<pos:position pos:line="66" pos:column="32"/></condition><then pos:line="66" pos:column="32"> <block pos:line="66" pos:column="33">{
		    <expr_stmt><expr><name pos:line="67" pos:column="21">ch<pos:position pos:line="67" pos:column="23"/></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <operator pos:line="67" pos:column="26">*<pos:position pos:line="67" pos:column="27"/></operator><operator pos:line="67" pos:column="27">++<pos:position pos:line="67" pos:column="29"/></operator><name pos:line="67" pos:column="29">p<pos:position pos:line="67" pos:column="30"/></name></expr>;<pos:position pos:line="67" pos:column="31"/></expr_stmt>
		    <if pos:line="68" pos:column="21">if <condition pos:line="68" pos:column="24">(<expr><operator pos:line="68" pos:column="25">!<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">ch<pos:position pos:line="68" pos:column="28"/></name></expr>)<pos:position pos:line="68" pos:column="29"/></condition><then pos:line="68" pos:column="29">
			<block type="pseudo"><return pos:line="69" pos:column="25">return <expr><name pos:line="69" pos:column="32">ABORT_ALL<pos:position pos:line="69" pos:column="41"/></name></expr>;<pos:position pos:line="69" pos:column="42"/></return></block></then></if>
		    <if pos:line="70" pos:column="21">if <condition pos:line="70" pos:column="24">(<expr><operator pos:line="70" pos:column="25">*<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="26">text<pos:position pos:line="70" pos:column="30"/></name> <operator pos:line="70" pos:column="31">==<pos:position pos:line="70" pos:column="33"/></operator> <name pos:line="70" pos:column="34">ch<pos:position pos:line="70" pos:column="36"/></name></expr>)<pos:position pos:line="70" pos:column="37"/></condition><then pos:line="70" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="25">matched<pos:position pos:line="71" pos:column="32"/></name> <operator pos:line="71" pos:column="33">=<pos:position pos:line="71" pos:column="34"/></operator> <name pos:line="71" pos:column="35">TRUE<pos:position pos:line="71" pos:column="39"/></name></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt></block></then></if>
		}<pos:position pos:line="72" pos:column="18"/></block></then>
		<elseif pos:line="73" pos:column="17">else <if pos:line="73" pos:column="22">if <condition pos:line="73" pos:column="25">(<expr><name pos:line="73" pos:column="26">ch<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">==<pos:position pos:line="73" pos:column="31"/></operator> <literal type="char" pos:line="73" pos:column="32">'-'<pos:position pos:line="73" pos:column="35"/></literal> <operator pos:line="73" pos:column="36">&amp;&amp;<pos:position pos:line="73" pos:column="46"/></operator> <name pos:line="73" pos:column="39">prev<pos:position pos:line="73" pos:column="43"/></name> <operator pos:line="73" pos:column="44">&amp;&amp;<pos:position pos:line="73" pos:column="54"/></operator> <name><name pos:line="73" pos:column="47">p<pos:position pos:line="73" pos:column="48"/></name><index pos:line="73" pos:column="48">[<expr><literal type="number" pos:line="73" pos:column="49">1<pos:position pos:line="73" pos:column="50"/></literal></expr>]<pos:position pos:line="73" pos:column="51"/></index></name> <operator pos:line="73" pos:column="52">&amp;&amp;<pos:position pos:line="73" pos:column="62"/></operator> <name><name pos:line="73" pos:column="55">p<pos:position pos:line="73" pos:column="56"/></name><index pos:line="73" pos:column="56">[<expr><literal type="number" pos:line="73" pos:column="57">1<pos:position pos:line="73" pos:column="58"/></literal></expr>]<pos:position pos:line="73" pos:column="59"/></index></name> <operator pos:line="73" pos:column="60">!=<pos:position pos:line="73" pos:column="62"/></operator> <literal type="char" pos:line="73" pos:column="63">']'<pos:position pos:line="73" pos:column="66"/></literal></expr>)<pos:position pos:line="73" pos:column="67"/></condition><then pos:line="73" pos:column="67"> <block pos:line="73" pos:column="68">{
		    <expr_stmt><expr><name pos:line="74" pos:column="21">ch<pos:position pos:line="74" pos:column="23"/></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <operator pos:line="74" pos:column="26">*<pos:position pos:line="74" pos:column="27"/></operator><operator pos:line="74" pos:column="27">++<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="29">p<pos:position pos:line="74" pos:column="30"/></name></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
		    <if pos:line="75" pos:column="21">if <condition pos:line="75" pos:column="24">(<expr><name pos:line="75" pos:column="25">ch<pos:position pos:line="75" pos:column="27"/></name> <operator pos:line="75" pos:column="28">==<pos:position pos:line="75" pos:column="30"/></operator> <literal type="char" pos:line="75" pos:column="31">'\\'<pos:position pos:line="75" pos:column="35"/></literal></expr>)<pos:position pos:line="75" pos:column="36"/></condition><then pos:line="75" pos:column="36"> <block pos:line="75" pos:column="37">{
			<expr_stmt><expr><name pos:line="76" pos:column="25">ch<pos:position pos:line="76" pos:column="27"/></name> <operator pos:line="76" pos:column="28">=<pos:position pos:line="76" pos:column="29"/></operator> <operator pos:line="76" pos:column="30">*<pos:position pos:line="76" pos:column="31"/></operator><operator pos:line="76" pos:column="31">++<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="33">p<pos:position pos:line="76" pos:column="34"/></name></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><operator pos:line="77" pos:column="29">!<pos:position pos:line="77" pos:column="30"/></operator><name pos:line="77" pos:column="30">ch<pos:position pos:line="77" pos:column="32"/></name></expr>)<pos:position pos:line="77" pos:column="33"/></condition><then pos:line="77" pos:column="33">
			    <block type="pseudo"><return pos:line="78" pos:column="29">return <expr><name pos:line="78" pos:column="36">ABORT_ALL<pos:position pos:line="78" pos:column="45"/></name></expr>;<pos:position pos:line="78" pos:column="46"/></return></block></then></if>
		    }<pos:position pos:line="79" pos:column="22"/></block></then></if>
		    <if pos:line="80" pos:column="21">if <condition pos:line="80" pos:column="24">(<expr><operator pos:line="80" pos:column="25">*<pos:position pos:line="80" pos:column="26"/></operator><name pos:line="80" pos:column="26">text<pos:position pos:line="80" pos:column="30"/></name> <operator pos:line="80" pos:column="31">&lt;=<pos:position pos:line="80" pos:column="36"/></operator> <name pos:line="80" pos:column="34">ch<pos:position pos:line="80" pos:column="36"/></name> <operator pos:line="80" pos:column="37">&amp;&amp;<pos:position pos:line="80" pos:column="47"/></operator> <operator pos:line="80" pos:column="40">*<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="41">text<pos:position pos:line="80" pos:column="45"/></name> <operator pos:line="80" pos:column="46">&gt;=<pos:position pos:line="80" pos:column="51"/></operator> <name pos:line="80" pos:column="49">prev<pos:position pos:line="80" pos:column="53"/></name></expr>)<pos:position pos:line="80" pos:column="54"/></condition><then pos:line="80" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="25">matched<pos:position pos:line="81" pos:column="32"/></name> <operator pos:line="81" pos:column="33">=<pos:position pos:line="81" pos:column="34"/></operator> <name pos:line="81" pos:column="35">TRUE<pos:position pos:line="81" pos:column="39"/></name></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt></block></then></if>
		    <expr_stmt><expr><name pos:line="82" pos:column="21">ch<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">=<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="26">0<pos:position pos:line="82" pos:column="27"/></literal></expr>;<pos:position pos:line="82" pos:column="28"/></expr_stmt> <comment type="block" pos:line="82" pos:column="29">/* This makes "prev" get set to 0. */</comment>
		}<pos:position pos:line="83" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="84" pos:column="17">else <if pos:line="84" pos:column="22">if <condition pos:line="84" pos:column="25">(<expr><name pos:line="84" pos:column="26">ch<pos:position pos:line="84" pos:column="28"/></name> <operator pos:line="84" pos:column="29">==<pos:position pos:line="84" pos:column="31"/></operator> <literal type="char" pos:line="84" pos:column="32">'['<pos:position pos:line="84" pos:column="35"/></literal> <operator pos:line="84" pos:column="36">&amp;&amp;<pos:position pos:line="84" pos:column="46"/></operator> <name><name pos:line="84" pos:column="39">p<pos:position pos:line="84" pos:column="40"/></name><index pos:line="84" pos:column="40">[<expr><literal type="number" pos:line="84" pos:column="41">1<pos:position pos:line="84" pos:column="42"/></literal></expr>]<pos:position pos:line="84" pos:column="43"/></index></name> <operator pos:line="84" pos:column="44">==<pos:position pos:line="84" pos:column="46"/></operator> <literal type="char" pos:line="84" pos:column="47">':'<pos:position pos:line="84" pos:column="50"/></literal></expr>)<pos:position pos:line="84" pos:column="51"/></condition><then pos:line="84" pos:column="51"> <block pos:line="84" pos:column="52">{
		    <decl_stmt><decl><type><specifier pos:line="85" pos:column="21">const<pos:position pos:line="85" pos:column="26"/></specifier> <name pos:line="85" pos:column="27">unsigned<pos:position pos:line="85" pos:column="35"/></name> <name pos:line="85" pos:column="36">char<pos:position pos:line="85" pos:column="40"/></name> <modifier pos:line="85" pos:column="41">*<pos:position pos:line="85" pos:column="42"/></modifier></type><name pos:line="85" pos:column="42">s<pos:position pos:line="85" pos:column="43"/></name> <init pos:line="85" pos:column="44">= <expr><name pos:line="85" pos:column="46">p<pos:position pos:line="85" pos:column="47"/></name> <operator pos:line="85" pos:column="48">+=<pos:position pos:line="85" pos:column="50"/></operator> <literal type="number" pos:line="85" pos:column="51">2<pos:position pos:line="85" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="85" pos:column="53"/></decl_stmt>
		    <decl_stmt><decl><type><name pos:line="86" pos:column="21">int<pos:position pos:line="86" pos:column="24"/></name></type> <name pos:line="86" pos:column="25">i<pos:position pos:line="86" pos:column="26"/></name></decl>;<pos:position pos:line="86" pos:column="27"/></decl_stmt>
		    <while pos:line="87" pos:column="21">while <condition pos:line="87" pos:column="27">(<expr><operator pos:line="87" pos:column="28">(<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="29">ch<pos:position pos:line="87" pos:column="31"/></name> <operator pos:line="87" pos:column="32">=<pos:position pos:line="87" pos:column="33"/></operator> <operator pos:line="87" pos:column="34">*<pos:position pos:line="87" pos:column="35"/></operator><name pos:line="87" pos:column="35">p<pos:position pos:line="87" pos:column="36"/></name><operator pos:line="87" pos:column="36">)<pos:position pos:line="87" pos:column="37"/></operator> <operator pos:line="87" pos:column="38">&amp;&amp;<pos:position pos:line="87" pos:column="48"/></operator> <name pos:line="87" pos:column="41">ch<pos:position pos:line="87" pos:column="43"/></name> <operator pos:line="87" pos:column="44">!=<pos:position pos:line="87" pos:column="46"/></operator> <literal type="char" pos:line="87" pos:column="47">']'<pos:position pos:line="87" pos:column="50"/></literal></expr>)<pos:position pos:line="87" pos:column="51"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="52">p<pos:position pos:line="87" pos:column="53"/></name><operator pos:line="87" pos:column="53">++<pos:position pos:line="87" pos:column="55"/></operator></expr>;<pos:position pos:line="87" pos:column="56"/></expr_stmt></block></while>
		    <if pos:line="88" pos:column="21">if <condition pos:line="88" pos:column="24">(<expr><operator pos:line="88" pos:column="25">!<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="26">ch<pos:position pos:line="88" pos:column="28"/></name></expr>)<pos:position pos:line="88" pos:column="29"/></condition><then pos:line="88" pos:column="29">
			<block type="pseudo"><return pos:line="89" pos:column="25">return <expr><name pos:line="89" pos:column="32">ABORT_ALL<pos:position pos:line="89" pos:column="41"/></name></expr>;<pos:position pos:line="89" pos:column="42"/></return></block></then></if>
		    <expr_stmt><expr><name pos:line="90" pos:column="21">i<pos:position pos:line="90" pos:column="22"/></name> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <name pos:line="90" pos:column="25">p<pos:position pos:line="90" pos:column="26"/></name> <operator pos:line="90" pos:column="27">-<pos:position pos:line="90" pos:column="28"/></operator> <name pos:line="90" pos:column="29">s<pos:position pos:line="90" pos:column="30"/></name> <operator pos:line="90" pos:column="31">-<pos:position pos:line="90" pos:column="32"/></operator> <literal type="number" pos:line="90" pos:column="33">1<pos:position pos:line="90" pos:column="34"/></literal></expr>;<pos:position pos:line="90" pos:column="35"/></expr_stmt>
		    <if pos:line="91" pos:column="21">if <condition pos:line="91" pos:column="24">(<expr><name pos:line="91" pos:column="25">i<pos:position pos:line="91" pos:column="26"/></name> <operator pos:line="91" pos:column="27">&lt;<pos:position pos:line="91" pos:column="31"/></operator> <literal type="number" pos:line="91" pos:column="29">0<pos:position pos:line="91" pos:column="30"/></literal> <operator pos:line="91" pos:column="31">||<pos:position pos:line="91" pos:column="33"/></operator> <name><name pos:line="91" pos:column="34">p<pos:position pos:line="91" pos:column="35"/></name><index pos:line="91" pos:column="35">[<expr><operator pos:line="91" pos:column="36">-<pos:position pos:line="91" pos:column="37"/></operator><literal type="number" pos:line="91" pos:column="37">1<pos:position pos:line="91" pos:column="38"/></literal></expr>]<pos:position pos:line="91" pos:column="39"/></index></name> <operator pos:line="91" pos:column="40">!=<pos:position pos:line="91" pos:column="42"/></operator> <literal type="char" pos:line="91" pos:column="43">':'<pos:position pos:line="91" pos:column="46"/></literal></expr>)<pos:position pos:line="91" pos:column="47"/></condition><then pos:line="91" pos:column="47"> <block pos:line="91" pos:column="48">{
			<comment type="block" pos:line="92" pos:column="25">/* Didn't find ":]", so treat like a normal set. */</comment>
			<expr_stmt><expr><name pos:line="93" pos:column="25">p<pos:position pos:line="93" pos:column="26"/></name> <operator pos:line="93" pos:column="27">=<pos:position pos:line="93" pos:column="28"/></operator> <name pos:line="93" pos:column="29">s<pos:position pos:line="93" pos:column="30"/></name> <operator pos:line="93" pos:column="31">-<pos:position pos:line="93" pos:column="32"/></operator> <literal type="number" pos:line="93" pos:column="33">2<pos:position pos:line="93" pos:column="34"/></literal></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="94" pos:column="25">ch<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">=<pos:position pos:line="94" pos:column="29"/></operator> <literal type="char" pos:line="94" pos:column="30">'['<pos:position pos:line="94" pos:column="33"/></literal></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><operator pos:line="95" pos:column="29">*<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="30">text<pos:position pos:line="95" pos:column="34"/></name> <operator pos:line="95" pos:column="35">==<pos:position pos:line="95" pos:column="37"/></operator> <name pos:line="95" pos:column="38">ch<pos:position pos:line="95" pos:column="40"/></name></expr>)<pos:position pos:line="95" pos:column="41"/></condition><then pos:line="95" pos:column="41">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="29">matched<pos:position pos:line="96" pos:column="36"/></name> <operator pos:line="96" pos:column="37">=<pos:position pos:line="96" pos:column="38"/></operator> <name pos:line="96" pos:column="39">TRUE<pos:position pos:line="96" pos:column="43"/></name></expr>;<pos:position pos:line="96" pos:column="44"/></expr_stmt></block></then></if>
			<continue pos:line="97" pos:column="25">continue;<pos:position pos:line="97" pos:column="34"/></continue>
		    }<pos:position pos:line="98" pos:column="22"/></block></then></if>
		    <if pos:line="99" pos:column="21">if <condition pos:line="99" pos:column="24">(<expr><call><name pos:line="99" pos:column="25">CC_EQ<pos:position pos:line="99" pos:column="30"/></name><argument_list pos:line="99" pos:column="30">(<argument><expr><name pos:line="99" pos:column="31">s<pos:position pos:line="99" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="99" pos:column="33">i<pos:position pos:line="99" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="36">"alnum"<pos:position pos:line="99" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="45"/></condition><then pos:line="99" pos:column="45"> <block pos:line="99" pos:column="46">{
			<if pos:line="100" pos:column="25">if <condition pos:line="100" pos:column="28">(<expr><call><name pos:line="100" pos:column="29">ISALNUM<pos:position pos:line="100" pos:column="36"/></name><argument_list pos:line="100" pos:column="36">(<argument><expr><operator pos:line="100" pos:column="37">*<pos:position pos:line="100" pos:column="38"/></operator><name pos:line="100" pos:column="38">text<pos:position pos:line="100" pos:column="42"/></name></expr></argument>)<pos:position pos:line="100" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="44"/></condition><then pos:line="100" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="29">matched<pos:position pos:line="101" pos:column="36"/></name> <operator pos:line="101" pos:column="37">=<pos:position pos:line="101" pos:column="38"/></operator> <name pos:line="101" pos:column="39">TRUE<pos:position pos:line="101" pos:column="43"/></name></expr>;<pos:position pos:line="101" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="102" pos:column="22"/></block></then>
		    <elseif pos:line="103" pos:column="21">else <if pos:line="103" pos:column="26">if <condition pos:line="103" pos:column="29">(<expr><call><name pos:line="103" pos:column="30">CC_EQ<pos:position pos:line="103" pos:column="35"/></name><argument_list pos:line="103" pos:column="35">(<argument><expr><name pos:line="103" pos:column="36">s<pos:position pos:line="103" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="103" pos:column="38">i<pos:position pos:line="103" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="41">"alpha"<pos:position pos:line="103" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="50"/></condition><then pos:line="103" pos:column="50"> <block pos:line="103" pos:column="51">{
			<if pos:line="104" pos:column="25">if <condition pos:line="104" pos:column="28">(<expr><call><name pos:line="104" pos:column="29">ISALPHA<pos:position pos:line="104" pos:column="36"/></name><argument_list pos:line="104" pos:column="36">(<argument><expr><operator pos:line="104" pos:column="37">*<pos:position pos:line="104" pos:column="38"/></operator><name pos:line="104" pos:column="38">text<pos:position pos:line="104" pos:column="42"/></name></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="104" pos:column="44"/></condition><then pos:line="104" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="29">matched<pos:position pos:line="105" pos:column="36"/></name> <operator pos:line="105" pos:column="37">=<pos:position pos:line="105" pos:column="38"/></operator> <name pos:line="105" pos:column="39">TRUE<pos:position pos:line="105" pos:column="43"/></name></expr>;<pos:position pos:line="105" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="106" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="107" pos:column="21">else <if pos:line="107" pos:column="26">if <condition pos:line="107" pos:column="29">(<expr><call><name pos:line="107" pos:column="30">CC_EQ<pos:position pos:line="107" pos:column="35"/></name><argument_list pos:line="107" pos:column="35">(<argument><expr><name pos:line="107" pos:column="36">s<pos:position pos:line="107" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="107" pos:column="38">i<pos:position pos:line="107" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="41">"blank"<pos:position pos:line="107" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="50"/></condition><then pos:line="107" pos:column="50"> <block pos:line="107" pos:column="51">{
			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><call><name pos:line="108" pos:column="29">ISBLANK<pos:position pos:line="108" pos:column="36"/></name><argument_list pos:line="108" pos:column="36">(<argument><expr><operator pos:line="108" pos:column="37">*<pos:position pos:line="108" pos:column="38"/></operator><name pos:line="108" pos:column="38">text<pos:position pos:line="108" pos:column="42"/></name></expr></argument>)<pos:position pos:line="108" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="108" pos:column="44"/></condition><then pos:line="108" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="109" pos:column="29">matched<pos:position pos:line="109" pos:column="36"/></name> <operator pos:line="109" pos:column="37">=<pos:position pos:line="109" pos:column="38"/></operator> <name pos:line="109" pos:column="39">TRUE<pos:position pos:line="109" pos:column="43"/></name></expr>;<pos:position pos:line="109" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="110" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="111" pos:column="21">else <if pos:line="111" pos:column="26">if <condition pos:line="111" pos:column="29">(<expr><call><name pos:line="111" pos:column="30">CC_EQ<pos:position pos:line="111" pos:column="35"/></name><argument_list pos:line="111" pos:column="35">(<argument><expr><name pos:line="111" pos:column="36">s<pos:position pos:line="111" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="111" pos:column="38">i<pos:position pos:line="111" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="41">"cntrl"<pos:position pos:line="111" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="50"/></condition><then pos:line="111" pos:column="50"> <block pos:line="111" pos:column="51">{
			<if pos:line="112" pos:column="25">if <condition pos:line="112" pos:column="28">(<expr><call><name pos:line="112" pos:column="29">ISCNTRL<pos:position pos:line="112" pos:column="36"/></name><argument_list pos:line="112" pos:column="36">(<argument><expr><operator pos:line="112" pos:column="37">*<pos:position pos:line="112" pos:column="38"/></operator><name pos:line="112" pos:column="38">text<pos:position pos:line="112" pos:column="42"/></name></expr></argument>)<pos:position pos:line="112" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="44"/></condition><then pos:line="112" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="113" pos:column="29">matched<pos:position pos:line="113" pos:column="36"/></name> <operator pos:line="113" pos:column="37">=<pos:position pos:line="113" pos:column="38"/></operator> <name pos:line="113" pos:column="39">TRUE<pos:position pos:line="113" pos:column="43"/></name></expr>;<pos:position pos:line="113" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="114" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="115" pos:column="21">else <if pos:line="115" pos:column="26">if <condition pos:line="115" pos:column="29">(<expr><call><name pos:line="115" pos:column="30">CC_EQ<pos:position pos:line="115" pos:column="35"/></name><argument_list pos:line="115" pos:column="35">(<argument><expr><name pos:line="115" pos:column="36">s<pos:position pos:line="115" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="115" pos:column="38">i<pos:position pos:line="115" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="41">"digit"<pos:position pos:line="115" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="50"/></condition><then pos:line="115" pos:column="50"> <block pos:line="115" pos:column="51">{
			<if pos:line="116" pos:column="25">if <condition pos:line="116" pos:column="28">(<expr><call><name pos:line="116" pos:column="29">ISDIGIT<pos:position pos:line="116" pos:column="36"/></name><argument_list pos:line="116" pos:column="36">(<argument><expr><operator pos:line="116" pos:column="37">*<pos:position pos:line="116" pos:column="38"/></operator><name pos:line="116" pos:column="38">text<pos:position pos:line="116" pos:column="42"/></name></expr></argument>)<pos:position pos:line="116" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="44"/></condition><then pos:line="116" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="29">matched<pos:position pos:line="117" pos:column="36"/></name> <operator pos:line="117" pos:column="37">=<pos:position pos:line="117" pos:column="38"/></operator> <name pos:line="117" pos:column="39">TRUE<pos:position pos:line="117" pos:column="43"/></name></expr>;<pos:position pos:line="117" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="118" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="119" pos:column="21">else <if pos:line="119" pos:column="26">if <condition pos:line="119" pos:column="29">(<expr><call><name pos:line="119" pos:column="30">CC_EQ<pos:position pos:line="119" pos:column="35"/></name><argument_list pos:line="119" pos:column="35">(<argument><expr><name pos:line="119" pos:column="36">s<pos:position pos:line="119" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="119" pos:column="38">i<pos:position pos:line="119" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="41">"graph"<pos:position pos:line="119" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="50"/></condition><then pos:line="119" pos:column="50"> <block pos:line="119" pos:column="51">{
			<if pos:line="120" pos:column="25">if <condition pos:line="120" pos:column="28">(<expr><call><name pos:line="120" pos:column="29">ISGRAPH<pos:position pos:line="120" pos:column="36"/></name><argument_list pos:line="120" pos:column="36">(<argument><expr><operator pos:line="120" pos:column="37">*<pos:position pos:line="120" pos:column="38"/></operator><name pos:line="120" pos:column="38">text<pos:position pos:line="120" pos:column="42"/></name></expr></argument>)<pos:position pos:line="120" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="44"/></condition><then pos:line="120" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="29">matched<pos:position pos:line="121" pos:column="36"/></name> <operator pos:line="121" pos:column="37">=<pos:position pos:line="121" pos:column="38"/></operator> <name pos:line="121" pos:column="39">TRUE<pos:position pos:line="121" pos:column="43"/></name></expr>;<pos:position pos:line="121" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="122" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="123" pos:column="21">else <if pos:line="123" pos:column="26">if <condition pos:line="123" pos:column="29">(<expr><call><name pos:line="123" pos:column="30">CC_EQ<pos:position pos:line="123" pos:column="35"/></name><argument_list pos:line="123" pos:column="35">(<argument><expr><name pos:line="123" pos:column="36">s<pos:position pos:line="123" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="123" pos:column="38">i<pos:position pos:line="123" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="41">"lower"<pos:position pos:line="123" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="50"/></condition><then pos:line="123" pos:column="50"> <block pos:line="123" pos:column="51">{
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><call><name pos:line="124" pos:column="29">ISLOWER<pos:position pos:line="124" pos:column="36"/></name><argument_list pos:line="124" pos:column="36">(<argument><expr><operator pos:line="124" pos:column="37">*<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="38">text<pos:position pos:line="124" pos:column="42"/></name></expr></argument>)<pos:position pos:line="124" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="44"/></condition><then pos:line="124" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="29">matched<pos:position pos:line="125" pos:column="36"/></name> <operator pos:line="125" pos:column="37">=<pos:position pos:line="125" pos:column="38"/></operator> <name pos:line="125" pos:column="39">TRUE<pos:position pos:line="125" pos:column="43"/></name></expr>;<pos:position pos:line="125" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="126" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="127" pos:column="21">else <if pos:line="127" pos:column="26">if <condition pos:line="127" pos:column="29">(<expr><call><name pos:line="127" pos:column="30">CC_EQ<pos:position pos:line="127" pos:column="35"/></name><argument_list pos:line="127" pos:column="35">(<argument><expr><name pos:line="127" pos:column="36">s<pos:position pos:line="127" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="127" pos:column="38">i<pos:position pos:line="127" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="41">"print"<pos:position pos:line="127" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="50"/></condition><then pos:line="127" pos:column="50"> <block pos:line="127" pos:column="51">{
			<if pos:line="128" pos:column="25">if <condition pos:line="128" pos:column="28">(<expr><call><name pos:line="128" pos:column="29">ISPRINT<pos:position pos:line="128" pos:column="36"/></name><argument_list pos:line="128" pos:column="36">(<argument><expr><operator pos:line="128" pos:column="37">*<pos:position pos:line="128" pos:column="38"/></operator><name pos:line="128" pos:column="38">text<pos:position pos:line="128" pos:column="42"/></name></expr></argument>)<pos:position pos:line="128" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="44"/></condition><then pos:line="128" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="129" pos:column="29">matched<pos:position pos:line="129" pos:column="36"/></name> <operator pos:line="129" pos:column="37">=<pos:position pos:line="129" pos:column="38"/></operator> <name pos:line="129" pos:column="39">TRUE<pos:position pos:line="129" pos:column="43"/></name></expr>;<pos:position pos:line="129" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="130" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="131" pos:column="21">else <if pos:line="131" pos:column="26">if <condition pos:line="131" pos:column="29">(<expr><call><name pos:line="131" pos:column="30">CC_EQ<pos:position pos:line="131" pos:column="35"/></name><argument_list pos:line="131" pos:column="35">(<argument><expr><name pos:line="131" pos:column="36">s<pos:position pos:line="131" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="131" pos:column="38">i<pos:position pos:line="131" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="41">"punct"<pos:position pos:line="131" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="50"/></condition><then pos:line="131" pos:column="50"> <block pos:line="131" pos:column="51">{
			<if pos:line="132" pos:column="25">if <condition pos:line="132" pos:column="28">(<expr><call><name pos:line="132" pos:column="29">ISPUNCT<pos:position pos:line="132" pos:column="36"/></name><argument_list pos:line="132" pos:column="36">(<argument><expr><operator pos:line="132" pos:column="37">*<pos:position pos:line="132" pos:column="38"/></operator><name pos:line="132" pos:column="38">text<pos:position pos:line="132" pos:column="42"/></name></expr></argument>)<pos:position pos:line="132" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="44"/></condition><then pos:line="132" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="29">matched<pos:position pos:line="133" pos:column="36"/></name> <operator pos:line="133" pos:column="37">=<pos:position pos:line="133" pos:column="38"/></operator> <name pos:line="133" pos:column="39">TRUE<pos:position pos:line="133" pos:column="43"/></name></expr>;<pos:position pos:line="133" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="134" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="135" pos:column="21">else <if pos:line="135" pos:column="26">if <condition pos:line="135" pos:column="29">(<expr><call><name pos:line="135" pos:column="30">CC_EQ<pos:position pos:line="135" pos:column="35"/></name><argument_list pos:line="135" pos:column="35">(<argument><expr><name pos:line="135" pos:column="36">s<pos:position pos:line="135" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="135" pos:column="38">i<pos:position pos:line="135" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="41">"space"<pos:position pos:line="135" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="50"/></condition><then pos:line="135" pos:column="50"> <block pos:line="135" pos:column="51">{
			<if pos:line="136" pos:column="25">if <condition pos:line="136" pos:column="28">(<expr><call><name pos:line="136" pos:column="29">ISSPACE<pos:position pos:line="136" pos:column="36"/></name><argument_list pos:line="136" pos:column="36">(<argument><expr><operator pos:line="136" pos:column="37">*<pos:position pos:line="136" pos:column="38"/></operator><name pos:line="136" pos:column="38">text<pos:position pos:line="136" pos:column="42"/></name></expr></argument>)<pos:position pos:line="136" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="44"/></condition><then pos:line="136" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="29">matched<pos:position pos:line="137" pos:column="36"/></name> <operator pos:line="137" pos:column="37">=<pos:position pos:line="137" pos:column="38"/></operator> <name pos:line="137" pos:column="39">TRUE<pos:position pos:line="137" pos:column="43"/></name></expr>;<pos:position pos:line="137" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="138" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="139" pos:column="21">else <if pos:line="139" pos:column="26">if <condition pos:line="139" pos:column="29">(<expr><call><name pos:line="139" pos:column="30">CC_EQ<pos:position pos:line="139" pos:column="35"/></name><argument_list pos:line="139" pos:column="35">(<argument><expr><name pos:line="139" pos:column="36">s<pos:position pos:line="139" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="139" pos:column="38">i<pos:position pos:line="139" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="41">"upper"<pos:position pos:line="139" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="50"/></condition><then pos:line="139" pos:column="50"> <block pos:line="139" pos:column="51">{
			<if pos:line="140" pos:column="25">if <condition pos:line="140" pos:column="28">(<expr><call><name pos:line="140" pos:column="29">ISUPPER<pos:position pos:line="140" pos:column="36"/></name><argument_list pos:line="140" pos:column="36">(<argument><expr><operator pos:line="140" pos:column="37">*<pos:position pos:line="140" pos:column="38"/></operator><name pos:line="140" pos:column="38">text<pos:position pos:line="140" pos:column="42"/></name></expr></argument>)<pos:position pos:line="140" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="44"/></condition><then pos:line="140" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="141" pos:column="29">matched<pos:position pos:line="141" pos:column="36"/></name> <operator pos:line="141" pos:column="37">=<pos:position pos:line="141" pos:column="38"/></operator> <name pos:line="141" pos:column="39">TRUE<pos:position pos:line="141" pos:column="43"/></name></expr>;<pos:position pos:line="141" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="142" pos:column="22"/></block></then></if></elseif>
		    <elseif pos:line="143" pos:column="21">else <if pos:line="143" pos:column="26">if <condition pos:line="143" pos:column="29">(<expr><call><name pos:line="143" pos:column="30">CC_EQ<pos:position pos:line="143" pos:column="35"/></name><argument_list pos:line="143" pos:column="35">(<argument><expr><name pos:line="143" pos:column="36">s<pos:position pos:line="143" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="143" pos:column="38">i<pos:position pos:line="143" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="41">"xdigit"<pos:position pos:line="143" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="51"/></condition><then pos:line="143" pos:column="51"> <block pos:line="143" pos:column="52">{
			<if pos:line="144" pos:column="25">if <condition pos:line="144" pos:column="28">(<expr><call><name pos:line="144" pos:column="29">ISXDIGIT<pos:position pos:line="144" pos:column="37"/></name><argument_list pos:line="144" pos:column="37">(<argument><expr><operator pos:line="144" pos:column="38">*<pos:position pos:line="144" pos:column="39"/></operator><name pos:line="144" pos:column="39">text<pos:position pos:line="144" pos:column="43"/></name></expr></argument>)<pos:position pos:line="144" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="144" pos:column="45"/></condition><then pos:line="144" pos:column="45">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="29">matched<pos:position pos:line="145" pos:column="36"/></name> <operator pos:line="145" pos:column="37">=<pos:position pos:line="145" pos:column="38"/></operator> <name pos:line="145" pos:column="39">TRUE<pos:position pos:line="145" pos:column="43"/></name></expr>;<pos:position pos:line="145" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="146" pos:column="22"/></block></then></if></elseif>
		    <else pos:line="147" pos:column="21">else <comment type="block" pos:line="147" pos:column="26">/* malformed [:class:] string */</comment>
			<block type="pseudo"><return pos:line="148" pos:column="25">return <expr><name pos:line="148" pos:column="32">ABORT_ALL<pos:position pos:line="148" pos:column="41"/></name></expr>;<pos:position pos:line="148" pos:column="42"/></return></block></else></if>
		    <expr_stmt><expr><name pos:line="149" pos:column="21">ch<pos:position pos:line="149" pos:column="23"/></name> <operator pos:line="149" pos:column="24">=<pos:position pos:line="149" pos:column="25"/></operator> <literal type="number" pos:line="149" pos:column="26">0<pos:position pos:line="149" pos:column="27"/></literal></expr>;<pos:position pos:line="149" pos:column="28"/></expr_stmt> <comment type="block" pos:line="149" pos:column="29">/* This makes "prev" get set to 0. */</comment>
		}<pos:position pos:line="150" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="151" pos:column="17">else <if pos:line="151" pos:column="22">if <condition pos:line="151" pos:column="25">(<expr><operator pos:line="151" pos:column="26">*<pos:position pos:line="151" pos:column="27"/></operator><name pos:line="151" pos:column="27">text<pos:position pos:line="151" pos:column="31"/></name> <operator pos:line="151" pos:column="32">==<pos:position pos:line="151" pos:column="34"/></operator> <name pos:line="151" pos:column="35">ch<pos:position pos:line="151" pos:column="37"/></name></expr>)<pos:position pos:line="151" pos:column="38"/></condition><then pos:line="151" pos:column="38">
		    <block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="21">matched<pos:position pos:line="152" pos:column="28"/></name> <operator pos:line="152" pos:column="29">=<pos:position pos:line="152" pos:column="30"/></operator> <name pos:line="152" pos:column="31">TRUE<pos:position pos:line="152" pos:column="35"/></name></expr>;<pos:position pos:line="152" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
	    }<pos:position pos:line="153" pos:column="14"/></block> while <condition pos:line="153" pos:column="21">(<expr><name pos:line="153" pos:column="22">prev<pos:position pos:line="153" pos:column="26"/></name> <operator pos:line="153" pos:column="27">=<pos:position pos:line="153" pos:column="28"/></operator> <name pos:line="153" pos:column="29">ch<pos:position pos:line="153" pos:column="31"/></name></expr><operator pos:line="153" pos:column="31">,<pos:position pos:line="153" pos:column="32"/></operator> <expr><operator pos:line="153" pos:column="33">(<pos:position pos:line="153" pos:column="34"/></operator><name pos:line="153" pos:column="34">ch<pos:position pos:line="153" pos:column="36"/></name> <operator pos:line="153" pos:column="37">=<pos:position pos:line="153" pos:column="38"/></operator> <operator pos:line="153" pos:column="39">*<pos:position pos:line="153" pos:column="40"/></operator><operator pos:line="153" pos:column="40">++<pos:position pos:line="153" pos:column="42"/></operator><name pos:line="153" pos:column="42">p<pos:position pos:line="153" pos:column="43"/></name><operator pos:line="153" pos:column="43">)<pos:position pos:line="153" pos:column="44"/></operator> <operator pos:line="153" pos:column="45">!=<pos:position pos:line="153" pos:column="47"/></operator> <literal type="char" pos:line="153" pos:column="48">']'<pos:position pos:line="153" pos:column="51"/></literal></expr>)<pos:position pos:line="153" pos:column="52"/></condition>;<pos:position pos:line="153" pos:column="53"/></do>
	    <if pos:line="154" pos:column="13">if <condition pos:line="154" pos:column="16">(<expr><name pos:line="154" pos:column="17">matched<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">==<pos:position pos:line="154" pos:column="27"/></operator> <name pos:line="154" pos:column="28">special<pos:position pos:line="154" pos:column="35"/></name> <operator pos:line="154" pos:column="36">||<pos:position pos:line="154" pos:column="38"/></operator> <operator pos:line="154" pos:column="39">*<pos:position pos:line="154" pos:column="40"/></operator><name pos:line="154" pos:column="40">text<pos:position pos:line="154" pos:column="44"/></name> <operator pos:line="154" pos:column="45">==<pos:position pos:line="154" pos:column="47"/></operator> <literal type="char" pos:line="154" pos:column="48">'/'<pos:position pos:line="154" pos:column="51"/></literal></expr>)<pos:position pos:line="154" pos:column="52"/></condition><then pos:line="154" pos:column="52">
		<block type="pseudo"><return pos:line="155" pos:column="17">return <expr><name pos:line="155" pos:column="24">FALSE<pos:position pos:line="155" pos:column="29"/></name></expr>;<pos:position pos:line="155" pos:column="30"/></return></block></then></if>
	    <continue pos:line="156" pos:column="13">continue;<pos:position pos:line="156" pos:column="22"/></continue>
	}<pos:position pos:line="157" pos:column="10"/></block></switch>
    }<pos:position pos:line="158" pos:column="6"/></block></for>

    <return pos:line="160" pos:column="5">return <expr><operator pos:line="160" pos:column="12">*<pos:position pos:line="160" pos:column="13"/></operator><name pos:line="160" pos:column="13">text<pos:position pos:line="160" pos:column="17"/></name> <operator pos:line="160" pos:column="18">==<pos:position pos:line="160" pos:column="20"/></operator> <literal type="char" pos:line="160" pos:column="21">'\0'<pos:position pos:line="160" pos:column="25"/></literal></expr>;<pos:position pos:line="160" pos:column="26"/></return>
}<pos:position pos:line="161" pos:column="2"/></block></function></unit>

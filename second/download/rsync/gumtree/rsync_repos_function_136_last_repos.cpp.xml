<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_136_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">raw_read_buf<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">size_t<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">len<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">pos<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name><name pos:line="3" pos:column="22">iobuf<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">.<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">in<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">.<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="31">pos<pos:position pos:line="3" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">data<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">perform_io<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">(<argument><expr><name pos:line="4" pos:column="33">len<pos:position pos:line="4" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="38">PIO_INPUT_AND_CONSUME<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="61"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">iobuf<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">in<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">pos<pos:position pos:line="5" pos:column="25"/></name></name> <operator pos:line="5" pos:column="26">&lt;=<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="29">pos<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">&amp;&amp;<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="36">len<pos:position pos:line="5" pos:column="39"/></name></expr>)<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40"> <block pos:line="5" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">size_t<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">siz<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">len<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">-<pos:position pos:line="6" pos:column="35"/></operator> <name><name pos:line="6" pos:column="36">iobuf<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">.<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">in<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">.<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">pos<pos:position pos:line="6" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="49"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">memcpy<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">buf<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">data<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">siz<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">memcpy<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">buf<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">+<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">siz<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="35">iobuf<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">.<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">in<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">buf<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="49">iobuf<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">.<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="55">in<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">.<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="58">pos<pos:position pos:line="8" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then> <else pos:line="9" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">memcpy<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">data<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">len<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

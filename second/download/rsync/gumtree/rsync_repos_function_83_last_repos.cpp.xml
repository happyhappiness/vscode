<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_83_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">parse_merge_name<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">merge_file<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">unsigned<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">len_ptr<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">unsigned<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">prefix_skip<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">buf<pos:position pos:line="4" pos:column="24"/></name><index pos:line="4" pos:column="24">[<expr><name pos:line="4" pos:column="25">MAXPATHLEN<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">fn<pos:position pos:line="5" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="5" pos:column="19">tmpbuf<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><name pos:line="5" pos:column="26">MAXPATHLEN<pos:position pos:line="5" pos:column="36"/></name></expr>]<pos:position pos:line="5" pos:column="37"/></index></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">fn_len<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">parent_dirscan<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&amp;&amp;<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">merge_file<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <literal type="char" pos:line="8" pos:column="47">'/'<pos:position pos:line="8" pos:column="50"/></literal></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51"> <block pos:line="8" pos:column="52">{
		<comment type="block" pos:line="9" pos:column="17">/* Return the name unchanged it doesn't have any slashes. */</comment>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">len_ptr<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
			<decl_stmt><decl><type><specifier pos:line="11" pos:column="25">const<pos:position pos:line="11" pos:column="30"/></specifier> <name pos:line="11" pos:column="31">char<pos:position pos:line="11" pos:column="35"/></name> <modifier pos:line="11" pos:column="36">*<pos:position pos:line="11" pos:column="37"/></modifier></type><name pos:line="11" pos:column="37">p<pos:position pos:line="11" pos:column="38"/></name> <init pos:line="11" pos:column="39">= <expr><name pos:line="11" pos:column="41">merge_file<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">+<pos:position pos:line="11" pos:column="53"/></operator> <operator pos:line="11" pos:column="54">*<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">len_ptr<pos:position pos:line="11" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="63"/></decl_stmt>
			<while pos:line="12" pos:column="25">while <condition pos:line="12" pos:column="31">(<expr><operator pos:line="12" pos:column="32">--<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">p<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">&gt;<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="38">merge_file<pos:position pos:line="12" pos:column="48"/></name> <operator pos:line="12" pos:column="49">&amp;&amp;<pos:position pos:line="12" pos:column="59"/></operator> <operator pos:line="12" pos:column="52">*<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">p<pos:position pos:line="12" pos:column="54"/></name> <operator pos:line="12" pos:column="55">!=<pos:position pos:line="12" pos:column="57"/></operator> <literal type="char" pos:line="12" pos:column="58">'/'<pos:position pos:line="12" pos:column="61"/></literal></expr>)<pos:position pos:line="12" pos:column="62"/></condition> <block pos:line="12" pos:column="63">{}<pos:position pos:line="12" pos:column="65"/></block></while>
			<if pos:line="13" pos:column="25">if <condition pos:line="13" pos:column="28">(<expr><name pos:line="13" pos:column="29">p<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">==<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">merge_file<pos:position pos:line="13" pos:column="44"/></name></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{
				<expr_stmt><expr><call><name pos:line="14" pos:column="33">strlcpy<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><name pos:line="14" pos:column="41">buf<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">merge_file<pos:position pos:line="14" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="58">*<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="59">len_ptr<pos:position pos:line="14" pos:column="66"/></name> <operator pos:line="14" pos:column="67">+<pos:position pos:line="14" pos:column="68"/></operator> <literal type="number" pos:line="14" pos:column="69">1<pos:position pos:line="14" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
				<return pos:line="15" pos:column="33">return <expr><name pos:line="15" pos:column="40">buf<pos:position pos:line="15" pos:column="43"/></name></expr>;<pos:position pos:line="15" pos:column="44"/></return>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><call><name pos:line="17" pos:column="28">strchr<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">merge_file<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="47">'/'<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call> <operator pos:line="17" pos:column="52">==<pos:position pos:line="17" pos:column="54"/></operator> <name pos:line="17" pos:column="55">NULL<pos:position pos:line="17" pos:column="59"/></name></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">char<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">*<pos:position pos:line="18" pos:column="39"/></operator><operator pos:line="18" pos:column="39">)<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">merge_file<pos:position pos:line="18" pos:column="50"/></name></expr>;<pos:position pos:line="18" pos:column="51"/></return></block></then></if></elseif></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">fn<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <ternary><condition><expr><operator pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">merge_file<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">==<pos:position pos:line="21" pos:column="28"/></operator> <literal type="char" pos:line="21" pos:column="29">'/'<pos:position pos:line="21" pos:column="32"/></literal></expr> ?<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <expr><name pos:line="21" pos:column="35">buf<pos:position pos:line="21" pos:column="38"/></name></expr> <pos:position pos:line="21" pos:column="39"/></then><else pos:line="21" pos:column="39">: <expr><name pos:line="21" pos:column="41">tmpbuf<pos:position pos:line="21" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="48"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">sanitize_paths<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
		<decl_stmt><decl><type><specifier pos:line="23" pos:column="17">const<pos:position pos:line="23" pos:column="22"/></specifier> <name pos:line="23" pos:column="23">char<pos:position pos:line="23" pos:column="27"/></name> <modifier pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></modifier></type><name pos:line="23" pos:column="29">r<pos:position pos:line="23" pos:column="30"/></name> <init pos:line="23" pos:column="31">= <expr><ternary><condition><expr><name pos:line="23" pos:column="33">prefix_skip<pos:position pos:line="23" pos:column="44"/></name></expr> ?<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <expr><literal type="string" pos:line="23" pos:column="47">"/"<pos:position pos:line="23" pos:column="50"/></literal></expr> <pos:position pos:line="23" pos:column="51"/></then><else pos:line="23" pos:column="51">: <expr><name pos:line="23" pos:column="53">NULL<pos:position pos:line="23" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="23" pos:column="58"/></decl_stmt>
		<comment type="block" pos:line="24" pos:column="17">/* null-terminate the name if it isn't already */</comment>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">len_ptr<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">&amp;&amp;<pos:position pos:line="25" pos:column="39"/></operator> <name><name pos:line="25" pos:column="32">merge_file<pos:position pos:line="25" pos:column="42"/></name><index pos:line="25" pos:column="42">[<expr><operator pos:line="25" pos:column="43">*<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">len_ptr<pos:position pos:line="25" pos:column="51"/></name></expr>]<pos:position pos:line="25" pos:column="52"/></index></name></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <block pos:line="25" pos:column="54">{
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">char<pos:position pos:line="26" pos:column="29"/></name> <modifier pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></modifier></type><name pos:line="26" pos:column="31">to<pos:position pos:line="26" pos:column="33"/></name> <init pos:line="26" pos:column="34">= <expr><ternary><condition><expr><name pos:line="26" pos:column="36">fn<pos:position pos:line="26" pos:column="38"/></name> <operator pos:line="26" pos:column="39">==<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="42">buf<pos:position pos:line="26" pos:column="45"/></name></expr> ?<pos:position pos:line="26" pos:column="47"/></condition><then pos:line="26" pos:column="47"> <expr><name pos:line="26" pos:column="48">tmpbuf<pos:position pos:line="26" pos:column="54"/></name></expr> <pos:position pos:line="26" pos:column="55"/></then><else pos:line="26" pos:column="55">: <expr><name pos:line="26" pos:column="57">buf<pos:position pos:line="26" pos:column="60"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="26" pos:column="61"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">strlcpy<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">to<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">merge_file<pos:position pos:line="27" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="49">*<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">len_ptr<pos:position pos:line="27" pos:column="57"/></name> <operator pos:line="27" pos:column="58">+<pos:position pos:line="27" pos:column="59"/></operator> <literal type="number" pos:line="27" pos:column="60">1<pos:position pos:line="27" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">merge_file<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">=<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="38">to<pos:position pos:line="28" pos:column="40"/></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">!<pos:position pos:line="30" pos:column="22"/></operator><call><name pos:line="30" pos:column="22">sanitize_path<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">fn<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">merge_file<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">r<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">dirbuf_depth<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="69">SP_DEFAULT<pos:position pos:line="30" pos:column="79"/></name></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="81"/></condition><then pos:line="30" pos:column="81"> <block pos:line="30" pos:column="82">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">rprintf<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">FERROR<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="41">"merge-file name overflows: %s\n"<pos:position pos:line="31" pos:column="74"/></literal></expr></argument>,
				<argument><expr><name pos:line="32" pos:column="33">merge_file<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
			<return pos:line="33" pos:column="25">return <expr><name pos:line="33" pos:column="32">NULL<pos:position pos:line="33" pos:column="36"/></name></expr>;<pos:position pos:line="33" pos:column="37"/></return>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="35" pos:column="17">fn_len<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <call><name pos:line="35" pos:column="26">strlen<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name pos:line="35" pos:column="33">fn<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then> <else pos:line="36" pos:column="11">else <block pos:line="36" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">strlcpy<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">fn<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="29">merge_file<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="37" pos:column="41">len_ptr<pos:position pos:line="37" pos:column="48"/></name></expr> ?<pos:position pos:line="37" pos:column="50"/></condition><then pos:line="37" pos:column="50"> <expr><operator pos:line="37" pos:column="51">*<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="52">len_ptr<pos:position pos:line="37" pos:column="59"/></name> <operator pos:line="37" pos:column="60">+<pos:position pos:line="37" pos:column="61"/></operator> <literal type="number" pos:line="37" pos:column="62">1<pos:position pos:line="37" pos:column="63"/></literal></expr> <pos:position pos:line="37" pos:column="64"/></then><else pos:line="37" pos:column="64">: <expr><name pos:line="37" pos:column="66">MAXPATHLEN<pos:position pos:line="37" pos:column="76"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="37" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">fn_len<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">clean_fname<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">fn<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">CFN_COLLAPSE_DOT_DOT_DIRS<pos:position pos:line="38" pos:column="67"/></name></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="41" pos:column="9">/* If the name isn't in buf yet, it wasn't absolute. */</comment>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">fn<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">!=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">buf<pos:position pos:line="42" pos:column="22"/></name></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="43" pos:column="17">int<pos:position pos:line="43" pos:column="20"/></name></type> <name pos:line="43" pos:column="21">d_len<pos:position pos:line="43" pos:column="26"/></name> <init pos:line="43" pos:column="27">= <expr><name pos:line="43" pos:column="29">dirbuf_len<pos:position pos:line="43" pos:column="39"/></name> <operator pos:line="43" pos:column="40">-<pos:position pos:line="43" pos:column="41"/></operator> <name pos:line="43" pos:column="42">prefix_skip<pos:position pos:line="43" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="54"/></decl_stmt>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">d_len<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">+<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">fn_len<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">&gt;=<pos:position pos:line="44" pos:column="41"/></operator> <name pos:line="44" pos:column="39">MAXPATHLEN<pos:position pos:line="44" pos:column="49"/></name></expr>)<pos:position pos:line="44" pos:column="50"/></condition><then pos:line="44" pos:column="50"> <block pos:line="44" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">rprintf<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">FERROR<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="41">"merge-file name overflows: %s\n"<pos:position pos:line="45" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="76">fn<pos:position pos:line="45" pos:column="78"/></name></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="80"/></expr_stmt>
			<return pos:line="46" pos:column="25">return <expr><name pos:line="46" pos:column="32">NULL<pos:position pos:line="46" pos:column="36"/></name></expr>;<pos:position pos:line="46" pos:column="37"/></return>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">memcpy<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">buf<pos:position pos:line="48" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="29">dirbuf<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">+<pos:position pos:line="48" pos:column="37"/></operator> <name pos:line="48" pos:column="38">prefix_skip<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">d_len<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">memcpy<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">buf<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">+<pos:position pos:line="49" pos:column="29"/></operator> <name pos:line="49" pos:column="30">d_len<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="37">fn<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="41">fn_len<pos:position pos:line="49" pos:column="47"/></name> <operator pos:line="49" pos:column="48">+<pos:position pos:line="49" pos:column="49"/></operator> <literal type="number" pos:line="49" pos:column="50">1<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="50" pos:column="17">fn_len<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <call><name pos:line="50" pos:column="26">clean_fname<pos:position pos:line="50" pos:column="37"/></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">buf<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">CFN_COLLAPSE_DOT_DOT_DIRS<pos:position pos:line="50" pos:column="68"/></name></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">len_ptr<pos:position pos:line="53" pos:column="20"/></name></expr>)<pos:position pos:line="53" pos:column="21"/></condition><then pos:line="53" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="17">*<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="18">len_ptr<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">fn_len<pos:position pos:line="54" pos:column="34"/></name></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt></block></then></if>
	<return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">buf<pos:position pos:line="55" pos:column="19"/></name></expr>;<pos:position pos:line="55" pos:column="20"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

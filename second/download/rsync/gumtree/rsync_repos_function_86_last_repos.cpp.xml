<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_86_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">push_local_filters<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">dir<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">unsigned<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">int<pos:position pos:line="1" pos:column="55"/></name></type> <name pos:line="1" pos:column="56">dirlen<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">local_filter_state<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">push<pos:position pos:line="3" pos:column="40"/></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">set_filter_dir<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><name pos:line="6" pos:column="24">dir<pos:position pos:line="6" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">dirlen<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">DEBUG_GTE<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">FILTER<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="31">2<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">rprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FINFO<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"[%s] pushing local filters for %s\n"<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="9" pos:column="25">who_am_i<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">()<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">dirbuf<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">mergelist_cnt<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <block pos:line="12" pos:column="29">{
		<comment type="block" pos:line="13" pos:column="17">/* No old state to save and no new merge files to push. */</comment>
		<return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">push<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator>struct <name pos:line="17" pos:column="24">local_filter_state<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">*<pos:position pos:line="17" pos:column="44"/></operator><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator><call><name pos:line="17" pos:column="45">new_array<pos:position pos:line="17" pos:column="54"/></name><argument_list pos:line="17" pos:column="54">(<argument><expr><name pos:line="17" pos:column="55">char<pos:position pos:line="17" pos:column="59"/></name></expr></argument>,
			  <argument><expr><sizeof pos:line="18" pos:column="27">sizeof <argument_list pos:line="18" pos:column="34">(<argument><expr pos:line="18" pos:column="35">struct <name pos:line="18" pos:column="42">local_filter_state<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></sizeof>
			<operator pos:line="19" pos:column="25">+<pos:position pos:line="19" pos:column="26"/></operator> <operator pos:line="19" pos:column="27">(<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">mergelist_cnt<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-<pos:position pos:line="19" pos:column="42"/></operator><literal type="number" pos:line="19" pos:column="42">1<pos:position pos:line="19" pos:column="43"/></literal><operator pos:line="19" pos:column="43">)<pos:position pos:line="19" pos:column="44"/></operator> <operator pos:line="19" pos:column="45">*<pos:position pos:line="19" pos:column="46"/></operator> <sizeof pos:line="19" pos:column="47">sizeof <argument_list pos:line="19" pos:column="54">(<argument><expr><name pos:line="19" pos:column="55">filter_rule_list<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">push<pos:position pos:line="20" pos:column="18"/></name></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">out_of_memory<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><literal type="string" pos:line="21" pos:column="31">"push_local_filters"<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="23" pos:column="9">push<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">mergelist_cnt<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">mergelist_cnt<pos:position pos:line="23" pos:column="44"/></name></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></init> <condition><expr><name pos:line="24" pos:column="21">i<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&lt;<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="25">mergelist_cnt<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></condition> <incr><expr><name pos:line="24" pos:column="40">i<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">++<pos:position pos:line="24" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="44"/></control> <block pos:line="24" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">filter_rule<pos:position pos:line="25" pos:column="28"/></name> <modifier pos:line="25" pos:column="29">*<pos:position pos:line="25" pos:column="30"/></modifier></type><name pos:line="25" pos:column="30">ex<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><name><name pos:line="25" pos:column="35">mergelist_parents<pos:position pos:line="25" pos:column="52"/></name><index pos:line="25" pos:column="52">[<expr><name pos:line="25" pos:column="53">i<pos:position pos:line="25" pos:column="54"/></name></expr>]<pos:position pos:line="25" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="25" pos:column="56"/></decl_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">ex<pos:position pos:line="26" pos:column="24"/></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">memcpy<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><operator pos:line="28" pos:column="24">&amp;<pos:position pos:line="28" pos:column="29"/></operator><name><name pos:line="28" pos:column="25">push<pos:position pos:line="28" pos:column="29"/></name><operator pos:line="28" pos:column="29">-&gt;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="31">mergelists<pos:position pos:line="28" pos:column="41"/></name><index pos:line="28" pos:column="41">[<expr><name pos:line="28" pos:column="42">i<pos:position pos:line="28" pos:column="43"/></name></expr>]<pos:position pos:line="28" pos:column="44"/></index></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="46">ex<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">u<pos:position pos:line="28" pos:column="51"/></name><operator pos:line="28" pos:column="51">.<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">mergelist<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="63">sizeof <argument_list pos:line="28" pos:column="70">(<argument><expr><name pos:line="28" pos:column="71">filter_rule_list<pos:position pos:line="28" pos:column="87"/></name></expr></argument>)<pos:position pos:line="28" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="90"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></for>

	<comment type="block" pos:line="31" pos:column="9">/* Note: parse_filter_file() might increase mergelist_cnt, so keep
	 * this loop separate from the above loop. */</comment>
	<for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="25">mergelist_cnt<pos:position pos:line="33" pos:column="38"/></name></expr>;<pos:position pos:line="33" pos:column="39"/></condition> <incr><expr><name pos:line="33" pos:column="40">i<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">++<pos:position pos:line="33" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="44"/></control> <block pos:line="33" pos:column="45">{
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">filter_rule<pos:position pos:line="34" pos:column="28"/></name> <modifier pos:line="34" pos:column="29">*<pos:position pos:line="34" pos:column="30"/></modifier></type><name pos:line="34" pos:column="30">ex<pos:position pos:line="34" pos:column="32"/></name> <init pos:line="34" pos:column="33">= <expr><name><name pos:line="34" pos:column="35">mergelist_parents<pos:position pos:line="34" pos:column="52"/></name><index pos:line="34" pos:column="52">[<expr><name pos:line="34" pos:column="53">i<pos:position pos:line="34" pos:column="54"/></name></expr>]<pos:position pos:line="34" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="34" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">filter_rule_list<pos:position pos:line="35" pos:column="33"/></name> <modifier pos:line="35" pos:column="34">*<pos:position pos:line="35" pos:column="35"/></modifier></type><name pos:line="35" pos:column="35">lp<pos:position pos:line="35" pos:column="37"/></name></decl>;<pos:position pos:line="35" pos:column="38"/></decl_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">ex<pos:position pos:line="36" pos:column="24"/></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
			<block type="pseudo"><continue pos:line="37" pos:column="25">continue;<pos:position pos:line="37" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">lp<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name><name pos:line="38" pos:column="22">ex<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">u<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">.<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">mergelist<pos:position pos:line="38" pos:column="37"/></name></name></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>

		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><call><name pos:line="40" pos:column="21">DEBUG_GTE<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">FILTER<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="39">2<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="42"/></condition><then pos:line="40" pos:column="42"> <block pos:line="40" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">rprintf<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">FINFO<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="40">"[%s] pushing mergelist #%d%s\n"<pos:position pos:line="41" pos:column="72"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="42" pos:column="33">who_am_i<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">()<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="45">i<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="48">lp<pos:position pos:line="42" pos:column="50"/></name><operator pos:line="42" pos:column="50">-&gt;<pos:position pos:line="42" pos:column="55"/></operator><name pos:line="42" pos:column="52">debug_type<pos:position pos:line="42" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="45" pos:column="17">lp<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">tail<pos:position pos:line="45" pos:column="25"/></name></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="28">NULL<pos:position pos:line="45" pos:column="32"/></name></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt> <comment type="block" pos:line="45" pos:column="34">/* Switch any local rules to inherited. */</comment>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name><name pos:line="46" pos:column="21">ex<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">-&gt;<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="25">rflags<pos:position pos:line="46" pos:column="31"/></name></name> <operator pos:line="46" pos:column="32">&amp;<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="34">FILTRULE_NO_INHERIT<pos:position pos:line="46" pos:column="53"/></name></expr>)<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="25">lp<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">-&gt;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="29">head<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">=<pos:position pos:line="47" pos:column="35"/></operator> <name pos:line="47" pos:column="36">NULL<pos:position pos:line="47" pos:column="40"/></name></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt></block></then></if>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name><name pos:line="49" pos:column="21">ex<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">-&gt;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="25">rflags<pos:position pos:line="49" pos:column="31"/></name></name> <operator pos:line="49" pos:column="32">&amp;<pos:position pos:line="49" pos:column="37"/></operator> <name pos:line="49" pos:column="34">FILTRULE_FINISH_SETUP<pos:position pos:line="49" pos:column="55"/></name></expr>)<pos:position pos:line="49" pos:column="56"/></condition><then pos:line="49" pos:column="56"> <block pos:line="49" pos:column="57">{
			<expr_stmt><expr><name><name pos:line="50" pos:column="25">ex<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">rflags<pos:position pos:line="50" pos:column="35"/></name></name> <operator pos:line="50" pos:column="36">&amp;=<pos:position pos:line="50" pos:column="42"/></operator> <operator pos:line="50" pos:column="39">~<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="40">FILTRULE_FINISH_SETUP<pos:position pos:line="50" pos:column="61"/></name></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><call><name pos:line="51" pos:column="29">setup_merge_file<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><name pos:line="51" pos:column="46">i<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="49">ex<pos:position pos:line="51" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="53">lp<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="57"/></condition><then pos:line="51" pos:column="57">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="33">set_filter_dir<pos:position pos:line="52" pos:column="47"/></name><argument_list pos:line="52" pos:column="47">(<argument><expr><name pos:line="52" pos:column="48">dir<pos:position pos:line="52" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="53">dirlen<pos:position pos:line="52" pos:column="59"/></name></expr></argument>)<pos:position pos:line="52" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="61"/></expr_stmt></block></then></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>

		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><call><name pos:line="55" pos:column="21">strlcpy<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name pos:line="55" pos:column="29">dirbuf<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">+<pos:position pos:line="55" pos:column="37"/></operator> <name pos:line="55" pos:column="38">dirbuf_len<pos:position pos:line="55" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="50">ex<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">-&gt;<pos:position pos:line="55" pos:column="57"/></operator><name pos:line="55" pos:column="54">pattern<pos:position pos:line="55" pos:column="61"/></name></name></expr></argument>,
		    <argument><expr><name pos:line="56" pos:column="21">MAXPATHLEN<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">-<pos:position pos:line="56" pos:column="33"/></operator> <name pos:line="56" pos:column="34">dirbuf_len<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call> <operator pos:line="56" pos:column="46">&lt;<pos:position pos:line="56" pos:column="50"/></operator> <name pos:line="56" pos:column="48">MAXPATHLEN<pos:position pos:line="56" pos:column="58"/></name> <operator pos:line="56" pos:column="59">-<pos:position pos:line="56" pos:column="60"/></operator> <name pos:line="56" pos:column="61">dirbuf_len<pos:position pos:line="56" pos:column="71"/></name></expr>)<pos:position pos:line="56" pos:column="72"/></condition><then pos:line="56" pos:column="72"> <block pos:line="56" pos:column="73">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">parse_filter_file<pos:position pos:line="57" pos:column="42"/></name><argument_list pos:line="57" pos:column="42">(<argument><expr><name pos:line="57" pos:column="43">lp<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="47">dirbuf<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="55">ex<pos:position pos:line="57" pos:column="57"/></name></expr></argument>,
					  <argument><expr><name pos:line="58" pos:column="43">XFLG_ANCHORED2ABS<pos:position pos:line="58" pos:column="60"/></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then> <else pos:line="59" pos:column="19">else <block pos:line="59" pos:column="24">{
			<expr_stmt><expr><name pos:line="60" pos:column="25">io_error<pos:position pos:line="60" pos:column="33"/></name> <operator pos:line="60" pos:column="34">|=<pos:position pos:line="60" pos:column="36"/></operator> <name pos:line="60" pos:column="37">IOERR_GENERAL<pos:position pos:line="60" pos:column="50"/></name></expr>;<pos:position pos:line="60" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">rprintf<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">FERROR<pos:position pos:line="61" pos:column="39"/></name></expr></argument>,
			    <argument><expr><literal type="string" pos:line="62" pos:column="29">"cannot add local filter rules in long-named directory: %s\n"<pos:position pos:line="62" pos:column="90"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="63" pos:column="29">full_fname<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">dirbuf<pos:position pos:line="63" pos:column="46"/></name></expr></argument>)<pos:position pos:line="63" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="65" pos:column="17">dirbuf<pos:position pos:line="65" pos:column="23"/></name><index pos:line="65" pos:column="23">[<expr><name pos:line="65" pos:column="24">dirbuf_len<pos:position pos:line="65" pos:column="34"/></name></expr>]<pos:position pos:line="65" pos:column="35"/></index></name> <operator pos:line="65" pos:column="36">=<pos:position pos:line="65" pos:column="37"/></operator> <literal type="char" pos:line="65" pos:column="38">'\0'<pos:position pos:line="65" pos:column="42"/></literal></expr>;<pos:position pos:line="65" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></for>

	<return pos:line="68" pos:column="9">return <expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">void<pos:position pos:line="68" pos:column="21"/></name><operator pos:line="68" pos:column="21">*<pos:position pos:line="68" pos:column="22"/></operator><operator pos:line="68" pos:column="22">)<pos:position pos:line="68" pos:column="23"/></operator><name pos:line="68" pos:column="23">push<pos:position pos:line="68" pos:column="27"/></name></expr>;<pos:position pos:line="68" pos:column="28"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

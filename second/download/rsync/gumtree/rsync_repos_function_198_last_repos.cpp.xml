<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_198_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">link_or_rename<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">from<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier> <name pos:line="1" pos:column="58">char<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">to<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
				 <parameter><decl><type><name pos:line="2" pos:column="34">BOOL<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">prefer_rename<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">STRUCT_STAT<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">stp<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="4" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">prefer_rename<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
<cpp:ifndef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifndef<pos:position pos:line="6" pos:column="8"/></cpp:directive> <name pos:line="6" pos:column="9">CAN_HARDLINK_SYMLINK<pos:position pos:line="6" pos:column="29"/></name></cpp:ifndef>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">S_ISLNK<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name><name pos:line="7" pos:column="29">stp<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">st_mode<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr>;<pos:position pos:line="8" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="8" pos:column="35">/* Use copy code. */</comment>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifndef<pos:position pos:line="10" pos:column="8"/></cpp:directive> <name pos:line="10" pos:column="9">CAN_HARDLINK_SPECIAL<pos:position pos:line="10" pos:column="29"/></name></cpp:ifndef>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">IS_SPECIAL<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">stp<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">st_mode<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call> <operator pos:line="11" pos:column="46">||<pos:position pos:line="11" pos:column="48"/></operator> <call><name pos:line="11" pos:column="49">IS_DEVICE<pos:position pos:line="11" pos:column="58"/></name><argument_list pos:line="11" pos:column="58">(<argument><expr><name><name pos:line="11" pos:column="59">stp<pos:position pos:line="11" pos:column="62"/></name><operator pos:line="11" pos:column="62">-&gt;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="64">st_mode<pos:position pos:line="11" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="73"/></condition><then pos:line="11" pos:column="73">
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>;<pos:position pos:line="12" pos:column="34"/></return></block></then></if> <comment type="block" pos:line="12" pos:column="35">/* Use copy code. */</comment>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">do_link<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">from<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">to<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call> <operator pos:line="14" pos:column="39">==<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44"> <block pos:line="14" pos:column="45">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><call><name pos:line="15" pos:column="29">DEBUG_GTE<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">BACKUP<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="47">1<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="33">rprintf<pos:position pos:line="16" pos:column="40"/></name><argument_list pos:line="16" pos:column="40">(<argument><expr><name pos:line="16" pos:column="41">FINFO<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="48">"make_backup: HLINK %s successful.\n"<pos:position pos:line="16" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="87">from<pos:position pos:line="16" pos:column="91"/></name></expr></argument>)<pos:position pos:line="16" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="93"/></expr_stmt></block></then></if>
			<return pos:line="17" pos:column="25">return <expr><literal type="number" pos:line="17" pos:column="32">2<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></return>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="19" pos:column="17">/* We prefer to rename a regular file rather than copy it. */</comment>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><call><name pos:line="20" pos:column="22">S_ISREG<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name><name pos:line="20" pos:column="30">stp<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">-&gt;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="35">st_mode<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call> <operator pos:line="20" pos:column="44">||<pos:position pos:line="20" pos:column="46"/></operator> <name pos:line="20" pos:column="47">errno<pos:position pos:line="20" pos:column="52"/></name> <operator pos:line="20" pos:column="53">==<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="56">EEXIST<pos:position pos:line="20" pos:column="62"/></name> <operator pos:line="20" pos:column="63">||<pos:position pos:line="20" pos:column="65"/></operator> <name pos:line="20" pos:column="66">errno<pos:position pos:line="20" pos:column="71"/></name> <operator pos:line="20" pos:column="72">==<pos:position pos:line="20" pos:column="74"/></operator> <name pos:line="20" pos:column="75">EISDIR<pos:position pos:line="20" pos:column="81"/></name></expr>)<pos:position pos:line="20" pos:column="82"/></condition><then pos:line="20" pos:column="82">
			<block type="pseudo"><return pos:line="21" pos:column="25">return <expr><literal type="number" pos:line="21" pos:column="32">0<pos:position pos:line="21" pos:column="33"/></literal></expr>;<pos:position pos:line="21" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">do_rename<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">from<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="29">to<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call> <operator pos:line="24" pos:column="33">==<pos:position pos:line="24" pos:column="35"/></operator> <literal type="number" pos:line="24" pos:column="36">0<pos:position pos:line="24" pos:column="37"/></literal></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">stp<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">st_nlink<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">&gt;<pos:position pos:line="25" pos:column="39"/></operator> <literal type="number" pos:line="25" pos:column="37">1<pos:position pos:line="25" pos:column="38"/></literal> <operator pos:line="25" pos:column="39">&amp;&amp;<pos:position pos:line="25" pos:column="49"/></operator> <operator pos:line="25" pos:column="42">!<pos:position pos:line="25" pos:column="43"/></operator><call><name pos:line="25" pos:column="43">S_ISDIR<pos:position pos:line="25" pos:column="50"/></name><argument_list pos:line="25" pos:column="50">(<argument><expr><name><name pos:line="25" pos:column="51">stp<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">st_mode<pos:position pos:line="25" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="65"/></condition><then pos:line="25" pos:column="65"> <block pos:line="25" pos:column="66">{
			<comment type="block" pos:line="26" pos:column="25">/* If someone has hard-linked the file into the backup
			 * dir, rename() might return success but do nothing! */</comment>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">robust_unlink<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">from<pos:position pos:line="28" pos:column="43"/></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt> <comment type="block" pos:line="28" pos:column="46">/* Just in case... */</comment>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">DEBUG_GTE<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">BACKUP<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="39">1<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="42"/></condition><then pos:line="30" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="25">rprintf<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">FINFO<pos:position pos:line="31" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="40">"make_backup: RENAME %s successful.\n"<pos:position pos:line="31" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="80">from<pos:position pos:line="31" pos:column="84"/></name></expr></argument>)<pos:position pos:line="31" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="86"/></expr_stmt></block></then></if>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">1<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<return pos:line="34" pos:column="9">return <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_119_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write_batch_csum_info<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">flist_entry<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">flist_count<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">sum_struct<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">s<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">i<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">int_zero<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">extern<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">csum_length<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">fdb_open<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="20">1<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* Write csum info to batch file */</comment>

	<comment type="block" pos:line="12" pos:column="9">/* FIXME: This will break if s-&gt;count is ever not exactly an int. */</comment>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">write_batch_csums_file<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">flist_entry<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="45">sizeof<argument_list pos:line="13" pos:column="51">(<argument><expr><name pos:line="13" pos:column="52">int<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">write_batch_csums_file<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><ternary><condition><expr><name pos:line="14" pos:column="32">s<pos:position pos:line="14" pos:column="33"/></name></expr> ?<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <expr><operator pos:line="14" pos:column="36">&amp;<pos:position pos:line="14" pos:column="41"/></operator><name><name pos:line="14" pos:column="37">s<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">count<pos:position pos:line="14" pos:column="45"/></name></name></expr> <pos:position pos:line="14" pos:column="46"/></then><else pos:line="14" pos:column="46">: <expr><operator pos:line="14" pos:column="48">&amp;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="49">int_zero<pos:position pos:line="14" pos:column="57"/></name></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="59">sizeof<argument_list pos:line="14" pos:column="65">(<argument><expr><name pos:line="14" pos:column="66">int<pos:position pos:line="14" pos:column="69"/></name></expr></argument>)<pos:position pos:line="14" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
	
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">s<pos:position pos:line="16" pos:column="14"/></name></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15"> <block pos:line="16" pos:column="16">{
		<for pos:line="17" pos:column="17">for <control pos:line="17" pos:column="21">(<init><expr><name pos:line="17" pos:column="22">i<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr>;<pos:position pos:line="17" pos:column="28"/></init> <condition><expr><name pos:line="17" pos:column="29">i<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">&lt;<pos:position pos:line="17" pos:column="35"/></operator> <name><name pos:line="17" pos:column="33">s<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">-&gt;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="36">count<pos:position pos:line="17" pos:column="41"/></name></name></expr>;<pos:position pos:line="17" pos:column="42"/></condition> <incr><expr><name pos:line="17" pos:column="43">i<pos:position pos:line="17" pos:column="44"/></name><operator pos:line="17" pos:column="44">++<pos:position pos:line="17" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="47"/></control> <block pos:line="17" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">write_batch_csums_file<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><operator pos:line="18" pos:column="48">&amp;<pos:position pos:line="18" pos:column="53"/></operator><name><name pos:line="18" pos:column="49">s<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">sums<pos:position pos:line="18" pos:column="56"/></name><index pos:line="18" pos:column="56">[<expr><name pos:line="18" pos:column="57">i<pos:position pos:line="18" pos:column="58"/></name></expr>]<pos:position pos:line="18" pos:column="59"/></index></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">sum1<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="66">sizeof<argument_list pos:line="18" pos:column="72">(<argument><expr><name pos:line="18" pos:column="73">uint32<pos:position pos:line="18" pos:column="79"/></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="82"/></expr_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><operator pos:line="19" pos:column="29">(<pos:position pos:line="19" pos:column="30"/></operator><operator pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">flist_entry<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">==<pos:position pos:line="19" pos:column="45"/></operator> <name pos:line="19" pos:column="46">flist_count<pos:position pos:line="19" pos:column="57"/></name> <operator pos:line="19" pos:column="58">-<pos:position pos:line="19" pos:column="59"/></operator> <literal type="number" pos:line="19" pos:column="60">1<pos:position pos:line="19" pos:column="61"/></literal><operator pos:line="19" pos:column="61">)<pos:position pos:line="19" pos:column="62"/></operator>
			    <operator pos:line="20" pos:column="29">&amp;&amp;<pos:position pos:line="20" pos:column="39"/></operator> <operator pos:line="20" pos:column="32">(<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">i<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">==<pos:position pos:line="20" pos:column="37"/></operator> <name><name pos:line="20" pos:column="38">s<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">-&gt;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="41">count<pos:position pos:line="20" pos:column="46"/></name></name> <operator pos:line="20" pos:column="47">-<pos:position pos:line="20" pos:column="48"/></operator> <literal type="number" pos:line="20" pos:column="49">1<pos:position pos:line="20" pos:column="50"/></literal><operator pos:line="20" pos:column="50">)<pos:position pos:line="20" pos:column="51"/></operator></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52"> <block pos:line="20" pos:column="53">{
				<expr_stmt><expr><name pos:line="21" pos:column="33">fdb_close<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">=<pos:position pos:line="21" pos:column="44"/></operator> <literal type="number" pos:line="21" pos:column="45">1<pos:position pos:line="21" pos:column="46"/></literal></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="22" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="23" pos:column="25">write_batch_csums_file<pos:position pos:line="23" pos:column="47"/></name><argument_list pos:line="23" pos:column="47">(<argument><expr><name><name pos:line="23" pos:column="48">s<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">sums<pos:position pos:line="23" pos:column="55"/></name><index pos:line="23" pos:column="55">[<expr><name pos:line="23" pos:column="56">i<pos:position pos:line="23" pos:column="57"/></name></expr>]<pos:position pos:line="23" pos:column="58"/></index></name><operator pos:line="23" pos:column="58">.<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">sum2<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="65">csum_length<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></for>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

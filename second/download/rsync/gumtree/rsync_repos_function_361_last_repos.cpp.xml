<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_361_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">print_child_argv<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">prefix<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier><modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">cmd<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">cnt<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">rprintf<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">FCLIENT<pos:position pos:line="4" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="26">"%s "<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="33">prefix<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>
	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init pos:line="5" pos:column="14">;<pos:position pos:line="5" pos:column="15"/></init> <condition><expr><operator pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">cmd<pos:position pos:line="5" pos:column="20"/></name></expr>;<pos:position pos:line="5" pos:column="21"/></condition> <incr><expr><name pos:line="5" pos:column="22">cmd<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">++<pos:position pos:line="5" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="28"/></control> <block pos:line="5" pos:column="29">{
		<comment type="block" pos:line="6" pos:column="17">/* Look for characters that ought to be quoted.  This
		* is not a great quoting algorithm, but it's
		* sufficient for a log message. */</comment>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">strspn<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">cmd<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"abcdefghijklmnopqrstuvwxyz"<pos:position pos:line="9" pos:column="62"/></literal>
			   <literal type="string" pos:line="10" pos:column="28">"ABCDEFGHIJKLMNOPQRSTUVWXYZ"<pos:position pos:line="10" pos:column="56"/></literal>
			   <literal type="string" pos:line="11" pos:column="28">"0123456789"<pos:position pos:line="11" pos:column="40"/></literal>
			   <literal type="string" pos:line="12" pos:column="28">",.-_=+@/"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call> <operator pos:line="12" pos:column="40">!=<pos:position pos:line="12" pos:column="42"/></operator> <call><name pos:line="12" pos:column="43">strlen<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><operator pos:line="12" pos:column="50">*<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">cmd<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">rprintf<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">FCLIENT<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"\"%s\" "<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="53">*<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">cmd<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <else pos:line="14" pos:column="19">else <block pos:line="14" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">rprintf<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">FCLIENT<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"%s "<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="49">*<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">cmd<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">cnt<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">++<pos:position pos:line="17" pos:column="22"/></operator></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">rprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">FCLIENT<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">" (%d args)\n"<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">cnt<pos:position pos:line="19" pos:column="45"/></name></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

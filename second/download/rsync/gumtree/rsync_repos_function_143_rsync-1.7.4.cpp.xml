<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_143_rsync-1.7.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int64<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">in<pos:position pos:line="3" pos:column="11"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="12">out<pos:position pos:line="3" pos:column="15"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="16">tsize<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">time_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">t<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><call><name pos:line="4" pos:column="14">time<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">verbose<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> <block type="pseudo"><return pos:line="6" pos:column="17">return;<pos:position pos:line="6" pos:column="24"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">am_server<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&amp;&amp;<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="20">am_sender<pos:position pos:line="8" pos:column="29"/></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <block pos:line="8" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">write_longint<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">f<pos:position pos:line="9" pos:column="20"/></name></expr></argument>,<argument><expr><call><name pos:line="9" pos:column="21">read_total<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">write_longint<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">f<pos:position pos:line="10" pos:column="20"/></name></expr></argument>,<argument><expr><call><name pos:line="10" pos:column="21">write_total<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">()<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">write_longint<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">f<pos:position pos:line="11" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="21">total_size<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">write_flush<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">f<pos:position pos:line="12" pos:column="18"/></name></expr></argument>)<pos:position pos:line="12" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
    
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">am_sender<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17"> <block pos:line="16" pos:column="18">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">in<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">read_total<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">()<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">out<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">write_total<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">()<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">tsize<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">total_size<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then> <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
    <expr_stmt><expr><name pos:line="21" pos:column="5">in<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <call><name pos:line="21" pos:column="10">read_longint<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">f<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">out<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <call><name pos:line="22" pos:column="11">read_longint<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">f<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">tsize<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <call><name pos:line="23" pos:column="13">read_longint<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">f<pos:position pos:line="23" pos:column="27"/></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></else></if>

<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">HAVE_LONGLONG<pos:position pos:line="26" pos:column="18"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">printf<pos:position pos:line="27" pos:column="9"/></name><argument_list pos:line="27" pos:column="9">(<argument><expr><literal type="string" pos:line="27" pos:column="10">"wrote %lld bytes  read %lld bytes  %.2f bytes/sec\n"<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>,
	 <argument><expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">long<pos:position pos:line="28" pos:column="15"/></name> <name pos:line="28" pos:column="16">long<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">)<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">out<pos:position pos:line="28" pos:column="24"/></name></expr></argument>,<argument><expr><operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">long<pos:position pos:line="28" pos:column="30"/></name> <name pos:line="28" pos:column="31">long<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">)<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">in<pos:position pos:line="28" pos:column="38"/></name></expr></argument>,<argument><expr><operator pos:line="28" pos:column="39">(<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">in<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">+<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">out<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">)<pos:position pos:line="28" pos:column="47"/></operator><operator pos:line="28" pos:column="47">/<pos:position pos:line="28" pos:column="48"/></operator><operator pos:line="28" pos:column="48">(<pos:position pos:line="28" pos:column="49"/></operator><literal type="number" pos:line="28" pos:column="49">0.5<pos:position pos:line="28" pos:column="52"/></literal> <operator pos:line="28" pos:column="53">+<pos:position pos:line="28" pos:column="54"/></operator> <operator pos:line="28" pos:column="55">(<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="56">t<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">-<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">starttime<pos:position pos:line="28" pos:column="67"/></name><operator pos:line="28" pos:column="67">)<pos:position pos:line="28" pos:column="68"/></operator><operator pos:line="28" pos:column="68">)<pos:position pos:line="28" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">printf<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><literal type="string" pos:line="29" pos:column="10">"total size is %lld  speedup is %.2f\n"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>,
	 <argument><expr><operator pos:line="30" pos:column="10">(<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">long<pos:position pos:line="30" pos:column="15"/></name> <name pos:line="30" pos:column="16">long<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">)<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">tsize<pos:position pos:line="30" pos:column="26"/></name></expr></argument>,<argument><expr><operator pos:line="30" pos:column="27">(<pos:position pos:line="30" pos:column="28"/></operator><literal type="number" pos:line="30" pos:column="28">1.0<pos:position pos:line="30" pos:column="31"/></literal><operator pos:line="30" pos:column="31">*<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">tsize<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="38">/<pos:position pos:line="30" pos:column="39"/></operator><operator pos:line="30" pos:column="39">(<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">in<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">+<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="43">out<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
<cpp:else pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">else<pos:position pos:line="31" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">printf<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><literal type="string" pos:line="32" pos:column="10">"wrote %ld bytes  read %ld bytes  %.2f bytes/sec\n"<pos:position pos:line="32" pos:column="61"/></literal></expr></argument>,
	 <argument><expr><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">long<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">out<pos:position pos:line="33" pos:column="19"/></name></expr></argument>,<argument><expr><operator pos:line="33" pos:column="20">(<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">long<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">)<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">in<pos:position pos:line="33" pos:column="28"/></name></expr></argument>,<argument><expr><operator pos:line="33" pos:column="29">(<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">in<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">+<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">out<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">)<pos:position pos:line="33" pos:column="37"/></operator><operator pos:line="33" pos:column="37">/<pos:position pos:line="33" pos:column="38"/></operator><operator pos:line="33" pos:column="38">(<pos:position pos:line="33" pos:column="39"/></operator><literal type="number" pos:line="33" pos:column="39">0.5<pos:position pos:line="33" pos:column="42"/></literal> <operator pos:line="33" pos:column="43">+<pos:position pos:line="33" pos:column="44"/></operator> <operator pos:line="33" pos:column="45">(<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">t<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="48">starttime<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">)<pos:position pos:line="33" pos:column="58"/></operator><operator pos:line="33" pos:column="58">)<pos:position pos:line="33" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">printf<pos:position pos:line="34" pos:column="9"/></name><argument_list pos:line="34" pos:column="9">(<argument><expr><literal type="string" pos:line="34" pos:column="10">"total size is %ld  speedup is %.2f\n"<pos:position pos:line="34" pos:column="48"/></literal></expr></argument>,
	 <argument><expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">long<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">)<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">tsize<pos:position pos:line="35" pos:column="21"/></name></expr></argument>,<argument><expr><operator pos:line="35" pos:column="22">(<pos:position pos:line="35" pos:column="23"/></operator><literal type="number" pos:line="35" pos:column="23">1.0<pos:position pos:line="35" pos:column="26"/></literal><operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">tsize<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">)<pos:position pos:line="35" pos:column="33"/></operator><operator pos:line="35" pos:column="33">/<pos:position pos:line="35" pos:column="34"/></operator><operator pos:line="35" pos:column="34">(<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">in<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">+<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">out<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">)<pos:position pos:line="35" pos:column="42"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

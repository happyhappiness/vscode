<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_233_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">argc<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">!=<pos:position pos:line="4" pos:column="20"/></operator> <literal type="number" pos:line="4" pos:column="21">3<pos:position pos:line="4" pos:column="22"/></literal></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block pos:line="4" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">fprintf<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">stderr<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="33">"usage: t_unsafe LINKDEST SRCDIR\n"<pos:position pos:line="5" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt>
		<return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">printf<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="string" pos:line="9" pos:column="16">"%s\n"<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>,
	       <argument><expr><ternary><condition><expr><call><name pos:line="10" pos:column="16">unsafe_symlink<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name><name pos:line="10" pos:column="31">argv<pos:position pos:line="10" pos:column="35"/></name><index pos:line="10" pos:column="35">[<expr><literal type="number" pos:line="10" pos:column="36">1<pos:position pos:line="10" pos:column="37"/></literal></expr>]<pos:position pos:line="10" pos:column="38"/></index></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="40">argv<pos:position pos:line="10" pos:column="44"/></name><index pos:line="10" pos:column="44">[<expr><literal type="number" pos:line="10" pos:column="45">2<pos:position pos:line="10" pos:column="46"/></literal></expr>]<pos:position pos:line="10" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr> ?<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50"> <expr><literal type="string" pos:line="10" pos:column="51">"unsafe"<pos:position pos:line="10" pos:column="59"/></literal></expr> <pos:position pos:line="10" pos:column="60"/></then><else pos:line="10" pos:column="60">: <expr><literal type="string" pos:line="10" pos:column="62">"safe"<pos:position pos:line="10" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt>

	<return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

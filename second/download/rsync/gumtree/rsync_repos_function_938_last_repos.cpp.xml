<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_938_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">poptDupArgv<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">argc<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">argv<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type> <name pos:line="2" pos:column="23">argcPtr<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">argvPtr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">nb<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">argc<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">+<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="25">1<pos:position pos:line="4" pos:column="26"/></literal><operator pos:line="4" pos:column="26">)<pos:position pos:line="4" pos:column="27"/></operator> <operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator> <sizeof pos:line="4" pos:column="30">sizeof<argument_list pos:line="4" pos:column="36">(<argument><expr><operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">argv<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier><modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type> <name pos:line="5" pos:column="19">argv2<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type> <name pos:line="6" pos:column="12">dst<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">argc<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&lt;=<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal> <operator pos:line="9" pos:column="19">||<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">argv<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35">	<comment type="block" pos:line="9" pos:column="41">/* XXX can't happen */</comment>
	<block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">POPT_ERROR_NOARG<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></return></block></then></if>
    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></init> <condition><expr><name pos:line="11" pos:column="17">i<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="21">argc<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></condition> <incr><expr><name pos:line="11" pos:column="27">i<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">++<pos:position pos:line="11" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="31"/></control> <block pos:line="11" pos:column="32">{
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">argv<pos:position pos:line="12" pos:column="17"/></name><index pos:line="12" pos:column="17">[<expr><name pos:line="12" pos:column="18">i<pos:position pos:line="12" pos:column="19"/></name></expr>]<pos:position pos:line="12" pos:column="20"/></index></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29">
	    <block type="pseudo"><return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">POPT_ERROR_NOARG<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">nb<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">+=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">strlen<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name><name pos:line="14" pos:column="22">argv<pos:position pos:line="14" pos:column="26"/></name><index pos:line="14" pos:column="26">[<expr><name pos:line="14" pos:column="27">i<pos:position pos:line="14" pos:column="28"/></name></expr>]<pos:position pos:line="14" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call> <operator pos:line="14" pos:column="31">+<pos:position pos:line="14" pos:column="32"/></operator> <literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
	
    <expr_stmt><expr><name pos:line="17" pos:column="5">dst<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">malloc<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">nb<pos:position pos:line="17" pos:column="20"/></name></expr></argument>)<pos:position pos:line="17" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">dst<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">==<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">			<comment type="block" pos:line="18" pos:column="41">/* XXX can't happen */</comment>
	<block type="pseudo"><return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">POPT_ERROR_MALLOC<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="20" pos:column="5">argv2<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">void<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></operator><operator pos:line="20" pos:column="20">)<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">dst<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">dst<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">+=<pos:position pos:line="21" pos:column="11"/></operator> <operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">argc<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">+<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator> <operator pos:line="21" pos:column="23">*<pos:position pos:line="21" pos:column="24"/></operator> <sizeof pos:line="21" pos:column="25">sizeof<argument_list pos:line="21" pos:column="31">(<argument><expr><operator pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">argv<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/*@-branchstate@*/</comment>
    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">i<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <literal type="number" pos:line="24" pos:column="14">0<pos:position pos:line="24" pos:column="15"/></literal></expr>;<pos:position pos:line="24" pos:column="16"/></init> <condition><expr><name pos:line="24" pos:column="17">i<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="21">argc<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></condition> <incr><expr><name pos:line="24" pos:column="27">i<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">++<pos:position pos:line="24" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="31"/></control> <block pos:line="24" pos:column="32">{
	<expr_stmt><expr><name><name pos:line="25" pos:column="9">argv2<pos:position pos:line="25" pos:column="14"/></name><index pos:line="25" pos:column="14">[<expr><name pos:line="25" pos:column="15">i<pos:position pos:line="25" pos:column="16"/></name></expr>]<pos:position pos:line="25" pos:column="17"/></index></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">dst<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">dst<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">+=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">strlcpy<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">dst<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="29">argv<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><name pos:line="26" pos:column="34">i<pos:position pos:line="26" pos:column="35"/></name></expr>]<pos:position pos:line="26" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">nb<pos:position pos:line="26" pos:column="40"/></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call> <operator pos:line="26" pos:column="42">+<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="44">1<pos:position pos:line="26" pos:column="45"/></literal></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></for>
    <comment type="block" pos:line="28" pos:column="5">/*@=branchstate@*/</comment>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">argv2<pos:position pos:line="29" pos:column="10"/></name><index pos:line="29" pos:column="10">[<expr><name pos:line="29" pos:column="11">argc<pos:position pos:line="29" pos:column="15"/></name></expr>]<pos:position pos:line="29" pos:column="16"/></index></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">NULL<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">argvPtr<pos:position pos:line="31" pos:column="16"/></name></expr>)<pos:position pos:line="31" pos:column="17"/></condition><then pos:line="31" pos:column="17"> <block pos:line="31" pos:column="18">{
	<expr_stmt><expr><operator pos:line="32" pos:column="9">*<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">argvPtr<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">argv2<pos:position pos:line="32" pos:column="25"/></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">free<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">argv2<pos:position pos:line="34" pos:column="19"/></name></expr></argument>)<pos:position pos:line="34" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="35" pos:column="9">argv2<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">NULL<pos:position pos:line="35" pos:column="21"/></name></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">argcPtr<pos:position pos:line="37" pos:column="16"/></name></expr>)<pos:position pos:line="37" pos:column="17"/></condition><then pos:line="37" pos:column="17">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">argcPtr<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">argc<pos:position pos:line="38" pos:column="24"/></name></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt></block></then></if>
    <return pos:line="39" pos:column="5">return <expr><literal type="number" pos:line="39" pos:column="12">0<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

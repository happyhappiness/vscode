<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_34_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">expand_vars<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">str<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name></decl>, <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="21">t<pos:position pos:line="3" pos:column="22"/></name></decl>, <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="25">f<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">bufsize<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">strchr<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">str<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="25">'%'<pos:position pos:line="6" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">str<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">bufsize<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">strlen<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">str<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call> <operator pos:line="9" pos:column="31">+<pos:position pos:line="9" pos:column="32"/></operator> <literal type="number" pos:line="9" pos:column="33">2048<pos:position pos:line="9" pos:column="37"/></literal></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">buf<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">new_array<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">char<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">bufsize<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">+<pos:position pos:line="10" pos:column="44"/></operator><literal type="number" pos:line="10" pos:column="44">1<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="48">==<pos:position pos:line="10" pos:column="50"/></operator> <name pos:line="10" pos:column="51">NULL<pos:position pos:line="10" pos:column="55"/></name></expr>)<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56"> <comment type="block" pos:line="10" pos:column="57">/* +1 for trailing '\0' */</comment>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">out_of_memory<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><literal type="string" pos:line="11" pos:column="31">"expand_vars"<pos:position pos:line="11" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt></block></then></if>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">t<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">buf<pos:position pos:line="13" pos:column="21"/></name></expr><operator pos:line="13" pos:column="21">,<pos:position pos:line="13" pos:column="22"/></operator> <expr><name pos:line="13" pos:column="23">f<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">str<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></init> <condition><expr><name pos:line="13" pos:column="32">bufsize<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">&amp;&amp;<pos:position pos:line="13" pos:column="50"/></operator> <operator pos:line="13" pos:column="43">*<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">f<pos:position pos:line="13" pos:column="45"/></name></expr>;<pos:position pos:line="13" pos:column="46"/></condition> <incr/>)<pos:position pos:line="13" pos:column="48"/></control> <block pos:line="13" pos:column="49">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">f<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">==<pos:position pos:line="14" pos:column="26"/></operator> <literal type="char" pos:line="14" pos:column="27">'%'<pos:position pos:line="14" pos:column="30"/></literal> <operator pos:line="14" pos:column="31">&amp;&amp;<pos:position pos:line="14" pos:column="41"/></operator> <operator pos:line="14" pos:column="34">*<pos:position pos:line="14" pos:column="35"/></operator><operator pos:line="14" pos:column="35">++<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">f<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">!=<pos:position pos:line="14" pos:column="41"/></operator> <literal type="char" pos:line="14" pos:column="42">'%'<pos:position pos:line="14" pos:column="45"/></literal></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46"> <block pos:line="14" pos:column="47">{
			<decl_stmt><decl><type><name pos:line="15" pos:column="25">char<pos:position pos:line="15" pos:column="29"/></name> <modifier pos:line="15" pos:column="30">*<pos:position pos:line="15" pos:column="31"/></modifier></type><name pos:line="15" pos:column="31">percent<pos:position pos:line="15" pos:column="38"/></name> <init pos:line="15" pos:column="39">= <expr><call><name pos:line="15" pos:column="41">strchr<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><name pos:line="15" pos:column="48">f<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="51">'%'<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="56"/></decl_stmt>
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><name pos:line="16" pos:column="29">percent<pos:position pos:line="16" pos:column="36"/></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37"> <block pos:line="16" pos:column="38">{
				<decl_stmt><decl><type><name pos:line="17" pos:column="33">char<pos:position pos:line="17" pos:column="37"/></name> <modifier pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></modifier></type><name pos:line="17" pos:column="39">val<pos:position pos:line="17" pos:column="42"/></name></decl>;<pos:position pos:line="17" pos:column="43"/></decl_stmt>
				<expr_stmt><expr><operator pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">percent<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <literal type="char" pos:line="18" pos:column="44">'\0'<pos:position pos:line="18" pos:column="48"/></literal></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name pos:line="19" pos:column="33">val<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">=<pos:position pos:line="19" pos:column="38"/></operator> <call><name pos:line="19" pos:column="39">getenv<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">f<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="20" pos:column="33">*<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">percent<pos:position pos:line="20" pos:column="41"/></name> <operator pos:line="20" pos:column="42">=<pos:position pos:line="20" pos:column="43"/></operator> <literal type="char" pos:line="20" pos:column="44">'%'<pos:position pos:line="20" pos:column="47"/></literal></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
				<if pos:line="21" pos:column="33">if <condition pos:line="21" pos:column="36">(<expr><name pos:line="21" pos:column="37">val<pos:position pos:line="21" pos:column="40"/></name></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41"> <block pos:line="21" pos:column="42">{
					<decl_stmt><decl><type><name pos:line="22" pos:column="41">int<pos:position pos:line="22" pos:column="44"/></name></type> <name pos:line="22" pos:column="45">len<pos:position pos:line="22" pos:column="48"/></name> <init pos:line="22" pos:column="49">= <expr><call><name pos:line="22" pos:column="51">strlcpy<pos:position pos:line="22" pos:column="58"/></name><argument_list pos:line="22" pos:column="58">(<argument><expr><name pos:line="22" pos:column="59">t<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">val<pos:position pos:line="22" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="67">bufsize<pos:position pos:line="22" pos:column="74"/></name><operator pos:line="22" pos:column="74">+<pos:position pos:line="22" pos:column="75"/></operator><literal type="number" pos:line="22" pos:column="75">1<pos:position pos:line="22" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="78"/></decl_stmt>
					<if pos:line="23" pos:column="41">if <condition pos:line="23" pos:column="44">(<expr><name pos:line="23" pos:column="45">len<pos:position pos:line="23" pos:column="48"/></name> <operator pos:line="23" pos:column="49">&gt;<pos:position pos:line="23" pos:column="53"/></operator> <name pos:line="23" pos:column="51">bufsize<pos:position pos:line="23" pos:column="58"/></name></expr>)<pos:position pos:line="23" pos:column="59"/></condition><then pos:line="23" pos:column="59">
						<block type="pseudo"><break pos:line="24" pos:column="49">break;<pos:position pos:line="24" pos:column="55"/></break></block></then></if>
					<expr_stmt><expr><name pos:line="25" pos:column="41">bufsize<pos:position pos:line="25" pos:column="48"/></name> <operator pos:line="25" pos:column="49">-=<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="52">len<pos:position pos:line="25" pos:column="55"/></name></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
					<expr_stmt><expr><name pos:line="26" pos:column="41">t<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">+=<pos:position pos:line="26" pos:column="45"/></operator> <name pos:line="26" pos:column="46">len<pos:position pos:line="26" pos:column="49"/></name></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
					<expr_stmt><expr><name pos:line="27" pos:column="41">f<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">=<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="45">percent<pos:position pos:line="27" pos:column="52"/></name> <operator pos:line="27" pos:column="53">+<pos:position pos:line="27" pos:column="54"/></operator> <literal type="number" pos:line="27" pos:column="55">1<pos:position pos:line="27" pos:column="56"/></literal></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
					<continue pos:line="28" pos:column="41">continue;<pos:position pos:line="28" pos:column="50"/></continue>
				}<pos:position pos:line="29" pos:column="34"/></block></then></if>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="31" pos:column="25">f<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">--<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
		<expr_stmt><expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">t<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">++<pos:position pos:line="33" pos:column="21"/></operator> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">f<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">++<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">bufsize<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">--<pos:position pos:line="34" pos:column="26"/></operator></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></for>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">t<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <literal type="char" pos:line="36" pos:column="14">'\0'<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">f<pos:position pos:line="38" pos:column="15"/></name></expr>)<pos:position pos:line="38" pos:column="16"/></condition><then pos:line="38" pos:column="16"> <block pos:line="38" pos:column="17">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">rprintf<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">FLOG<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="31">"Overflowed buf in expand_vars() trying to expand: %s\n"<pos:position pos:line="39" pos:column="87"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="89">str<pos:position pos:line="39" pos:column="92"/></name></expr></argument>)<pos:position pos:line="39" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="94"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">exit_cleanup<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">RERR_MALLOC<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">bufsize<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">&amp;&amp;<pos:position pos:line="43" pos:column="31"/></operator> <operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">buf<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <call><name pos:line="43" pos:column="31">realloc<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">buf<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">t<pos:position pos:line="43" pos:column="45"/></name> <operator pos:line="43" pos:column="46">-<pos:position pos:line="43" pos:column="47"/></operator> <name pos:line="43" pos:column="48">buf<pos:position pos:line="43" pos:column="51"/></name> <operator pos:line="43" pos:column="52">+<pos:position pos:line="43" pos:column="53"/></operator> <literal type="number" pos:line="43" pos:column="54">1<pos:position pos:line="43" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call><operator pos:line="43" pos:column="56">)<pos:position pos:line="43" pos:column="57"/></operator> <operator pos:line="43" pos:column="58">==<pos:position pos:line="43" pos:column="60"/></operator> <name pos:line="43" pos:column="61">NULL<pos:position pos:line="43" pos:column="65"/></name></expr>)<pos:position pos:line="43" pos:column="66"/></condition><then pos:line="43" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">out_of_memory<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><literal type="string" pos:line="44" pos:column="31">"expand_vars"<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="46"/></expr_stmt></block></then></if>

	<return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">buf<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

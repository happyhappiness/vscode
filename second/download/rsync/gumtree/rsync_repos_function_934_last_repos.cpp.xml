<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_934_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">showShortOptions<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">poptOption<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type> <name pos:line="1" pos:column="55">opt<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">FILE<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type> <name pos:line="1" pos:column="67">fp<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		<comment type="block" pos:line="2" pos:column="17">/*@null@*/</comment> <parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">str<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
	<comment type="block" pos:line="3" pos:column="9">/*@globals fileSystem @*/</comment>
	<comment type="block" pos:line="4" pos:column="9">/*@modifies *str, *fp, fileSystem @*/</comment>
	<comment type="block" pos:line="5" pos:column="9">/*@requires maxRead(str) &gt;= 0 @*/</comment>
<block pos:line="6" pos:column="1">{
    <comment type="block" pos:line="7" pos:column="5">/* bufsize larger then the ascii set, lazy alloca on top level call. */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type> <name pos:line="8" pos:column="12">s<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><ternary><condition><expr><name pos:line="8" pos:column="17">str<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">!=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">NULL<pos:position pos:line="8" pos:column="28"/></name></expr> ?<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <expr><name pos:line="8" pos:column="31">str<pos:position pos:line="8" pos:column="34"/></name></expr> <pos:position pos:line="8" pos:column="35"/></then><else pos:line="8" pos:column="35">: <expr><call><name pos:line="8" pos:column="37">memset<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><call><name pos:line="8" pos:column="44">alloca<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><literal type="number" pos:line="8" pos:column="51">300<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="57">0<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="60">300<pos:position pos:line="8" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr></else></ternary><operator pos:line="8" pos:column="64">)<pos:position pos:line="8" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">len<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><literal type="number" pos:line="9" pos:column="15">0<pos:position pos:line="9" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">s<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
	<block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></then></if>

<comment type="block" pos:line="14" pos:column="1">/*@-boundswrite@*/</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">opt<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">!=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">
    <block type="pseudo"><for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init pos:line="16" pos:column="10">;<pos:position pos:line="16" pos:column="11"/></init> <condition><expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name><name pos:line="16" pos:column="13">opt<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">longName<pos:position pos:line="16" pos:column="26"/></name></name> <operator pos:line="16" pos:column="27">||<pos:position pos:line="16" pos:column="29"/></operator> <name><name pos:line="16" pos:column="30">opt<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">-&gt;<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="35">shortName<pos:position pos:line="16" pos:column="44"/></name></name> <operator pos:line="16" pos:column="45">||<pos:position pos:line="16" pos:column="47"/></operator> <name><name pos:line="16" pos:column="48">opt<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">arg<pos:position pos:line="16" pos:column="56"/></name></name><operator pos:line="16" pos:column="56">)<pos:position pos:line="16" pos:column="57"/></operator></expr>;<pos:position pos:line="16" pos:column="58"/></condition> <incr><expr><name pos:line="16" pos:column="59">opt<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">++<pos:position pos:line="16" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="65"/></control> <block pos:line="16" pos:column="66">{
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">opt<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">shortName<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">&amp;&amp;<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="31">!<pos:position pos:line="17" pos:column="32"/></operator><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><name><name pos:line="17" pos:column="33">opt<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">argInfo<pos:position pos:line="17" pos:column="45"/></name></name> <operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="48">POPT_ARG_MASK<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator></expr>)<pos:position pos:line="17" pos:column="63"/></condition><then pos:line="17" pos:column="63">
	    <block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="13">s<pos:position pos:line="18" pos:column="14"/></name><index pos:line="18" pos:column="14">[<expr><call><name pos:line="18" pos:column="15">strlen<pos:position pos:line="18" pos:column="21"/></name><argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">s<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>]<pos:position pos:line="18" pos:column="25"/></index></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="28">opt<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">shortName<pos:position pos:line="18" pos:column="42"/></name></name></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt></block></then>
	<elseif pos:line="19" pos:column="9">else <if pos:line="19" pos:column="14">if <condition pos:line="19" pos:column="17">(<expr><operator pos:line="19" pos:column="18">(<pos:position pos:line="19" pos:column="19"/></operator><name><name pos:line="19" pos:column="19">opt<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">argInfo<pos:position pos:line="19" pos:column="31"/></name></name> <operator pos:line="19" pos:column="32">&amp;<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="34">POPT_ARG_MASK<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">)<pos:position pos:line="19" pos:column="48"/></operator> <operator pos:line="19" pos:column="49">==<pos:position pos:line="19" pos:column="51"/></operator> <name pos:line="19" pos:column="52">POPT_ARG_INCLUDE_TABLE<pos:position pos:line="19" pos:column="74"/></name></expr>)<pos:position pos:line="19" pos:column="75"/></condition><then pos:line="19" pos:column="75">
	    <block type="pseudo"><if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name><name pos:line="20" pos:column="17">opt<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">arg<pos:position pos:line="20" pos:column="25"/></name></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">	<comment type="block" pos:line="20" pos:column="33">/* XXX program error */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">len<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">showShortOptions<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name><name pos:line="21" pos:column="40">opt<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">arg<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">fp<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">s<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt></block></then></if></block></then></if></elseif></if>
    }<pos:position pos:line="22" pos:column="6"/></block></for></block></then></if> 
<comment type="block" pos:line="23" pos:column="1">/*@=boundswrite@*/</comment>

    <comment type="block" pos:line="25" pos:column="5">/* On return to top level, print the short options, return print length. */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">s<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">==<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">str<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&amp;&amp;<pos:position pos:line="26" pos:column="28"/></operator> <operator pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">s<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">!=<pos:position pos:line="26" pos:column="26"/></operator> <literal type="char" pos:line="26" pos:column="27">'\0'<pos:position pos:line="26" pos:column="31"/></literal></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32"> <block pos:line="26" pos:column="33">{
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">fprintf<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">fp<pos:position pos:line="27" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="21">" [-%s]"<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="31">s<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">len<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">strlen<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">s<pos:position pos:line="28" pos:column="23"/></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call> <operator pos:line="28" pos:column="25">+<pos:position pos:line="28" pos:column="26"/></operator> <sizeof pos:line="28" pos:column="27">sizeof<argument_list pos:line="28" pos:column="33">(<argument><expr><literal type="string" pos:line="28" pos:column="34">" [-]"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></sizeof><operator pos:line="28" pos:column="41">-<pos:position pos:line="28" pos:column="42"/></operator><literal type="number" pos:line="28" pos:column="42">1<pos:position pos:line="28" pos:column="43"/></literal></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">len<pos:position pos:line="30" pos:column="15"/></name></expr>;<pos:position pos:line="30" pos:column="16"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

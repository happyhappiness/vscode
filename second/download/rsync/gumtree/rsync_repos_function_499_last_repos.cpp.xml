<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_499_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">recv_rsync_acl<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">f<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">item_list<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">racl_list<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">SMB_ACL_TYPE_T<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">type<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="77">mode_t<pos:position pos:line="1" pos:column="83"/></name></type> <name pos:line="1" pos:column="84">mode<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uchar<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">computed_mask_bits<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><literal type="number" pos:line="3" pos:column="36">0<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">acl_duo<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">duo_item<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uchar<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">flags<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ndx<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><call><name pos:line="6" pos:column="19">read_varint<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">f<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">ndx<pos:position pos:line="8" pos:column="16"/></name> <argument_list type="generic" pos:line="8" pos:column="17">&lt; <argument><expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal> <operator pos:line="8" pos:column="21">||<pos:position pos:line="8" pos:column="23"/></operator> <operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">size_t<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">ndx<pos:position pos:line="8" pos:column="35"/></name></expr></argument> &gt;<pos:position pos:line="8" pos:column="40"/></argument_list></name> <name><name pos:line="8" pos:column="38">racl_list<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">count<pos:position pos:line="8" pos:column="54"/></name></name></expr>)<pos:position pos:line="8" pos:column="55"/></condition><then pos:line="8" pos:column="55"> <block pos:line="8" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">rprintf<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">FERROR_XFER<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"recv_acl_index: %s ACL index %d &gt; %d\n"<pos:position pos:line="9" pos:column="81"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="10" pos:column="25">str_acl_type<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">type<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">ndx<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="50">(<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">int<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">)<pos:position pos:line="10" pos:column="55"/></operator><name><name pos:line="10" pos:column="55">racl_list<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">-&gt;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="66">count<pos:position pos:line="10" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">exit_cleanup<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">RERR_STREAMIO<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ndx<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">!=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><name pos:line="15" pos:column="24">ndx<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">-<pos:position pos:line="15" pos:column="29"/></operator> <literal type="number" pos:line="15" pos:column="30">1<pos:position pos:line="15" pos:column="31"/></literal></expr>;<pos:position pos:line="15" pos:column="32"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="17" pos:column="9">ndx<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name><name pos:line="17" pos:column="15">racl_list<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">count<pos:position pos:line="17" pos:column="31"/></name></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">duo_item<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <call><name pos:line="18" pos:column="20">EXPAND_ITEM_LIST<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">racl_list<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">acl_duo<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="57">1000<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">duo_item<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">racl<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">empty_rsync_acl<pos:position pos:line="19" pos:column="41"/></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="21" pos:column="9">flags<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">read_byte<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">f<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">flags<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&amp;<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="21">XMIT_USER_OBJ<pos:position pos:line="23" pos:column="34"/></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="17">duo_item<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">racl<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">user_obj<pos:position pos:line="24" pos:column="40"/></name></name> <operator pos:line="24" pos:column="41">=<pos:position pos:line="24" pos:column="42"/></operator> <call><name pos:line="24" pos:column="43">recv_acl_access<pos:position pos:line="24" pos:column="58"/></name><argument_list pos:line="24" pos:column="58">(<argument><expr><name pos:line="24" pos:column="59">f<pos:position pos:line="24" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">NULL<pos:position pos:line="24" pos:column="66"/></name></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">flags<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&amp;<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="21">XMIT_GROUP_OBJ<pos:position pos:line="25" pos:column="35"/></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="17">duo_item<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">racl<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">group_obj<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">=<pos:position pos:line="26" pos:column="43"/></operator> <call><name pos:line="26" pos:column="44">recv_acl_access<pos:position pos:line="26" pos:column="59"/></name><argument_list pos:line="26" pos:column="59">(<argument><expr><name pos:line="26" pos:column="60">f<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">NULL<pos:position pos:line="26" pos:column="67"/></name></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt></block></then></if>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">flags<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&amp;<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="21">XMIT_MASK_OBJ<pos:position pos:line="27" pos:column="34"/></name></expr>)<pos:position pos:line="27" pos:column="35"/></condition><then pos:line="27" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="17">duo_item<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">racl<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">.<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">mask_obj<pos:position pos:line="28" pos:column="40"/></name></name> <operator pos:line="28" pos:column="41">=<pos:position pos:line="28" pos:column="42"/></operator> <call><name pos:line="28" pos:column="43">recv_acl_access<pos:position pos:line="28" pos:column="58"/></name><argument_list pos:line="28" pos:column="58">(<argument><expr><name pos:line="28" pos:column="59">f<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">NULL<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt></block></then></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">flags<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&amp;<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="21">XMIT_OTHER_OBJ<pos:position pos:line="29" pos:column="35"/></name></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="17">duo_item<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">racl<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">.<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="32">other_obj<pos:position pos:line="30" pos:column="41"/></name></name> <operator pos:line="30" pos:column="42">=<pos:position pos:line="30" pos:column="43"/></operator> <call><name pos:line="30" pos:column="44">recv_acl_access<pos:position pos:line="30" pos:column="59"/></name><argument_list pos:line="30" pos:column="59">(<argument><expr><name pos:line="30" pos:column="60">f<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="63">NULL<pos:position pos:line="30" pos:column="67"/></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">flags<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&amp;<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="21">XMIT_NAME_LIST<pos:position pos:line="31" pos:column="35"/></name></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">computed_mask_bits<pos:position pos:line="32" pos:column="35"/></name> <operator pos:line="32" pos:column="36">|=<pos:position pos:line="32" pos:column="38"/></operator> <call><name pos:line="32" pos:column="39">recv_ida_entries<pos:position pos:line="32" pos:column="55"/></name><argument_list pos:line="32" pos:column="55">(<argument><expr><name pos:line="32" pos:column="56">f<pos:position pos:line="32" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="59">&amp;<pos:position pos:line="32" pos:column="64"/></operator><name><name pos:line="32" pos:column="60">duo_item<pos:position pos:line="32" pos:column="68"/></name><operator pos:line="32" pos:column="68">-&gt;<pos:position pos:line="32" pos:column="73"/></operator><name pos:line="32" pos:column="70">racl<pos:position pos:line="32" pos:column="74"/></name><operator pos:line="32" pos:column="74">.<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="75">names<pos:position pos:line="32" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="82"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">HAVE_OSX_ACLS<pos:position pos:line="34" pos:column="21"/></name></cpp:ifdef>
	<comment type="block" pos:line="35" pos:column="9">/* If we received a superfluous mask, throw it away. */</comment>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">duo_item<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">racl<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">mask_obj<pos:position pos:line="36" pos:column="32"/></name></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <name pos:line="36" pos:column="35">NO_ENTRY<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
<cpp:else pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">else<pos:position pos:line="37" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">duo_item<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">-&gt;<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="23">racl<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">.<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">names<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">.<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">count<pos:position pos:line="38" pos:column="39"/></name></name> <operator pos:line="38" pos:column="40">&amp;&amp;<pos:position pos:line="38" pos:column="50"/></operator> <name><name pos:line="38" pos:column="43">duo_item<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">-&gt;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="53">racl<pos:position pos:line="38" pos:column="57"/></name><operator pos:line="38" pos:column="57">.<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="58">mask_obj<pos:position pos:line="38" pos:column="66"/></name></name> <operator pos:line="38" pos:column="67">==<pos:position pos:line="38" pos:column="69"/></operator> <name pos:line="38" pos:column="70">NO_ENTRY<pos:position pos:line="38" pos:column="78"/></name></expr>)<pos:position pos:line="38" pos:column="79"/></condition><then pos:line="38" pos:column="79"> <block pos:line="38" pos:column="80">{
		<comment type="block" pos:line="39" pos:column="17">/* Mask must be non-empty with lists. */</comment>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">type<pos:position pos:line="40" pos:column="25"/></name> <operator pos:line="40" pos:column="26">==<pos:position pos:line="40" pos:column="28"/></operator> <name pos:line="40" pos:column="29">SMB_ACL_TYPE_ACCESS<pos:position pos:line="40" pos:column="48"/></name></expr>)<pos:position pos:line="40" pos:column="49"/></condition><then pos:line="40" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="25">computed_mask_bits<pos:position pos:line="41" pos:column="43"/></name> <operator pos:line="41" pos:column="44">=<pos:position pos:line="41" pos:column="45"/></operator> <operator pos:line="41" pos:column="46">(<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">mode<pos:position pos:line="41" pos:column="51"/></name> <operator pos:line="41" pos:column="52">&gt;&gt;<pos:position pos:line="41" pos:column="57"/></operator> <literal type="number" pos:line="41" pos:column="55">3<pos:position pos:line="41" pos:column="56"/></literal><operator pos:line="41" pos:column="56">)<pos:position pos:line="41" pos:column="57"/></operator> <operator pos:line="41" pos:column="58">&amp;<pos:position pos:line="41" pos:column="63"/></operator> <literal type="number" pos:line="41" pos:column="60">7<pos:position pos:line="41" pos:column="61"/></literal></expr>;<pos:position pos:line="41" pos:column="62"/></expr_stmt></block></then>
		<else pos:line="42" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="25">computed_mask_bits<pos:position pos:line="43" pos:column="43"/></name> <operator pos:line="43" pos:column="44">|=<pos:position pos:line="43" pos:column="46"/></operator> <name><name pos:line="43" pos:column="47">duo_item<pos:position pos:line="43" pos:column="55"/></name><operator pos:line="43" pos:column="55">-&gt;<pos:position pos:line="43" pos:column="60"/></operator><name pos:line="43" pos:column="57">racl<pos:position pos:line="43" pos:column="61"/></name><operator pos:line="43" pos:column="61">.<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="62">group_obj<pos:position pos:line="43" pos:column="71"/></name></name> <operator pos:line="43" pos:column="72">&amp;<pos:position pos:line="43" pos:column="77"/></operator> <operator pos:line="43" pos:column="74">~<pos:position pos:line="43" pos:column="75"/></operator><name pos:line="43" pos:column="75">NO_ENTRY<pos:position pos:line="43" pos:column="83"/></name></expr>;<pos:position pos:line="43" pos:column="84"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name><name pos:line="44" pos:column="17">duo_item<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">racl<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">.<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="32">mask_obj<pos:position pos:line="44" pos:column="40"/></name></name> <operator pos:line="44" pos:column="41">=<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="43">computed_mask_bits<pos:position pos:line="44" pos:column="61"/></name></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name><name pos:line="48" pos:column="9">duo_item<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">-&gt;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="19">sacl<pos:position pos:line="48" pos:column="23"/></name></name> <operator pos:line="48" pos:column="24">=<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">NULL<pos:position pos:line="48" pos:column="30"/></name></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>

	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">ndx<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

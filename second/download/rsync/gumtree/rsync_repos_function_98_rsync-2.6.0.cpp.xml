<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_98_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">keep_backup<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">fname<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{

	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">initialised<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">keep_name<pos:position pos:line="6" pos:column="23"/></name> <index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">MAXPATHLEN<pos:position pos:line="6" pos:column="35"/></name></expr>]<pos:position pos:line="6" pos:column="36"/></index></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">STRUCT_STAT<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">file_struct<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">file<pos:position pos:line="8" pos:column="33"/></name></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">kept<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">ret_code<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">initialised<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">backup_dir_len<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">&amp;&amp;<pos:position pos:line="14" pos:column="46"/></operator> <name><name pos:line="14" pos:column="39">backup_dir<pos:position pos:line="14" pos:column="49"/></name><index pos:line="14" pos:column="49">[<expr><name pos:line="14" pos:column="50">backup_dir_len<pos:position pos:line="14" pos:column="64"/></name> <operator pos:line="14" pos:column="65">-<pos:position pos:line="14" pos:column="66"/></operator> <literal type="number" pos:line="14" pos:column="67">1<pos:position pos:line="14" pos:column="68"/></literal></expr>]<pos:position pos:line="14" pos:column="69"/></index></name> <operator pos:line="14" pos:column="70">==<pos:position pos:line="14" pos:column="72"/></operator> <literal type="char" pos:line="14" pos:column="73">'/'<pos:position pos:line="14" pos:column="76"/></literal></expr>)<pos:position pos:line="14" pos:column="77"/></condition><then pos:line="14" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="25">backup_dir<pos:position pos:line="15" pos:column="35"/></name><index pos:line="15" pos:column="35">[<expr><operator pos:line="15" pos:column="36">--<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">backup_dir_len<pos:position pos:line="15" pos:column="52"/></name></expr>]<pos:position pos:line="15" pos:column="53"/></index></name> <operator pos:line="15" pos:column="54">=<pos:position pos:line="15" pos:column="55"/></operator> <literal type="char" pos:line="15" pos:column="56">'\0'<pos:position pos:line="15" pos:column="60"/></literal></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt></block></then></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">verbose<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">&gt;<pos:position pos:line="16" pos:column="33"/></operator> <literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">rprintf<pos:position pos:line="17" pos:column="32"/></name> <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">FINFO<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="41">"backup_dir is %s\n"<pos:position pos:line="17" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="63">backup_dir<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="75"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">initialised<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">1<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* return if no file to keep */</comment>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">SUPPORT_LINKS<pos:position pos:line="22" pos:column="18"/></name></expr></cpp:if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">do_lstat<pos:position pos:line="23" pos:column="21"/></name> <argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">fname<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="30">&amp;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="31">st<pos:position pos:line="23" pos:column="33"/></name></expr></argument>)<pos:position pos:line="23" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35"> <block type="pseudo"><return pos:line="23" pos:column="36">return <expr><literal type="number" pos:line="23" pos:column="43">1<pos:position pos:line="23" pos:column="44"/></literal></expr>;<pos:position pos:line="23" pos:column="45"/></return></block></then></if>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else<pos:position pos:line="24" pos:column="6"/></cpp:directive></cpp:else>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">do_stat<pos:position pos:line="25" pos:column="20"/></name> <argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">fname<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="29">&amp;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="30">st<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block type="pseudo"><return pos:line="25" pos:column="35">return <expr><literal type="number" pos:line="25" pos:column="42">1<pos:position pos:line="25" pos:column="43"/></literal></expr>;<pos:position pos:line="25" pos:column="44"/></return></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="28" pos:column="9">file<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">make_file<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">fname<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">NULL<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">NO_EXCLUDES<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>

	<comment type="block" pos:line="30" pos:column="9">/* the file could have disappeared */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">file<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19"> <block type="pseudo"><return pos:line="31" pos:column="20">return <expr><literal type="number" pos:line="31" pos:column="27">1<pos:position pos:line="31" pos:column="28"/></literal></expr>;<pos:position pos:line="31" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="33" pos:column="9">/* make a complete pathname for backup file */</comment>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">backup_dir_len<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">+<pos:position pos:line="34" pos:column="28"/></operator><call><name pos:line="34" pos:column="28">strlen<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">fname<pos:position pos:line="34" pos:column="40"/></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call><operator pos:line="34" pos:column="41">+<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">backup_suffix_len<pos:position pos:line="34" pos:column="59"/></name> <operator pos:line="34" pos:column="60">&gt;<pos:position pos:line="34" pos:column="64"/></operator> <name pos:line="34" pos:column="62">MAXPATHLEN<pos:position pos:line="34" pos:column="72"/></name><operator pos:line="34" pos:column="72">-<pos:position pos:line="34" pos:column="73"/></operator><literal type="number" pos:line="34" pos:column="73">1<pos:position pos:line="34" pos:column="74"/></literal></expr>)<pos:position pos:line="34" pos:column="75"/></condition><then pos:line="34" pos:column="75"> <block pos:line="34" pos:column="76">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">rprintf<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">FERROR<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="34">"keep_backup filename too long\n"<pos:position pos:line="35" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
		<return pos:line="36" pos:column="17">return <expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">snprintf<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">keep_name<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="29">sizeof <argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">keep_name<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="49">"%s/%s%s"<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>,
	    <argument><expr><name pos:line="40" pos:column="13">backup_dir<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="25">fname<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">backup_suffix<pos:position pos:line="40" pos:column="45"/></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="47"/></expr_stmt>

<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">HAVE_MKNOD<pos:position pos:line="42" pos:column="18"/></name></cpp:ifdef>
	<comment type="block" pos:line="43" pos:column="9">/* Check to see if this is a device file, or link */</comment>
	<if pos:line="44" pos:column="9">if<condition pos:line="44" pos:column="11">(<expr><call><name pos:line="44" pos:column="12">IS_DEVICE<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name><name pos:line="44" pos:column="22">file<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">mode<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="34"/></condition><then pos:line="44" pos:column="34"> <block pos:line="44" pos:column="35">{
		<if pos:line="45" pos:column="17">if<condition pos:line="45" pos:column="19">(<expr><name pos:line="45" pos:column="20">am_root<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">&amp;&amp;<pos:position pos:line="45" pos:column="38"/></operator> <name pos:line="45" pos:column="31">preserve_devices<pos:position pos:line="45" pos:column="47"/></name></expr>)<pos:position pos:line="45" pos:column="48"/></condition><then pos:line="45" pos:column="48"> <block pos:line="45" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">make_bak_dir<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">fname<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">backup_dir<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
			<if pos:line="47" pos:column="25">if<condition pos:line="47" pos:column="27">(<expr><call><name pos:line="47" pos:column="28">do_mknod<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">keep_name<pos:position pos:line="47" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="48">file<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">-&gt;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="54">mode<pos:position pos:line="47" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="60">file<pos:position pos:line="47" pos:column="64"/></name><operator pos:line="47" pos:column="64">-&gt;<pos:position pos:line="47" pos:column="69"/></operator><name pos:line="47" pos:column="66">rdev<pos:position pos:line="47" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="71"/></argument_list></call> <operator pos:line="47" pos:column="72">!=<pos:position pos:line="47" pos:column="74"/></operator> <literal type="number" pos:line="47" pos:column="75">0<pos:position pos:line="47" pos:column="76"/></literal></expr>)<pos:position pos:line="47" pos:column="77"/></condition><then pos:line="47" pos:column="77"> <block pos:line="47" pos:column="78">{
				<expr_stmt><expr><call><name pos:line="48" pos:column="33">rprintf<pos:position pos:line="48" pos:column="40"/></name><argument_list pos:line="48" pos:column="40">(<argument><expr><name pos:line="48" pos:column="41">FERROR<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="49">"mknod %s failed: %s\n"<pos:position pos:line="48" pos:column="72"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="49" pos:column="41">full_fname<pos:position pos:line="49" pos:column="51"/></name><argument_list pos:line="49" pos:column="51">(<argument><expr><name pos:line="49" pos:column="52">keep_name<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="64">strerror<pos:position pos:line="49" pos:column="72"/></name><argument_list pos:line="49" pos:column="72">(<argument><expr><name pos:line="49" pos:column="73">errno<pos:position pos:line="49" pos:column="78"/></name></expr></argument>)<pos:position pos:line="49" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="81"/></expr_stmt>
			}<pos:position pos:line="50" pos:column="26"/></block></then> <elseif pos:line="50" pos:column="27">else <if pos:line="50" pos:column="32">if<condition pos:line="50" pos:column="34">(<expr><name pos:line="50" pos:column="35">verbose<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">&gt;<pos:position pos:line="50" pos:column="46"/></operator><literal type="number" pos:line="50" pos:column="43">2<pos:position pos:line="50" pos:column="44"/></literal></expr>)<pos:position pos:line="50" pos:column="45"/></condition><then pos:line="50" pos:column="45"> <block pos:line="50" pos:column="46">{
				<expr_stmt><expr><call><name pos:line="51" pos:column="33">rprintf<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">FINFO<pos:position pos:line="51" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="48">"make_backup: DEVICE %s successful.\n"<pos:position pos:line="51" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="88">fname<pos:position pos:line="51" pos:column="93"/></name></expr></argument>)<pos:position pos:line="51" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="95"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="54" pos:column="17">kept<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <literal type="number" pos:line="54" pos:column="24">1<pos:position pos:line="54" pos:column="25"/></literal></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">do_unlink<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">fname<pos:position pos:line="55" pos:column="32"/></name></expr></argument>)<pos:position pos:line="55" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="59" pos:column="9">if<condition pos:line="59" pos:column="11">(<expr><operator pos:line="59" pos:column="12">!<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="13">kept<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">&amp;&amp;<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="21">S_ISDIR<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name><name pos:line="59" pos:column="29">file<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">-&gt;<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="35">mode<pos:position pos:line="59" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="41"/></condition><then pos:line="59" pos:column="41"> <block pos:line="59" pos:column="42">{
		<comment type="block" pos:line="60" pos:column="17">/* make an empty directory */</comment>
		<expr_stmt><expr><call><name pos:line="61" pos:column="17">make_bak_dir<pos:position pos:line="61" pos:column="29"/></name><argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">fname<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">backup_dir<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">do_mkdir<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">keep_name<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="37">file<pos:position pos:line="62" pos:column="41"/></name><operator pos:line="62" pos:column="41">-&gt;<pos:position pos:line="62" pos:column="46"/></operator><name pos:line="62" pos:column="43">mode<pos:position pos:line="62" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="63" pos:column="17">ret_code<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <call><name pos:line="63" pos:column="28">do_rmdir<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><name pos:line="63" pos:column="37">fname<pos:position pos:line="63" pos:column="42"/></name></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>

		<if pos:line="65" pos:column="17">if<condition pos:line="65" pos:column="19">(<expr><name pos:line="65" pos:column="20">verbose<pos:position pos:line="65" pos:column="27"/></name><operator pos:line="65" pos:column="27">&gt;<pos:position pos:line="65" pos:column="31"/></operator><literal type="number" pos:line="65" pos:column="28">2<pos:position pos:line="65" pos:column="29"/></literal></expr>)<pos:position pos:line="65" pos:column="30"/></condition><then pos:line="65" pos:column="30"> <block pos:line="65" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">rprintf<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">FINFO<pos:position pos:line="66" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="40">"make_backup: RMDIR %s returns %i\n"<pos:position pos:line="66" pos:column="76"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="67" pos:column="33">full_fname<pos:position pos:line="67" pos:column="43"/></name><argument_list pos:line="67" pos:column="43">(<argument><expr><name pos:line="67" pos:column="44">fname<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="52">ret_code<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="69" pos:column="17">kept<pos:position pos:line="69" pos:column="21"/></name> <operator pos:line="69" pos:column="22">=<pos:position pos:line="69" pos:column="23"/></operator> <literal type="number" pos:line="69" pos:column="24">1<pos:position pos:line="69" pos:column="25"/></literal></expr>;<pos:position pos:line="69" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>

<cpp:if pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">if<pos:position pos:line="72" pos:column="4"/></cpp:directive> <expr><name pos:line="72" pos:column="5">SUPPORT_LINKS<pos:position pos:line="72" pos:column="18"/></name></expr></cpp:if>
	<if pos:line="73" pos:column="9">if<condition pos:line="73" pos:column="11">(<expr><operator pos:line="73" pos:column="12">!<pos:position pos:line="73" pos:column="13"/></operator><name pos:line="73" pos:column="13">kept<pos:position pos:line="73" pos:column="17"/></name> <operator pos:line="73" pos:column="18">&amp;&amp;<pos:position pos:line="73" pos:column="28"/></operator> <name pos:line="73" pos:column="21">preserve_links<pos:position pos:line="73" pos:column="35"/></name> <operator pos:line="73" pos:column="36">&amp;&amp;<pos:position pos:line="73" pos:column="46"/></operator> <call><name pos:line="73" pos:column="39">S_ISLNK<pos:position pos:line="73" pos:column="46"/></name><argument_list pos:line="73" pos:column="46">(<argument><expr><name><name pos:line="73" pos:column="47">file<pos:position pos:line="73" pos:column="51"/></name><operator pos:line="73" pos:column="51">-&gt;<pos:position pos:line="73" pos:column="56"/></operator><name pos:line="73" pos:column="53">mode<pos:position pos:line="73" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="59"/></condition><then pos:line="73" pos:column="59"> <block pos:line="73" pos:column="60">{
		<decl_stmt><decl><specifier pos:line="74" pos:column="17">extern<pos:position pos:line="74" pos:column="23"/></specifier> <type><name pos:line="74" pos:column="24">int<pos:position pos:line="74" pos:column="27"/></name></type> <name pos:line="74" pos:column="28">safe_symlinks<pos:position pos:line="74" pos:column="41"/></name></decl>;<pos:position pos:line="74" pos:column="42"/></decl_stmt>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">safe_symlinks<pos:position pos:line="75" pos:column="34"/></name> <operator pos:line="75" pos:column="35">&amp;&amp;<pos:position pos:line="75" pos:column="45"/></operator> <call><name pos:line="75" pos:column="38">unsafe_symlink<pos:position pos:line="75" pos:column="52"/></name><argument_list pos:line="75" pos:column="52">(<argument><expr><name><name pos:line="75" pos:column="53">file<pos:position pos:line="75" pos:column="57"/></name><operator pos:line="75" pos:column="57">-&gt;<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="59">link<pos:position pos:line="75" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="65">keep_name<pos:position pos:line="75" pos:column="74"/></name></expr></argument>)<pos:position pos:line="75" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="76"/></condition><then pos:line="75" pos:column="76"> <block pos:line="75" pos:column="77">{
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">verbose<pos:position pos:line="76" pos:column="36"/></name></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37"> <block pos:line="76" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="77" pos:column="33">rprintf<pos:position pos:line="77" pos:column="40"/></name><argument_list pos:line="77" pos:column="40">(<argument><expr><name pos:line="77" pos:column="41">FINFO<pos:position pos:line="77" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="48">"ignoring unsafe symlink %s -&gt; %s\n"<pos:position pos:line="77" pos:column="87"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="78" pos:column="41">full_fname<pos:position pos:line="78" pos:column="51"/></name><argument_list pos:line="78" pos:column="51">(<argument><expr><name pos:line="78" pos:column="52">keep_name<pos:position pos:line="78" pos:column="61"/></name></expr></argument>)<pos:position pos:line="78" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="64">file<pos:position pos:line="78" pos:column="68"/></name><operator pos:line="78" pos:column="68">-&gt;<pos:position pos:line="78" pos:column="73"/></operator><name pos:line="78" pos:column="70">link<pos:position pos:line="78" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="79" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="80" pos:column="25">kept<pos:position pos:line="80" pos:column="29"/></name> <operator pos:line="80" pos:column="30">=<pos:position pos:line="80" pos:column="31"/></operator> <literal type="number" pos:line="80" pos:column="32">1<pos:position pos:line="80" pos:column="33"/></literal></expr>;<pos:position pos:line="80" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="82" pos:column="17">make_bak_dir<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name pos:line="82" pos:column="30">fname<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="37">backup_dir<pos:position pos:line="82" pos:column="47"/></name></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="49"/></expr_stmt>
		<if pos:line="83" pos:column="17">if<condition pos:line="83" pos:column="19">(<expr><call><name pos:line="83" pos:column="20">do_symlink<pos:position pos:line="83" pos:column="30"/></name><argument_list pos:line="83" pos:column="30">(<argument><expr><name><name pos:line="83" pos:column="31">file<pos:position pos:line="83" pos:column="35"/></name><operator pos:line="83" pos:column="35">-&gt;<pos:position pos:line="83" pos:column="40"/></operator><name pos:line="83" pos:column="37">link<pos:position pos:line="83" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="43">keep_name<pos:position pos:line="83" pos:column="52"/></name></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call> <operator pos:line="83" pos:column="54">!=<pos:position pos:line="83" pos:column="56"/></operator> <literal type="number" pos:line="83" pos:column="57">0<pos:position pos:line="83" pos:column="58"/></literal></expr>)<pos:position pos:line="83" pos:column="59"/></condition><then pos:line="83" pos:column="59"> <block pos:line="83" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">rprintf<pos:position pos:line="84" pos:column="32"/></name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">FERROR<pos:position pos:line="84" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="41">"link %s -&gt; %s : %s\n"<pos:position pos:line="84" pos:column="66"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="85" pos:column="33">full_fname<pos:position pos:line="85" pos:column="43"/></name><argument_list pos:line="85" pos:column="43">(<argument><expr><name pos:line="85" pos:column="44">keep_name<pos:position pos:line="85" pos:column="53"/></name></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="56">file<pos:position pos:line="85" pos:column="60"/></name><operator pos:line="85" pos:column="60">-&gt;<pos:position pos:line="85" pos:column="65"/></operator><name pos:line="85" pos:column="62">link<pos:position pos:line="85" pos:column="66"/></name></name></expr></argument>, <argument><expr><call><name pos:line="85" pos:column="68">strerror<pos:position pos:line="85" pos:column="76"/></name><argument_list pos:line="85" pos:column="76">(<argument><expr><name pos:line="85" pos:column="77">errno<pos:position pos:line="85" pos:column="82"/></name></expr></argument>)<pos:position pos:line="85" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="87" pos:column="17">do_unlink<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">fname<pos:position pos:line="87" pos:column="32"/></name></expr></argument>)<pos:position pos:line="87" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="88" pos:column="17">kept<pos:position pos:line="88" pos:column="21"/></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <literal type="number" pos:line="88" pos:column="24">1<pos:position pos:line="88" pos:column="25"/></literal></expr>;<pos:position pos:line="88" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="91" pos:column="9">if<condition pos:line="91" pos:column="11">(<expr><operator pos:line="91" pos:column="12">!<pos:position pos:line="91" pos:column="13"/></operator><name pos:line="91" pos:column="13">kept<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">&amp;&amp;<pos:position pos:line="91" pos:column="28"/></operator> <name pos:line="91" pos:column="21">preserve_hard_links<pos:position pos:line="91" pos:column="40"/></name> <operator pos:line="91" pos:column="41">&amp;&amp;<pos:position pos:line="91" pos:column="51"/></operator> <call><name pos:line="91" pos:column="44">check_hard_link<pos:position pos:line="91" pos:column="59"/></name><argument_list pos:line="91" pos:column="59">(<argument><expr><name pos:line="91" pos:column="60">file<pos:position pos:line="91" pos:column="64"/></name></expr></argument>)<pos:position pos:line="91" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="66"/></condition><then pos:line="91" pos:column="66"> <block pos:line="91" pos:column="67">{
		<if pos:line="92" pos:column="17">if<condition pos:line="92" pos:column="19">(<expr><name pos:line="92" pos:column="20">verbose<pos:position pos:line="92" pos:column="27"/></name> <operator pos:line="92" pos:column="28">&gt;<pos:position pos:line="92" pos:column="32"/></operator> <literal type="number" pos:line="92" pos:column="30">1<pos:position pos:line="92" pos:column="31"/></literal></expr>)<pos:position pos:line="92" pos:column="32"/></condition><then pos:line="92" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="25">rprintf<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name pos:line="93" pos:column="33">FINFO<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="40">"%s is a hard link\n"<pos:position pos:line="93" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="63">f_name<pos:position pos:line="93" pos:column="69"/></name><argument_list pos:line="93" pos:column="69">(<argument><expr><name pos:line="93" pos:column="70">file<pos:position pos:line="93" pos:column="74"/></name></expr></argument>)<pos:position pos:line="93" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="77"/></expr_stmt></block></then></if>
	}<pos:position pos:line="94" pos:column="10"/></block></then></if>

	<if pos:line="96" pos:column="9">if<condition pos:line="96" pos:column="11">(<expr><operator pos:line="96" pos:column="12">!<pos:position pos:line="96" pos:column="13"/></operator><name pos:line="96" pos:column="13">kept<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">&amp;&amp;<pos:position pos:line="96" pos:column="28"/></operator> <operator pos:line="96" pos:column="21">!<pos:position pos:line="96" pos:column="22"/></operator><call><name pos:line="96" pos:column="22">S_ISREG<pos:position pos:line="96" pos:column="29"/></name><argument_list pos:line="96" pos:column="29">(<argument><expr><name><name pos:line="96" pos:column="30">file<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">-&gt;<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="36">mode<pos:position pos:line="96" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="42"/></condition><then pos:line="96" pos:column="42"> <block pos:line="96" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">rprintf<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">FINFO<pos:position pos:line="97" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="32">"make_bak: skipping non-regular file %s\n"<pos:position pos:line="97" pos:column="74"/></literal></expr></argument>,
		    <argument><expr><name pos:line="98" pos:column="21">fname<pos:position pos:line="98" pos:column="26"/></name></expr></argument>)<pos:position pos:line="98" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="101" pos:column="9">/* move to keep tree if a file */</comment>
	<if pos:line="102" pos:column="9">if<condition pos:line="102" pos:column="11">(<expr><operator pos:line="102" pos:column="12">!<pos:position pos:line="102" pos:column="13"/></operator><name pos:line="102" pos:column="13">kept<pos:position pos:line="102" pos:column="17"/></name></expr>)<pos:position pos:line="102" pos:column="18"/></condition><then pos:line="102" pos:column="18"> <block pos:line="102" pos:column="19">{
		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><operator pos:line="103" pos:column="21">!<pos:position pos:line="103" pos:column="22"/></operator><call><name pos:line="103" pos:column="22">robust_move<pos:position pos:line="103" pos:column="33"/></name> <argument_list pos:line="103" pos:column="34">(<argument><expr><name pos:line="103" pos:column="35">fname<pos:position pos:line="103" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="42">keep_name<pos:position pos:line="103" pos:column="51"/></name></expr></argument>)<pos:position pos:line="103" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="53"/></condition><then pos:line="103" pos:column="53"> <block pos:line="103" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">rprintf<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">FERROR<pos:position pos:line="104" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="41">"keep_backup failed: %s -&gt; \"%s\": %s\n"<pos:position pos:line="104" pos:column="84"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="105" pos:column="33">full_fname<pos:position pos:line="105" pos:column="43"/></name><argument_list pos:line="105" pos:column="43">(<argument><expr><name pos:line="105" pos:column="44">fname<pos:position pos:line="105" pos:column="49"/></name></expr></argument>)<pos:position pos:line="105" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="105" pos:column="52">keep_name<pos:position pos:line="105" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="105" pos:column="63">strerror<pos:position pos:line="105" pos:column="71"/></name><argument_list pos:line="105" pos:column="71">(<argument><expr><name pos:line="105" pos:column="72">errno<pos:position pos:line="105" pos:column="77"/></name></expr></argument>)<pos:position pos:line="105" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="106" pos:column="18"/></block></then></if>
	}<pos:position pos:line="107" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="108" pos:column="9">set_perms<pos:position pos:line="108" pos:column="18"/></name> <argument_list pos:line="108" pos:column="19">(<argument><expr><name pos:line="108" pos:column="20">keep_name<pos:position pos:line="108" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="31">file<pos:position pos:line="108" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="37">NULL<pos:position pos:line="108" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="43">0<pos:position pos:line="108" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="109" pos:column="9">free_file<pos:position pos:line="109" pos:column="18"/></name> <argument_list pos:line="109" pos:column="19">(<argument><expr><name pos:line="109" pos:column="20">file<pos:position pos:line="109" pos:column="24"/></name></expr></argument>)<pos:position pos:line="109" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="110" pos:column="9">free<pos:position pos:line="110" pos:column="13"/></name> <argument_list pos:line="110" pos:column="14">(<argument><expr><name pos:line="110" pos:column="15">file<pos:position pos:line="110" pos:column="19"/></name></expr></argument>)<pos:position pos:line="110" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="21"/></expr_stmt>

	<if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name pos:line="112" pos:column="13">verbose<pos:position pos:line="112" pos:column="20"/></name> <operator pos:line="112" pos:column="21">&gt;<pos:position pos:line="112" pos:column="25"/></operator> <literal type="number" pos:line="112" pos:column="23">1<pos:position pos:line="112" pos:column="24"/></literal></expr>)<pos:position pos:line="112" pos:column="25"/></condition><then pos:line="112" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="17">rprintf<pos:position pos:line="113" pos:column="24"/></name> <argument_list pos:line="113" pos:column="25">(<argument><expr><name pos:line="113" pos:column="26">FINFO<pos:position pos:line="113" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="33">"keep_backup %s -&gt; %s\n"<pos:position pos:line="113" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="59">fname<pos:position pos:line="113" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="66">keep_name<pos:position pos:line="113" pos:column="75"/></name></expr></argument>)<pos:position pos:line="113" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="77"/></expr_stmt></block></then></if>
	<return pos:line="114" pos:column="9">return <expr><literal type="number" pos:line="114" pos:column="16">1<pos:position pos:line="114" pos:column="17"/></literal></expr>;<pos:position pos:line="114" pos:column="18"/></return>
}<pos:position pos:line="115" pos:column="2"/></block></function></unit>

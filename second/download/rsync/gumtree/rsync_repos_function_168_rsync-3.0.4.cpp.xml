<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_168_rsync-3.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">make_simple_backup<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">fname<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">rename_errno<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">fnamebak<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><call><name pos:line="4" pos:column="32">get_backup_name<pos:position pos:line="4" pos:column="47"/></name><argument_list pos:line="4" pos:column="47">(<argument><expr><name pos:line="4" pos:column="48">fname<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">fnamebak<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr>;<pos:position pos:line="7" pos:column="26"/></return></block></then></if>

	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition> <block pos:line="9" pos:column="19">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">do_rename<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">fname<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">fnamebak<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call> <operator pos:line="10" pos:column="48">==<pos:position pos:line="10" pos:column="50"/></operator> <literal type="number" pos:line="10" pos:column="51">0<pos:position pos:line="10" pos:column="52"/></literal></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53"> <block pos:line="10" pos:column="54">{
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><name pos:line="11" pos:column="29">verbose<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&gt;<pos:position pos:line="11" pos:column="41"/></operator> <literal type="number" pos:line="11" pos:column="39">1<pos:position pos:line="11" pos:column="40"/></literal></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="12" pos:column="33">rprintf<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">FINFO<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="48">"backed up %s to %s\n"<pos:position pos:line="12" pos:column="70"/></literal></expr></argument>,
					<argument><expr><name pos:line="13" pos:column="41">fname<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">fnamebak<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="14" pos:column="26"/></block></then></if>
			<break pos:line="15" pos:column="25">break;<pos:position pos:line="15" pos:column="31"/></break>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="17" pos:column="17">/* cygwin (at least version b19) reports EINVAL */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">errno<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">==<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="30">ENOENT<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">||<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="40">errno<pos:position pos:line="18" pos:column="45"/></name> <operator pos:line="18" pos:column="46">==<pos:position pos:line="18" pos:column="48"/></operator> <name pos:line="18" pos:column="49">EINVAL<pos:position pos:line="18" pos:column="55"/></name></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56">
			<block type="pseudo"><break pos:line="19" pos:column="25">break;<pos:position pos:line="19" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="21" pos:column="17">rename_errno<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">errno<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">errno<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">==<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">EISDIR<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">&amp;&amp;<pos:position pos:line="22" pos:column="47"/></operator> <call><name pos:line="22" pos:column="40">do_rmdir<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><name pos:line="22" pos:column="49">fnamebak<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call> <operator pos:line="22" pos:column="59">==<pos:position pos:line="22" pos:column="61"/></operator> <literal type="number" pos:line="22" pos:column="62">0<pos:position pos:line="22" pos:column="63"/></literal></expr>)<pos:position pos:line="22" pos:column="64"/></condition><then pos:line="22" pos:column="64">
			<block type="pseudo"><continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue></block></then></if>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">errno<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">==<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">ENOTDIR<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">&amp;&amp;<pos:position pos:line="24" pos:column="48"/></operator> <call><name pos:line="24" pos:column="41">do_unlink<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">fnamebak<pos:position pos:line="24" pos:column="59"/></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call> <operator pos:line="24" pos:column="61">==<pos:position pos:line="24" pos:column="63"/></operator> <literal type="number" pos:line="24" pos:column="64">0<pos:position pos:line="24" pos:column="65"/></literal></expr>)<pos:position pos:line="24" pos:column="66"/></condition><then pos:line="24" pos:column="66">
			<block type="pseudo"><continue pos:line="25" pos:column="25">continue;<pos:position pos:line="25" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="27" pos:column="17">rsyserr<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">FERROR<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="33">rename_errno<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="47">"rename %s to backup %s"<pos:position pos:line="27" pos:column="71"/></literal></expr></argument>,
			<argument><expr><name pos:line="28" pos:column="25">fname<pos:position pos:line="28" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="32">fnamebak<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">errno<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">rename_errno<pos:position pos:line="29" pos:column="37"/></name></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">0<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></while>

	<return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_533_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fsort_tmp<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">file_struct<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier><modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">fp<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">size_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">num<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
		      <parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">file_struct<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier><modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">tmp<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">file_struct<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier><modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">f1<pos:position pos:line="4" pos:column="32"/></name></decl>, <modifier pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></modifier><modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="36">f2<pos:position pos:line="4" pos:column="38"/></name></decl>, <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier><modifier pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="42">t<pos:position pos:line="4" pos:column="43"/></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">n1<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">n2<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">n1<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">num<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">/<pos:position pos:line="7" pos:column="19"/></operator> <literal type="number" pos:line="7" pos:column="20">2<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">n2<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">num<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">-<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">n1<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">f1<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">fp<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">f2<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">fp<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">+<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">n1<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">n1<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&gt;<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">fsort_tmp<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">f1<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">n1<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">tmp<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">n2<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&gt;<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="18">1<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">fsort_tmp<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">f2<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">n2<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">tmp<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt></block></then></if>

	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><call><name pos:line="17" pos:column="16">f_name_cmp<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><operator pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">f1<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="32">*<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">f2<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call> <operator pos:line="17" pos:column="37">&lt;=<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="40">0<pos:position pos:line="17" pos:column="41"/></literal></expr>)<pos:position pos:line="17" pos:column="42"/></condition> <block pos:line="17" pos:column="43">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><operator pos:line="18" pos:column="22">--<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">n1<pos:position pos:line="18" pos:column="26"/></name></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27">
			<block type="pseudo"><return pos:line="19" pos:column="25">return;<pos:position pos:line="19" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="20" pos:column="17">f1<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">++<pos:position pos:line="20" pos:column="21"/></operator></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="23" pos:column="9">t<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">tmp<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">memcpy<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">t<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="19">f1<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">n1<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">*<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">PTR_SIZE<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">f1<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">++<pos:position pos:line="26" pos:column="14"/></operator> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">f2<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">++<pos:position pos:line="26" pos:column="22"/></operator></expr><operator pos:line="26" pos:column="22">,<pos:position pos:line="26" pos:column="23"/></operator> <expr><name pos:line="26" pos:column="24">n2<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">--<pos:position pos:line="26" pos:column="28"/></operator></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>

	<while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><name pos:line="28" pos:column="16">n1<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&gt;<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal> <operator pos:line="28" pos:column="23">&amp;&amp;<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="26">n2<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">&gt;<pos:position pos:line="28" pos:column="33"/></operator> <literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr>)<pos:position pos:line="28" pos:column="33"/></condition> <block pos:line="28" pos:column="34">{
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">f_name_cmp<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">*<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">t<pos:position pos:line="29" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="36">*<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">f2<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call> <operator pos:line="29" pos:column="41">&lt;=<pos:position pos:line="29" pos:column="46"/></operator> <literal type="number" pos:line="29" pos:column="44">0<pos:position pos:line="29" pos:column="45"/></literal></expr>)<pos:position pos:line="29" pos:column="46"/></condition><then pos:line="29" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="30" pos:column="25">*<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="26">f1<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">++<pos:position pos:line="30" pos:column="30"/></operator> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <operator pos:line="30" pos:column="33">*<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">t<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">++<pos:position pos:line="30" pos:column="37"/></operator></expr><operator pos:line="30" pos:column="37">,<pos:position pos:line="30" pos:column="38"/></operator> <expr><name pos:line="30" pos:column="39">n1<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">--<pos:position pos:line="30" pos:column="43"/></operator></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt></block></then>
		<else pos:line="31" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="32" pos:column="25">*<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">f1<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">++<pos:position pos:line="32" pos:column="30"/></operator> <operator pos:line="32" pos:column="31">=<pos:position pos:line="32" pos:column="32"/></operator> <operator pos:line="32" pos:column="33">*<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">f2<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">++<pos:position pos:line="32" pos:column="38"/></operator></expr><operator pos:line="32" pos:column="38">,<pos:position pos:line="32" pos:column="39"/></operator> <expr><name pos:line="32" pos:column="40">n2<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">--<pos:position pos:line="32" pos:column="44"/></operator></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt></block></else></if>
	}<pos:position pos:line="33" pos:column="10"/></block></while>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">n1<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">&gt;<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>)<pos:position pos:line="35" pos:column="20"/></condition><then pos:line="35" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">memcpy<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">f1<pos:position pos:line="36" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="28">t<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">n1<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">*<pos:position pos:line="36" pos:column="35"/></operator> <name pos:line="36" pos:column="36">PTR_SIZE<pos:position pos:line="36" pos:column="44"/></name></expr></argument>)<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt></block></then></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

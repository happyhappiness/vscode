<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_271_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">get_xattr<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">fname<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">stat_x<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">sxp<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="3" pos:column="9">sxp<pos:position pos:line="3" pos:column="12"/></name><operator pos:line="3" pos:column="12">-&gt;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="14">xattr<pos:position pos:line="3" pos:column="19"/></name></name> <operator pos:line="3" pos:column="20">=<pos:position pos:line="3" pos:column="21"/></operator> <operator pos:line="3" pos:column="22">new<pos:position pos:line="3" pos:column="25"/></operator><operator pos:line="3" pos:column="25">(<pos:position pos:line="3" pos:column="26"/></operator><name pos:line="3" pos:column="26">item_list<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">)<pos:position pos:line="3" pos:column="36"/></operator></expr>;<pos:position pos:line="3" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">sxp<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">xattr<pos:position pos:line="4" pos:column="20"/></name></name> <operator pos:line="4" pos:column="21">=<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">empty_xattr<pos:position pos:line="4" pos:column="34"/></name></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">S_ISREG<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name><name pos:line="6" pos:column="21">sxp<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">st<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">st_mode<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call> <operator pos:line="6" pos:column="38">||<pos:position pos:line="6" pos:column="40"/></operator> <call><name pos:line="6" pos:column="41">S_ISDIR<pos:position pos:line="6" pos:column="48"/></name><argument_list pos:line="6" pos:column="48">(<argument><expr><name><name pos:line="6" pos:column="49">sxp<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">st<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">.<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">st_mode<pos:position pos:line="6" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="66"/></condition><then pos:line="6" pos:column="66"> <block pos:line="6" pos:column="67">{
		<comment type="block" pos:line="7" pos:column="17">/* Everyone supports this. */</comment>
	}<pos:position pos:line="8" pos:column="10"/></block></then> <elseif pos:line="8" pos:column="11">else <if pos:line="8" pos:column="16">if <condition pos:line="8" pos:column="19">(<expr><call><name pos:line="8" pos:column="20">S_ISLNK<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name><name pos:line="8" pos:column="28">sxp<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">st<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">st_mode<pos:position pos:line="8" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <block pos:line="8" pos:column="46">{
<cpp:ifndef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifndef<pos:position pos:line="9" pos:column="8"/></cpp:directive> <name pos:line="9" pos:column="9">NO_SYMLINK_XATTRS<pos:position pos:line="9" pos:column="26"/></name></cpp:ifndef>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">preserve_links<pos:position pos:line="10" pos:column="36"/></name></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><return pos:line="12" pos:column="25">return <expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>;<pos:position pos:line="12" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if></elseif> <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><call><name pos:line="13" pos:column="20">IS_SPECIAL<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name><name pos:line="13" pos:column="31">sxp<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">st<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">.<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">st_mode<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <block pos:line="13" pos:column="49">{
<cpp:ifndef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifndef<pos:position pos:line="14" pos:column="8"/></cpp:directive> <name pos:line="14" pos:column="9">NO_SPECIAL_XATTRS<pos:position pos:line="14" pos:column="26"/></name></cpp:ifndef>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">preserve_specials<pos:position pos:line="15" pos:column="39"/></name></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40">
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><call><name pos:line="18" pos:column="20">IS_DEVICE<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">sxp<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">st<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">st_mode<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47"> <block pos:line="18" pos:column="48">{
<cpp:ifndef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifndef<pos:position pos:line="19" pos:column="8"/></cpp:directive> <name pos:line="19" pos:column="9">NO_DEVICE_XATTRS<pos:position pos:line="19" pos:column="25"/></name></cpp:ifndef>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">preserve_devices<pos:position pos:line="20" pos:column="38"/></name></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39">
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><return pos:line="22" pos:column="25">return <expr><literal type="number" pos:line="22" pos:column="32">0<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif> <elseif pos:line="23" pos:column="11">else <if pos:line="23" pos:column="16">if <condition pos:line="23" pos:column="19">(<expr><call><name pos:line="23" pos:column="20">IS_MISSING_FILE<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">sxp<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">st<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45">
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return></block></then></if></elseif></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">rsync_xal_get<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">fname<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="34">sxp<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">xattr<pos:position pos:line="26" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call> <operator pos:line="26" pos:column="46">&lt;<pos:position pos:line="26" pos:column="50"/></operator> <literal type="number" pos:line="26" pos:column="48">0<pos:position pos:line="26" pos:column="49"/></literal></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50"> <block pos:line="26" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">free_xattr<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">sxp<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
		<return pos:line="28" pos:column="17">return <expr><operator pos:line="28" pos:column="24">-<pos:position pos:line="28" pos:column="25"/></operator><literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></return>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<return pos:line="30" pos:column="9">return <expr><literal type="number" pos:line="30" pos:column="16">0<pos:position pos:line="30" pos:column="17"/></literal></expr>;<pos:position pos:line="30" pos:column="18"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_229_rsync-1.7.4.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">uLong<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">adler32<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">adler<pos:position pos:line="1" pos:column="20"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="22">buf<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">len<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">uLong<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">adler<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">Bytef<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">buf<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uInt<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">len<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uLong<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">s1<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name pos:line="6" pos:column="16">adler<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="24">0xffff<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uLong<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">s2<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">adler<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&gt;&gt;<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="26">16<pos:position pos:line="7" pos:column="28"/></literal><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator> <operator pos:line="7" pos:column="30">&amp;<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="32">0xffff<pos:position pos:line="7" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">k<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">buf<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">==<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">Z_NULL<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23"> <block type="pseudo"><return pos:line="10" pos:column="24">return <expr><literal type="number" pos:line="10" pos:column="31">1L<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></return></block></then></if>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">len<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&gt;<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>)<pos:position pos:line="12" pos:column="20"/></condition> <block pos:line="12" pos:column="21">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">k<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="13">len<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">&lt;<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="19">NMAX<pos:position pos:line="13" pos:column="23"/></name></expr> ?<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <expr><name pos:line="13" pos:column="26">len<pos:position pos:line="13" pos:column="29"/></name></expr> <pos:position pos:line="13" pos:column="30"/></then><else pos:line="13" pos:column="30">: <expr><name pos:line="13" pos:column="32">NMAX<pos:position pos:line="13" pos:column="36"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">-=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">k<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
        <while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><name pos:line="15" pos:column="16">k<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&gt;=<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="21">16<pos:position pos:line="15" pos:column="23"/></literal></expr>)<pos:position pos:line="15" pos:column="24"/></condition> <block pos:line="15" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">DO16<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">buf<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">k<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">-=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="18">16<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></while>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">k<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">!=<pos:position pos:line="19" pos:column="17"/></operator> <literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>)<pos:position pos:line="19" pos:column="20"/></condition><then pos:line="19" pos:column="20"> <block type="pseudo"><do pos:line="19" pos:column="21">do <block pos:line="19" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">DO1<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">buf<pos:position pos:line="20" pos:column="20"/></name></expr></argument>)<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block> while <condition pos:line="21" pos:column="17">(<expr><operator pos:line="21" pos:column="18">--<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">k<pos:position pos:line="21" pos:column="21"/></name></expr>)<pos:position pos:line="21" pos:column="22"/></condition>;<pos:position pos:line="21" pos:column="23"/></do></block></then></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">s1<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">%=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">BASE<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">s2<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">%=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">BASE<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">s2<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">&lt;&lt;<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="19">16<pos:position pos:line="25" pos:column="21"/></literal><operator pos:line="25" pos:column="21">)<pos:position pos:line="25" pos:column="22"/></operator> <operator pos:line="25" pos:column="23">|<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">s1<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function_decl></unit>

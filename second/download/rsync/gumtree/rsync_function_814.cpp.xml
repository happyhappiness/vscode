<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_814.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">init_delayed_bits<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">max_ndx<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><name pos:line="3" pos:column="9">delayed_slot_cnt<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">=<pos:position pos:line="3" pos:column="27"/></operator> <operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">max_ndx<pos:position pos:line="3" pos:column="36"/></name> <operator pos:line="3" pos:column="37">+<pos:position pos:line="3" pos:column="38"/></operator> <name pos:line="3" pos:column="39">PER_SLOT_BITS<pos:position pos:line="3" pos:column="52"/></name> <operator pos:line="3" pos:column="53">-<pos:position pos:line="3" pos:column="54"/></operator> <literal type="number" pos:line="3" pos:column="55">1<pos:position pos:line="3" pos:column="56"/></literal><operator pos:line="3" pos:column="56">)<pos:position pos:line="3" pos:column="57"/></operator> <operator pos:line="3" pos:column="58">/<pos:position pos:line="3" pos:column="59"/></operator> <name pos:line="3" pos:column="60">PER_SLOT_BITS<pos:position pos:line="3" pos:column="73"/></name></expr>;<pos:position pos:line="3" pos:column="74"/></expr_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><operator pos:line="5" pos:column="14">(<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">delayed_bits<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">=<pos:position pos:line="5" pos:column="29"/></operator> <operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">uint32<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">*<pos:position pos:line="5" pos:column="38"/></operator><operator pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></operator><operator pos:line="5" pos:column="39">)<pos:position pos:line="5" pos:column="40"/></operator><call><name pos:line="5" pos:column="40">calloc<pos:position pos:line="5" pos:column="46"/></name><argument_list pos:line="5" pos:column="46">(<argument><expr><name pos:line="5" pos:column="47">delayed_slot_cnt<pos:position pos:line="5" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="65">sizeof <argument_list pos:line="5" pos:column="72">(<argument><expr><name pos:line="5" pos:column="73">uint32<pos:position pos:line="5" pos:column="79"/></name><operator pos:line="5" pos:column="79">*<pos:position pos:line="5" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="81"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="82"/></argument_list></call><operator pos:line="5" pos:column="82">)<pos:position pos:line="5" pos:column="83"/></operator></expr>)<pos:position pos:line="5" pos:column="84"/></condition><then pos:line="5" pos:column="84">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">out_of_memory<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><literal type="string" pos:line="6" pos:column="31">"set_delayed_bit"<pos:position pos:line="6" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt></block></then></if>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

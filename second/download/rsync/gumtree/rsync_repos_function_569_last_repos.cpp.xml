<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_569_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_refuse_options<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">bp<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">poptOption<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">op<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">cp<pos:position pos:line="4" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="19">shortname<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[<expr><literal type="number" pos:line="4" pos:column="29">2<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">is_wild<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">found_match<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="7" pos:column="9">shortname<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><literal type="number" pos:line="7" pos:column="19">1<pos:position pos:line="7" pos:column="20"/></literal></expr>]<pos:position pos:line="7" pos:column="21"/></index></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <literal type="char" pos:line="7" pos:column="24">'\0'<pos:position pos:line="7" pos:column="28"/></literal></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>

	<while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition> <block pos:line="9" pos:column="19">{
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><operator pos:line="10" pos:column="24">*<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">bp<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">==<pos:position pos:line="10" pos:column="30"/></operator> <literal type="char" pos:line="10" pos:column="31">' '<pos:position pos:line="10" pos:column="34"/></literal></expr>)<pos:position pos:line="10" pos:column="35"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="36">bp<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">++<pos:position pos:line="10" pos:column="40"/></operator></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt></block></while>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">!<pos:position pos:line="11" pos:column="22"/></operator><operator pos:line="11" pos:column="22">*<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">bp<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
			<block type="pseudo"><break pos:line="12" pos:column="25">break;<pos:position pos:line="12" pos:column="31"/></break></block></then></if>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">cp<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">strchr<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">bp<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="38">' '<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator> <operator pos:line="13" pos:column="44">!=<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">NULL<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">cp<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <literal type="char" pos:line="14" pos:column="30">'\0'<pos:position pos:line="14" pos:column="34"/></literal></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">is_wild<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <call><name pos:line="15" pos:column="27">strpbrk<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">bp<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"*?["<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call> <operator pos:line="15" pos:column="46">!=<pos:position pos:line="15" pos:column="48"/></operator> <name pos:line="15" pos:column="49">NULL<pos:position pos:line="15" pos:column="53"/></name></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">found_match<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
		<for pos:line="17" pos:column="17">for <control pos:line="17" pos:column="21">(<init><expr><name pos:line="17" pos:column="22">op<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">long_options<pos:position pos:line="17" pos:column="39"/></name></expr>;<pos:position pos:line="17" pos:column="40"/></init> <condition pos:line="17" pos:column="41">;<pos:position pos:line="17" pos:column="42"/></condition> <incr><expr><name pos:line="17" pos:column="43">op<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">++<pos:position pos:line="17" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="48"/></control> <block pos:line="17" pos:column="49">{
			<expr_stmt><expr><operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">shortname<pos:position pos:line="18" pos:column="35"/></name> <operator pos:line="18" pos:column="36">=<pos:position pos:line="18" pos:column="37"/></operator> <name><name pos:line="18" pos:column="38">op<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">shortName<pos:position pos:line="18" pos:column="51"/></name></name></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><operator pos:line="19" pos:column="29">!<pos:position pos:line="19" pos:column="30"/></operator><name><name pos:line="19" pos:column="30">op<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">longName<pos:position pos:line="19" pos:column="42"/></name></name> <operator pos:line="19" pos:column="43">&amp;&amp;<pos:position pos:line="19" pos:column="53"/></operator> <operator pos:line="19" pos:column="46">!<pos:position pos:line="19" pos:column="47"/></operator><operator pos:line="19" pos:column="47">*<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="48">shortname<pos:position pos:line="19" pos:column="57"/></name></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58">
				<block type="pseudo"><break pos:line="20" pos:column="33">break;<pos:position pos:line="20" pos:column="39"/></break></block></then></if>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">op<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">longName<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">&amp;&amp;<pos:position pos:line="21" pos:column="53"/></operator> <call><name pos:line="21" pos:column="46">wildmatch<pos:position pos:line="21" pos:column="55"/></name><argument_list pos:line="21" pos:column="55">(<argument><expr><name pos:line="21" pos:column="56">bp<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="60">op<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">-&gt;<pos:position pos:line="21" pos:column="67"/></operator><name pos:line="21" pos:column="64">longName<pos:position pos:line="21" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call><operator pos:line="21" pos:column="73">)<pos:position pos:line="21" pos:column="74"/></operator>
			    <operator pos:line="22" pos:column="29">||<pos:position pos:line="22" pos:column="31"/></operator> <operator pos:line="22" pos:column="32">(<pos:position pos:line="22" pos:column="33"/></operator><operator pos:line="22" pos:column="33">*<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">shortname<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">&amp;&amp;<pos:position pos:line="22" pos:column="54"/></operator> <call><name pos:line="22" pos:column="47">wildmatch<pos:position pos:line="22" pos:column="56"/></name><argument_list pos:line="22" pos:column="56">(<argument><expr><name pos:line="22" pos:column="57">bp<pos:position pos:line="22" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">shortname<pos:position pos:line="22" pos:column="70"/></name></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call><operator pos:line="22" pos:column="71">)<pos:position pos:line="22" pos:column="72"/></operator></expr>)<pos:position pos:line="22" pos:column="73"/></condition><then pos:line="22" pos:column="73"> <block pos:line="22" pos:column="74">{
				<if pos:line="23" pos:column="33">if <condition pos:line="23" pos:column="36">(<expr><name><name pos:line="23" pos:column="37">op<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">argInfo<pos:position pos:line="23" pos:column="48"/></name></name> <operator pos:line="23" pos:column="49">==<pos:position pos:line="23" pos:column="51"/></operator> <name pos:line="23" pos:column="52">POPT_ARG_VAL<pos:position pos:line="23" pos:column="64"/></name></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="41">op<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">argInfo<pos:position pos:line="24" pos:column="52"/></name></name> <operator pos:line="24" pos:column="53">=<pos:position pos:line="24" pos:column="54"/></operator> <name pos:line="24" pos:column="55">POPT_ARG_NONE<pos:position pos:line="24" pos:column="68"/></name></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="25" pos:column="33">op<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">val<pos:position pos:line="25" pos:column="40"/></name></name> <operator pos:line="25" pos:column="41">=<pos:position pos:line="25" pos:column="42"/></operator> <operator pos:line="25" pos:column="43">(<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">op<pos:position pos:line="25" pos:column="46"/></name> <operator pos:line="25" pos:column="47">-<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">long_options<pos:position pos:line="25" pos:column="61"/></name><operator pos:line="25" pos:column="61">)<pos:position pos:line="25" pos:column="62"/></operator> <operator pos:line="25" pos:column="63">+<pos:position pos:line="25" pos:column="64"/></operator> <name pos:line="25" pos:column="65">OPT_REFUSED_BASE<pos:position pos:line="25" pos:column="81"/></name></expr>;<pos:position pos:line="25" pos:column="82"/></expr_stmt>
				<expr_stmt><expr><name pos:line="26" pos:column="33">found_match<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">=<pos:position pos:line="26" pos:column="46"/></operator> <literal type="number" pos:line="26" pos:column="47">1<pos:position pos:line="26" pos:column="48"/></literal></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
				<comment type="block" pos:line="27" pos:column="33">/* These flags are set to let us easily check
				 * an implied option later in the code. */</comment>
				<switch pos:line="29" pos:column="33">switch <condition pos:line="29" pos:column="40">(<expr><operator pos:line="29" pos:column="41">*<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">shortname<pos:position pos:line="29" pos:column="51"/></name></expr>)<pos:position pos:line="29" pos:column="52"/></condition> <block pos:line="29" pos:column="53">{
				<case pos:line="30" pos:column="33">case <expr><literal type="char" pos:line="30" pos:column="38">'r'<pos:position pos:line="30" pos:column="41"/></literal></expr>:<pos:position pos:line="30" pos:column="42"/></case> <case pos:line="30" pos:column="43">case <expr><literal type="char" pos:line="30" pos:column="48">'d'<pos:position pos:line="30" pos:column="51"/></literal></expr>:<pos:position pos:line="30" pos:column="52"/></case> <case pos:line="30" pos:column="53">case <expr><literal type="char" pos:line="30" pos:column="58">'l'<pos:position pos:line="30" pos:column="61"/></literal></expr>:<pos:position pos:line="30" pos:column="62"/></case> <case pos:line="30" pos:column="63">case <expr><literal type="char" pos:line="30" pos:column="68">'p'<pos:position pos:line="30" pos:column="71"/></literal></expr>:<pos:position pos:line="30" pos:column="72"/></case>
				<case pos:line="31" pos:column="33">case <expr><literal type="char" pos:line="31" pos:column="38">'t'<pos:position pos:line="31" pos:column="41"/></literal></expr>:<pos:position pos:line="31" pos:column="42"/></case> <case pos:line="31" pos:column="43">case <expr><literal type="char" pos:line="31" pos:column="48">'g'<pos:position pos:line="31" pos:column="51"/></literal></expr>:<pos:position pos:line="31" pos:column="52"/></case> <case pos:line="31" pos:column="53">case <expr><literal type="char" pos:line="31" pos:column="58">'o'<pos:position pos:line="31" pos:column="61"/></literal></expr>:<pos:position pos:line="31" pos:column="62"/></case> <case pos:line="31" pos:column="63">case <expr><literal type="char" pos:line="31" pos:column="68">'D'<pos:position pos:line="31" pos:column="71"/></literal></expr>:<pos:position pos:line="31" pos:column="72"/></case>
					<expr_stmt><expr><name pos:line="32" pos:column="41">refused_archive_part<pos:position pos:line="32" pos:column="61"/></name> <operator pos:line="32" pos:column="62">=<pos:position pos:line="32" pos:column="63"/></operator> <name><name pos:line="32" pos:column="64">op<pos:position pos:line="32" pos:column="66"/></name><operator pos:line="32" pos:column="66">-&gt;<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="68">val<pos:position pos:line="32" pos:column="71"/></name></name></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>
					<break pos:line="33" pos:column="41">break;<pos:position pos:line="33" pos:column="47"/></break>
				<case pos:line="34" pos:column="33">case <expr><literal type="char" pos:line="34" pos:column="38">'z'<pos:position pos:line="34" pos:column="41"/></literal></expr>:<pos:position pos:line="34" pos:column="42"/></case>
					<expr_stmt><expr><name pos:line="35" pos:column="41">refused_compress<pos:position pos:line="35" pos:column="57"/></name> <operator pos:line="35" pos:column="58">=<pos:position pos:line="35" pos:column="59"/></operator> <name><name pos:line="35" pos:column="60">op<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">-&gt;<pos:position pos:line="35" pos:column="67"/></operator><name pos:line="35" pos:column="64">val<pos:position pos:line="35" pos:column="67"/></name></name></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
					<break pos:line="36" pos:column="41">break;<pos:position pos:line="36" pos:column="47"/></break>
				<case pos:line="37" pos:column="33">case <expr><literal type="char" pos:line="37" pos:column="38">'\0'<pos:position pos:line="37" pos:column="42"/></literal></expr>:<pos:position pos:line="37" pos:column="43"/></case>
					<if pos:line="38" pos:column="41">if <condition pos:line="38" pos:column="44">(<expr><call><name pos:line="38" pos:column="45">wildmatch<pos:position pos:line="38" pos:column="54"/></name><argument_list pos:line="38" pos:column="54">(<argument><expr><literal type="string" pos:line="38" pos:column="55">"delete"<pos:position pos:line="38" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="65">op<pos:position pos:line="38" pos:column="67"/></name><operator pos:line="38" pos:column="67">-&gt;<pos:position pos:line="38" pos:column="72"/></operator><name pos:line="38" pos:column="69">longName<pos:position pos:line="38" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="79"/></condition><then pos:line="38" pos:column="79">
						<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="49">refused_delete<pos:position pos:line="39" pos:column="63"/></name> <operator pos:line="39" pos:column="64">=<pos:position pos:line="39" pos:column="65"/></operator> <name><name pos:line="39" pos:column="66">op<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">-&gt;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="70">val<pos:position pos:line="39" pos:column="73"/></name></name></expr>;<pos:position pos:line="39" pos:column="74"/></expr_stmt></block></then>
					<elseif pos:line="40" pos:column="41">else <if pos:line="40" pos:column="46">if <condition pos:line="40" pos:column="49">(<expr><call><name pos:line="40" pos:column="50">wildmatch<pos:position pos:line="40" pos:column="59"/></name><argument_list pos:line="40" pos:column="59">(<argument><expr><literal type="string" pos:line="40" pos:column="60">"delete-before"<pos:position pos:line="40" pos:column="75"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="77">op<pos:position pos:line="40" pos:column="79"/></name><operator pos:line="40" pos:column="79">-&gt;<pos:position pos:line="40" pos:column="84"/></operator><name pos:line="40" pos:column="81">longName<pos:position pos:line="40" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="91"/></condition><then pos:line="40" pos:column="91">
						<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="49">refused_delete_before<pos:position pos:line="41" pos:column="70"/></name> <operator pos:line="41" pos:column="71">=<pos:position pos:line="41" pos:column="72"/></operator> <name><name pos:line="41" pos:column="73">op<pos:position pos:line="41" pos:column="75"/></name><operator pos:line="41" pos:column="75">-&gt;<pos:position pos:line="41" pos:column="80"/></operator><name pos:line="41" pos:column="77">val<pos:position pos:line="41" pos:column="80"/></name></name></expr>;<pos:position pos:line="41" pos:column="81"/></expr_stmt></block></then></if></elseif>
					<elseif pos:line="42" pos:column="41">else <if pos:line="42" pos:column="46">if <condition pos:line="42" pos:column="49">(<expr><call><name pos:line="42" pos:column="50">wildmatch<pos:position pos:line="42" pos:column="59"/></name><argument_list pos:line="42" pos:column="59">(<argument><expr><literal type="string" pos:line="42" pos:column="60">"delete-during"<pos:position pos:line="42" pos:column="75"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="77">op<pos:position pos:line="42" pos:column="79"/></name><operator pos:line="42" pos:column="79">-&gt;<pos:position pos:line="42" pos:column="84"/></operator><name pos:line="42" pos:column="81">longName<pos:position pos:line="42" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="91"/></condition><then pos:line="42" pos:column="91">
						<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="49">refused_delete_during<pos:position pos:line="43" pos:column="70"/></name> <operator pos:line="43" pos:column="71">=<pos:position pos:line="43" pos:column="72"/></operator> <name><name pos:line="43" pos:column="73">op<pos:position pos:line="43" pos:column="75"/></name><operator pos:line="43" pos:column="75">-&gt;<pos:position pos:line="43" pos:column="80"/></operator><name pos:line="43" pos:column="77">val<pos:position pos:line="43" pos:column="80"/></name></name></expr>;<pos:position pos:line="43" pos:column="81"/></expr_stmt></block></then></if></elseif>
					<elseif pos:line="44" pos:column="41">else <if pos:line="44" pos:column="46">if <condition pos:line="44" pos:column="49">(<expr><call><name pos:line="44" pos:column="50">wildmatch<pos:position pos:line="44" pos:column="59"/></name><argument_list pos:line="44" pos:column="59">(<argument><expr><literal type="string" pos:line="44" pos:column="60">"partial"<pos:position pos:line="44" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="71">op<pos:position pos:line="44" pos:column="73"/></name><operator pos:line="44" pos:column="73">-&gt;<pos:position pos:line="44" pos:column="78"/></operator><name pos:line="44" pos:column="75">longName<pos:position pos:line="44" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="85"/></condition><then pos:line="44" pos:column="85">
						<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="49">refused_partial<pos:position pos:line="45" pos:column="64"/></name> <operator pos:line="45" pos:column="65">=<pos:position pos:line="45" pos:column="66"/></operator> <name><name pos:line="45" pos:column="67">op<pos:position pos:line="45" pos:column="69"/></name><operator pos:line="45" pos:column="69">-&gt;<pos:position pos:line="45" pos:column="74"/></operator><name pos:line="45" pos:column="71">val<pos:position pos:line="45" pos:column="74"/></name></name></expr>;<pos:position pos:line="45" pos:column="75"/></expr_stmt></block></then></if></elseif>
					<elseif pos:line="46" pos:column="41">else <if pos:line="46" pos:column="46">if <condition pos:line="46" pos:column="49">(<expr><call><name pos:line="46" pos:column="50">wildmatch<pos:position pos:line="46" pos:column="59"/></name><argument_list pos:line="46" pos:column="59">(<argument><expr><literal type="string" pos:line="46" pos:column="60">"progress"<pos:position pos:line="46" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="72">op<pos:position pos:line="46" pos:column="74"/></name><operator pos:line="46" pos:column="74">-&gt;<pos:position pos:line="46" pos:column="79"/></operator><name pos:line="46" pos:column="76">longName<pos:position pos:line="46" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="86"/></condition><then pos:line="46" pos:column="86">
						<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="49">refused_progress<pos:position pos:line="47" pos:column="65"/></name> <operator pos:line="47" pos:column="66">=<pos:position pos:line="47" pos:column="67"/></operator> <name><name pos:line="47" pos:column="68">op<pos:position pos:line="47" pos:column="70"/></name><operator pos:line="47" pos:column="70">-&gt;<pos:position pos:line="47" pos:column="75"/></operator><name pos:line="47" pos:column="72">val<pos:position pos:line="47" pos:column="75"/></name></name></expr>;<pos:position pos:line="47" pos:column="76"/></expr_stmt></block></then></if></elseif>
					<elseif pos:line="48" pos:column="41">else <if pos:line="48" pos:column="46">if <condition pos:line="48" pos:column="49">(<expr><call><name pos:line="48" pos:column="50">wildmatch<pos:position pos:line="48" pos:column="59"/></name><argument_list pos:line="48" pos:column="59">(<argument><expr><literal type="string" pos:line="48" pos:column="60">"inplace"<pos:position pos:line="48" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="71">op<pos:position pos:line="48" pos:column="73"/></name><operator pos:line="48" pos:column="73">-&gt;<pos:position pos:line="48" pos:column="78"/></operator><name pos:line="48" pos:column="75">longName<pos:position pos:line="48" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="85"/></condition><then pos:line="48" pos:column="85">
						<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="49">refused_inplace<pos:position pos:line="49" pos:column="64"/></name> <operator pos:line="49" pos:column="65">=<pos:position pos:line="49" pos:column="66"/></operator> <name><name pos:line="49" pos:column="67">op<pos:position pos:line="49" pos:column="69"/></name><operator pos:line="49" pos:column="69">-&gt;<pos:position pos:line="49" pos:column="74"/></operator><name pos:line="49" pos:column="71">val<pos:position pos:line="49" pos:column="74"/></name></name></expr>;<pos:position pos:line="49" pos:column="75"/></expr_stmt></block></then></if></elseif>
					<elseif pos:line="50" pos:column="41">else <if pos:line="50" pos:column="46">if <condition pos:line="50" pos:column="49">(<expr><call><name pos:line="50" pos:column="50">wildmatch<pos:position pos:line="50" pos:column="59"/></name><argument_list pos:line="50" pos:column="59">(<argument><expr><literal type="string" pos:line="50" pos:column="60">"no-iconv"<pos:position pos:line="50" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="72">op<pos:position pos:line="50" pos:column="74"/></name><operator pos:line="50" pos:column="74">-&gt;<pos:position pos:line="50" pos:column="79"/></operator><name pos:line="50" pos:column="76">longName<pos:position pos:line="50" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="86"/></condition><then pos:line="50" pos:column="86">
						<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="49">refused_no_iconv<pos:position pos:line="51" pos:column="65"/></name> <operator pos:line="51" pos:column="66">=<pos:position pos:line="51" pos:column="67"/></operator> <name><name pos:line="51" pos:column="68">op<pos:position pos:line="51" pos:column="70"/></name><operator pos:line="51" pos:column="70">-&gt;<pos:position pos:line="51" pos:column="75"/></operator><name pos:line="51" pos:column="72">val<pos:position pos:line="51" pos:column="75"/></name></name></expr>;<pos:position pos:line="51" pos:column="76"/></expr_stmt></block></then></if></elseif></if>
					<break pos:line="52" pos:column="41">break;<pos:position pos:line="52" pos:column="47"/></break>
				}<pos:position pos:line="53" pos:column="34"/></block></switch>
				<if pos:line="54" pos:column="33">if <condition pos:line="54" pos:column="36">(<expr><operator pos:line="54" pos:column="37">!<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="38">is_wild<pos:position pos:line="54" pos:column="45"/></name></expr>)<pos:position pos:line="54" pos:column="46"/></condition><then pos:line="54" pos:column="46">
					<block type="pseudo"><break pos:line="55" pos:column="41">break;<pos:position pos:line="55" pos:column="47"/></break></block></then></if>
			}<pos:position pos:line="56" pos:column="26"/></block></then></if>
		}<pos:position pos:line="57" pos:column="18"/></block></for>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">found_match<pos:position pos:line="58" pos:column="33"/></name></expr>)<pos:position pos:line="58" pos:column="34"/></condition><then pos:line="58" pos:column="34"> <block pos:line="58" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">rprintf<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">FLOG<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="39">"No match for refuse-options string \"%s\"\n"<pos:position pos:line="59" pos:column="84"/></literal></expr></argument>,
				<argument><expr><name pos:line="60" pos:column="33">bp<pos:position pos:line="60" pos:column="35"/></name></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">!<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">cp<pos:position pos:line="62" pos:column="24"/></name></expr>)<pos:position pos:line="62" pos:column="25"/></condition><then pos:line="62" pos:column="25">
			<block type="pseudo"><break pos:line="63" pos:column="25">break;<pos:position pos:line="63" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><operator pos:line="64" pos:column="17">*<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">cp<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <literal type="char" pos:line="64" pos:column="23">' '<pos:position pos:line="64" pos:column="26"/></literal></expr>;<pos:position pos:line="64" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="65" pos:column="17">bp<pos:position pos:line="65" pos:column="19"/></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <name pos:line="65" pos:column="22">cp<pos:position pos:line="65" pos:column="24"/></name> <operator pos:line="65" pos:column="25">+<pos:position pos:line="65" pos:column="26"/></operator> <literal type="number" pos:line="65" pos:column="27">1<pos:position pos:line="65" pos:column="28"/></literal></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></while>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_47.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">generate_files<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">f<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">file_list<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">flist<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">local_name<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">verbose<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&gt;<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="17">2<pos:position pos:line="5" pos:column="18"/></literal></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">fprintf<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">stderr<pos:position pos:line="6" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="6" pos:column="20">"generator starting pid=%d count=%d\n"<pos:position pos:line="6" pos:column="58"/></literal></expr></argument>,
	    <argument><expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">)<pos:position pos:line="7" pos:column="18"/></operator><call><name pos:line="7" pos:column="18">getpid<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr></argument>,<argument><expr><name><name pos:line="7" pos:column="27">flist<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">count<pos:position pos:line="7" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt></block></then></if>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">i<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></init> <condition><expr><name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <name><name pos:line="9" pos:column="19">flist<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">count<pos:position pos:line="9" pos:column="31"/></name></name></expr>;<pos:position pos:line="9" pos:column="32"/></condition> <incr><expr><name pos:line="9" pos:column="33">i<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">++<pos:position pos:line="9" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="37"/></control> <block pos:line="9" pos:column="38">{
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">S_ISDIR<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name><name pos:line="10" pos:column="17">flist<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">files<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><name pos:line="10" pos:column="30">i<pos:position pos:line="10" pos:column="31"/></name></expr>]<pos:position pos:line="10" pos:column="32"/></index></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">mode<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39"> <block pos:line="10" pos:column="40">{
      <if pos:line="11" pos:column="7">if <condition pos:line="11" pos:column="10">(<expr><name pos:line="11" pos:column="11">dry_run<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block type="pseudo"><continue pos:line="11" pos:column="20">continue;<pos:position pos:line="11" pos:column="29"/></continue></block></then></if>
      <if pos:line="12" pos:column="7">if <condition pos:line="12" pos:column="10">(<expr><call><name pos:line="12" pos:column="11">mkdir<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name><name pos:line="12" pos:column="17">flist<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">files<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><name pos:line="12" pos:column="30">i<pos:position pos:line="12" pos:column="31"/></name></expr>]<pos:position pos:line="12" pos:column="32"/></index></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">name<pos:position pos:line="12" pos:column="37"/></name></expr></argument>,<argument><expr><name><name pos:line="12" pos:column="38">flist<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">files<pos:position pos:line="12" pos:column="50"/></name><index pos:line="12" pos:column="50">[<expr><name pos:line="12" pos:column="51">i<pos:position pos:line="12" pos:column="52"/></name></expr>]<pos:position pos:line="12" pos:column="53"/></index></name><operator pos:line="12" pos:column="53">.<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="54">mode<pos:position pos:line="12" pos:column="58"/></name></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call> <operator pos:line="12" pos:column="60">!=<pos:position pos:line="12" pos:column="62"/></operator> <literal type="number" pos:line="12" pos:column="63">0<pos:position pos:line="12" pos:column="64"/></literal> <operator pos:line="12" pos:column="65">&amp;&amp;<pos:position pos:line="12" pos:column="75"/></operator>
	  <name pos:line="13" pos:column="11">errno<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">!=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">EEXIST<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">fprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">stderr<pos:position pos:line="14" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="14" pos:column="24">"mkdir %s : %s\n"<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>,
		<argument><expr><name><name pos:line="15" pos:column="17">flist<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">files<pos:position pos:line="15" pos:column="29"/></name><index pos:line="15" pos:column="29">[<expr><name pos:line="15" pos:column="30">i<pos:position pos:line="15" pos:column="31"/></name></expr>]<pos:position pos:line="15" pos:column="32"/></index></name><operator pos:line="15" pos:column="32">.<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">name<pos:position pos:line="15" pos:column="37"/></name></expr></argument>,<argument><expr><call><name pos:line="15" pos:column="38">strerror<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">errno<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
      }<pos:position pos:line="16" pos:column="8"/></block></then></if>
      <continue pos:line="17" pos:column="7">continue;<pos:position pos:line="17" pos:column="16"/></continue>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">recv_generator<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><ternary><condition><expr><name pos:line="19" pos:column="20">local_name<pos:position pos:line="19" pos:column="30"/></name></expr>?<pos:position pos:line="19" pos:column="31"/></condition><then><expr><name pos:line="19" pos:column="31">local_name<pos:position pos:line="19" pos:column="41"/></name></expr></then><else pos:line="19" pos:column="41">:<expr><name><name pos:line="19" pos:column="42">flist<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">files<pos:position pos:line="19" pos:column="54"/></name><index pos:line="19" pos:column="54">[<expr><name pos:line="19" pos:column="55">i<pos:position pos:line="19" pos:column="56"/></name></expr>]<pos:position pos:line="19" pos:column="57"/></index></name><operator pos:line="19" pos:column="57">.<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="58">name<pos:position pos:line="19" pos:column="62"/></name></expr></else></ternary></expr></argument>,
		   <argument><expr><name pos:line="20" pos:column="20">flist<pos:position pos:line="20" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="26">i<pos:position pos:line="20" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="28">f<pos:position pos:line="20" pos:column="29"/></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">write_int<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">f<pos:position pos:line="22" pos:column="14"/></name></expr></argument>,<argument><expr><operator pos:line="22" pos:column="15">-<pos:position pos:line="22" pos:column="16"/></operator><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">write_flush<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">f<pos:position pos:line="23" pos:column="16"/></name></expr></argument>)<pos:position pos:line="23" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="18"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">verbose<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">&gt;<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="5">fprintf<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">stderr<pos:position pos:line="25" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="25" pos:column="20">"generator wrote %d\n"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>,<argument><expr><call><name pos:line="25" pos:column="43">write_total<pos:position pos:line="25" pos:column="54"/></name><argument_list pos:line="25" pos:column="54">()<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt></block></then></if>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_57_rsync-2.6.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">send_uid_list<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">idlist<pos:position pos:line="3" pos:column="22"/></name></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">list<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">numeric_ids<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25"> <block type="pseudo"><return pos:line="5" pos:column="26">return;<pos:position pos:line="5" pos:column="33"/></return></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">preserve_uid<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
		<comment type="block" pos:line="8" pos:column="17">/* we send sequences of uid/byte-length/name */</comment>
		<expr_stmt><expr><name pos:line="9" pos:column="17">list<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">uidlist<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
		<while pos:line="10" pos:column="17">while <condition pos:line="10" pos:column="23">(<expr><name pos:line="10" pos:column="24">list<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition> <block pos:line="10" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="11" pos:column="25">int<pos:position pos:line="11" pos:column="28"/></name></type> <name pos:line="11" pos:column="29">len<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><call><name pos:line="11" pos:column="35">strlen<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name><name pos:line="11" pos:column="42">list<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">name<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">write_int<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">f<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="38">list<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">id<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">write_byte<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">f<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">len<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">write_buf<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">f<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="38">list<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">name<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">len<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="15" pos:column="25">list<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="32">list<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">next<pos:position pos:line="15" pos:column="42"/></name></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></while>

		<comment type="block" pos:line="18" pos:column="17">/* terminate the uid list with a 0 uid. We explicitly exclude
		   0 from the list */</comment>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">write_int<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">f<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">preserve_gid<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">list<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">gidlist<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
		<while pos:line="25" pos:column="17">while <condition pos:line="25" pos:column="23">(<expr><name pos:line="25" pos:column="24">list<pos:position pos:line="25" pos:column="28"/></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition> <block pos:line="25" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="26" pos:column="25">int<pos:position pos:line="26" pos:column="28"/></name></type> <name pos:line="26" pos:column="29">len<pos:position pos:line="26" pos:column="32"/></name> <init pos:line="26" pos:column="33">= <expr><call><name pos:line="26" pos:column="35">strlen<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">(<argument><expr><name><name pos:line="26" pos:column="42">list<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">-&gt;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="48">name<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="54"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">write_int<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name pos:line="27" pos:column="35">f<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="38">list<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">id<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">write_byte<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">f<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">len<pos:position pos:line="28" pos:column="42"/></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">write_buf<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><name pos:line="29" pos:column="35">f<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">list<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">name<pos:position pos:line="29" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">len<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">list<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">=<pos:position pos:line="30" pos:column="31"/></operator> <name><name pos:line="30" pos:column="32">list<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">next<pos:position pos:line="30" pos:column="42"/></name></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">write_int<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">f<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="30">0<pos:position pos:line="32" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_20_rsync-1.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">readfd<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">fd<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buffer<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">N<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type>  <name pos:line="3" pos:column="8">ret<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">total<pos:position pos:line="4" pos:column="12"/></name><init pos:line="4" pos:column="12">=<expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>  
 
  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><name pos:line="6" pos:column="10">total<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&lt;<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="18">N<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition>
    <block pos:line="7" pos:column="5">{
      <if pos:line="8" pos:column="7">if <condition pos:line="8" pos:column="10">(<expr><name pos:line="8" pos:column="11">read_buffer_len<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">&gt;<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="29">0<pos:position pos:line="8" pos:column="30"/></literal></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
	<expr_stmt><expr><name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">MIN<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">read_buffer_len<pos:position pos:line="9" pos:column="34"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="35">N<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">total<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">memcpy<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">buffer<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">+<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">total<pos:position pos:line="10" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="29">read_buffer_p<pos:position pos:line="10" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="43">ret<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="11" pos:column="9">read_buffer_p<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">+=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">ret<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">read_buffer_len<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">-=<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="28">ret<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="13" pos:column="8"/></block></then> <else pos:line="13" pos:column="9">else <block pos:line="13" pos:column="14">{
	<expr_stmt><expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">read<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">fd<pos:position pos:line="14" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="14" pos:column="23">buffer<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">+<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">total<pos:position pos:line="14" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="14" pos:column="38">N<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">-<pos:position pos:line="14" pos:column="41"/></operator> <name pos:line="14" pos:column="42">total<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="49"/></expr_stmt>
      }<pos:position pos:line="15" pos:column="8"/></block></else></if>

      <if pos:line="17" pos:column="7">if <condition pos:line="17" pos:column="10">(<expr><name pos:line="17" pos:column="11">ret<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&lt;=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20">
	<block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">total<pos:position pos:line="18" pos:column="21"/></name></expr>;<pos:position pos:line="18" pos:column="22"/></return></block></then></if>
      <expr_stmt><expr><name pos:line="19" pos:column="7">total<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">+=<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">ret<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></while>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">total<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_733_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">pool_stats<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">alloc_pool_t<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">p<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">fd<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">summarize<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">alloc_pool<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">pool<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><operator pos:line="4" pos:column="35">(<pos:position pos:line="4" pos:column="36"/></operator>struct <name pos:line="4" pos:column="43">alloc_pool<pos:position pos:line="4" pos:column="53"/></name> <operator pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></operator><operator pos:line="4" pos:column="55">)<pos:position pos:line="4" pos:column="56"/></operator> <name pos:line="4" pos:column="57">p<pos:position pos:line="4" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">pool_extent<pos:position pos:line="5" pos:column="27"/></name></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">cur<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">buf<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><name pos:line="6" pos:column="18">BUFSIZ<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">pool<pos:position pos:line="9" pos:column="18"/></name></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">ret<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">FDPRINT<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><literal type="string" pos:line="12" pos:column="17">"  Extent size:       %12ld\n"<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>,	<argument><expr><operator pos:line="12" pos:column="49">(<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">long<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">)<pos:position pos:line="12" pos:column="55"/></operator>	<name><name pos:line="12" pos:column="57">pool<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">-&gt;<pos:position pos:line="12" pos:column="66"/></operator><name pos:line="12" pos:column="63">size<pos:position pos:line="12" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">FDPRINT<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><literal type="string" pos:line="13" pos:column="17">"  Alloc quantum:     %12ld\n"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>,	<argument><expr><operator pos:line="13" pos:column="49">(<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">long<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">)<pos:position pos:line="13" pos:column="55"/></operator>	<name><name pos:line="13" pos:column="57">pool<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">-&gt;<pos:position pos:line="13" pos:column="66"/></operator><name pos:line="13" pos:column="63">quantum<pos:position pos:line="13" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">FDPRINT<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><literal type="string" pos:line="14" pos:column="17">"  Extents created:   %12ld\n"<pos:position pos:line="14" pos:column="47"/></literal></expr></argument>,		<argument><expr><name><name pos:line="14" pos:column="57">pool<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">-&gt;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="63">e_created<pos:position pos:line="14" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">FDPRINT<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><literal type="string" pos:line="15" pos:column="17">"  Extents freed:     %12ld\n"<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>,		<argument><expr><name><name pos:line="15" pos:column="57">pool<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">-&gt;<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="63">e_freed<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">FDPRINT<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><literal type="string" pos:line="16" pos:column="17">"  Alloc count:       %12.0f\n"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="50">(<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">double<pos:position pos:line="16" pos:column="57"/></name><operator pos:line="16" pos:column="57">)<pos:position pos:line="16" pos:column="58"/></operator> <name><name pos:line="16" pos:column="59">pool<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">-&gt;<pos:position pos:line="16" pos:column="68"/></operator><name pos:line="16" pos:column="65">n_allocated<pos:position pos:line="16" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">FDPRINT<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><literal type="string" pos:line="17" pos:column="17">"  Free Count:        %12.0f\n"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="50">(<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">double<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">)<pos:position pos:line="17" pos:column="58"/></operator> <name><name pos:line="17" pos:column="59">pool<pos:position pos:line="17" pos:column="63"/></name><operator pos:line="17" pos:column="63">-&gt;<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="65">n_freed<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">FDPRINT<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><literal type="string" pos:line="18" pos:column="17">"  Bytes allocated:   %12.0f\n"<pos:position pos:line="18" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="50">(<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">double<pos:position pos:line="18" pos:column="57"/></name><operator pos:line="18" pos:column="57">)<pos:position pos:line="18" pos:column="58"/></operator> <name><name pos:line="18" pos:column="59">pool<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">-&gt;<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="65">b_allocated<pos:position pos:line="18" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">FDPRINT<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><literal type="string" pos:line="19" pos:column="17">"  Bytes freed:       %12.0f\n"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="50">(<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">double<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">)<pos:position pos:line="19" pos:column="58"/></operator> <name><name pos:line="19" pos:column="59">pool<pos:position pos:line="19" pos:column="63"/></name><operator pos:line="19" pos:column="63">-&gt;<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="65">b_freed<pos:position pos:line="19" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">summarize<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23">
		<block type="pseudo"><return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">ret<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></return></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">pool<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">extents<pos:position pos:line="24" pos:column="27"/></name></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28">
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><name pos:line="25" pos:column="24">ret<pos:position pos:line="25" pos:column="27"/></name></expr>;<pos:position pos:line="25" pos:column="28"/></return></block></then></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">write<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">fd<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"\n"<pos:position pos:line="27" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="29">1<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call> <operator pos:line="27" pos:column="32">!=<pos:position pos:line="27" pos:column="34"/></operator> <literal type="number" pos:line="27" pos:column="35">1<pos:position pos:line="27" pos:column="36"/></literal></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">ret<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <operator pos:line="28" pos:column="23">-<pos:position pos:line="28" pos:column="24"/></operator><literal type="number" pos:line="28" pos:column="24">1<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt></block></then></if>

	<for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">cur<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name><name pos:line="30" pos:column="20">pool<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">extents<pos:position pos:line="30" pos:column="33"/></name></name></expr>;<pos:position pos:line="30" pos:column="34"/></init> <condition><expr><name pos:line="30" pos:column="35">cur<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></condition> <incr><expr><name pos:line="30" pos:column="40">cur<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">=<pos:position pos:line="30" pos:column="45"/></operator> <name><name pos:line="30" pos:column="46">cur<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">next<pos:position pos:line="30" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="56"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">FDEXTSTAT<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">cur<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt></block></for>

	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">ret<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

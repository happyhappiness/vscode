<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_542_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">send_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">argc<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name><name pos:line="1" pos:column="57">argv<pos:position pos:line="1" pos:column="61"/></name><index pos:line="1" pos:column="61">[]<pos:position pos:line="1" pos:column="63"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">lastdir<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">lastdir_len<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><operator pos:line="4" pos:column="34">-<pos:position pos:line="4" pos:column="35"/></operator><literal type="number" pos:line="4" pos:column="35">1<pos:position pos:line="4" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="18">dirlen<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">STRUCT_STAT<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">st<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></decl>, <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="19">dir<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">file_list<pos:position pos:line="8" pos:column="25"/></name></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">flist<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">timeval<pos:position pos:line="9" pos:column="23"/></name></name></type> <name pos:line="9" pos:column="24">start_tv<pos:position pos:line="9" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="34">end_tv<pos:position pos:line="9" pos:column="40"/></name></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int64<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">start_write<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">use_ff_fd<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">disable_buffering<pos:position pos:line="12" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="32">reenable_multiplex<pos:position pos:line="12" pos:column="50"/></name> <init pos:line="12" pos:column="51">= <expr><operator pos:line="12" pos:column="53">-<pos:position pos:line="12" pos:column="54"/></operator><literal type="number" pos:line="12" pos:column="54">1<pos:position pos:line="12" pos:column="55"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">flags<pos:position pos:line="13" pos:column="18"/></name> <init pos:line="13" pos:column="19">= <expr><ternary><condition><expr><name pos:line="13" pos:column="21">recurse<pos:position pos:line="13" pos:column="28"/></name></expr> ?<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30"> <expr><name pos:line="13" pos:column="31">FLAG_CONTENT_DIR<pos:position pos:line="13" pos:column="47"/></name></expr> <pos:position pos:line="13" pos:column="48"/></then><else pos:line="13" pos:column="48">: <expr><literal type="number" pos:line="13" pos:column="50">0<pos:position pos:line="13" pos:column="51"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">reading_remotely<pos:position pos:line="14" pos:column="29"/></name> <init pos:line="14" pos:column="30">= <expr><name pos:line="14" pos:column="32">filesfrom_host<pos:position pos:line="14" pos:column="46"/></name> <operator pos:line="14" pos:column="47">!=<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="50">NULL<pos:position pos:line="14" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">rl_flags<pos:position pos:line="15" pos:column="21"/></name> <init pos:line="15" pos:column="22">= <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><ternary><condition><expr><name pos:line="15" pos:column="25">reading_remotely<pos:position pos:line="15" pos:column="41"/></name></expr> ?<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <expr><literal type="number" pos:line="15" pos:column="44">0<pos:position pos:line="15" pos:column="45"/></literal></expr> <pos:position pos:line="15" pos:column="46"/></then><else pos:line="15" pos:column="46">: <expr><name pos:line="15" pos:column="48">RL_DUMP_COMMENTS<pos:position pos:line="15" pos:column="64"/></name></expr></else></ternary><operator pos:line="15" pos:column="64">)<pos:position pos:line="15" pos:column="65"/></operator>
<cpp:ifdef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifdef<pos:position pos:line="16" pos:column="7"/></cpp:directive> <name pos:line="16" pos:column="8">ICONV_OPTION<pos:position pos:line="16" pos:column="20"/></name></cpp:ifdef>
		     <operator pos:line="17" pos:column="22">|<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><ternary><condition><expr><name pos:line="17" pos:column="25">filesfrom_convert<pos:position pos:line="17" pos:column="42"/></name></expr> ?<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44"> <expr><name pos:line="17" pos:column="45">RL_CONVERT<pos:position pos:line="17" pos:column="55"/></name></expr> <pos:position pos:line="17" pos:column="56"/></then><else pos:line="17" pos:column="56">: <expr><literal type="number" pos:line="17" pos:column="58">0<pos:position pos:line="17" pos:column="59"/></literal></expr></else></ternary><operator pos:line="17" pos:column="59">)<pos:position pos:line="17" pos:column="60"/></operator>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
		     <operator pos:line="19" pos:column="22">|<pos:position pos:line="19" pos:column="23"/></operator> <operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><ternary><condition><expr><name pos:line="19" pos:column="25">eol_nulls<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">||<pos:position pos:line="19" pos:column="37"/></operator> <name pos:line="19" pos:column="38">reading_remotely<pos:position pos:line="19" pos:column="54"/></name></expr> ?<pos:position pos:line="19" pos:column="56"/></condition><then pos:line="19" pos:column="56"> <expr><name pos:line="19" pos:column="57">RL_EOL_NULLS<pos:position pos:line="19" pos:column="69"/></name></expr> <pos:position pos:line="19" pos:column="70"/></then><else pos:line="19" pos:column="70">: <expr><literal type="number" pos:line="19" pos:column="72">0<pos:position pos:line="19" pos:column="73"/></literal></expr></else></ternary><operator pos:line="19" pos:column="73">)<pos:position pos:line="19" pos:column="74"/></operator></expr></init></decl>;<pos:position pos:line="19" pos:column="75"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">implied_dot_dir<pos:position pos:line="20" pos:column="28"/></name> <init pos:line="20" pos:column="29">= <expr><literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">rprintf<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">FLOG<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"building file list\n"<pos:position pos:line="22" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">show_filelist_p<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">()<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">start_filelist_progress<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><literal type="string" pos:line="24" pos:column="41">"building file list"<pos:position pos:line="24" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt></block></then>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><name pos:line="25" pos:column="18">inc_recurse<pos:position pos:line="25" pos:column="29"/></name> <operator pos:line="25" pos:column="30">&amp;&amp;<pos:position pos:line="25" pos:column="40"/></operator> <call><name pos:line="25" pos:column="33">INFO_GTE<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">FLIST<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="49">1<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call> <operator pos:line="25" pos:column="52">&amp;&amp;<pos:position pos:line="25" pos:column="62"/></operator> <operator pos:line="25" pos:column="55">!<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">am_server<pos:position pos:line="25" pos:column="65"/></name></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">rprintf<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">FCLIENT<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"sending incremental file list\n"<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="69"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="28" pos:column="9">start_write<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name><name pos:line="28" pos:column="23">stats<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">.<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">total_written<pos:position pos:line="28" pos:column="42"/></name></name></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">gettimeofday<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><operator pos:line="29" pos:column="22">&amp;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="23">start_tv<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">NULL<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">relative_paths<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">&amp;&amp;<pos:position pos:line="31" pos:column="38"/></operator> <name pos:line="31" pos:column="31">protocol_version<pos:position pos:line="31" pos:column="47"/></name> <operator pos:line="31" pos:column="48">&gt;=<pos:position pos:line="31" pos:column="53"/></operator> <literal type="number" pos:line="31" pos:column="51">30<pos:position pos:line="31" pos:column="53"/></literal></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">implied_dirs<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <literal type="number" pos:line="32" pos:column="32">1<pos:position pos:line="32" pos:column="33"/></literal></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt></block></then></if> <comment type="block" pos:line="32" pos:column="35">/* We send flagged implied dirs */</comment>

<cpp:ifdef pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">ifdef<pos:position pos:line="34" pos:column="7"/></cpp:directive> <name pos:line="34" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="34" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">preserve_hard_links<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">&amp;&amp;<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="36">protocol_version<pos:position pos:line="35" pos:column="52"/></name> <operator pos:line="35" pos:column="53">&gt;=<pos:position pos:line="35" pos:column="58"/></operator> <literal type="number" pos:line="35" pos:column="56">30<pos:position pos:line="35" pos:column="58"/></literal> <operator pos:line="35" pos:column="59">&amp;&amp;<pos:position pos:line="35" pos:column="69"/></operator> <operator pos:line="35" pos:column="62">!<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">cur_flist<pos:position pos:line="35" pos:column="72"/></name></expr>)<pos:position pos:line="35" pos:column="73"/></condition><then pos:line="35" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">init_hard_links<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">()<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="39" pos:column="9">flist<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="17">cur_flist<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <call><name pos:line="39" pos:column="29">flist_new<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><literal type="number" pos:line="39" pos:column="39">0<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="42">"send_file_list"<pos:position pos:line="39" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="60"/></expr_stmt>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">inc_recurse<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">dir_flist<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <call><name pos:line="41" pos:column="29">flist_new<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">FLIST_TEMP<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="51">"send_file_list"<pos:position pos:line="41" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">flags<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">|=<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">FLAG_DIVERT_DIRS<pos:position pos:line="42" pos:column="42"/></name></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">dir_flist<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">cur_flist<pos:position pos:line="44" pos:column="38"/></name></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="46" pos:column="9">disable_buffering<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <call><name pos:line="46" pos:column="29">io_start_buffering_out<pos:position pos:line="46" pos:column="51"/></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name pos:line="46" pos:column="52">f<pos:position pos:line="46" pos:column="53"/></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">filesfrom_fd<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">&gt;=<pos:position pos:line="47" pos:column="31"/></operator> <literal type="number" pos:line="47" pos:column="29">0<pos:position pos:line="47" pos:column="30"/></literal></expr>)<pos:position pos:line="47" pos:column="31"/></condition><then pos:line="47" pos:column="31"> <block pos:line="47" pos:column="32">{
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name><name pos:line="48" pos:column="21">argv<pos:position pos:line="48" pos:column="25"/></name><index pos:line="48" pos:column="25">[<expr><literal type="number" pos:line="48" pos:column="26">0<pos:position pos:line="48" pos:column="27"/></literal></expr>]<pos:position pos:line="48" pos:column="28"/></index></name> <operator pos:line="48" pos:column="29">&amp;&amp;<pos:position pos:line="48" pos:column="39"/></operator> <operator pos:line="48" pos:column="32">!<pos:position pos:line="48" pos:column="33"/></operator><call><name pos:line="48" pos:column="33">change_dir<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name><name pos:line="48" pos:column="44">argv<pos:position pos:line="48" pos:column="48"/></name><index pos:line="48" pos:column="48">[<expr><literal type="number" pos:line="48" pos:column="49">0<pos:position pos:line="48" pos:column="50"/></literal></expr>]<pos:position pos:line="48" pos:column="51"/></index></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">CD_NORMAL<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="64"/></condition><then pos:line="48" pos:column="64"> <block pos:line="48" pos:column="65">{
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">rsyserr<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">FERROR_XFER<pos:position pos:line="49" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="46">errno<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="53">"change_dir %s failed"<pos:position pos:line="49" pos:column="75"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="50" pos:column="33">full_fname<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name><name pos:line="50" pos:column="44">argv<pos:position pos:line="50" pos:column="48"/></name><index pos:line="50" pos:column="48">[<expr><literal type="number" pos:line="50" pos:column="49">0<pos:position pos:line="50" pos:column="50"/></literal></expr>]<pos:position pos:line="50" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">exit_cleanup<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name pos:line="51" pos:column="38">RERR_FILESELECT<pos:position pos:line="51" pos:column="53"/></name></expr></argument>)<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">protocol_version<pos:position pos:line="53" pos:column="37"/></name> <operator pos:line="53" pos:column="38">&lt;<pos:position pos:line="53" pos:column="42"/></operator> <literal type="number" pos:line="53" pos:column="40">31<pos:position pos:line="53" pos:column="42"/></literal></expr>)<pos:position pos:line="53" pos:column="43"/></condition><then pos:line="53" pos:column="43"> <block pos:line="53" pos:column="44">{
			<comment type="block" pos:line="54" pos:column="25">/* Older protocols send the files-from data w/o packaging
			 * it in multiplexed I/O packets, so temporarily switch
			 * to buffered I/O to match this behavior. */</comment>
			<expr_stmt><expr><name pos:line="57" pos:column="25">reenable_multiplex<pos:position pos:line="57" pos:column="43"/></name> <operator pos:line="57" pos:column="44">=<pos:position pos:line="57" pos:column="45"/></operator> <call><name pos:line="57" pos:column="46">io_end_multiplex_in<pos:position pos:line="57" pos:column="65"/></name><argument_list pos:line="57" pos:column="65">(<argument><expr><name pos:line="57" pos:column="66">MPLX_TO_BUFFERED<pos:position pos:line="57" pos:column="82"/></name></expr></argument>)<pos:position pos:line="57" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="59" pos:column="17">use_ff_fd<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <literal type="number" pos:line="59" pos:column="29">1<pos:position pos:line="59" pos:column="30"/></literal></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>

	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">orig_dir<pos:position pos:line="62" pos:column="22"/></name></expr>)<pos:position pos:line="62" pos:column="23"/></condition><then pos:line="62" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="17">orig_dir<pos:position pos:line="63" pos:column="25"/></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <call><name pos:line="63" pos:column="28">strdup<pos:position pos:line="63" pos:column="34"/></name><argument_list pos:line="63" pos:column="34">(<argument><expr><name pos:line="63" pos:column="35">curr_dir<pos:position pos:line="63" pos:column="43"/></name></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt></block></then></if>

	<while pos:line="65" pos:column="9">while <condition pos:line="65" pos:column="15">(<expr><literal type="number" pos:line="65" pos:column="16">1<pos:position pos:line="65" pos:column="17"/></literal></expr>)<pos:position pos:line="65" pos:column="18"/></condition> <block pos:line="65" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="66" pos:column="17">char<pos:position pos:line="66" pos:column="21"/></name></type> <name><name pos:line="66" pos:column="22">fbuf<pos:position pos:line="66" pos:column="26"/></name><index pos:line="66" pos:column="26">[<expr><name pos:line="66" pos:column="27">MAXPATHLEN<pos:position pos:line="66" pos:column="37"/></name></expr>]<pos:position pos:line="66" pos:column="38"/></index></name></decl>, <modifier pos:line="66" pos:column="40">*<pos:position pos:line="66" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="66" pos:column="41">fn<pos:position pos:line="66" pos:column="43"/></name></decl>, <decl><type ref="prev"/><name pos:line="66" pos:column="45">name_type<pos:position pos:line="66" pos:column="54"/></name></decl>;<pos:position pos:line="66" pos:column="55"/></decl_stmt>

		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">use_ff_fd<pos:position pos:line="68" pos:column="30"/></name></expr>)<pos:position pos:line="68" pos:column="31"/></condition><then pos:line="68" pos:column="31"> <block pos:line="68" pos:column="32">{
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><call><name pos:line="69" pos:column="29">read_line<pos:position pos:line="69" pos:column="38"/></name><argument_list pos:line="69" pos:column="38">(<argument><expr><name pos:line="69" pos:column="39">filesfrom_fd<pos:position pos:line="69" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="53">fbuf<pos:position pos:line="69" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="59">sizeof <name pos:line="69" pos:column="66">fbuf<pos:position pos:line="69" pos:column="70"/></name></sizeof></expr></argument>, <argument><expr><name pos:line="69" pos:column="72">rl_flags<pos:position pos:line="69" pos:column="80"/></name></expr></argument>)<pos:position pos:line="69" pos:column="81"/></argument_list></call> <operator pos:line="69" pos:column="82">==<pos:position pos:line="69" pos:column="84"/></operator> <literal type="number" pos:line="69" pos:column="85">0<pos:position pos:line="69" pos:column="86"/></literal></expr>)<pos:position pos:line="69" pos:column="87"/></condition><then pos:line="69" pos:column="87">
				<block type="pseudo"><break pos:line="70" pos:column="33">break;<pos:position pos:line="70" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">sanitize_path<pos:position pos:line="71" pos:column="38"/></name><argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">fbuf<pos:position pos:line="71" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="45">fbuf<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="51">""<pos:position pos:line="71" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="55">0<pos:position pos:line="71" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="58">SP_KEEP_DOT_DIRS<pos:position pos:line="71" pos:column="74"/></name></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then> <else pos:line="72" pos:column="19">else <block pos:line="72" pos:column="24">{
			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><name pos:line="73" pos:column="29">argc<pos:position pos:line="73" pos:column="33"/></name><operator pos:line="73" pos:column="33">--<pos:position pos:line="73" pos:column="35"/></operator> <operator pos:line="73" pos:column="36">==<pos:position pos:line="73" pos:column="38"/></operator> <literal type="number" pos:line="73" pos:column="39">0<pos:position pos:line="73" pos:column="40"/></literal></expr>)<pos:position pos:line="73" pos:column="41"/></condition><then pos:line="73" pos:column="41">
				<block type="pseudo"><break pos:line="74" pos:column="33">break;<pos:position pos:line="74" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">strlcpy<pos:position pos:line="75" pos:column="32"/></name><argument_list pos:line="75" pos:column="32">(<argument><expr><name pos:line="75" pos:column="33">fbuf<pos:position pos:line="75" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="39">*<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="40">argv<pos:position pos:line="75" pos:column="44"/></name><operator pos:line="75" pos:column="44">++<pos:position pos:line="75" pos:column="46"/></operator></expr></argument>, <argument><expr><name pos:line="75" pos:column="48">MAXPATHLEN<pos:position pos:line="75" pos:column="58"/></name></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">sanitize_paths<pos:position pos:line="76" pos:column="43"/></name></expr>)<pos:position pos:line="76" pos:column="44"/></condition><then pos:line="76" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="33">sanitize_path<pos:position pos:line="77" pos:column="46"/></name><argument_list pos:line="77" pos:column="46">(<argument><expr><name pos:line="77" pos:column="47">fbuf<pos:position pos:line="77" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="53">fbuf<pos:position pos:line="77" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="59">""<pos:position pos:line="77" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="63">0<pos:position pos:line="77" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="66">SP_KEEP_DOT_DIRS<pos:position pos:line="77" pos:column="82"/></name></expr></argument>)<pos:position pos:line="77" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="84"/></expr_stmt></block></then></if>
		}<pos:position pos:line="78" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="80" pos:column="17">len<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">=<pos:position pos:line="80" pos:column="22"/></operator> <call><name pos:line="80" pos:column="23">strlen<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">fbuf<pos:position pos:line="80" pos:column="34"/></name></expr></argument>)<pos:position pos:line="80" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="36"/></expr_stmt>
		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name pos:line="81" pos:column="21">relative_paths<pos:position pos:line="81" pos:column="35"/></name></expr>)<pos:position pos:line="81" pos:column="36"/></condition><then pos:line="81" pos:column="36"> <block pos:line="81" pos:column="37">{
			<comment type="block" pos:line="82" pos:column="25">/* We clean up fbuf below. */</comment>
			<expr_stmt><expr><name pos:line="83" pos:column="25">name_type<pos:position pos:line="83" pos:column="34"/></name> <operator pos:line="83" pos:column="35">=<pos:position pos:line="83" pos:column="36"/></operator> <name pos:line="83" pos:column="37">NORMAL_NAME<pos:position pos:line="83" pos:column="48"/></name></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then> <elseif pos:line="84" pos:column="19">else <if pos:line="84" pos:column="24">if <condition pos:line="84" pos:column="27">(<expr><operator pos:line="84" pos:column="28">!<pos:position pos:line="84" pos:column="29"/></operator><name pos:line="84" pos:column="29">len<pos:position pos:line="84" pos:column="32"/></name> <operator pos:line="84" pos:column="33">||<pos:position pos:line="84" pos:column="35"/></operator> <name><name pos:line="84" pos:column="36">fbuf<pos:position pos:line="84" pos:column="40"/></name><index pos:line="84" pos:column="40">[<expr><name pos:line="84" pos:column="41">len<pos:position pos:line="84" pos:column="44"/></name> <operator pos:line="84" pos:column="45">-<pos:position pos:line="84" pos:column="46"/></operator> <literal type="number" pos:line="84" pos:column="47">1<pos:position pos:line="84" pos:column="48"/></literal></expr>]<pos:position pos:line="84" pos:column="49"/></index></name> <operator pos:line="84" pos:column="50">==<pos:position pos:line="84" pos:column="52"/></operator> <literal type="char" pos:line="84" pos:column="53">'/'<pos:position pos:line="84" pos:column="56"/></literal></expr>)<pos:position pos:line="84" pos:column="57"/></condition><then pos:line="84" pos:column="57"> <block pos:line="84" pos:column="58">{
			<if pos:line="85" pos:column="25">if <condition pos:line="85" pos:column="28">(<expr><name pos:line="85" pos:column="29">len<pos:position pos:line="85" pos:column="32"/></name> <operator pos:line="85" pos:column="33">==<pos:position pos:line="85" pos:column="35"/></operator> <literal type="number" pos:line="85" pos:column="36">2<pos:position pos:line="85" pos:column="37"/></literal> <operator pos:line="85" pos:column="38">&amp;&amp;<pos:position pos:line="85" pos:column="48"/></operator> <name><name pos:line="85" pos:column="41">fbuf<pos:position pos:line="85" pos:column="45"/></name><index pos:line="85" pos:column="45">[<expr><literal type="number" pos:line="85" pos:column="46">0<pos:position pos:line="85" pos:column="47"/></literal></expr>]<pos:position pos:line="85" pos:column="48"/></index></name> <operator pos:line="85" pos:column="49">==<pos:position pos:line="85" pos:column="51"/></operator> <literal type="char" pos:line="85" pos:column="52">'.'<pos:position pos:line="85" pos:column="55"/></literal></expr>)<pos:position pos:line="85" pos:column="56"/></condition><then pos:line="85" pos:column="56"> <block pos:line="85" pos:column="57">{
				<comment type="block" pos:line="86" pos:column="33">/* Turn "./" into just "." rather than "./." */</comment>
				<expr_stmt><expr><name><name pos:line="87" pos:column="33">fbuf<pos:position pos:line="87" pos:column="37"/></name><index pos:line="87" pos:column="37">[<expr><operator pos:line="87" pos:column="38">--<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="40">len<pos:position pos:line="87" pos:column="43"/></name></expr>]<pos:position pos:line="87" pos:column="44"/></index></name> <operator pos:line="87" pos:column="45">=<pos:position pos:line="87" pos:column="46"/></operator> <literal type="char" pos:line="87" pos:column="47">'\0'<pos:position pos:line="87" pos:column="51"/></literal></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt>
			}<pos:position pos:line="88" pos:column="26"/></block></then> <else pos:line="88" pos:column="27">else <block pos:line="88" pos:column="32">{
				<if pos:line="89" pos:column="33">if <condition pos:line="89" pos:column="36">(<expr><name pos:line="89" pos:column="37">len<pos:position pos:line="89" pos:column="40"/></name> <operator pos:line="89" pos:column="41">+<pos:position pos:line="89" pos:column="42"/></operator> <literal type="number" pos:line="89" pos:column="43">1<pos:position pos:line="89" pos:column="44"/></literal> <operator pos:line="89" pos:column="45">&gt;=<pos:position pos:line="89" pos:column="50"/></operator> <name pos:line="89" pos:column="48">MAXPATHLEN<pos:position pos:line="89" pos:column="58"/></name></expr>)<pos:position pos:line="89" pos:column="59"/></condition><then pos:line="89" pos:column="59">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="41">overflow_exit<pos:position pos:line="90" pos:column="54"/></name><argument_list pos:line="90" pos:column="54">(<argument><expr><literal type="string" pos:line="90" pos:column="55">"send_file_list"<pos:position pos:line="90" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="73"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="91" pos:column="33">fbuf<pos:position pos:line="91" pos:column="37"/></name><index pos:line="91" pos:column="37">[<expr><name pos:line="91" pos:column="38">len<pos:position pos:line="91" pos:column="41"/></name><operator pos:line="91" pos:column="41">++<pos:position pos:line="91" pos:column="43"/></operator></expr>]<pos:position pos:line="91" pos:column="44"/></index></name> <operator pos:line="91" pos:column="45">=<pos:position pos:line="91" pos:column="46"/></operator> <literal type="char" pos:line="91" pos:column="47">'.'<pos:position pos:line="91" pos:column="50"/></literal></expr>;<pos:position pos:line="91" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="92" pos:column="33">fbuf<pos:position pos:line="92" pos:column="37"/></name><index pos:line="92" pos:column="37">[<expr><name pos:line="92" pos:column="38">len<pos:position pos:line="92" pos:column="41"/></name></expr>]<pos:position pos:line="92" pos:column="42"/></index></name> <operator pos:line="92" pos:column="43">=<pos:position pos:line="92" pos:column="44"/></operator> <literal type="char" pos:line="92" pos:column="45">'\0'<pos:position pos:line="92" pos:column="49"/></literal></expr>;<pos:position pos:line="92" pos:column="50"/></expr_stmt>
			}<pos:position pos:line="93" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name pos:line="94" pos:column="25">name_type<pos:position pos:line="94" pos:column="34"/></name> <operator pos:line="94" pos:column="35">=<pos:position pos:line="94" pos:column="36"/></operator> <name pos:line="94" pos:column="37">DOTDIR_NAME<pos:position pos:line="94" pos:column="48"/></name></expr>;<pos:position pos:line="94" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if></elseif> <elseif pos:line="95" pos:column="19">else <if pos:line="95" pos:column="24">if <condition pos:line="95" pos:column="27">(<expr><name pos:line="95" pos:column="28">len<pos:position pos:line="95" pos:column="31"/></name> <operator pos:line="95" pos:column="32">&gt;<pos:position pos:line="95" pos:column="36"/></operator> <literal type="number" pos:line="95" pos:column="34">1<pos:position pos:line="95" pos:column="35"/></literal> <operator pos:line="95" pos:column="36">&amp;&amp;<pos:position pos:line="95" pos:column="46"/></operator> <name><name pos:line="95" pos:column="39">fbuf<pos:position pos:line="95" pos:column="43"/></name><index pos:line="95" pos:column="43">[<expr><name pos:line="95" pos:column="44">len<pos:position pos:line="95" pos:column="47"/></name><operator pos:line="95" pos:column="47">-<pos:position pos:line="95" pos:column="48"/></operator><literal type="number" pos:line="95" pos:column="48">1<pos:position pos:line="95" pos:column="49"/></literal></expr>]<pos:position pos:line="95" pos:column="50"/></index></name> <operator pos:line="95" pos:column="51">==<pos:position pos:line="95" pos:column="53"/></operator> <literal type="char" pos:line="95" pos:column="54">'.'<pos:position pos:line="95" pos:column="57"/></literal> <operator pos:line="95" pos:column="58">&amp;&amp;<pos:position pos:line="95" pos:column="68"/></operator> <name><name pos:line="95" pos:column="61">fbuf<pos:position pos:line="95" pos:column="65"/></name><index pos:line="95" pos:column="65">[<expr><name pos:line="95" pos:column="66">len<pos:position pos:line="95" pos:column="69"/></name><operator pos:line="95" pos:column="69">-<pos:position pos:line="95" pos:column="70"/></operator><literal type="number" pos:line="95" pos:column="70">2<pos:position pos:line="95" pos:column="71"/></literal></expr>]<pos:position pos:line="95" pos:column="72"/></index></name> <operator pos:line="95" pos:column="73">==<pos:position pos:line="95" pos:column="75"/></operator> <literal type="char" pos:line="95" pos:column="76">'.'<pos:position pos:line="95" pos:column="79"/></literal>
		    <operator pos:line="96" pos:column="21">&amp;&amp;<pos:position pos:line="96" pos:column="31"/></operator> <operator pos:line="96" pos:column="24">(<pos:position pos:line="96" pos:column="25"/></operator><name pos:line="96" pos:column="25">len<pos:position pos:line="96" pos:column="28"/></name> <operator pos:line="96" pos:column="29">==<pos:position pos:line="96" pos:column="31"/></operator> <literal type="number" pos:line="96" pos:column="32">2<pos:position pos:line="96" pos:column="33"/></literal> <operator pos:line="96" pos:column="34">||<pos:position pos:line="96" pos:column="36"/></operator> <name><name pos:line="96" pos:column="37">fbuf<pos:position pos:line="96" pos:column="41"/></name><index pos:line="96" pos:column="41">[<expr><name pos:line="96" pos:column="42">len<pos:position pos:line="96" pos:column="45"/></name><operator pos:line="96" pos:column="45">-<pos:position pos:line="96" pos:column="46"/></operator><literal type="number" pos:line="96" pos:column="46">3<pos:position pos:line="96" pos:column="47"/></literal></expr>]<pos:position pos:line="96" pos:column="48"/></index></name> <operator pos:line="96" pos:column="49">==<pos:position pos:line="96" pos:column="51"/></operator> <literal type="char" pos:line="96" pos:column="52">'/'<pos:position pos:line="96" pos:column="55"/></literal><operator pos:line="96" pos:column="55">)<pos:position pos:line="96" pos:column="56"/></operator></expr>)<pos:position pos:line="96" pos:column="57"/></condition><then pos:line="96" pos:column="57"> <block pos:line="96" pos:column="58">{
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><name pos:line="97" pos:column="29">len<pos:position pos:line="97" pos:column="32"/></name> <operator pos:line="97" pos:column="33">+<pos:position pos:line="97" pos:column="34"/></operator> <literal type="number" pos:line="97" pos:column="35">2<pos:position pos:line="97" pos:column="36"/></literal> <operator pos:line="97" pos:column="37">&gt;=<pos:position pos:line="97" pos:column="42"/></operator> <name pos:line="97" pos:column="40">MAXPATHLEN<pos:position pos:line="97" pos:column="50"/></name></expr>)<pos:position pos:line="97" pos:column="51"/></condition><then pos:line="97" pos:column="51">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="33">overflow_exit<pos:position pos:line="98" pos:column="46"/></name><argument_list pos:line="98" pos:column="46">(<argument><expr><literal type="string" pos:line="98" pos:column="47">"send_file_list"<pos:position pos:line="98" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="65"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="99" pos:column="25">fbuf<pos:position pos:line="99" pos:column="29"/></name><index pos:line="99" pos:column="29">[<expr><name pos:line="99" pos:column="30">len<pos:position pos:line="99" pos:column="33"/></name><operator pos:line="99" pos:column="33">++<pos:position pos:line="99" pos:column="35"/></operator></expr>]<pos:position pos:line="99" pos:column="36"/></index></name> <operator pos:line="99" pos:column="37">=<pos:position pos:line="99" pos:column="38"/></operator> <literal type="char" pos:line="99" pos:column="39">'/'<pos:position pos:line="99" pos:column="42"/></literal></expr>;<pos:position pos:line="99" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="100" pos:column="25">fbuf<pos:position pos:line="100" pos:column="29"/></name><index pos:line="100" pos:column="29">[<expr><name pos:line="100" pos:column="30">len<pos:position pos:line="100" pos:column="33"/></name><operator pos:line="100" pos:column="33">++<pos:position pos:line="100" pos:column="35"/></operator></expr>]<pos:position pos:line="100" pos:column="36"/></index></name> <operator pos:line="100" pos:column="37">=<pos:position pos:line="100" pos:column="38"/></operator> <literal type="char" pos:line="100" pos:column="39">'.'<pos:position pos:line="100" pos:column="42"/></literal></expr>;<pos:position pos:line="100" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="101" pos:column="25">fbuf<pos:position pos:line="101" pos:column="29"/></name><index pos:line="101" pos:column="29">[<expr><name pos:line="101" pos:column="30">len<pos:position pos:line="101" pos:column="33"/></name></expr>]<pos:position pos:line="101" pos:column="34"/></index></name> <operator pos:line="101" pos:column="35">=<pos:position pos:line="101" pos:column="36"/></operator> <literal type="char" pos:line="101" pos:column="37">'\0'<pos:position pos:line="101" pos:column="41"/></literal></expr>;<pos:position pos:line="101" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="102" pos:column="25">name_type<pos:position pos:line="102" pos:column="34"/></name> <operator pos:line="102" pos:column="35">=<pos:position pos:line="102" pos:column="36"/></operator> <name pos:line="102" pos:column="37">DOTDIR_NAME<pos:position pos:line="102" pos:column="48"/></name></expr>;<pos:position pos:line="102" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="103" pos:column="18"/></block></then></if></elseif> <elseif pos:line="103" pos:column="19">else <if pos:line="103" pos:column="24">if <condition pos:line="103" pos:column="27">(<expr><name><name pos:line="103" pos:column="28">fbuf<pos:position pos:line="103" pos:column="32"/></name><index pos:line="103" pos:column="32">[<expr><name pos:line="103" pos:column="33">len<pos:position pos:line="103" pos:column="36"/></name><operator pos:line="103" pos:column="36">-<pos:position pos:line="103" pos:column="37"/></operator><literal type="number" pos:line="103" pos:column="37">1<pos:position pos:line="103" pos:column="38"/></literal></expr>]<pos:position pos:line="103" pos:column="39"/></index></name> <operator pos:line="103" pos:column="40">==<pos:position pos:line="103" pos:column="42"/></operator> <literal type="char" pos:line="103" pos:column="43">'.'<pos:position pos:line="103" pos:column="46"/></literal> <operator pos:line="103" pos:column="47">&amp;&amp;<pos:position pos:line="103" pos:column="57"/></operator> <operator pos:line="103" pos:column="50">(<pos:position pos:line="103" pos:column="51"/></operator><name pos:line="103" pos:column="51">len<pos:position pos:line="103" pos:column="54"/></name> <operator pos:line="103" pos:column="55">==<pos:position pos:line="103" pos:column="57"/></operator> <literal type="number" pos:line="103" pos:column="58">1<pos:position pos:line="103" pos:column="59"/></literal> <operator pos:line="103" pos:column="60">||<pos:position pos:line="103" pos:column="62"/></operator> <name><name pos:line="103" pos:column="63">fbuf<pos:position pos:line="103" pos:column="67"/></name><index pos:line="103" pos:column="67">[<expr><name pos:line="103" pos:column="68">len<pos:position pos:line="103" pos:column="71"/></name><operator pos:line="103" pos:column="71">-<pos:position pos:line="103" pos:column="72"/></operator><literal type="number" pos:line="103" pos:column="72">2<pos:position pos:line="103" pos:column="73"/></literal></expr>]<pos:position pos:line="103" pos:column="74"/></index></name> <operator pos:line="103" pos:column="75">==<pos:position pos:line="103" pos:column="77"/></operator> <literal type="char" pos:line="103" pos:column="78">'/'<pos:position pos:line="103" pos:column="81"/></literal><operator pos:line="103" pos:column="81">)<pos:position pos:line="103" pos:column="82"/></operator></expr>)<pos:position pos:line="103" pos:column="83"/></condition><then pos:line="103" pos:column="83">
			<block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="25">name_type<pos:position pos:line="104" pos:column="34"/></name> <operator pos:line="104" pos:column="35">=<pos:position pos:line="104" pos:column="36"/></operator> <name pos:line="104" pos:column="37">DOTDIR_NAME<pos:position pos:line="104" pos:column="48"/></name></expr>;<pos:position pos:line="104" pos:column="49"/></expr_stmt></block></then></if></elseif>
		<else pos:line="105" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="25">name_type<pos:position pos:line="106" pos:column="34"/></name> <operator pos:line="106" pos:column="35">=<pos:position pos:line="106" pos:column="36"/></operator> <name pos:line="106" pos:column="37">NORMAL_NAME<pos:position pos:line="106" pos:column="48"/></name></expr>;<pos:position pos:line="106" pos:column="49"/></expr_stmt></block></else></if>

		<expr_stmt><expr><name pos:line="108" pos:column="17">dir<pos:position pos:line="108" pos:column="20"/></name> <operator pos:line="108" pos:column="21">=<pos:position pos:line="108" pos:column="22"/></operator> <name pos:line="108" pos:column="23">NULL<pos:position pos:line="108" pos:column="27"/></name></expr>;<pos:position pos:line="108" pos:column="28"/></expr_stmt>

		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><operator pos:line="110" pos:column="21">!<pos:position pos:line="110" pos:column="22"/></operator><name pos:line="110" pos:column="22">relative_paths<pos:position pos:line="110" pos:column="36"/></name></expr>)<pos:position pos:line="110" pos:column="37"/></condition><then pos:line="110" pos:column="37"> <block pos:line="110" pos:column="38">{
			<expr_stmt><expr><name pos:line="111" pos:column="25">p<pos:position pos:line="111" pos:column="26"/></name> <operator pos:line="111" pos:column="27">=<pos:position pos:line="111" pos:column="28"/></operator> <call><name pos:line="111" pos:column="29">strrchr<pos:position pos:line="111" pos:column="36"/></name><argument_list pos:line="111" pos:column="36">(<argument><expr><name pos:line="111" pos:column="37">fbuf<pos:position pos:line="111" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="111" pos:column="43">'/'<pos:position pos:line="111" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="48"/></expr_stmt>
			<if pos:line="112" pos:column="25">if <condition pos:line="112" pos:column="28">(<expr><name pos:line="112" pos:column="29">p<pos:position pos:line="112" pos:column="30"/></name></expr>)<pos:position pos:line="112" pos:column="31"/></condition><then pos:line="112" pos:column="31"> <block pos:line="112" pos:column="32">{
				<expr_stmt><expr><operator pos:line="113" pos:column="33">*<pos:position pos:line="113" pos:column="34"/></operator><name pos:line="113" pos:column="34">p<pos:position pos:line="113" pos:column="35"/></name> <operator pos:line="113" pos:column="36">=<pos:position pos:line="113" pos:column="37"/></operator> <literal type="char" pos:line="113" pos:column="38">'\0'<pos:position pos:line="113" pos:column="42"/></literal></expr>;<pos:position pos:line="113" pos:column="43"/></expr_stmt>
				<if pos:line="114" pos:column="33">if <condition pos:line="114" pos:column="36">(<expr><name pos:line="114" pos:column="37">p<pos:position pos:line="114" pos:column="38"/></name> <operator pos:line="114" pos:column="39">==<pos:position pos:line="114" pos:column="41"/></operator> <name pos:line="114" pos:column="42">fbuf<pos:position pos:line="114" pos:column="46"/></name></expr>)<pos:position pos:line="114" pos:column="47"/></condition><then pos:line="114" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><name pos:line="115" pos:column="41">dir<pos:position pos:line="115" pos:column="44"/></name> <operator pos:line="115" pos:column="45">=<pos:position pos:line="115" pos:column="46"/></operator> <literal type="string" pos:line="115" pos:column="47">"/"<pos:position pos:line="115" pos:column="50"/></literal></expr>;<pos:position pos:line="115" pos:column="51"/></expr_stmt></block></then>
				<else pos:line="116" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="41">dir<pos:position pos:line="117" pos:column="44"/></name> <operator pos:line="117" pos:column="45">=<pos:position pos:line="117" pos:column="46"/></operator> <name pos:line="117" pos:column="47">fbuf<pos:position pos:line="117" pos:column="51"/></name></expr>;<pos:position pos:line="117" pos:column="52"/></expr_stmt></block></else></if>
				<expr_stmt><expr><name pos:line="118" pos:column="33">len<pos:position pos:line="118" pos:column="36"/></name> <operator pos:line="118" pos:column="37">-=<pos:position pos:line="118" pos:column="39"/></operator> <name pos:line="118" pos:column="40">p<pos:position pos:line="118" pos:column="41"/></name> <operator pos:line="118" pos:column="42">-<pos:position pos:line="118" pos:column="43"/></operator> <name pos:line="118" pos:column="44">fbuf<pos:position pos:line="118" pos:column="48"/></name> <operator pos:line="118" pos:column="49">+<pos:position pos:line="118" pos:column="50"/></operator> <literal type="number" pos:line="118" pos:column="51">1<pos:position pos:line="118" pos:column="52"/></literal></expr>;<pos:position pos:line="118" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="119" pos:column="33">fn<pos:position pos:line="119" pos:column="35"/></name> <operator pos:line="119" pos:column="36">=<pos:position pos:line="119" pos:column="37"/></operator> <name pos:line="119" pos:column="38">p<pos:position pos:line="119" pos:column="39"/></name> <operator pos:line="119" pos:column="40">+<pos:position pos:line="119" pos:column="41"/></operator> <literal type="number" pos:line="119" pos:column="42">1<pos:position pos:line="119" pos:column="43"/></literal></expr>;<pos:position pos:line="119" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="120" pos:column="26"/></block></then> <else pos:line="120" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="121" pos:column="33">fn<pos:position pos:line="121" pos:column="35"/></name> <operator pos:line="121" pos:column="36">=<pos:position pos:line="121" pos:column="37"/></operator> <name pos:line="121" pos:column="38">fbuf<pos:position pos:line="121" pos:column="42"/></name></expr>;<pos:position pos:line="121" pos:column="43"/></expr_stmt></block></else></if>
		}<pos:position pos:line="122" pos:column="18"/></block></then> <else pos:line="122" pos:column="19">else <block pos:line="122" pos:column="24">{
			<if pos:line="123" pos:column="25">if <condition pos:line="123" pos:column="28">(<expr><operator pos:line="123" pos:column="29">(<pos:position pos:line="123" pos:column="30"/></operator><name pos:line="123" pos:column="30">p<pos:position pos:line="123" pos:column="31"/></name> <operator pos:line="123" pos:column="32">=<pos:position pos:line="123" pos:column="33"/></operator> <call><name pos:line="123" pos:column="34">strstr<pos:position pos:line="123" pos:column="40"/></name><argument_list pos:line="123" pos:column="40">(<argument><expr><name pos:line="123" pos:column="41">fbuf<pos:position pos:line="123" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="47">"/./"<pos:position pos:line="123" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="53"/></argument_list></call><operator pos:line="123" pos:column="53">)<pos:position pos:line="123" pos:column="54"/></operator> <operator pos:line="123" pos:column="55">!=<pos:position pos:line="123" pos:column="57"/></operator> <name pos:line="123" pos:column="58">NULL<pos:position pos:line="123" pos:column="62"/></name></expr>)<pos:position pos:line="123" pos:column="63"/></condition><then pos:line="123" pos:column="63"> <block pos:line="123" pos:column="64">{
				<expr_stmt><expr><operator pos:line="124" pos:column="33">*<pos:position pos:line="124" pos:column="34"/></operator><name pos:line="124" pos:column="34">p<pos:position pos:line="124" pos:column="35"/></name> <operator pos:line="124" pos:column="36">=<pos:position pos:line="124" pos:column="37"/></operator> <literal type="char" pos:line="124" pos:column="38">'\0'<pos:position pos:line="124" pos:column="42"/></literal></expr>;<pos:position pos:line="124" pos:column="43"/></expr_stmt>
				<if pos:line="125" pos:column="33">if <condition pos:line="125" pos:column="36">(<expr><name pos:line="125" pos:column="37">p<pos:position pos:line="125" pos:column="38"/></name> <operator pos:line="125" pos:column="39">==<pos:position pos:line="125" pos:column="41"/></operator> <name pos:line="125" pos:column="42">fbuf<pos:position pos:line="125" pos:column="46"/></name></expr>)<pos:position pos:line="125" pos:column="47"/></condition><then pos:line="125" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="41">dir<pos:position pos:line="126" pos:column="44"/></name> <operator pos:line="126" pos:column="45">=<pos:position pos:line="126" pos:column="46"/></operator> <literal type="string" pos:line="126" pos:column="47">"/"<pos:position pos:line="126" pos:column="50"/></literal></expr>;<pos:position pos:line="126" pos:column="51"/></expr_stmt></block></then>
				<else pos:line="127" pos:column="33">else <block pos:line="127" pos:column="38">{
					<expr_stmt><expr><name pos:line="128" pos:column="41">dir<pos:position pos:line="128" pos:column="44"/></name> <operator pos:line="128" pos:column="45">=<pos:position pos:line="128" pos:column="46"/></operator> <name pos:line="128" pos:column="47">fbuf<pos:position pos:line="128" pos:column="51"/></name></expr>;<pos:position pos:line="128" pos:column="52"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="129" pos:column="41">clean_fname<pos:position pos:line="129" pos:column="52"/></name><argument_list pos:line="129" pos:column="52">(<argument><expr><name pos:line="129" pos:column="53">dir<pos:position pos:line="129" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="58">0<pos:position pos:line="129" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="61"/></expr_stmt>
				}<pos:position pos:line="130" pos:column="34"/></block></else></if>
				<expr_stmt><expr><name pos:line="131" pos:column="33">fn<pos:position pos:line="131" pos:column="35"/></name> <operator pos:line="131" pos:column="36">=<pos:position pos:line="131" pos:column="37"/></operator> <name pos:line="131" pos:column="38">p<pos:position pos:line="131" pos:column="39"/></name> <operator pos:line="131" pos:column="40">+<pos:position pos:line="131" pos:column="41"/></operator> <literal type="number" pos:line="131" pos:column="42">3<pos:position pos:line="131" pos:column="43"/></literal></expr>;<pos:position pos:line="131" pos:column="44"/></expr_stmt>
				<while pos:line="132" pos:column="33">while <condition pos:line="132" pos:column="39">(<expr><operator pos:line="132" pos:column="40">*<pos:position pos:line="132" pos:column="41"/></operator><name pos:line="132" pos:column="41">fn<pos:position pos:line="132" pos:column="43"/></name> <operator pos:line="132" pos:column="44">==<pos:position pos:line="132" pos:column="46"/></operator> <literal type="char" pos:line="132" pos:column="47">'/'<pos:position pos:line="132" pos:column="50"/></literal></expr>)<pos:position pos:line="132" pos:column="51"/></condition>
					<block type="pseudo"><expr_stmt><expr><name pos:line="133" pos:column="41">fn<pos:position pos:line="133" pos:column="43"/></name><operator pos:line="133" pos:column="43">++<pos:position pos:line="133" pos:column="45"/></operator></expr>;<pos:position pos:line="133" pos:column="46"/></expr_stmt></block></while>
				<if pos:line="134" pos:column="33">if <condition pos:line="134" pos:column="36">(<expr><operator pos:line="134" pos:column="37">!<pos:position pos:line="134" pos:column="38"/></operator><operator pos:line="134" pos:column="38">*<pos:position pos:line="134" pos:column="39"/></operator><name pos:line="134" pos:column="39">fn<pos:position pos:line="134" pos:column="41"/></name></expr>)<pos:position pos:line="134" pos:column="42"/></condition><then pos:line="134" pos:column="42">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="135" pos:column="41">*<pos:position pos:line="135" pos:column="42"/></operator><operator pos:line="135" pos:column="42">--<pos:position pos:line="135" pos:column="44"/></operator><name pos:line="135" pos:column="44">fn<pos:position pos:line="135" pos:column="46"/></name> <operator pos:line="135" pos:column="47">=<pos:position pos:line="135" pos:column="48"/></operator> <literal type="char" pos:line="135" pos:column="49">'\0'<pos:position pos:line="135" pos:column="53"/></literal></expr>;<pos:position pos:line="135" pos:column="54"/></expr_stmt></block></then></if> <comment type="block" pos:line="135" pos:column="55">/* ensure room for '.' */</comment>
			}<pos:position pos:line="136" pos:column="26"/></block></then> <else pos:line="136" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="33">fn<pos:position pos:line="137" pos:column="35"/></name> <operator pos:line="137" pos:column="36">=<pos:position pos:line="137" pos:column="37"/></operator> <name pos:line="137" pos:column="38">fbuf<pos:position pos:line="137" pos:column="42"/></name></expr>;<pos:position pos:line="137" pos:column="43"/></expr_stmt></block></else></if>
			<comment type="block" pos:line="138" pos:column="25">/* A leading ./ can be used in relative mode to affect
			 * the dest dir without its name being in the path. */</comment>
			<if pos:line="140" pos:column="25">if <condition pos:line="140" pos:column="28">(<expr><operator pos:line="140" pos:column="29">*<pos:position pos:line="140" pos:column="30"/></operator><name pos:line="140" pos:column="30">fn<pos:position pos:line="140" pos:column="32"/></name> <operator pos:line="140" pos:column="33">==<pos:position pos:line="140" pos:column="35"/></operator> <literal type="char" pos:line="140" pos:column="36">'.'<pos:position pos:line="140" pos:column="39"/></literal> <operator pos:line="140" pos:column="40">&amp;&amp;<pos:position pos:line="140" pos:column="50"/></operator> <name><name pos:line="140" pos:column="43">fn<pos:position pos:line="140" pos:column="45"/></name><index pos:line="140" pos:column="45">[<expr><literal type="number" pos:line="140" pos:column="46">1<pos:position pos:line="140" pos:column="47"/></literal></expr>]<pos:position pos:line="140" pos:column="48"/></index></name> <operator pos:line="140" pos:column="49">==<pos:position pos:line="140" pos:column="51"/></operator> <literal type="char" pos:line="140" pos:column="52">'/'<pos:position pos:line="140" pos:column="55"/></literal> <operator pos:line="140" pos:column="56">&amp;&amp;<pos:position pos:line="140" pos:column="66"/></operator> <name><name pos:line="140" pos:column="59">fn<pos:position pos:line="140" pos:column="61"/></name><index pos:line="140" pos:column="61">[<expr><literal type="number" pos:line="140" pos:column="62">2<pos:position pos:line="140" pos:column="63"/></literal></expr>]<pos:position pos:line="140" pos:column="64"/></index></name> <operator pos:line="140" pos:column="65">&amp;&amp;<pos:position pos:line="140" pos:column="75"/></operator> <operator pos:line="140" pos:column="68">!<pos:position pos:line="140" pos:column="69"/></operator><name pos:line="140" pos:column="69">implied_dot_dir<pos:position pos:line="140" pos:column="84"/></name></expr>)<pos:position pos:line="140" pos:column="85"/></condition><then pos:line="140" pos:column="85">
				<block type="pseudo"><expr_stmt><expr><name pos:line="141" pos:column="33">implied_dot_dir<pos:position pos:line="141" pos:column="48"/></name> <operator pos:line="141" pos:column="49">=<pos:position pos:line="141" pos:column="50"/></operator> <operator pos:line="141" pos:column="51">-<pos:position pos:line="141" pos:column="52"/></operator><literal type="number" pos:line="141" pos:column="52">1<pos:position pos:line="141" pos:column="53"/></literal></expr>;<pos:position pos:line="141" pos:column="54"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="142" pos:column="25">len<pos:position pos:line="142" pos:column="28"/></name> <operator pos:line="142" pos:column="29">=<pos:position pos:line="142" pos:column="30"/></operator> <call><name pos:line="142" pos:column="31">clean_fname<pos:position pos:line="142" pos:column="42"/></name><argument_list pos:line="142" pos:column="42">(<argument><expr><name pos:line="142" pos:column="43">fn<pos:position pos:line="142" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="47">CFN_KEEP_TRAILING_SLASH<pos:position pos:line="142" pos:column="70"/></name>
					    <operator pos:line="143" pos:column="45">|<pos:position pos:line="143" pos:column="46"/></operator> <name pos:line="143" pos:column="47">CFN_DROP_TRAILING_DOT_DIR<pos:position pos:line="143" pos:column="72"/></name></expr></argument>)<pos:position pos:line="143" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="74"/></expr_stmt>
			<if pos:line="144" pos:column="25">if <condition pos:line="144" pos:column="28">(<expr><name pos:line="144" pos:column="29">len<pos:position pos:line="144" pos:column="32"/></name> <operator pos:line="144" pos:column="33">==<pos:position pos:line="144" pos:column="35"/></operator> <literal type="number" pos:line="144" pos:column="36">1<pos:position pos:line="144" pos:column="37"/></literal></expr>)<pos:position pos:line="144" pos:column="38"/></condition><then pos:line="144" pos:column="38"> <block pos:line="144" pos:column="39">{
				<if pos:line="145" pos:column="33">if <condition pos:line="145" pos:column="36">(<expr><name><name pos:line="145" pos:column="37">fn<pos:position pos:line="145" pos:column="39"/></name><index pos:line="145" pos:column="39">[<expr><literal type="number" pos:line="145" pos:column="40">0<pos:position pos:line="145" pos:column="41"/></literal></expr>]<pos:position pos:line="145" pos:column="42"/></index></name> <operator pos:line="145" pos:column="43">==<pos:position pos:line="145" pos:column="45"/></operator> <literal type="char" pos:line="145" pos:column="46">'/'<pos:position pos:line="145" pos:column="49"/></literal></expr>)<pos:position pos:line="145" pos:column="50"/></condition><then pos:line="145" pos:column="50"> <block pos:line="145" pos:column="51">{
					<expr_stmt><expr><name pos:line="146" pos:column="41">fn<pos:position pos:line="146" pos:column="43"/></name> <operator pos:line="146" pos:column="44">=<pos:position pos:line="146" pos:column="45"/></operator> <literal type="string" pos:line="146" pos:column="46">"/."<pos:position pos:line="146" pos:column="50"/></literal></expr>;<pos:position pos:line="146" pos:column="51"/></expr_stmt>
					<expr_stmt><expr><name pos:line="147" pos:column="41">len<pos:position pos:line="147" pos:column="44"/></name> <operator pos:line="147" pos:column="45">=<pos:position pos:line="147" pos:column="46"/></operator> <literal type="number" pos:line="147" pos:column="47">2<pos:position pos:line="147" pos:column="48"/></literal></expr>;<pos:position pos:line="147" pos:column="49"/></expr_stmt>
					<expr_stmt><expr><name pos:line="148" pos:column="41">name_type<pos:position pos:line="148" pos:column="50"/></name> <operator pos:line="148" pos:column="51">=<pos:position pos:line="148" pos:column="52"/></operator> <name pos:line="148" pos:column="53">DOTDIR_NAME<pos:position pos:line="148" pos:column="64"/></name></expr>;<pos:position pos:line="148" pos:column="65"/></expr_stmt>
				}<pos:position pos:line="149" pos:column="34"/></block></then> <elseif pos:line="149" pos:column="35">else <if pos:line="149" pos:column="40">if <condition pos:line="149" pos:column="43">(<expr><name><name pos:line="149" pos:column="44">fn<pos:position pos:line="149" pos:column="46"/></name><index pos:line="149" pos:column="46">[<expr><literal type="number" pos:line="149" pos:column="47">0<pos:position pos:line="149" pos:column="48"/></literal></expr>]<pos:position pos:line="149" pos:column="49"/></index></name> <operator pos:line="149" pos:column="50">==<pos:position pos:line="149" pos:column="52"/></operator> <literal type="char" pos:line="149" pos:column="53">'.'<pos:position pos:line="149" pos:column="56"/></literal></expr>)<pos:position pos:line="149" pos:column="57"/></condition><then pos:line="149" pos:column="57">
					<block type="pseudo"><expr_stmt><expr><name pos:line="150" pos:column="41">name_type<pos:position pos:line="150" pos:column="50"/></name> <operator pos:line="150" pos:column="51">=<pos:position pos:line="150" pos:column="52"/></operator> <name pos:line="150" pos:column="53">DOTDIR_NAME<pos:position pos:line="150" pos:column="64"/></name></expr>;<pos:position pos:line="150" pos:column="65"/></expr_stmt></block></then></if></elseif></if>
			}<pos:position pos:line="151" pos:column="26"/></block></then> <elseif pos:line="151" pos:column="27">else <if pos:line="151" pos:column="32">if <condition pos:line="151" pos:column="35">(<expr><name><name pos:line="151" pos:column="36">fn<pos:position pos:line="151" pos:column="38"/></name><index pos:line="151" pos:column="38">[<expr><name pos:line="151" pos:column="39">len<pos:position pos:line="151" pos:column="42"/></name><operator pos:line="151" pos:column="42">-<pos:position pos:line="151" pos:column="43"/></operator><literal type="number" pos:line="151" pos:column="43">1<pos:position pos:line="151" pos:column="44"/></literal></expr>]<pos:position pos:line="151" pos:column="45"/></index></name> <operator pos:line="151" pos:column="46">==<pos:position pos:line="151" pos:column="48"/></operator> <literal type="char" pos:line="151" pos:column="49">'/'<pos:position pos:line="151" pos:column="52"/></literal></expr>)<pos:position pos:line="151" pos:column="53"/></condition><then pos:line="151" pos:column="53"> <block pos:line="151" pos:column="54">{
				<expr_stmt><expr><name><name pos:line="152" pos:column="33">fn<pos:position pos:line="152" pos:column="35"/></name><index pos:line="152" pos:column="35">[<expr><operator pos:line="152" pos:column="36">--<pos:position pos:line="152" pos:column="38"/></operator><name pos:line="152" pos:column="38">len<pos:position pos:line="152" pos:column="41"/></name></expr>]<pos:position pos:line="152" pos:column="42"/></index></name> <operator pos:line="152" pos:column="43">=<pos:position pos:line="152" pos:column="44"/></operator> <literal type="char" pos:line="152" pos:column="45">'\0'<pos:position pos:line="152" pos:column="49"/></literal></expr>;<pos:position pos:line="152" pos:column="50"/></expr_stmt>
				<if pos:line="153" pos:column="33">if <condition pos:line="153" pos:column="36">(<expr><name pos:line="153" pos:column="37">len<pos:position pos:line="153" pos:column="40"/></name> <operator pos:line="153" pos:column="41">==<pos:position pos:line="153" pos:column="43"/></operator> <literal type="number" pos:line="153" pos:column="44">1<pos:position pos:line="153" pos:column="45"/></literal> <operator pos:line="153" pos:column="46">&amp;&amp;<pos:position pos:line="153" pos:column="56"/></operator> <operator pos:line="153" pos:column="49">*<pos:position pos:line="153" pos:column="50"/></operator><name pos:line="153" pos:column="50">fn<pos:position pos:line="153" pos:column="52"/></name> <operator pos:line="153" pos:column="53">==<pos:position pos:line="153" pos:column="55"/></operator> <literal type="char" pos:line="153" pos:column="56">'.'<pos:position pos:line="153" pos:column="59"/></literal></expr>)<pos:position pos:line="153" pos:column="60"/></condition><then pos:line="153" pos:column="60">
					<block type="pseudo"><expr_stmt><expr><name pos:line="154" pos:column="41">name_type<pos:position pos:line="154" pos:column="50"/></name> <operator pos:line="154" pos:column="51">=<pos:position pos:line="154" pos:column="52"/></operator> <name pos:line="154" pos:column="53">DOTDIR_NAME<pos:position pos:line="154" pos:column="64"/></name></expr>;<pos:position pos:line="154" pos:column="65"/></expr_stmt></block></then>
				<else pos:line="155" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="41">name_type<pos:position pos:line="156" pos:column="50"/></name> <operator pos:line="156" pos:column="51">=<pos:position pos:line="156" pos:column="52"/></operator> <name pos:line="156" pos:column="53">SLASH_ENDING_NAME<pos:position pos:line="156" pos:column="70"/></name></expr>;<pos:position pos:line="156" pos:column="71"/></expr_stmt></block></else></if>
			}<pos:position pos:line="157" pos:column="26"/></block></then></if></elseif></if>
			<comment type="block" pos:line="158" pos:column="25">/* Reject a ".." dir in the active part of the path. */</comment>
			<for pos:line="159" pos:column="25">for <control pos:line="159" pos:column="29">(<init><expr><name pos:line="159" pos:column="30">p<pos:position pos:line="159" pos:column="31"/></name> <operator pos:line="159" pos:column="32">=<pos:position pos:line="159" pos:column="33"/></operator> <name pos:line="159" pos:column="34">fn<pos:position pos:line="159" pos:column="36"/></name></expr>;<pos:position pos:line="159" pos:column="37"/></init> <condition><expr><operator pos:line="159" pos:column="38">(<pos:position pos:line="159" pos:column="39"/></operator><name pos:line="159" pos:column="39">p<pos:position pos:line="159" pos:column="40"/></name> <operator pos:line="159" pos:column="41">=<pos:position pos:line="159" pos:column="42"/></operator> <call><name pos:line="159" pos:column="43">strstr<pos:position pos:line="159" pos:column="49"/></name><argument_list pos:line="159" pos:column="49">(<argument><expr><name pos:line="159" pos:column="50">p<pos:position pos:line="159" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="53">".."<pos:position pos:line="159" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="58"/></argument_list></call><operator pos:line="159" pos:column="58">)<pos:position pos:line="159" pos:column="59"/></operator> <operator pos:line="159" pos:column="60">!=<pos:position pos:line="159" pos:column="62"/></operator> <name pos:line="159" pos:column="63">NULL<pos:position pos:line="159" pos:column="67"/></name></expr>;<pos:position pos:line="159" pos:column="68"/></condition> <incr><expr><name pos:line="159" pos:column="69">p<pos:position pos:line="159" pos:column="70"/></name> <operator pos:line="159" pos:column="71">+=<pos:position pos:line="159" pos:column="73"/></operator> <literal type="number" pos:line="159" pos:column="74">2<pos:position pos:line="159" pos:column="75"/></literal></expr></incr>)<pos:position pos:line="159" pos:column="76"/></control> <block pos:line="159" pos:column="77">{
				<if pos:line="160" pos:column="33">if <condition pos:line="160" pos:column="36">(<expr><operator pos:line="160" pos:column="37">(<pos:position pos:line="160" pos:column="38"/></operator><name><name pos:line="160" pos:column="38">p<pos:position pos:line="160" pos:column="39"/></name><index pos:line="160" pos:column="39">[<expr><literal type="number" pos:line="160" pos:column="40">2<pos:position pos:line="160" pos:column="41"/></literal></expr>]<pos:position pos:line="160" pos:column="42"/></index></name> <operator pos:line="160" pos:column="43">==<pos:position pos:line="160" pos:column="45"/></operator> <literal type="char" pos:line="160" pos:column="46">'/'<pos:position pos:line="160" pos:column="49"/></literal> <operator pos:line="160" pos:column="50">||<pos:position pos:line="160" pos:column="52"/></operator> <name><name pos:line="160" pos:column="53">p<pos:position pos:line="160" pos:column="54"/></name><index pos:line="160" pos:column="54">[<expr><literal type="number" pos:line="160" pos:column="55">2<pos:position pos:line="160" pos:column="56"/></literal></expr>]<pos:position pos:line="160" pos:column="57"/></index></name> <operator pos:line="160" pos:column="58">==<pos:position pos:line="160" pos:column="60"/></operator> <literal type="char" pos:line="160" pos:column="61">'\0'<pos:position pos:line="160" pos:column="65"/></literal><operator pos:line="160" pos:column="65">)<pos:position pos:line="160" pos:column="66"/></operator>
				 <operator pos:line="161" pos:column="34">&amp;&amp;<pos:position pos:line="161" pos:column="44"/></operator> <operator pos:line="161" pos:column="37">(<pos:position pos:line="161" pos:column="38"/></operator><name pos:line="161" pos:column="38">p<pos:position pos:line="161" pos:column="39"/></name> <operator pos:line="161" pos:column="40">==<pos:position pos:line="161" pos:column="42"/></operator> <name pos:line="161" pos:column="43">fn<pos:position pos:line="161" pos:column="45"/></name> <operator pos:line="161" pos:column="46">||<pos:position pos:line="161" pos:column="48"/></operator> <name><name pos:line="161" pos:column="49">p<pos:position pos:line="161" pos:column="50"/></name><index pos:line="161" pos:column="50">[<expr><operator pos:line="161" pos:column="51">-<pos:position pos:line="161" pos:column="52"/></operator><literal type="number" pos:line="161" pos:column="52">1<pos:position pos:line="161" pos:column="53"/></literal></expr>]<pos:position pos:line="161" pos:column="54"/></index></name> <operator pos:line="161" pos:column="55">==<pos:position pos:line="161" pos:column="57"/></operator> <literal type="char" pos:line="161" pos:column="58">'/'<pos:position pos:line="161" pos:column="61"/></literal><operator pos:line="161" pos:column="61">)<pos:position pos:line="161" pos:column="62"/></operator></expr>)<pos:position pos:line="161" pos:column="63"/></condition><then pos:line="161" pos:column="63"> <block pos:line="161" pos:column="64">{
					<expr_stmt><expr><call><name pos:line="162" pos:column="41">rprintf<pos:position pos:line="162" pos:column="48"/></name><argument_list pos:line="162" pos:column="48">(<argument><expr><name pos:line="162" pos:column="49">FERROR<pos:position pos:line="162" pos:column="55"/></name></expr></argument>,
					    <argument><expr><literal type="string" pos:line="163" pos:column="45">"found \"..\" dir in relative path: %s\n"<pos:position pos:line="163" pos:column="86"/></literal></expr></argument>,
					    <argument><expr><name pos:line="164" pos:column="45">fn<pos:position pos:line="164" pos:column="47"/></name></expr></argument>)<pos:position pos:line="164" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="49"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="165" pos:column="41">exit_cleanup<pos:position pos:line="165" pos:column="53"/></name><argument_list pos:line="165" pos:column="53">(<argument><expr><name pos:line="165" pos:column="54">RERR_SYNTAX<pos:position pos:line="165" pos:column="65"/></name></expr></argument>)<pos:position pos:line="165" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="67"/></expr_stmt>
				}<pos:position pos:line="166" pos:column="34"/></block></then></if>
			}<pos:position pos:line="167" pos:column="26"/></block></for>
		}<pos:position pos:line="168" pos:column="18"/></block></else></if>

		<if pos:line="170" pos:column="17">if <condition pos:line="170" pos:column="20">(<expr><operator pos:line="170" pos:column="21">!<pos:position pos:line="170" pos:column="22"/></operator><operator pos:line="170" pos:column="22">*<pos:position pos:line="170" pos:column="23"/></operator><name pos:line="170" pos:column="23">fn<pos:position pos:line="170" pos:column="25"/></name></expr>)<pos:position pos:line="170" pos:column="26"/></condition><then pos:line="170" pos:column="26"> <block pos:line="170" pos:column="27">{
			<expr_stmt><expr><name pos:line="171" pos:column="25">len<pos:position pos:line="171" pos:column="28"/></name> <operator pos:line="171" pos:column="29">=<pos:position pos:line="171" pos:column="30"/></operator> <literal type="number" pos:line="171" pos:column="31">1<pos:position pos:line="171" pos:column="32"/></literal></expr>;<pos:position pos:line="171" pos:column="33"/></expr_stmt>
			<expr_stmt><expr><name pos:line="172" pos:column="25">fn<pos:position pos:line="172" pos:column="27"/></name> <operator pos:line="172" pos:column="28">=<pos:position pos:line="172" pos:column="29"/></operator> <literal type="string" pos:line="172" pos:column="30">"."<pos:position pos:line="172" pos:column="33"/></literal></expr>;<pos:position pos:line="172" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="173" pos:column="25">name_type<pos:position pos:line="173" pos:column="34"/></name> <operator pos:line="173" pos:column="35">=<pos:position pos:line="173" pos:column="36"/></operator> <name pos:line="173" pos:column="37">DOTDIR_NAME<pos:position pos:line="173" pos:column="48"/></name></expr>;<pos:position pos:line="173" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="174" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="176" pos:column="17">dirlen<pos:position pos:line="176" pos:column="23"/></name> <operator pos:line="176" pos:column="24">=<pos:position pos:line="176" pos:column="25"/></operator> <ternary><condition><expr><name pos:line="176" pos:column="26">dir<pos:position pos:line="176" pos:column="29"/></name></expr> ?<pos:position pos:line="176" pos:column="31"/></condition><then pos:line="176" pos:column="31"> <expr><call><name pos:line="176" pos:column="32">strlen<pos:position pos:line="176" pos:column="38"/></name><argument_list pos:line="176" pos:column="38">(<argument><expr><name pos:line="176" pos:column="39">dir<pos:position pos:line="176" pos:column="42"/></name></expr></argument>)<pos:position pos:line="176" pos:column="43"/></argument_list></call></expr> <pos:position pos:line="176" pos:column="44"/></then><else pos:line="176" pos:column="44">: <expr><literal type="number" pos:line="176" pos:column="46">0<pos:position pos:line="176" pos:column="47"/></literal></expr></else></ternary></expr>;<pos:position pos:line="176" pos:column="48"/></expr_stmt>
		<if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><name pos:line="177" pos:column="21">dirlen<pos:position pos:line="177" pos:column="27"/></name> <operator pos:line="177" pos:column="28">!=<pos:position pos:line="177" pos:column="30"/></operator> <name pos:line="177" pos:column="31">lastdir_len<pos:position pos:line="177" pos:column="42"/></name> <operator pos:line="177" pos:column="43">||<pos:position pos:line="177" pos:column="45"/></operator> <call><name pos:line="177" pos:column="46">memcmp<pos:position pos:line="177" pos:column="52"/></name><argument_list pos:line="177" pos:column="52">(<argument><expr><name pos:line="177" pos:column="53">lastdir<pos:position pos:line="177" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="62">dir<pos:position pos:line="177" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="67">dirlen<pos:position pos:line="177" pos:column="73"/></name></expr></argument>)<pos:position pos:line="177" pos:column="74"/></argument_list></call> <operator pos:line="177" pos:column="75">!=<pos:position pos:line="177" pos:column="77"/></operator> <literal type="number" pos:line="177" pos:column="78">0<pos:position pos:line="177" pos:column="79"/></literal></expr>)<pos:position pos:line="177" pos:column="80"/></condition><then pos:line="177" pos:column="80"> <block pos:line="177" pos:column="81">{
			<if pos:line="178" pos:column="25">if <condition pos:line="178" pos:column="28">(<expr><operator pos:line="178" pos:column="29">!<pos:position pos:line="178" pos:column="30"/></operator><call><name pos:line="178" pos:column="30">change_pathname<pos:position pos:line="178" pos:column="45"/></name><argument_list pos:line="178" pos:column="45">(<argument><expr><name pos:line="178" pos:column="46">NULL<pos:position pos:line="178" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="52">dir<pos:position pos:line="178" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="178" pos:column="57">-<pos:position pos:line="178" pos:column="58"/></operator><name pos:line="178" pos:column="58">dirlen<pos:position pos:line="178" pos:column="64"/></name></expr></argument>)<pos:position pos:line="178" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="178" pos:column="66"/></condition><then pos:line="178" pos:column="66">
				<block type="pseudo"><goto pos:line="179" pos:column="33">goto <name pos:line="179" pos:column="38">bad_path<pos:position pos:line="179" pos:column="46"/></name>;<pos:position pos:line="179" pos:column="47"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="180" pos:column="25">lastdir<pos:position pos:line="180" pos:column="32"/></name> <operator pos:line="180" pos:column="33">=<pos:position pos:line="180" pos:column="34"/></operator> <name pos:line="180" pos:column="35">pathname<pos:position pos:line="180" pos:column="43"/></name></expr>;<pos:position pos:line="180" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="181" pos:column="25">lastdir_len<pos:position pos:line="181" pos:column="36"/></name> <operator pos:line="181" pos:column="37">=<pos:position pos:line="181" pos:column="38"/></operator> <name pos:line="181" pos:column="39">pathname_len<pos:position pos:line="181" pos:column="51"/></name></expr>;<pos:position pos:line="181" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="182" pos:column="18"/></block></then> <elseif pos:line="182" pos:column="19">else <if pos:line="182" pos:column="24">if <condition pos:line="182" pos:column="27">(<expr><operator pos:line="182" pos:column="28">!<pos:position pos:line="182" pos:column="29"/></operator><call><name pos:line="182" pos:column="29">change_pathname<pos:position pos:line="182" pos:column="44"/></name><argument_list pos:line="182" pos:column="44">(<argument><expr><name pos:line="182" pos:column="45">NULL<pos:position pos:line="182" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="51">lastdir<pos:position pos:line="182" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="60">lastdir_len<pos:position pos:line="182" pos:column="71"/></name></expr></argument>)<pos:position pos:line="182" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="182" pos:column="73"/></condition><then pos:line="182" pos:column="73"> <block pos:line="182" pos:column="74">{
		    <label><name pos:line="183" pos:column="21">bad_path<pos:position pos:line="183" pos:column="29"/></name>:<pos:position pos:line="183" pos:column="30"/></label>
			<if pos:line="184" pos:column="25">if <condition pos:line="184" pos:column="28">(<expr><name pos:line="184" pos:column="29">implied_dot_dir<pos:position pos:line="184" pos:column="44"/></name> <operator pos:line="184" pos:column="45">&lt;<pos:position pos:line="184" pos:column="49"/></operator> <literal type="number" pos:line="184" pos:column="47">0<pos:position pos:line="184" pos:column="48"/></literal></expr>)<pos:position pos:line="184" pos:column="49"/></condition><then pos:line="184" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name pos:line="185" pos:column="33">implied_dot_dir<pos:position pos:line="185" pos:column="48"/></name> <operator pos:line="185" pos:column="49">=<pos:position pos:line="185" pos:column="50"/></operator> <literal type="number" pos:line="185" pos:column="51">0<pos:position pos:line="185" pos:column="52"/></literal></expr>;<pos:position pos:line="185" pos:column="53"/></expr_stmt></block></then></if>
			<continue pos:line="186" pos:column="25">continue;<pos:position pos:line="186" pos:column="34"/></continue>
		}<pos:position pos:line="187" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="189" pos:column="17">if <condition pos:line="189" pos:column="20">(<expr><name pos:line="189" pos:column="21">implied_dot_dir<pos:position pos:line="189" pos:column="36"/></name> <operator pos:line="189" pos:column="37">&lt;<pos:position pos:line="189" pos:column="41"/></operator> <literal type="number" pos:line="189" pos:column="39">0<pos:position pos:line="189" pos:column="40"/></literal></expr>)<pos:position pos:line="189" pos:column="41"/></condition><then pos:line="189" pos:column="41"> <block pos:line="189" pos:column="42">{
			<expr_stmt><expr><name pos:line="190" pos:column="25">implied_dot_dir<pos:position pos:line="190" pos:column="40"/></name> <operator pos:line="190" pos:column="41">=<pos:position pos:line="190" pos:column="42"/></operator> <literal type="number" pos:line="190" pos:column="43">1<pos:position pos:line="190" pos:column="44"/></literal></expr>;<pos:position pos:line="190" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="191" pos:column="25">send_file_name<pos:position pos:line="191" pos:column="39"/></name><argument_list pos:line="191" pos:column="39">(<argument><expr><name pos:line="191" pos:column="40">f<pos:position pos:line="191" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="43">flist<pos:position pos:line="191" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="50">"."<pos:position pos:line="191" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="55">NULL<pos:position pos:line="191" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="191" pos:column="61">(<pos:position pos:line="191" pos:column="62"/></operator><name pos:line="191" pos:column="62">flags<pos:position pos:line="191" pos:column="67"/></name> <operator pos:line="191" pos:column="68">|<pos:position pos:line="191" pos:column="69"/></operator> <name pos:line="191" pos:column="70">FLAG_IMPLIED_DIR<pos:position pos:line="191" pos:column="86"/></name><operator pos:line="191" pos:column="86">)<pos:position pos:line="191" pos:column="87"/></operator> <operator pos:line="191" pos:column="88">&amp;<pos:position pos:line="191" pos:column="93"/></operator> <operator pos:line="191" pos:column="90">~<pos:position pos:line="191" pos:column="91"/></operator><name pos:line="191" pos:column="91">FLAG_CONTENT_DIR<pos:position pos:line="191" pos:column="107"/></name></expr></argument>, <argument><expr><name pos:line="191" pos:column="109">ALL_FILTERS<pos:position pos:line="191" pos:column="120"/></name></expr></argument>)<pos:position pos:line="191" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="122"/></expr_stmt>
		}<pos:position pos:line="192" pos:column="18"/></block></then></if>

		<if pos:line="194" pos:column="17">if <condition pos:line="194" pos:column="20">(<expr><name pos:line="194" pos:column="21">fn<pos:position pos:line="194" pos:column="23"/></name> <operator pos:line="194" pos:column="24">!=<pos:position pos:line="194" pos:column="26"/></operator> <name pos:line="194" pos:column="27">fbuf<pos:position pos:line="194" pos:column="31"/></name></expr>)<pos:position pos:line="194" pos:column="32"/></condition><then pos:line="194" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="195" pos:column="25">memmove<pos:position pos:line="195" pos:column="32"/></name><argument_list pos:line="195" pos:column="32">(<argument><expr><name pos:line="195" pos:column="33">fbuf<pos:position pos:line="195" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="39">fn<pos:position pos:line="195" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="43">len<pos:position pos:line="195" pos:column="46"/></name> <operator pos:line="195" pos:column="47">+<pos:position pos:line="195" pos:column="48"/></operator> <literal type="number" pos:line="195" pos:column="49">1<pos:position pos:line="195" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="52"/></expr_stmt></block></then></if>

		<if pos:line="197" pos:column="17">if <condition pos:line="197" pos:column="20">(<expr><call><name pos:line="197" pos:column="21">link_stat<pos:position pos:line="197" pos:column="30"/></name><argument_list pos:line="197" pos:column="30">(<argument><expr><name pos:line="197" pos:column="31">fbuf<pos:position pos:line="197" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="197" pos:column="37">&amp;<pos:position pos:line="197" pos:column="42"/></operator><name pos:line="197" pos:column="38">st<pos:position pos:line="197" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="42">copy_dirlinks<pos:position pos:line="197" pos:column="55"/></name> <operator pos:line="197" pos:column="56">||<pos:position pos:line="197" pos:column="58"/></operator> <name pos:line="197" pos:column="59">name_type<pos:position pos:line="197" pos:column="68"/></name> <operator pos:line="197" pos:column="69">!=<pos:position pos:line="197" pos:column="71"/></operator> <name pos:line="197" pos:column="72">NORMAL_NAME<pos:position pos:line="197" pos:column="83"/></name></expr></argument>)<pos:position pos:line="197" pos:column="84"/></argument_list></call> <operator pos:line="197" pos:column="85">!=<pos:position pos:line="197" pos:column="87"/></operator> <literal type="number" pos:line="197" pos:column="88">0<pos:position pos:line="197" pos:column="89"/></literal>
		 <operator pos:line="198" pos:column="18">||<pos:position pos:line="198" pos:column="20"/></operator> <operator pos:line="198" pos:column="21">(<pos:position pos:line="198" pos:column="22"/></operator><name pos:line="198" pos:column="22">name_type<pos:position pos:line="198" pos:column="31"/></name> <operator pos:line="198" pos:column="32">!=<pos:position pos:line="198" pos:column="34"/></operator> <name pos:line="198" pos:column="35">DOTDIR_NAME<pos:position pos:line="198" pos:column="46"/></name> <operator pos:line="198" pos:column="47">&amp;&amp;<pos:position pos:line="198" pos:column="57"/></operator> <call><name pos:line="198" pos:column="50">is_daemon_excluded<pos:position pos:line="198" pos:column="68"/></name><argument_list pos:line="198" pos:column="68">(<argument><expr><name pos:line="198" pos:column="69">fbuf<pos:position pos:line="198" pos:column="73"/></name></expr></argument>, <argument><expr><call><name pos:line="198" pos:column="75">S_ISDIR<pos:position pos:line="198" pos:column="82"/></name><argument_list pos:line="198" pos:column="82">(<argument><expr><name><name pos:line="198" pos:column="83">st<pos:position pos:line="198" pos:column="85"/></name><operator pos:line="198" pos:column="85">.<pos:position pos:line="198" pos:column="86"/></operator><name pos:line="198" pos:column="86">st_mode<pos:position pos:line="198" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="198" pos:column="95"/></argument_list></call><operator pos:line="198" pos:column="95">)<pos:position pos:line="198" pos:column="96"/></operator>
		 <operator pos:line="199" pos:column="18">||<pos:position pos:line="199" pos:column="20"/></operator> <operator pos:line="199" pos:column="21">(<pos:position pos:line="199" pos:column="22"/></operator><name pos:line="199" pos:column="22">relative_paths<pos:position pos:line="199" pos:column="36"/></name> <operator pos:line="199" pos:column="37">&amp;&amp;<pos:position pos:line="199" pos:column="47"/></operator> <call><name pos:line="199" pos:column="40">path_is_daemon_excluded<pos:position pos:line="199" pos:column="63"/></name><argument_list pos:line="199" pos:column="63">(<argument><expr><name pos:line="199" pos:column="64">fbuf<pos:position pos:line="199" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="199" pos:column="70">1<pos:position pos:line="199" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="72"/></argument_list></call><operator pos:line="199" pos:column="72">)<pos:position pos:line="199" pos:column="73"/></operator></expr>)<pos:position pos:line="199" pos:column="74"/></condition><then pos:line="199" pos:column="74"> <block pos:line="199" pos:column="75">{
			<if pos:line="200" pos:column="25">if <condition pos:line="200" pos:column="28">(<expr><name pos:line="200" pos:column="29">errno<pos:position pos:line="200" pos:column="34"/></name> <operator pos:line="200" pos:column="35">!=<pos:position pos:line="200" pos:column="37"/></operator> <name pos:line="200" pos:column="38">ENOENT<pos:position pos:line="200" pos:column="44"/></name> <operator pos:line="200" pos:column="45">||<pos:position pos:line="200" pos:column="47"/></operator> <name pos:line="200" pos:column="48">missing_args<pos:position pos:line="200" pos:column="60"/></name> <operator pos:line="200" pos:column="61">==<pos:position pos:line="200" pos:column="63"/></operator> <literal type="number" pos:line="200" pos:column="64">0<pos:position pos:line="200" pos:column="65"/></literal></expr>)<pos:position pos:line="200" pos:column="66"/></condition><then pos:line="200" pos:column="66"> <block pos:line="200" pos:column="67">{
				<comment type="block" pos:line="201" pos:column="33">/* This is a transfer error, but inhibit deletion
				 * only if we might be omitting an existing file. */</comment>
				<if pos:line="203" pos:column="33">if <condition pos:line="203" pos:column="36">(<expr><name pos:line="203" pos:column="37">errno<pos:position pos:line="203" pos:column="42"/></name> <operator pos:line="203" pos:column="43">!=<pos:position pos:line="203" pos:column="45"/></operator> <name pos:line="203" pos:column="46">ENOENT<pos:position pos:line="203" pos:column="52"/></name></expr>)<pos:position pos:line="203" pos:column="53"/></condition><then pos:line="203" pos:column="53">
					<block type="pseudo"><expr_stmt><expr><name pos:line="204" pos:column="41">io_error<pos:position pos:line="204" pos:column="49"/></name> <operator pos:line="204" pos:column="50">|=<pos:position pos:line="204" pos:column="52"/></operator> <name pos:line="204" pos:column="53">IOERR_GENERAL<pos:position pos:line="204" pos:column="66"/></name></expr>;<pos:position pos:line="204" pos:column="67"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="205" pos:column="33">rsyserr<pos:position pos:line="205" pos:column="40"/></name><argument_list pos:line="205" pos:column="40">(<argument><expr><name pos:line="205" pos:column="41">FERROR_XFER<pos:position pos:line="205" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="54">errno<pos:position pos:line="205" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="61">"link_stat %s failed"<pos:position pos:line="205" pos:column="82"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="206" pos:column="41">full_fname<pos:position pos:line="206" pos:column="51"/></name><argument_list pos:line="206" pos:column="51">(<argument><expr><name pos:line="206" pos:column="52">fbuf<pos:position pos:line="206" pos:column="56"/></name></expr></argument>)<pos:position pos:line="206" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="206" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="59"/></expr_stmt>
				<continue pos:line="207" pos:column="33">continue;<pos:position pos:line="207" pos:column="42"/></continue>
			}<pos:position pos:line="208" pos:column="26"/></block></then> <elseif pos:line="208" pos:column="27">else <if pos:line="208" pos:column="32">if <condition pos:line="208" pos:column="35">(<expr><name pos:line="208" pos:column="36">missing_args<pos:position pos:line="208" pos:column="48"/></name> <operator pos:line="208" pos:column="49">==<pos:position pos:line="208" pos:column="51"/></operator> <literal type="number" pos:line="208" pos:column="52">1<pos:position pos:line="208" pos:column="53"/></literal></expr>)<pos:position pos:line="208" pos:column="54"/></condition><then pos:line="208" pos:column="54"> <block pos:line="208" pos:column="55">{
				<comment type="block" pos:line="209" pos:column="33">/* Just ignore the arg. */</comment>
				<continue pos:line="210" pos:column="33">continue;<pos:position pos:line="210" pos:column="42"/></continue>
			}<pos:position pos:line="211" pos:column="26"/></block></then></if></elseif> <else pos:line="211" pos:column="27">else <comment type="block" pos:line="211" pos:column="32">/* (missing_args == 2) */</comment> <block pos:line="211" pos:column="58">{
				<comment type="block" pos:line="212" pos:column="33">/* Send the arg as a "missing" entry with
				 * mode 0, which tells the generator to delete it. */</comment>
				<expr_stmt><expr><call><name pos:line="214" pos:column="33">memset<pos:position pos:line="214" pos:column="39"/></name><argument_list pos:line="214" pos:column="39">(<argument><expr><operator pos:line="214" pos:column="40">&amp;<pos:position pos:line="214" pos:column="45"/></operator><name pos:line="214" pos:column="41">st<pos:position pos:line="214" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="45">0<pos:position pos:line="214" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="214" pos:column="48">sizeof <name pos:line="214" pos:column="55">st<pos:position pos:line="214" pos:column="57"/></name></sizeof></expr></argument>)<pos:position pos:line="214" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="59"/></expr_stmt>
			}<pos:position pos:line="215" pos:column="26"/></block></else></if>
		}<pos:position pos:line="216" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="218" pos:column="17">/* A dot-dir should not be excluded! */</comment>
		<if pos:line="219" pos:column="17">if <condition pos:line="219" pos:column="20">(<expr><name pos:line="219" pos:column="21">name_type<pos:position pos:line="219" pos:column="30"/></name> <operator pos:line="219" pos:column="31">!=<pos:position pos:line="219" pos:column="33"/></operator> <name pos:line="219" pos:column="34">DOTDIR_NAME<pos:position pos:line="219" pos:column="45"/></name> <operator pos:line="219" pos:column="46">&amp;&amp;<pos:position pos:line="219" pos:column="56"/></operator> <name><name pos:line="219" pos:column="49">st<pos:position pos:line="219" pos:column="51"/></name><operator pos:line="219" pos:column="51">.<pos:position pos:line="219" pos:column="52"/></operator><name pos:line="219" pos:column="52">st_mode<pos:position pos:line="219" pos:column="59"/></name></name> <operator pos:line="219" pos:column="60">!=<pos:position pos:line="219" pos:column="62"/></operator> <literal type="number" pos:line="219" pos:column="63">0<pos:position pos:line="219" pos:column="64"/></literal>
		 <operator pos:line="220" pos:column="18">&amp;&amp;<pos:position pos:line="220" pos:column="28"/></operator> <call><name pos:line="220" pos:column="21">is_excluded<pos:position pos:line="220" pos:column="32"/></name><argument_list pos:line="220" pos:column="32">(<argument><expr><name pos:line="220" pos:column="33">fbuf<pos:position pos:line="220" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="220" pos:column="39">S_ISDIR<pos:position pos:line="220" pos:column="46"/></name><argument_list pos:line="220" pos:column="46">(<argument><expr><name><name pos:line="220" pos:column="47">st<pos:position pos:line="220" pos:column="49"/></name><operator pos:line="220" pos:column="49">.<pos:position pos:line="220" pos:column="50"/></operator><name pos:line="220" pos:column="50">st_mode<pos:position pos:line="220" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="220" pos:column="58"/></argument_list></call> <operator pos:line="220" pos:column="59">!=<pos:position pos:line="220" pos:column="61"/></operator> <literal type="number" pos:line="220" pos:column="62">0<pos:position pos:line="220" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="220" pos:column="65">ALL_FILTERS<pos:position pos:line="220" pos:column="76"/></name></expr></argument>)<pos:position pos:line="220" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="220" pos:column="78"/></condition><then pos:line="220" pos:column="78">
			<block type="pseudo"><continue pos:line="221" pos:column="25">continue;<pos:position pos:line="221" pos:column="34"/></continue></block></then></if>

		<if pos:line="223" pos:column="17">if <condition pos:line="223" pos:column="20">(<expr><call><name pos:line="223" pos:column="21">S_ISDIR<pos:position pos:line="223" pos:column="28"/></name><argument_list pos:line="223" pos:column="28">(<argument><expr><name><name pos:line="223" pos:column="29">st<pos:position pos:line="223" pos:column="31"/></name><operator pos:line="223" pos:column="31">.<pos:position pos:line="223" pos:column="32"/></operator><name pos:line="223" pos:column="32">st_mode<pos:position pos:line="223" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="223" pos:column="40"/></argument_list></call> <operator pos:line="223" pos:column="41">&amp;&amp;<pos:position pos:line="223" pos:column="51"/></operator> <operator pos:line="223" pos:column="44">!<pos:position pos:line="223" pos:column="45"/></operator><name pos:line="223" pos:column="45">xfer_dirs<pos:position pos:line="223" pos:column="54"/></name></expr>)<pos:position pos:line="223" pos:column="55"/></condition><then pos:line="223" pos:column="55"> <block pos:line="223" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="224" pos:column="25">rprintf<pos:position pos:line="224" pos:column="32"/></name><argument_list pos:line="224" pos:column="32">(<argument><expr><name pos:line="224" pos:column="33">FINFO<pos:position pos:line="224" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="224" pos:column="40">"skipping directory %s\n"<pos:position pos:line="224" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="224" pos:column="67">fbuf<pos:position pos:line="224" pos:column="71"/></name></expr></argument>)<pos:position pos:line="224" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="73"/></expr_stmt>
			<continue pos:line="225" pos:column="25">continue;<pos:position pos:line="225" pos:column="34"/></continue>
		}<pos:position pos:line="226" pos:column="18"/></block></then></if>

		<if pos:line="228" pos:column="17">if <condition pos:line="228" pos:column="20">(<expr><name pos:line="228" pos:column="21">inc_recurse<pos:position pos:line="228" pos:column="32"/></name> <operator pos:line="228" pos:column="33">&amp;&amp;<pos:position pos:line="228" pos:column="43"/></operator> <name pos:line="228" pos:column="36">relative_paths<pos:position pos:line="228" pos:column="50"/></name> <operator pos:line="228" pos:column="51">&amp;&amp;<pos:position pos:line="228" pos:column="61"/></operator> <operator pos:line="228" pos:column="54">*<pos:position pos:line="228" pos:column="55"/></operator><name pos:line="228" pos:column="55">fbuf<pos:position pos:line="228" pos:column="59"/></name></expr>)<pos:position pos:line="228" pos:column="60"/></condition><then pos:line="228" pos:column="60"> <block pos:line="228" pos:column="61">{
			<if pos:line="229" pos:column="25">if <condition pos:line="229" pos:column="28">(<expr><operator pos:line="229" pos:column="29">(<pos:position pos:line="229" pos:column="30"/></operator><name pos:line="229" pos:column="30">p<pos:position pos:line="229" pos:column="31"/></name> <operator pos:line="229" pos:column="32">=<pos:position pos:line="229" pos:column="33"/></operator> <call><name pos:line="229" pos:column="34">strchr<pos:position pos:line="229" pos:column="40"/></name><argument_list pos:line="229" pos:column="40">(<argument><expr><name pos:line="229" pos:column="41">fbuf<pos:position pos:line="229" pos:column="45"/></name><operator pos:line="229" pos:column="45">+<pos:position pos:line="229" pos:column="46"/></operator><literal type="number" pos:line="229" pos:column="46">1<pos:position pos:line="229" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="229" pos:column="49">'/'<pos:position pos:line="229" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="53"/></argument_list></call><operator pos:line="229" pos:column="53">)<pos:position pos:line="229" pos:column="54"/></operator> <operator pos:line="229" pos:column="55">!=<pos:position pos:line="229" pos:column="57"/></operator> <name pos:line="229" pos:column="58">NULL<pos:position pos:line="229" pos:column="62"/></name></expr>)<pos:position pos:line="229" pos:column="63"/></condition><then pos:line="229" pos:column="63"> <block pos:line="229" pos:column="64">{
				<if pos:line="230" pos:column="33">if <condition pos:line="230" pos:column="36">(<expr><name pos:line="230" pos:column="37">p<pos:position pos:line="230" pos:column="38"/></name> <operator pos:line="230" pos:column="39">-<pos:position pos:line="230" pos:column="40"/></operator> <name pos:line="230" pos:column="41">fbuf<pos:position pos:line="230" pos:column="45"/></name> <operator pos:line="230" pos:column="46">==<pos:position pos:line="230" pos:column="48"/></operator> <literal type="number" pos:line="230" pos:column="49">1<pos:position pos:line="230" pos:column="50"/></literal> <operator pos:line="230" pos:column="51">&amp;&amp;<pos:position pos:line="230" pos:column="61"/></operator> <operator pos:line="230" pos:column="54">*<pos:position pos:line="230" pos:column="55"/></operator><name pos:line="230" pos:column="55">fbuf<pos:position pos:line="230" pos:column="59"/></name> <operator pos:line="230" pos:column="60">==<pos:position pos:line="230" pos:column="62"/></operator> <literal type="char" pos:line="230" pos:column="63">'.'<pos:position pos:line="230" pos:column="66"/></literal></expr>)<pos:position pos:line="230" pos:column="67"/></condition><then pos:line="230" pos:column="67"> <block pos:line="230" pos:column="68">{
					<if pos:line="231" pos:column="41">if <condition pos:line="231" pos:column="44">(<expr><operator pos:line="231" pos:column="45">(<pos:position pos:line="231" pos:column="46"/></operator><name pos:line="231" pos:column="46">fn<pos:position pos:line="231" pos:column="48"/></name> <operator pos:line="231" pos:column="49">=<pos:position pos:line="231" pos:column="50"/></operator> <call><name pos:line="231" pos:column="51">strchr<pos:position pos:line="231" pos:column="57"/></name><argument_list pos:line="231" pos:column="57">(<argument><expr><name pos:line="231" pos:column="58">p<pos:position pos:line="231" pos:column="59"/></name><operator pos:line="231" pos:column="59">+<pos:position pos:line="231" pos:column="60"/></operator><literal type="number" pos:line="231" pos:column="60">1<pos:position pos:line="231" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="231" pos:column="63">'/'<pos:position pos:line="231" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="67"/></argument_list></call><operator pos:line="231" pos:column="67">)<pos:position pos:line="231" pos:column="68"/></operator> <operator pos:line="231" pos:column="69">!=<pos:position pos:line="231" pos:column="71"/></operator> <name pos:line="231" pos:column="72">NULL<pos:position pos:line="231" pos:column="76"/></name></expr>)<pos:position pos:line="231" pos:column="77"/></condition><then pos:line="231" pos:column="77">
						<block type="pseudo"><expr_stmt><expr><name pos:line="232" pos:column="49">p<pos:position pos:line="232" pos:column="50"/></name> <operator pos:line="232" pos:column="51">=<pos:position pos:line="232" pos:column="52"/></operator> <name pos:line="232" pos:column="53">fn<pos:position pos:line="232" pos:column="55"/></name></expr>;<pos:position pos:line="232" pos:column="56"/></expr_stmt></block></then></if>
				}<pos:position pos:line="233" pos:column="34"/></block></then> <else pos:line="233" pos:column="35">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="234" pos:column="41">fn<pos:position pos:line="234" pos:column="43"/></name> <operator pos:line="234" pos:column="44">=<pos:position pos:line="234" pos:column="45"/></operator> <name pos:line="234" pos:column="46">p<pos:position pos:line="234" pos:column="47"/></name></expr>;<pos:position pos:line="234" pos:column="48"/></expr_stmt></block></else></if>
				<expr_stmt><expr><call><name pos:line="235" pos:column="33">send_implied_dirs<pos:position pos:line="235" pos:column="50"/></name><argument_list pos:line="235" pos:column="50">(<argument><expr><name pos:line="235" pos:column="51">f<pos:position pos:line="235" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="54">flist<pos:position pos:line="235" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="61">fbuf<pos:position pos:line="235" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="67">fbuf<pos:position pos:line="235" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="73">p<pos:position pos:line="235" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="76">flags<pos:position pos:line="235" pos:column="81"/></name></expr></argument>,
						  <argument><expr><ternary><condition><expr><call><name pos:line="236" pos:column="51">IS_MISSING_FILE<pos:position pos:line="236" pos:column="66"/></name><argument_list pos:line="236" pos:column="66">(<argument><expr><name pos:line="236" pos:column="67">st<pos:position pos:line="236" pos:column="69"/></name></expr></argument>)<pos:position pos:line="236" pos:column="70"/></argument_list></call></expr> ?<pos:position pos:line="236" pos:column="72"/></condition><then pos:line="236" pos:column="72"> <expr><name pos:line="236" pos:column="73">MISSING_NAME<pos:position pos:line="236" pos:column="85"/></name></expr> <pos:position pos:line="236" pos:column="86"/></then><else pos:line="236" pos:column="86">: <expr><name pos:line="236" pos:column="88">name_type<pos:position pos:line="236" pos:column="97"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="236" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="99"/></expr_stmt>
				<if pos:line="237" pos:column="33">if <condition pos:line="237" pos:column="36">(<expr><name pos:line="237" pos:column="37">fn<pos:position pos:line="237" pos:column="39"/></name> <operator pos:line="237" pos:column="40">==<pos:position pos:line="237" pos:column="42"/></operator> <name pos:line="237" pos:column="43">p<pos:position pos:line="237" pos:column="44"/></name></expr>)<pos:position pos:line="237" pos:column="45"/></condition><then pos:line="237" pos:column="45">
					<block type="pseudo"><continue pos:line="238" pos:column="41">continue;<pos:position pos:line="238" pos:column="50"/></continue></block></then></if>
			}<pos:position pos:line="239" pos:column="26"/></block></then></if>
		}<pos:position pos:line="240" pos:column="18"/></block></then> <elseif pos:line="240" pos:column="19">else <if pos:line="240" pos:column="24">if <condition pos:line="240" pos:column="27">(<expr><name pos:line="240" pos:column="28">implied_dirs<pos:position pos:line="240" pos:column="40"/></name> <operator pos:line="240" pos:column="41">&amp;&amp;<pos:position pos:line="240" pos:column="51"/></operator> <operator pos:line="240" pos:column="44">(<pos:position pos:line="240" pos:column="45"/></operator><name pos:line="240" pos:column="45">p<pos:position pos:line="240" pos:column="46"/></name><operator pos:line="240" pos:column="46">=<pos:position pos:line="240" pos:column="47"/></operator><call><name pos:line="240" pos:column="47">strrchr<pos:position pos:line="240" pos:column="54"/></name><argument_list pos:line="240" pos:column="54">(<argument><expr><name pos:line="240" pos:column="55">fbuf<pos:position pos:line="240" pos:column="59"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="240" pos:column="60">'/'<pos:position pos:line="240" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="64"/></argument_list></call><operator pos:line="240" pos:column="64">)<pos:position pos:line="240" pos:column="65"/></operator> <operator pos:line="240" pos:column="66">&amp;&amp;<pos:position pos:line="240" pos:column="76"/></operator> <name pos:line="240" pos:column="69">p<pos:position pos:line="240" pos:column="70"/></name> <operator pos:line="240" pos:column="71">!=<pos:position pos:line="240" pos:column="73"/></operator> <name pos:line="240" pos:column="74">fbuf<pos:position pos:line="240" pos:column="78"/></name></expr>)<pos:position pos:line="240" pos:column="79"/></condition><then pos:line="240" pos:column="79"> <block pos:line="240" pos:column="80">{
			<comment type="block" pos:line="241" pos:column="25">/* Send the implied directories at the start of the
			 * source spec, so we get their permissions right. */</comment>
			<expr_stmt><expr><call><name pos:line="243" pos:column="25">send_implied_dirs<pos:position pos:line="243" pos:column="42"/></name><argument_list pos:line="243" pos:column="42">(<argument><expr><name pos:line="243" pos:column="43">f<pos:position pos:line="243" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="46">flist<pos:position pos:line="243" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="53">fbuf<pos:position pos:line="243" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="59">fbuf<pos:position pos:line="243" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="65">p<pos:position pos:line="243" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="68">flags<pos:position pos:line="243" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="243" pos:column="75">0<pos:position pos:line="243" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="244" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="246" pos:column="17">if <condition pos:line="246" pos:column="20">(<expr><name pos:line="246" pos:column="21">one_file_system<pos:position pos:line="246" pos:column="36"/></name></expr>)<pos:position pos:line="246" pos:column="37"/></condition><then pos:line="246" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="247" pos:column="25">filesystem_dev<pos:position pos:line="247" pos:column="39"/></name> <operator pos:line="247" pos:column="40">=<pos:position pos:line="247" pos:column="41"/></operator> <name><name pos:line="247" pos:column="42">st<pos:position pos:line="247" pos:column="44"/></name><operator pos:line="247" pos:column="44">.<pos:position pos:line="247" pos:column="45"/></operator><name pos:line="247" pos:column="45">st_dev<pos:position pos:line="247" pos:column="51"/></name></name></expr>;<pos:position pos:line="247" pos:column="52"/></expr_stmt></block></then></if>

		<if pos:line="249" pos:column="17">if <condition pos:line="249" pos:column="20">(<expr><name pos:line="249" pos:column="21">recurse<pos:position pos:line="249" pos:column="28"/></name> <operator pos:line="249" pos:column="29">||<pos:position pos:line="249" pos:column="31"/></operator> <operator pos:line="249" pos:column="32">(<pos:position pos:line="249" pos:column="33"/></operator><name pos:line="249" pos:column="33">xfer_dirs<pos:position pos:line="249" pos:column="42"/></name> <operator pos:line="249" pos:column="43">&amp;&amp;<pos:position pos:line="249" pos:column="53"/></operator> <name pos:line="249" pos:column="46">name_type<pos:position pos:line="249" pos:column="55"/></name> <operator pos:line="249" pos:column="56">!=<pos:position pos:line="249" pos:column="58"/></operator> <name pos:line="249" pos:column="59">NORMAL_NAME<pos:position pos:line="249" pos:column="70"/></name><operator pos:line="249" pos:column="70">)<pos:position pos:line="249" pos:column="71"/></operator></expr>)<pos:position pos:line="249" pos:column="72"/></condition><then pos:line="249" pos:column="72"> <block pos:line="249" pos:column="73">{
			<decl_stmt><decl><type><name><name pos:line="250" pos:column="25">struct<pos:position pos:line="250" pos:column="31"/></name> <name pos:line="250" pos:column="32">file_struct<pos:position pos:line="250" pos:column="43"/></name></name> <modifier pos:line="250" pos:column="44">*<pos:position pos:line="250" pos:column="45"/></modifier></type><name pos:line="250" pos:column="45">file<pos:position pos:line="250" pos:column="49"/></name></decl>;<pos:position pos:line="250" pos:column="50"/></decl_stmt>
			<expr_stmt><expr><name pos:line="251" pos:column="25">file<pos:position pos:line="251" pos:column="29"/></name> <operator pos:line="251" pos:column="30">=<pos:position pos:line="251" pos:column="31"/></operator> <call><name pos:line="251" pos:column="32">send_file_name<pos:position pos:line="251" pos:column="46"/></name><argument_list pos:line="251" pos:column="46">(<argument><expr><name pos:line="251" pos:column="47">f<pos:position pos:line="251" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="50">flist<pos:position pos:line="251" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="57">fbuf<pos:position pos:line="251" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="251" pos:column="63">&amp;<pos:position pos:line="251" pos:column="68"/></operator><name pos:line="251" pos:column="64">st<pos:position pos:line="251" pos:column="66"/></name></expr></argument>,
					      <argument><expr><name pos:line="252" pos:column="47">FLAG_TOP_DIR<pos:position pos:line="252" pos:column="59"/></name> <operator pos:line="252" pos:column="60">|<pos:position pos:line="252" pos:column="61"/></operator> <name pos:line="252" pos:column="62">FLAG_CONTENT_DIR<pos:position pos:line="252" pos:column="78"/></name> <operator pos:line="252" pos:column="79">|<pos:position pos:line="252" pos:column="80"/></operator> <name pos:line="252" pos:column="81">flags<pos:position pos:line="252" pos:column="86"/></name></expr></argument>,
					      <argument><expr><name pos:line="253" pos:column="47">NO_FILTERS<pos:position pos:line="253" pos:column="57"/></name></expr></argument>)<pos:position pos:line="253" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="59"/></expr_stmt>
			<if pos:line="254" pos:column="25">if <condition pos:line="254" pos:column="28">(<expr><operator pos:line="254" pos:column="29">!<pos:position pos:line="254" pos:column="30"/></operator><name pos:line="254" pos:column="30">file<pos:position pos:line="254" pos:column="34"/></name></expr>)<pos:position pos:line="254" pos:column="35"/></condition><then pos:line="254" pos:column="35">
				<block type="pseudo"><continue pos:line="255" pos:column="33">continue;<pos:position pos:line="255" pos:column="42"/></continue></block></then></if>
			<if pos:line="256" pos:column="25">if <condition pos:line="256" pos:column="28">(<expr><name pos:line="256" pos:column="29">inc_recurse<pos:position pos:line="256" pos:column="40"/></name></expr>)<pos:position pos:line="256" pos:column="41"/></condition><then pos:line="256" pos:column="41"> <block pos:line="256" pos:column="42">{
				<if pos:line="257" pos:column="33">if <condition pos:line="257" pos:column="36">(<expr><name pos:line="257" pos:column="37">name_type<pos:position pos:line="257" pos:column="46"/></name> <operator pos:line="257" pos:column="47">==<pos:position pos:line="257" pos:column="49"/></operator> <name pos:line="257" pos:column="50">DOTDIR_NAME<pos:position pos:line="257" pos:column="61"/></name></expr>)<pos:position pos:line="257" pos:column="62"/></condition><then pos:line="257" pos:column="62"> <block pos:line="257" pos:column="63">{
					<if pos:line="258" pos:column="41">if <condition pos:line="258" pos:column="44">(<expr><name pos:line="258" pos:column="45">send_dir_depth<pos:position pos:line="258" pos:column="59"/></name> <operator pos:line="258" pos:column="60">&lt;<pos:position pos:line="258" pos:column="64"/></operator> <literal type="number" pos:line="258" pos:column="62">0<pos:position pos:line="258" pos:column="63"/></literal></expr>)<pos:position pos:line="258" pos:column="64"/></condition><then pos:line="258" pos:column="64"> <block pos:line="258" pos:column="65">{
						<expr_stmt><expr><name pos:line="259" pos:column="49">send_dir_depth<pos:position pos:line="259" pos:column="63"/></name> <operator pos:line="259" pos:column="64">=<pos:position pos:line="259" pos:column="65"/></operator> <literal type="number" pos:line="259" pos:column="66">0<pos:position pos:line="259" pos:column="67"/></literal></expr>;<pos:position pos:line="259" pos:column="68"/></expr_stmt>
						<expr_stmt><expr><call><name pos:line="260" pos:column="49">change_local_filter_dir<pos:position pos:line="260" pos:column="72"/></name><argument_list pos:line="260" pos:column="72">(<argument><expr><name pos:line="260" pos:column="73">fbuf<pos:position pos:line="260" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="79">len<pos:position pos:line="260" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="84">send_dir_depth<pos:position pos:line="260" pos:column="98"/></name></expr></argument>)<pos:position pos:line="260" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="100"/></expr_stmt>
					}<pos:position pos:line="261" pos:column="42"/></block></then></if>
					<expr_stmt><expr><call><name pos:line="262" pos:column="41">send_directory<pos:position pos:line="262" pos:column="55"/></name><argument_list pos:line="262" pos:column="55">(<argument><expr><name pos:line="262" pos:column="56">f<pos:position pos:line="262" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="59">flist<pos:position pos:line="262" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="66">fbuf<pos:position pos:line="262" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="72">len<pos:position pos:line="262" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="262" pos:column="77">flags<pos:position pos:line="262" pos:column="82"/></name></expr></argument>)<pos:position pos:line="262" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="84"/></expr_stmt>
				}<pos:position pos:line="263" pos:column="34"/></block></then></if>
			}<pos:position pos:line="264" pos:column="26"/></block></then> <else pos:line="264" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="265" pos:column="33">send_if_directory<pos:position pos:line="265" pos:column="50"/></name><argument_list pos:line="265" pos:column="50">(<argument><expr><name pos:line="265" pos:column="51">f<pos:position pos:line="265" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="54">flist<pos:position pos:line="265" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="61">file<pos:position pos:line="265" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="67">fbuf<pos:position pos:line="265" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="73">len<pos:position pos:line="265" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="265" pos:column="78">flags<pos:position pos:line="265" pos:column="83"/></name></expr></argument>)<pos:position pos:line="265" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="85"/></expr_stmt></block></else></if>
		}<pos:position pos:line="266" pos:column="18"/></block></then> <else pos:line="266" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="267" pos:column="25">send_file_name<pos:position pos:line="267" pos:column="39"/></name><argument_list pos:line="267" pos:column="39">(<argument><expr><name pos:line="267" pos:column="40">f<pos:position pos:line="267" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="43">flist<pos:position pos:line="267" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="50">fbuf<pos:position pos:line="267" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="267" pos:column="56">&amp;<pos:position pos:line="267" pos:column="61"/></operator><name pos:line="267" pos:column="57">st<pos:position pos:line="267" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="61">flags<pos:position pos:line="267" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="68">NO_FILTERS<pos:position pos:line="267" pos:column="78"/></name></expr></argument>)<pos:position pos:line="267" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="80"/></expr_stmt></block></else></if>
	}<pos:position pos:line="268" pos:column="10"/></block></while>

	<if pos:line="270" pos:column="9">if <condition pos:line="270" pos:column="12">(<expr><name pos:line="270" pos:column="13">reenable_multiplex<pos:position pos:line="270" pos:column="31"/></name> <operator pos:line="270" pos:column="32">&gt;=<pos:position pos:line="270" pos:column="37"/></operator> <literal type="number" pos:line="270" pos:column="35">0<pos:position pos:line="270" pos:column="36"/></literal></expr>)<pos:position pos:line="270" pos:column="37"/></condition><then pos:line="270" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="271" pos:column="17">io_start_multiplex_in<pos:position pos:line="271" pos:column="38"/></name><argument_list pos:line="271" pos:column="38">(<argument><expr><name pos:line="271" pos:column="39">reenable_multiplex<pos:position pos:line="271" pos:column="57"/></name></expr></argument>)<pos:position pos:line="271" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="59"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="273" pos:column="9">gettimeofday<pos:position pos:line="273" pos:column="21"/></name><argument_list pos:line="273" pos:column="21">(<argument><expr><operator pos:line="273" pos:column="22">&amp;<pos:position pos:line="273" pos:column="27"/></operator><name pos:line="273" pos:column="23">end_tv<pos:position pos:line="273" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="31">NULL<pos:position pos:line="273" pos:column="35"/></name></expr></argument>)<pos:position pos:line="273" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="274" pos:column="9">stats<pos:position pos:line="274" pos:column="14"/></name><operator pos:line="274" pos:column="14">.<pos:position pos:line="274" pos:column="15"/></operator><name pos:line="274" pos:column="15">flist_buildtime<pos:position pos:line="274" pos:column="30"/></name></name> <operator pos:line="274" pos:column="31">=<pos:position pos:line="274" pos:column="32"/></operator> <call pos:line="274" pos:column="33">(<name pos:line="274" pos:column="34">int64<pos:position pos:line="274" pos:column="39"/></name>)<argument_list pos:line="274" pos:column="40">(<argument><expr><name><name pos:line="274" pos:column="41">end_tv<pos:position pos:line="274" pos:column="47"/></name><operator pos:line="274" pos:column="47">.<pos:position pos:line="274" pos:column="48"/></operator><name pos:line="274" pos:column="48">tv_sec<pos:position pos:line="274" pos:column="54"/></name></name> <operator pos:line="274" pos:column="55">-<pos:position pos:line="274" pos:column="56"/></operator> <name><name pos:line="274" pos:column="57">start_tv<pos:position pos:line="274" pos:column="65"/></name><operator pos:line="274" pos:column="65">.<pos:position pos:line="274" pos:column="66"/></operator><name pos:line="274" pos:column="66">tv_sec<pos:position pos:line="274" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="274" pos:column="73"/></argument_list></call> <operator pos:line="274" pos:column="74">*<pos:position pos:line="274" pos:column="75"/></operator> <literal type="number" pos:line="274" pos:column="76">1000<pos:position pos:line="274" pos:column="80"/></literal>
			      <operator pos:line="275" pos:column="31">+<pos:position pos:line="275" pos:column="32"/></operator> <operator pos:line="275" pos:column="33">(<pos:position pos:line="275" pos:column="34"/></operator><name><name pos:line="275" pos:column="34">end_tv<pos:position pos:line="275" pos:column="40"/></name><operator pos:line="275" pos:column="40">.<pos:position pos:line="275" pos:column="41"/></operator><name pos:line="275" pos:column="41">tv_usec<pos:position pos:line="275" pos:column="48"/></name></name> <operator pos:line="275" pos:column="49">-<pos:position pos:line="275" pos:column="50"/></operator> <name><name pos:line="275" pos:column="51">start_tv<pos:position pos:line="275" pos:column="59"/></name><operator pos:line="275" pos:column="59">.<pos:position pos:line="275" pos:column="60"/></operator><name pos:line="275" pos:column="60">tv_usec<pos:position pos:line="275" pos:column="67"/></name></name><operator pos:line="275" pos:column="67">)<pos:position pos:line="275" pos:column="68"/></operator> <operator pos:line="275" pos:column="69">/<pos:position pos:line="275" pos:column="70"/></operator> <literal type="number" pos:line="275" pos:column="71">1000<pos:position pos:line="275" pos:column="75"/></literal></expr>;<pos:position pos:line="275" pos:column="76"/></expr_stmt>
	<if pos:line="276" pos:column="9">if <condition pos:line="276" pos:column="12">(<expr><name><name pos:line="276" pos:column="13">stats<pos:position pos:line="276" pos:column="18"/></name><operator pos:line="276" pos:column="18">.<pos:position pos:line="276" pos:column="19"/></operator><name pos:line="276" pos:column="19">flist_buildtime<pos:position pos:line="276" pos:column="34"/></name></name> <operator pos:line="276" pos:column="35">==<pos:position pos:line="276" pos:column="37"/></operator> <literal type="number" pos:line="276" pos:column="38">0<pos:position pos:line="276" pos:column="39"/></literal></expr>)<pos:position pos:line="276" pos:column="40"/></condition><then pos:line="276" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="277" pos:column="17">stats<pos:position pos:line="277" pos:column="22"/></name><operator pos:line="277" pos:column="22">.<pos:position pos:line="277" pos:column="23"/></operator><name pos:line="277" pos:column="23">flist_buildtime<pos:position pos:line="277" pos:column="38"/></name></name> <operator pos:line="277" pos:column="39">=<pos:position pos:line="277" pos:column="40"/></operator> <literal type="number" pos:line="277" pos:column="41">1<pos:position pos:line="277" pos:column="42"/></literal></expr>;<pos:position pos:line="277" pos:column="43"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="278" pos:column="9">start_tv<pos:position pos:line="278" pos:column="17"/></name> <operator pos:line="278" pos:column="18">=<pos:position pos:line="278" pos:column="19"/></operator> <name pos:line="278" pos:column="20">end_tv<pos:position pos:line="278" pos:column="26"/></name></expr>;<pos:position pos:line="278" pos:column="27"/></expr_stmt>

	<comment type="block" pos:line="280" pos:column="9">/* Indicate end of file list */</comment>
	<if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><name pos:line="281" pos:column="13">io_error<pos:position pos:line="281" pos:column="21"/></name> <operator pos:line="281" pos:column="22">==<pos:position pos:line="281" pos:column="24"/></operator> <literal type="number" pos:line="281" pos:column="25">0<pos:position pos:line="281" pos:column="26"/></literal> <operator pos:line="281" pos:column="27">||<pos:position pos:line="281" pos:column="29"/></operator> <name pos:line="281" pos:column="30">ignore_errors<pos:position pos:line="281" pos:column="43"/></name></expr>)<pos:position pos:line="281" pos:column="44"/></condition><then pos:line="281" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="282" pos:column="17">write_byte<pos:position pos:line="282" pos:column="27"/></name><argument_list pos:line="282" pos:column="27">(<argument><expr><name pos:line="282" pos:column="28">f<pos:position pos:line="282" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="282" pos:column="31">0<pos:position pos:line="282" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="282" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="34"/></expr_stmt></block></then>
	<elseif pos:line="283" pos:column="9">else <if pos:line="283" pos:column="14">if <condition pos:line="283" pos:column="17">(<expr><name pos:line="283" pos:column="18">use_safe_inc_flist<pos:position pos:line="283" pos:column="36"/></name></expr>)<pos:position pos:line="283" pos:column="37"/></condition><then pos:line="283" pos:column="37"> <block pos:line="283" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="284" pos:column="17">write_shortint<pos:position pos:line="284" pos:column="31"/></name><argument_list pos:line="284" pos:column="31">(<argument><expr><name pos:line="284" pos:column="32">f<pos:position pos:line="284" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="284" pos:column="35">XMIT_EXTENDED_FLAGS<pos:position pos:line="284" pos:column="54"/></name><operator pos:line="284" pos:column="54">|<pos:position pos:line="284" pos:column="55"/></operator><name pos:line="284" pos:column="55">XMIT_IO_ERROR_ENDLIST<pos:position pos:line="284" pos:column="76"/></name></expr></argument>)<pos:position pos:line="284" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="285" pos:column="17">write_varint<pos:position pos:line="285" pos:column="29"/></name><argument_list pos:line="285" pos:column="29">(<argument><expr><name pos:line="285" pos:column="30">f<pos:position pos:line="285" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="285" pos:column="33">io_error<pos:position pos:line="285" pos:column="41"/></name></expr></argument>)<pos:position pos:line="285" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="286" pos:column="10"/></block></then></if></elseif> <else pos:line="286" pos:column="11">else <block pos:line="286" pos:column="16">{
		<if pos:line="287" pos:column="17">if <condition pos:line="287" pos:column="20">(<expr><name pos:line="287" pos:column="21">delete_during<pos:position pos:line="287" pos:column="34"/></name> <operator pos:line="287" pos:column="35">&amp;&amp;<pos:position pos:line="287" pos:column="45"/></operator> <name pos:line="287" pos:column="38">inc_recurse<pos:position pos:line="287" pos:column="49"/></name></expr>)<pos:position pos:line="287" pos:column="50"/></condition><then pos:line="287" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="288" pos:column="25">fatal_unsafe_io_error<pos:position pos:line="288" pos:column="46"/></name><argument_list pos:line="288" pos:column="46">()<pos:position pos:line="288" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="289" pos:column="17">write_byte<pos:position pos:line="289" pos:column="27"/></name><argument_list pos:line="289" pos:column="27">(<argument><expr><name pos:line="289" pos:column="28">f<pos:position pos:line="289" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="289" pos:column="31">0<pos:position pos:line="289" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="290" pos:column="10"/></block></else></if>

<cpp:ifdef pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">ifdef<pos:position pos:line="292" pos:column="7"/></cpp:directive> <name pos:line="292" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="292" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="293" pos:column="9">if <condition pos:line="293" pos:column="12">(<expr><name pos:line="293" pos:column="13">preserve_hard_links<pos:position pos:line="293" pos:column="32"/></name> <operator pos:line="293" pos:column="33">&amp;&amp;<pos:position pos:line="293" pos:column="43"/></operator> <name pos:line="293" pos:column="36">protocol_version<pos:position pos:line="293" pos:column="52"/></name> <operator pos:line="293" pos:column="53">&gt;=<pos:position pos:line="293" pos:column="58"/></operator> <literal type="number" pos:line="293" pos:column="56">30<pos:position pos:line="293" pos:column="58"/></literal> <operator pos:line="293" pos:column="59">&amp;&amp;<pos:position pos:line="293" pos:column="69"/></operator> <operator pos:line="293" pos:column="62">!<pos:position pos:line="293" pos:column="63"/></operator><name pos:line="293" pos:column="63">inc_recurse<pos:position pos:line="293" pos:column="74"/></name></expr>)<pos:position pos:line="293" pos:column="75"/></condition><then pos:line="293" pos:column="75">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="294" pos:column="17">idev_destroy<pos:position pos:line="294" pos:column="29"/></name><argument_list pos:line="294" pos:column="29">()<pos:position pos:line="294" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="32"/></expr_stmt></block></then></if>
<cpp:endif pos:line="295" pos:column="1">#<cpp:directive pos:line="295" pos:column="2">endif<pos:position pos:line="295" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="297" pos:column="9">if <condition pos:line="297" pos:column="12">(<expr><call><name pos:line="297" pos:column="13">show_filelist_p<pos:position pos:line="297" pos:column="28"/></name><argument_list pos:line="297" pos:column="28">()<pos:position pos:line="297" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="297" pos:column="31"/></condition><then pos:line="297" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="298" pos:column="17">finish_filelist_progress<pos:position pos:line="298" pos:column="41"/></name><argument_list pos:line="298" pos:column="41">(<argument><expr><name pos:line="298" pos:column="42">flist<pos:position pos:line="298" pos:column="47"/></name></expr></argument>)<pos:position pos:line="298" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="300" pos:column="9">gettimeofday<pos:position pos:line="300" pos:column="21"/></name><argument_list pos:line="300" pos:column="21">(<argument><expr><operator pos:line="300" pos:column="22">&amp;<pos:position pos:line="300" pos:column="27"/></operator><name pos:line="300" pos:column="23">end_tv<pos:position pos:line="300" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="300" pos:column="31">NULL<pos:position pos:line="300" pos:column="35"/></name></expr></argument>)<pos:position pos:line="300" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="301" pos:column="9">stats<pos:position pos:line="301" pos:column="14"/></name><operator pos:line="301" pos:column="14">.<pos:position pos:line="301" pos:column="15"/></operator><name pos:line="301" pos:column="15">flist_xfertime<pos:position pos:line="301" pos:column="29"/></name></name> <operator pos:line="301" pos:column="30">=<pos:position pos:line="301" pos:column="31"/></operator> <call pos:line="301" pos:column="32">(<name pos:line="301" pos:column="33">int64<pos:position pos:line="301" pos:column="38"/></name>)<argument_list pos:line="301" pos:column="39">(<argument><expr><name><name pos:line="301" pos:column="40">end_tv<pos:position pos:line="301" pos:column="46"/></name><operator pos:line="301" pos:column="46">.<pos:position pos:line="301" pos:column="47"/></operator><name pos:line="301" pos:column="47">tv_sec<pos:position pos:line="301" pos:column="53"/></name></name> <operator pos:line="301" pos:column="54">-<pos:position pos:line="301" pos:column="55"/></operator> <name><name pos:line="301" pos:column="56">start_tv<pos:position pos:line="301" pos:column="64"/></name><operator pos:line="301" pos:column="64">.<pos:position pos:line="301" pos:column="65"/></operator><name pos:line="301" pos:column="65">tv_sec<pos:position pos:line="301" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="301" pos:column="72"/></argument_list></call> <operator pos:line="301" pos:column="73">*<pos:position pos:line="301" pos:column="74"/></operator> <literal type="number" pos:line="301" pos:column="75">1000<pos:position pos:line="301" pos:column="79"/></literal>
			     <operator pos:line="302" pos:column="30">+<pos:position pos:line="302" pos:column="31"/></operator> <operator pos:line="302" pos:column="32">(<pos:position pos:line="302" pos:column="33"/></operator><name><name pos:line="302" pos:column="33">end_tv<pos:position pos:line="302" pos:column="39"/></name><operator pos:line="302" pos:column="39">.<pos:position pos:line="302" pos:column="40"/></operator><name pos:line="302" pos:column="40">tv_usec<pos:position pos:line="302" pos:column="47"/></name></name> <operator pos:line="302" pos:column="48">-<pos:position pos:line="302" pos:column="49"/></operator> <name><name pos:line="302" pos:column="50">start_tv<pos:position pos:line="302" pos:column="58"/></name><operator pos:line="302" pos:column="58">.<pos:position pos:line="302" pos:column="59"/></operator><name pos:line="302" pos:column="59">tv_usec<pos:position pos:line="302" pos:column="66"/></name></name><operator pos:line="302" pos:column="66">)<pos:position pos:line="302" pos:column="67"/></operator> <operator pos:line="302" pos:column="68">/<pos:position pos:line="302" pos:column="69"/></operator> <literal type="number" pos:line="302" pos:column="70">1000<pos:position pos:line="302" pos:column="74"/></literal></expr>;<pos:position pos:line="302" pos:column="75"/></expr_stmt>

	<comment type="block" pos:line="304" pos:column="9">/* When converting names, both sides keep an unsorted file-list array
	 * because the names will differ on the sending and receiving sides
	 * (both sides will use the unsorted index number for each item). */</comment>

	<comment type="block" pos:line="308" pos:column="9">/* Sort the list without removing any duplicates.  This allows the
	 * receiving side to ask for whatever name it kept.  For incremental
	 * recursion mode, the sender marks duplicate dirs so that it can
	 * send them together in a single file-list. */</comment>
	<if pos:line="312" pos:column="9">if <condition pos:line="312" pos:column="12">(<expr><name pos:line="312" pos:column="13">need_unsorted_flist<pos:position pos:line="312" pos:column="32"/></name></expr>)<pos:position pos:line="312" pos:column="33"/></condition><then pos:line="312" pos:column="33"> <block pos:line="312" pos:column="34">{
		<if pos:line="313" pos:column="17">if <condition pos:line="313" pos:column="20">(<expr><operator pos:line="313" pos:column="21">!<pos:position pos:line="313" pos:column="22"/></operator><operator pos:line="313" pos:column="22">(<pos:position pos:line="313" pos:column="23"/></operator><name><name pos:line="313" pos:column="23">flist<pos:position pos:line="313" pos:column="28"/></name><operator pos:line="313" pos:column="28">-&gt;<pos:position pos:line="313" pos:column="33"/></operator><name pos:line="313" pos:column="30">sorted<pos:position pos:line="313" pos:column="36"/></name></name> <operator pos:line="313" pos:column="37">=<pos:position pos:line="313" pos:column="38"/></operator> <call><name pos:line="313" pos:column="39">new_array<pos:position pos:line="313" pos:column="48"/></name><argument_list pos:line="313" pos:column="48">(<argument><expr pos:line="313" pos:column="49">struct <name pos:line="313" pos:column="56">file_struct<pos:position pos:line="313" pos:column="67"/></name> <operator pos:line="313" pos:column="68">*<pos:position pos:line="313" pos:column="69"/></operator></expr></argument>, <argument><expr><name><name pos:line="313" pos:column="71">flist<pos:position pos:line="313" pos:column="76"/></name><operator pos:line="313" pos:column="76">-&gt;<pos:position pos:line="313" pos:column="81"/></operator><name pos:line="313" pos:column="78">used<pos:position pos:line="313" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="313" pos:column="83"/></argument_list></call><operator pos:line="313" pos:column="83">)<pos:position pos:line="313" pos:column="84"/></operator></expr>)<pos:position pos:line="313" pos:column="85"/></condition><then pos:line="313" pos:column="85">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="314" pos:column="25">out_of_memory<pos:position pos:line="314" pos:column="38"/></name><argument_list pos:line="314" pos:column="38">(<argument><expr><literal type="string" pos:line="314" pos:column="39">"send_file_list"<pos:position pos:line="314" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="57"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="315" pos:column="17">memcpy<pos:position pos:line="315" pos:column="23"/></name><argument_list pos:line="315" pos:column="23">(<argument><expr><name><name pos:line="315" pos:column="24">flist<pos:position pos:line="315" pos:column="29"/></name><operator pos:line="315" pos:column="29">-&gt;<pos:position pos:line="315" pos:column="34"/></operator><name pos:line="315" pos:column="31">sorted<pos:position pos:line="315" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="315" pos:column="39">flist<pos:position pos:line="315" pos:column="44"/></name><operator pos:line="315" pos:column="44">-&gt;<pos:position pos:line="315" pos:column="49"/></operator><name pos:line="315" pos:column="46">files<pos:position pos:line="315" pos:column="51"/></name></name></expr></argument>,
		       <argument><expr><name><name pos:line="316" pos:column="24">flist<pos:position pos:line="316" pos:column="29"/></name><operator pos:line="316" pos:column="29">-&gt;<pos:position pos:line="316" pos:column="34"/></operator><name pos:line="316" pos:column="31">used<pos:position pos:line="316" pos:column="35"/></name></name> <operator pos:line="316" pos:column="36">*<pos:position pos:line="316" pos:column="37"/></operator> <sizeof pos:line="316" pos:column="38">sizeof <argument_list pos:line="316" pos:column="45">(<argument><expr pos:line="316" pos:column="46">struct <name pos:line="316" pos:column="53">file_struct<pos:position pos:line="316" pos:column="64"/></name><operator pos:line="316" pos:column="64">*<pos:position pos:line="316" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="316" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="316" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="317" pos:column="10"/></block></then> <else pos:line="317" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="318" pos:column="17">flist<pos:position pos:line="318" pos:column="22"/></name><operator pos:line="318" pos:column="22">-&gt;<pos:position pos:line="318" pos:column="27"/></operator><name pos:line="318" pos:column="24">sorted<pos:position pos:line="318" pos:column="30"/></name></name> <operator pos:line="318" pos:column="31">=<pos:position pos:line="318" pos:column="32"/></operator> <name><name pos:line="318" pos:column="33">flist<pos:position pos:line="318" pos:column="38"/></name><operator pos:line="318" pos:column="38">-&gt;<pos:position pos:line="318" pos:column="43"/></operator><name pos:line="318" pos:column="40">files<pos:position pos:line="318" pos:column="45"/></name></name></expr>;<pos:position pos:line="318" pos:column="46"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="319" pos:column="9">flist_sort_and_clean<pos:position pos:line="319" pos:column="29"/></name><argument_list pos:line="319" pos:column="29">(<argument><expr><name pos:line="319" pos:column="30">flist<pos:position pos:line="319" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="319" pos:column="37">0<pos:position pos:line="319" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="319" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="320" pos:column="9">file_total<pos:position pos:line="320" pos:column="19"/></name> <operator pos:line="320" pos:column="20">+=<pos:position pos:line="320" pos:column="22"/></operator> <name><name pos:line="320" pos:column="23">flist<pos:position pos:line="320" pos:column="28"/></name><operator pos:line="320" pos:column="28">-&gt;<pos:position pos:line="320" pos:column="33"/></operator><name pos:line="320" pos:column="30">used<pos:position pos:line="320" pos:column="34"/></name></name></expr>;<pos:position pos:line="320" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="321" pos:column="9">file_old_total<pos:position pos:line="321" pos:column="23"/></name> <operator pos:line="321" pos:column="24">+=<pos:position pos:line="321" pos:column="26"/></operator> <name><name pos:line="321" pos:column="27">flist<pos:position pos:line="321" pos:column="32"/></name><operator pos:line="321" pos:column="32">-&gt;<pos:position pos:line="321" pos:column="37"/></operator><name pos:line="321" pos:column="34">used<pos:position pos:line="321" pos:column="38"/></name></name></expr>;<pos:position pos:line="321" pos:column="39"/></expr_stmt>

	<if pos:line="323" pos:column="9">if <condition pos:line="323" pos:column="12">(<expr><name pos:line="323" pos:column="13">numeric_ids<pos:position pos:line="323" pos:column="24"/></name> <operator pos:line="323" pos:column="25">&lt;=<pos:position pos:line="323" pos:column="30"/></operator> <literal type="number" pos:line="323" pos:column="28">0<pos:position pos:line="323" pos:column="29"/></literal> <operator pos:line="323" pos:column="30">&amp;&amp;<pos:position pos:line="323" pos:column="40"/></operator> <operator pos:line="323" pos:column="33">!<pos:position pos:line="323" pos:column="34"/></operator><name pos:line="323" pos:column="34">inc_recurse<pos:position pos:line="323" pos:column="45"/></name></expr>)<pos:position pos:line="323" pos:column="46"/></condition><then pos:line="323" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="324" pos:column="17">send_id_list<pos:position pos:line="324" pos:column="29"/></name><argument_list pos:line="324" pos:column="29">(<argument><expr><name pos:line="324" pos:column="30">f<pos:position pos:line="324" pos:column="31"/></name></expr></argument>)<pos:position pos:line="324" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="33"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="326" pos:column="9">/* send the io_error flag */</comment>
	<if pos:line="327" pos:column="9">if <condition pos:line="327" pos:column="12">(<expr><name pos:line="327" pos:column="13">protocol_version<pos:position pos:line="327" pos:column="29"/></name> <operator pos:line="327" pos:column="30">&lt;<pos:position pos:line="327" pos:column="34"/></operator> <literal type="number" pos:line="327" pos:column="32">30<pos:position pos:line="327" pos:column="34"/></literal></expr>)<pos:position pos:line="327" pos:column="35"/></condition><then pos:line="327" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="328" pos:column="17">write_int<pos:position pos:line="328" pos:column="26"/></name><argument_list pos:line="328" pos:column="26">(<argument><expr><name pos:line="328" pos:column="27">f<pos:position pos:line="328" pos:column="28"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="328" pos:column="30">ignore_errors<pos:position pos:line="328" pos:column="43"/></name></expr> ?<pos:position pos:line="328" pos:column="45"/></condition><then pos:line="328" pos:column="45"> <expr><literal type="number" pos:line="328" pos:column="46">0<pos:position pos:line="328" pos:column="47"/></literal></expr> <pos:position pos:line="328" pos:column="48"/></then><else pos:line="328" pos:column="48">: <expr><name pos:line="328" pos:column="50">io_error<pos:position pos:line="328" pos:column="58"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="328" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="60"/></expr_stmt></block></then>
	<elseif pos:line="329" pos:column="9">else <if pos:line="329" pos:column="14">if <condition pos:line="329" pos:column="17">(<expr><operator pos:line="329" pos:column="18">!<pos:position pos:line="329" pos:column="19"/></operator><name pos:line="329" pos:column="19">use_safe_inc_flist<pos:position pos:line="329" pos:column="37"/></name> <operator pos:line="329" pos:column="38">&amp;&amp;<pos:position pos:line="329" pos:column="48"/></operator> <name pos:line="329" pos:column="41">io_error<pos:position pos:line="329" pos:column="49"/></name> <operator pos:line="329" pos:column="50">&amp;&amp;<pos:position pos:line="329" pos:column="60"/></operator> <operator pos:line="329" pos:column="53">!<pos:position pos:line="329" pos:column="54"/></operator><name pos:line="329" pos:column="54">ignore_errors<pos:position pos:line="329" pos:column="67"/></name></expr>)<pos:position pos:line="329" pos:column="68"/></condition><then pos:line="329" pos:column="68">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="330" pos:column="17">send_msg_int<pos:position pos:line="330" pos:column="29"/></name><argument_list pos:line="330" pos:column="29">(<argument><expr><name pos:line="330" pos:column="30">MSG_IO_ERROR<pos:position pos:line="330" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="330" pos:column="44">io_error<pos:position pos:line="330" pos:column="52"/></name></expr></argument>)<pos:position pos:line="330" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="54"/></expr_stmt></block></then></if></elseif></if>

	<if pos:line="332" pos:column="9">if <condition pos:line="332" pos:column="12">(<expr><name pos:line="332" pos:column="13">disable_buffering<pos:position pos:line="332" pos:column="30"/></name></expr>)<pos:position pos:line="332" pos:column="31"/></condition><then pos:line="332" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="333" pos:column="17">io_end_buffering_out<pos:position pos:line="333" pos:column="37"/></name><argument_list pos:line="333" pos:column="37">(<argument><expr><name pos:line="333" pos:column="38">IOBUF_FREE_BUFS<pos:position pos:line="333" pos:column="53"/></name></expr></argument>)<pos:position pos:line="333" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="55"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="335" pos:column="9">stats<pos:position pos:line="335" pos:column="14"/></name><operator pos:line="335" pos:column="14">.<pos:position pos:line="335" pos:column="15"/></operator><name pos:line="335" pos:column="15">flist_size<pos:position pos:line="335" pos:column="25"/></name></name> <operator pos:line="335" pos:column="26">=<pos:position pos:line="335" pos:column="27"/></operator> <name><name pos:line="335" pos:column="28">stats<pos:position pos:line="335" pos:column="33"/></name><operator pos:line="335" pos:column="33">.<pos:position pos:line="335" pos:column="34"/></operator><name pos:line="335" pos:column="34">total_written<pos:position pos:line="335" pos:column="47"/></name></name> <operator pos:line="335" pos:column="48">-<pos:position pos:line="335" pos:column="49"/></operator> <name pos:line="335" pos:column="50">start_write<pos:position pos:line="335" pos:column="61"/></name></expr>;<pos:position pos:line="335" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="336" pos:column="9">stats<pos:position pos:line="336" pos:column="14"/></name><operator pos:line="336" pos:column="14">.<pos:position pos:line="336" pos:column="15"/></operator><name pos:line="336" pos:column="15">num_files<pos:position pos:line="336" pos:column="24"/></name></name> <operator pos:line="336" pos:column="25">=<pos:position pos:line="336" pos:column="26"/></operator> <name><name pos:line="336" pos:column="27">flist<pos:position pos:line="336" pos:column="32"/></name><operator pos:line="336" pos:column="32">-&gt;<pos:position pos:line="336" pos:column="37"/></operator><name pos:line="336" pos:column="34">used<pos:position pos:line="336" pos:column="38"/></name></name></expr>;<pos:position pos:line="336" pos:column="39"/></expr_stmt>

	<if pos:line="338" pos:column="9">if <condition pos:line="338" pos:column="12">(<expr><call><name pos:line="338" pos:column="13">DEBUG_GTE<pos:position pos:line="338" pos:column="22"/></name><argument_list pos:line="338" pos:column="22">(<argument><expr><name pos:line="338" pos:column="23">FLIST<pos:position pos:line="338" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="338" pos:column="30">3<pos:position pos:line="338" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="338" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="338" pos:column="33"/></condition><then pos:line="338" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="339" pos:column="17">output_flist<pos:position pos:line="339" pos:column="29"/></name><argument_list pos:line="339" pos:column="29">(<argument><expr><name pos:line="339" pos:column="30">flist<pos:position pos:line="339" pos:column="35"/></name></expr></argument>)<pos:position pos:line="339" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="37"/></expr_stmt></block></then></if>

	<if pos:line="341" pos:column="9">if <condition pos:line="341" pos:column="12">(<expr><call><name pos:line="341" pos:column="13">DEBUG_GTE<pos:position pos:line="341" pos:column="22"/></name><argument_list pos:line="341" pos:column="22">(<argument><expr><name pos:line="341" pos:column="23">FLIST<pos:position pos:line="341" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="341" pos:column="30">2<pos:position pos:line="341" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="341" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="341" pos:column="33"/></condition><then pos:line="341" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="342" pos:column="17">rprintf<pos:position pos:line="342" pos:column="24"/></name><argument_list pos:line="342" pos:column="24">(<argument><expr><name pos:line="342" pos:column="25">FINFO<pos:position pos:line="342" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="32">"send_file_list done\n"<pos:position pos:line="342" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="342" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="57"/></expr_stmt></block></then></if>

	<if pos:line="344" pos:column="9">if <condition pos:line="344" pos:column="12">(<expr><name pos:line="344" pos:column="13">inc_recurse<pos:position pos:line="344" pos:column="24"/></name></expr>)<pos:position pos:line="344" pos:column="25"/></condition><then pos:line="344" pos:column="25"> <block pos:line="344" pos:column="26">{
		<expr_stmt><expr><name pos:line="345" pos:column="17">send_dir_depth<pos:position pos:line="345" pos:column="31"/></name> <operator pos:line="345" pos:column="32">=<pos:position pos:line="345" pos:column="33"/></operator> <literal type="number" pos:line="345" pos:column="34">1<pos:position pos:line="345" pos:column="35"/></literal></expr>;<pos:position pos:line="345" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="346" pos:column="17">add_dirs_to_tree<pos:position pos:line="346" pos:column="33"/></name><argument_list pos:line="346" pos:column="33">(<argument><expr><operator pos:line="346" pos:column="34">-<pos:position pos:line="346" pos:column="35"/></operator><literal type="number" pos:line="346" pos:column="35">1<pos:position pos:line="346" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="346" pos:column="38">flist<pos:position pos:line="346" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="45">stats<pos:position pos:line="346" pos:column="50"/></name><operator pos:line="346" pos:column="50">.<pos:position pos:line="346" pos:column="51"/></operator><name pos:line="346" pos:column="51">num_dirs<pos:position pos:line="346" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="346" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="61"/></expr_stmt>
		<if pos:line="347" pos:column="17">if <condition pos:line="347" pos:column="20">(<expr><operator pos:line="347" pos:column="21">!<pos:position pos:line="347" pos:column="22"/></operator><name pos:line="347" pos:column="22">file_total<pos:position pos:line="347" pos:column="32"/></name> <operator pos:line="347" pos:column="33">||<pos:position pos:line="347" pos:column="35"/></operator> <call><name pos:line="347" pos:column="36">strcmp<pos:position pos:line="347" pos:column="42"/></name><argument_list pos:line="347" pos:column="42">(<argument><expr><name><name pos:line="347" pos:column="43">flist<pos:position pos:line="347" pos:column="48"/></name><operator pos:line="347" pos:column="48">-&gt;<pos:position pos:line="347" pos:column="53"/></operator><name pos:line="347" pos:column="50">sorted<pos:position pos:line="347" pos:column="56"/></name><index pos:line="347" pos:column="56">[<expr><name><name pos:line="347" pos:column="57">flist<pos:position pos:line="347" pos:column="62"/></name><operator pos:line="347" pos:column="62">-&gt;<pos:position pos:line="347" pos:column="67"/></operator><name pos:line="347" pos:column="64">low<pos:position pos:line="347" pos:column="67"/></name></name></expr>]<pos:position pos:line="347" pos:column="68"/></index></name><operator pos:line="347" pos:column="68">-&gt;<pos:position pos:line="347" pos:column="73"/></operator><name pos:line="347" pos:column="70">basename<pos:position pos:line="347" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="347" pos:column="80">"."<pos:position pos:line="347" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="347" pos:column="84"/></argument_list></call> <operator pos:line="347" pos:column="85">!=<pos:position pos:line="347" pos:column="87"/></operator> <literal type="number" pos:line="347" pos:column="88">0<pos:position pos:line="347" pos:column="89"/></literal></expr>)<pos:position pos:line="347" pos:column="90"/></condition><then pos:line="347" pos:column="90">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="348" pos:column="25">flist<pos:position pos:line="348" pos:column="30"/></name><operator pos:line="348" pos:column="30">-&gt;<pos:position pos:line="348" pos:column="35"/></operator><name pos:line="348" pos:column="32">parent_ndx<pos:position pos:line="348" pos:column="42"/></name></name> <operator pos:line="348" pos:column="43">=<pos:position pos:line="348" pos:column="44"/></operator> <operator pos:line="348" pos:column="45">-<pos:position pos:line="348" pos:column="46"/></operator><literal type="number" pos:line="348" pos:column="46">1<pos:position pos:line="348" pos:column="47"/></literal></expr>;<pos:position pos:line="348" pos:column="48"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="349" pos:column="17">flist_done_allocating<pos:position pos:line="349" pos:column="38"/></name><argument_list pos:line="349" pos:column="38">(<argument><expr><name pos:line="349" pos:column="39">flist<pos:position pos:line="349" pos:column="44"/></name></expr></argument>)<pos:position pos:line="349" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="46"/></expr_stmt>
		<if pos:line="350" pos:column="17">if <condition pos:line="350" pos:column="20">(<expr><name pos:line="350" pos:column="21">send_dir_ndx<pos:position pos:line="350" pos:column="33"/></name> <operator pos:line="350" pos:column="34">&lt;<pos:position pos:line="350" pos:column="38"/></operator> <literal type="number" pos:line="350" pos:column="36">0<pos:position pos:line="350" pos:column="37"/></literal></expr>)<pos:position pos:line="350" pos:column="38"/></condition><then pos:line="350" pos:column="38"> <block pos:line="350" pos:column="39">{
			<expr_stmt><expr><call><name pos:line="351" pos:column="25">write_ndx<pos:position pos:line="351" pos:column="34"/></name><argument_list pos:line="351" pos:column="34">(<argument><expr><name pos:line="351" pos:column="35">f<pos:position pos:line="351" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="351" pos:column="38">NDX_FLIST_EOF<pos:position pos:line="351" pos:column="51"/></name></expr></argument>)<pos:position pos:line="351" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="352" pos:column="25">flist_eof<pos:position pos:line="352" pos:column="34"/></name> <operator pos:line="352" pos:column="35">=<pos:position pos:line="352" pos:column="36"/></operator> <literal type="number" pos:line="352" pos:column="37">1<pos:position pos:line="352" pos:column="38"/></literal></expr>;<pos:position pos:line="352" pos:column="39"/></expr_stmt>
			<if pos:line="353" pos:column="25">if <condition pos:line="353" pos:column="28">(<expr><call><name pos:line="353" pos:column="29">DEBUG_GTE<pos:position pos:line="353" pos:column="38"/></name><argument_list pos:line="353" pos:column="38">(<argument><expr><name pos:line="353" pos:column="39">FLIST<pos:position pos:line="353" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="353" pos:column="46">3<pos:position pos:line="353" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="353" pos:column="49"/></condition><then pos:line="353" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="354" pos:column="33">rprintf<pos:position pos:line="354" pos:column="40"/></name><argument_list pos:line="354" pos:column="40">(<argument><expr><name pos:line="354" pos:column="41">FINFO<pos:position pos:line="354" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="48">"[%s] flist_eof=1\n"<pos:position pos:line="354" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="354" pos:column="70">who_am_i<pos:position pos:line="354" pos:column="78"/></name><argument_list pos:line="354" pos:column="78">()<pos:position pos:line="354" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="354" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="82"/></expr_stmt></block></then></if>
		}<pos:position pos:line="355" pos:column="18"/></block></then>
		<elseif pos:line="356" pos:column="17">else <if pos:line="356" pos:column="22">if <condition pos:line="356" pos:column="25">(<expr><name pos:line="356" pos:column="26">file_total<pos:position pos:line="356" pos:column="36"/></name> <operator pos:line="356" pos:column="37">==<pos:position pos:line="356" pos:column="39"/></operator> <literal type="number" pos:line="356" pos:column="40">1<pos:position pos:line="356" pos:column="41"/></literal></expr>)<pos:position pos:line="356" pos:column="42"/></condition><then pos:line="356" pos:column="42"> <block pos:line="356" pos:column="43">{
			<comment type="block" pos:line="357" pos:column="25">/* If we're creating incremental file-lists and there
			 * was just 1 item in the first file-list, send 1 more
			 * file-list to check if this is a 1-file xfer. */</comment>
			<expr_stmt><expr><call><name pos:line="360" pos:column="25">send_extra_file_list<pos:position pos:line="360" pos:column="45"/></name><argument_list pos:line="360" pos:column="45">(<argument><expr><name pos:line="360" pos:column="46">f<pos:position pos:line="360" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="360" pos:column="49">1<pos:position pos:line="360" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="360" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="361" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="362" pos:column="10"/></block></then> <else pos:line="362" pos:column="11">else <block pos:line="362" pos:column="16">{
		<expr_stmt><expr><name pos:line="363" pos:column="17">flist_eof<pos:position pos:line="363" pos:column="26"/></name> <operator pos:line="363" pos:column="27">=<pos:position pos:line="363" pos:column="28"/></operator> <literal type="number" pos:line="363" pos:column="29">1<pos:position pos:line="363" pos:column="30"/></literal></expr>;<pos:position pos:line="363" pos:column="31"/></expr_stmt>
		<if pos:line="364" pos:column="17">if <condition pos:line="364" pos:column="20">(<expr><call><name pos:line="364" pos:column="21">DEBUG_GTE<pos:position pos:line="364" pos:column="30"/></name><argument_list pos:line="364" pos:column="30">(<argument><expr><name pos:line="364" pos:column="31">FLIST<pos:position pos:line="364" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="364" pos:column="38">3<pos:position pos:line="364" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="364" pos:column="41"/></condition><then pos:line="364" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="365" pos:column="25">rprintf<pos:position pos:line="365" pos:column="32"/></name><argument_list pos:line="365" pos:column="32">(<argument><expr><name pos:line="365" pos:column="33">FINFO<pos:position pos:line="365" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="365" pos:column="40">"[%s] flist_eof=1\n"<pos:position pos:line="365" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="365" pos:column="62">who_am_i<pos:position pos:line="365" pos:column="70"/></name><argument_list pos:line="365" pos:column="70">()<pos:position pos:line="365" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="365" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="74"/></expr_stmt></block></then></if>
	}<pos:position pos:line="366" pos:column="10"/></block></else></if>

	<return pos:line="368" pos:column="9">return <expr><name pos:line="368" pos:column="16">flist<pos:position pos:line="368" pos:column="21"/></name></expr>;<pos:position pos:line="368" pos:column="22"/></return>
}<pos:position pos:line="369" pos:column="2"/></block></function></unit>

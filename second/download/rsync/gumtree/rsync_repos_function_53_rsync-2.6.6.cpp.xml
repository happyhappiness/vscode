<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_53_rsync-2.6.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_rules<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">f_out<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">filter_list_struct<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">flp<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">filter_struct<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">ent<pos:position pos:line="3" pos:column="34"/></name></decl>, <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="37">prev<pos:position pos:line="3" pos:column="41"/></name> <init pos:line="3" pos:column="42">= <expr><name pos:line="3" pos:column="44">NULL<pos:position pos:line="3" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="49"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">ent<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name><name pos:line="5" pos:column="20">flp<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">head<pos:position pos:line="5" pos:column="29"/></name></name></expr>;<pos:position pos:line="5" pos:column="30"/></init> <condition><expr><name pos:line="5" pos:column="31">ent<pos:position pos:line="5" pos:column="34"/></name></expr>;<pos:position pos:line="5" pos:column="35"/></condition> <incr><expr><name pos:line="5" pos:column="36">ent<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">=<pos:position pos:line="5" pos:column="41"/></operator> <name><name pos:line="5" pos:column="42">ent<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">next<pos:position pos:line="5" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="52"/></control> <block pos:line="5" pos:column="53">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">unsigned<pos:position pos:line="6" pos:column="25"/></name> <name pos:line="6" pos:column="26">int<pos:position pos:line="6" pos:column="29"/></name></type> <name pos:line="6" pos:column="30">len<pos:position pos:line="6" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="35">plen<pos:position pos:line="6" pos:column="39"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="41">dlen<pos:position pos:line="6" pos:column="45"/></name></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">int<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">elide<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">p<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name><name pos:line="10" pos:column="21">ent<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">match_flags<pos:position pos:line="10" pos:column="37"/></name></name> <operator pos:line="10" pos:column="38">&amp;<pos:position pos:line="10" pos:column="43"/></operator> <name pos:line="10" pos:column="40">MATCHFLG_SENDER_SIDE<pos:position pos:line="10" pos:column="60"/></name></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">elide<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <ternary><condition><expr><name pos:line="11" pos:column="33">am_sender<pos:position pos:line="11" pos:column="42"/></name></expr> ?<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <expr><literal type="number" pos:line="11" pos:column="45">1<pos:position pos:line="11" pos:column="46"/></literal></expr> <pos:position pos:line="11" pos:column="47"/></then><else pos:line="11" pos:column="47">: <expr><operator pos:line="11" pos:column="49">-<pos:position pos:line="11" pos:column="50"/></operator><literal type="number" pos:line="11" pos:column="50">1<pos:position pos:line="11" pos:column="51"/></literal></expr></else></ternary></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt></block></then></if>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name><name pos:line="12" pos:column="21">ent<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">match_flags<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="40">MATCHFLG_RECEIVER_SIDE<pos:position pos:line="12" pos:column="62"/></name></expr>)<pos:position pos:line="12" pos:column="63"/></condition><then pos:line="12" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">elide<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="33">elide<pos:position pos:line="13" pos:column="38"/></name></expr> ?<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <expr><literal type="number" pos:line="13" pos:column="41">0<pos:position pos:line="13" pos:column="42"/></literal></expr> <pos:position pos:line="13" pos:column="43"/></then><else pos:line="13" pos:column="43">: <expr><ternary><condition><expr><name pos:line="13" pos:column="45">am_sender<pos:position pos:line="13" pos:column="54"/></name></expr> ?<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56"> <expr><operator pos:line="13" pos:column="57">-<pos:position pos:line="13" pos:column="58"/></operator><literal type="number" pos:line="13" pos:column="58">1<pos:position pos:line="13" pos:column="59"/></literal></expr> <pos:position pos:line="13" pos:column="60"/></then><else pos:line="13" pos:column="60">: <expr><literal type="number" pos:line="13" pos:column="62">1<pos:position pos:line="13" pos:column="63"/></literal></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt></block></then>
		<elseif pos:line="14" pos:column="17">else <if pos:line="14" pos:column="22">if <condition pos:line="14" pos:column="25">(<expr><name pos:line="14" pos:column="26">delete_excluded<pos:position pos:line="14" pos:column="41"/></name> <operator pos:line="14" pos:column="42">&amp;&amp;<pos:position pos:line="14" pos:column="52"/></operator> <operator pos:line="14" pos:column="45">!<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">elide<pos:position pos:line="14" pos:column="51"/></name></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">elide<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <ternary><condition><expr><name pos:line="15" pos:column="33">am_sender<pos:position pos:line="15" pos:column="42"/></name></expr> ?<pos:position pos:line="15" pos:column="44"/></condition><then pos:line="15" pos:column="44"> <expr><literal type="number" pos:line="15" pos:column="45">1<pos:position pos:line="15" pos:column="46"/></literal></expr> <pos:position pos:line="15" pos:column="47"/></then><else pos:line="15" pos:column="47">: <expr><operator pos:line="15" pos:column="49">-<pos:position pos:line="15" pos:column="50"/></operator><literal type="number" pos:line="15" pos:column="50">1<pos:position pos:line="15" pos:column="51"/></literal></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt></block></then></if></elseif></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">elide<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&lt;<pos:position pos:line="16" pos:column="31"/></operator> <literal type="number" pos:line="16" pos:column="29">0<pos:position pos:line="16" pos:column="30"/></literal></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31"> <block pos:line="16" pos:column="32">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name pos:line="17" pos:column="29">prev<pos:position pos:line="17" pos:column="33"/></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="33">prev<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">next<pos:position pos:line="18" pos:column="43"/></name></name> <operator pos:line="18" pos:column="44">=<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="46">ent<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">next<pos:position pos:line="18" pos:column="55"/></name></name></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt></block></then>
			<else pos:line="19" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="33">flp<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">head<pos:position pos:line="20" pos:column="42"/></name></name> <operator pos:line="20" pos:column="43">=<pos:position pos:line="20" pos:column="44"/></operator> <name><name pos:line="20" pos:column="45">ent<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">-&gt;<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="50">next<pos:position pos:line="20" pos:column="54"/></name></name></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt></block></else></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <else pos:line="21" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="25">prev<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">ent<pos:position pos:line="22" pos:column="35"/></name></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt></block></else></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">elide<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">&gt;<pos:position pos:line="23" pos:column="31"/></operator> <literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name><name pos:line="25" pos:column="21">ent<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">match_flags<pos:position pos:line="25" pos:column="37"/></name></name> <operator pos:line="25" pos:column="38">&amp;<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="40">MATCHFLG_CVS_IGNORE<pos:position pos:line="25" pos:column="59"/></name>
		    <operator pos:line="26" pos:column="21">&amp;&amp;<pos:position pos:line="26" pos:column="31"/></operator> <operator pos:line="26" pos:column="24">!<pos:position pos:line="26" pos:column="25"/></operator><operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name><name pos:line="26" pos:column="26">ent<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">match_flags<pos:position pos:line="26" pos:column="42"/></name></name> <operator pos:line="26" pos:column="43">&amp;<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="45">MATCHFLG_MERGE_FILE<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">)<pos:position pos:line="26" pos:column="65"/></operator></expr>)<pos:position pos:line="26" pos:column="66"/></condition><then pos:line="26" pos:column="66"> <block pos:line="26" pos:column="67">{
			<decl_stmt><decl><type><name pos:line="27" pos:column="25">int<pos:position pos:line="27" pos:column="28"/></name></type> <name pos:line="27" pos:column="29">f<pos:position pos:line="27" pos:column="30"/></name> <init pos:line="27" pos:column="31">= <expr><ternary><condition><expr><name pos:line="27" pos:column="33">am_sender<pos:position pos:line="27" pos:column="42"/></name> <operator pos:line="27" pos:column="43">||<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">protocol_version<pos:position pos:line="27" pos:column="62"/></name> <operator pos:line="27" pos:column="63">&lt;<pos:position pos:line="27" pos:column="67"/></operator> <literal type="number" pos:line="27" pos:column="65">29<pos:position pos:line="27" pos:column="67"/></literal></expr> ?<pos:position pos:line="27" pos:column="69"/></condition><then pos:line="27" pos:column="69"> <expr><name pos:line="27" pos:column="70">f_out<pos:position pos:line="27" pos:column="75"/></name></expr> <pos:position pos:line="27" pos:column="76"/></then><else pos:line="27" pos:column="76">: <expr><operator pos:line="27" pos:column="78">-<pos:position pos:line="27" pos:column="79"/></operator><literal type="number" pos:line="27" pos:column="79">2<pos:position pos:line="27" pos:column="80"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="27" pos:column="81"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">send_rules<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">f<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="39">&amp;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="40">cvs_filter_list<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">f<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">==<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">f_out<pos:position pos:line="29" pos:column="39"/></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40">
				<block type="pseudo"><continue pos:line="30" pos:column="33">continue;<pos:position pos:line="30" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">p<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <call><name pos:line="32" pos:column="21">get_rule_prefix<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name><name pos:line="32" pos:column="37">ent<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">match_flags<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="55">ent<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">pattern<pos:position pos:line="32" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="69">1<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="32" pos:column="72">&amp;<pos:position pos:line="32" pos:column="77"/></operator><name pos:line="32" pos:column="73">plen<pos:position pos:line="32" pos:column="77"/></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">!<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">p<pos:position pos:line="33" pos:column="23"/></name></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <block pos:line="33" pos:column="25">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">rprintf<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">FERROR<pos:position pos:line="34" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="35" pos:column="33">"filter rules are too modern for remote rsync.\n"<pos:position pos:line="35" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="84"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">exit_cleanup<pos:position pos:line="36" pos:column="37"/></name><argument_list pos:line="36" pos:column="37">(<argument><expr><name pos:line="36" pos:column="38">RERR_SYNTAX<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">f_out<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&lt;<pos:position pos:line="38" pos:column="31"/></operator> <literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr>)<pos:position pos:line="38" pos:column="31"/></condition><then pos:line="38" pos:column="31">
			<block type="pseudo"><continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="40" pos:column="17">len<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <call><name pos:line="40" pos:column="23">strlen<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name><name pos:line="40" pos:column="30">ent<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">pattern<pos:position pos:line="40" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">dlen<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <ternary><condition><expr><name><name pos:line="41" pos:column="24">ent<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">match_flags<pos:position pos:line="41" pos:column="40"/></name></name> <operator pos:line="41" pos:column="41">&amp;<pos:position pos:line="41" pos:column="46"/></operator> <name pos:line="41" pos:column="43">MATCHFLG_DIRECTORY<pos:position pos:line="41" pos:column="61"/></name></expr> ?<pos:position pos:line="41" pos:column="63"/></condition><then pos:line="41" pos:column="63"> <expr><literal type="number" pos:line="41" pos:column="64">1<pos:position pos:line="41" pos:column="65"/></literal></expr> <pos:position pos:line="41" pos:column="66"/></then><else pos:line="41" pos:column="66">: <expr><literal type="number" pos:line="41" pos:column="68">0<pos:position pos:line="41" pos:column="69"/></literal></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">!<pos:position pos:line="42" pos:column="22"/></operator><operator pos:line="42" pos:column="22">(<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">plen<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">+<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">len<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">+<pos:position pos:line="42" pos:column="35"/></operator> <name pos:line="42" pos:column="36">dlen<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">)<pos:position pos:line="42" pos:column="41"/></operator></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42">
			<block type="pseudo"><continue pos:line="43" pos:column="25">continue;<pos:position pos:line="43" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">write_int<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">f_out<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="34">plen<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">+<pos:position pos:line="44" pos:column="40"/></operator> <name pos:line="44" pos:column="41">len<pos:position pos:line="44" pos:column="44"/></name> <operator pos:line="44" pos:column="45">+<pos:position pos:line="44" pos:column="46"/></operator> <name pos:line="44" pos:column="47">dlen<pos:position pos:line="44" pos:column="51"/></name></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">plen<pos:position pos:line="45" pos:column="25"/></name></expr>)<pos:position pos:line="45" pos:column="26"/></condition><then pos:line="45" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">write_buf<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">f_out<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">p<pos:position pos:line="46" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="45">plen<pos:position pos:line="46" pos:column="49"/></name></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">write_buf<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">f_out<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="34">ent<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">pattern<pos:position pos:line="47" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="48">len<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">dlen<pos:position pos:line="48" pos:column="25"/></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition><then pos:line="48" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="25">write_byte<pos:position pos:line="49" pos:column="35"/></name><argument_list pos:line="49" pos:column="35">(<argument><expr><name pos:line="49" pos:column="36">f_out<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="43">'/'<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="50" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">flp<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">tail<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">prev<pos:position pos:line="51" pos:column="25"/></name></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_627.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">copy_file<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">source<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">dest<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">mode_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">mode<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ifd<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ofd<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">1024<pos:position pos:line="5" pos:column="22"/></literal> <operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator> <literal type="number" pos:line="5" pos:column="25">8<pos:position pos:line="5" pos:column="26"/></literal></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>   <comment type="block" pos:line="6" pos:column="20">/* Number of bytes read into `buf'. */</comment>

	<expr_stmt><expr><name pos:line="8" pos:column="9">ifd<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <call><name pos:line="8" pos:column="15">open<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">source<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">O_RDONLY<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">ifd<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">-<pos:position pos:line="9" pos:column="21"/></operator><literal type="number" pos:line="9" pos:column="21">1<pos:position pos:line="9" pos:column="22"/></literal></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">fprintf<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">FERROR<pos:position pos:line="10" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="32">"open %s: %s\n"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>,
			<argument><expr><name pos:line="11" pos:column="25">source<pos:position pos:line="11" pos:column="31"/></name></expr></argument>,<argument><expr><call><name pos:line="11" pos:column="32">strerror<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">errno<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">-<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">do_unlink<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">dest<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call> <operator pos:line="15" pos:column="29">&amp;&amp;<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="32">errno<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">!=<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">ENOENT<pos:position pos:line="15" pos:column="47"/></name></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48"> <block pos:line="15" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">fprintf<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">FERROR<pos:position pos:line="16" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="32">"unlink %s: %s\n"<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>,
			<argument><expr><name pos:line="17" pos:column="25">dest<pos:position pos:line="17" pos:column="29"/></name></expr></argument>,<argument><expr><call><name pos:line="17" pos:column="30">strerror<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">errno<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">ofd<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">do_open<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">dest<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="29">O_WRONLY<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">|<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="40">O_CREAT<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">|<pos:position pos:line="21" pos:column="49"/></operator> <name pos:line="21" pos:column="50">O_TRUNC<pos:position pos:line="21" pos:column="57"/></name> <operator pos:line="21" pos:column="58">|<pos:position pos:line="21" pos:column="59"/></operator> <name pos:line="21" pos:column="60">O_EXCL<pos:position pos:line="21" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="68">mode<pos:position pos:line="21" pos:column="72"/></name></expr></argument>)<pos:position pos:line="21" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="74"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">ofd<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&lt;<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr>)<pos:position pos:line="22" pos:column="21"/></condition><then pos:line="22" pos:column="21"> <block pos:line="22" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">fprintf<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">FERROR<pos:position pos:line="23" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="23" pos:column="32">"open %s: %s\n"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>,
			<argument><expr><name pos:line="24" pos:column="25">dest<pos:position pos:line="24" pos:column="29"/></name></expr></argument>,<argument><expr><call><name pos:line="24" pos:column="30">strerror<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">errno<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">close<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">ifd<pos:position pos:line="25" pos:column="26"/></name></expr></argument>)<pos:position pos:line="25" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">-<pos:position pos:line="26" pos:column="25"/></operator><literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">len<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">safe_read<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">ifd<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">buf<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="43">sizeof<argument_list pos:line="29" pos:column="49">(<argument><expr><name pos:line="29" pos:column="50">buf<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call><operator pos:line="29" pos:column="55">)<pos:position pos:line="29" pos:column="56"/></operator> <operator pos:line="29" pos:column="57">&gt;<pos:position pos:line="29" pos:column="61"/></operator> <literal type="number" pos:line="29" pos:column="59">0<pos:position pos:line="29" pos:column="60"/></literal></expr>)<pos:position pos:line="29" pos:column="61"/></condition> <block pos:line="29" pos:column="62">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">full_write<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">ofd<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">buf<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">len<pos:position pos:line="30" pos:column="45"/></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call> <operator pos:line="30" pos:column="47">&lt;<pos:position pos:line="30" pos:column="51"/></operator> <literal type="number" pos:line="30" pos:column="49">0<pos:position pos:line="30" pos:column="50"/></literal></expr>)<pos:position pos:line="30" pos:column="51"/></condition><then pos:line="30" pos:column="51"> <block pos:line="30" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">fprintf<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">FERROR<pos:position pos:line="31" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="31" pos:column="40">"write %s: %s\n"<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>,
				<argument><expr><name pos:line="32" pos:column="33">dest<pos:position pos:line="32" pos:column="37"/></name></expr></argument>,<argument><expr><call><name pos:line="32" pos:column="38">strerror<pos:position pos:line="32" pos:column="46"/></name><argument_list pos:line="32" pos:column="46">(<argument><expr><name pos:line="32" pos:column="47">errno<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">close<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name pos:line="33" pos:column="31">ifd<pos:position pos:line="33" pos:column="34"/></name></expr></argument>)<pos:position pos:line="33" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">close<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">ofd<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
			<return pos:line="35" pos:column="25">return <expr><operator pos:line="35" pos:column="32">-<pos:position pos:line="35" pos:column="33"/></operator><literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">close<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">ifd<pos:position pos:line="39" pos:column="18"/></name></expr></argument>)<pos:position pos:line="39" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">close<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><name pos:line="40" pos:column="15">ofd<pos:position pos:line="40" pos:column="18"/></name></expr></argument>)<pos:position pos:line="40" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">len<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">&lt;<pos:position pos:line="42" pos:column="21"/></operator> <literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21"> <block pos:line="42" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">fprintf<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">FERROR<pos:position pos:line="43" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="32">"read %s: %s\n"<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>,
			<argument><expr><name pos:line="44" pos:column="25">source<pos:position pos:line="44" pos:column="31"/></name></expr></argument>,<argument><expr><call><name pos:line="44" pos:column="32">strerror<pos:position pos:line="44" pos:column="40"/></name><argument_list pos:line="44" pos:column="40">(<argument><expr><name pos:line="44" pos:column="41">errno<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><operator pos:line="45" pos:column="24">-<pos:position pos:line="45" pos:column="25"/></operator><literal type="number" pos:line="45" pos:column="25">1<pos:position pos:line="45" pos:column="26"/></literal></expr>;<pos:position pos:line="45" pos:column="27"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<return pos:line="48" pos:column="9">return <expr><literal type="number" pos:line="48" pos:column="16">0<pos:position pos:line="48" pos:column="17"/></literal></expr>;<pos:position pos:line="48" pos:column="18"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

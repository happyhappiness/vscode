<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_224_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">rprint_progress<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">OFF_T<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">ofs<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">OFF_T<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">size<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="52">struct<pos:position pos:line="1" pos:column="58"/></name> <name pos:line="1" pos:column="59">timeval<pos:position pos:line="1" pos:column="66"/></name></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">now<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
			    <parameter><decl><type><name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">is_last<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">rembuf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">64<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="26">eol<pos:position pos:line="4" pos:column="29"/></name><index pos:line="4" pos:column="29">[<expr><literal type="number" pos:line="4" pos:column="30">128<pos:position pos:line="4" pos:column="33"/></literal></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">units<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">long<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">diff<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">double<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">rate<pos:position pos:line="7" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="22">remain<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">pct<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">is_last<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">len<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">snprintf<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">eol<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="41">sizeof <name pos:line="11" pos:column="48">eol<pos:position pos:line="11" pos:column="51"/></name></sizeof></expr></argument>,
			<argument><expr><literal type="string" pos:line="12" pos:column="25">" (xfr#%d, %s-chk=%d/%d)\n"<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="13" pos:column="25">stats<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">xferred_files<pos:position pos:line="13" pos:column="44"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="13" pos:column="46">flist_eof<pos:position pos:line="13" pos:column="55"/></name></expr> ?<pos:position pos:line="13" pos:column="57"/></condition><then pos:line="13" pos:column="57"> <expr><literal type="string" pos:line="13" pos:column="58">"to"<pos:position pos:line="13" pos:column="62"/></literal></expr> <pos:position pos:line="13" pos:column="63"/></then><else pos:line="13" pos:column="63">: <expr><literal type="string" pos:line="13" pos:column="65">"ir"<pos:position pos:line="13" pos:column="69"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><name><name pos:line="14" pos:column="25">stats<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">.<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">num_files<pos:position pos:line="14" pos:column="40"/></name></name> <operator pos:line="14" pos:column="41">-<pos:position pos:line="14" pos:column="42"/></operator> <name pos:line="14" pos:column="43">current_file_index<pos:position pos:line="14" pos:column="61"/></name> <operator pos:line="14" pos:column="62">-<pos:position pos:line="14" pos:column="63"/></operator> <literal type="number" pos:line="14" pos:column="64">1<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="15" pos:column="25">stats<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">num_files<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="42"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><call><name pos:line="16" pos:column="21">INFO_GTE<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">PROGRESS<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="40">2<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
			<decl_stmt><decl><specifier pos:line="17" pos:column="25">static<pos:position pos:line="17" pos:column="31"/></specifier> <type><name pos:line="17" pos:column="32">int<pos:position pos:line="17" pos:column="35"/></name></type> <name pos:line="17" pos:column="36">last_len<pos:position pos:line="17" pos:column="44"/></name> <init pos:line="17" pos:column="45">= <expr><literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="49"/></decl_stmt>
			<comment type="block" pos:line="18" pos:column="25">/* Drop \n and pad with spaces if line got shorter. */</comment>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">last_len<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">&lt;<pos:position pos:line="19" pos:column="42"/></operator> <operator pos:line="19" pos:column="40">--<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">len<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="33">last_len<pos:position pos:line="20" pos:column="41"/></name> <operator pos:line="20" pos:column="42">=<pos:position pos:line="20" pos:column="43"/></operator> <name pos:line="20" pos:column="44">len<pos:position pos:line="20" pos:column="47"/></name></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="21" pos:column="25">eol<pos:position pos:line="21" pos:column="28"/></name><index pos:line="21" pos:column="28">[<expr><name pos:line="21" pos:column="29">last_len<pos:position pos:line="21" pos:column="37"/></name></expr>]<pos:position pos:line="21" pos:column="38"/></index></name> <operator pos:line="21" pos:column="39">=<pos:position pos:line="21" pos:column="40"/></operator> <literal type="char" pos:line="21" pos:column="41">'\0'<pos:position pos:line="21" pos:column="45"/></literal></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt>
			<while pos:line="22" pos:column="25">while <condition pos:line="22" pos:column="31">(<expr><name pos:line="22" pos:column="32">last_len<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">&gt;<pos:position pos:line="22" pos:column="45"/></operator> <name pos:line="22" pos:column="43">len<pos:position pos:line="22" pos:column="46"/></name></expr>)<pos:position pos:line="22" pos:column="47"/></condition>
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="33">eol<pos:position pos:line="23" pos:column="36"/></name><index pos:line="23" pos:column="36">[<expr><operator pos:line="23" pos:column="37">--<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">last_len<pos:position pos:line="23" pos:column="47"/></name></expr>]<pos:position pos:line="23" pos:column="48"/></index></name> <operator pos:line="23" pos:column="49">=<pos:position pos:line="23" pos:column="50"/></operator> <literal type="char" pos:line="23" pos:column="51">' '<pos:position pos:line="23" pos:column="54"/></literal></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt></block></while>
			<expr_stmt><expr><name pos:line="24" pos:column="25">is_last<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="26" pos:column="17">/* Compute stats based on the starting info. */</comment>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">!<pos:position pos:line="27" pos:column="22"/></operator><name><name pos:line="27" pos:column="22">ph_start<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">.<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">time<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">.<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">tv_sec<pos:position pos:line="27" pos:column="42"/></name></name>
		    <operator pos:line="28" pos:column="21">||<pos:position pos:line="28" pos:column="23"/></operator> <operator pos:line="28" pos:column="24">!<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">diff<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <call><name pos:line="28" pos:column="33">msdiff<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><operator pos:line="28" pos:column="40">&amp;<pos:position pos:line="28" pos:column="45"/></operator><name><name pos:line="28" pos:column="41">ph_start<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">time<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">now<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call><operator pos:line="28" pos:column="60">)<pos:position pos:line="28" pos:column="61"/></operator></expr>)<pos:position pos:line="28" pos:column="62"/></condition><then pos:line="28" pos:column="62">
			<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="25">diff<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <literal type="number" pos:line="29" pos:column="32">1<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="30" pos:column="17">rate<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call pos:line="30" pos:column="24">(<name pos:line="30" pos:column="25">double<pos:position pos:line="30" pos:column="31"/></name>) <argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">ofs<pos:position pos:line="30" pos:column="37"/></name> <operator pos:line="30" pos:column="38">-<pos:position pos:line="30" pos:column="39"/></operator> <name><name pos:line="30" pos:column="40">ph_start<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">ofs<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call> <operator pos:line="30" pos:column="54">*<pos:position pos:line="30" pos:column="55"/></operator> <literal type="number" pos:line="30" pos:column="56">1000.0<pos:position pos:line="30" pos:column="62"/></literal> <operator pos:line="30" pos:column="63">/<pos:position pos:line="30" pos:column="64"/></operator> <name pos:line="30" pos:column="65">diff<pos:position pos:line="30" pos:column="69"/></name> <operator pos:line="30" pos:column="70">/<pos:position pos:line="30" pos:column="71"/></operator> <literal type="number" pos:line="30" pos:column="72">1024.0<pos:position pos:line="30" pos:column="78"/></literal></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt>
		<comment type="block" pos:line="31" pos:column="17">/* Switch to total time taken for our last update. */</comment>
		<expr_stmt><expr><name pos:line="32" pos:column="17">remain<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <operator pos:line="32" pos:column="26">(<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">double<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">)<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="35">diff<pos:position pos:line="32" pos:column="39"/></name> <operator pos:line="32" pos:column="40">/<pos:position pos:line="32" pos:column="41"/></operator> <literal type="number" pos:line="32" pos:column="42">1000.0<pos:position pos:line="32" pos:column="48"/></literal></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">strlcpy<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">eol<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="30">"  "<pos:position pos:line="34" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="36">sizeof <name pos:line="34" pos:column="43">eol<pos:position pos:line="34" pos:column="46"/></name></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
		<comment type="block" pos:line="35" pos:column="17">/* Compute stats based on recent progress. */</comment>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><operator pos:line="36" pos:column="22">(<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">diff<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">=<pos:position pos:line="36" pos:column="29"/></operator> <call><name pos:line="36" pos:column="30">msdiff<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><operator pos:line="36" pos:column="37">&amp;<pos:position pos:line="36" pos:column="42"/></operator><name><name pos:line="36" pos:column="38">ph_list<pos:position pos:line="36" pos:column="45"/></name><index pos:line="36" pos:column="45">[<expr><name pos:line="36" pos:column="46">oldest_hpos<pos:position pos:line="36" pos:column="57"/></name></expr>]<pos:position pos:line="36" pos:column="58"/></index></name><operator pos:line="36" pos:column="58">.<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="59">time<pos:position pos:line="36" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="65">now<pos:position pos:line="36" pos:column="68"/></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call><operator pos:line="36" pos:column="69">)<pos:position pos:line="36" pos:column="70"/></operator></expr>)<pos:position pos:line="36" pos:column="71"/></condition><then pos:line="36" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">diff<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">=<pos:position pos:line="37" pos:column="31"/></operator> <literal type="number" pos:line="37" pos:column="32">1<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">rate<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <call pos:line="38" pos:column="24">(<name pos:line="38" pos:column="25">double<pos:position pos:line="38" pos:column="31"/></name>) <argument_list pos:line="38" pos:column="33">(<argument><expr><name pos:line="38" pos:column="34">ofs<pos:position pos:line="38" pos:column="37"/></name> <operator pos:line="38" pos:column="38">-<pos:position pos:line="38" pos:column="39"/></operator> <name><name pos:line="38" pos:column="40">ph_list<pos:position pos:line="38" pos:column="47"/></name><index pos:line="38" pos:column="47">[<expr><name pos:line="38" pos:column="48">oldest_hpos<pos:position pos:line="38" pos:column="59"/></name></expr>]<pos:position pos:line="38" pos:column="60"/></index></name><operator pos:line="38" pos:column="60">.<pos:position pos:line="38" pos:column="61"/></operator><name pos:line="38" pos:column="61">ofs<pos:position pos:line="38" pos:column="64"/></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call> <operator pos:line="38" pos:column="66">*<pos:position pos:line="38" pos:column="67"/></operator> <literal type="number" pos:line="38" pos:column="68">1000.0<pos:position pos:line="38" pos:column="74"/></literal>
		     <operator pos:line="39" pos:column="22">/<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">diff<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">/<pos:position pos:line="39" pos:column="30"/></operator> <literal type="number" pos:line="39" pos:column="31">1024.0<pos:position pos:line="39" pos:column="37"/></literal></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">remain<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <ternary><condition><expr><name pos:line="40" pos:column="26">rate<pos:position pos:line="40" pos:column="30"/></name></expr> ?<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32"> <expr><call pos:line="40" pos:column="33">(<name pos:line="40" pos:column="34">double<pos:position pos:line="40" pos:column="40"/></name>) <argument_list pos:line="40" pos:column="42">(<argument><expr><name pos:line="40" pos:column="43">size<pos:position pos:line="40" pos:column="47"/></name> <operator pos:line="40" pos:column="48">-<pos:position pos:line="40" pos:column="49"/></operator> <name pos:line="40" pos:column="50">ofs<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></call> <operator pos:line="40" pos:column="55">/<pos:position pos:line="40" pos:column="56"/></operator> <name pos:line="40" pos:column="57">rate<pos:position pos:line="40" pos:column="61"/></name> <operator pos:line="40" pos:column="62">/<pos:position pos:line="40" pos:column="63"/></operator> <literal type="number" pos:line="40" pos:column="64">1000.0<pos:position pos:line="40" pos:column="70"/></literal></expr> <pos:position pos:line="40" pos:column="71"/></then><else pos:line="40" pos:column="71">: <expr><literal type="number" pos:line="40" pos:column="73">0.0<pos:position pos:line="40" pos:column="76"/></literal></expr></else></ternary></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></else></if>

	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">rate<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">&gt;<pos:position pos:line="43" pos:column="22"/></operator> <literal type="number" pos:line="43" pos:column="20">1024<pos:position pos:line="43" pos:column="24"/></literal><operator pos:line="43" pos:column="24">*<pos:position pos:line="43" pos:column="25"/></operator><literal type="number" pos:line="43" pos:column="25">1024<pos:position pos:line="43" pos:column="29"/></literal></expr>)<pos:position pos:line="43" pos:column="30"/></condition><then pos:line="43" pos:column="30"> <block pos:line="43" pos:column="31">{
		<expr_stmt><expr><name pos:line="44" pos:column="17">rate<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">/=<pos:position pos:line="44" pos:column="24"/></operator> <literal type="number" pos:line="44" pos:column="25">1024.0<pos:position pos:line="44" pos:column="31"/></literal> <operator pos:line="44" pos:column="32">*<pos:position pos:line="44" pos:column="33"/></operator> <literal type="number" pos:line="44" pos:column="34">1024.0<pos:position pos:line="44" pos:column="40"/></literal></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">units<pos:position pos:line="45" pos:column="22"/></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <literal type="string" pos:line="45" pos:column="25">"GB/s"<pos:position pos:line="45" pos:column="31"/></literal></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="46" pos:column="10"/></block></then> <elseif pos:line="46" pos:column="11">else <if pos:line="46" pos:column="16">if <condition pos:line="46" pos:column="19">(<expr><name pos:line="46" pos:column="20">rate<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">&gt;<pos:position pos:line="46" pos:column="29"/></operator> <literal type="number" pos:line="46" pos:column="27">1024<pos:position pos:line="46" pos:column="31"/></literal></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32"> <block pos:line="46" pos:column="33">{
		<expr_stmt><expr><name pos:line="47" pos:column="17">rate<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">/=<pos:position pos:line="47" pos:column="24"/></operator> <literal type="number" pos:line="47" pos:column="25">1024.0<pos:position pos:line="47" pos:column="31"/></literal></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="48" pos:column="17">units<pos:position pos:line="48" pos:column="22"/></name> <operator pos:line="48" pos:column="23">=<pos:position pos:line="48" pos:column="24"/></operator> <literal type="string" pos:line="48" pos:column="25">"MB/s"<pos:position pos:line="48" pos:column="31"/></literal></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
		<expr_stmt><expr><name pos:line="50" pos:column="17">units<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <literal type="string" pos:line="50" pos:column="25">"kB/s"<pos:position pos:line="50" pos:column="31"/></literal></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></else></if>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">remain<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">&lt;<pos:position pos:line="53" pos:column="24"/></operator> <literal type="number" pos:line="53" pos:column="22">0<pos:position pos:line="53" pos:column="23"/></literal></expr>)<pos:position pos:line="53" pos:column="24"/></condition><then pos:line="53" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">strlcpy<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">rembuf<pos:position pos:line="54" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="33">"  ??:??:??"<pos:position pos:line="54" pos:column="45"/></literal></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="47">sizeof <name pos:line="54" pos:column="54">rembuf<pos:position pos:line="54" pos:column="60"/></name></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="62"/></expr_stmt></block></then>
	<else pos:line="55" pos:column="9">else <block pos:line="55" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">snprintf<pos:position pos:line="56" pos:column="25"/></name><argument_list pos:line="56" pos:column="25">(<argument><expr><name pos:line="56" pos:column="26">rembuf<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="34">sizeof <name pos:line="56" pos:column="41">rembuf<pos:position pos:line="56" pos:column="47"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="49">"%4d:%02d:%02d"<pos:position pos:line="56" pos:column="64"/></literal></expr></argument>,
			 <argument><expr><call pos:line="57" pos:column="26">(<name pos:line="57" pos:column="27">int<pos:position pos:line="57" pos:column="30"/></name>) <argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">remain<pos:position pos:line="57" pos:column="39"/></name> <operator pos:line="57" pos:column="40">/<pos:position pos:line="57" pos:column="41"/></operator> <literal type="number" pos:line="57" pos:column="42">3600.0<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr></argument>,
			 <argument><expr><call pos:line="58" pos:column="26">(<name pos:line="58" pos:column="27">int<pos:position pos:line="58" pos:column="30"/></name>) <argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">remain<pos:position pos:line="58" pos:column="39"/></name> <operator pos:line="58" pos:column="40">/<pos:position pos:line="58" pos:column="41"/></operator> <literal type="number" pos:line="58" pos:column="42">60.0<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call> <operator pos:line="58" pos:column="48">%<pos:position pos:line="58" pos:column="49"/></operator> <literal type="number" pos:line="58" pos:column="50">60<pos:position pos:line="58" pos:column="52"/></literal></expr></argument>,
			 <argument><expr><operator pos:line="59" pos:column="26">(<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="27">int<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">)<pos:position pos:line="59" pos:column="31"/></operator> <name pos:line="59" pos:column="32">remain<pos:position pos:line="59" pos:column="38"/></name> <operator pos:line="59" pos:column="39">%<pos:position pos:line="59" pos:column="40"/></operator> <literal type="number" pos:line="59" pos:column="41">60<pos:position pos:line="59" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="62" pos:column="9">output_needs_newline<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">=<pos:position pos:line="62" pos:column="31"/></operator> <literal type="number" pos:line="62" pos:column="32">0<pos:position pos:line="62" pos:column="33"/></literal></expr>;<pos:position pos:line="62" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="63" pos:column="9">pct<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="63" pos:column="15">ofs<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">==<pos:position pos:line="63" pos:column="21"/></operator> <name pos:line="63" pos:column="22">size<pos:position pos:line="63" pos:column="26"/></name></expr> ?<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28"> <expr><literal type="number" pos:line="63" pos:column="29">100<pos:position pos:line="63" pos:column="32"/></literal></expr> <pos:position pos:line="63" pos:column="33"/></then><else pos:line="63" pos:column="33">: <expr><call pos:line="63" pos:column="35">(<name pos:line="63" pos:column="36">int<pos:position pos:line="63" pos:column="39"/></name>) <argument_list pos:line="63" pos:column="41">(<argument><expr><literal type="number" pos:line="63" pos:column="42">100.0<pos:position pos:line="63" pos:column="47"/></literal> <operator pos:line="63" pos:column="48">*<pos:position pos:line="63" pos:column="49"/></operator> <name pos:line="63" pos:column="50">ofs<pos:position pos:line="63" pos:column="53"/></name> <operator pos:line="63" pos:column="54">/<pos:position pos:line="63" pos:column="55"/></operator> <name pos:line="63" pos:column="56">size<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">rprintf<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">FCLIENT<pos:position pos:line="64" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="26">"\r%15s %3d%% %7.2f%s %s%s"<pos:position pos:line="64" pos:column="53"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="65" pos:column="17">human_num<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">ofs<pos:position pos:line="65" pos:column="30"/></name></expr></argument>)<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">pct<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">rate<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="44">units<pos:position pos:line="65" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="51">rembuf<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="59">eol<pos:position pos:line="65" pos:column="62"/></name></expr></argument>)<pos:position pos:line="65" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="64"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">!<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">is_last<pos:position pos:line="66" pos:column="21"/></name></expr>)<pos:position pos:line="66" pos:column="22"/></condition><then pos:line="66" pos:column="22"> <block pos:line="66" pos:column="23">{
		<expr_stmt><expr><name pos:line="67" pos:column="17">output_needs_newline<pos:position pos:line="67" pos:column="37"/></name> <operator pos:line="67" pos:column="38">=<pos:position pos:line="67" pos:column="39"/></operator> <literal type="number" pos:line="67" pos:column="40">1<pos:position pos:line="67" pos:column="41"/></literal></expr>;<pos:position pos:line="67" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">rflush<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><name pos:line="68" pos:column="24">FCLIENT<pos:position pos:line="68" pos:column="31"/></name></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

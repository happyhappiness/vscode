<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_41_rsync-1.6.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">write_sparse<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">f<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buf<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">len<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">l1<pos:position pos:line="3" pos:column="9"/></name><init pos:line="3" pos:column="9">=<expr><literal type="number" pos:line="3" pos:column="10">0<pos:position pos:line="3" pos:column="11"/></literal></expr></init></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="12">l2<pos:position pos:line="3" pos:column="14"/></name><init pos:line="3" pos:column="14">=<expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">ret<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">sparse_files<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21"> 
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">write<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">f<pos:position pos:line="7" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="20">buf<pos:position pos:line="7" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="24">len<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">l1<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator><literal type="number" pos:line="9" pos:column="11">0<pos:position pos:line="9" pos:column="12"/></literal></expr>;<pos:position pos:line="9" pos:column="13"/></init><condition><expr><name pos:line="9" pos:column="13">l1<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">&lt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">len<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&amp;&amp;<pos:position pos:line="9" pos:column="30"/></operator> <name><name pos:line="9" pos:column="23">buf<pos:position pos:line="9" pos:column="26"/></name><index pos:line="9" pos:column="26">[<expr><name pos:line="9" pos:column="27">l1<pos:position pos:line="9" pos:column="29"/></name></expr>]<pos:position pos:line="9" pos:column="30"/></index></name><operator pos:line="9" pos:column="30">==<pos:position pos:line="9" pos:column="32"/></operator><literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr>;<pos:position pos:line="9" pos:column="34"/></condition><incr><expr><name pos:line="9" pos:column="34">l1<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">++<pos:position pos:line="9" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="39"/></control> <block type="pseudo"><empty_stmt pos:line="9" pos:column="40">;<pos:position pos:line="9" pos:column="41"/></empty_stmt></block></for>
  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">l2<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator><literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>;<pos:position pos:line="10" pos:column="13"/></init><condition><expr><name pos:line="10" pos:column="13">l2<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">&lt;<pos:position pos:line="10" pos:column="19"/></operator><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">len<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">l1<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">)<pos:position pos:line="10" pos:column="24"/></operator> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="28">buf<pos:position pos:line="10" pos:column="31"/></name><index pos:line="10" pos:column="31">[<expr><name pos:line="10" pos:column="32">len<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-<pos:position pos:line="10" pos:column="36"/></operator><operator pos:line="10" pos:column="36">(<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">l2<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">+<pos:position pos:line="10" pos:column="40"/></operator><literal type="number" pos:line="10" pos:column="40">1<pos:position pos:line="10" pos:column="41"/></literal><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator></expr>]<pos:position pos:line="10" pos:column="43"/></index></name><operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator><literal type="number" pos:line="10" pos:column="45">0<pos:position pos:line="10" pos:column="46"/></literal></expr>;<pos:position pos:line="10" pos:column="47"/></condition><incr><expr><name pos:line="10" pos:column="47">l2<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">++<pos:position pos:line="10" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="52"/></control> <block type="pseudo"><empty_stmt pos:line="10" pos:column="53">;<pos:position pos:line="10" pos:column="54"/></empty_stmt></block></for>

  <expr_stmt><expr><name pos:line="12" pos:column="3">last_byte<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name><name pos:line="12" pos:column="15">buf<pos:position pos:line="12" pos:column="18"/></name><index pos:line="12" pos:column="18">[<expr><name pos:line="12" pos:column="19">len<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-<pos:position pos:line="12" pos:column="23"/></operator><literal type="number" pos:line="12" pos:column="23">1<pos:position pos:line="12" pos:column="24"/></literal></expr>]<pos:position pos:line="12" pos:column="25"/></index></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">l1<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">==<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">len<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">||<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">l2<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&gt;<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="25">0<pos:position pos:line="14" pos:column="26"/></literal></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">last_sparse<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator><literal type="number" pos:line="15" pos:column="17">1<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">l1<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">&gt;<pos:position pos:line="17" pos:column="14"/></operator> <literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>)<pos:position pos:line="17" pos:column="14"/></condition><then pos:line="17" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">lseek<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">f<pos:position pos:line="18" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="18" pos:column="13">l1<pos:position pos:line="18" pos:column="15"/></name></expr></argument>,<argument><expr><name pos:line="18" pos:column="16">SEEK_CUR<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt></block></then></if>  

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">l1<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">==<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">len<pos:position pos:line="20" pos:column="16"/></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17"> 
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">len<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">ret<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator><call><name pos:line="23" pos:column="12">write<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">f<pos:position pos:line="23" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="23" pos:column="20">buf<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">+<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">l1<pos:position pos:line="23" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="23" pos:column="27">len<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-<pos:position pos:line="23" pos:column="31"/></operator><operator pos:line="23" pos:column="31">(<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">l1<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">+<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">l2<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">)<pos:position pos:line="23" pos:column="38"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator> <operator pos:line="23" pos:column="41">!=<pos:position pos:line="23" pos:column="43"/></operator> <name pos:line="23" pos:column="44">len<pos:position pos:line="23" pos:column="47"/></name><operator pos:line="23" pos:column="47">-<pos:position pos:line="23" pos:column="48"/></operator><operator pos:line="23" pos:column="48">(<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">l1<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">+<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">l2<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">)<pos:position pos:line="23" pos:column="55"/></operator></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56"> <block pos:line="23" pos:column="57">{
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">ret<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">==<pos:position pos:line="24" pos:column="15"/></operator> <operator pos:line="24" pos:column="16">-<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal> <operator pos:line="24" pos:column="19">||<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">ret<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="29">0<pos:position pos:line="24" pos:column="30"/></literal></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <block type="pseudo"><return pos:line="24" pos:column="32">return <expr><name pos:line="24" pos:column="39">ret<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></return></block></then></if>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">l1<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">+<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">ret<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">)<pos:position pos:line="25" pos:column="20"/></operator></expr>;<pos:position pos:line="25" pos:column="21"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">l2<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">&gt;<pos:position pos:line="28" pos:column="14"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>)<pos:position pos:line="28" pos:column="14"/></condition><then pos:line="28" pos:column="14">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">lseek<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">f<pos:position pos:line="29" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="13">l2<pos:position pos:line="29" pos:column="15"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="16">SEEK_CUR<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt></block></then></if>

  <return pos:line="31" pos:column="3">return <expr><name pos:line="31" pos:column="10">len<pos:position pos:line="31" pos:column="13"/></name></expr>;<pos:position pos:line="31" pos:column="14"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

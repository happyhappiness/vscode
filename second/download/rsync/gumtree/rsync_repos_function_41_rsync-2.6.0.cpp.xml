<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_41_rsync-2.6.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_exclude_file<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">exclude_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">listp<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">fname<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">fatal<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">include<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">line<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><name pos:line="5" pos:column="19">MAXPATHLEN<pos:position pos:line="5" pos:column="29"/></name></expr>]<pos:position pos:line="5" pos:column="30"/></index></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">eob<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">line<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">+<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">MAXPATHLEN<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">-<pos:position pos:line="6" pos:column="40"/></operator> <literal type="number" pos:line="6" pos:column="41">1<pos:position pos:line="6" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">extern<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">int<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">eol_nulls<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">fname<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">||<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="23">!<pos:position pos:line="9" pos:column="24"/></operator><operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">fname<pos:position pos:line="9" pos:column="30"/></name></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
		<block type="pseudo"><return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">fname<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">!=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="char" pos:line="12" pos:column="23">'-'<pos:position pos:line="12" pos:column="26"/></literal> <operator pos:line="12" pos:column="27">||<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">fname<pos:position pos:line="12" pos:column="35"/></name><index pos:line="12" pos:column="35">[<expr><literal type="number" pos:line="12" pos:column="36">1<pos:position pos:line="12" pos:column="37"/></literal></expr>]<pos:position pos:line="12" pos:column="38"/></index></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">fd<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">open<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">fname<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">O_RDONLY<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">|<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">O_BINARY<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="53"/></expr_stmt></block></then>
	<else pos:line="14" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">fd<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt></block></else></if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">fd<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&lt;<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">fatal<pos:position pos:line="17" pos:column="26"/></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">rsyserr<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">FERROR<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">errno<pos:position pos:line="18" pos:column="46"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="19" pos:column="33">"failed to open %s file %s"<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="20" pos:column="33">include<pos:position pos:line="20" pos:column="40"/></name></expr> ?<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42"> <expr><literal type="string" pos:line="20" pos:column="43">"include"<pos:position pos:line="20" pos:column="52"/></literal></expr> <pos:position pos:line="20" pos:column="53"/></then><else pos:line="20" pos:column="53">: <expr><literal type="string" pos:line="20" pos:column="55">"exclude"<pos:position pos:line="20" pos:column="64"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><name pos:line="21" pos:column="33">fname<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">exit_cleanup<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">RERR_FILEIO<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<return pos:line="24" pos:column="17">return;<pos:position pos:line="24" pos:column="24"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>

	<while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal></expr>)<pos:position pos:line="27" pos:column="18"/></condition> <block pos:line="27" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="28" pos:column="17">char<pos:position pos:line="28" pos:column="21"/></name></type> <name pos:line="28" pos:column="22">ch<pos:position pos:line="28" pos:column="24"/></name></decl>, <modifier pos:line="28" pos:column="26">*<pos:position pos:line="28" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="28" pos:column="27">s<pos:position pos:line="28" pos:column="28"/></name> <init pos:line="28" pos:column="29">= <expr><name pos:line="28" pos:column="31">line<pos:position pos:line="28" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="36"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">int<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">cnt<pos:position pos:line="29" pos:column="24"/></name></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>
		<while pos:line="30" pos:column="17">while <condition pos:line="30" pos:column="23">(<expr><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>)<pos:position pos:line="30" pos:column="26"/></condition> <block pos:line="30" pos:column="27">{
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">cnt<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">=<pos:position pos:line="31" pos:column="35"/></operator> <call><name pos:line="31" pos:column="36">read<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">fd<pos:position pos:line="31" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="45">&amp;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="46">ch<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="50">1<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call><operator pos:line="31" pos:column="52">)<pos:position pos:line="31" pos:column="53"/></operator> <operator pos:line="31" pos:column="54">&lt;=<pos:position pos:line="31" pos:column="59"/></operator> <literal type="number" pos:line="31" pos:column="57">0<pos:position pos:line="31" pos:column="58"/></literal></expr>)<pos:position pos:line="31" pos:column="59"/></condition><then pos:line="31" pos:column="59"> <block pos:line="31" pos:column="60">{
				<if pos:line="32" pos:column="33">if <condition pos:line="32" pos:column="36">(<expr><name pos:line="32" pos:column="37">cnt<pos:position pos:line="32" pos:column="40"/></name> <operator pos:line="32" pos:column="41">&lt;<pos:position pos:line="32" pos:column="45"/></operator> <literal type="number" pos:line="32" pos:column="43">0<pos:position pos:line="32" pos:column="44"/></literal> <operator pos:line="32" pos:column="45">&amp;&amp;<pos:position pos:line="32" pos:column="55"/></operator> <name pos:line="32" pos:column="48">errno<pos:position pos:line="32" pos:column="53"/></name> <operator pos:line="32" pos:column="54">==<pos:position pos:line="32" pos:column="56"/></operator> <name pos:line="32" pos:column="57">EINTR<pos:position pos:line="32" pos:column="62"/></name></expr>)<pos:position pos:line="32" pos:column="63"/></condition><then pos:line="32" pos:column="63">
					<block type="pseudo"><continue pos:line="33" pos:column="41">continue;<pos:position pos:line="33" pos:column="50"/></continue></block></then></if>
				<break pos:line="34" pos:column="33">break;<pos:position pos:line="34" pos:column="39"/></break>
			}<pos:position pos:line="35" pos:column="26"/></block></then></if>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><ternary><condition><expr><name pos:line="36" pos:column="29">eol_nulls<pos:position pos:line="36" pos:column="38"/></name></expr>?<pos:position pos:line="36" pos:column="39"/></condition><then pos:line="36" pos:column="39"> <expr><operator pos:line="36" pos:column="40">!<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">ch<pos:position pos:line="36" pos:column="43"/></name></expr> <pos:position pos:line="36" pos:column="44"/></then><else pos:line="36" pos:column="44">: <expr><operator pos:line="36" pos:column="46">(<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="47">ch<pos:position pos:line="36" pos:column="49"/></name> <operator pos:line="36" pos:column="50">==<pos:position pos:line="36" pos:column="52"/></operator> <literal type="char" pos:line="36" pos:column="53">'\n'<pos:position pos:line="36" pos:column="57"/></literal> <operator pos:line="36" pos:column="58">||<pos:position pos:line="36" pos:column="60"/></operator> <name pos:line="36" pos:column="61">ch<pos:position pos:line="36" pos:column="63"/></name> <operator pos:line="36" pos:column="64">==<pos:position pos:line="36" pos:column="66"/></operator> <literal type="char" pos:line="36" pos:column="67">'\r'<pos:position pos:line="36" pos:column="71"/></literal><operator pos:line="36" pos:column="71">)<pos:position pos:line="36" pos:column="72"/></operator></expr></else></ternary></expr>)<pos:position pos:line="36" pos:column="73"/></condition><then pos:line="36" pos:column="73">
				<block type="pseudo"><break pos:line="37" pos:column="33">break;<pos:position pos:line="37" pos:column="39"/></break></block></then></if>
			<if pos:line="38" pos:column="25">if <condition pos:line="38" pos:column="28">(<expr><name pos:line="38" pos:column="29">s<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">&lt;<pos:position pos:line="38" pos:column="35"/></operator> <name pos:line="38" pos:column="33">eob<pos:position pos:line="38" pos:column="36"/></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="33">*<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">s<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">++<pos:position pos:line="39" pos:column="37"/></operator> <operator pos:line="39" pos:column="38">=<pos:position pos:line="39" pos:column="39"/></operator> <name pos:line="39" pos:column="40">ch<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt></block></then></if>
		}<pos:position pos:line="40" pos:column="18"/></block></while>
		<expr_stmt><expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">s<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <literal type="char" pos:line="41" pos:column="22">'\0'<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">line<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">&amp;&amp;<pos:position pos:line="42" pos:column="37"/></operator> <operator pos:line="42" pos:column="30">*<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">line<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">!=<pos:position pos:line="42" pos:column="38"/></operator> <literal type="char" pos:line="42" pos:column="39">';'<pos:position pos:line="42" pos:column="42"/></literal> <operator pos:line="42" pos:column="43">&amp;&amp;<pos:position pos:line="42" pos:column="53"/></operator> <operator pos:line="42" pos:column="46">*<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="47">line<pos:position pos:line="42" pos:column="51"/></name> <operator pos:line="42" pos:column="52">!=<pos:position pos:line="42" pos:column="54"/></operator> <literal type="char" pos:line="42" pos:column="55">'#'<pos:position pos:line="42" pos:column="58"/></literal></expr>)<pos:position pos:line="42" pos:column="59"/></condition><then pos:line="42" pos:column="59"> <block pos:line="42" pos:column="60">{
			<comment type="block" pos:line="43" pos:column="25">/* Skip lines starting with semicolon or pound.
			 * It probably wouldn't cause any harm to not skip
			 * them but there's no need to save them. */</comment>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">add_exclude<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name pos:line="46" pos:column="37">listp<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="44">line<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">include<pos:position pos:line="46" pos:column="57"/></name></expr></argument>)<pos:position pos:line="46" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">cnt<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">&lt;=<pos:position pos:line="48" pos:column="30"/></operator> <literal type="number" pos:line="48" pos:column="28">0<pos:position pos:line="48" pos:column="29"/></literal></expr>)<pos:position pos:line="48" pos:column="30"/></condition><then pos:line="48" pos:column="30">
			<block type="pseudo"><break pos:line="49" pos:column="25">break;<pos:position pos:line="49" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="50" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="51" pos:column="9">close<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name pos:line="51" pos:column="15">fd<pos:position pos:line="51" pos:column="17"/></name></expr></argument>)<pos:position pos:line="51" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_388_rsync-2.6.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">get_local_name<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">file_list<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">flist<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">dest_path<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_STAT<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">statret<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">cp<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">verbose<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&gt;<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="23">2<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">rprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FINFO<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"get_local_name count=%d %s\n"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="9" pos:column="25">flist<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">count<pos:position pos:line="9" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="39">NS<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">dest_path<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">dest_path<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">||<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">list_only<pos:position pos:line="12" pos:column="36"/></name></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>;<pos:position pos:line="13" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* See what currently exists at the destination. */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">statret<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">do_stat<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">dest_path<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="44">st<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator> <operator pos:line="16" pos:column="49">==<pos:position pos:line="16" pos:column="51"/></operator> <literal type="number" pos:line="16" pos:column="52">0<pos:position pos:line="16" pos:column="53"/></literal></expr>)<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54"> <block pos:line="16" pos:column="55">{
		<comment type="block" pos:line="17" pos:column="17">/* If the destination is a dir, enter it and use mode 1. */</comment>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">S_ISDIR<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name><name pos:line="18" pos:column="29">st<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">st_mode<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><operator pos:line="19" pos:column="29">!<pos:position pos:line="19" pos:column="30"/></operator><call><name pos:line="19" pos:column="30">push_dir<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">dest_path<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="50">0<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53"> <block pos:line="19" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="20" pos:column="33">rsyserr<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">FERROR<pos:position pos:line="20" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">errno<pos:position pos:line="20" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="56">"push_dir#1 %s failed"<pos:position pos:line="20" pos:column="78"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="21" pos:column="41">full_fname<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">dest_path<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="22" pos:column="33">exit_cleanup<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name pos:line="22" pos:column="46">RERR_FILESELECT<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then></if>
			<return pos:line="24" pos:column="25">return <expr><name pos:line="24" pos:column="32">NULL<pos:position pos:line="24" pos:column="36"/></name></expr>;<pos:position pos:line="24" pos:column="37"/></return>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name><name pos:line="26" pos:column="21">flist<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">count<pos:position pos:line="26" pos:column="33"/></name></name> <operator pos:line="26" pos:column="34">&gt;<pos:position pos:line="26" pos:column="38"/></operator> <literal type="number" pos:line="26" pos:column="36">1<pos:position pos:line="26" pos:column="37"/></literal></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38"> <block pos:line="26" pos:column="39">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">rprintf<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">FERROR<pos:position pos:line="27" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="28" pos:column="33">"ERROR: destination must be a directory when"<pos:position pos:line="28" pos:column="78"/></literal>
				<literal type="string" pos:line="29" pos:column="33">" copying more than 1 file\n"<pos:position pos:line="29" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="30" pos:column="25">exit_cleanup<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">RERR_FILESELECT<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="32" pos:column="17">/* Caution: flist-&gt;count could be 0! */</comment>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name><name pos:line="33" pos:column="21">flist<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">count<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">==<pos:position pos:line="33" pos:column="36"/></operator> <literal type="number" pos:line="33" pos:column="37">1<pos:position pos:line="33" pos:column="38"/></literal> <operator pos:line="33" pos:column="39">&amp;&amp;<pos:position pos:line="33" pos:column="49"/></operator> <call><name pos:line="33" pos:column="42">S_ISDIR<pos:position pos:line="33" pos:column="49"/></name><argument_list pos:line="33" pos:column="49">(<argument><expr><name><name pos:line="33" pos:column="50">flist<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">files<pos:position pos:line="33" pos:column="62"/></name><index pos:line="33" pos:column="62">[<expr><literal type="number" pos:line="33" pos:column="63">0<pos:position pos:line="33" pos:column="64"/></literal></expr>]<pos:position pos:line="33" pos:column="65"/></index></name><operator pos:line="33" pos:column="65">-&gt;<pos:position pos:line="33" pos:column="70"/></operator><name pos:line="33" pos:column="67">mode<pos:position pos:line="33" pos:column="71"/></name></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="73"/></condition><then pos:line="33" pos:column="73"> <block pos:line="33" pos:column="74">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">rprintf<pos:position pos:line="34" pos:column="32"/></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">FERROR<pos:position pos:line="34" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="35" pos:column="33">"ERROR: cannot overwrite non-directory"<pos:position pos:line="35" pos:column="72"/></literal>
				<literal type="string" pos:line="36" pos:column="33">" with a directory\n"<pos:position pos:line="36" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">exit_cleanup<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">(<argument><expr><name pos:line="37" pos:column="38">RERR_FILESELECT<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></then> <elseif pos:line="39" pos:column="11">else <if pos:line="39" pos:column="16">if <condition pos:line="39" pos:column="19">(<expr><name pos:line="39" pos:column="20">errno<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">!=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">ENOENT<pos:position pos:line="39" pos:column="35"/></name></expr>)<pos:position pos:line="39" pos:column="36"/></condition><then pos:line="39" pos:column="36"> <block pos:line="39" pos:column="37">{
		<comment type="block" pos:line="40" pos:column="17">/* If we don't know what's at the destination, fail. */</comment>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">rsyserr<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">FERROR<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="33">errno<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="40">"ERROR: cannot stat destination %s"<pos:position pos:line="41" pos:column="75"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="42" pos:column="25">full_fname<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">dest_path<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">exit_cleanup<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><name pos:line="43" pos:column="30">RERR_FILESELECT<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif></if>

	<expr_stmt><expr><name pos:line="46" pos:column="9">cp<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">strrchr<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">dest_path<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="33">'/'<pos:position pos:line="46" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="48" pos:column="9">/* If we need a destination directory because the transfer is not
	 * of a single non-directory or the user has requested one via a
	 * destination path ending in a slash, create one and use mode 1. */</comment>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">flist<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">count<pos:position pos:line="51" pos:column="25"/></name></name> <operator pos:line="51" pos:column="26">&gt;<pos:position pos:line="51" pos:column="30"/></operator> <literal type="number" pos:line="51" pos:column="28">1<pos:position pos:line="51" pos:column="29"/></literal> <operator pos:line="51" pos:column="30">||<pos:position pos:line="51" pos:column="32"/></operator> <operator pos:line="51" pos:column="33">(<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="34">cp<pos:position pos:line="51" pos:column="36"/></name> <operator pos:line="51" pos:column="37">&amp;&amp;<pos:position pos:line="51" pos:column="47"/></operator> <operator pos:line="51" pos:column="40">!<pos:position pos:line="51" pos:column="41"/></operator><name><name pos:line="51" pos:column="41">cp<pos:position pos:line="51" pos:column="43"/></name><index pos:line="51" pos:column="43">[<expr><literal type="number" pos:line="51" pos:column="44">1<pos:position pos:line="51" pos:column="45"/></literal></expr>]<pos:position pos:line="51" pos:column="46"/></index></name><operator pos:line="51" pos:column="46">)<pos:position pos:line="51" pos:column="47"/></operator></expr>)<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48"> <block pos:line="51" pos:column="49">{
		<comment type="block" pos:line="52" pos:column="17">/* Lop off the final slash (if any). */</comment>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">cp<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">&amp;&amp;<pos:position pos:line="53" pos:column="34"/></operator> <operator pos:line="53" pos:column="27">!<pos:position pos:line="53" pos:column="28"/></operator><name><name pos:line="53" pos:column="28">cp<pos:position pos:line="53" pos:column="30"/></name><index pos:line="53" pos:column="30">[<expr><literal type="number" pos:line="53" pos:column="31">1<pos:position pos:line="53" pos:column="32"/></literal></expr>]<pos:position pos:line="53" pos:column="33"/></index></name></expr>)<pos:position pos:line="53" pos:column="34"/></condition><then pos:line="53" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="25">*<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">cp<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <literal type="char" pos:line="54" pos:column="31">'\0'<pos:position pos:line="54" pos:column="35"/></literal></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">statret<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">==<pos:position pos:line="56" pos:column="31"/></operator> <literal type="number" pos:line="56" pos:column="32">0<pos:position pos:line="56" pos:column="33"/></literal></expr>)<pos:position pos:line="56" pos:column="34"/></condition><then pos:line="56" pos:column="34"> <block pos:line="56" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">rprintf<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">FERROR<pos:position pos:line="57" pos:column="39"/></name></expr></argument>,
			    <argument><expr><literal type="string" pos:line="58" pos:column="29">"ERROR: destination path is not a directory\n"<pos:position pos:line="58" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">exit_cleanup<pos:position pos:line="59" pos:column="37"/></name><argument_list pos:line="59" pos:column="37">(<argument><expr><name pos:line="59" pos:column="38">RERR_SYNTAX<pos:position pos:line="59" pos:column="49"/></name></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">mkdir_defmode<pos:position pos:line="62" pos:column="34"/></name><argument_list pos:line="62" pos:column="34">(<argument><expr><name pos:line="62" pos:column="35">dest_path<pos:position pos:line="62" pos:column="44"/></name></expr></argument>)<pos:position pos:line="62" pos:column="45"/></argument_list></call> <operator pos:line="62" pos:column="46">!=<pos:position pos:line="62" pos:column="48"/></operator> <literal type="number" pos:line="62" pos:column="49">0<pos:position pos:line="62" pos:column="50"/></literal></expr>)<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51"> <block pos:line="62" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">rsyserr<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">FERROR<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="41">errno<pos:position pos:line="63" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="48">"mkdir %s failed"<pos:position pos:line="63" pos:column="65"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="64" pos:column="33">full_fname<pos:position pos:line="64" pos:column="43"/></name><argument_list pos:line="64" pos:column="43">(<argument><expr><name pos:line="64" pos:column="44">dest_path<pos:position pos:line="64" pos:column="53"/></name></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">exit_cleanup<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">RERR_FILEIO<pos:position pos:line="65" pos:column="49"/></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="68" pos:column="17">new_root_dir<pos:position pos:line="68" pos:column="29"/></name> <operator pos:line="68" pos:column="30">=<pos:position pos:line="68" pos:column="31"/></operator> <literal type="number" pos:line="68" pos:column="32">1<pos:position pos:line="68" pos:column="33"/></literal></expr>;<pos:position pos:line="68" pos:column="34"/></expr_stmt>

		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">verbose<pos:position pos:line="70" pos:column="28"/></name></expr>)<pos:position pos:line="70" pos:column="29"/></condition><then pos:line="70" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="25">rprintf<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">FINFO<pos:position pos:line="71" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="40">"created directory %s\n"<pos:position pos:line="71" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="66">dest_path<pos:position pos:line="71" pos:column="75"/></name></expr></argument>)<pos:position pos:line="71" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="77"/></expr_stmt></block></then></if>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">dry_run<pos:position pos:line="73" pos:column="28"/></name></expr>)<pos:position pos:line="73" pos:column="29"/></condition><then pos:line="73" pos:column="29"> <block pos:line="73" pos:column="30">{
			<comment type="block" pos:line="74" pos:column="25">/* Indicate that dest dir doesn't really exist. */</comment>
			<expr_stmt><expr><name pos:line="75" pos:column="25">dry_run<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">++<pos:position pos:line="75" pos:column="34"/></operator></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if>

		<if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><operator pos:line="78" pos:column="21">!<pos:position pos:line="78" pos:column="22"/></operator><call><name pos:line="78" pos:column="22">push_dir<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><name pos:line="78" pos:column="31">dest_path<pos:position pos:line="78" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="42">dry_run<pos:position pos:line="78" pos:column="49"/></name> <operator pos:line="78" pos:column="50">&gt;<pos:position pos:line="78" pos:column="54"/></operator> <literal type="number" pos:line="78" pos:column="52">1<pos:position pos:line="78" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="55"/></condition><then pos:line="78" pos:column="55"> <block pos:line="78" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">rsyserr<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><name pos:line="79" pos:column="33">FERROR<pos:position pos:line="79" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="41">errno<pos:position pos:line="79" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="48">"push_dir#2 %s failed"<pos:position pos:line="79" pos:column="70"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="80" pos:column="33">full_fname<pos:position pos:line="80" pos:column="43"/></name><argument_list pos:line="80" pos:column="43">(<argument><expr><name pos:line="80" pos:column="44">dest_path<pos:position pos:line="80" pos:column="53"/></name></expr></argument>)<pos:position pos:line="80" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="81" pos:column="25">exit_cleanup<pos:position pos:line="81" pos:column="37"/></name><argument_list pos:line="81" pos:column="37">(<argument><expr><name pos:line="81" pos:column="38">RERR_FILESELECT<pos:position pos:line="81" pos:column="53"/></name></expr></argument>)<pos:position pos:line="81" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>

		<return pos:line="84" pos:column="17">return <expr><name pos:line="84" pos:column="24">NULL<pos:position pos:line="84" pos:column="28"/></name></expr>;<pos:position pos:line="84" pos:column="29"/></return>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="87" pos:column="9">/* Otherwise, we are writing a single file, possibly on top of an
	 * existing non-directory.  Change to the item's parent directory
	 * (if it has a path component), return the basename of the
	 * destination file as the local name, and use mode 2. */</comment>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><name pos:line="91" pos:column="14">cp<pos:position pos:line="91" pos:column="16"/></name></expr>)<pos:position pos:line="91" pos:column="17"/></condition><then pos:line="91" pos:column="17">
		<block type="pseudo"><return pos:line="92" pos:column="17">return <expr><name pos:line="92" pos:column="24">dest_path<pos:position pos:line="92" pos:column="33"/></name></expr>;<pos:position pos:line="92" pos:column="34"/></return></block></then></if>

	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name pos:line="94" pos:column="13">cp<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">==<pos:position pos:line="94" pos:column="18"/></operator> <name pos:line="94" pos:column="19">dest_path<pos:position pos:line="94" pos:column="28"/></name></expr>)<pos:position pos:line="94" pos:column="29"/></condition><then pos:line="94" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="95" pos:column="17">dest_path<pos:position pos:line="95" pos:column="26"/></name> <operator pos:line="95" pos:column="27">=<pos:position pos:line="95" pos:column="28"/></operator> <literal type="string" pos:line="95" pos:column="29">"/"<pos:position pos:line="95" pos:column="32"/></literal></expr>;<pos:position pos:line="95" pos:column="33"/></expr_stmt></block></then></if>

	<expr_stmt><expr><operator pos:line="97" pos:column="9">*<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">cp<pos:position pos:line="97" pos:column="12"/></name> <operator pos:line="97" pos:column="13">=<pos:position pos:line="97" pos:column="14"/></operator> <literal type="char" pos:line="97" pos:column="15">'\0'<pos:position pos:line="97" pos:column="19"/></literal></expr>;<pos:position pos:line="97" pos:column="20"/></expr_stmt>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><operator pos:line="98" pos:column="13">!<pos:position pos:line="98" pos:column="14"/></operator><call><name pos:line="98" pos:column="14">push_dir<pos:position pos:line="98" pos:column="22"/></name><argument_list pos:line="98" pos:column="22">(<argument><expr><name pos:line="98" pos:column="23">dest_path<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="34">0<pos:position pos:line="98" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="37"/></condition><then pos:line="98" pos:column="37"> <block pos:line="98" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">rsyserr<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">FERROR<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="33">errno<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="40">"push_dir#3 %s failed"<pos:position pos:line="99" pos:column="62"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="100" pos:column="25">full_fname<pos:position pos:line="100" pos:column="35"/></name><argument_list pos:line="100" pos:column="35">(<argument><expr><name pos:line="100" pos:column="36">dest_path<pos:position pos:line="100" pos:column="45"/></name></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="101" pos:column="17">exit_cleanup<pos:position pos:line="101" pos:column="29"/></name><argument_list pos:line="101" pos:column="29">(<argument><expr><name pos:line="101" pos:column="30">RERR_FILESELECT<pos:position pos:line="101" pos:column="45"/></name></expr></argument>)<pos:position pos:line="101" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="103" pos:column="9">*<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">cp<pos:position pos:line="103" pos:column="12"/></name> <operator pos:line="103" pos:column="13">=<pos:position pos:line="103" pos:column="14"/></operator> <literal type="char" pos:line="103" pos:column="15">'/'<pos:position pos:line="103" pos:column="18"/></literal></expr>;<pos:position pos:line="103" pos:column="19"/></expr_stmt>

	<return pos:line="105" pos:column="9">return <expr><name pos:line="105" pos:column="16">cp<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">+<pos:position pos:line="105" pos:column="20"/></operator> <literal type="number" pos:line="105" pos:column="21">1<pos:position pos:line="105" pos:column="22"/></literal></expr>;<pos:position pos:line="105" pos:column="23"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

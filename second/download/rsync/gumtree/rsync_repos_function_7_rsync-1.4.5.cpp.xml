<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_7_rsync-1.4.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_one_exclude<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">pattern<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">p<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">!<pos:position pos:line="5" pos:column="8"/></operator><call><name pos:line="5" pos:column="8">strchr<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">pattern<pos:position pos:line="5" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="5" pos:column="23">'/'<pos:position pos:line="5" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call> <operator pos:line="5" pos:column="28">&amp;&amp;<pos:position pos:line="5" pos:column="38"/></operator> <operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">p<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">=<pos:position pos:line="5" pos:column="34"/></operator><call><name pos:line="5" pos:column="34">strrchr<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">name<pos:position pos:line="5" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="5" pos:column="47">'/'<pos:position pos:line="5" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator></expr>)<pos:position pos:line="5" pos:column="53"/></condition><then pos:line="5" pos:column="53">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">name<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">p<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">+<pos:position pos:line="6" pos:column="14"/></operator><literal type="number" pos:line="6" pos:column="14">1<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name><name pos:line="8" pos:column="8">name<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>]<pos:position pos:line="8" pos:column="15"/></index></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16"> <block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">is_regex<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">pattern<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">fnmatch<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">pattern<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="26">name<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call> <operator pos:line="11" pos:column="35">==<pos:position pos:line="11" pos:column="37"/></operator> <literal type="number" pos:line="11" pos:column="38">0<pos:position pos:line="11" pos:column="39"/></literal></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then> <else pos:line="13" pos:column="5">else <block pos:line="13" pos:column="10">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">l1<pos:position pos:line="14" pos:column="11"/></name> <init pos:line="14" pos:column="12">= <expr><call><name pos:line="14" pos:column="14">strlen<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">name<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">l2<pos:position pos:line="15" pos:column="11"/></name> <init pos:line="15" pos:column="12">= <expr><call><name pos:line="15" pos:column="14">strlen<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">pattern<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="30"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">l2<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">&lt;=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="15">l1<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">&amp;&amp;<pos:position pos:line="16" pos:column="28"/></operator> 
	<call><name pos:line="17" pos:column="9">strcmp<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">name<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">+<pos:position pos:line="17" pos:column="21"/></operator><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">l1<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">l2<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr></argument>,<argument><expr><name pos:line="17" pos:column="29">pattern<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">0<pos:position pos:line="17" pos:column="42"/></literal> <operator pos:line="17" pos:column="43">&amp;&amp;<pos:position pos:line="17" pos:column="53"/></operator>
	<operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">l1<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">==<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">l2<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">||<pos:position pos:line="18" pos:column="19"/></operator> <name><name pos:line="18" pos:column="20">name<pos:position pos:line="18" pos:column="24"/></name><index pos:line="18" pos:column="24">[<expr><name pos:line="18" pos:column="25">l1<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-<pos:position pos:line="18" pos:column="28"/></operator><operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">l2<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">+<pos:position pos:line="18" pos:column="32"/></operator><literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal><operator pos:line="18" pos:column="33">)<pos:position pos:line="18" pos:column="34"/></operator></expr>]<pos:position pos:line="18" pos:column="35"/></index></name> <operator pos:line="18" pos:column="36">==<pos:position pos:line="18" pos:column="38"/></operator> <literal type="char" pos:line="18" pos:column="39">'/'<pos:position pos:line="18" pos:column="42"/></literal><operator pos:line="18" pos:column="42">)<pos:position pos:line="18" pos:column="43"/></operator></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44">
      <block type="pseudo"><return pos:line="19" pos:column="7">return <expr><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></else></if>

  <return pos:line="22" pos:column="3">return <expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

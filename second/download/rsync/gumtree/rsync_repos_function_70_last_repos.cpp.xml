<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_70_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type>
<name pos:line="2" pos:column="1">free_stat_x<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">stat_x<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">sx_p<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">SUPPORT_ACLS<pos:position pos:line="4" pos:column="20"/></name></cpp:ifdef>
    <block pos:line="5" pos:column="5">{
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">extern<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">preserve_acls<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">preserve_acls<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">free_acl<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">sx_p<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="11" pos:column="22"/></name></cpp:ifdef>
    <block pos:line="12" pos:column="5">{
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">extern<pos:position pos:line="13" pos:column="15"/></specifier> <type><name pos:line="13" pos:column="16">int<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">preserve_xattrs<pos:position pos:line="13" pos:column="35"/></name></decl>;<pos:position pos:line="13" pos:column="36"/></decl_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">preserve_xattrs<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="17">free_xattr<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">sx_p<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

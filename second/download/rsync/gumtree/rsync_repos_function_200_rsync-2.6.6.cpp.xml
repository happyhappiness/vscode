<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_200_rsync-2.6.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">recv_generator<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fname<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">file_struct<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">file<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">ndx<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">itemizing<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">maybe_PERMS_REPORT<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
			   <parameter><decl><type><name><name pos:line="3" pos:column="28">enum<pos:position pos:line="3" pos:column="32"/></name> <name pos:line="3" pos:column="33">logcode<pos:position pos:line="3" pos:column="40"/></name></name></type> <name pos:line="3" pos:column="41">code<pos:position pos:line="3" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="47">int<pos:position pos:line="3" pos:column="50"/></name></type> <name pos:line="3" pos:column="51">f_out<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">int<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">missing_below<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><operator pos:line="5" pos:column="36">-<pos:position pos:line="5" pos:column="37"/></operator><literal type="number" pos:line="5" pos:column="37">1<pos:position pos:line="5" pos:column="38"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="40">excluded_below<pos:position pos:line="5" pos:column="54"/></name> <init pos:line="5" pos:column="55">= <expr><operator pos:line="5" pos:column="57">-<pos:position pos:line="5" pos:column="58"/></operator><literal type="number" pos:line="5" pos:column="58">1<pos:position pos:line="5" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">char<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">fuzzy_dirname<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><literal type="string" pos:line="6" pos:column="38">""<pos:position pos:line="6" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name><name pos:line="7" pos:column="16">struct<pos:position pos:line="7" pos:column="22"/></name> <name pos:line="7" pos:column="23">file_list<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">fuzzy_dirlist<pos:position pos:line="7" pos:column="47"/></name> <init pos:line="7" pos:column="48">= <expr><name pos:line="7" pos:column="50">NULL<pos:position pos:line="7" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">file_struct<pos:position pos:line="8" pos:column="27"/></name></name> <modifier pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></modifier></type><name pos:line="8" pos:column="29">fuzzy_file<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><name pos:line="8" pos:column="42">NULL<pos:position pos:line="8" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">fd<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><operator pos:line="9" pos:column="18">-<pos:position pos:line="9" pos:column="19"/></operator><literal type="number" pos:line="9" pos:column="19">1<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="22">f_copy<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><operator pos:line="9" pos:column="31">-<pos:position pos:line="9" pos:column="32"/></operator><literal type="number" pos:line="9" pos:column="32">1<pos:position pos:line="9" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">STRUCT_STAT<pos:position pos:line="10" pos:column="20"/></name></type> <name pos:line="10" pos:column="21">st<pos:position pos:line="10" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="25">real_st<pos:position pos:line="10" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="34">partial_st<pos:position pos:line="10" pos:column="44"/></name></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">file_struct<pos:position pos:line="11" pos:column="27"/></name></name> <modifier pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></modifier></type><name pos:line="11" pos:column="29">back_file<pos:position pos:line="11" pos:column="38"/></name> <init pos:line="11" pos:column="39">= <expr><name pos:line="11" pos:column="41">NULL<pos:position pos:line="11" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">statret<pos:position pos:line="12" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="22">real_ret<pos:position pos:line="12" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="32">stat_errno<pos:position pos:line="12" pos:column="42"/></name></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">fnamecmp<pos:position pos:line="13" pos:column="23"/></name></decl>, <modifier pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="26">partialptr<pos:position pos:line="13" pos:column="36"/></name></decl>, <modifier pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="39">backupptr<pos:position pos:line="13" pos:column="48"/></name> <init pos:line="13" pos:column="49">= <expr><name pos:line="13" pos:column="51">NULL<pos:position pos:line="13" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name></type> <name><name pos:line="14" pos:column="14">fnamecmpbuf<pos:position pos:line="14" pos:column="25"/></name><index pos:line="14" pos:column="25">[<expr><name pos:line="14" pos:column="26">MAXPATHLEN<pos:position pos:line="14" pos:column="36"/></name></expr>]<pos:position pos:line="14" pos:column="37"/></index></name></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">uchar<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">fnamecmp_type<pos:position pos:line="15" pos:column="28"/></name></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">list_only<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
		<block type="pseudo"><return pos:line="18" pos:column="17">return;<pos:position pos:line="18" pos:column="24"/></return></block></then></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">fname<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20"> <block pos:line="20" pos:column="21">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name pos:line="21" pos:column="21">fuzzy_dirlist<pos:position pos:line="21" pos:column="34"/></name></expr>)<pos:position pos:line="21" pos:column="35"/></condition><then pos:line="21" pos:column="35"> <block pos:line="21" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">flist_free<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">fuzzy_dirlist<pos:position pos:line="22" pos:column="49"/></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">fuzzy_dirlist<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">=<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="41">NULL<pos:position pos:line="23" pos:column="45"/></name></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><name pos:line="24" pos:column="25">fuzzy_dirname<pos:position pos:line="24" pos:column="38"/></name> <operator pos:line="24" pos:column="39">=<pos:position pos:line="24" pos:column="40"/></operator> <literal type="string" pos:line="24" pos:column="41">""<pos:position pos:line="24" pos:column="43"/></literal></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">missing_below<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">&gt;=<pos:position pos:line="26" pos:column="40"/></operator> <literal type="number" pos:line="26" pos:column="38">0<pos:position pos:line="26" pos:column="39"/></literal></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40"> <block pos:line="26" pos:column="41">{
			<expr_stmt><expr><name pos:line="27" pos:column="25">dry_run<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">--<pos:position pos:line="27" pos:column="34"/></operator></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="28" pos:column="25">missing_below<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <operator pos:line="28" pos:column="41">-<pos:position pos:line="28" pos:column="42"/></operator><literal type="number" pos:line="28" pos:column="42">1<pos:position pos:line="28" pos:column="43"/></literal></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>
		<return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">verbose<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">&gt;<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="23">2<pos:position pos:line="33" pos:column="24"/></literal></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">rprintf<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">FINFO<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="32">"recv_generator(%s,%d)\n"<pos:position pos:line="34" pos:column="57"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="35" pos:column="25">safe_fname<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">fname<pos:position pos:line="35" pos:column="41"/></name></expr></argument>)<pos:position pos:line="35" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">ndx<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">server_filter_list<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">.<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="32">head<pos:position pos:line="38" pos:column="36"/></name></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37"> <block pos:line="38" pos:column="38">{
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name pos:line="39" pos:column="21">excluded_below<pos:position pos:line="39" pos:column="35"/></name> <operator pos:line="39" pos:column="36">&gt;=<pos:position pos:line="39" pos:column="41"/></operator> <literal type="number" pos:line="39" pos:column="39">0<pos:position pos:line="39" pos:column="40"/></literal></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41"> <block pos:line="39" pos:column="42">{
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name><name pos:line="40" pos:column="29">file<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">dir<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">.<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="39">depth<pos:position pos:line="40" pos:column="44"/></name></name> <operator pos:line="40" pos:column="45">&gt;<pos:position pos:line="40" pos:column="49"/></operator> <name pos:line="40" pos:column="47">excluded_below<pos:position pos:line="40" pos:column="61"/></name></expr>)<pos:position pos:line="40" pos:column="62"/></condition><then pos:line="40" pos:column="62">
				<block type="pseudo"><goto pos:line="41" pos:column="33">goto <name pos:line="41" pos:column="38">skipping<pos:position pos:line="41" pos:column="46"/></name>;<pos:position pos:line="41" pos:column="47"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="42" pos:column="25">excluded_below<pos:position pos:line="42" pos:column="39"/></name> <operator pos:line="42" pos:column="40">=<pos:position pos:line="42" pos:column="41"/></operator> <operator pos:line="42" pos:column="42">-<pos:position pos:line="42" pos:column="43"/></operator><literal type="number" pos:line="42" pos:column="43">1<pos:position pos:line="42" pos:column="44"/></literal></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">check_filter<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><operator pos:line="44" pos:column="34">&amp;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="35">server_filter_list<pos:position pos:line="44" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="55">fname<pos:position pos:line="44" pos:column="60"/></name></expr></argument>,
				 <argument><expr><call><name pos:line="45" pos:column="34">S_ISDIR<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">(<argument><expr><name><name pos:line="45" pos:column="42">file<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">-&gt;<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="48">mode<pos:position pos:line="45" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call> <operator pos:line="45" pos:column="55">&lt;<pos:position pos:line="45" pos:column="59"/></operator> <literal type="number" pos:line="45" pos:column="57">0<pos:position pos:line="45" pos:column="58"/></literal></expr>)<pos:position pos:line="45" pos:column="59"/></condition><then pos:line="45" pos:column="59"> <block pos:line="45" pos:column="60">{
			<if pos:line="46" pos:column="25">if <condition pos:line="46" pos:column="28">(<expr><call><name pos:line="46" pos:column="29">S_ISDIR<pos:position pos:line="46" pos:column="36"/></name><argument_list pos:line="46" pos:column="36">(<argument><expr><name><name pos:line="46" pos:column="37">file<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">-&gt;<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="43">mode<pos:position pos:line="46" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="33">excluded_below<pos:position pos:line="47" pos:column="47"/></name> <operator pos:line="47" pos:column="48">=<pos:position pos:line="47" pos:column="49"/></operator> <name><name pos:line="47" pos:column="50">file<pos:position pos:line="47" pos:column="54"/></name><operator pos:line="47" pos:column="54">-&gt;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="56">dir<pos:position pos:line="47" pos:column="59"/></name><operator pos:line="47" pos:column="59">.<pos:position pos:line="47" pos:column="60"/></operator><name pos:line="47" pos:column="60">depth<pos:position pos:line="47" pos:column="65"/></name></name></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt></block></then></if>
		    <label><name pos:line="48" pos:column="21">skipping<pos:position pos:line="48" pos:column="29"/></name>:<pos:position pos:line="48" pos:column="30"/></label>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">verbose<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37"> <block pos:line="49" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="50" pos:column="33">rprintf<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">FINFO<pos:position pos:line="50" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="51" pos:column="41">"skipping server-excluded file \"%s\"\n"<pos:position pos:line="51" pos:column="81"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="52" pos:column="41">safe_fname<pos:position pos:line="52" pos:column="51"/></name><argument_list pos:line="52" pos:column="51">(<argument><expr><name pos:line="52" pos:column="52">fname<pos:position pos:line="52" pos:column="57"/></name></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="53" pos:column="26"/></block></then></if>
			<return pos:line="54" pos:column="25">return;<pos:position pos:line="54" pos:column="32"/></return>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
	}<pos:position pos:line="56" pos:column="10"/></block></then></if>

	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">missing_below<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">&gt;=<pos:position pos:line="58" pos:column="32"/></operator> <literal type="number" pos:line="58" pos:column="30">0<pos:position pos:line="58" pos:column="31"/></literal> <operator pos:line="58" pos:column="32">&amp;&amp;<pos:position pos:line="58" pos:column="42"/></operator> <name><name pos:line="58" pos:column="35">file<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">-&gt;<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="41">dir<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">.<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="45">depth<pos:position pos:line="58" pos:column="50"/></name></name> <operator pos:line="58" pos:column="51">&lt;=<pos:position pos:line="58" pos:column="56"/></operator> <name pos:line="58" pos:column="54">missing_below<pos:position pos:line="58" pos:column="67"/></name></expr>)<pos:position pos:line="58" pos:column="68"/></condition><then pos:line="58" pos:column="68"> <block pos:line="58" pos:column="69">{
		<expr_stmt><expr><name pos:line="59" pos:column="17">dry_run<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">--<pos:position pos:line="59" pos:column="26"/></operator></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="60" pos:column="17">missing_below<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <operator pos:line="60" pos:column="33">-<pos:position pos:line="60" pos:column="34"/></operator><literal type="number" pos:line="60" pos:column="34">1<pos:position pos:line="60" pos:column="35"/></literal></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">dry_run<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">&gt;<pos:position pos:line="62" pos:column="25"/></operator> <literal type="number" pos:line="62" pos:column="23">1<pos:position pos:line="62" pos:column="24"/></literal></expr>)<pos:position pos:line="62" pos:column="25"/></condition><then pos:line="62" pos:column="25"> <block pos:line="62" pos:column="26">{
		<expr_stmt><expr><name pos:line="63" pos:column="17">statret<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <operator pos:line="63" pos:column="27">-<pos:position pos:line="63" pos:column="28"/></operator><literal type="number" pos:line="63" pos:column="28">1<pos:position pos:line="63" pos:column="29"/></literal></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="64" pos:column="17">stat_errno<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">=<pos:position pos:line="64" pos:column="29"/></operator> <name pos:line="64" pos:column="30">ENOENT<pos:position pos:line="64" pos:column="36"/></name></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="65" pos:column="10"/></block></then> <else pos:line="65" pos:column="11">else <block pos:line="65" pos:column="16">{
		<if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name pos:line="66" pos:column="21">fuzzy_basis<pos:position pos:line="66" pos:column="32"/></name> <operator pos:line="66" pos:column="33">&amp;&amp;<pos:position pos:line="66" pos:column="43"/></operator> <call><name pos:line="66" pos:column="36">S_ISREG<pos:position pos:line="66" pos:column="43"/></name><argument_list pos:line="66" pos:column="43">(<argument><expr><name><name pos:line="66" pos:column="44">file<pos:position pos:line="66" pos:column="48"/></name><operator pos:line="66" pos:column="48">-&gt;<pos:position pos:line="66" pos:column="53"/></operator><name pos:line="66" pos:column="50">mode<pos:position pos:line="66" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="56"/></condition><then pos:line="66" pos:column="56"> <block pos:line="66" pos:column="57">{
			<decl_stmt><decl><type><name pos:line="67" pos:column="25">char<pos:position pos:line="67" pos:column="29"/></name> <modifier pos:line="67" pos:column="30">*<pos:position pos:line="67" pos:column="31"/></modifier></type><name pos:line="67" pos:column="31">dn<pos:position pos:line="67" pos:column="33"/></name> <init pos:line="67" pos:column="34">= <expr><ternary><condition><expr><name><name pos:line="67" pos:column="36">file<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">dirname<pos:position pos:line="67" pos:column="49"/></name></name></expr> ?<pos:position pos:line="67" pos:column="51"/></condition><then pos:line="67" pos:column="51"> <expr><name><name pos:line="67" pos:column="52">file<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">-&gt;<pos:position pos:line="67" pos:column="61"/></operator><name pos:line="67" pos:column="58">dirname<pos:position pos:line="67" pos:column="65"/></name></name></expr> <pos:position pos:line="67" pos:column="66"/></then><else pos:line="67" pos:column="66">: <expr><literal type="string" pos:line="67" pos:column="68">"."<pos:position pos:line="67" pos:column="71"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="67" pos:column="72"/></decl_stmt>
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><name pos:line="68" pos:column="29">fuzzy_dirname<pos:position pos:line="68" pos:column="42"/></name> <operator pos:line="68" pos:column="43">!=<pos:position pos:line="68" pos:column="45"/></operator> <name pos:line="68" pos:column="46">dn<pos:position pos:line="68" pos:column="48"/></name>
			    <operator pos:line="69" pos:column="29">&amp;&amp;<pos:position pos:line="69" pos:column="39"/></operator> <call><name pos:line="69" pos:column="32">strcmp<pos:position pos:line="69" pos:column="38"/></name><argument_list pos:line="69" pos:column="38">(<argument><expr><name pos:line="69" pos:column="39">fuzzy_dirname<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">dn<pos:position pos:line="69" pos:column="56"/></name></expr></argument>)<pos:position pos:line="69" pos:column="57"/></argument_list></call> <operator pos:line="69" pos:column="58">!=<pos:position pos:line="69" pos:column="60"/></operator> <literal type="number" pos:line="69" pos:column="61">0<pos:position pos:line="69" pos:column="62"/></literal></expr>)<pos:position pos:line="69" pos:column="63"/></condition><then pos:line="69" pos:column="63"> <block pos:line="69" pos:column="64">{
				<if pos:line="70" pos:column="33">if <condition pos:line="70" pos:column="36">(<expr><name pos:line="70" pos:column="37">fuzzy_dirlist<pos:position pos:line="70" pos:column="50"/></name></expr>)<pos:position pos:line="70" pos:column="51"/></condition><then pos:line="70" pos:column="51">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="41">flist_free<pos:position pos:line="71" pos:column="51"/></name><argument_list pos:line="71" pos:column="51">(<argument><expr><name pos:line="71" pos:column="52">fuzzy_dirlist<pos:position pos:line="71" pos:column="65"/></name></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="72" pos:column="33">fuzzy_dirlist<pos:position pos:line="72" pos:column="46"/></name> <operator pos:line="72" pos:column="47">=<pos:position pos:line="72" pos:column="48"/></operator> <call><name pos:line="72" pos:column="49">get_dirlist<pos:position pos:line="72" pos:column="60"/></name><argument_list pos:line="72" pos:column="60">(<argument><expr><name pos:line="72" pos:column="61">dn<pos:position pos:line="72" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="65">-<pos:position pos:line="72" pos:column="66"/></operator><literal type="number" pos:line="72" pos:column="66">1<pos:position pos:line="72" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="69">1<pos:position pos:line="72" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="73" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="74" pos:column="25">fuzzy_dirname<pos:position pos:line="74" pos:column="38"/></name> <operator pos:line="74" pos:column="39">=<pos:position pos:line="74" pos:column="40"/></operator> <name pos:line="74" pos:column="41">dn<pos:position pos:line="74" pos:column="43"/></name></expr>;<pos:position pos:line="74" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="77" pos:column="17">statret<pos:position pos:line="77" pos:column="24"/></name> <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <call><name pos:line="77" pos:column="27">link_stat<pos:position pos:line="77" pos:column="36"/></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">fname<pos:position pos:line="77" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="44">&amp;<pos:position pos:line="77" pos:column="49"/></operator><name pos:line="77" pos:column="45">st<pos:position pos:line="77" pos:column="47"/></name></expr></argument>,
				    <argument><expr><name pos:line="78" pos:column="37">keep_dirlinks<pos:position pos:line="78" pos:column="50"/></name> <operator pos:line="78" pos:column="51">&amp;&amp;<pos:position pos:line="78" pos:column="61"/></operator> <call><name pos:line="78" pos:column="54">S_ISDIR<pos:position pos:line="78" pos:column="61"/></name><argument_list pos:line="78" pos:column="61">(<argument><expr><name><name pos:line="78" pos:column="62">file<pos:position pos:line="78" pos:column="66"/></name><operator pos:line="78" pos:column="66">-&gt;<pos:position pos:line="78" pos:column="71"/></operator><name pos:line="78" pos:column="68">mode<pos:position pos:line="78" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name pos:line="79" pos:column="17">stat_errno<pos:position pos:line="79" pos:column="27"/></name> <operator pos:line="79" pos:column="28">=<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="30">errno<pos:position pos:line="79" pos:column="35"/></name></expr>;<pos:position pos:line="79" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></else></if>

	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">only_existing<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">&amp;&amp;<pos:position pos:line="82" pos:column="37"/></operator> <name pos:line="82" pos:column="30">statret<pos:position pos:line="82" pos:column="37"/></name> <operator pos:line="82" pos:column="38">==<pos:position pos:line="82" pos:column="40"/></operator> <operator pos:line="82" pos:column="41">-<pos:position pos:line="82" pos:column="42"/></operator><literal type="number" pos:line="82" pos:column="42">1<pos:position pos:line="82" pos:column="43"/></literal> <operator pos:line="82" pos:column="44">&amp;&amp;<pos:position pos:line="82" pos:column="54"/></operator> <name pos:line="82" pos:column="47">stat_errno<pos:position pos:line="82" pos:column="57"/></name> <operator pos:line="82" pos:column="58">==<pos:position pos:line="82" pos:column="60"/></operator> <name pos:line="82" pos:column="61">ENOENT<pos:position pos:line="82" pos:column="67"/></name></expr>)<pos:position pos:line="82" pos:column="68"/></condition><then pos:line="82" pos:column="68"> <block pos:line="82" pos:column="69">{
		<comment type="block" pos:line="83" pos:column="17">/* we only want to update existing files */</comment>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">verbose<pos:position pos:line="84" pos:column="28"/></name> <operator pos:line="84" pos:column="29">&gt;<pos:position pos:line="84" pos:column="33"/></operator> <literal type="number" pos:line="84" pos:column="31">1<pos:position pos:line="84" pos:column="32"/></literal></expr>)<pos:position pos:line="84" pos:column="33"/></condition><then pos:line="84" pos:column="33"> <block pos:line="84" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">rprintf<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><name pos:line="85" pos:column="33">FINFO<pos:position pos:line="85" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="40">"not creating new %s \"%s\"\n"<pos:position pos:line="85" pos:column="70"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><call><name pos:line="86" pos:column="33">S_ISDIR<pos:position pos:line="86" pos:column="40"/></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name><name pos:line="86" pos:column="41">file<pos:position pos:line="86" pos:column="45"/></name><operator pos:line="86" pos:column="45">-&gt;<pos:position pos:line="86" pos:column="50"/></operator><name pos:line="86" pos:column="47">mode<pos:position pos:line="86" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="86" pos:column="52"/></argument_list></call></expr> ?<pos:position pos:line="86" pos:column="54"/></condition><then pos:line="86" pos:column="54"> <expr><literal type="string" pos:line="86" pos:column="55">"directory"<pos:position pos:line="86" pos:column="66"/></literal></expr> <pos:position pos:line="86" pos:column="67"/></then><else pos:line="86" pos:column="67">: <expr><literal type="string" pos:line="86" pos:column="69">"file"<pos:position pos:line="86" pos:column="75"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><call><name pos:line="87" pos:column="33">safe_fname<pos:position pos:line="87" pos:column="43"/></name><argument_list pos:line="87" pos:column="43">(<argument><expr><name pos:line="87" pos:column="44">fname<pos:position pos:line="87" pos:column="49"/></name></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="88" pos:column="18"/></block></then></if>
		<return pos:line="89" pos:column="17">return;<pos:position pos:line="89" pos:column="24"/></return>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if>

	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">statret<pos:position pos:line="92" pos:column="20"/></name> <operator pos:line="92" pos:column="21">==<pos:position pos:line="92" pos:column="23"/></operator> <literal type="number" pos:line="92" pos:column="24">0<pos:position pos:line="92" pos:column="25"/></literal> <operator pos:line="92" pos:column="26">&amp;&amp;<pos:position pos:line="92" pos:column="36"/></operator> <operator pos:line="92" pos:column="29">!<pos:position pos:line="92" pos:column="30"/></operator><name pos:line="92" pos:column="30">preserve_perms<pos:position pos:line="92" pos:column="44"/></name>
	    <operator pos:line="93" pos:column="13">&amp;&amp;<pos:position pos:line="93" pos:column="23"/></operator> <call><name pos:line="93" pos:column="16">S_ISDIR<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><name><name pos:line="93" pos:column="24">st<pos:position pos:line="93" pos:column="26"/></name><operator pos:line="93" pos:column="26">.<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="27">st_mode<pos:position pos:line="93" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="35"/></argument_list></call> <operator pos:line="93" pos:column="36">==<pos:position pos:line="93" pos:column="38"/></operator> <call><name pos:line="93" pos:column="39">S_ISDIR<pos:position pos:line="93" pos:column="46"/></name><argument_list pos:line="93" pos:column="46">(<argument><expr><name><name pos:line="93" pos:column="47">file<pos:position pos:line="93" pos:column="51"/></name><operator pos:line="93" pos:column="51">-&gt;<pos:position pos:line="93" pos:column="56"/></operator><name pos:line="93" pos:column="53">mode<pos:position pos:line="93" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="59"/></condition><then pos:line="93" pos:column="59"> <block pos:line="93" pos:column="60">{
		<comment type="block" pos:line="94" pos:column="17">/* if the file exists already and we aren't perserving
		 * permissions then act as though the remote end sent
		 * us the file permissions we already have */</comment>
		<expr_stmt><expr><name><name pos:line="97" pos:column="17">file<pos:position pos:line="97" pos:column="21"/></name><operator pos:line="97" pos:column="21">-&gt;<pos:position pos:line="97" pos:column="26"/></operator><name pos:line="97" pos:column="23">mode<pos:position pos:line="97" pos:column="27"/></name></name> <operator pos:line="97" pos:column="28">=<pos:position pos:line="97" pos:column="29"/></operator> <operator pos:line="97" pos:column="30">(<pos:position pos:line="97" pos:column="31"/></operator><name><name pos:line="97" pos:column="31">file<pos:position pos:line="97" pos:column="35"/></name><operator pos:line="97" pos:column="35">-&gt;<pos:position pos:line="97" pos:column="40"/></operator><name pos:line="97" pos:column="37">mode<pos:position pos:line="97" pos:column="41"/></name></name> <operator pos:line="97" pos:column="42">&amp;<pos:position pos:line="97" pos:column="47"/></operator> <operator pos:line="97" pos:column="44">~<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="45">CHMOD_BITS<pos:position pos:line="97" pos:column="55"/></name><operator pos:line="97" pos:column="55">)<pos:position pos:line="97" pos:column="56"/></operator>
			   <operator pos:line="98" pos:column="28">|<pos:position pos:line="98" pos:column="29"/></operator> <operator pos:line="98" pos:column="30">(<pos:position pos:line="98" pos:column="31"/></operator><name><name pos:line="98" pos:column="31">st<pos:position pos:line="98" pos:column="33"/></name><operator pos:line="98" pos:column="33">.<pos:position pos:line="98" pos:column="34"/></operator><name pos:line="98" pos:column="34">st_mode<pos:position pos:line="98" pos:column="41"/></name></name> <operator pos:line="98" pos:column="42">&amp;<pos:position pos:line="98" pos:column="47"/></operator> <name pos:line="98" pos:column="44">CHMOD_BITS<pos:position pos:line="98" pos:column="54"/></name><operator pos:line="98" pos:column="54">)<pos:position pos:line="98" pos:column="55"/></operator></expr>;<pos:position pos:line="98" pos:column="56"/></expr_stmt>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>

	<if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><call><name pos:line="101" pos:column="13">S_ISDIR<pos:position pos:line="101" pos:column="20"/></name><argument_list pos:line="101" pos:column="20">(<argument><expr><name><name pos:line="101" pos:column="21">file<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">-&gt;<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="27">mode<pos:position pos:line="101" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="33"/></condition><then pos:line="101" pos:column="33"> <block pos:line="101" pos:column="34">{
		<comment type="block" pos:line="102" pos:column="17">/* The file to be received is a directory, so we need
		 * to prepare appropriately.  If there is already a
		 * file of that name and it is *not* a directory, then
		 * we need to delete it.  If it doesn't exist, then
		 * (perhaps recursively) create it. */</comment>
		<if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><name pos:line="107" pos:column="21">statret<pos:position pos:line="107" pos:column="28"/></name> <operator pos:line="107" pos:column="29">==<pos:position pos:line="107" pos:column="31"/></operator> <literal type="number" pos:line="107" pos:column="32">0<pos:position pos:line="107" pos:column="33"/></literal> <operator pos:line="107" pos:column="34">&amp;&amp;<pos:position pos:line="107" pos:column="44"/></operator> <operator pos:line="107" pos:column="37">!<pos:position pos:line="107" pos:column="38"/></operator><call><name pos:line="107" pos:column="38">S_ISDIR<pos:position pos:line="107" pos:column="45"/></name><argument_list pos:line="107" pos:column="45">(<argument><expr><name><name pos:line="107" pos:column="46">st<pos:position pos:line="107" pos:column="48"/></name><operator pos:line="107" pos:column="48">.<pos:position pos:line="107" pos:column="49"/></operator><name pos:line="107" pos:column="49">st_mode<pos:position pos:line="107" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="58"/></condition><then pos:line="107" pos:column="58"> <block pos:line="107" pos:column="59">{
			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><call><name pos:line="108" pos:column="29">delete_item<pos:position pos:line="108" pos:column="40"/></name><argument_list pos:line="108" pos:column="40">(<argument><expr><name pos:line="108" pos:column="41">fname<pos:position pos:line="108" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="48">st<pos:position pos:line="108" pos:column="50"/></name><operator pos:line="108" pos:column="50">.<pos:position pos:line="108" pos:column="51"/></operator><name pos:line="108" pos:column="51">st_mode<pos:position pos:line="108" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="60">DEL_TERSE<pos:position pos:line="108" pos:column="69"/></name></expr></argument>)<pos:position pos:line="108" pos:column="70"/></argument_list></call> <operator pos:line="108" pos:column="71">&lt;<pos:position pos:line="108" pos:column="75"/></operator> <literal type="number" pos:line="108" pos:column="73">0<pos:position pos:line="108" pos:column="74"/></literal></expr>)<pos:position pos:line="108" pos:column="75"/></condition><then pos:line="108" pos:column="75">
				<block type="pseudo"><return pos:line="109" pos:column="33">return;<pos:position pos:line="109" pos:column="40"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="110" pos:column="25">statret<pos:position pos:line="110" pos:column="32"/></name> <operator pos:line="110" pos:column="33">=<pos:position pos:line="110" pos:column="34"/></operator> <operator pos:line="110" pos:column="35">-<pos:position pos:line="110" pos:column="36"/></operator><literal type="number" pos:line="110" pos:column="36">1<pos:position pos:line="110" pos:column="37"/></literal></expr>;<pos:position pos:line="110" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if>
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><name pos:line="112" pos:column="21">dry_run<pos:position pos:line="112" pos:column="28"/></name> <operator pos:line="112" pos:column="29">&amp;&amp;<pos:position pos:line="112" pos:column="39"/></operator> <name pos:line="112" pos:column="32">statret<pos:position pos:line="112" pos:column="39"/></name> <operator pos:line="112" pos:column="40">!=<pos:position pos:line="112" pos:column="42"/></operator> <literal type="number" pos:line="112" pos:column="43">0<pos:position pos:line="112" pos:column="44"/></literal> <operator pos:line="112" pos:column="45">&amp;&amp;<pos:position pos:line="112" pos:column="55"/></operator> <name pos:line="112" pos:column="48">missing_below<pos:position pos:line="112" pos:column="61"/></name> <operator pos:line="112" pos:column="62">&lt;<pos:position pos:line="112" pos:column="66"/></operator> <literal type="number" pos:line="112" pos:column="64">0<pos:position pos:line="112" pos:column="65"/></literal></expr>)<pos:position pos:line="112" pos:column="66"/></condition><then pos:line="112" pos:column="66"> <block pos:line="112" pos:column="67">{
			<expr_stmt><expr><name pos:line="113" pos:column="25">missing_below<pos:position pos:line="113" pos:column="38"/></name> <operator pos:line="113" pos:column="39">=<pos:position pos:line="113" pos:column="40"/></operator> <name><name pos:line="113" pos:column="41">file<pos:position pos:line="113" pos:column="45"/></name><operator pos:line="113" pos:column="45">-&gt;<pos:position pos:line="113" pos:column="50"/></operator><name pos:line="113" pos:column="47">dir<pos:position pos:line="113" pos:column="50"/></name><operator pos:line="113" pos:column="50">.<pos:position pos:line="113" pos:column="51"/></operator><name pos:line="113" pos:column="51">depth<pos:position pos:line="113" pos:column="56"/></name></name></expr>;<pos:position pos:line="113" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="114" pos:column="25">dry_run<pos:position pos:line="114" pos:column="32"/></name><operator pos:line="114" pos:column="32">++<pos:position pos:line="114" pos:column="34"/></operator></expr>;<pos:position pos:line="114" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if>
		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name pos:line="116" pos:column="21">itemizing<pos:position pos:line="116" pos:column="30"/></name> <operator pos:line="116" pos:column="31">&amp;&amp;<pos:position pos:line="116" pos:column="41"/></operator> <name pos:line="116" pos:column="34">f_out<pos:position pos:line="116" pos:column="39"/></name> <operator pos:line="116" pos:column="40">!=<pos:position pos:line="116" pos:column="42"/></operator> <operator pos:line="116" pos:column="43">-<pos:position pos:line="116" pos:column="44"/></operator><literal type="number" pos:line="116" pos:column="44">1<pos:position pos:line="116" pos:column="45"/></literal></expr>)<pos:position pos:line="116" pos:column="46"/></condition><then pos:line="116" pos:column="46"> <block pos:line="116" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="117" pos:column="25">itemize<pos:position pos:line="117" pos:column="32"/></name><argument_list pos:line="117" pos:column="32">(<argument><expr><name pos:line="117" pos:column="33">file<pos:position pos:line="117" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="39">ndx<pos:position pos:line="117" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="44">statret<pos:position pos:line="117" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="117" pos:column="53">&amp;<pos:position pos:line="117" pos:column="58"/></operator><name pos:line="117" pos:column="54">st<pos:position pos:line="117" pos:column="56"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="118" pos:column="33">statret<pos:position pos:line="118" pos:column="40"/></name></expr> ?<pos:position pos:line="118" pos:column="42"/></condition><then pos:line="118" pos:column="42"> <expr><name pos:line="118" pos:column="43">ITEM_LOCAL_CHANGE<pos:position pos:line="118" pos:column="60"/></name></expr> <pos:position pos:line="118" pos:column="61"/></then><else pos:line="118" pos:column="61">: <expr><literal type="number" pos:line="118" pos:column="63">0<pos:position pos:line="118" pos:column="64"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="66">0<pos:position pos:line="118" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="69">NULL<pos:position pos:line="118" pos:column="73"/></name></expr></argument>)<pos:position pos:line="118" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="119" pos:column="18"/></block></then></if>
		<if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><name pos:line="120" pos:column="21">statret<pos:position pos:line="120" pos:column="28"/></name> <operator pos:line="120" pos:column="29">!=<pos:position pos:line="120" pos:column="31"/></operator> <literal type="number" pos:line="120" pos:column="32">0<pos:position pos:line="120" pos:column="33"/></literal> <operator pos:line="120" pos:column="34">&amp;&amp;<pos:position pos:line="120" pos:column="44"/></operator> <call><name pos:line="120" pos:column="37">do_mkdir<pos:position pos:line="120" pos:column="45"/></name><argument_list pos:line="120" pos:column="45">(<argument><expr><name pos:line="120" pos:column="46">fname<pos:position pos:line="120" pos:column="51"/></name></expr></argument>,<argument><expr><name><name pos:line="120" pos:column="52">file<pos:position pos:line="120" pos:column="56"/></name><operator pos:line="120" pos:column="56">-&gt;<pos:position pos:line="120" pos:column="61"/></operator><name pos:line="120" pos:column="58">mode<pos:position pos:line="120" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="63"/></argument_list></call> <operator pos:line="120" pos:column="64">!=<pos:position pos:line="120" pos:column="66"/></operator> <literal type="number" pos:line="120" pos:column="67">0<pos:position pos:line="120" pos:column="68"/></literal> <operator pos:line="120" pos:column="69">&amp;&amp;<pos:position pos:line="120" pos:column="79"/></operator> <name pos:line="120" pos:column="72">errno<pos:position pos:line="120" pos:column="77"/></name> <operator pos:line="120" pos:column="78">!=<pos:position pos:line="120" pos:column="80"/></operator> <name pos:line="120" pos:column="81">EEXIST<pos:position pos:line="120" pos:column="87"/></name></expr>)<pos:position pos:line="120" pos:column="88"/></condition><then pos:line="120" pos:column="88"> <block pos:line="120" pos:column="89">{
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><operator pos:line="121" pos:column="29">!<pos:position pos:line="121" pos:column="30"/></operator><name pos:line="121" pos:column="30">relative_paths<pos:position pos:line="121" pos:column="44"/></name> <operator pos:line="121" pos:column="45">||<pos:position pos:line="121" pos:column="47"/></operator> <name pos:line="121" pos:column="48">errno<pos:position pos:line="121" pos:column="53"/></name> <operator pos:line="121" pos:column="54">!=<pos:position pos:line="121" pos:column="56"/></operator> <name pos:line="121" pos:column="57">ENOENT<pos:position pos:line="121" pos:column="63"/></name>
			    <operator pos:line="122" pos:column="29">||<pos:position pos:line="122" pos:column="31"/></operator> <call><name pos:line="122" pos:column="32">create_directory_path<pos:position pos:line="122" pos:column="53"/></name><argument_list pos:line="122" pos:column="53">(<argument><expr><name pos:line="122" pos:column="54">fname<pos:position pos:line="122" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="61">orig_umask<pos:position pos:line="122" pos:column="71"/></name></expr></argument>)<pos:position pos:line="122" pos:column="72"/></argument_list></call> <operator pos:line="122" pos:column="73">&lt;<pos:position pos:line="122" pos:column="77"/></operator> <literal type="number" pos:line="122" pos:column="75">0<pos:position pos:line="122" pos:column="76"/></literal>
			    <operator pos:line="123" pos:column="29">||<pos:position pos:line="123" pos:column="31"/></operator> <operator pos:line="123" pos:column="32">(<pos:position pos:line="123" pos:column="33"/></operator><call><name pos:line="123" pos:column="33">do_mkdir<pos:position pos:line="123" pos:column="41"/></name><argument_list pos:line="123" pos:column="41">(<argument><expr><name pos:line="123" pos:column="42">fname<pos:position pos:line="123" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="49">file<pos:position pos:line="123" pos:column="53"/></name><operator pos:line="123" pos:column="53">-&gt;<pos:position pos:line="123" pos:column="58"/></operator><name pos:line="123" pos:column="55">mode<pos:position pos:line="123" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="60"/></argument_list></call> <operator pos:line="123" pos:column="61">&lt;<pos:position pos:line="123" pos:column="65"/></operator> <literal type="number" pos:line="123" pos:column="63">0<pos:position pos:line="123" pos:column="64"/></literal> <operator pos:line="123" pos:column="65">&amp;&amp;<pos:position pos:line="123" pos:column="75"/></operator> <name pos:line="123" pos:column="68">errno<pos:position pos:line="123" pos:column="73"/></name> <operator pos:line="123" pos:column="74">!=<pos:position pos:line="123" pos:column="76"/></operator> <name pos:line="123" pos:column="77">EEXIST<pos:position pos:line="123" pos:column="83"/></name><operator pos:line="123" pos:column="83">)<pos:position pos:line="123" pos:column="84"/></operator></expr>)<pos:position pos:line="123" pos:column="85"/></condition><then pos:line="123" pos:column="85"> <block pos:line="123" pos:column="86">{
				<expr_stmt><expr><call><name pos:line="124" pos:column="33">rsyserr<pos:position pos:line="124" pos:column="40"/></name><argument_list pos:line="124" pos:column="40">(<argument><expr><name pos:line="124" pos:column="41">FERROR<pos:position pos:line="124" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="49">errno<pos:position pos:line="124" pos:column="54"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="125" pos:column="41">"recv_generator: mkdir %s failed"<pos:position pos:line="125" pos:column="74"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="126" pos:column="41">full_fname<pos:position pos:line="126" pos:column="51"/></name><argument_list pos:line="126" pos:column="51">(<argument><expr><name pos:line="126" pos:column="52">fname<pos:position pos:line="126" pos:column="57"/></name></expr></argument>)<pos:position pos:line="126" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="126" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="127" pos:column="26"/></block></then></if>
		}<pos:position pos:line="128" pos:column="18"/></block></then></if>
		<if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><call><name pos:line="129" pos:column="21">set_perms<pos:position pos:line="129" pos:column="30"/></name><argument_list pos:line="129" pos:column="30">(<argument><expr><name pos:line="129" pos:column="31">fname<pos:position pos:line="129" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="38">file<pos:position pos:line="129" pos:column="42"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="129" pos:column="44">statret<pos:position pos:line="129" pos:column="51"/></name></expr> ?<pos:position pos:line="129" pos:column="53"/></condition><then pos:line="129" pos:column="53"> <expr><name pos:line="129" pos:column="54">NULL<pos:position pos:line="129" pos:column="58"/></name></expr> <pos:position pos:line="129" pos:column="59"/></then><else pos:line="129" pos:column="59">: <expr><operator pos:line="129" pos:column="61">&amp;<pos:position pos:line="129" pos:column="66"/></operator><name pos:line="129" pos:column="62">st<pos:position pos:line="129" pos:column="64"/></name></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="66">0<pos:position pos:line="129" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="68"/></argument_list></call>
		    <operator pos:line="130" pos:column="21">&amp;&amp;<pos:position pos:line="130" pos:column="31"/></operator> <name pos:line="130" pos:column="24">verbose<pos:position pos:line="130" pos:column="31"/></name> <operator pos:line="130" pos:column="32">&amp;&amp;<pos:position pos:line="130" pos:column="42"/></operator> <name pos:line="130" pos:column="35">code<pos:position pos:line="130" pos:column="39"/></name> <operator pos:line="130" pos:column="40">&amp;&amp;<pos:position pos:line="130" pos:column="50"/></operator> <name pos:line="130" pos:column="43">f_out<pos:position pos:line="130" pos:column="48"/></name> <operator pos:line="130" pos:column="49">!=<pos:position pos:line="130" pos:column="51"/></operator> <operator pos:line="130" pos:column="52">-<pos:position pos:line="130" pos:column="53"/></operator><literal type="number" pos:line="130" pos:column="53">1<pos:position pos:line="130" pos:column="54"/></literal></expr>)<pos:position pos:line="130" pos:column="55"/></condition><then pos:line="130" pos:column="55">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="25">rprintf<pos:position pos:line="131" pos:column="32"/></name><argument_list pos:line="131" pos:column="32">(<argument><expr><name pos:line="131" pos:column="33">code<pos:position pos:line="131" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="39">"%s/\n"<pos:position pos:line="131" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="131" pos:column="48">safe_fname<pos:position pos:line="131" pos:column="58"/></name><argument_list pos:line="131" pos:column="58">(<argument><expr><name pos:line="131" pos:column="59">fname<pos:position pos:line="131" pos:column="64"/></name></expr></argument>)<pos:position pos:line="131" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="131" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="67"/></expr_stmt></block></then></if>
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><name pos:line="132" pos:column="21">delete_during<pos:position pos:line="132" pos:column="34"/></name> <operator pos:line="132" pos:column="35">&amp;&amp;<pos:position pos:line="132" pos:column="45"/></operator> <name pos:line="132" pos:column="38">f_out<pos:position pos:line="132" pos:column="43"/></name> <operator pos:line="132" pos:column="44">!=<pos:position pos:line="132" pos:column="46"/></operator> <operator pos:line="132" pos:column="47">-<pos:position pos:line="132" pos:column="48"/></operator><literal type="number" pos:line="132" pos:column="48">1<pos:position pos:line="132" pos:column="49"/></literal> <operator pos:line="132" pos:column="50">&amp;&amp;<pos:position pos:line="132" pos:column="60"/></operator> <operator pos:line="132" pos:column="53">!<pos:position pos:line="132" pos:column="54"/></operator><name pos:line="132" pos:column="54">phase<pos:position pos:line="132" pos:column="59"/></name> <operator pos:line="132" pos:column="60">&amp;&amp;<pos:position pos:line="132" pos:column="70"/></operator> <name pos:line="132" pos:column="63">dry_run<pos:position pos:line="132" pos:column="70"/></name> <operator pos:line="132" pos:column="71">&lt;<pos:position pos:line="132" pos:column="75"/></operator> <literal type="number" pos:line="132" pos:column="73">2<pos:position pos:line="132" pos:column="74"/></literal>
		    <operator pos:line="133" pos:column="21">&amp;&amp;<pos:position pos:line="133" pos:column="31"/></operator> <operator pos:line="133" pos:column="24">(<pos:position pos:line="133" pos:column="25"/></operator><name><name pos:line="133" pos:column="25">file<pos:position pos:line="133" pos:column="29"/></name><operator pos:line="133" pos:column="29">-&gt;<pos:position pos:line="133" pos:column="34"/></operator><name pos:line="133" pos:column="31">flags<pos:position pos:line="133" pos:column="36"/></name></name> <operator pos:line="133" pos:column="37">&amp;<pos:position pos:line="133" pos:column="42"/></operator> <name pos:line="133" pos:column="39">FLAG_DEL_HERE<pos:position pos:line="133" pos:column="52"/></name><operator pos:line="133" pos:column="52">)<pos:position pos:line="133" pos:column="53"/></operator></expr>)<pos:position pos:line="133" pos:column="54"/></condition><then pos:line="133" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="25">delete_in_dir<pos:position pos:line="134" pos:column="38"/></name><argument_list pos:line="134" pos:column="38">(<argument><expr><name pos:line="134" pos:column="39">the_file_list<pos:position pos:line="134" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="54">fname<pos:position pos:line="134" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="61">file<pos:position pos:line="134" pos:column="65"/></name></expr></argument>)<pos:position pos:line="134" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="67"/></expr_stmt></block></then></if>
		<return pos:line="135" pos:column="17">return;<pos:position pos:line="135" pos:column="24"/></return>
	}<pos:position pos:line="136" pos:column="10"/></block></then></if>

	<if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><name pos:line="138" pos:column="13">preserve_links<pos:position pos:line="138" pos:column="27"/></name> <operator pos:line="138" pos:column="28">&amp;&amp;<pos:position pos:line="138" pos:column="38"/></operator> <call><name pos:line="138" pos:column="31">S_ISLNK<pos:position pos:line="138" pos:column="38"/></name><argument_list pos:line="138" pos:column="38">(<argument><expr><name><name pos:line="138" pos:column="39">file<pos:position pos:line="138" pos:column="43"/></name><operator pos:line="138" pos:column="43">-&gt;<pos:position pos:line="138" pos:column="48"/></operator><name pos:line="138" pos:column="45">mode<pos:position pos:line="138" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="138" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="51"/></condition><then pos:line="138" pos:column="51"> <block pos:line="138" pos:column="52">{
<cpp:ifdef pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">ifdef<pos:position pos:line="139" pos:column="7"/></cpp:directive> <name pos:line="139" pos:column="8">SUPPORT_LINKS<pos:position pos:line="139" pos:column="21"/></name></cpp:ifdef>
		<if pos:line="140" pos:column="17">if <condition pos:line="140" pos:column="20">(<expr><name pos:line="140" pos:column="21">safe_symlinks<pos:position pos:line="140" pos:column="34"/></name> <operator pos:line="140" pos:column="35">&amp;&amp;<pos:position pos:line="140" pos:column="45"/></operator> <call><name pos:line="140" pos:column="38">unsafe_symlink<pos:position pos:line="140" pos:column="52"/></name><argument_list pos:line="140" pos:column="52">(<argument><expr><name><name pos:line="140" pos:column="53">file<pos:position pos:line="140" pos:column="57"/></name><operator pos:line="140" pos:column="57">-&gt;<pos:position pos:line="140" pos:column="62"/></operator><name pos:line="140" pos:column="59">u<pos:position pos:line="140" pos:column="60"/></name><operator pos:line="140" pos:column="60">.<pos:position pos:line="140" pos:column="61"/></operator><name pos:line="140" pos:column="61">link<pos:position pos:line="140" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="67">fname<pos:position pos:line="140" pos:column="72"/></name></expr></argument>)<pos:position pos:line="140" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="74"/></condition><then pos:line="140" pos:column="74"> <block pos:line="140" pos:column="75">{
			<if pos:line="141" pos:column="25">if <condition pos:line="141" pos:column="28">(<expr><name pos:line="141" pos:column="29">verbose<pos:position pos:line="141" pos:column="36"/></name></expr>)<pos:position pos:line="141" pos:column="37"/></condition><then pos:line="141" pos:column="37"> <block pos:line="141" pos:column="38">{
				<if pos:line="142" pos:column="33">if <condition pos:line="142" pos:column="36">(<expr><name><name pos:line="142" pos:column="37">the_file_list<pos:position pos:line="142" pos:column="50"/></name><operator pos:line="142" pos:column="50">-&gt;<pos:position pos:line="142" pos:column="55"/></operator><name pos:line="142" pos:column="52">count<pos:position pos:line="142" pos:column="57"/></name></name> <operator pos:line="142" pos:column="58">==<pos:position pos:line="142" pos:column="60"/></operator> <literal type="number" pos:line="142" pos:column="61">1<pos:position pos:line="142" pos:column="62"/></literal></expr>)<pos:position pos:line="142" pos:column="63"/></condition><then pos:line="142" pos:column="63">
					<block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="41">fname<pos:position pos:line="143" pos:column="46"/></name> <operator pos:line="143" pos:column="47">=<pos:position pos:line="143" pos:column="48"/></operator> <call><name pos:line="143" pos:column="49">f_name<pos:position pos:line="143" pos:column="55"/></name><argument_list pos:line="143" pos:column="55">(<argument><expr><name pos:line="143" pos:column="56">file<pos:position pos:line="143" pos:column="60"/></name></expr></argument>)<pos:position pos:line="143" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="62"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="144" pos:column="33">rprintf<pos:position pos:line="144" pos:column="40"/></name><argument_list pos:line="144" pos:column="40">(<argument><expr><name pos:line="144" pos:column="41">FINFO<pos:position pos:line="144" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="145" pos:column="41">"ignoring unsafe symlink %s -&gt; \"%s\"\n"<pos:position pos:line="145" pos:column="84"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="146" pos:column="41">full_fname<pos:position pos:line="146" pos:column="51"/></name><argument_list pos:line="146" pos:column="51">(<argument><expr><name pos:line="146" pos:column="52">fname<pos:position pos:line="146" pos:column="57"/></name></expr></argument>)<pos:position pos:line="146" pos:column="58"/></argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="147" pos:column="41">safe_fname<pos:position pos:line="147" pos:column="51"/></name><argument_list pos:line="147" pos:column="51">(<argument><expr><name><name pos:line="147" pos:column="52">file<pos:position pos:line="147" pos:column="56"/></name><operator pos:line="147" pos:column="56">-&gt;<pos:position pos:line="147" pos:column="61"/></operator><name pos:line="147" pos:column="58">u<pos:position pos:line="147" pos:column="59"/></name><operator pos:line="147" pos:column="59">.<pos:position pos:line="147" pos:column="60"/></operator><name pos:line="147" pos:column="60">link<pos:position pos:line="147" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="147" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="67"/></expr_stmt>
			}<pos:position pos:line="148" pos:column="26"/></block></then></if>
			<return pos:line="149" pos:column="25">return;<pos:position pos:line="149" pos:column="32"/></return>
		}<pos:position pos:line="150" pos:column="18"/></block></then></if>
		<if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><name pos:line="151" pos:column="21">statret<pos:position pos:line="151" pos:column="28"/></name> <operator pos:line="151" pos:column="29">==<pos:position pos:line="151" pos:column="31"/></operator> <literal type="number" pos:line="151" pos:column="32">0<pos:position pos:line="151" pos:column="33"/></literal></expr>)<pos:position pos:line="151" pos:column="34"/></condition><then pos:line="151" pos:column="34"> <block pos:line="151" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="152" pos:column="25">char<pos:position pos:line="152" pos:column="29"/></name></type> <name><name pos:line="152" pos:column="30">lnk<pos:position pos:line="152" pos:column="33"/></name><index pos:line="152" pos:column="33">[<expr><name pos:line="152" pos:column="34">MAXPATHLEN<pos:position pos:line="152" pos:column="44"/></name></expr>]<pos:position pos:line="152" pos:column="45"/></index></name></decl>;<pos:position pos:line="152" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="153" pos:column="25">int<pos:position pos:line="153" pos:column="28"/></name></type> <name pos:line="153" pos:column="29">len<pos:position pos:line="153" pos:column="32"/></name></decl>;<pos:position pos:line="153" pos:column="33"/></decl_stmt>

			<if pos:line="155" pos:column="25">if <condition pos:line="155" pos:column="28">(<expr><operator pos:line="155" pos:column="29">!<pos:position pos:line="155" pos:column="30"/></operator><call><name pos:line="155" pos:column="30">S_ISDIR<pos:position pos:line="155" pos:column="37"/></name><argument_list pos:line="155" pos:column="37">(<argument><expr><name><name pos:line="155" pos:column="38">st<pos:position pos:line="155" pos:column="40"/></name><operator pos:line="155" pos:column="40">.<pos:position pos:line="155" pos:column="41"/></operator><name pos:line="155" pos:column="41">st_mode<pos:position pos:line="155" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="49"/></argument_list></call>
			    <operator pos:line="156" pos:column="29">&amp;&amp;<pos:position pos:line="156" pos:column="39"/></operator> <operator pos:line="156" pos:column="32">(<pos:position pos:line="156" pos:column="33"/></operator><name pos:line="156" pos:column="33">len<pos:position pos:line="156" pos:column="36"/></name> <operator pos:line="156" pos:column="37">=<pos:position pos:line="156" pos:column="38"/></operator> <call><name pos:line="156" pos:column="39">readlink<pos:position pos:line="156" pos:column="47"/></name><argument_list pos:line="156" pos:column="47">(<argument><expr><name pos:line="156" pos:column="48">fname<pos:position pos:line="156" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="55">lnk<pos:position pos:line="156" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="60">MAXPATHLEN<pos:position pos:line="156" pos:column="70"/></name><operator pos:line="156" pos:column="70">-<pos:position pos:line="156" pos:column="71"/></operator><literal type="number" pos:line="156" pos:column="71">1<pos:position pos:line="156" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="73"/></argument_list></call><operator pos:line="156" pos:column="73">)<pos:position pos:line="156" pos:column="74"/></operator> <operator pos:line="156" pos:column="75">&gt;<pos:position pos:line="156" pos:column="79"/></operator> <literal type="number" pos:line="156" pos:column="77">0<pos:position pos:line="156" pos:column="78"/></literal></expr>)<pos:position pos:line="156" pos:column="79"/></condition><then pos:line="156" pos:column="79"> <block pos:line="156" pos:column="80">{
				<expr_stmt><expr><name><name pos:line="157" pos:column="33">lnk<pos:position pos:line="157" pos:column="36"/></name><index pos:line="157" pos:column="36">[<expr><name pos:line="157" pos:column="37">len<pos:position pos:line="157" pos:column="40"/></name></expr>]<pos:position pos:line="157" pos:column="41"/></index></name> <operator pos:line="157" pos:column="42">=<pos:position pos:line="157" pos:column="43"/></operator> <literal type="number" pos:line="157" pos:column="44">0<pos:position pos:line="157" pos:column="45"/></literal></expr>;<pos:position pos:line="157" pos:column="46"/></expr_stmt>
				<comment type="block" pos:line="158" pos:column="33">/* A link already pointing to the
				 * right place -- no further action
				 * required. */</comment>
				<if pos:line="161" pos:column="33">if <condition pos:line="161" pos:column="36">(<expr><call><name pos:line="161" pos:column="37">strcmp<pos:position pos:line="161" pos:column="43"/></name><argument_list pos:line="161" pos:column="43">(<argument><expr><name pos:line="161" pos:column="44">lnk<pos:position pos:line="161" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="161" pos:column="49">file<pos:position pos:line="161" pos:column="53"/></name><operator pos:line="161" pos:column="53">-&gt;<pos:position pos:line="161" pos:column="58"/></operator><name pos:line="161" pos:column="55">u<pos:position pos:line="161" pos:column="56"/></name><operator pos:line="161" pos:column="56">.<pos:position pos:line="161" pos:column="57"/></operator><name pos:line="161" pos:column="57">link<pos:position pos:line="161" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="161" pos:column="62"/></argument_list></call> <operator pos:line="161" pos:column="63">==<pos:position pos:line="161" pos:column="65"/></operator> <literal type="number" pos:line="161" pos:column="66">0<pos:position pos:line="161" pos:column="67"/></literal></expr>)<pos:position pos:line="161" pos:column="68"/></condition><then pos:line="161" pos:column="68"> <block pos:line="161" pos:column="69">{
					<if pos:line="162" pos:column="41">if <condition pos:line="162" pos:column="44">(<expr><name pos:line="162" pos:column="45">itemizing<pos:position pos:line="162" pos:column="54"/></name></expr>)<pos:position pos:line="162" pos:column="55"/></condition><then pos:line="162" pos:column="55"> <block pos:line="162" pos:column="56">{
						<expr_stmt><expr><call><name pos:line="163" pos:column="49">itemize<pos:position pos:line="163" pos:column="56"/></name><argument_list pos:line="163" pos:column="56">(<argument><expr><name pos:line="163" pos:column="57">file<pos:position pos:line="163" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="63">ndx<pos:position pos:line="163" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="68">0<pos:position pos:line="163" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="163" pos:column="71">&amp;<pos:position pos:line="163" pos:column="76"/></operator><name pos:line="163" pos:column="72">st<pos:position pos:line="163" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="163" pos:column="76">0<pos:position pos:line="163" pos:column="77"/></literal></expr></argument>,
							<argument><expr><literal type="number" pos:line="164" pos:column="57">0<pos:position pos:line="164" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="164" pos:column="60">NULL<pos:position pos:line="164" pos:column="64"/></name></expr></argument>)<pos:position pos:line="164" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="66"/></expr_stmt>
					}<pos:position pos:line="165" pos:column="42"/></block></then></if>
					<expr_stmt><expr><call><name pos:line="166" pos:column="41">set_perms<pos:position pos:line="166" pos:column="50"/></name><argument_list pos:line="166" pos:column="50">(<argument><expr><name pos:line="166" pos:column="51">fname<pos:position pos:line="166" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="58">file<pos:position pos:line="166" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="166" pos:column="64">&amp;<pos:position pos:line="166" pos:column="69"/></operator><name pos:line="166" pos:column="65">st<pos:position pos:line="166" pos:column="67"/></name></expr></argument>,
						  <argument><expr><name pos:line="167" pos:column="51">maybe_PERMS_REPORT<pos:position pos:line="167" pos:column="69"/></name></expr></argument>)<pos:position pos:line="167" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="71"/></expr_stmt>
					<return pos:line="168" pos:column="41">return;<pos:position pos:line="168" pos:column="48"/></return>
				}<pos:position pos:line="169" pos:column="34"/></block></then></if>
			}<pos:position pos:line="170" pos:column="26"/></block></then></if>
			<comment type="block" pos:line="171" pos:column="25">/* Not the right symlink (or not a symlink), so
			 * delete it. */</comment>
			<if pos:line="173" pos:column="25">if <condition pos:line="173" pos:column="28">(<expr><call><name pos:line="173" pos:column="29">delete_item<pos:position pos:line="173" pos:column="40"/></name><argument_list pos:line="173" pos:column="40">(<argument><expr><name pos:line="173" pos:column="41">fname<pos:position pos:line="173" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="173" pos:column="48">st<pos:position pos:line="173" pos:column="50"/></name><operator pos:line="173" pos:column="50">.<pos:position pos:line="173" pos:column="51"/></operator><name pos:line="173" pos:column="51">st_mode<pos:position pos:line="173" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="60">DEL_TERSE<pos:position pos:line="173" pos:column="69"/></name></expr></argument>)<pos:position pos:line="173" pos:column="70"/></argument_list></call> <operator pos:line="173" pos:column="71">&lt;<pos:position pos:line="173" pos:column="75"/></operator> <literal type="number" pos:line="173" pos:column="73">0<pos:position pos:line="173" pos:column="74"/></literal></expr>)<pos:position pos:line="173" pos:column="75"/></condition><then pos:line="173" pos:column="75">
				<block type="pseudo"><return pos:line="174" pos:column="33">return;<pos:position pos:line="174" pos:column="40"/></return></block></then></if>
			<if pos:line="175" pos:column="25">if <condition pos:line="175" pos:column="28">(<expr><operator pos:line="175" pos:column="29">!<pos:position pos:line="175" pos:column="30"/></operator><call><name pos:line="175" pos:column="30">S_ISLNK<pos:position pos:line="175" pos:column="37"/></name><argument_list pos:line="175" pos:column="37">(<argument><expr><name><name pos:line="175" pos:column="38">st<pos:position pos:line="175" pos:column="40"/></name><operator pos:line="175" pos:column="40">.<pos:position pos:line="175" pos:column="41"/></operator><name pos:line="175" pos:column="41">st_mode<pos:position pos:line="175" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="50"/></condition><then pos:line="175" pos:column="50">
				<block type="pseudo"><expr_stmt><expr><name pos:line="176" pos:column="33">statret<pos:position pos:line="176" pos:column="40"/></name> <operator pos:line="176" pos:column="41">=<pos:position pos:line="176" pos:column="42"/></operator> <operator pos:line="176" pos:column="43">-<pos:position pos:line="176" pos:column="44"/></operator><literal type="number" pos:line="176" pos:column="44">1<pos:position pos:line="176" pos:column="45"/></literal></expr>;<pos:position pos:line="176" pos:column="46"/></expr_stmt></block></then></if>
		}<pos:position pos:line="177" pos:column="18"/></block></then></if>
		<if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><call><name pos:line="178" pos:column="21">do_symlink<pos:position pos:line="178" pos:column="31"/></name><argument_list pos:line="178" pos:column="31">(<argument><expr><name><name pos:line="178" pos:column="32">file<pos:position pos:line="178" pos:column="36"/></name><operator pos:line="178" pos:column="36">-&gt;<pos:position pos:line="178" pos:column="41"/></operator><name pos:line="178" pos:column="38">u<pos:position pos:line="178" pos:column="39"/></name><operator pos:line="178" pos:column="39">.<pos:position pos:line="178" pos:column="40"/></operator><name pos:line="178" pos:column="40">link<pos:position pos:line="178" pos:column="44"/></name></name></expr></argument>,<argument><expr><name pos:line="178" pos:column="45">fname<pos:position pos:line="178" pos:column="50"/></name></expr></argument>)<pos:position pos:line="178" pos:column="51"/></argument_list></call> <operator pos:line="178" pos:column="52">!=<pos:position pos:line="178" pos:column="54"/></operator> <literal type="number" pos:line="178" pos:column="55">0<pos:position pos:line="178" pos:column="56"/></literal></expr>)<pos:position pos:line="178" pos:column="57"/></condition><then pos:line="178" pos:column="57"> <block pos:line="178" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="179" pos:column="25">rsyserr<pos:position pos:line="179" pos:column="32"/></name><argument_list pos:line="179" pos:column="32">(<argument><expr><name pos:line="179" pos:column="33">FERROR<pos:position pos:line="179" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="41">errno<pos:position pos:line="179" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="48">"symlink %s -&gt; \"%s\" failed"<pos:position pos:line="179" pos:column="80"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="180" pos:column="33">full_fname<pos:position pos:line="180" pos:column="43"/></name><argument_list pos:line="180" pos:column="43">(<argument><expr><name pos:line="180" pos:column="44">fname<pos:position pos:line="180" pos:column="49"/></name></expr></argument>)<pos:position pos:line="180" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="180" pos:column="52">safe_fname<pos:position pos:line="180" pos:column="62"/></name><argument_list pos:line="180" pos:column="62">(<argument><expr><name><name pos:line="180" pos:column="63">file<pos:position pos:line="180" pos:column="67"/></name><operator pos:line="180" pos:column="67">-&gt;<pos:position pos:line="180" pos:column="72"/></operator><name pos:line="180" pos:column="69">u<pos:position pos:line="180" pos:column="70"/></name><operator pos:line="180" pos:column="70">.<pos:position pos:line="180" pos:column="71"/></operator><name pos:line="180" pos:column="71">link<pos:position pos:line="180" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="180" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="78"/></expr_stmt>
		}<pos:position pos:line="181" pos:column="18"/></block></then> <else pos:line="181" pos:column="19">else <block pos:line="181" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="182" pos:column="25">set_perms<pos:position pos:line="182" pos:column="34"/></name><argument_list pos:line="182" pos:column="34">(<argument><expr><name pos:line="182" pos:column="35">fname<pos:position pos:line="182" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="182" pos:column="41">file<pos:position pos:line="182" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="182" pos:column="46">NULL<pos:position pos:line="182" pos:column="50"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="182" pos:column="51">0<pos:position pos:line="182" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="54"/></expr_stmt>
			<if pos:line="183" pos:column="25">if <condition pos:line="183" pos:column="28">(<expr><name pos:line="183" pos:column="29">itemizing<pos:position pos:line="183" pos:column="38"/></name></expr>)<pos:position pos:line="183" pos:column="39"/></condition><then pos:line="183" pos:column="39"> <block pos:line="183" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="184" pos:column="33">itemize<pos:position pos:line="184" pos:column="40"/></name><argument_list pos:line="184" pos:column="40">(<argument><expr><name pos:line="184" pos:column="41">file<pos:position pos:line="184" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="47">ndx<pos:position pos:line="184" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="52">statret<pos:position pos:line="184" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="184" pos:column="61">&amp;<pos:position pos:line="184" pos:column="66"/></operator><name pos:line="184" pos:column="62">st<pos:position pos:line="184" pos:column="64"/></name></expr></argument>,
					<argument><expr><name pos:line="185" pos:column="41">ITEM_LOCAL_CHANGE<pos:position pos:line="185" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="60">0<pos:position pos:line="185" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="185" pos:column="63">NULL<pos:position pos:line="185" pos:column="67"/></name></expr></argument>)<pos:position pos:line="185" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="69"/></expr_stmt>
			}<pos:position pos:line="186" pos:column="26"/></block></then></if>
			<if pos:line="187" pos:column="25">if <condition pos:line="187" pos:column="28">(<expr><name pos:line="187" pos:column="29">code<pos:position pos:line="187" pos:column="33"/></name> <operator pos:line="187" pos:column="34">&amp;&amp;<pos:position pos:line="187" pos:column="44"/></operator> <name pos:line="187" pos:column="37">verbose<pos:position pos:line="187" pos:column="44"/></name></expr>)<pos:position pos:line="187" pos:column="45"/></condition><then pos:line="187" pos:column="45"> <block pos:line="187" pos:column="46">{
				<expr_stmt><expr><call><name pos:line="188" pos:column="33">rprintf<pos:position pos:line="188" pos:column="40"/></name><argument_list pos:line="188" pos:column="40">(<argument><expr><name pos:line="188" pos:column="41">code<pos:position pos:line="188" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="47">"%s -&gt; %s\n"<pos:position pos:line="188" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="188" pos:column="61">safe_fname<pos:position pos:line="188" pos:column="71"/></name><argument_list pos:line="188" pos:column="71">(<argument><expr><name pos:line="188" pos:column="72">fname<pos:position pos:line="188" pos:column="77"/></name></expr></argument>)<pos:position pos:line="188" pos:column="78"/></argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="189" pos:column="41">safe_fname<pos:position pos:line="189" pos:column="51"/></name><argument_list pos:line="189" pos:column="51">(<argument><expr><name><name pos:line="189" pos:column="52">file<pos:position pos:line="189" pos:column="56"/></name><operator pos:line="189" pos:column="56">-&gt;<pos:position pos:line="189" pos:column="61"/></operator><name pos:line="189" pos:column="58">u<pos:position pos:line="189" pos:column="59"/></name><operator pos:line="189" pos:column="59">.<pos:position pos:line="189" pos:column="60"/></operator><name pos:line="189" pos:column="60">link<pos:position pos:line="189" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="189" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="67"/></expr_stmt>
			}<pos:position pos:line="190" pos:column="26"/></block></then></if>
			<if pos:line="191" pos:column="25">if <condition pos:line="191" pos:column="28">(<expr><name pos:line="191" pos:column="29">remove_sent_files<pos:position pos:line="191" pos:column="46"/></name> <operator pos:line="191" pos:column="47">&amp;&amp;<pos:position pos:line="191" pos:column="57"/></operator> <operator pos:line="191" pos:column="50">!<pos:position pos:line="191" pos:column="51"/></operator><name pos:line="191" pos:column="51">dry_run<pos:position pos:line="191" pos:column="58"/></name></expr>)<pos:position pos:line="191" pos:column="59"/></condition><then pos:line="191" pos:column="59"> <block pos:line="191" pos:column="60">{
				<decl_stmt><decl><type><name pos:line="192" pos:column="33">char<pos:position pos:line="192" pos:column="37"/></name></type> <name><name pos:line="192" pos:column="38">numbuf<pos:position pos:line="192" pos:column="44"/></name><index pos:line="192" pos:column="44">[<expr><literal type="number" pos:line="192" pos:column="45">4<pos:position pos:line="192" pos:column="46"/></literal></expr>]<pos:position pos:line="192" pos:column="47"/></index></name></decl>;<pos:position pos:line="192" pos:column="48"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="193" pos:column="33">SIVAL<pos:position pos:line="193" pos:column="38"/></name><argument_list pos:line="193" pos:column="38">(<argument><expr><name pos:line="193" pos:column="39">numbuf<pos:position pos:line="193" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="47">0<pos:position pos:line="193" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="193" pos:column="50">ndx<pos:position pos:line="193" pos:column="53"/></name></expr></argument>)<pos:position pos:line="193" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="55"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="194" pos:column="33">send_msg<pos:position pos:line="194" pos:column="41"/></name><argument_list pos:line="194" pos:column="41">(<argument><expr><name pos:line="194" pos:column="42">MSG_SUCCESS<pos:position pos:line="194" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="55">numbuf<pos:position pos:line="194" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="194" pos:column="63">4<pos:position pos:line="194" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="66"/></expr_stmt>
			}<pos:position pos:line="195" pos:column="26"/></block></then></if>
		}<pos:position pos:line="196" pos:column="18"/></block></else></if>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>
		<return pos:line="198" pos:column="17">return;<pos:position pos:line="198" pos:column="24"/></return>
	}<pos:position pos:line="199" pos:column="10"/></block></then></if>

	<if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><name pos:line="201" pos:column="13">am_root<pos:position pos:line="201" pos:column="20"/></name> <operator pos:line="201" pos:column="21">&amp;&amp;<pos:position pos:line="201" pos:column="31"/></operator> <name pos:line="201" pos:column="24">preserve_devices<pos:position pos:line="201" pos:column="40"/></name> <operator pos:line="201" pos:column="41">&amp;&amp;<pos:position pos:line="201" pos:column="51"/></operator> <call><name pos:line="201" pos:column="44">IS_DEVICE<pos:position pos:line="201" pos:column="53"/></name><argument_list pos:line="201" pos:column="53">(<argument><expr><name><name pos:line="201" pos:column="54">file<pos:position pos:line="201" pos:column="58"/></name><operator pos:line="201" pos:column="58">-&gt;<pos:position pos:line="201" pos:column="63"/></operator><name pos:line="201" pos:column="60">mode<pos:position pos:line="201" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="201" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="201" pos:column="66"/></condition><then pos:line="201" pos:column="66"> <block pos:line="201" pos:column="67">{
		<if pos:line="202" pos:column="17">if <condition pos:line="202" pos:column="20">(<expr><name pos:line="202" pos:column="21">statret<pos:position pos:line="202" pos:column="28"/></name> <operator pos:line="202" pos:column="29">!=<pos:position pos:line="202" pos:column="31"/></operator> <literal type="number" pos:line="202" pos:column="32">0<pos:position pos:line="202" pos:column="33"/></literal> <operator pos:line="202" pos:column="34">||<pos:position pos:line="202" pos:column="36"/></operator>
		    <name><name pos:line="203" pos:column="21">st<pos:position pos:line="203" pos:column="23"/></name><operator pos:line="203" pos:column="23">.<pos:position pos:line="203" pos:column="24"/></operator><name pos:line="203" pos:column="24">st_mode<pos:position pos:line="203" pos:column="31"/></name></name> <operator pos:line="203" pos:column="32">!=<pos:position pos:line="203" pos:column="34"/></operator> <name><name pos:line="203" pos:column="35">file<pos:position pos:line="203" pos:column="39"/></name><operator pos:line="203" pos:column="39">-&gt;<pos:position pos:line="203" pos:column="44"/></operator><name pos:line="203" pos:column="41">mode<pos:position pos:line="203" pos:column="45"/></name></name> <operator pos:line="203" pos:column="46">||<pos:position pos:line="203" pos:column="48"/></operator>
		    <name><name pos:line="204" pos:column="21">st<pos:position pos:line="204" pos:column="23"/></name><operator pos:line="204" pos:column="23">.<pos:position pos:line="204" pos:column="24"/></operator><name pos:line="204" pos:column="24">st_rdev<pos:position pos:line="204" pos:column="31"/></name></name> <operator pos:line="204" pos:column="32">!=<pos:position pos:line="204" pos:column="34"/></operator> <name><name pos:line="204" pos:column="35">file<pos:position pos:line="204" pos:column="39"/></name><operator pos:line="204" pos:column="39">-&gt;<pos:position pos:line="204" pos:column="44"/></operator><name pos:line="204" pos:column="41">u<pos:position pos:line="204" pos:column="42"/></name><operator pos:line="204" pos:column="42">.<pos:position pos:line="204" pos:column="43"/></operator><name pos:line="204" pos:column="43">rdev<pos:position pos:line="204" pos:column="47"/></name></name></expr>)<pos:position pos:line="204" pos:column="48"/></condition><then pos:line="204" pos:column="48"> <block pos:line="204" pos:column="49">{
			<if pos:line="205" pos:column="25">if <condition pos:line="205" pos:column="28">(<expr><call><name pos:line="205" pos:column="29">delete_item<pos:position pos:line="205" pos:column="40"/></name><argument_list pos:line="205" pos:column="40">(<argument><expr><name pos:line="205" pos:column="41">fname<pos:position pos:line="205" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="48">st<pos:position pos:line="205" pos:column="50"/></name><operator pos:line="205" pos:column="50">.<pos:position pos:line="205" pos:column="51"/></operator><name pos:line="205" pos:column="51">st_mode<pos:position pos:line="205" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="205" pos:column="60">DEL_TERSE<pos:position pos:line="205" pos:column="69"/></name></expr></argument>)<pos:position pos:line="205" pos:column="70"/></argument_list></call> <operator pos:line="205" pos:column="71">&lt;<pos:position pos:line="205" pos:column="75"/></operator> <literal type="number" pos:line="205" pos:column="73">0<pos:position pos:line="205" pos:column="74"/></literal></expr>)<pos:position pos:line="205" pos:column="75"/></condition><then pos:line="205" pos:column="75">
				<block type="pseudo"><return pos:line="206" pos:column="33">return;<pos:position pos:line="206" pos:column="40"/></return></block></then></if>
			<if pos:line="207" pos:column="25">if <condition pos:line="207" pos:column="28">(<expr><operator pos:line="207" pos:column="29">!<pos:position pos:line="207" pos:column="30"/></operator><call><name pos:line="207" pos:column="30">IS_DEVICE<pos:position pos:line="207" pos:column="39"/></name><argument_list pos:line="207" pos:column="39">(<argument><expr><name><name pos:line="207" pos:column="40">st<pos:position pos:line="207" pos:column="42"/></name><operator pos:line="207" pos:column="42">.<pos:position pos:line="207" pos:column="43"/></operator><name pos:line="207" pos:column="43">st_mode<pos:position pos:line="207" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="207" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="207" pos:column="52"/></condition><then pos:line="207" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name pos:line="208" pos:column="33">statret<pos:position pos:line="208" pos:column="40"/></name> <operator pos:line="208" pos:column="41">=<pos:position pos:line="208" pos:column="42"/></operator> <operator pos:line="208" pos:column="43">-<pos:position pos:line="208" pos:column="44"/></operator><literal type="number" pos:line="208" pos:column="44">1<pos:position pos:line="208" pos:column="45"/></literal></expr>;<pos:position pos:line="208" pos:column="46"/></expr_stmt></block></then></if>
			<if pos:line="209" pos:column="25">if <condition pos:line="209" pos:column="28">(<expr><name pos:line="209" pos:column="29">verbose<pos:position pos:line="209" pos:column="36"/></name> <operator pos:line="209" pos:column="37">&gt;<pos:position pos:line="209" pos:column="41"/></operator> <literal type="number" pos:line="209" pos:column="39">2<pos:position pos:line="209" pos:column="40"/></literal></expr>)<pos:position pos:line="209" pos:column="41"/></condition><then pos:line="209" pos:column="41"> <block pos:line="209" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="210" pos:column="33">rprintf<pos:position pos:line="210" pos:column="40"/></name><argument_list pos:line="210" pos:column="40">(<argument><expr><name pos:line="210" pos:column="41">FINFO<pos:position pos:line="210" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="210" pos:column="47">"mknod(%s,0%o,0x%x)\n"<pos:position pos:line="210" pos:column="69"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="211" pos:column="41">safe_fname<pos:position pos:line="211" pos:column="51"/></name><argument_list pos:line="211" pos:column="51">(<argument><expr><name pos:line="211" pos:column="52">fname<pos:position pos:line="211" pos:column="57"/></name></expr></argument>)<pos:position pos:line="211" pos:column="58"/></argument_list></call></expr></argument>,
					<argument><expr><operator pos:line="212" pos:column="41">(<pos:position pos:line="212" pos:column="42"/></operator><name pos:line="212" pos:column="42">int<pos:position pos:line="212" pos:column="45"/></name><operator pos:line="212" pos:column="45">)<pos:position pos:line="212" pos:column="46"/></operator><name><name pos:line="212" pos:column="46">file<pos:position pos:line="212" pos:column="50"/></name><operator pos:line="212" pos:column="50">-&gt;<pos:position pos:line="212" pos:column="55"/></operator><name pos:line="212" pos:column="52">mode<pos:position pos:line="212" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="212" pos:column="58">(<pos:position pos:line="212" pos:column="59"/></operator><name pos:line="212" pos:column="59">int<pos:position pos:line="212" pos:column="62"/></name><operator pos:line="212" pos:column="62">)<pos:position pos:line="212" pos:column="63"/></operator><name><name pos:line="212" pos:column="63">file<pos:position pos:line="212" pos:column="67"/></name><operator pos:line="212" pos:column="67">-&gt;<pos:position pos:line="212" pos:column="72"/></operator><name pos:line="212" pos:column="69">u<pos:position pos:line="212" pos:column="70"/></name><operator pos:line="212" pos:column="70">.<pos:position pos:line="212" pos:column="71"/></operator><name pos:line="212" pos:column="71">rdev<pos:position pos:line="212" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="212" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="213" pos:column="26"/></block></then></if>
			<if pos:line="214" pos:column="25">if <condition pos:line="214" pos:column="28">(<expr><call><name pos:line="214" pos:column="29">do_mknod<pos:position pos:line="214" pos:column="37"/></name><argument_list pos:line="214" pos:column="37">(<argument><expr><name pos:line="214" pos:column="38">fname<pos:position pos:line="214" pos:column="43"/></name></expr></argument>,<argument><expr><name><name pos:line="214" pos:column="44">file<pos:position pos:line="214" pos:column="48"/></name><operator pos:line="214" pos:column="48">-&gt;<pos:position pos:line="214" pos:column="53"/></operator><name pos:line="214" pos:column="50">mode<pos:position pos:line="214" pos:column="54"/></name></name></expr></argument>,<argument><expr><name><name pos:line="214" pos:column="55">file<pos:position pos:line="214" pos:column="59"/></name><operator pos:line="214" pos:column="59">-&gt;<pos:position pos:line="214" pos:column="64"/></operator><name pos:line="214" pos:column="61">u<pos:position pos:line="214" pos:column="62"/></name><operator pos:line="214" pos:column="62">.<pos:position pos:line="214" pos:column="63"/></operator><name pos:line="214" pos:column="63">rdev<pos:position pos:line="214" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="214" pos:column="68"/></argument_list></call> <operator pos:line="214" pos:column="69">!=<pos:position pos:line="214" pos:column="71"/></operator> <literal type="number" pos:line="214" pos:column="72">0<pos:position pos:line="214" pos:column="73"/></literal></expr>)<pos:position pos:line="214" pos:column="74"/></condition><then pos:line="214" pos:column="74"> <block pos:line="214" pos:column="75">{
				<expr_stmt><expr><call><name pos:line="215" pos:column="33">rsyserr<pos:position pos:line="215" pos:column="40"/></name><argument_list pos:line="215" pos:column="40">(<argument><expr><name pos:line="215" pos:column="41">FERROR<pos:position pos:line="215" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="49">errno<pos:position pos:line="215" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="56">"mknod %s failed"<pos:position pos:line="215" pos:column="73"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="216" pos:column="41">full_fname<pos:position pos:line="216" pos:column="51"/></name><argument_list pos:line="216" pos:column="51">(<argument><expr><name pos:line="216" pos:column="52">fname<pos:position pos:line="216" pos:column="57"/></name></expr></argument>)<pos:position pos:line="216" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="216" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="217" pos:column="26"/></block></then> <else pos:line="217" pos:column="27">else <block pos:line="217" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="218" pos:column="33">set_perms<pos:position pos:line="218" pos:column="42"/></name><argument_list pos:line="218" pos:column="42">(<argument><expr><name pos:line="218" pos:column="43">fname<pos:position pos:line="218" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="218" pos:column="49">file<pos:position pos:line="218" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="218" pos:column="54">NULL<pos:position pos:line="218" pos:column="58"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="218" pos:column="59">0<pos:position pos:line="218" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="62"/></expr_stmt>
				<if pos:line="219" pos:column="33">if <condition pos:line="219" pos:column="36">(<expr><name pos:line="219" pos:column="37">itemizing<pos:position pos:line="219" pos:column="46"/></name></expr>)<pos:position pos:line="219" pos:column="47"/></condition><then pos:line="219" pos:column="47"> <block pos:line="219" pos:column="48">{
					<expr_stmt><expr><call><name pos:line="220" pos:column="41">itemize<pos:position pos:line="220" pos:column="48"/></name><argument_list pos:line="220" pos:column="48">(<argument><expr><name pos:line="220" pos:column="49">file<pos:position pos:line="220" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="55">ndx<pos:position pos:line="220" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="60">statret<pos:position pos:line="220" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="220" pos:column="69">&amp;<pos:position pos:line="220" pos:column="74"/></operator><name pos:line="220" pos:column="70">st<pos:position pos:line="220" pos:column="72"/></name></expr></argument>,
						<argument><expr><name pos:line="221" pos:column="49">ITEM_LOCAL_CHANGE<pos:position pos:line="221" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="221" pos:column="68">0<pos:position pos:line="221" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="221" pos:column="71">NULL<pos:position pos:line="221" pos:column="75"/></name></expr></argument>)<pos:position pos:line="221" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="77"/></expr_stmt>
				}<pos:position pos:line="222" pos:column="34"/></block></then></if>
				<if pos:line="223" pos:column="33">if <condition pos:line="223" pos:column="36">(<expr><name pos:line="223" pos:column="37">code<pos:position pos:line="223" pos:column="41"/></name> <operator pos:line="223" pos:column="42">&amp;&amp;<pos:position pos:line="223" pos:column="52"/></operator> <name pos:line="223" pos:column="45">verbose<pos:position pos:line="223" pos:column="52"/></name></expr>)<pos:position pos:line="223" pos:column="53"/></condition><then pos:line="223" pos:column="53"> <block pos:line="223" pos:column="54">{
					<expr_stmt><expr><call><name pos:line="224" pos:column="41">rprintf<pos:position pos:line="224" pos:column="48"/></name><argument_list pos:line="224" pos:column="48">(<argument><expr><name pos:line="224" pos:column="49">code<pos:position pos:line="224" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="224" pos:column="55">"%s\n"<pos:position pos:line="224" pos:column="61"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="225" pos:column="49">safe_fname<pos:position pos:line="225" pos:column="59"/></name><argument_list pos:line="225" pos:column="59">(<argument><expr><name pos:line="225" pos:column="60">fname<pos:position pos:line="225" pos:column="65"/></name></expr></argument>)<pos:position pos:line="225" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="225" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="68"/></expr_stmt>
				}<pos:position pos:line="226" pos:column="34"/></block></then></if>
			}<pos:position pos:line="227" pos:column="26"/></block></else></if>
		}<pos:position pos:line="228" pos:column="18"/></block></then> <else pos:line="228" pos:column="19">else <block pos:line="228" pos:column="24">{
			<if pos:line="229" pos:column="25">if <condition pos:line="229" pos:column="28">(<expr><name pos:line="229" pos:column="29">itemizing<pos:position pos:line="229" pos:column="38"/></name></expr>)<pos:position pos:line="229" pos:column="39"/></condition><then pos:line="229" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="230" pos:column="33">itemize<pos:position pos:line="230" pos:column="40"/></name><argument_list pos:line="230" pos:column="40">(<argument><expr><name pos:line="230" pos:column="41">file<pos:position pos:line="230" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="47">ndx<pos:position pos:line="230" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="52">statret<pos:position pos:line="230" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="230" pos:column="61">&amp;<pos:position pos:line="230" pos:column="66"/></operator><name pos:line="230" pos:column="62">st<pos:position pos:line="230" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="230" pos:column="66">0<pos:position pos:line="230" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="230" pos:column="69">0<pos:position pos:line="230" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="230" pos:column="72">NULL<pos:position pos:line="230" pos:column="76"/></name></expr></argument>)<pos:position pos:line="230" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="78"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="231" pos:column="25">set_perms<pos:position pos:line="231" pos:column="34"/></name><argument_list pos:line="231" pos:column="34">(<argument><expr><name pos:line="231" pos:column="35">fname<pos:position pos:line="231" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="42">file<pos:position pos:line="231" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="231" pos:column="48">&amp;<pos:position pos:line="231" pos:column="53"/></operator><name pos:line="231" pos:column="49">st<pos:position pos:line="231" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="53">maybe_PERMS_REPORT<pos:position pos:line="231" pos:column="71"/></name></expr></argument>)<pos:position pos:line="231" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="232" pos:column="18"/></block></else></if>
		<return pos:line="233" pos:column="17">return;<pos:position pos:line="233" pos:column="24"/></return>
	}<pos:position pos:line="234" pos:column="10"/></block></then></if>

	<if pos:line="236" pos:column="9">if <condition pos:line="236" pos:column="12">(<expr><name pos:line="236" pos:column="13">preserve_hard_links<pos:position pos:line="236" pos:column="32"/></name>
	    <operator pos:line="237" pos:column="13">&amp;&amp;<pos:position pos:line="237" pos:column="23"/></operator> <call><name pos:line="237" pos:column="16">hard_link_check<pos:position pos:line="237" pos:column="31"/></name><argument_list pos:line="237" pos:column="31">(<argument><expr><name pos:line="237" pos:column="32">file<pos:position pos:line="237" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="38">ndx<pos:position pos:line="237" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="43">fname<pos:position pos:line="237" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="50">statret<pos:position pos:line="237" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="237" pos:column="59">&amp;<pos:position pos:line="237" pos:column="64"/></operator><name pos:line="237" pos:column="60">st<pos:position pos:line="237" pos:column="62"/></name></expr></argument>,
			       <argument><expr><name pos:line="238" pos:column="32">itemizing<pos:position pos:line="238" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="43">code<pos:position pos:line="238" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="49">HL_CHECK_MASTER<pos:position pos:line="238" pos:column="64"/></name></expr></argument>)<pos:position pos:line="238" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="238" pos:column="66"/></condition><then pos:line="238" pos:column="66">
		<block type="pseudo"><return pos:line="239" pos:column="17">return;<pos:position pos:line="239" pos:column="24"/></return></block></then></if>

	<if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><operator pos:line="241" pos:column="13">!<pos:position pos:line="241" pos:column="14"/></operator><call><name pos:line="241" pos:column="14">S_ISREG<pos:position pos:line="241" pos:column="21"/></name><argument_list pos:line="241" pos:column="21">(<argument><expr><name><name pos:line="241" pos:column="22">file<pos:position pos:line="241" pos:column="26"/></name><operator pos:line="241" pos:column="26">-&gt;<pos:position pos:line="241" pos:column="31"/></operator><name pos:line="241" pos:column="28">mode<pos:position pos:line="241" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="241" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="241" pos:column="34"/></condition><then pos:line="241" pos:column="34"> <block pos:line="241" pos:column="35">{
		<if pos:line="242" pos:column="17">if <condition pos:line="242" pos:column="20">(<expr><name><name pos:line="242" pos:column="21">the_file_list<pos:position pos:line="242" pos:column="34"/></name><operator pos:line="242" pos:column="34">-&gt;<pos:position pos:line="242" pos:column="39"/></operator><name pos:line="242" pos:column="36">count<pos:position pos:line="242" pos:column="41"/></name></name> <operator pos:line="242" pos:column="42">==<pos:position pos:line="242" pos:column="44"/></operator> <literal type="number" pos:line="242" pos:column="45">1<pos:position pos:line="242" pos:column="46"/></literal></expr>)<pos:position pos:line="242" pos:column="47"/></condition><then pos:line="242" pos:column="47">
			<block type="pseudo"><expr_stmt><expr><name pos:line="243" pos:column="25">fname<pos:position pos:line="243" pos:column="30"/></name> <operator pos:line="243" pos:column="31">=<pos:position pos:line="243" pos:column="32"/></operator> <call><name pos:line="243" pos:column="33">f_name<pos:position pos:line="243" pos:column="39"/></name><argument_list pos:line="243" pos:column="39">(<argument><expr><name pos:line="243" pos:column="40">file<pos:position pos:line="243" pos:column="44"/></name></expr></argument>)<pos:position pos:line="243" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="46"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="244" pos:column="17">rprintf<pos:position pos:line="244" pos:column="24"/></name><argument_list pos:line="244" pos:column="24">(<argument><expr><name pos:line="244" pos:column="25">FINFO<pos:position pos:line="244" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="244" pos:column="32">"skipping non-regular file \"%s\"\n"<pos:position pos:line="244" pos:column="68"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="245" pos:column="25">safe_fname<pos:position pos:line="245" pos:column="35"/></name><argument_list pos:line="245" pos:column="35">(<argument><expr><name pos:line="245" pos:column="36">fname<pos:position pos:line="245" pos:column="41"/></name></expr></argument>)<pos:position pos:line="245" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="245" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="44"/></expr_stmt>
		<return pos:line="246" pos:column="17">return;<pos:position pos:line="246" pos:column="24"/></return>
	}<pos:position pos:line="247" pos:column="10"/></block></then></if>

	<if pos:line="249" pos:column="9">if <condition pos:line="249" pos:column="12">(<expr><name pos:line="249" pos:column="13">max_size<pos:position pos:line="249" pos:column="21"/></name> <operator pos:line="249" pos:column="22">&amp;&amp;<pos:position pos:line="249" pos:column="32"/></operator> <name><name pos:line="249" pos:column="25">file<pos:position pos:line="249" pos:column="29"/></name><operator pos:line="249" pos:column="29">-&gt;<pos:position pos:line="249" pos:column="34"/></operator><name pos:line="249" pos:column="31">length<pos:position pos:line="249" pos:column="37"/></name></name> <operator pos:line="249" pos:column="38">&gt;<pos:position pos:line="249" pos:column="42"/></operator> <name pos:line="249" pos:column="40">max_size<pos:position pos:line="249" pos:column="48"/></name></expr>)<pos:position pos:line="249" pos:column="49"/></condition><then pos:line="249" pos:column="49"> <block pos:line="249" pos:column="50">{
		<if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><name pos:line="250" pos:column="21">verbose<pos:position pos:line="250" pos:column="28"/></name> <operator pos:line="250" pos:column="29">&gt;<pos:position pos:line="250" pos:column="33"/></operator> <literal type="number" pos:line="250" pos:column="31">1<pos:position pos:line="250" pos:column="32"/></literal></expr>)<pos:position pos:line="250" pos:column="33"/></condition><then pos:line="250" pos:column="33"> <block pos:line="250" pos:column="34">{
			<if pos:line="251" pos:column="25">if <condition pos:line="251" pos:column="28">(<expr><name><name pos:line="251" pos:column="29">the_file_list<pos:position pos:line="251" pos:column="42"/></name><operator pos:line="251" pos:column="42">-&gt;<pos:position pos:line="251" pos:column="47"/></operator><name pos:line="251" pos:column="44">count<pos:position pos:line="251" pos:column="49"/></name></name> <operator pos:line="251" pos:column="50">==<pos:position pos:line="251" pos:column="52"/></operator> <literal type="number" pos:line="251" pos:column="53">1<pos:position pos:line="251" pos:column="54"/></literal></expr>)<pos:position pos:line="251" pos:column="55"/></condition><then pos:line="251" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><name pos:line="252" pos:column="33">fname<pos:position pos:line="252" pos:column="38"/></name> <operator pos:line="252" pos:column="39">=<pos:position pos:line="252" pos:column="40"/></operator> <call><name pos:line="252" pos:column="41">f_name<pos:position pos:line="252" pos:column="47"/></name><argument_list pos:line="252" pos:column="47">(<argument><expr><name pos:line="252" pos:column="48">file<pos:position pos:line="252" pos:column="52"/></name></expr></argument>)<pos:position pos:line="252" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="54"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="253" pos:column="25">rprintf<pos:position pos:line="253" pos:column="32"/></name><argument_list pos:line="253" pos:column="32">(<argument><expr><name pos:line="253" pos:column="33">FINFO<pos:position pos:line="253" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="253" pos:column="40">"%s is over max-size\n"<pos:position pos:line="253" pos:column="63"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="254" pos:column="33">safe_fname<pos:position pos:line="254" pos:column="43"/></name><argument_list pos:line="254" pos:column="43">(<argument><expr><name pos:line="254" pos:column="44">fname<pos:position pos:line="254" pos:column="49"/></name></expr></argument>)<pos:position pos:line="254" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="254" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="255" pos:column="18"/></block></then></if>
		<return pos:line="256" pos:column="17">return;<pos:position pos:line="256" pos:column="24"/></return>
	}<pos:position pos:line="257" pos:column="10"/></block></then></if>

	<if pos:line="259" pos:column="9">if <condition pos:line="259" pos:column="12">(<expr><name pos:line="259" pos:column="13">opt_ignore_existing<pos:position pos:line="259" pos:column="32"/></name> <operator pos:line="259" pos:column="33">&amp;&amp;<pos:position pos:line="259" pos:column="43"/></operator> <name pos:line="259" pos:column="36">statret<pos:position pos:line="259" pos:column="43"/></name> <operator pos:line="259" pos:column="44">==<pos:position pos:line="259" pos:column="46"/></operator> <literal type="number" pos:line="259" pos:column="47">0<pos:position pos:line="259" pos:column="48"/></literal></expr>)<pos:position pos:line="259" pos:column="49"/></condition><then pos:line="259" pos:column="49"> <block pos:line="259" pos:column="50">{
		<if pos:line="260" pos:column="17">if <condition pos:line="260" pos:column="20">(<expr><name pos:line="260" pos:column="21">verbose<pos:position pos:line="260" pos:column="28"/></name> <operator pos:line="260" pos:column="29">&gt;<pos:position pos:line="260" pos:column="33"/></operator> <literal type="number" pos:line="260" pos:column="31">1<pos:position pos:line="260" pos:column="32"/></literal></expr>)<pos:position pos:line="260" pos:column="33"/></condition><then pos:line="260" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="261" pos:column="25">rprintf<pos:position pos:line="261" pos:column="32"/></name><argument_list pos:line="261" pos:column="32">(<argument><expr><name pos:line="261" pos:column="33">FINFO<pos:position pos:line="261" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="40">"%s exists\n"<pos:position pos:line="261" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="261" pos:column="55">safe_fname<pos:position pos:line="261" pos:column="65"/></name><argument_list pos:line="261" pos:column="65">(<argument><expr><name pos:line="261" pos:column="66">fname<pos:position pos:line="261" pos:column="71"/></name></expr></argument>)<pos:position pos:line="261" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="261" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="74"/></expr_stmt></block></then></if>
		<return pos:line="262" pos:column="17">return;<pos:position pos:line="262" pos:column="24"/></return>
	}<pos:position pos:line="263" pos:column="10"/></block></then></if>

	<if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><name pos:line="265" pos:column="13">update_only<pos:position pos:line="265" pos:column="24"/></name> <operator pos:line="265" pos:column="25">&amp;&amp;<pos:position pos:line="265" pos:column="35"/></operator> <name pos:line="265" pos:column="28">statret<pos:position pos:line="265" pos:column="35"/></name> <operator pos:line="265" pos:column="36">==<pos:position pos:line="265" pos:column="38"/></operator> <literal type="number" pos:line="265" pos:column="39">0<pos:position pos:line="265" pos:column="40"/></literal>
	    <operator pos:line="266" pos:column="13">&amp;&amp;<pos:position pos:line="266" pos:column="23"/></operator> <call><name pos:line="266" pos:column="16">cmp_modtime<pos:position pos:line="266" pos:column="27"/></name><argument_list pos:line="266" pos:column="27">(<argument><expr><name><name pos:line="266" pos:column="28">st<pos:position pos:line="266" pos:column="30"/></name><operator pos:line="266" pos:column="30">.<pos:position pos:line="266" pos:column="31"/></operator><name pos:line="266" pos:column="31">st_mtime<pos:position pos:line="266" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="266" pos:column="41">file<pos:position pos:line="266" pos:column="45"/></name><operator pos:line="266" pos:column="45">-&gt;<pos:position pos:line="266" pos:column="50"/></operator><name pos:line="266" pos:column="47">modtime<pos:position pos:line="266" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="266" pos:column="55"/></argument_list></call> <operator pos:line="266" pos:column="56">&gt;<pos:position pos:line="266" pos:column="60"/></operator> <literal type="number" pos:line="266" pos:column="58">0<pos:position pos:line="266" pos:column="59"/></literal></expr>)<pos:position pos:line="266" pos:column="60"/></condition><then pos:line="266" pos:column="60"> <block pos:line="266" pos:column="61">{
		<if pos:line="267" pos:column="17">if <condition pos:line="267" pos:column="20">(<expr><name pos:line="267" pos:column="21">verbose<pos:position pos:line="267" pos:column="28"/></name> <operator pos:line="267" pos:column="29">&gt;<pos:position pos:line="267" pos:column="33"/></operator> <literal type="number" pos:line="267" pos:column="31">1<pos:position pos:line="267" pos:column="32"/></literal></expr>)<pos:position pos:line="267" pos:column="33"/></condition><then pos:line="267" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="268" pos:column="25">rprintf<pos:position pos:line="268" pos:column="32"/></name><argument_list pos:line="268" pos:column="32">(<argument><expr><name pos:line="268" pos:column="33">FINFO<pos:position pos:line="268" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="40">"%s is newer\n"<pos:position pos:line="268" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="268" pos:column="57">safe_fname<pos:position pos:line="268" pos:column="67"/></name><argument_list pos:line="268" pos:column="67">(<argument><expr><name pos:line="268" pos:column="68">fname<pos:position pos:line="268" pos:column="73"/></name></expr></argument>)<pos:position pos:line="268" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="268" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="76"/></expr_stmt></block></then></if>
		<return pos:line="269" pos:column="17">return;<pos:position pos:line="269" pos:column="24"/></return>
	}<pos:position pos:line="270" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="272" pos:column="9">fnamecmp<pos:position pos:line="272" pos:column="17"/></name> <operator pos:line="272" pos:column="18">=<pos:position pos:line="272" pos:column="19"/></operator> <name pos:line="272" pos:column="20">fname<pos:position pos:line="272" pos:column="25"/></name></expr>;<pos:position pos:line="272" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="273" pos:column="9">fnamecmp_type<pos:position pos:line="273" pos:column="22"/></name> <operator pos:line="273" pos:column="23">=<pos:position pos:line="273" pos:column="24"/></operator> <name pos:line="273" pos:column="25">FNAMECMP_FNAME<pos:position pos:line="273" pos:column="39"/></name></expr>;<pos:position pos:line="273" pos:column="40"/></expr_stmt>

	<if pos:line="275" pos:column="9">if <condition pos:line="275" pos:column="12">(<expr><name pos:line="275" pos:column="13">statret<pos:position pos:line="275" pos:column="20"/></name> <operator pos:line="275" pos:column="21">==<pos:position pos:line="275" pos:column="23"/></operator> <literal type="number" pos:line="275" pos:column="24">0<pos:position pos:line="275" pos:column="25"/></literal> <operator pos:line="275" pos:column="26">&amp;&amp;<pos:position pos:line="275" pos:column="36"/></operator> <operator pos:line="275" pos:column="29">!<pos:position pos:line="275" pos:column="30"/></operator><call><name pos:line="275" pos:column="30">S_ISREG<pos:position pos:line="275" pos:column="37"/></name><argument_list pos:line="275" pos:column="37">(<argument><expr><name><name pos:line="275" pos:column="38">st<pos:position pos:line="275" pos:column="40"/></name><operator pos:line="275" pos:column="40">.<pos:position pos:line="275" pos:column="41"/></operator><name pos:line="275" pos:column="41">st_mode<pos:position pos:line="275" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="275" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="275" pos:column="50"/></condition><then pos:line="275" pos:column="50"> <block pos:line="275" pos:column="51">{
		<if pos:line="276" pos:column="17">if <condition pos:line="276" pos:column="20">(<expr><call><name pos:line="276" pos:column="21">delete_item<pos:position pos:line="276" pos:column="32"/></name><argument_list pos:line="276" pos:column="32">(<argument><expr><name pos:line="276" pos:column="33">fname<pos:position pos:line="276" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="276" pos:column="40">st<pos:position pos:line="276" pos:column="42"/></name><operator pos:line="276" pos:column="42">.<pos:position pos:line="276" pos:column="43"/></operator><name pos:line="276" pos:column="43">st_mode<pos:position pos:line="276" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="276" pos:column="52">DEL_TERSE<pos:position pos:line="276" pos:column="61"/></name></expr></argument>)<pos:position pos:line="276" pos:column="62"/></argument_list></call> <operator pos:line="276" pos:column="63">!=<pos:position pos:line="276" pos:column="65"/></operator> <literal type="number" pos:line="276" pos:column="66">0<pos:position pos:line="276" pos:column="67"/></literal></expr>)<pos:position pos:line="276" pos:column="68"/></condition><then pos:line="276" pos:column="68">
			<block type="pseudo"><return pos:line="277" pos:column="25">return;<pos:position pos:line="277" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="278" pos:column="17">statret<pos:position pos:line="278" pos:column="24"/></name> <operator pos:line="278" pos:column="25">=<pos:position pos:line="278" pos:column="26"/></operator> <operator pos:line="278" pos:column="27">-<pos:position pos:line="278" pos:column="28"/></operator><literal type="number" pos:line="278" pos:column="28">1<pos:position pos:line="278" pos:column="29"/></literal></expr>;<pos:position pos:line="278" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="279" pos:column="17">stat_errno<pos:position pos:line="279" pos:column="27"/></name> <operator pos:line="279" pos:column="28">=<pos:position pos:line="279" pos:column="29"/></operator> <name pos:line="279" pos:column="30">ENOENT<pos:position pos:line="279" pos:column="36"/></name></expr>;<pos:position pos:line="279" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="280" pos:column="10"/></block></then></if>

	<if pos:line="282" pos:column="9">if <condition pos:line="282" pos:column="12">(<expr><name pos:line="282" pos:column="13">statret<pos:position pos:line="282" pos:column="20"/></name> <operator pos:line="282" pos:column="21">!=<pos:position pos:line="282" pos:column="23"/></operator> <literal type="number" pos:line="282" pos:column="24">0<pos:position pos:line="282" pos:column="25"/></literal> <operator pos:line="282" pos:column="26">&amp;&amp;<pos:position pos:line="282" pos:column="36"/></operator> <name><name pos:line="282" pos:column="29">basis_dir<pos:position pos:line="282" pos:column="38"/></name><index pos:line="282" pos:column="38">[<expr><literal type="number" pos:line="282" pos:column="39">0<pos:position pos:line="282" pos:column="40"/></literal></expr>]<pos:position pos:line="282" pos:column="41"/></index></name> <operator pos:line="282" pos:column="42">!=<pos:position pos:line="282" pos:column="44"/></operator> <name pos:line="282" pos:column="45">NULL<pos:position pos:line="282" pos:column="49"/></name></expr>)<pos:position pos:line="282" pos:column="50"/></condition><then pos:line="282" pos:column="50"> <block pos:line="282" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="283" pos:column="17">int<pos:position pos:line="283" pos:column="20"/></name></type> <name pos:line="283" pos:column="21">best_match<pos:position pos:line="283" pos:column="31"/></name> <init pos:line="283" pos:column="32">= <expr><operator pos:line="283" pos:column="34">-<pos:position pos:line="283" pos:column="35"/></operator><literal type="number" pos:line="283" pos:column="35">1<pos:position pos:line="283" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="283" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="284" pos:column="17">int<pos:position pos:line="284" pos:column="20"/></name></type> <name pos:line="284" pos:column="21">match_level<pos:position pos:line="284" pos:column="32"/></name> <init pos:line="284" pos:column="33">= <expr><literal type="number" pos:line="284" pos:column="35">0<pos:position pos:line="284" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="284" pos:column="37"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="285" pos:column="17">int<pos:position pos:line="285" pos:column="20"/></name></type> <name pos:line="285" pos:column="21">i<pos:position pos:line="285" pos:column="22"/></name> <init pos:line="285" pos:column="23">= <expr><literal type="number" pos:line="285" pos:column="25">0<pos:position pos:line="285" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="285" pos:column="27"/></decl_stmt>
		<do pos:line="286" pos:column="17">do <block pos:line="286" pos:column="20">{
			<expr_stmt><expr><call><name pos:line="287" pos:column="25">pathjoin<pos:position pos:line="287" pos:column="33"/></name><argument_list pos:line="287" pos:column="33">(<argument><expr><name pos:line="287" pos:column="34">fnamecmpbuf<pos:position pos:line="287" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="287" pos:column="47">sizeof <name pos:line="287" pos:column="54">fnamecmpbuf<pos:position pos:line="287" pos:column="65"/></name></sizeof></expr></argument>,
				 <argument><expr><name><name pos:line="288" pos:column="34">basis_dir<pos:position pos:line="288" pos:column="43"/></name><index pos:line="288" pos:column="43">[<expr><name pos:line="288" pos:column="44">i<pos:position pos:line="288" pos:column="45"/></name></expr>]<pos:position pos:line="288" pos:column="46"/></index></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="48">fname<pos:position pos:line="288" pos:column="53"/></name></expr></argument>)<pos:position pos:line="288" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="55"/></expr_stmt>
			<if pos:line="289" pos:column="25">if <condition pos:line="289" pos:column="28">(<expr><call><name pos:line="289" pos:column="29">link_stat<pos:position pos:line="289" pos:column="38"/></name><argument_list pos:line="289" pos:column="38">(<argument><expr><name pos:line="289" pos:column="39">fnamecmpbuf<pos:position pos:line="289" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="289" pos:column="52">&amp;<pos:position pos:line="289" pos:column="57"/></operator><name pos:line="289" pos:column="53">st<pos:position pos:line="289" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="289" pos:column="57">0<pos:position pos:line="289" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="59"/></argument_list></call> <operator pos:line="289" pos:column="60">&lt;<pos:position pos:line="289" pos:column="64"/></operator> <literal type="number" pos:line="289" pos:column="62">0<pos:position pos:line="289" pos:column="63"/></literal>
			    <operator pos:line="290" pos:column="29">||<pos:position pos:line="290" pos:column="31"/></operator> <operator pos:line="290" pos:column="32">!<pos:position pos:line="290" pos:column="33"/></operator><call><name pos:line="290" pos:column="33">S_ISREG<pos:position pos:line="290" pos:column="40"/></name><argument_list pos:line="290" pos:column="40">(<argument><expr><name><name pos:line="290" pos:column="41">st<pos:position pos:line="290" pos:column="43"/></name><operator pos:line="290" pos:column="43">.<pos:position pos:line="290" pos:column="44"/></operator><name pos:line="290" pos:column="44">st_mode<pos:position pos:line="290" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="290" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="290" pos:column="53"/></condition><then pos:line="290" pos:column="53">
				<block type="pseudo"><continue pos:line="291" pos:column="33">continue;<pos:position pos:line="291" pos:column="42"/></continue></block></then></if>
			<switch pos:line="292" pos:column="25">switch <condition pos:line="292" pos:column="32">(<expr><name pos:line="292" pos:column="33">match_level<pos:position pos:line="292" pos:column="44"/></name></expr>)<pos:position pos:line="292" pos:column="45"/></condition> <block pos:line="292" pos:column="46">{
			<case pos:line="293" pos:column="25">case <expr><literal type="number" pos:line="293" pos:column="30">0<pos:position pos:line="293" pos:column="31"/></literal></expr>:<pos:position pos:line="293" pos:column="32"/></case>
				<expr_stmt><expr><name pos:line="294" pos:column="33">best_match<pos:position pos:line="294" pos:column="43"/></name> <operator pos:line="294" pos:column="44">=<pos:position pos:line="294" pos:column="45"/></operator> <name pos:line="294" pos:column="46">i<pos:position pos:line="294" pos:column="47"/></name></expr>;<pos:position pos:line="294" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="295" pos:column="33">match_level<pos:position pos:line="295" pos:column="44"/></name> <operator pos:line="295" pos:column="45">=<pos:position pos:line="295" pos:column="46"/></operator> <literal type="number" pos:line="295" pos:column="47">1<pos:position pos:line="295" pos:column="48"/></literal></expr>;<pos:position pos:line="295" pos:column="49"/></expr_stmt>
				<comment type="block" pos:line="296" pos:column="33">/* FALL THROUGH */</comment>
			<case pos:line="297" pos:column="25">case <expr><literal type="number" pos:line="297" pos:column="30">1<pos:position pos:line="297" pos:column="31"/></literal></expr>:<pos:position pos:line="297" pos:column="32"/></case>
				<if pos:line="298" pos:column="33">if <condition pos:line="298" pos:column="36">(<expr><operator pos:line="298" pos:column="37">!<pos:position pos:line="298" pos:column="38"/></operator><call><name pos:line="298" pos:column="38">unchanged_file<pos:position pos:line="298" pos:column="52"/></name><argument_list pos:line="298" pos:column="52">(<argument><expr><name pos:line="298" pos:column="53">fnamecmpbuf<pos:position pos:line="298" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="66">file<pos:position pos:line="298" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="298" pos:column="72">&amp;<pos:position pos:line="298" pos:column="77"/></operator><name pos:line="298" pos:column="73">st<pos:position pos:line="298" pos:column="75"/></name></expr></argument>)<pos:position pos:line="298" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="298" pos:column="77"/></condition><then pos:line="298" pos:column="77">
					<block type="pseudo"><continue pos:line="299" pos:column="41">continue;<pos:position pos:line="299" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><name pos:line="300" pos:column="33">best_match<pos:position pos:line="300" pos:column="43"/></name> <operator pos:line="300" pos:column="44">=<pos:position pos:line="300" pos:column="45"/></operator> <name pos:line="300" pos:column="46">i<pos:position pos:line="300" pos:column="47"/></name></expr>;<pos:position pos:line="300" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="301" pos:column="33">match_level<pos:position pos:line="301" pos:column="44"/></name> <operator pos:line="301" pos:column="45">=<pos:position pos:line="301" pos:column="46"/></operator> <literal type="number" pos:line="301" pos:column="47">2<pos:position pos:line="301" pos:column="48"/></literal></expr>;<pos:position pos:line="301" pos:column="49"/></expr_stmt>
				<if pos:line="302" pos:column="33">if <condition pos:line="302" pos:column="36">(<expr><name pos:line="302" pos:column="37">copy_dest<pos:position pos:line="302" pos:column="46"/></name></expr>)<pos:position pos:line="302" pos:column="47"/></condition><then pos:line="302" pos:column="47">
					<block type="pseudo"><break pos:line="303" pos:column="41">break;<pos:position pos:line="303" pos:column="47"/></break></block></then></if>
				<comment type="block" pos:line="304" pos:column="33">/* FALL THROUGH */</comment>
			<case pos:line="305" pos:column="25">case <expr><literal type="number" pos:line="305" pos:column="30">2<pos:position pos:line="305" pos:column="31"/></literal></expr>:<pos:position pos:line="305" pos:column="32"/></case>
				<if pos:line="306" pos:column="33">if <condition pos:line="306" pos:column="36">(<expr><operator pos:line="306" pos:column="37">!<pos:position pos:line="306" pos:column="38"/></operator><call><name pos:line="306" pos:column="38">unchanged_attrs<pos:position pos:line="306" pos:column="53"/></name><argument_list pos:line="306" pos:column="53">(<argument><expr><name pos:line="306" pos:column="54">file<pos:position pos:line="306" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="306" pos:column="60">&amp;<pos:position pos:line="306" pos:column="65"/></operator><name pos:line="306" pos:column="61">st<pos:position pos:line="306" pos:column="63"/></name></expr></argument>)<pos:position pos:line="306" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="306" pos:column="65"/></condition><then pos:line="306" pos:column="65">
					<block type="pseudo"><continue pos:line="307" pos:column="41">continue;<pos:position pos:line="307" pos:column="50"/></continue></block></then></if>
				<expr_stmt><expr><name pos:line="308" pos:column="33">best_match<pos:position pos:line="308" pos:column="43"/></name> <operator pos:line="308" pos:column="44">=<pos:position pos:line="308" pos:column="45"/></operator> <name pos:line="308" pos:column="46">i<pos:position pos:line="308" pos:column="47"/></name></expr>;<pos:position pos:line="308" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="309" pos:column="33">match_level<pos:position pos:line="309" pos:column="44"/></name> <operator pos:line="309" pos:column="45">=<pos:position pos:line="309" pos:column="46"/></operator> <literal type="number" pos:line="309" pos:column="47">3<pos:position pos:line="309" pos:column="48"/></literal></expr>;<pos:position pos:line="309" pos:column="49"/></expr_stmt>
				<break pos:line="310" pos:column="33">break;<pos:position pos:line="310" pos:column="39"/></break>
			}<pos:position pos:line="311" pos:column="26"/></block></switch>
			<break pos:line="312" pos:column="25">break;<pos:position pos:line="312" pos:column="31"/></break>
		}<pos:position pos:line="313" pos:column="18"/></block> while <condition pos:line="313" pos:column="25">(<expr><name><name pos:line="313" pos:column="26">basis_dir<pos:position pos:line="313" pos:column="35"/></name><index pos:line="313" pos:column="35">[<expr><operator pos:line="313" pos:column="36">++<pos:position pos:line="313" pos:column="38"/></operator><name pos:line="313" pos:column="38">i<pos:position pos:line="313" pos:column="39"/></name></expr>]<pos:position pos:line="313" pos:column="40"/></index></name> <operator pos:line="313" pos:column="41">!=<pos:position pos:line="313" pos:column="43"/></operator> <name pos:line="313" pos:column="44">NULL<pos:position pos:line="313" pos:column="48"/></name></expr>)<pos:position pos:line="313" pos:column="49"/></condition>;<pos:position pos:line="313" pos:column="50"/></do>
		<if pos:line="314" pos:column="17">if <condition pos:line="314" pos:column="20">(<expr><name pos:line="314" pos:column="21">match_level<pos:position pos:line="314" pos:column="32"/></name></expr>)<pos:position pos:line="314" pos:column="33"/></condition><then pos:line="314" pos:column="33"> <block pos:line="314" pos:column="34">{
			<expr_stmt><expr><name pos:line="315" pos:column="25">statret<pos:position pos:line="315" pos:column="32"/></name> <operator pos:line="315" pos:column="33">=<pos:position pos:line="315" pos:column="34"/></operator> <literal type="number" pos:line="315" pos:column="35">0<pos:position pos:line="315" pos:column="36"/></literal></expr>;<pos:position pos:line="315" pos:column="37"/></expr_stmt>
			<if pos:line="316" pos:column="25">if <condition pos:line="316" pos:column="28">(<expr><name pos:line="316" pos:column="29">i<pos:position pos:line="316" pos:column="30"/></name> <operator pos:line="316" pos:column="31">!=<pos:position pos:line="316" pos:column="33"/></operator> <name pos:line="316" pos:column="34">best_match<pos:position pos:line="316" pos:column="44"/></name></expr>)<pos:position pos:line="316" pos:column="45"/></condition><then pos:line="316" pos:column="45"> <block pos:line="316" pos:column="46">{
				<expr_stmt><expr><name pos:line="317" pos:column="33">i<pos:position pos:line="317" pos:column="34"/></name> <operator pos:line="317" pos:column="35">=<pos:position pos:line="317" pos:column="36"/></operator> <name pos:line="317" pos:column="37">best_match<pos:position pos:line="317" pos:column="47"/></name></expr>;<pos:position pos:line="317" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="318" pos:column="33">pathjoin<pos:position pos:line="318" pos:column="41"/></name><argument_list pos:line="318" pos:column="41">(<argument><expr><name pos:line="318" pos:column="42">fnamecmpbuf<pos:position pos:line="318" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="318" pos:column="55">sizeof <name pos:line="318" pos:column="62">fnamecmpbuf<pos:position pos:line="318" pos:column="73"/></name></sizeof></expr></argument>,
					 <argument><expr><name><name pos:line="319" pos:column="42">basis_dir<pos:position pos:line="319" pos:column="51"/></name><index pos:line="319" pos:column="51">[<expr><name pos:line="319" pos:column="52">i<pos:position pos:line="319" pos:column="53"/></name></expr>]<pos:position pos:line="319" pos:column="54"/></index></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="56">fname<pos:position pos:line="319" pos:column="61"/></name></expr></argument>)<pos:position pos:line="319" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="63"/></expr_stmt>
				<if pos:line="320" pos:column="33">if <condition pos:line="320" pos:column="36">(<expr><call><name pos:line="320" pos:column="37">link_stat<pos:position pos:line="320" pos:column="46"/></name><argument_list pos:line="320" pos:column="46">(<argument><expr><name pos:line="320" pos:column="47">fnamecmpbuf<pos:position pos:line="320" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="320" pos:column="60">&amp;<pos:position pos:line="320" pos:column="65"/></operator><name pos:line="320" pos:column="61">st<pos:position pos:line="320" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="320" pos:column="65">0<pos:position pos:line="320" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="320" pos:column="67"/></argument_list></call> <operator pos:line="320" pos:column="68">&lt;<pos:position pos:line="320" pos:column="72"/></operator> <literal type="number" pos:line="320" pos:column="70">0<pos:position pos:line="320" pos:column="71"/></literal></expr>)<pos:position pos:line="320" pos:column="72"/></condition><then pos:line="320" pos:column="72"> <block pos:line="320" pos:column="73">{
					<expr_stmt><expr><name pos:line="321" pos:column="41">match_level<pos:position pos:line="321" pos:column="52"/></name> <operator pos:line="321" pos:column="53">=<pos:position pos:line="321" pos:column="54"/></operator> <literal type="number" pos:line="321" pos:column="55">0<pos:position pos:line="321" pos:column="56"/></literal></expr>;<pos:position pos:line="321" pos:column="57"/></expr_stmt>
					<expr_stmt><expr><name pos:line="322" pos:column="41">statret<pos:position pos:line="322" pos:column="48"/></name> <operator pos:line="322" pos:column="49">=<pos:position pos:line="322" pos:column="50"/></operator> <operator pos:line="322" pos:column="51">-<pos:position pos:line="322" pos:column="52"/></operator><literal type="number" pos:line="322" pos:column="52">1<pos:position pos:line="322" pos:column="53"/></literal></expr>;<pos:position pos:line="322" pos:column="54"/></expr_stmt>
					<expr_stmt><expr><name pos:line="323" pos:column="41">stat_errno<pos:position pos:line="323" pos:column="51"/></name> <operator pos:line="323" pos:column="52">=<pos:position pos:line="323" pos:column="53"/></operator> <name pos:line="323" pos:column="54">errno<pos:position pos:line="323" pos:column="59"/></name></expr>;<pos:position pos:line="323" pos:column="60"/></expr_stmt>
				}<pos:position pos:line="324" pos:column="34"/></block></then></if>
			}<pos:position pos:line="325" pos:column="26"/></block></then></if>
<cpp:ifdef pos:line="326" pos:column="1">#<cpp:directive pos:line="326" pos:column="2">ifdef<pos:position pos:line="326" pos:column="7"/></cpp:directive> <name pos:line="326" pos:column="8">HAVE_LINK<pos:position pos:line="326" pos:column="17"/></name></cpp:ifdef>
			<if pos:line="327" pos:column="25">if <condition pos:line="327" pos:column="28">(<expr><name pos:line="327" pos:column="29">link_dest<pos:position pos:line="327" pos:column="38"/></name> <operator pos:line="327" pos:column="39">&amp;&amp;<pos:position pos:line="327" pos:column="49"/></operator> <name pos:line="327" pos:column="42">match_level<pos:position pos:line="327" pos:column="53"/></name> <operator pos:line="327" pos:column="54">==<pos:position pos:line="327" pos:column="56"/></operator> <literal type="number" pos:line="327" pos:column="57">3<pos:position pos:line="327" pos:column="58"/></literal></expr>)<pos:position pos:line="327" pos:column="59"/></condition><then pos:line="327" pos:column="59"> <block pos:line="327" pos:column="60">{
				<if pos:line="328" pos:column="33">if <condition pos:line="328" pos:column="36">(<expr><call><name pos:line="328" pos:column="37">hard_link_one<pos:position pos:line="328" pos:column="50"/></name><argument_list pos:line="328" pos:column="50">(<argument><expr><name pos:line="328" pos:column="51">file<pos:position pos:line="328" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="57">ndx<pos:position pos:line="328" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="62">fname<pos:position pos:line="328" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="328" pos:column="69">-<pos:position pos:line="328" pos:column="70"/></operator><literal type="number" pos:line="328" pos:column="70">1<pos:position pos:line="328" pos:column="71"/></literal></expr></argument>, <argument><expr><operator pos:line="328" pos:column="73">&amp;<pos:position pos:line="328" pos:column="78"/></operator><name pos:line="328" pos:column="74">st<pos:position pos:line="328" pos:column="76"/></name></expr></argument>,
						  <argument><expr><name pos:line="329" pos:column="51">fnamecmpbuf<pos:position pos:line="329" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="329" pos:column="64">1<pos:position pos:line="329" pos:column="65"/></literal></expr></argument>,
						  <argument><expr><name pos:line="330" pos:column="51">itemizing<pos:position pos:line="330" pos:column="60"/></name> <operator pos:line="330" pos:column="61">&amp;&amp;<pos:position pos:line="330" pos:column="71"/></operator> <name pos:line="330" pos:column="64">verbose<pos:position pos:line="330" pos:column="71"/></name> <operator pos:line="330" pos:column="72">&gt;<pos:position pos:line="330" pos:column="76"/></operator> <literal type="number" pos:line="330" pos:column="74">1<pos:position pos:line="330" pos:column="75"/></literal></expr></argument>,
						  <argument><expr><name pos:line="331" pos:column="51">code<pos:position pos:line="331" pos:column="55"/></name></expr></argument>)<pos:position pos:line="331" pos:column="56"/></argument_list></call> <operator pos:line="331" pos:column="57">==<pos:position pos:line="331" pos:column="59"/></operator> <literal type="number" pos:line="331" pos:column="60">0<pos:position pos:line="331" pos:column="61"/></literal></expr>)<pos:position pos:line="331" pos:column="62"/></condition><then pos:line="331" pos:column="62"> <block pos:line="331" pos:column="63">{
					<if pos:line="332" pos:column="41">if <condition pos:line="332" pos:column="44">(<expr><name pos:line="332" pos:column="45">preserve_hard_links<pos:position pos:line="332" pos:column="64"/></name>
					    <operator pos:line="333" pos:column="45">&amp;&amp;<pos:position pos:line="333" pos:column="55"/></operator> <name><name pos:line="333" pos:column="48">file<pos:position pos:line="333" pos:column="52"/></name><operator pos:line="333" pos:column="52">-&gt;<pos:position pos:line="333" pos:column="57"/></operator><name pos:line="333" pos:column="54">link_u<pos:position pos:line="333" pos:column="60"/></name><operator pos:line="333" pos:column="60">.<pos:position pos:line="333" pos:column="61"/></operator><name pos:line="333" pos:column="61">links<pos:position pos:line="333" pos:column="66"/></name></name></expr>)<pos:position pos:line="333" pos:column="67"/></condition><then pos:line="333" pos:column="67"> <block pos:line="333" pos:column="68">{
						<expr_stmt><expr><call><name pos:line="334" pos:column="49">hard_link_cluster<pos:position pos:line="334" pos:column="66"/></name><argument_list pos:line="334" pos:column="66">(<argument><expr><name pos:line="334" pos:column="67">file<pos:position pos:line="334" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="334" pos:column="73">ndx<pos:position pos:line="334" pos:column="76"/></name></expr></argument>,
								  <argument><expr><name pos:line="335" pos:column="67">itemizing<pos:position pos:line="335" pos:column="76"/></name></expr></argument>,
								  <argument><expr><name pos:line="336" pos:column="67">code<pos:position pos:line="336" pos:column="71"/></name></expr></argument>)<pos:position pos:line="336" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="73"/></expr_stmt>
					}<pos:position pos:line="337" pos:column="42"/></block></then></if>
					<return pos:line="338" pos:column="41">return;<pos:position pos:line="338" pos:column="48"/></return>
				}<pos:position pos:line="339" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name pos:line="340" pos:column="33">match_level<pos:position pos:line="340" pos:column="44"/></name> <operator pos:line="340" pos:column="45">=<pos:position pos:line="340" pos:column="46"/></operator> <literal type="number" pos:line="340" pos:column="47">2<pos:position pos:line="340" pos:column="48"/></literal></expr>;<pos:position pos:line="340" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="341" pos:column="26"/></block></then></if>
<cpp:endif pos:line="342" pos:column="1">#<cpp:directive pos:line="342" pos:column="2">endif<pos:position pos:line="342" pos:column="7"/></cpp:directive></cpp:endif>
			<if pos:line="343" pos:column="25">if <condition pos:line="343" pos:column="28">(<expr><name pos:line="343" pos:column="29">match_level<pos:position pos:line="343" pos:column="40"/></name> <operator pos:line="343" pos:column="41">==<pos:position pos:line="343" pos:column="43"/></operator> <literal type="number" pos:line="343" pos:column="44">2<pos:position pos:line="343" pos:column="45"/></literal></expr>)<pos:position pos:line="343" pos:column="46"/></condition><then pos:line="343" pos:column="46"> <block pos:line="343" pos:column="47">{
				<comment type="block" pos:line="344" pos:column="33">/* Copy the file locally. */</comment>
				<if pos:line="345" pos:column="33">if <condition pos:line="345" pos:column="36">(<expr><call><name pos:line="345" pos:column="37">copy_file<pos:position pos:line="345" pos:column="46"/></name><argument_list pos:line="345" pos:column="46">(<argument><expr><name pos:line="345" pos:column="47">fnamecmpbuf<pos:position pos:line="345" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="60">fname<pos:position pos:line="345" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="345" pos:column="67">file<pos:position pos:line="345" pos:column="71"/></name><operator pos:line="345" pos:column="71">-&gt;<pos:position pos:line="345" pos:column="76"/></operator><name pos:line="345" pos:column="73">mode<pos:position pos:line="345" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="345" pos:column="78"/></argument_list></call> <operator pos:line="345" pos:column="79">&lt;<pos:position pos:line="345" pos:column="83"/></operator> <literal type="number" pos:line="345" pos:column="81">0<pos:position pos:line="345" pos:column="82"/></literal></expr>)<pos:position pos:line="345" pos:column="83"/></condition><then pos:line="345" pos:column="83"> <block pos:line="345" pos:column="84">{
					<if pos:line="346" pos:column="41">if <condition pos:line="346" pos:column="44">(<expr><name pos:line="346" pos:column="45">verbose<pos:position pos:line="346" pos:column="52"/></name></expr>)<pos:position pos:line="346" pos:column="53"/></condition><then pos:line="346" pos:column="53"> <block pos:line="346" pos:column="54">{
						<expr_stmt><expr><call><name pos:line="347" pos:column="49">rsyserr<pos:position pos:line="347" pos:column="56"/></name><argument_list pos:line="347" pos:column="56">(<argument><expr><name pos:line="347" pos:column="57">FINFO<pos:position pos:line="347" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="64">errno<pos:position pos:line="347" pos:column="69"/></name></expr></argument>,
							<argument><expr><literal type="string" pos:line="348" pos:column="57">"copy_file %s =&gt; %s"<pos:position pos:line="348" pos:column="80"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="349" pos:column="57">full_fname<pos:position pos:line="349" pos:column="67"/></name><argument_list pos:line="349" pos:column="67">(<argument><expr><name pos:line="349" pos:column="68">fnamecmpbuf<pos:position pos:line="349" pos:column="79"/></name></expr></argument>)<pos:position pos:line="349" pos:column="80"/></argument_list></call></expr></argument>,
							<argument><expr><call><name pos:line="350" pos:column="57">safe_fname<pos:position pos:line="350" pos:column="67"/></name><argument_list pos:line="350" pos:column="67">(<argument><expr><name pos:line="350" pos:column="68">fname<pos:position pos:line="350" pos:column="73"/></name></expr></argument>)<pos:position pos:line="350" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="350" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="76"/></expr_stmt>
					}<pos:position pos:line="351" pos:column="42"/></block></then></if>
					<expr_stmt><expr><name pos:line="352" pos:column="41">match_level<pos:position pos:line="352" pos:column="52"/></name> <operator pos:line="352" pos:column="53">=<pos:position pos:line="352" pos:column="54"/></operator> <literal type="number" pos:line="352" pos:column="55">0<pos:position pos:line="352" pos:column="56"/></literal></expr>;<pos:position pos:line="352" pos:column="57"/></expr_stmt>
					<expr_stmt><expr><name pos:line="353" pos:column="41">statret<pos:position pos:line="353" pos:column="48"/></name> <operator pos:line="353" pos:column="49">=<pos:position pos:line="353" pos:column="50"/></operator> <operator pos:line="353" pos:column="51">-<pos:position pos:line="353" pos:column="52"/></operator><literal type="number" pos:line="353" pos:column="52">1<pos:position pos:line="353" pos:column="53"/></literal></expr>;<pos:position pos:line="353" pos:column="54"/></expr_stmt>
				}<pos:position pos:line="354" pos:column="34"/></block></then> <else pos:line="354" pos:column="35">else <block pos:line="354" pos:column="40">{
					<if pos:line="355" pos:column="41">if <condition pos:line="355" pos:column="44">(<expr><name pos:line="355" pos:column="45">itemizing<pos:position pos:line="355" pos:column="54"/></name></expr>)<pos:position pos:line="355" pos:column="55"/></condition><then pos:line="355" pos:column="55"> <block pos:line="355" pos:column="56">{
						<expr_stmt><expr><call><name pos:line="356" pos:column="49">itemize<pos:position pos:line="356" pos:column="56"/></name><argument_list pos:line="356" pos:column="56">(<argument><expr><name pos:line="356" pos:column="57">file<pos:position pos:line="356" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="356" pos:column="63">ndx<pos:position pos:line="356" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="356" pos:column="68">0<pos:position pos:line="356" pos:column="69"/></literal></expr></argument>, <argument><expr><operator pos:line="356" pos:column="71">&amp;<pos:position pos:line="356" pos:column="76"/></operator><name pos:line="356" pos:column="72">st<pos:position pos:line="356" pos:column="74"/></name></expr></argument>,
							<argument><expr><name pos:line="357" pos:column="57">ITEM_LOCAL_CHANGE<pos:position pos:line="357" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="357" pos:column="76">0<pos:position pos:line="357" pos:column="77"/></literal></expr></argument>,
							<argument><expr><name pos:line="358" pos:column="57">NULL<pos:position pos:line="358" pos:column="61"/></name></expr></argument>)<pos:position pos:line="358" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="63"/></expr_stmt>
					}<pos:position pos:line="359" pos:column="42"/></block></then> <elseif pos:line="359" pos:column="43">else <if pos:line="359" pos:column="48">if <condition pos:line="359" pos:column="51">(<expr><name pos:line="359" pos:column="52">verbose<pos:position pos:line="359" pos:column="59"/></name> <operator pos:line="359" pos:column="60">&amp;&amp;<pos:position pos:line="359" pos:column="70"/></operator> <name pos:line="359" pos:column="63">code<pos:position pos:line="359" pos:column="67"/></name></expr>)<pos:position pos:line="359" pos:column="68"/></condition><then pos:line="359" pos:column="68"> <block pos:line="359" pos:column="69">{
						<expr_stmt><expr><call><name pos:line="360" pos:column="49">rprintf<pos:position pos:line="360" pos:column="56"/></name><argument_list pos:line="360" pos:column="56">(<argument><expr><name pos:line="360" pos:column="57">code<pos:position pos:line="360" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="360" pos:column="63">"%s\n"<pos:position pos:line="360" pos:column="69"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="361" pos:column="57">safe_fname<pos:position pos:line="361" pos:column="67"/></name><argument_list pos:line="361" pos:column="67">(<argument><expr><name pos:line="361" pos:column="68">fname<pos:position pos:line="361" pos:column="73"/></name></expr></argument>)<pos:position pos:line="361" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="361" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="76"/></expr_stmt>
					}<pos:position pos:line="362" pos:column="42"/></block></then></if></elseif></if>
					<expr_stmt><expr><call><name pos:line="363" pos:column="41">set_perms<pos:position pos:line="363" pos:column="50"/></name><argument_list pos:line="363" pos:column="50">(<argument><expr><name pos:line="363" pos:column="51">fname<pos:position pos:line="363" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="58">file<pos:position pos:line="363" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="64">NULL<pos:position pos:line="363" pos:column="68"/></name></expr></argument>,
						  <argument><expr><name pos:line="364" pos:column="51">maybe_PERMS_REPORT<pos:position pos:line="364" pos:column="69"/></name></expr></argument>)<pos:position pos:line="364" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="71"/></expr_stmt>
					<if pos:line="365" pos:column="41">if <condition pos:line="365" pos:column="44">(<expr><name pos:line="365" pos:column="45">preserve_hard_links<pos:position pos:line="365" pos:column="64"/></name>
					    <operator pos:line="366" pos:column="45">&amp;&amp;<pos:position pos:line="366" pos:column="55"/></operator> <name><name pos:line="366" pos:column="48">file<pos:position pos:line="366" pos:column="52"/></name><operator pos:line="366" pos:column="52">-&gt;<pos:position pos:line="366" pos:column="57"/></operator><name pos:line="366" pos:column="54">link_u<pos:position pos:line="366" pos:column="60"/></name><operator pos:line="366" pos:column="60">.<pos:position pos:line="366" pos:column="61"/></operator><name pos:line="366" pos:column="61">links<pos:position pos:line="366" pos:column="66"/></name></name></expr>)<pos:position pos:line="366" pos:column="67"/></condition><then pos:line="366" pos:column="67"> <block pos:line="366" pos:column="68">{
						<expr_stmt><expr><call><name pos:line="367" pos:column="49">hard_link_cluster<pos:position pos:line="367" pos:column="66"/></name><argument_list pos:line="367" pos:column="66">(<argument><expr><name pos:line="367" pos:column="67">file<pos:position pos:line="367" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="367" pos:column="73">ndx<pos:position pos:line="367" pos:column="76"/></name></expr></argument>,
								  <argument><expr><name pos:line="368" pos:column="67">itemizing<pos:position pos:line="368" pos:column="76"/></name></expr></argument>,
								  <argument><expr><name pos:line="369" pos:column="67">code<pos:position pos:line="369" pos:column="71"/></name></expr></argument>)<pos:position pos:line="369" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="73"/></expr_stmt>
					}<pos:position pos:line="370" pos:column="42"/></block></then></if>
					<return pos:line="371" pos:column="41">return;<pos:position pos:line="371" pos:column="48"/></return>
				}<pos:position pos:line="372" pos:column="34"/></block></else></if>
			}<pos:position pos:line="373" pos:column="26"/></block></then> <elseif pos:line="373" pos:column="27">else <if pos:line="373" pos:column="32">if <condition pos:line="373" pos:column="35">(<expr><name pos:line="373" pos:column="36">compare_dest<pos:position pos:line="373" pos:column="48"/></name> <operator pos:line="373" pos:column="49">||<pos:position pos:line="373" pos:column="51"/></operator> <name pos:line="373" pos:column="52">match_level<pos:position pos:line="373" pos:column="63"/></name> <operator pos:line="373" pos:column="64">==<pos:position pos:line="373" pos:column="66"/></operator> <literal type="number" pos:line="373" pos:column="67">1<pos:position pos:line="373" pos:column="68"/></literal></expr>)<pos:position pos:line="373" pos:column="69"/></condition><then pos:line="373" pos:column="69"> <block pos:line="373" pos:column="70">{
				<expr_stmt><expr><name pos:line="374" pos:column="33">fnamecmp<pos:position pos:line="374" pos:column="41"/></name> <operator pos:line="374" pos:column="42">=<pos:position pos:line="374" pos:column="43"/></operator> <name pos:line="374" pos:column="44">fnamecmpbuf<pos:position pos:line="374" pos:column="55"/></name></expr>;<pos:position pos:line="374" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="375" pos:column="33">fnamecmp_type<pos:position pos:line="375" pos:column="46"/></name> <operator pos:line="375" pos:column="47">=<pos:position pos:line="375" pos:column="48"/></operator> <name pos:line="375" pos:column="49">i<pos:position pos:line="375" pos:column="50"/></name></expr>;<pos:position pos:line="375" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="376" pos:column="26"/></block></then></if></elseif></if>
		}<pos:position pos:line="377" pos:column="18"/></block></then></if>
	}<pos:position pos:line="378" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="380" pos:column="9">real_ret<pos:position pos:line="380" pos:column="17"/></name> <operator pos:line="380" pos:column="18">=<pos:position pos:line="380" pos:column="19"/></operator> <name pos:line="380" pos:column="20">statret<pos:position pos:line="380" pos:column="27"/></name></expr>;<pos:position pos:line="380" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="381" pos:column="9">real_st<pos:position pos:line="381" pos:column="16"/></name> <operator pos:line="381" pos:column="17">=<pos:position pos:line="381" pos:column="18"/></operator> <name pos:line="381" pos:column="19">st<pos:position pos:line="381" pos:column="21"/></name></expr>;<pos:position pos:line="381" pos:column="22"/></expr_stmt>

	<if pos:line="383" pos:column="9">if <condition pos:line="383" pos:column="12">(<expr><name pos:line="383" pos:column="13">partial_dir<pos:position pos:line="383" pos:column="24"/></name> <operator pos:line="383" pos:column="25">&amp;&amp;<pos:position pos:line="383" pos:column="35"/></operator> <operator pos:line="383" pos:column="28">(<pos:position pos:line="383" pos:column="29"/></operator><name pos:line="383" pos:column="29">partialptr<pos:position pos:line="383" pos:column="39"/></name> <operator pos:line="383" pos:column="40">=<pos:position pos:line="383" pos:column="41"/></operator> <call><name pos:line="383" pos:column="42">partial_dir_fname<pos:position pos:line="383" pos:column="59"/></name><argument_list pos:line="383" pos:column="59">(<argument><expr><name pos:line="383" pos:column="60">fname<pos:position pos:line="383" pos:column="65"/></name></expr></argument>)<pos:position pos:line="383" pos:column="66"/></argument_list></call><operator pos:line="383" pos:column="66">)<pos:position pos:line="383" pos:column="67"/></operator> <operator pos:line="383" pos:column="68">!=<pos:position pos:line="383" pos:column="70"/></operator> <name pos:line="383" pos:column="71">NULL<pos:position pos:line="383" pos:column="75"/></name>
	    <operator pos:line="384" pos:column="13">&amp;&amp;<pos:position pos:line="384" pos:column="23"/></operator> <call><name pos:line="384" pos:column="16">link_stat<pos:position pos:line="384" pos:column="25"/></name><argument_list pos:line="384" pos:column="25">(<argument><expr><name pos:line="384" pos:column="26">partialptr<pos:position pos:line="384" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="384" pos:column="38">&amp;<pos:position pos:line="384" pos:column="43"/></operator><name pos:line="384" pos:column="39">partial_st<pos:position pos:line="384" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="384" pos:column="51">0<pos:position pos:line="384" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="384" pos:column="53"/></argument_list></call> <operator pos:line="384" pos:column="54">==<pos:position pos:line="384" pos:column="56"/></operator> <literal type="number" pos:line="384" pos:column="57">0<pos:position pos:line="384" pos:column="58"/></literal>
	    <operator pos:line="385" pos:column="13">&amp;&amp;<pos:position pos:line="385" pos:column="23"/></operator> <call><name pos:line="385" pos:column="16">S_ISREG<pos:position pos:line="385" pos:column="23"/></name><argument_list pos:line="385" pos:column="23">(<argument><expr><name><name pos:line="385" pos:column="24">partial_st<pos:position pos:line="385" pos:column="34"/></name><operator pos:line="385" pos:column="34">.<pos:position pos:line="385" pos:column="35"/></operator><name pos:line="385" pos:column="35">st_mode<pos:position pos:line="385" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="385" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="385" pos:column="44"/></condition><then pos:line="385" pos:column="44"> <block pos:line="385" pos:column="45">{
		<if pos:line="386" pos:column="17">if <condition pos:line="386" pos:column="20">(<expr><name pos:line="386" pos:column="21">statret<pos:position pos:line="386" pos:column="28"/></name> <operator pos:line="386" pos:column="29">!=<pos:position pos:line="386" pos:column="31"/></operator> <literal type="number" pos:line="386" pos:column="32">0<pos:position pos:line="386" pos:column="33"/></literal></expr>)<pos:position pos:line="386" pos:column="34"/></condition><then pos:line="386" pos:column="34">
			<block type="pseudo"><goto pos:line="387" pos:column="25">goto <name pos:line="387" pos:column="30">prepare_to_open<pos:position pos:line="387" pos:column="45"/></name>;<pos:position pos:line="387" pos:column="46"/></goto></block></then></if>
	}<pos:position pos:line="388" pos:column="10"/></block></then> <else pos:line="388" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="389" pos:column="17">partialptr<pos:position pos:line="389" pos:column="27"/></name> <operator pos:line="389" pos:column="28">=<pos:position pos:line="389" pos:column="29"/></operator> <name pos:line="389" pos:column="30">NULL<pos:position pos:line="389" pos:column="34"/></name></expr>;<pos:position pos:line="389" pos:column="35"/></expr_stmt></block></else></if>

	<if pos:line="391" pos:column="9">if <condition pos:line="391" pos:column="12">(<expr><name pos:line="391" pos:column="13">statret<pos:position pos:line="391" pos:column="20"/></name> <operator pos:line="391" pos:column="21">!=<pos:position pos:line="391" pos:column="23"/></operator> <literal type="number" pos:line="391" pos:column="24">0<pos:position pos:line="391" pos:column="25"/></literal> <operator pos:line="391" pos:column="26">&amp;&amp;<pos:position pos:line="391" pos:column="36"/></operator> <name pos:line="391" pos:column="29">fuzzy_basis<pos:position pos:line="391" pos:column="40"/></name> <operator pos:line="391" pos:column="41">&amp;&amp;<pos:position pos:line="391" pos:column="51"/></operator> <name pos:line="391" pos:column="44">dry_run<pos:position pos:line="391" pos:column="51"/></name> <operator pos:line="391" pos:column="52">&lt;=<pos:position pos:line="391" pos:column="57"/></operator> <literal type="number" pos:line="391" pos:column="55">1<pos:position pos:line="391" pos:column="56"/></literal></expr>)<pos:position pos:line="391" pos:column="57"/></condition><then pos:line="391" pos:column="57"> <block pos:line="391" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="392" pos:column="17">int<pos:position pos:line="392" pos:column="20"/></name></type> <name pos:line="392" pos:column="21">j<pos:position pos:line="392" pos:column="22"/></name> <init pos:line="392" pos:column="23">= <expr><call><name pos:line="392" pos:column="25">find_fuzzy<pos:position pos:line="392" pos:column="35"/></name><argument_list pos:line="392" pos:column="35">(<argument><expr><name pos:line="392" pos:column="36">file<pos:position pos:line="392" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="392" pos:column="42">fuzzy_dirlist<pos:position pos:line="392" pos:column="55"/></name></expr></argument>)<pos:position pos:line="392" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="392" pos:column="57"/></decl_stmt>
		<if pos:line="393" pos:column="17">if <condition pos:line="393" pos:column="20">(<expr><name pos:line="393" pos:column="21">j<pos:position pos:line="393" pos:column="22"/></name> <operator pos:line="393" pos:column="23">&gt;=<pos:position pos:line="393" pos:column="28"/></operator> <literal type="number" pos:line="393" pos:column="26">0<pos:position pos:line="393" pos:column="27"/></literal></expr>)<pos:position pos:line="393" pos:column="28"/></condition><then pos:line="393" pos:column="28"> <block pos:line="393" pos:column="29">{
			<expr_stmt><expr><name pos:line="394" pos:column="25">fuzzy_file<pos:position pos:line="394" pos:column="35"/></name> <operator pos:line="394" pos:column="36">=<pos:position pos:line="394" pos:column="37"/></operator> <name><name pos:line="394" pos:column="38">fuzzy_dirlist<pos:position pos:line="394" pos:column="51"/></name><operator pos:line="394" pos:column="51">-&gt;<pos:position pos:line="394" pos:column="56"/></operator><name pos:line="394" pos:column="53">files<pos:position pos:line="394" pos:column="58"/></name><index pos:line="394" pos:column="58">[<expr><name pos:line="394" pos:column="59">j<pos:position pos:line="394" pos:column="60"/></name></expr>]<pos:position pos:line="394" pos:column="61"/></index></name></expr>;<pos:position pos:line="394" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="395" pos:column="25">f_name_to<pos:position pos:line="395" pos:column="34"/></name><argument_list pos:line="395" pos:column="34">(<argument><expr><name pos:line="395" pos:column="35">fuzzy_file<pos:position pos:line="395" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="47">fnamecmpbuf<pos:position pos:line="395" pos:column="58"/></name></expr></argument>)<pos:position pos:line="395" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="60"/></expr_stmt>
			<if pos:line="396" pos:column="25">if <condition pos:line="396" pos:column="28">(<expr><name pos:line="396" pos:column="29">verbose<pos:position pos:line="396" pos:column="36"/></name> <operator pos:line="396" pos:column="37">&gt;<pos:position pos:line="396" pos:column="41"/></operator> <literal type="number" pos:line="396" pos:column="39">2<pos:position pos:line="396" pos:column="40"/></literal></expr>)<pos:position pos:line="396" pos:column="41"/></condition><then pos:line="396" pos:column="41"> <block pos:line="396" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="397" pos:column="33">rprintf<pos:position pos:line="397" pos:column="40"/></name><argument_list pos:line="397" pos:column="40">(<argument><expr><name pos:line="397" pos:column="41">FINFO<pos:position pos:line="397" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="397" pos:column="48">"fuzzy basis selected for %s: %s\n"<pos:position pos:line="397" pos:column="83"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="398" pos:column="41">safe_fname<pos:position pos:line="398" pos:column="51"/></name><argument_list pos:line="398" pos:column="51">(<argument><expr><name pos:line="398" pos:column="52">fname<pos:position pos:line="398" pos:column="57"/></name></expr></argument>)<pos:position pos:line="398" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="398" pos:column="60">safe_fname<pos:position pos:line="398" pos:column="70"/></name><argument_list pos:line="398" pos:column="70">(<argument><expr><name pos:line="398" pos:column="71">fnamecmpbuf<pos:position pos:line="398" pos:column="82"/></name></expr></argument>)<pos:position pos:line="398" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="398" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="85"/></expr_stmt>
			}<pos:position pos:line="399" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="400" pos:column="25">st<pos:position pos:line="400" pos:column="27"/></name><operator pos:line="400" pos:column="27">.<pos:position pos:line="400" pos:column="28"/></operator><name pos:line="400" pos:column="28">st_size<pos:position pos:line="400" pos:column="35"/></name></name> <operator pos:line="400" pos:column="36">=<pos:position pos:line="400" pos:column="37"/></operator> <name><name pos:line="400" pos:column="38">fuzzy_file<pos:position pos:line="400" pos:column="48"/></name><operator pos:line="400" pos:column="48">-&gt;<pos:position pos:line="400" pos:column="53"/></operator><name pos:line="400" pos:column="50">length<pos:position pos:line="400" pos:column="56"/></name></name></expr>;<pos:position pos:line="400" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name pos:line="401" pos:column="25">statret<pos:position pos:line="401" pos:column="32"/></name> <operator pos:line="401" pos:column="33">=<pos:position pos:line="401" pos:column="34"/></operator> <literal type="number" pos:line="401" pos:column="35">0<pos:position pos:line="401" pos:column="36"/></literal></expr>;<pos:position pos:line="401" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="402" pos:column="25">fnamecmp<pos:position pos:line="402" pos:column="33"/></name> <operator pos:line="402" pos:column="34">=<pos:position pos:line="402" pos:column="35"/></operator> <name pos:line="402" pos:column="36">fnamecmpbuf<pos:position pos:line="402" pos:column="47"/></name></expr>;<pos:position pos:line="402" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="403" pos:column="25">fnamecmp_type<pos:position pos:line="403" pos:column="38"/></name> <operator pos:line="403" pos:column="39">=<pos:position pos:line="403" pos:column="40"/></operator> <name pos:line="403" pos:column="41">FNAMECMP_FUZZY<pos:position pos:line="403" pos:column="55"/></name></expr>;<pos:position pos:line="403" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="404" pos:column="18"/></block></then></if>
	}<pos:position pos:line="405" pos:column="10"/></block></then></if>

	<if pos:line="407" pos:column="9">if <condition pos:line="407" pos:column="12">(<expr><name pos:line="407" pos:column="13">statret<pos:position pos:line="407" pos:column="20"/></name> <operator pos:line="407" pos:column="21">!=<pos:position pos:line="407" pos:column="23"/></operator> <literal type="number" pos:line="407" pos:column="24">0<pos:position pos:line="407" pos:column="25"/></literal></expr>)<pos:position pos:line="407" pos:column="26"/></condition><then pos:line="407" pos:column="26"> <block pos:line="407" pos:column="27">{
		<if pos:line="408" pos:column="17">if <condition pos:line="408" pos:column="20">(<expr><name pos:line="408" pos:column="21">preserve_hard_links<pos:position pos:line="408" pos:column="40"/></name>
		    <operator pos:line="409" pos:column="21">&amp;&amp;<pos:position pos:line="409" pos:column="31"/></operator> <call><name pos:line="409" pos:column="24">hard_link_check<pos:position pos:line="409" pos:column="39"/></name><argument_list pos:line="409" pos:column="39">(<argument><expr><name pos:line="409" pos:column="40">file<pos:position pos:line="409" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="46">ndx<pos:position pos:line="409" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="51">fname<pos:position pos:line="409" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="409" pos:column="58">statret<pos:position pos:line="409" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="409" pos:column="67">&amp;<pos:position pos:line="409" pos:column="72"/></operator><name pos:line="409" pos:column="68">st<pos:position pos:line="409" pos:column="70"/></name></expr></argument>,
				       <argument><expr><name pos:line="410" pos:column="40">itemizing<pos:position pos:line="410" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="410" pos:column="51">code<pos:position pos:line="410" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="410" pos:column="57">HL_SKIP<pos:position pos:line="410" pos:column="64"/></name></expr></argument>)<pos:position pos:line="410" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="410" pos:column="66"/></condition><then pos:line="410" pos:column="66">
			<block type="pseudo"><return pos:line="411" pos:column="25">return;<pos:position pos:line="411" pos:column="32"/></return></block></then></if>
		<if pos:line="412" pos:column="17">if <condition pos:line="412" pos:column="20">(<expr><name pos:line="412" pos:column="21">stat_errno<pos:position pos:line="412" pos:column="31"/></name> <operator pos:line="412" pos:column="32">==<pos:position pos:line="412" pos:column="34"/></operator> <name pos:line="412" pos:column="35">ENOENT<pos:position pos:line="412" pos:column="41"/></name></expr>)<pos:position pos:line="412" pos:column="42"/></condition><then pos:line="412" pos:column="42">
			<block type="pseudo"><goto pos:line="413" pos:column="25">goto <name pos:line="413" pos:column="30">notify_others<pos:position pos:line="413" pos:column="43"/></name>;<pos:position pos:line="413" pos:column="44"/></goto></block></then></if>
		<if pos:line="414" pos:column="17">if <condition pos:line="414" pos:column="20">(<expr><name pos:line="414" pos:column="21">verbose<pos:position pos:line="414" pos:column="28"/></name> <operator pos:line="414" pos:column="29">&gt;<pos:position pos:line="414" pos:column="33"/></operator> <literal type="number" pos:line="414" pos:column="31">1<pos:position pos:line="414" pos:column="32"/></literal></expr>)<pos:position pos:line="414" pos:column="33"/></condition><then pos:line="414" pos:column="33"> <block pos:line="414" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="415" pos:column="25">rsyserr<pos:position pos:line="415" pos:column="32"/></name><argument_list pos:line="415" pos:column="32">(<argument><expr><name pos:line="415" pos:column="33">FERROR<pos:position pos:line="415" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="415" pos:column="41">stat_errno<pos:position pos:line="415" pos:column="51"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="416" pos:column="33">"recv_generator: failed to stat %s"<pos:position pos:line="416" pos:column="68"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="417" pos:column="33">full_fname<pos:position pos:line="417" pos:column="43"/></name><argument_list pos:line="417" pos:column="43">(<argument><expr><name pos:line="417" pos:column="44">fname<pos:position pos:line="417" pos:column="49"/></name></expr></argument>)<pos:position pos:line="417" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="417" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="418" pos:column="18"/></block></then></if>
		<return pos:line="419" pos:column="17">return;<pos:position pos:line="419" pos:column="24"/></return>
	}<pos:position pos:line="420" pos:column="10"/></block></then></if>

	<if pos:line="422" pos:column="9">if <condition pos:line="422" pos:column="12">(<expr><operator pos:line="422" pos:column="13">!<pos:position pos:line="422" pos:column="14"/></operator><name pos:line="422" pos:column="14">compare_dest<pos:position pos:line="422" pos:column="26"/></name> <operator pos:line="422" pos:column="27">&amp;&amp;<pos:position pos:line="422" pos:column="37"/></operator> <name pos:line="422" pos:column="30">fnamecmp_type<pos:position pos:line="422" pos:column="43"/></name> <operator pos:line="422" pos:column="44">&lt;=<pos:position pos:line="422" pos:column="49"/></operator> <name pos:line="422" pos:column="47">FNAMECMP_BASIS_DIR_HIGH<pos:position pos:line="422" pos:column="70"/></name></expr>)<pos:position pos:line="422" pos:column="71"/></condition><then pos:line="422" pos:column="71">
		<block type="pseudo"><empty_stmt pos:line="423" pos:column="17">;<pos:position pos:line="423" pos:column="18"/></empty_stmt></block></then>
	<elseif pos:line="424" pos:column="9">else <if pos:line="424" pos:column="14">if <condition pos:line="424" pos:column="17">(<expr><name pos:line="424" pos:column="18">fnamecmp_type<pos:position pos:line="424" pos:column="31"/></name> <operator pos:line="424" pos:column="32">==<pos:position pos:line="424" pos:column="34"/></operator> <name pos:line="424" pos:column="35">FNAMECMP_FUZZY<pos:position pos:line="424" pos:column="49"/></name></expr>)<pos:position pos:line="424" pos:column="50"/></condition><then pos:line="424" pos:column="50">
		<block type="pseudo"><empty_stmt pos:line="425" pos:column="17">;<pos:position pos:line="425" pos:column="18"/></empty_stmt></block></then></if></elseif>
	<elseif pos:line="426" pos:column="9">else <if pos:line="426" pos:column="14">if <condition pos:line="426" pos:column="17">(<expr><call><name pos:line="426" pos:column="18">unchanged_file<pos:position pos:line="426" pos:column="32"/></name><argument_list pos:line="426" pos:column="32">(<argument><expr><name pos:line="426" pos:column="33">fnamecmp<pos:position pos:line="426" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="426" pos:column="43">file<pos:position pos:line="426" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="426" pos:column="49">&amp;<pos:position pos:line="426" pos:column="54"/></operator><name pos:line="426" pos:column="50">st<pos:position pos:line="426" pos:column="52"/></name></expr></argument>)<pos:position pos:line="426" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="426" pos:column="54"/></condition><then pos:line="426" pos:column="54"> <block pos:line="426" pos:column="55">{
		<if pos:line="427" pos:column="17">if <condition pos:line="427" pos:column="20">(<expr><name pos:line="427" pos:column="21">fnamecmp_type<pos:position pos:line="427" pos:column="34"/></name> <operator pos:line="427" pos:column="35">==<pos:position pos:line="427" pos:column="37"/></operator> <name pos:line="427" pos:column="38">FNAMECMP_FNAME<pos:position pos:line="427" pos:column="52"/></name></expr>)<pos:position pos:line="427" pos:column="53"/></condition><then pos:line="427" pos:column="53"> <block pos:line="427" pos:column="54">{
			<if pos:line="428" pos:column="25">if <condition pos:line="428" pos:column="28">(<expr><name pos:line="428" pos:column="29">itemizing<pos:position pos:line="428" pos:column="38"/></name></expr>)<pos:position pos:line="428" pos:column="39"/></condition><then pos:line="428" pos:column="39"> <block pos:line="428" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="429" pos:column="33">itemize<pos:position pos:line="429" pos:column="40"/></name><argument_list pos:line="429" pos:column="40">(<argument><expr><name pos:line="429" pos:column="41">file<pos:position pos:line="429" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="429" pos:column="47">ndx<pos:position pos:line="429" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="429" pos:column="52">real_ret<pos:position pos:line="429" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="429" pos:column="62">&amp;<pos:position pos:line="429" pos:column="67"/></operator><name pos:line="429" pos:column="63">real_st<pos:position pos:line="429" pos:column="70"/></name></expr></argument>,
					<argument><expr><literal type="number" pos:line="430" pos:column="41">0<pos:position pos:line="430" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="430" pos:column="44">0<pos:position pos:line="430" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="430" pos:column="47">NULL<pos:position pos:line="430" pos:column="51"/></name></expr></argument>)<pos:position pos:line="430" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="431" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="432" pos:column="25">set_perms<pos:position pos:line="432" pos:column="34"/></name><argument_list pos:line="432" pos:column="34">(<argument><expr><name pos:line="432" pos:column="35">fname<pos:position pos:line="432" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="42">file<pos:position pos:line="432" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="432" pos:column="48">&amp;<pos:position pos:line="432" pos:column="53"/></operator><name pos:line="432" pos:column="49">st<pos:position pos:line="432" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="432" pos:column="53">maybe_PERMS_REPORT<pos:position pos:line="432" pos:column="71"/></name></expr></argument>)<pos:position pos:line="432" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="73"/></expr_stmt>
			<if pos:line="433" pos:column="25">if <condition pos:line="433" pos:column="28">(<expr><name pos:line="433" pos:column="29">preserve_hard_links<pos:position pos:line="433" pos:column="48"/></name> <operator pos:line="433" pos:column="49">&amp;&amp;<pos:position pos:line="433" pos:column="59"/></operator> <name><name pos:line="433" pos:column="52">file<pos:position pos:line="433" pos:column="56"/></name><operator pos:line="433" pos:column="56">-&gt;<pos:position pos:line="433" pos:column="61"/></operator><name pos:line="433" pos:column="58">link_u<pos:position pos:line="433" pos:column="64"/></name><operator pos:line="433" pos:column="64">.<pos:position pos:line="433" pos:column="65"/></operator><name pos:line="433" pos:column="65">links<pos:position pos:line="433" pos:column="70"/></name></name></expr>)<pos:position pos:line="433" pos:column="71"/></condition><then pos:line="433" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="434" pos:column="33">hard_link_cluster<pos:position pos:line="434" pos:column="50"/></name><argument_list pos:line="434" pos:column="50">(<argument><expr><name pos:line="434" pos:column="51">file<pos:position pos:line="434" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="434" pos:column="57">ndx<pos:position pos:line="434" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="434" pos:column="62">itemizing<pos:position pos:line="434" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="434" pos:column="73">code<pos:position pos:line="434" pos:column="77"/></name></expr></argument>)<pos:position pos:line="434" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="79"/></expr_stmt></block></then></if>
			<return pos:line="435" pos:column="25">return;<pos:position pos:line="435" pos:column="32"/></return>
		}<pos:position pos:line="436" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="437" pos:column="17">/* Only --compare-dest gets here. */</comment>
		<expr_stmt><expr><call><name pos:line="438" pos:column="17">itemize<pos:position pos:line="438" pos:column="24"/></name><argument_list pos:line="438" pos:column="24">(<argument><expr><name pos:line="438" pos:column="25">file<pos:position pos:line="438" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="438" pos:column="31">ndx<pos:position pos:line="438" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="438" pos:column="36">real_ret<pos:position pos:line="438" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="438" pos:column="46">&amp;<pos:position pos:line="438" pos:column="51"/></operator><name pos:line="438" pos:column="47">real_st<pos:position pos:line="438" pos:column="54"/></name></expr></argument>,
			<argument><expr><name pos:line="439" pos:column="25">ITEM_NO_DEST_AND_NO_UPDATE<pos:position pos:line="439" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="439" pos:column="53">0<pos:position pos:line="439" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="439" pos:column="56">NULL<pos:position pos:line="439" pos:column="60"/></name></expr></argument>)<pos:position pos:line="439" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="439" pos:column="62"/></expr_stmt>
		<return pos:line="440" pos:column="17">return;<pos:position pos:line="440" pos:column="24"/></return>
	}<pos:position pos:line="441" pos:column="10"/></block></then></if></elseif></if>

<label><name pos:line="443" pos:column="1">prepare_to_open<pos:position pos:line="443" pos:column="16"/></name>:<pos:position pos:line="443" pos:column="17"/></label>
	<if pos:line="444" pos:column="9">if <condition pos:line="444" pos:column="12">(<expr><name pos:line="444" pos:column="13">partialptr<pos:position pos:line="444" pos:column="23"/></name></expr>)<pos:position pos:line="444" pos:column="24"/></condition><then pos:line="444" pos:column="24"> <block pos:line="444" pos:column="25">{
		<expr_stmt><expr><name pos:line="445" pos:column="17">st<pos:position pos:line="445" pos:column="19"/></name> <operator pos:line="445" pos:column="20">=<pos:position pos:line="445" pos:column="21"/></operator> <name pos:line="445" pos:column="22">partial_st<pos:position pos:line="445" pos:column="32"/></name></expr>;<pos:position pos:line="445" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="446" pos:column="17">fnamecmp<pos:position pos:line="446" pos:column="25"/></name> <operator pos:line="446" pos:column="26">=<pos:position pos:line="446" pos:column="27"/></operator> <name pos:line="446" pos:column="28">partialptr<pos:position pos:line="446" pos:column="38"/></name></expr>;<pos:position pos:line="446" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="447" pos:column="17">fnamecmp_type<pos:position pos:line="447" pos:column="30"/></name> <operator pos:line="447" pos:column="31">=<pos:position pos:line="447" pos:column="32"/></operator> <name pos:line="447" pos:column="33">FNAMECMP_PARTIAL_DIR<pos:position pos:line="447" pos:column="53"/></name></expr>;<pos:position pos:line="447" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="448" pos:column="17">statret<pos:position pos:line="448" pos:column="24"/></name> <operator pos:line="448" pos:column="25">=<pos:position pos:line="448" pos:column="26"/></operator> <literal type="number" pos:line="448" pos:column="27">0<pos:position pos:line="448" pos:column="28"/></literal></expr>;<pos:position pos:line="448" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="449" pos:column="10"/></block></then></if>

	<if pos:line="451" pos:column="9">if <condition pos:line="451" pos:column="12">(<expr><operator pos:line="451" pos:column="13">!<pos:position pos:line="451" pos:column="14"/></operator><name pos:line="451" pos:column="14">do_xfers<pos:position pos:line="451" pos:column="22"/></name> <operator pos:line="451" pos:column="23">||<pos:position pos:line="451" pos:column="25"/></operator> <name pos:line="451" pos:column="26">read_batch<pos:position pos:line="451" pos:column="36"/></name> <operator pos:line="451" pos:column="37">||<pos:position pos:line="451" pos:column="39"/></operator> <name pos:line="451" pos:column="40">whole_file<pos:position pos:line="451" pos:column="50"/></name></expr>)<pos:position pos:line="451" pos:column="51"/></condition><then pos:line="451" pos:column="51">
		<block type="pseudo"><goto pos:line="452" pos:column="17">goto <name pos:line="452" pos:column="22">notify_others<pos:position pos:line="452" pos:column="35"/></name>;<pos:position pos:line="452" pos:column="36"/></goto></block></then></if>

	<if pos:line="454" pos:column="9">if <condition pos:line="454" pos:column="12">(<expr><name pos:line="454" pos:column="13">fuzzy_basis<pos:position pos:line="454" pos:column="24"/></name></expr>)<pos:position pos:line="454" pos:column="25"/></condition><then pos:line="454" pos:column="25"> <block pos:line="454" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="455" pos:column="17">int<pos:position pos:line="455" pos:column="20"/></name></type> <name pos:line="455" pos:column="21">j<pos:position pos:line="455" pos:column="22"/></name> <init pos:line="455" pos:column="23">= <expr><call><name pos:line="455" pos:column="25">flist_find<pos:position pos:line="455" pos:column="35"/></name><argument_list pos:line="455" pos:column="35">(<argument><expr><name pos:line="455" pos:column="36">fuzzy_dirlist<pos:position pos:line="455" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="455" pos:column="51">file<pos:position pos:line="455" pos:column="55"/></name></expr></argument>)<pos:position pos:line="455" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="455" pos:column="57"/></decl_stmt>
		<if pos:line="456" pos:column="17">if <condition pos:line="456" pos:column="20">(<expr><name pos:line="456" pos:column="21">j<pos:position pos:line="456" pos:column="22"/></name> <operator pos:line="456" pos:column="23">&gt;=<pos:position pos:line="456" pos:column="28"/></operator> <literal type="number" pos:line="456" pos:column="26">0<pos:position pos:line="456" pos:column="27"/></literal></expr>)<pos:position pos:line="456" pos:column="28"/></condition><then pos:line="456" pos:column="28"> <comment type="block" pos:line="456" pos:column="29">/* don't use changing file as future fuzzy basis */</comment>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="457" pos:column="25">fuzzy_dirlist<pos:position pos:line="457" pos:column="38"/></name><operator pos:line="457" pos:column="38">-&gt;<pos:position pos:line="457" pos:column="43"/></operator><name pos:line="457" pos:column="40">files<pos:position pos:line="457" pos:column="45"/></name><index pos:line="457" pos:column="45">[<expr><name pos:line="457" pos:column="46">j<pos:position pos:line="457" pos:column="47"/></name></expr>]<pos:position pos:line="457" pos:column="48"/></index></name><operator pos:line="457" pos:column="48">-&gt;<pos:position pos:line="457" pos:column="53"/></operator><name pos:line="457" pos:column="50">flags<pos:position pos:line="457" pos:column="55"/></name> <operator pos:line="457" pos:column="56">|=<pos:position pos:line="457" pos:column="58"/></operator> <name pos:line="457" pos:column="59">FLAG_NO_FUZZY<pos:position pos:line="457" pos:column="72"/></name></expr>;<pos:position pos:line="457" pos:column="73"/></expr_stmt></block></then></if>
	}<pos:position pos:line="458" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="460" pos:column="9">/* open the file */</comment>
	<expr_stmt><expr><name pos:line="461" pos:column="9">fd<pos:position pos:line="461" pos:column="11"/></name> <operator pos:line="461" pos:column="12">=<pos:position pos:line="461" pos:column="13"/></operator> <call><name pos:line="461" pos:column="14">do_open<pos:position pos:line="461" pos:column="21"/></name><argument_list pos:line="461" pos:column="21">(<argument><expr><name pos:line="461" pos:column="22">fnamecmp<pos:position pos:line="461" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="32">O_RDONLY<pos:position pos:line="461" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="461" pos:column="42">0<pos:position pos:line="461" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="461" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="45"/></expr_stmt>

	<if pos:line="463" pos:column="9">if <condition pos:line="463" pos:column="12">(<expr><name pos:line="463" pos:column="13">fd<pos:position pos:line="463" pos:column="15"/></name> <operator pos:line="463" pos:column="16">==<pos:position pos:line="463" pos:column="18"/></operator> <operator pos:line="463" pos:column="19">-<pos:position pos:line="463" pos:column="20"/></operator><literal type="number" pos:line="463" pos:column="20">1<pos:position pos:line="463" pos:column="21"/></literal></expr>)<pos:position pos:line="463" pos:column="22"/></condition><then pos:line="463" pos:column="22"> <block pos:line="463" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="464" pos:column="17">rsyserr<pos:position pos:line="464" pos:column="24"/></name><argument_list pos:line="464" pos:column="24">(<argument><expr><name pos:line="464" pos:column="25">FERROR<pos:position pos:line="464" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="464" pos:column="33">errno<pos:position pos:line="464" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="464" pos:column="40">"failed to open %s, continuing"<pos:position pos:line="464" pos:column="71"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="465" pos:column="25">full_fname<pos:position pos:line="465" pos:column="35"/></name><argument_list pos:line="465" pos:column="35">(<argument><expr><name pos:line="465" pos:column="36">fnamecmp<pos:position pos:line="465" pos:column="44"/></name></expr></argument>)<pos:position pos:line="465" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="465" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="47"/></expr_stmt>
	    <label><name pos:line="466" pos:column="13">pretend_missing<pos:position pos:line="466" pos:column="28"/></name>:<pos:position pos:line="466" pos:column="29"/></label>
		<comment type="block" pos:line="467" pos:column="17">/* pretend the file didn't exist */</comment>
		<if pos:line="468" pos:column="17">if <condition pos:line="468" pos:column="20">(<expr><name pos:line="468" pos:column="21">preserve_hard_links<pos:position pos:line="468" pos:column="40"/></name>
		    <operator pos:line="469" pos:column="21">&amp;&amp;<pos:position pos:line="469" pos:column="31"/></operator> <call><name pos:line="469" pos:column="24">hard_link_check<pos:position pos:line="469" pos:column="39"/></name><argument_list pos:line="469" pos:column="39">(<argument><expr><name pos:line="469" pos:column="40">file<pos:position pos:line="469" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="46">ndx<pos:position pos:line="469" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="51">fname<pos:position pos:line="469" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="58">statret<pos:position pos:line="469" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="469" pos:column="67">&amp;<pos:position pos:line="469" pos:column="72"/></operator><name pos:line="469" pos:column="68">st<pos:position pos:line="469" pos:column="70"/></name></expr></argument>,
				       <argument><expr><name pos:line="470" pos:column="40">itemizing<pos:position pos:line="470" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="51">code<pos:position pos:line="470" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="57">HL_SKIP<pos:position pos:line="470" pos:column="64"/></name></expr></argument>)<pos:position pos:line="470" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="470" pos:column="66"/></condition><then pos:line="470" pos:column="66">
			<block type="pseudo"><return pos:line="471" pos:column="25">return;<pos:position pos:line="471" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="472" pos:column="17">statret<pos:position pos:line="472" pos:column="24"/></name> <operator pos:line="472" pos:column="25">=<pos:position pos:line="472" pos:column="26"/></operator> <name pos:line="472" pos:column="27">real_ret<pos:position pos:line="472" pos:column="35"/></name> <operator pos:line="472" pos:column="36">=<pos:position pos:line="472" pos:column="37"/></operator> <operator pos:line="472" pos:column="38">-<pos:position pos:line="472" pos:column="39"/></operator><literal type="number" pos:line="472" pos:column="39">1<pos:position pos:line="472" pos:column="40"/></literal></expr>;<pos:position pos:line="472" pos:column="41"/></expr_stmt>
		<goto pos:line="473" pos:column="17">goto <name pos:line="473" pos:column="22">notify_others<pos:position pos:line="473" pos:column="35"/></name>;<pos:position pos:line="473" pos:column="36"/></goto>
	}<pos:position pos:line="474" pos:column="10"/></block></then></if>

	<if pos:line="476" pos:column="9">if <condition pos:line="476" pos:column="12">(<expr><name pos:line="476" pos:column="13">inplace<pos:position pos:line="476" pos:column="20"/></name> <operator pos:line="476" pos:column="21">&amp;&amp;<pos:position pos:line="476" pos:column="31"/></operator> <name pos:line="476" pos:column="24">make_backups<pos:position pos:line="476" pos:column="36"/></name> <operator pos:line="476" pos:column="37">&amp;&amp;<pos:position pos:line="476" pos:column="47"/></operator> <name pos:line="476" pos:column="40">fnamecmp_type<pos:position pos:line="476" pos:column="53"/></name> <operator pos:line="476" pos:column="54">==<pos:position pos:line="476" pos:column="56"/></operator> <name pos:line="476" pos:column="57">FNAMECMP_FNAME<pos:position pos:line="476" pos:column="71"/></name></expr>)<pos:position pos:line="476" pos:column="72"/></condition><then pos:line="476" pos:column="72"> <block pos:line="476" pos:column="73">{
		<if pos:line="477" pos:column="17">if <condition pos:line="477" pos:column="20">(<expr><operator pos:line="477" pos:column="21">!<pos:position pos:line="477" pos:column="22"/></operator><operator pos:line="477" pos:column="22">(<pos:position pos:line="477" pos:column="23"/></operator><name pos:line="477" pos:column="23">backupptr<pos:position pos:line="477" pos:column="32"/></name> <operator pos:line="477" pos:column="33">=<pos:position pos:line="477" pos:column="34"/></operator> <call><name pos:line="477" pos:column="35">get_backup_name<pos:position pos:line="477" pos:column="50"/></name><argument_list pos:line="477" pos:column="50">(<argument><expr><name pos:line="477" pos:column="51">fname<pos:position pos:line="477" pos:column="56"/></name></expr></argument>)<pos:position pos:line="477" pos:column="57"/></argument_list></call><operator pos:line="477" pos:column="57">)<pos:position pos:line="477" pos:column="58"/></operator></expr>)<pos:position pos:line="477" pos:column="59"/></condition><then pos:line="477" pos:column="59"> <block pos:line="477" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="478" pos:column="25">close<pos:position pos:line="478" pos:column="30"/></name><argument_list pos:line="478" pos:column="30">(<argument><expr><name pos:line="478" pos:column="31">fd<pos:position pos:line="478" pos:column="33"/></name></expr></argument>)<pos:position pos:line="478" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="478" pos:column="35"/></expr_stmt>
			<return pos:line="479" pos:column="25">return;<pos:position pos:line="479" pos:column="32"/></return>
		}<pos:position pos:line="480" pos:column="18"/></block></then></if>
		<if pos:line="481" pos:column="17">if <condition pos:line="481" pos:column="20">(<expr><operator pos:line="481" pos:column="21">!<pos:position pos:line="481" pos:column="22"/></operator><operator pos:line="481" pos:column="22">(<pos:position pos:line="481" pos:column="23"/></operator><name pos:line="481" pos:column="23">back_file<pos:position pos:line="481" pos:column="32"/></name> <operator pos:line="481" pos:column="33">=<pos:position pos:line="481" pos:column="34"/></operator> <call><name pos:line="481" pos:column="35">make_file<pos:position pos:line="481" pos:column="44"/></name><argument_list pos:line="481" pos:column="44">(<argument><expr><name pos:line="481" pos:column="45">fname<pos:position pos:line="481" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="481" pos:column="52">NULL<pos:position pos:line="481" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="481" pos:column="58">NO_FILTERS<pos:position pos:line="481" pos:column="68"/></name></expr></argument>)<pos:position pos:line="481" pos:column="69"/></argument_list></call><operator pos:line="481" pos:column="69">)<pos:position pos:line="481" pos:column="70"/></operator></expr>)<pos:position pos:line="481" pos:column="71"/></condition><then pos:line="481" pos:column="71"> <block pos:line="481" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="482" pos:column="25">close<pos:position pos:line="482" pos:column="30"/></name><argument_list pos:line="482" pos:column="30">(<argument><expr><name pos:line="482" pos:column="31">fd<pos:position pos:line="482" pos:column="33"/></name></expr></argument>)<pos:position pos:line="482" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="482" pos:column="35"/></expr_stmt>
			<goto pos:line="483" pos:column="25">goto <name pos:line="483" pos:column="30">pretend_missing<pos:position pos:line="483" pos:column="45"/></name>;<pos:position pos:line="483" pos:column="46"/></goto>
		}<pos:position pos:line="484" pos:column="18"/></block></then></if>
		<if pos:line="485" pos:column="17">if <condition pos:line="485" pos:column="20">(<expr><call><name pos:line="485" pos:column="21">robust_unlink<pos:position pos:line="485" pos:column="34"/></name><argument_list pos:line="485" pos:column="34">(<argument><expr><name pos:line="485" pos:column="35">backupptr<pos:position pos:line="485" pos:column="44"/></name></expr></argument>)<pos:position pos:line="485" pos:column="45"/></argument_list></call> <operator pos:line="485" pos:column="46">&amp;&amp;<pos:position pos:line="485" pos:column="56"/></operator> <name pos:line="485" pos:column="49">errno<pos:position pos:line="485" pos:column="54"/></name> <operator pos:line="485" pos:column="55">!=<pos:position pos:line="485" pos:column="57"/></operator> <name pos:line="485" pos:column="58">ENOENT<pos:position pos:line="485" pos:column="64"/></name></expr>)<pos:position pos:line="485" pos:column="65"/></condition><then pos:line="485" pos:column="65"> <block pos:line="485" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="486" pos:column="25">rsyserr<pos:position pos:line="486" pos:column="32"/></name><argument_list pos:line="486" pos:column="32">(<argument><expr><name pos:line="486" pos:column="33">FERROR<pos:position pos:line="486" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="486" pos:column="41">errno<pos:position pos:line="486" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="486" pos:column="48">"unlink %s"<pos:position pos:line="486" pos:column="59"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="487" pos:column="33">full_fname<pos:position pos:line="487" pos:column="43"/></name><argument_list pos:line="487" pos:column="43">(<argument><expr><name pos:line="487" pos:column="44">backupptr<pos:position pos:line="487" pos:column="53"/></name></expr></argument>)<pos:position pos:line="487" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="487" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="487" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="488" pos:column="25">free<pos:position pos:line="488" pos:column="29"/></name><argument_list pos:line="488" pos:column="29">(<argument><expr><name pos:line="488" pos:column="30">back_file<pos:position pos:line="488" pos:column="39"/></name></expr></argument>)<pos:position pos:line="488" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="489" pos:column="25">close<pos:position pos:line="489" pos:column="30"/></name><argument_list pos:line="489" pos:column="30">(<argument><expr><name pos:line="489" pos:column="31">fd<pos:position pos:line="489" pos:column="33"/></name></expr></argument>)<pos:position pos:line="489" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="35"/></expr_stmt>
			<return pos:line="490" pos:column="25">return;<pos:position pos:line="490" pos:column="32"/></return>
		}<pos:position pos:line="491" pos:column="18"/></block></then></if>
		<if pos:line="492" pos:column="17">if <condition pos:line="492" pos:column="20">(<expr><operator pos:line="492" pos:column="21">(<pos:position pos:line="492" pos:column="22"/></operator><name pos:line="492" pos:column="22">f_copy<pos:position pos:line="492" pos:column="28"/></name> <operator pos:line="492" pos:column="29">=<pos:position pos:line="492" pos:column="30"/></operator> <call><name pos:line="492" pos:column="31">do_open<pos:position pos:line="492" pos:column="38"/></name><argument_list pos:line="492" pos:column="38">(<argument><expr><name pos:line="492" pos:column="39">backupptr<pos:position pos:line="492" pos:column="48"/></name></expr></argument>,
		    <argument><expr><name pos:line="493" pos:column="21">O_WRONLY<pos:position pos:line="493" pos:column="29"/></name> <operator pos:line="493" pos:column="30">|<pos:position pos:line="493" pos:column="31"/></operator> <name pos:line="493" pos:column="32">O_CREAT<pos:position pos:line="493" pos:column="39"/></name> <operator pos:line="493" pos:column="40">|<pos:position pos:line="493" pos:column="41"/></operator> <name pos:line="493" pos:column="42">O_TRUNC<pos:position pos:line="493" pos:column="49"/></name> <operator pos:line="493" pos:column="50">|<pos:position pos:line="493" pos:column="51"/></operator> <name pos:line="493" pos:column="52">O_EXCL<pos:position pos:line="493" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="493" pos:column="60">0600<pos:position pos:line="493" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="493" pos:column="65"/></argument_list></call><operator pos:line="493" pos:column="65">)<pos:position pos:line="493" pos:column="66"/></operator> <operator pos:line="493" pos:column="67">&lt;<pos:position pos:line="493" pos:column="71"/></operator> <literal type="number" pos:line="493" pos:column="69">0<pos:position pos:line="493" pos:column="70"/></literal></expr>)<pos:position pos:line="493" pos:column="71"/></condition><then pos:line="493" pos:column="71"> <block pos:line="493" pos:column="72">{
			<expr_stmt><expr><call><name pos:line="494" pos:column="25">rsyserr<pos:position pos:line="494" pos:column="32"/></name><argument_list pos:line="494" pos:column="32">(<argument><expr><name pos:line="494" pos:column="33">FERROR<pos:position pos:line="494" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="41">errno<pos:position pos:line="494" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="494" pos:column="48">"open %s"<pos:position pos:line="494" pos:column="57"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="495" pos:column="33">full_fname<pos:position pos:line="495" pos:column="43"/></name><argument_list pos:line="495" pos:column="43">(<argument><expr><name pos:line="495" pos:column="44">backupptr<pos:position pos:line="495" pos:column="53"/></name></expr></argument>)<pos:position pos:line="495" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="495" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="496" pos:column="25">free<pos:position pos:line="496" pos:column="29"/></name><argument_list pos:line="496" pos:column="29">(<argument><expr><name pos:line="496" pos:column="30">back_file<pos:position pos:line="496" pos:column="39"/></name></expr></argument>)<pos:position pos:line="496" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="497" pos:column="25">close<pos:position pos:line="497" pos:column="30"/></name><argument_list pos:line="497" pos:column="30">(<argument><expr><name pos:line="497" pos:column="31">fd<pos:position pos:line="497" pos:column="33"/></name></expr></argument>)<pos:position pos:line="497" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="497" pos:column="35"/></expr_stmt>
			<return pos:line="498" pos:column="25">return;<pos:position pos:line="498" pos:column="32"/></return>
		}<pos:position pos:line="499" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="500" pos:column="17">fnamecmp_type<pos:position pos:line="500" pos:column="30"/></name> <operator pos:line="500" pos:column="31">=<pos:position pos:line="500" pos:column="32"/></operator> <name pos:line="500" pos:column="33">FNAMECMP_BACKUP<pos:position pos:line="500" pos:column="48"/></name></expr>;<pos:position pos:line="500" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="501" pos:column="10"/></block></then></if>

	<if pos:line="503" pos:column="9">if <condition pos:line="503" pos:column="12">(<expr><name pos:line="503" pos:column="13">verbose<pos:position pos:line="503" pos:column="20"/></name> <operator pos:line="503" pos:column="21">&gt;<pos:position pos:line="503" pos:column="25"/></operator> <literal type="number" pos:line="503" pos:column="23">3<pos:position pos:line="503" pos:column="24"/></literal></expr>)<pos:position pos:line="503" pos:column="25"/></condition><then pos:line="503" pos:column="25"> <block pos:line="503" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="504" pos:column="17">rprintf<pos:position pos:line="504" pos:column="24"/></name><argument_list pos:line="504" pos:column="24">(<argument><expr><name pos:line="504" pos:column="25">FINFO<pos:position pos:line="504" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="504" pos:column="32">"gen mapped %s of size %.0f\n"<pos:position pos:line="504" pos:column="62"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="505" pos:column="25">safe_fname<pos:position pos:line="505" pos:column="35"/></name><argument_list pos:line="505" pos:column="35">(<argument><expr><name pos:line="505" pos:column="36">fnamecmp<pos:position pos:line="505" pos:column="44"/></name></expr></argument>)<pos:position pos:line="505" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="505" pos:column="47">(<pos:position pos:line="505" pos:column="48"/></operator><name pos:line="505" pos:column="48">double<pos:position pos:line="505" pos:column="54"/></name><operator pos:line="505" pos:column="54">)<pos:position pos:line="505" pos:column="55"/></operator><name><name pos:line="505" pos:column="55">st<pos:position pos:line="505" pos:column="57"/></name><operator pos:line="505" pos:column="57">.<pos:position pos:line="505" pos:column="58"/></operator><name pos:line="505" pos:column="58">st_size<pos:position pos:line="505" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="505" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="505" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="506" pos:column="10"/></block></then></if>

	<if pos:line="508" pos:column="9">if <condition pos:line="508" pos:column="12">(<expr><name pos:line="508" pos:column="13">verbose<pos:position pos:line="508" pos:column="20"/></name> <operator pos:line="508" pos:column="21">&gt;<pos:position pos:line="508" pos:column="25"/></operator> <literal type="number" pos:line="508" pos:column="23">2<pos:position pos:line="508" pos:column="24"/></literal></expr>)<pos:position pos:line="508" pos:column="25"/></condition><then pos:line="508" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="509" pos:column="17">rprintf<pos:position pos:line="509" pos:column="24"/></name><argument_list pos:line="509" pos:column="24">(<argument><expr><name pos:line="509" pos:column="25">FINFO<pos:position pos:line="509" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="509" pos:column="32">"generating and sending sums for %d\n"<pos:position pos:line="509" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="509" pos:column="72">ndx<pos:position pos:line="509" pos:column="75"/></name></expr></argument>)<pos:position pos:line="509" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="509" pos:column="77"/></expr_stmt></block></then></if>

<label><name pos:line="511" pos:column="1">notify_others<pos:position pos:line="511" pos:column="14"/></name>:<pos:position pos:line="511" pos:column="15"/></label>
	<expr_stmt><expr><call><name pos:line="512" pos:column="9">write_int<pos:position pos:line="512" pos:column="18"/></name><argument_list pos:line="512" pos:column="18">(<argument><expr><name pos:line="512" pos:column="19">f_out<pos:position pos:line="512" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="26">ndx<pos:position pos:line="512" pos:column="29"/></name></expr></argument>)<pos:position pos:line="512" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="31"/></expr_stmt>
	<if pos:line="513" pos:column="9">if <condition pos:line="513" pos:column="12">(<expr><name pos:line="513" pos:column="13">itemizing<pos:position pos:line="513" pos:column="22"/></name></expr>)<pos:position pos:line="513" pos:column="23"/></condition><then pos:line="513" pos:column="23"> <block pos:line="513" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="514" pos:column="17">int<pos:position pos:line="514" pos:column="20"/></name></type> <name pos:line="514" pos:column="21">iflags<pos:position pos:line="514" pos:column="27"/></name> <init pos:line="514" pos:column="28">= <expr><name pos:line="514" pos:column="30">ITEM_TRANSFER<pos:position pos:line="514" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="514" pos:column="44"/></decl_stmt>
		<if pos:line="515" pos:column="17">if <condition pos:line="515" pos:column="20">(<expr><name pos:line="515" pos:column="21">always_checksum<pos:position pos:line="515" pos:column="36"/></name></expr>)<pos:position pos:line="515" pos:column="37"/></condition><then pos:line="515" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="516" pos:column="25">iflags<pos:position pos:line="516" pos:column="31"/></name> <operator pos:line="516" pos:column="32">|=<pos:position pos:line="516" pos:column="34"/></operator> <name pos:line="516" pos:column="35">ITEM_REPORT_CHECKSUM<pos:position pos:line="516" pos:column="55"/></name></expr>;<pos:position pos:line="516" pos:column="56"/></expr_stmt></block></then></if>
		<if pos:line="517" pos:column="17">if <condition pos:line="517" pos:column="20">(<expr><name pos:line="517" pos:column="21">fnamecmp_type<pos:position pos:line="517" pos:column="34"/></name> <operator pos:line="517" pos:column="35">!=<pos:position pos:line="517" pos:column="37"/></operator> <name pos:line="517" pos:column="38">FNAMECMP_FNAME<pos:position pos:line="517" pos:column="52"/></name></expr>)<pos:position pos:line="517" pos:column="53"/></condition><then pos:line="517" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="518" pos:column="25">iflags<pos:position pos:line="518" pos:column="31"/></name> <operator pos:line="518" pos:column="32">|=<pos:position pos:line="518" pos:column="34"/></operator> <name pos:line="518" pos:column="35">ITEM_BASIS_TYPE_FOLLOWS<pos:position pos:line="518" pos:column="58"/></name></expr>;<pos:position pos:line="518" pos:column="59"/></expr_stmt></block></then></if>
		<if pos:line="519" pos:column="17">if <condition pos:line="519" pos:column="20">(<expr><name pos:line="519" pos:column="21">fnamecmp_type<pos:position pos:line="519" pos:column="34"/></name> <operator pos:line="519" pos:column="35">==<pos:position pos:line="519" pos:column="37"/></operator> <name pos:line="519" pos:column="38">FNAMECMP_FUZZY<pos:position pos:line="519" pos:column="52"/></name></expr>)<pos:position pos:line="519" pos:column="53"/></condition><then pos:line="519" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="520" pos:column="25">iflags<pos:position pos:line="520" pos:column="31"/></name> <operator pos:line="520" pos:column="32">|=<pos:position pos:line="520" pos:column="34"/></operator> <name pos:line="520" pos:column="35">ITEM_XNAME_FOLLOWS<pos:position pos:line="520" pos:column="53"/></name></expr>;<pos:position pos:line="520" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="521" pos:column="17">itemize<pos:position pos:line="521" pos:column="24"/></name><argument_list pos:line="521" pos:column="24">(<argument><expr><name pos:line="521" pos:column="25">file<pos:position pos:line="521" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="521" pos:column="31">-<pos:position pos:line="521" pos:column="32"/></operator><literal type="number" pos:line="521" pos:column="32">1<pos:position pos:line="521" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="521" pos:column="35">real_ret<pos:position pos:line="521" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="521" pos:column="45">&amp;<pos:position pos:line="521" pos:column="50"/></operator><name pos:line="521" pos:column="46">real_st<pos:position pos:line="521" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="521" pos:column="55">iflags<pos:position pos:line="521" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="521" pos:column="63">fnamecmp_type<pos:position pos:line="521" pos:column="76"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="522" pos:column="25">fuzzy_file<pos:position pos:line="522" pos:column="35"/></name></expr> ?<pos:position pos:line="522" pos:column="37"/></condition><then pos:line="522" pos:column="37"> <expr><name><name pos:line="522" pos:column="38">fuzzy_file<pos:position pos:line="522" pos:column="48"/></name><operator pos:line="522" pos:column="48">-&gt;<pos:position pos:line="522" pos:column="53"/></operator><name pos:line="522" pos:column="50">basename<pos:position pos:line="522" pos:column="58"/></name></name></expr> <pos:position pos:line="522" pos:column="59"/></then><else pos:line="522" pos:column="59">: <expr><name pos:line="522" pos:column="61">NULL<pos:position pos:line="522" pos:column="65"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="522" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="523" pos:column="10"/></block></then></if>

	<if pos:line="525" pos:column="9">if <condition pos:line="525" pos:column="12">(<expr><operator pos:line="525" pos:column="13">!<pos:position pos:line="525" pos:column="14"/></operator><name pos:line="525" pos:column="14">do_xfers<pos:position pos:line="525" pos:column="22"/></name></expr>)<pos:position pos:line="525" pos:column="23"/></condition><then pos:line="525" pos:column="23"> <block pos:line="525" pos:column="24">{
		<if pos:line="526" pos:column="17">if <condition pos:line="526" pos:column="20">(<expr><name pos:line="526" pos:column="21">preserve_hard_links<pos:position pos:line="526" pos:column="40"/></name> <operator pos:line="526" pos:column="41">&amp;&amp;<pos:position pos:line="526" pos:column="51"/></operator> <name><name pos:line="526" pos:column="44">file<pos:position pos:line="526" pos:column="48"/></name><operator pos:line="526" pos:column="48">-&gt;<pos:position pos:line="526" pos:column="53"/></operator><name pos:line="526" pos:column="50">link_u<pos:position pos:line="526" pos:column="56"/></name><operator pos:line="526" pos:column="56">.<pos:position pos:line="526" pos:column="57"/></operator><name pos:line="526" pos:column="57">links<pos:position pos:line="526" pos:column="62"/></name></name></expr>)<pos:position pos:line="526" pos:column="63"/></condition><then pos:line="526" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="527" pos:column="25">hard_link_cluster<pos:position pos:line="527" pos:column="42"/></name><argument_list pos:line="527" pos:column="42">(<argument><expr><name pos:line="527" pos:column="43">file<pos:position pos:line="527" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="49">ndx<pos:position pos:line="527" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="54">itemizing<pos:position pos:line="527" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="527" pos:column="65">code<pos:position pos:line="527" pos:column="69"/></name></expr></argument>)<pos:position pos:line="527" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="527" pos:column="71"/></expr_stmt></block></then></if>
		<return pos:line="528" pos:column="17">return;<pos:position pos:line="528" pos:column="24"/></return>
	}<pos:position pos:line="529" pos:column="10"/></block></then></if>
	<if pos:line="530" pos:column="9">if <condition pos:line="530" pos:column="12">(<expr><name pos:line="530" pos:column="13">read_batch<pos:position pos:line="530" pos:column="23"/></name></expr>)<pos:position pos:line="530" pos:column="24"/></condition><then pos:line="530" pos:column="24">
		<block type="pseudo"><return pos:line="531" pos:column="17">return;<pos:position pos:line="531" pos:column="24"/></return></block></then></if>

	<if pos:line="533" pos:column="9">if <condition pos:line="533" pos:column="12">(<expr><name pos:line="533" pos:column="13">statret<pos:position pos:line="533" pos:column="20"/></name> <operator pos:line="533" pos:column="21">!=<pos:position pos:line="533" pos:column="23"/></operator> <literal type="number" pos:line="533" pos:column="24">0<pos:position pos:line="533" pos:column="25"/></literal> <operator pos:line="533" pos:column="26">||<pos:position pos:line="533" pos:column="28"/></operator> <name pos:line="533" pos:column="29">whole_file<pos:position pos:line="533" pos:column="39"/></name></expr>)<pos:position pos:line="533" pos:column="40"/></condition><then pos:line="533" pos:column="40"> <block pos:line="533" pos:column="41">{
		<expr_stmt><expr><call><name pos:line="534" pos:column="17">write_sum_head<pos:position pos:line="534" pos:column="31"/></name><argument_list pos:line="534" pos:column="31">(<argument><expr><name pos:line="534" pos:column="32">f_out<pos:position pos:line="534" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="534" pos:column="39">NULL<pos:position pos:line="534" pos:column="43"/></name></expr></argument>)<pos:position pos:line="534" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="45"/></expr_stmt>
		<return pos:line="535" pos:column="17">return;<pos:position pos:line="535" pos:column="24"/></return>
	}<pos:position pos:line="536" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="538" pos:column="9">generate_and_send_sums<pos:position pos:line="538" pos:column="31"/></name><argument_list pos:line="538" pos:column="31">(<argument><expr><name pos:line="538" pos:column="32">fd<pos:position pos:line="538" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="538" pos:column="36">st<pos:position pos:line="538" pos:column="38"/></name><operator pos:line="538" pos:column="38">.<pos:position pos:line="538" pos:column="39"/></operator><name pos:line="538" pos:column="39">st_size<pos:position pos:line="538" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="538" pos:column="48">f_out<pos:position pos:line="538" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="538" pos:column="55">f_copy<pos:position pos:line="538" pos:column="61"/></name></expr></argument>)<pos:position pos:line="538" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="538" pos:column="63"/></expr_stmt>

	<if pos:line="540" pos:column="9">if <condition pos:line="540" pos:column="12">(<expr><name pos:line="540" pos:column="13">f_copy<pos:position pos:line="540" pos:column="19"/></name> <operator pos:line="540" pos:column="20">&gt;=<pos:position pos:line="540" pos:column="25"/></operator> <literal type="number" pos:line="540" pos:column="23">0<pos:position pos:line="540" pos:column="24"/></literal></expr>)<pos:position pos:line="540" pos:column="25"/></condition><then pos:line="540" pos:column="25"> <block pos:line="540" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="541" pos:column="17">close<pos:position pos:line="541" pos:column="22"/></name><argument_list pos:line="541" pos:column="22">(<argument><expr><name pos:line="541" pos:column="23">f_copy<pos:position pos:line="541" pos:column="29"/></name></expr></argument>)<pos:position pos:line="541" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="541" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="542" pos:column="17">set_perms<pos:position pos:line="542" pos:column="26"/></name><argument_list pos:line="542" pos:column="26">(<argument><expr><name pos:line="542" pos:column="27">backupptr<pos:position pos:line="542" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="542" pos:column="38">back_file<pos:position pos:line="542" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="542" pos:column="49">NULL<pos:position pos:line="542" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="542" pos:column="55">0<pos:position pos:line="542" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="542" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="542" pos:column="58"/></expr_stmt>
		<if pos:line="543" pos:column="17">if <condition pos:line="543" pos:column="20">(<expr><name pos:line="543" pos:column="21">verbose<pos:position pos:line="543" pos:column="28"/></name> <operator pos:line="543" pos:column="29">&gt;<pos:position pos:line="543" pos:column="33"/></operator> <literal type="number" pos:line="543" pos:column="31">1<pos:position pos:line="543" pos:column="32"/></literal></expr>)<pos:position pos:line="543" pos:column="33"/></condition><then pos:line="543" pos:column="33"> <block pos:line="543" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="544" pos:column="25">rprintf<pos:position pos:line="544" pos:column="32"/></name><argument_list pos:line="544" pos:column="32">(<argument><expr><name pos:line="544" pos:column="33">FINFO<pos:position pos:line="544" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="544" pos:column="40">"backed up %s to %s\n"<pos:position pos:line="544" pos:column="62"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="545" pos:column="33">safe_fname<pos:position pos:line="545" pos:column="43"/></name><argument_list pos:line="545" pos:column="43">(<argument><expr><name pos:line="545" pos:column="44">fname<pos:position pos:line="545" pos:column="49"/></name></expr></argument>)<pos:position pos:line="545" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="545" pos:column="52">safe_fname<pos:position pos:line="545" pos:column="62"/></name><argument_list pos:line="545" pos:column="62">(<argument><expr><name pos:line="545" pos:column="63">backupptr<pos:position pos:line="545" pos:column="72"/></name></expr></argument>)<pos:position pos:line="545" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="545" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="545" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="546" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="547" pos:column="17">free<pos:position pos:line="547" pos:column="21"/></name><argument_list pos:line="547" pos:column="21">(<argument><expr><name pos:line="547" pos:column="22">back_file<pos:position pos:line="547" pos:column="31"/></name></expr></argument>)<pos:position pos:line="547" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="547" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="548" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="550" pos:column="9">close<pos:position pos:line="550" pos:column="14"/></name><argument_list pos:line="550" pos:column="14">(<argument><expr><name pos:line="550" pos:column="15">fd<pos:position pos:line="550" pos:column="17"/></name></expr></argument>)<pos:position pos:line="550" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="550" pos:column="19"/></expr_stmt>
}<pos:position pos:line="551" pos:column="2"/></block></function></unit>

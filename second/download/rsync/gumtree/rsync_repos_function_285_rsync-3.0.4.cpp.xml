<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_285_rsync-3.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">recv_generator<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">fname<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">file_struct<pos:position pos:line="1" pos:column="59"/></name></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">file<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="67">int<pos:position pos:line="1" pos:column="70"/></name></type> <name pos:line="1" pos:column="71">ndx<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">itemizing<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">enum<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">logcode<pos:position pos:line="2" pos:column="55"/></name></name></type> <name pos:line="2" pos:column="56">code<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">int<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">f_out<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <name pos:line="4" pos:column="22">char<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">parent_dirname<pos:position pos:line="4" pos:column="42"/></name> <init pos:line="4" pos:column="43">= <expr><literal type="string" pos:line="4" pos:column="45">""<pos:position pos:line="4" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
	<comment type="block" pos:line="5" pos:column="9">/* Missing dir not created due to --dry-run; will still be scanned. */</comment>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name><name pos:line="6" pos:column="16">struct<pos:position pos:line="6" pos:column="22"/></name> <name pos:line="6" pos:column="23">file_struct<pos:position pos:line="6" pos:column="34"/></name></name> <modifier pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></modifier></type><name pos:line="6" pos:column="36">dry_missing_dir<pos:position pos:line="6" pos:column="51"/></name> <init pos:line="6" pos:column="52">= <expr><name pos:line="6" pos:column="54">NULL<pos:position pos:line="6" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>
	<comment type="block" pos:line="7" pos:column="9">/* Missing dir whose contents are skipped altogether due to
	 * --ignore-non-existing, daemon exclude, or mkdir failure. */</comment>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><name><name pos:line="9" pos:column="16">struct<pos:position pos:line="9" pos:column="22"/></name> <name pos:line="9" pos:column="23">file_struct<pos:position pos:line="9" pos:column="34"/></name></name> <modifier pos:line="9" pos:column="35">*<pos:position pos:line="9" pos:column="36"/></modifier></type><name pos:line="9" pos:column="36">skip_dir<pos:position pos:line="9" pos:column="44"/></name> <init pos:line="9" pos:column="45">= <expr><name pos:line="9" pos:column="47">NULL<pos:position pos:line="9" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> <type><name><name pos:line="10" pos:column="16">struct<pos:position pos:line="10" pos:column="22"/></name> <name pos:line="10" pos:column="23">file_list<pos:position pos:line="10" pos:column="32"/></name></name> <modifier pos:line="10" pos:column="33">*<pos:position pos:line="10" pos:column="34"/></modifier></type><name pos:line="10" pos:column="34">fuzzy_dirlist<pos:position pos:line="10" pos:column="47"/></name> <init pos:line="10" pos:column="48">= <expr><name pos:line="10" pos:column="50">NULL<pos:position pos:line="10" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">static<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">int<pos:position pos:line="11" pos:column="19"/></name></type> <name pos:line="11" pos:column="20">need_fuzzy_dirlist<pos:position pos:line="11" pos:column="38"/></name> <init pos:line="11" pos:column="39">= <expr><literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">file_struct<pos:position pos:line="12" pos:column="27"/></name></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">fuzzy_file<pos:position pos:line="12" pos:column="39"/></name> <init pos:line="12" pos:column="40">= <expr><name pos:line="12" pos:column="42">NULL<pos:position pos:line="12" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">fd<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><operator pos:line="13" pos:column="18">-<pos:position pos:line="13" pos:column="19"/></operator><literal type="number" pos:line="13" pos:column="19">1<pos:position pos:line="13" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="22">f_copy<pos:position pos:line="13" pos:column="28"/></name> <init pos:line="13" pos:column="29">= <expr><operator pos:line="13" pos:column="31">-<pos:position pos:line="13" pos:column="32"/></operator><literal type="number" pos:line="13" pos:column="32">1<pos:position pos:line="13" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">stat_x<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">sx<pos:position pos:line="14" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="20">real_sx<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">STRUCT_STAT<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">partial_st<pos:position pos:line="15" pos:column="31"/></name></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="16" pos:column="9">struct<pos:position pos:line="16" pos:column="15"/></name> <name pos:line="16" pos:column="16">file_struct<pos:position pos:line="16" pos:column="27"/></name></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">back_file<pos:position pos:line="16" pos:column="38"/></name> <init pos:line="16" pos:column="39">= <expr><name pos:line="16" pos:column="41">NULL<pos:position pos:line="16" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">statret<pos:position pos:line="17" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="22">real_ret<pos:position pos:line="17" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="17" pos:column="32">stat_errno<pos:position pos:line="17" pos:column="42"/></name></decl>;<pos:position pos:line="17" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">char<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">fnamecmp<pos:position pos:line="18" pos:column="23"/></name></decl>, <modifier pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="26">partialptr<pos:position pos:line="18" pos:column="36"/></name></decl>, <modifier pos:line="18" pos:column="38">*<pos:position pos:line="18" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="18" pos:column="39">backupptr<pos:position pos:line="18" pos:column="48"/></name> <init pos:line="18" pos:column="49">= <expr><name pos:line="18" pos:column="51">NULL<pos:position pos:line="18" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name></type> <name><name pos:line="19" pos:column="14">fnamecmpbuf<pos:position pos:line="19" pos:column="25"/></name><index pos:line="19" pos:column="25">[<expr><name pos:line="19" pos:column="26">MAXPATHLEN<pos:position pos:line="19" pos:column="36"/></name></expr>]<pos:position pos:line="19" pos:column="37"/></index></name></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">uchar<pos:position pos:line="20" pos:column="14"/></name></type> <name pos:line="20" pos:column="15">fnamecmp_type<pos:position pos:line="20" pos:column="28"/></name></decl>;<pos:position pos:line="20" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">del_opts<pos:position pos:line="21" pos:column="21"/></name> <init pos:line="21" pos:column="22">= <expr><ternary><condition><expr><name pos:line="21" pos:column="24">delete_mode<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">||<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">force_delete<pos:position pos:line="21" pos:column="51"/></name></expr> ?<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53"> <expr><name pos:line="21" pos:column="54">DEL_RECURSE<pos:position pos:line="21" pos:column="65"/></name></expr> <pos:position pos:line="21" pos:column="66"/></then><else pos:line="21" pos:column="66">: <expr><literal type="number" pos:line="21" pos:column="68">0<pos:position pos:line="21" pos:column="69"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="21" pos:column="70"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">is_dir<pos:position pos:line="22" pos:column="19"/></name> <init pos:line="22" pos:column="20">= <expr><ternary><condition><expr><operator pos:line="22" pos:column="22">!<pos:position pos:line="22" pos:column="23"/></operator><call><name pos:line="22" pos:column="23">S_ISDIR<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">file<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">-&gt;<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="37">mode<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44"> <expr><literal type="number" pos:line="22" pos:column="45">0<pos:position pos:line="22" pos:column="46"/></literal></expr>
		   <pos:position pos:line="23" pos:column="6"/></then><else pos:line="23" pos:column="20">: <expr><ternary><condition><expr><name pos:line="23" pos:column="22">inc_recurse<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">&amp;&amp;<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="37">ndx<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">!=<pos:position pos:line="23" pos:column="43"/></operator> <name><name pos:line="23" pos:column="44">cur_flist<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="55">ndx_start<pos:position pos:line="23" pos:column="64"/></name></name> <operator pos:line="23" pos:column="65">-<pos:position pos:line="23" pos:column="66"/></operator> <literal type="number" pos:line="23" pos:column="67">1<pos:position pos:line="23" pos:column="68"/></literal></expr> ?<pos:position pos:line="23" pos:column="70"/></condition><then pos:line="23" pos:column="70"> <expr><operator pos:line="23" pos:column="71">-<pos:position pos:line="23" pos:column="72"/></operator><literal type="number" pos:line="23" pos:column="72">1<pos:position pos:line="23" pos:column="73"/></literal></expr>
		   <pos:position pos:line="24" pos:column="6"/></then><else pos:line="24" pos:column="20">: <expr><literal type="number" pos:line="24" pos:column="22">1<pos:position pos:line="24" pos:column="23"/></literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;<pos:position pos:line="24" pos:column="24"/></decl_stmt>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">verbose<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">&gt;<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="23">2<pos:position pos:line="26" pos:column="24"/></literal></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">rprintf<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">FINFO<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="32">"recv_generator(%s,%d)\n"<pos:position pos:line="27" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="59">fname<pos:position pos:line="27" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="66">ndx<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">list_only<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">is_dir<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">&lt;<pos:position pos:line="30" pos:column="32"/></operator> <literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal>
		 <operator pos:line="31" pos:column="18">||<pos:position pos:line="31" pos:column="20"/></operator> <operator pos:line="31" pos:column="21">(<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">is_dir<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&amp;&amp;<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="32">!<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="33">implied_dirs<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">&amp;&amp;<pos:position pos:line="31" pos:column="56"/></operator> <name><name pos:line="31" pos:column="49">file<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">flags<pos:position pos:line="31" pos:column="60"/></name></name> <operator pos:line="31" pos:column="61">&amp;<pos:position pos:line="31" pos:column="66"/></operator> <name pos:line="31" pos:column="63">FLAG_IMPLIED_DIR<pos:position pos:line="31" pos:column="79"/></name><operator pos:line="31" pos:column="79">)<pos:position pos:line="31" pos:column="80"/></operator></expr>)<pos:position pos:line="31" pos:column="81"/></condition><then pos:line="31" pos:column="81">
			<block type="pseudo"><return pos:line="32" pos:column="25">return;<pos:position pos:line="32" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">list_file_entry<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">file<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
		<return pos:line="34" pos:column="17">return;<pos:position pos:line="34" pos:column="24"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">skip_dir<pos:position pos:line="37" pos:column="21"/></name></expr>)<pos:position pos:line="37" pos:column="22"/></condition><then pos:line="37" pos:column="22"> <block pos:line="37" pos:column="23">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">is_below<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">file<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="36">skip_dir<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="46"/></condition><then pos:line="38" pos:column="46"> <block pos:line="38" pos:column="47">{
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">is_dir<pos:position pos:line="39" pos:column="35"/></name></expr>)<pos:position pos:line="39" pos:column="36"/></condition><then pos:line="39" pos:column="36">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="33">file<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">flags<pos:position pos:line="40" pos:column="44"/></name></name> <operator pos:line="40" pos:column="45">|=<pos:position pos:line="40" pos:column="47"/></operator> <name pos:line="40" pos:column="48">FLAG_MISSING_DIR<pos:position pos:line="40" pos:column="64"/></name></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt></block></then>
<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef<pos:position pos:line="41" pos:column="7"/></cpp:directive> <name pos:line="41" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="41" pos:column="26"/></name></cpp:ifdef>
			<elseif pos:line="42" pos:column="25">else <if pos:line="42" pos:column="30">if <condition pos:line="42" pos:column="33">(<expr><call><name pos:line="42" pos:column="34">F_IS_HLINKED<pos:position pos:line="42" pos:column="46"/></name><argument_list pos:line="42" pos:column="46">(<argument><expr><name pos:line="42" pos:column="47">file<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="33">handle_skipped_hlink<pos:position pos:line="43" pos:column="53"/></name><argument_list pos:line="43" pos:column="53">(<argument><expr><name pos:line="43" pos:column="54">file<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">itemizing<pos:position pos:line="43" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="71">code<pos:position pos:line="43" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="77">f_out<pos:position pos:line="43" pos:column="82"/></name></expr></argument>)<pos:position pos:line="43" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="84"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
			<return pos:line="45" pos:column="25">return;<pos:position pos:line="45" pos:column="32"/></return>
		}<pos:position pos:line="46" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="47" pos:column="17">skip_dir<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">NULL<pos:position pos:line="47" pos:column="32"/></name></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name><name pos:line="50" pos:column="13">daemon_filter_list<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">.<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">head<pos:position pos:line="50" pos:column="36"/></name></name> <operator pos:line="50" pos:column="37">&amp;&amp;<pos:position pos:line="50" pos:column="47"/></operator> <operator pos:line="50" pos:column="40">(<pos:position pos:line="50" pos:column="41"/></operator><operator pos:line="50" pos:column="41">*<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">fname<pos:position pos:line="50" pos:column="47"/></name> <operator pos:line="50" pos:column="48">!=<pos:position pos:line="50" pos:column="50"/></operator> <literal type="char" pos:line="50" pos:column="51">'.'<pos:position pos:line="50" pos:column="54"/></literal> <operator pos:line="50" pos:column="55">||<pos:position pos:line="50" pos:column="57"/></operator> <name><name pos:line="50" pos:column="58">fname<pos:position pos:line="50" pos:column="63"/></name><index pos:line="50" pos:column="63">[<expr><literal type="number" pos:line="50" pos:column="64">1<pos:position pos:line="50" pos:column="65"/></literal></expr>]<pos:position pos:line="50" pos:column="66"/></index></name><operator pos:line="50" pos:column="66">)<pos:position pos:line="50" pos:column="67"/></operator></expr>)<pos:position pos:line="50" pos:column="68"/></condition><then pos:line="50" pos:column="68"> <block pos:line="50" pos:column="69">{
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><call><name pos:line="51" pos:column="21">check_filter<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="35">daemon_filter_list<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">FLOG<pos:position pos:line="51" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="61">fname<pos:position pos:line="51" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="68">is_dir<pos:position pos:line="51" pos:column="74"/></name></expr></argument>)<pos:position pos:line="51" pos:column="75"/></argument_list></call> <operator pos:line="51" pos:column="76">&lt;<pos:position pos:line="51" pos:column="80"/></operator> <literal type="number" pos:line="51" pos:column="78">0<pos:position pos:line="51" pos:column="79"/></literal></expr>)<pos:position pos:line="51" pos:column="80"/></condition><then pos:line="51" pos:column="80"> <block pos:line="51" pos:column="81">{
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><name pos:line="52" pos:column="29">is_dir<pos:position pos:line="52" pos:column="35"/></name> <operator pos:line="52" pos:column="36">&lt;<pos:position pos:line="52" pos:column="40"/></operator> <literal type="number" pos:line="52" pos:column="38">0<pos:position pos:line="52" pos:column="39"/></literal></expr>)<pos:position pos:line="52" pos:column="40"/></condition><then pos:line="52" pos:column="40">
				<block type="pseudo"><return pos:line="53" pos:column="33">return;<pos:position pos:line="53" pos:column="40"/></return></block></then></if>
<cpp:ifdef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifdef<pos:position pos:line="54" pos:column="7"/></cpp:directive> <name pos:line="54" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="54" pos:column="26"/></name></cpp:ifdef>
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><call><name pos:line="55" pos:column="29">F_IS_HLINKED<pos:position pos:line="55" pos:column="41"/></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name pos:line="55" pos:column="42">file<pos:position pos:line="55" pos:column="46"/></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="48"/></condition><then pos:line="55" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="33">handle_skipped_hlink<pos:position pos:line="56" pos:column="53"/></name><argument_list pos:line="56" pos:column="53">(<argument><expr><name pos:line="56" pos:column="54">file<pos:position pos:line="56" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">itemizing<pos:position pos:line="56" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="71">code<pos:position pos:line="56" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="77">f_out<pos:position pos:line="56" pos:column="82"/></name></expr></argument>)<pos:position pos:line="56" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="84"/></expr_stmt></block></then></if>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">rprintf<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">FERROR_XFER<pos:position pos:line="58" pos:column="44"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="59" pos:column="33">"skipping daemon-excluded %s \"%s\"\n"<pos:position pos:line="59" pos:column="71"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="60" pos:column="33">is_dir<pos:position pos:line="60" pos:column="39"/></name></expr> ?<pos:position pos:line="60" pos:column="41"/></condition><then pos:line="60" pos:column="41"> <expr><literal type="string" pos:line="60" pos:column="42">"directory"<pos:position pos:line="60" pos:column="53"/></literal></expr> <pos:position pos:line="60" pos:column="54"/></then><else pos:line="60" pos:column="54">: <expr><literal type="string" pos:line="60" pos:column="56">"file"<pos:position pos:line="60" pos:column="62"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="60" pos:column="64">fname<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="71"/></expr_stmt>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><name pos:line="61" pos:column="29">is_dir<pos:position pos:line="61" pos:column="35"/></name></expr>)<pos:position pos:line="61" pos:column="36"/></condition><then pos:line="61" pos:column="36">
				<block type="pseudo"><goto pos:line="62" pos:column="33">goto <name pos:line="62" pos:column="38">skipping_dir_contents<pos:position pos:line="62" pos:column="59"/></name>;<pos:position pos:line="62" pos:column="60"/></goto></block></then></if>
			<return pos:line="63" pos:column="25">return;<pos:position pos:line="63" pos:column="32"/></return>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
	}<pos:position pos:line="65" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifdef<pos:position pos:line="67" pos:column="7"/></cpp:directive> <name pos:line="67" pos:column="8">SUPPORT_ACLS<pos:position pos:line="67" pos:column="20"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="68" pos:column="9">sx<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">.<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">acc_acl<pos:position pos:line="68" pos:column="19"/></name></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <name><name pos:line="68" pos:column="22">sx<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">.<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="25">def_acl<pos:position pos:line="68" pos:column="32"/></name></name> <operator pos:line="68" pos:column="33">=<pos:position pos:line="68" pos:column="34"/></operator> <name pos:line="68" pos:column="35">NULL<pos:position pos:line="68" pos:column="39"/></name></expr>;<pos:position pos:line="68" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">ifdef<pos:position pos:line="70" pos:column="7"/></cpp:directive> <name pos:line="70" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="70" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="71" pos:column="9">sx<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">.<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="12">xattr<pos:position pos:line="71" pos:column="17"/></name></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <name pos:line="71" pos:column="20">NULL<pos:position pos:line="71" pos:column="24"/></name></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif<pos:position pos:line="72" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">dry_run<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">&gt;<pos:position pos:line="73" pos:column="25"/></operator> <literal type="number" pos:line="73" pos:column="23">1<pos:position pos:line="73" pos:column="24"/></literal> <operator pos:line="73" pos:column="25">||<pos:position pos:line="73" pos:column="27"/></operator> <operator pos:line="73" pos:column="28">(<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="29">dry_missing_dir<pos:position pos:line="73" pos:column="44"/></name> <operator pos:line="73" pos:column="45">&amp;&amp;<pos:position pos:line="73" pos:column="55"/></operator> <call><name pos:line="73" pos:column="48">is_below<pos:position pos:line="73" pos:column="56"/></name><argument_list pos:line="73" pos:column="56">(<argument><expr><name pos:line="73" pos:column="57">file<pos:position pos:line="73" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="63">dry_missing_dir<pos:position pos:line="73" pos:column="78"/></name></expr></argument>)<pos:position pos:line="73" pos:column="79"/></argument_list></call><operator pos:line="73" pos:column="79">)<pos:position pos:line="73" pos:column="80"/></operator></expr>)<pos:position pos:line="73" pos:column="81"/></condition><then pos:line="73" pos:column="81"> <block pos:line="73" pos:column="82">{
	  <label><name pos:line="74" pos:column="11">parent_is_dry_missing<pos:position pos:line="74" pos:column="32"/></name>:<pos:position pos:line="74" pos:column="33"/></label>
		<if pos:line="75" pos:column="17">if <condition pos:line="75" pos:column="20">(<expr><name pos:line="75" pos:column="21">fuzzy_dirlist<pos:position pos:line="75" pos:column="34"/></name></expr>)<pos:position pos:line="75" pos:column="35"/></condition><then pos:line="75" pos:column="35"> <block pos:line="75" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">flist_free<pos:position pos:line="76" pos:column="35"/></name><argument_list pos:line="76" pos:column="35">(<argument><expr><name pos:line="76" pos:column="36">fuzzy_dirlist<pos:position pos:line="76" pos:column="49"/></name></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="77" pos:column="25">fuzzy_dirlist<pos:position pos:line="77" pos:column="38"/></name> <operator pos:line="77" pos:column="39">=<pos:position pos:line="77" pos:column="40"/></operator> <name pos:line="77" pos:column="41">NULL<pos:position pos:line="77" pos:column="45"/></name></expr>;<pos:position pos:line="77" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="78" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="79" pos:column="17">parent_dirname<pos:position pos:line="79" pos:column="31"/></name> <operator pos:line="79" pos:column="32">=<pos:position pos:line="79" pos:column="33"/></operator> <literal type="string" pos:line="79" pos:column="34">""<pos:position pos:line="79" pos:column="36"/></literal></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="80" pos:column="17">statret<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <operator pos:line="80" pos:column="27">-<pos:position pos:line="80" pos:column="28"/></operator><literal type="number" pos:line="80" pos:column="28">1<pos:position pos:line="80" pos:column="29"/></literal></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="81" pos:column="17">stat_errno<pos:position pos:line="81" pos:column="27"/></name> <operator pos:line="81" pos:column="28">=<pos:position pos:line="81" pos:column="29"/></operator> <name pos:line="81" pos:column="30">ENOENT<pos:position pos:line="81" pos:column="36"/></name></expr>;<pos:position pos:line="81" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="82" pos:column="10"/></block></then> <else pos:line="82" pos:column="11">else <block pos:line="82" pos:column="16">{
		<decl_stmt><decl><type><specifier pos:line="83" pos:column="17">const<pos:position pos:line="83" pos:column="22"/></specifier> <name pos:line="83" pos:column="23">char<pos:position pos:line="83" pos:column="27"/></name> <modifier pos:line="83" pos:column="28">*<pos:position pos:line="83" pos:column="29"/></modifier></type><name pos:line="83" pos:column="29">dn<pos:position pos:line="83" pos:column="31"/></name> <init pos:line="83" pos:column="32">= <expr><ternary><condition><expr><name><name pos:line="83" pos:column="34">file<pos:position pos:line="83" pos:column="38"/></name><operator pos:line="83" pos:column="38">-&gt;<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="40">dirname<pos:position pos:line="83" pos:column="47"/></name></name></expr> ?<pos:position pos:line="83" pos:column="49"/></condition><then pos:line="83" pos:column="49"> <expr><name><name pos:line="83" pos:column="50">file<pos:position pos:line="83" pos:column="54"/></name><operator pos:line="83" pos:column="54">-&gt;<pos:position pos:line="83" pos:column="59"/></operator><name pos:line="83" pos:column="56">dirname<pos:position pos:line="83" pos:column="63"/></name></name></expr> <pos:position pos:line="83" pos:column="64"/></then><else pos:line="83" pos:column="64">: <expr><literal type="string" pos:line="83" pos:column="66">"."<pos:position pos:line="83" pos:column="69"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="83" pos:column="70"/></decl_stmt>
		<expr_stmt><expr><name pos:line="84" pos:column="17">dry_missing_dir<pos:position pos:line="84" pos:column="32"/></name> <operator pos:line="84" pos:column="33">=<pos:position pos:line="84" pos:column="34"/></operator> <name pos:line="84" pos:column="35">NULL<pos:position pos:line="84" pos:column="39"/></name></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name pos:line="85" pos:column="21">parent_dirname<pos:position pos:line="85" pos:column="35"/></name> <operator pos:line="85" pos:column="36">!=<pos:position pos:line="85" pos:column="38"/></operator> <name pos:line="85" pos:column="39">dn<pos:position pos:line="85" pos:column="41"/></name> <operator pos:line="85" pos:column="42">&amp;&amp;<pos:position pos:line="85" pos:column="52"/></operator> <call><name pos:line="85" pos:column="45">strcmp<pos:position pos:line="85" pos:column="51"/></name><argument_list pos:line="85" pos:column="51">(<argument><expr><name pos:line="85" pos:column="52">parent_dirname<pos:position pos:line="85" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="68">dn<pos:position pos:line="85" pos:column="70"/></name></expr></argument>)<pos:position pos:line="85" pos:column="71"/></argument_list></call> <operator pos:line="85" pos:column="72">!=<pos:position pos:line="85" pos:column="74"/></operator> <literal type="number" pos:line="85" pos:column="75">0<pos:position pos:line="85" pos:column="76"/></literal></expr>)<pos:position pos:line="85" pos:column="77"/></condition><then pos:line="85" pos:column="77"> <block pos:line="85" pos:column="78">{
			<if pos:line="86" pos:column="25">if <condition pos:line="86" pos:column="28">(<expr><name pos:line="86" pos:column="29">relative_paths<pos:position pos:line="86" pos:column="43"/></name> <operator pos:line="86" pos:column="44">&amp;&amp;<pos:position pos:line="86" pos:column="54"/></operator> <operator pos:line="86" pos:column="47">!<pos:position pos:line="86" pos:column="48"/></operator><name pos:line="86" pos:column="48">implied_dirs<pos:position pos:line="86" pos:column="60"/></name>
			 <operator pos:line="87" pos:column="26">&amp;&amp;<pos:position pos:line="87" pos:column="36"/></operator> <call><name pos:line="87" pos:column="29">do_stat<pos:position pos:line="87" pos:column="36"/></name><argument_list pos:line="87" pos:column="36">(<argument><expr><name pos:line="87" pos:column="37">dn<pos:position pos:line="87" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="41">&amp;<pos:position pos:line="87" pos:column="46"/></operator><name><name pos:line="87" pos:column="42">sx<pos:position pos:line="87" pos:column="44"/></name><operator pos:line="87" pos:column="44">.<pos:position pos:line="87" pos:column="45"/></operator><name pos:line="87" pos:column="45">st<pos:position pos:line="87" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call> <operator pos:line="87" pos:column="49">&lt;<pos:position pos:line="87" pos:column="53"/></operator> <literal type="number" pos:line="87" pos:column="51">0<pos:position pos:line="87" pos:column="52"/></literal></expr>)<pos:position pos:line="87" pos:column="53"/></condition><then pos:line="87" pos:column="53"> <block pos:line="87" pos:column="54">{
				<if pos:line="88" pos:column="33">if <condition pos:line="88" pos:column="36">(<expr><name pos:line="88" pos:column="37">dry_run<pos:position pos:line="88" pos:column="44"/></name></expr>)<pos:position pos:line="88" pos:column="45"/></condition><then pos:line="88" pos:column="45">
					<block type="pseudo"><goto pos:line="89" pos:column="41">goto <name pos:line="89" pos:column="46">parent_is_dry_missing<pos:position pos:line="89" pos:column="67"/></name>;<pos:position pos:line="89" pos:column="68"/></goto></block></then></if>
				<if pos:line="90" pos:column="33">if <condition pos:line="90" pos:column="36">(<expr><call><name pos:line="90" pos:column="37">create_directory_path<pos:position pos:line="90" pos:column="58"/></name><argument_list pos:line="90" pos:column="58">(<argument><expr><name pos:line="90" pos:column="59">fname<pos:position pos:line="90" pos:column="64"/></name></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call> <operator pos:line="90" pos:column="66">&lt;<pos:position pos:line="90" pos:column="70"/></operator> <literal type="number" pos:line="90" pos:column="68">0<pos:position pos:line="90" pos:column="69"/></literal></expr>)<pos:position pos:line="90" pos:column="70"/></condition><then pos:line="90" pos:column="70"> <block pos:line="90" pos:column="71">{
					<expr_stmt><expr><call><name pos:line="91" pos:column="41">rsyserr<pos:position pos:line="91" pos:column="48"/></name><argument_list pos:line="91" pos:column="48">(<argument><expr><name pos:line="91" pos:column="49">FERROR_XFER<pos:position pos:line="91" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="62">errno<pos:position pos:line="91" pos:column="67"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="92" pos:column="49">"recv_generator: mkdir %s failed"<pos:position pos:line="92" pos:column="82"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="93" pos:column="49">full_fname<pos:position pos:line="93" pos:column="59"/></name><argument_list pos:line="93" pos:column="59">(<argument><expr><name pos:line="93" pos:column="60">dn<pos:position pos:line="93" pos:column="62"/></name></expr></argument>)<pos:position pos:line="93" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="65"/></expr_stmt>
				}<pos:position pos:line="94" pos:column="34"/></block></then></if>
			}<pos:position pos:line="95" pos:column="26"/></block></then></if>
			<if pos:line="96" pos:column="25">if <condition pos:line="96" pos:column="28">(<expr><name pos:line="96" pos:column="29">fuzzy_dirlist<pos:position pos:line="96" pos:column="42"/></name></expr>)<pos:position pos:line="96" pos:column="43"/></condition><then pos:line="96" pos:column="43"> <block pos:line="96" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="97" pos:column="33">flist_free<pos:position pos:line="97" pos:column="43"/></name><argument_list pos:line="97" pos:column="43">(<argument><expr><name pos:line="97" pos:column="44">fuzzy_dirlist<pos:position pos:line="97" pos:column="57"/></name></expr></argument>)<pos:position pos:line="97" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><name pos:line="98" pos:column="33">fuzzy_dirlist<pos:position pos:line="98" pos:column="46"/></name> <operator pos:line="98" pos:column="47">=<pos:position pos:line="98" pos:column="48"/></operator> <name pos:line="98" pos:column="49">NULL<pos:position pos:line="98" pos:column="53"/></name></expr>;<pos:position pos:line="98" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="99" pos:column="26"/></block></then></if>
			<if pos:line="100" pos:column="25">if <condition pos:line="100" pos:column="28">(<expr><name pos:line="100" pos:column="29">fuzzy_basis<pos:position pos:line="100" pos:column="40"/></name></expr>)<pos:position pos:line="100" pos:column="41"/></condition><then pos:line="100" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="33">need_fuzzy_dirlist<pos:position pos:line="101" pos:column="51"/></name> <operator pos:line="101" pos:column="52">=<pos:position pos:line="101" pos:column="53"/></operator> <literal type="number" pos:line="101" pos:column="54">1<pos:position pos:line="101" pos:column="55"/></literal></expr>;<pos:position pos:line="101" pos:column="56"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">ifdef<pos:position pos:line="102" pos:column="7"/></cpp:directive> <name pos:line="102" pos:column="8">SUPPORT_ACLS<pos:position pos:line="102" pos:column="20"/></name></cpp:ifdef>
			<if pos:line="103" pos:column="25">if <condition pos:line="103" pos:column="28">(<expr><operator pos:line="103" pos:column="29">!<pos:position pos:line="103" pos:column="30"/></operator><name pos:line="103" pos:column="30">preserve_perms<pos:position pos:line="103" pos:column="44"/></name></expr>)<pos:position pos:line="103" pos:column="45"/></condition><then pos:line="103" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="33">dflt_perms<pos:position pos:line="104" pos:column="43"/></name> <operator pos:line="104" pos:column="44">=<pos:position pos:line="104" pos:column="45"/></operator> <call><name pos:line="104" pos:column="46">default_perms_for_dir<pos:position pos:line="104" pos:column="67"/></name><argument_list pos:line="104" pos:column="67">(<argument><expr><name pos:line="104" pos:column="68">dn<pos:position pos:line="104" pos:column="70"/></name></expr></argument>)<pos:position pos:line="104" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="72"/></expr_stmt></block></then></if>
<cpp:endif pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">endif<pos:position pos:line="105" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="106" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="107" pos:column="17">parent_dirname<pos:position pos:line="107" pos:column="31"/></name> <operator pos:line="107" pos:column="32">=<pos:position pos:line="107" pos:column="33"/></operator> <name pos:line="107" pos:column="34">dn<pos:position pos:line="107" pos:column="36"/></name></expr>;<pos:position pos:line="107" pos:column="37"/></expr_stmt>

		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name pos:line="109" pos:column="21">need_fuzzy_dirlist<pos:position pos:line="109" pos:column="39"/></name> <operator pos:line="109" pos:column="40">&amp;&amp;<pos:position pos:line="109" pos:column="50"/></operator> <call><name pos:line="109" pos:column="43">S_ISREG<pos:position pos:line="109" pos:column="50"/></name><argument_list pos:line="109" pos:column="50">(<argument><expr><name><name pos:line="109" pos:column="51">file<pos:position pos:line="109" pos:column="55"/></name><operator pos:line="109" pos:column="55">-&gt;<pos:position pos:line="109" pos:column="60"/></operator><name pos:line="109" pos:column="57">mode<pos:position pos:line="109" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="63"/></condition><then pos:line="109" pos:column="63"> <block pos:line="109" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">strlcpy<pos:position pos:line="110" pos:column="32"/></name><argument_list pos:line="110" pos:column="32">(<argument><expr><name pos:line="110" pos:column="33">fnamecmpbuf<pos:position pos:line="110" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="46">dn<pos:position pos:line="110" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="110" pos:column="50">sizeof <name pos:line="110" pos:column="57">fnamecmpbuf<pos:position pos:line="110" pos:column="68"/></name></sizeof></expr></argument>)<pos:position pos:line="110" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="70"/></expr_stmt>
			<expr_stmt><expr><name pos:line="111" pos:column="25">fuzzy_dirlist<pos:position pos:line="111" pos:column="38"/></name> <operator pos:line="111" pos:column="39">=<pos:position pos:line="111" pos:column="40"/></operator> <call><name pos:line="111" pos:column="41">get_dirlist<pos:position pos:line="111" pos:column="52"/></name><argument_list pos:line="111" pos:column="52">(<argument><expr><name pos:line="111" pos:column="53">fnamecmpbuf<pos:position pos:line="111" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="111" pos:column="66">-<pos:position pos:line="111" pos:column="67"/></operator><literal type="number" pos:line="111" pos:column="67">1<pos:position pos:line="111" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="70">1<pos:position pos:line="111" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><name pos:line="112" pos:column="25">need_fuzzy_dirlist<pos:position pos:line="112" pos:column="43"/></name> <operator pos:line="112" pos:column="44">=<pos:position pos:line="112" pos:column="45"/></operator> <literal type="number" pos:line="112" pos:column="46">0<pos:position pos:line="112" pos:column="47"/></literal></expr>;<pos:position pos:line="112" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="113" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="115" pos:column="17">statret<pos:position pos:line="115" pos:column="24"/></name> <operator pos:line="115" pos:column="25">=<pos:position pos:line="115" pos:column="26"/></operator> <call><name pos:line="115" pos:column="27">link_stat<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><name pos:line="115" pos:column="37">fname<pos:position pos:line="115" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="44">&amp;<pos:position pos:line="115" pos:column="49"/></operator><name><name pos:line="115" pos:column="45">sx<pos:position pos:line="115" pos:column="47"/></name><operator pos:line="115" pos:column="47">.<pos:position pos:line="115" pos:column="48"/></operator><name pos:line="115" pos:column="48">st<pos:position pos:line="115" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="52">keep_dirlinks<pos:position pos:line="115" pos:column="65"/></name> <operator pos:line="115" pos:column="66">&amp;&amp;<pos:position pos:line="115" pos:column="76"/></operator> <name pos:line="115" pos:column="69">is_dir<pos:position pos:line="115" pos:column="75"/></name></expr></argument>)<pos:position pos:line="115" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="116" pos:column="17">stat_errno<pos:position pos:line="116" pos:column="27"/></name> <operator pos:line="116" pos:column="28">=<pos:position pos:line="116" pos:column="29"/></operator> <name pos:line="116" pos:column="30">errno<pos:position pos:line="116" pos:column="35"/></name></expr>;<pos:position pos:line="116" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="117" pos:column="10"/></block></else></if>

	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">ignore_non_existing<pos:position pos:line="119" pos:column="32"/></name> <operator pos:line="119" pos:column="33">&gt;<pos:position pos:line="119" pos:column="37"/></operator> <literal type="number" pos:line="119" pos:column="35">0<pos:position pos:line="119" pos:column="36"/></literal> <operator pos:line="119" pos:column="37">&amp;&amp;<pos:position pos:line="119" pos:column="47"/></operator> <name pos:line="119" pos:column="40">statret<pos:position pos:line="119" pos:column="47"/></name> <operator pos:line="119" pos:column="48">==<pos:position pos:line="119" pos:column="50"/></operator> <operator pos:line="119" pos:column="51">-<pos:position pos:line="119" pos:column="52"/></operator><literal type="number" pos:line="119" pos:column="52">1<pos:position pos:line="119" pos:column="53"/></literal> <operator pos:line="119" pos:column="54">&amp;&amp;<pos:position pos:line="119" pos:column="64"/></operator> <name pos:line="119" pos:column="57">stat_errno<pos:position pos:line="119" pos:column="67"/></name> <operator pos:line="119" pos:column="68">==<pos:position pos:line="119" pos:column="70"/></operator> <name pos:line="119" pos:column="71">ENOENT<pos:position pos:line="119" pos:column="77"/></name></expr>)<pos:position pos:line="119" pos:column="78"/></condition><then pos:line="119" pos:column="78"> <block pos:line="119" pos:column="79">{
		<if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><name pos:line="120" pos:column="21">is_dir<pos:position pos:line="120" pos:column="27"/></name></expr>)<pos:position pos:line="120" pos:column="28"/></condition><then pos:line="120" pos:column="28"> <block pos:line="120" pos:column="29">{
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><name pos:line="121" pos:column="29">is_dir<pos:position pos:line="121" pos:column="35"/></name> <operator pos:line="121" pos:column="36">&lt;<pos:position pos:line="121" pos:column="40"/></operator> <literal type="number" pos:line="121" pos:column="38">0<pos:position pos:line="121" pos:column="39"/></literal></expr>)<pos:position pos:line="121" pos:column="40"/></condition><then pos:line="121" pos:column="40">
				<block type="pseudo"><return pos:line="122" pos:column="33">return;<pos:position pos:line="122" pos:column="40"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="123" pos:column="25">skip_dir<pos:position pos:line="123" pos:column="33"/></name> <operator pos:line="123" pos:column="34">=<pos:position pos:line="123" pos:column="35"/></operator> <name pos:line="123" pos:column="36">file<pos:position pos:line="123" pos:column="40"/></name></expr>;<pos:position pos:line="123" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="124" pos:column="25">file<pos:position pos:line="124" pos:column="29"/></name><operator pos:line="124" pos:column="29">-&gt;<pos:position pos:line="124" pos:column="34"/></operator><name pos:line="124" pos:column="31">flags<pos:position pos:line="124" pos:column="36"/></name></name> <operator pos:line="124" pos:column="37">|=<pos:position pos:line="124" pos:column="39"/></operator> <name pos:line="124" pos:column="40">FLAG_MISSING_DIR<pos:position pos:line="124" pos:column="56"/></name></expr>;<pos:position pos:line="124" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="125" pos:column="18"/></block></then>
<cpp:ifdef pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">ifdef<pos:position pos:line="126" pos:column="7"/></cpp:directive> <name pos:line="126" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="126" pos:column="26"/></name></cpp:ifdef>
		<elseif pos:line="127" pos:column="17">else <if pos:line="127" pos:column="22">if <condition pos:line="127" pos:column="25">(<expr><call><name pos:line="127" pos:column="26">F_IS_HLINKED<pos:position pos:line="127" pos:column="38"/></name><argument_list pos:line="127" pos:column="38">(<argument><expr><name pos:line="127" pos:column="39">file<pos:position pos:line="127" pos:column="43"/></name></expr></argument>)<pos:position pos:line="127" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="45"/></condition><then pos:line="127" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="25">handle_skipped_hlink<pos:position pos:line="128" pos:column="45"/></name><argument_list pos:line="128" pos:column="45">(<argument><expr><name pos:line="128" pos:column="46">file<pos:position pos:line="128" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="52">itemizing<pos:position pos:line="128" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="63">code<pos:position pos:line="128" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="69">f_out<pos:position pos:line="128" pos:column="74"/></name></expr></argument>)<pos:position pos:line="128" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="76"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">endif<pos:position pos:line="129" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><name pos:line="130" pos:column="21">verbose<pos:position pos:line="130" pos:column="28"/></name> <operator pos:line="130" pos:column="29">&gt;<pos:position pos:line="130" pos:column="33"/></operator> <literal type="number" pos:line="130" pos:column="31">1<pos:position pos:line="130" pos:column="32"/></literal></expr>)<pos:position pos:line="130" pos:column="33"/></condition><then pos:line="130" pos:column="33"> <block pos:line="130" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="131" pos:column="25">rprintf<pos:position pos:line="131" pos:column="32"/></name><argument_list pos:line="131" pos:column="32">(<argument><expr><name pos:line="131" pos:column="33">FINFO<pos:position pos:line="131" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="40">"not creating new %s \"%s\"\n"<pos:position pos:line="131" pos:column="70"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="132" pos:column="33">is_dir<pos:position pos:line="132" pos:column="39"/></name></expr> ?<pos:position pos:line="132" pos:column="41"/></condition><then pos:line="132" pos:column="41"> <expr><literal type="string" pos:line="132" pos:column="42">"directory"<pos:position pos:line="132" pos:column="53"/></literal></expr> <pos:position pos:line="132" pos:column="54"/></then><else pos:line="132" pos:column="54">: <expr><literal type="string" pos:line="132" pos:column="56">"file"<pos:position pos:line="132" pos:column="62"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="132" pos:column="64">fname<pos:position pos:line="132" pos:column="69"/></name></expr></argument>)<pos:position pos:line="132" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="133" pos:column="18"/></block></then></if>
		<return pos:line="134" pos:column="17">return;<pos:position pos:line="134" pos:column="24"/></return>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>

	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">statret<pos:position pos:line="137" pos:column="20"/></name> <operator pos:line="137" pos:column="21">==<pos:position pos:line="137" pos:column="23"/></operator> <literal type="number" pos:line="137" pos:column="24">0<pos:position pos:line="137" pos:column="25"/></literal> <operator pos:line="137" pos:column="26">&amp;&amp;<pos:position pos:line="137" pos:column="36"/></operator> <operator pos:line="137" pos:column="29">!<pos:position pos:line="137" pos:column="30"/></operator><operator pos:line="137" pos:column="30">(<pos:position pos:line="137" pos:column="31"/></operator><name><name pos:line="137" pos:column="31">sx<pos:position pos:line="137" pos:column="33"/></name><operator pos:line="137" pos:column="33">.<pos:position pos:line="137" pos:column="34"/></operator><name pos:line="137" pos:column="34">st<pos:position pos:line="137" pos:column="36"/></name><operator pos:line="137" pos:column="36">.<pos:position pos:line="137" pos:column="37"/></operator><name pos:line="137" pos:column="37">st_mode<pos:position pos:line="137" pos:column="44"/></name></name> <operator pos:line="137" pos:column="45">&amp;<pos:position pos:line="137" pos:column="50"/></operator> <name pos:line="137" pos:column="47">S_IWUSR<pos:position pos:line="137" pos:column="54"/></name><operator pos:line="137" pos:column="54">)<pos:position pos:line="137" pos:column="55"/></operator>
	 <operator pos:line="138" pos:column="10">&amp;&amp;<pos:position pos:line="138" pos:column="20"/></operator> <operator pos:line="138" pos:column="13">!<pos:position pos:line="138" pos:column="14"/></operator><name pos:line="138" pos:column="14">am_root<pos:position pos:line="138" pos:column="21"/></name> <operator pos:line="138" pos:column="22">&amp;&amp;<pos:position pos:line="138" pos:column="32"/></operator> <name><name pos:line="138" pos:column="25">sx<pos:position pos:line="138" pos:column="27"/></name><operator pos:line="138" pos:column="27">.<pos:position pos:line="138" pos:column="28"/></operator><name pos:line="138" pos:column="28">st<pos:position pos:line="138" pos:column="30"/></name><operator pos:line="138" pos:column="30">.<pos:position pos:line="138" pos:column="31"/></operator><name pos:line="138" pos:column="31">st_uid<pos:position pos:line="138" pos:column="37"/></name></name> <operator pos:line="138" pos:column="38">==<pos:position pos:line="138" pos:column="40"/></operator> <name pos:line="138" pos:column="41">our_uid<pos:position pos:line="138" pos:column="48"/></name></expr>)<pos:position pos:line="138" pos:column="49"/></condition><then pos:line="138" pos:column="49">
		<block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="17">del_opts<pos:position pos:line="139" pos:column="25"/></name> <operator pos:line="139" pos:column="26">|=<pos:position pos:line="139" pos:column="28"/></operator> <name pos:line="139" pos:column="29">DEL_NO_UID_WRITE<pos:position pos:line="139" pos:column="45"/></name></expr>;<pos:position pos:line="139" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><name pos:line="141" pos:column="13">ignore_existing<pos:position pos:line="141" pos:column="28"/></name> <operator pos:line="141" pos:column="29">&gt;<pos:position pos:line="141" pos:column="33"/></operator> <literal type="number" pos:line="141" pos:column="31">0<pos:position pos:line="141" pos:column="32"/></literal> <operator pos:line="141" pos:column="33">&amp;&amp;<pos:position pos:line="141" pos:column="43"/></operator> <name pos:line="141" pos:column="36">statret<pos:position pos:line="141" pos:column="43"/></name> <operator pos:line="141" pos:column="44">==<pos:position pos:line="141" pos:column="46"/></operator> <literal type="number" pos:line="141" pos:column="47">0<pos:position pos:line="141" pos:column="48"/></literal>
	 <operator pos:line="142" pos:column="10">&amp;&amp;<pos:position pos:line="142" pos:column="20"/></operator> <operator pos:line="142" pos:column="13">(<pos:position pos:line="142" pos:column="14"/></operator><operator pos:line="142" pos:column="14">!<pos:position pos:line="142" pos:column="15"/></operator><name pos:line="142" pos:column="15">is_dir<pos:position pos:line="142" pos:column="21"/></name> <operator pos:line="142" pos:column="22">||<pos:position pos:line="142" pos:column="24"/></operator> <operator pos:line="142" pos:column="25">!<pos:position pos:line="142" pos:column="26"/></operator><call><name pos:line="142" pos:column="26">S_ISDIR<pos:position pos:line="142" pos:column="33"/></name><argument_list pos:line="142" pos:column="33">(<argument><expr><name><name pos:line="142" pos:column="34">sx<pos:position pos:line="142" pos:column="36"/></name><operator pos:line="142" pos:column="36">.<pos:position pos:line="142" pos:column="37"/></operator><name pos:line="142" pos:column="37">st<pos:position pos:line="142" pos:column="39"/></name><operator pos:line="142" pos:column="39">.<pos:position pos:line="142" pos:column="40"/></operator><name pos:line="142" pos:column="40">st_mode<pos:position pos:line="142" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="48"/></argument_list></call><operator pos:line="142" pos:column="48">)<pos:position pos:line="142" pos:column="49"/></operator></expr>)<pos:position pos:line="142" pos:column="50"/></condition><then pos:line="142" pos:column="50"> <block pos:line="142" pos:column="51">{
		<if pos:line="143" pos:column="17">if <condition pos:line="143" pos:column="20">(<expr><name pos:line="143" pos:column="21">verbose<pos:position pos:line="143" pos:column="28"/></name> <operator pos:line="143" pos:column="29">&gt;<pos:position pos:line="143" pos:column="33"/></operator> <literal type="number" pos:line="143" pos:column="31">1<pos:position pos:line="143" pos:column="32"/></literal> <operator pos:line="143" pos:column="33">&amp;&amp;<pos:position pos:line="143" pos:column="43"/></operator> <name pos:line="143" pos:column="36">is_dir<pos:position pos:line="143" pos:column="42"/></name> <operator pos:line="143" pos:column="43">&gt;=<pos:position pos:line="143" pos:column="48"/></operator> <literal type="number" pos:line="143" pos:column="46">0<pos:position pos:line="143" pos:column="47"/></literal></expr>)<pos:position pos:line="143" pos:column="48"/></condition><then pos:line="143" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="144" pos:column="25">rprintf<pos:position pos:line="144" pos:column="32"/></name><argument_list pos:line="144" pos:column="32">(<argument><expr><name pos:line="144" pos:column="33">FINFO<pos:position pos:line="144" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="40">"%s exists\n"<pos:position pos:line="144" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="55">fname<pos:position pos:line="144" pos:column="60"/></name></expr></argument>)<pos:position pos:line="144" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="62"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">ifdef<pos:position pos:line="145" pos:column="7"/></cpp:directive> <name pos:line="145" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="145" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="146" pos:column="17">if <condition pos:line="146" pos:column="20">(<expr><call><name pos:line="146" pos:column="21">F_IS_HLINKED<pos:position pos:line="146" pos:column="33"/></name><argument_list pos:line="146" pos:column="33">(<argument><expr><name pos:line="146" pos:column="34">file<pos:position pos:line="146" pos:column="38"/></name></expr></argument>)<pos:position pos:line="146" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="146" pos:column="40"/></condition><then pos:line="146" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="25">handle_skipped_hlink<pos:position pos:line="147" pos:column="45"/></name><argument_list pos:line="147" pos:column="45">(<argument><expr><name pos:line="147" pos:column="46">file<pos:position pos:line="147" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="52">itemizing<pos:position pos:line="147" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="63">code<pos:position pos:line="147" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="69">f_out<pos:position pos:line="147" pos:column="74"/></name></expr></argument>)<pos:position pos:line="147" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="76"/></expr_stmt></block></then></if>
<cpp:endif pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">endif<pos:position pos:line="148" pos:column="7"/></cpp:directive></cpp:endif>
		<goto pos:line="149" pos:column="17">goto <name pos:line="149" pos:column="22">cleanup<pos:position pos:line="149" pos:column="29"/></name>;<pos:position pos:line="149" pos:column="30"/></goto>
	}<pos:position pos:line="150" pos:column="10"/></block></then></if>

	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><name pos:line="152" pos:column="13">is_dir<pos:position pos:line="152" pos:column="19"/></name></expr>)<pos:position pos:line="152" pos:column="20"/></condition><then pos:line="152" pos:column="20"> <block pos:line="152" pos:column="21">{
		<if pos:line="153" pos:column="17">if <condition pos:line="153" pos:column="20">(<expr><operator pos:line="153" pos:column="21">!<pos:position pos:line="153" pos:column="22"/></operator><name pos:line="153" pos:column="22">implied_dirs<pos:position pos:line="153" pos:column="34"/></name> <operator pos:line="153" pos:column="35">&amp;&amp;<pos:position pos:line="153" pos:column="45"/></operator> <name><name pos:line="153" pos:column="38">file<pos:position pos:line="153" pos:column="42"/></name><operator pos:line="153" pos:column="42">-&gt;<pos:position pos:line="153" pos:column="47"/></operator><name pos:line="153" pos:column="44">flags<pos:position pos:line="153" pos:column="49"/></name></name> <operator pos:line="153" pos:column="50">&amp;<pos:position pos:line="153" pos:column="55"/></operator> <name pos:line="153" pos:column="52">FLAG_IMPLIED_DIR<pos:position pos:line="153" pos:column="68"/></name></expr>)<pos:position pos:line="153" pos:column="69"/></condition><then pos:line="153" pos:column="69">
			<block type="pseudo"><goto pos:line="154" pos:column="25">goto <name pos:line="154" pos:column="30">cleanup<pos:position pos:line="154" pos:column="37"/></name>;<pos:position pos:line="154" pos:column="38"/></goto></block></then></if>
		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><name pos:line="155" pos:column="21">is_dir<pos:position pos:line="155" pos:column="27"/></name> <operator pos:line="155" pos:column="28">&lt;<pos:position pos:line="155" pos:column="32"/></operator> <literal type="number" pos:line="155" pos:column="30">0<pos:position pos:line="155" pos:column="31"/></literal></expr>)<pos:position pos:line="155" pos:column="32"/></condition><then pos:line="155" pos:column="32"> <block pos:line="155" pos:column="33">{
			<comment type="block" pos:line="156" pos:column="25">/* In inc_recurse mode we want to make sure any missing
			 * directories get created while we're still processing
			 * the parent dir (which allows us to touch the parent
			 * dir's mtime right away).  We will handle the dir in
			 * full later (right before we handle its contents). */</comment>
			<if pos:line="161" pos:column="25">if <condition pos:line="161" pos:column="28">(<expr><name pos:line="161" pos:column="29">statret<pos:position pos:line="161" pos:column="36"/></name> <operator pos:line="161" pos:column="37">==<pos:position pos:line="161" pos:column="39"/></operator> <literal type="number" pos:line="161" pos:column="40">0<pos:position pos:line="161" pos:column="41"/></literal>
			 <operator pos:line="162" pos:column="26">&amp;&amp;<pos:position pos:line="162" pos:column="36"/></operator> <operator pos:line="162" pos:column="29">(<pos:position pos:line="162" pos:column="30"/></operator><call><name pos:line="162" pos:column="30">S_ISDIR<pos:position pos:line="162" pos:column="37"/></name><argument_list pos:line="162" pos:column="37">(<argument><expr><name><name pos:line="162" pos:column="38">sx<pos:position pos:line="162" pos:column="40"/></name><operator pos:line="162" pos:column="40">.<pos:position pos:line="162" pos:column="41"/></operator><name pos:line="162" pos:column="41">st<pos:position pos:line="162" pos:column="43"/></name><operator pos:line="162" pos:column="43">.<pos:position pos:line="162" pos:column="44"/></operator><name pos:line="162" pos:column="44">st_mode<pos:position pos:line="162" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="162" pos:column="52"/></argument_list></call>
			  <operator pos:line="163" pos:column="27">||<pos:position pos:line="163" pos:column="29"/></operator> <call><name pos:line="163" pos:column="30">delete_item<pos:position pos:line="163" pos:column="41"/></name><argument_list pos:line="163" pos:column="41">(<argument><expr><name pos:line="163" pos:column="42">fname<pos:position pos:line="163" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="163" pos:column="49">sx<pos:position pos:line="163" pos:column="51"/></name><operator pos:line="163" pos:column="51">.<pos:position pos:line="163" pos:column="52"/></operator><name pos:line="163" pos:column="52">st<pos:position pos:line="163" pos:column="54"/></name><operator pos:line="163" pos:column="54">.<pos:position pos:line="163" pos:column="55"/></operator><name pos:line="163" pos:column="55">st_mode<pos:position pos:line="163" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="64">del_opts<pos:position pos:line="163" pos:column="72"/></name> <operator pos:line="163" pos:column="73">|<pos:position pos:line="163" pos:column="74"/></operator> <name pos:line="163" pos:column="75">DEL_FOR_DIR<pos:position pos:line="163" pos:column="86"/></name></expr></argument>)<pos:position pos:line="163" pos:column="87"/></argument_list></call> <operator pos:line="163" pos:column="88">!=<pos:position pos:line="163" pos:column="90"/></operator> <literal type="number" pos:line="163" pos:column="91">0<pos:position pos:line="163" pos:column="92"/></literal><operator pos:line="163" pos:column="92">)<pos:position pos:line="163" pos:column="93"/></operator></expr>)<pos:position pos:line="163" pos:column="94"/></condition><then pos:line="163" pos:column="94">
				<block type="pseudo"><goto pos:line="164" pos:column="33">goto <name pos:line="164" pos:column="38">cleanup<pos:position pos:line="164" pos:column="45"/></name>;<pos:position pos:line="164" pos:column="46"/></goto></block></then></if> <comment type="block" pos:line="164" pos:column="47">/* Any errors get reported later. */</comment>
			<if pos:line="165" pos:column="25">if <condition pos:line="165" pos:column="28">(<expr><call><name pos:line="165" pos:column="29">do_mkdir<pos:position pos:line="165" pos:column="37"/></name><argument_list pos:line="165" pos:column="37">(<argument><expr><name pos:line="165" pos:column="38">fname<pos:position pos:line="165" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="45">file<pos:position pos:line="165" pos:column="49"/></name><operator pos:line="165" pos:column="49">-&gt;<pos:position pos:line="165" pos:column="54"/></operator><name pos:line="165" pos:column="51">mode<pos:position pos:line="165" pos:column="55"/></name></name> <operator pos:line="165" pos:column="56">&amp;<pos:position pos:line="165" pos:column="61"/></operator> <literal type="number" pos:line="165" pos:column="58">0700<pos:position pos:line="165" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="63"/></argument_list></call> <operator pos:line="165" pos:column="64">==<pos:position pos:line="165" pos:column="66"/></operator> <literal type="number" pos:line="165" pos:column="67">0<pos:position pos:line="165" pos:column="68"/></literal></expr>)<pos:position pos:line="165" pos:column="69"/></condition><then pos:line="165" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="166" pos:column="33">file<pos:position pos:line="166" pos:column="37"/></name><operator pos:line="166" pos:column="37">-&gt;<pos:position pos:line="166" pos:column="42"/></operator><name pos:line="166" pos:column="39">flags<pos:position pos:line="166" pos:column="44"/></name></name> <operator pos:line="166" pos:column="45">|=<pos:position pos:line="166" pos:column="47"/></operator> <name pos:line="166" pos:column="48">FLAG_DIR_CREATED<pos:position pos:line="166" pos:column="64"/></name></expr>;<pos:position pos:line="166" pos:column="65"/></expr_stmt></block></then></if>
			<goto pos:line="167" pos:column="25">goto <name pos:line="167" pos:column="30">cleanup<pos:position pos:line="167" pos:column="37"/></name>;<pos:position pos:line="167" pos:column="38"/></goto>
		}<pos:position pos:line="168" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="169" pos:column="17">/* The file to be received is a directory, so we need
		 * to prepare appropriately.  If there is already a
		 * file of that name and it is *not* a directory, then
		 * we need to delete it.  If it doesn't exist, then
		 * (perhaps recursively) create it. */</comment>
		<if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><name pos:line="174" pos:column="21">statret<pos:position pos:line="174" pos:column="28"/></name> <operator pos:line="174" pos:column="29">==<pos:position pos:line="174" pos:column="31"/></operator> <literal type="number" pos:line="174" pos:column="32">0<pos:position pos:line="174" pos:column="33"/></literal> <operator pos:line="174" pos:column="34">&amp;&amp;<pos:position pos:line="174" pos:column="44"/></operator> <operator pos:line="174" pos:column="37">!<pos:position pos:line="174" pos:column="38"/></operator><call><name pos:line="174" pos:column="38">S_ISDIR<pos:position pos:line="174" pos:column="45"/></name><argument_list pos:line="174" pos:column="45">(<argument><expr><name><name pos:line="174" pos:column="46">sx<pos:position pos:line="174" pos:column="48"/></name><operator pos:line="174" pos:column="48">.<pos:position pos:line="174" pos:column="49"/></operator><name pos:line="174" pos:column="49">st<pos:position pos:line="174" pos:column="51"/></name><operator pos:line="174" pos:column="51">.<pos:position pos:line="174" pos:column="52"/></operator><name pos:line="174" pos:column="52">st_mode<pos:position pos:line="174" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="61"/></condition><then pos:line="174" pos:column="61"> <block pos:line="174" pos:column="62">{
			<if pos:line="175" pos:column="25">if <condition pos:line="175" pos:column="28">(<expr><call><name pos:line="175" pos:column="29">delete_item<pos:position pos:line="175" pos:column="40"/></name><argument_list pos:line="175" pos:column="40">(<argument><expr><name pos:line="175" pos:column="41">fname<pos:position pos:line="175" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="48">sx<pos:position pos:line="175" pos:column="50"/></name><operator pos:line="175" pos:column="50">.<pos:position pos:line="175" pos:column="51"/></operator><name pos:line="175" pos:column="51">st<pos:position pos:line="175" pos:column="53"/></name><operator pos:line="175" pos:column="53">.<pos:position pos:line="175" pos:column="54"/></operator><name pos:line="175" pos:column="54">st_mode<pos:position pos:line="175" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="63">del_opts<pos:position pos:line="175" pos:column="71"/></name> <operator pos:line="175" pos:column="72">|<pos:position pos:line="175" pos:column="73"/></operator> <name pos:line="175" pos:column="74">DEL_FOR_DIR<pos:position pos:line="175" pos:column="85"/></name></expr></argument>)<pos:position pos:line="175" pos:column="86"/></argument_list></call> <operator pos:line="175" pos:column="87">!=<pos:position pos:line="175" pos:column="89"/></operator> <literal type="number" pos:line="175" pos:column="90">0<pos:position pos:line="175" pos:column="91"/></literal></expr>)<pos:position pos:line="175" pos:column="92"/></condition><then pos:line="175" pos:column="92">
				<block type="pseudo"><goto pos:line="176" pos:column="33">goto <name pos:line="176" pos:column="38">skipping_dir_contents<pos:position pos:line="176" pos:column="59"/></name>;<pos:position pos:line="176" pos:column="60"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="177" pos:column="25">statret<pos:position pos:line="177" pos:column="32"/></name> <operator pos:line="177" pos:column="33">=<pos:position pos:line="177" pos:column="34"/></operator> <operator pos:line="177" pos:column="35">-<pos:position pos:line="177" pos:column="36"/></operator><literal type="number" pos:line="177" pos:column="36">1<pos:position pos:line="177" pos:column="37"/></literal></expr>;<pos:position pos:line="177" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="178" pos:column="18"/></block></then></if>
		<if pos:line="179" pos:column="17">if <condition pos:line="179" pos:column="20">(<expr><name pos:line="179" pos:column="21">dry_run<pos:position pos:line="179" pos:column="28"/></name> <operator pos:line="179" pos:column="29">&amp;&amp;<pos:position pos:line="179" pos:column="39"/></operator> <name pos:line="179" pos:column="32">statret<pos:position pos:line="179" pos:column="39"/></name> <operator pos:line="179" pos:column="40">!=<pos:position pos:line="179" pos:column="42"/></operator> <literal type="number" pos:line="179" pos:column="43">0<pos:position pos:line="179" pos:column="44"/></literal></expr>)<pos:position pos:line="179" pos:column="45"/></condition><then pos:line="179" pos:column="45"> <block pos:line="179" pos:column="46">{
			<if pos:line="180" pos:column="25">if <condition pos:line="180" pos:column="28">(<expr><operator pos:line="180" pos:column="29">!<pos:position pos:line="180" pos:column="30"/></operator><name pos:line="180" pos:column="30">dry_missing_dir<pos:position pos:line="180" pos:column="45"/></name></expr>)<pos:position pos:line="180" pos:column="46"/></condition><then pos:line="180" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><name pos:line="181" pos:column="33">dry_missing_dir<pos:position pos:line="181" pos:column="48"/></name> <operator pos:line="181" pos:column="49">=<pos:position pos:line="181" pos:column="50"/></operator> <name pos:line="181" pos:column="51">file<pos:position pos:line="181" pos:column="55"/></name></expr>;<pos:position pos:line="181" pos:column="56"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="182" pos:column="25">file<pos:position pos:line="182" pos:column="29"/></name><operator pos:line="182" pos:column="29">-&gt;<pos:position pos:line="182" pos:column="34"/></operator><name pos:line="182" pos:column="31">flags<pos:position pos:line="182" pos:column="36"/></name></name> <operator pos:line="182" pos:column="37">|=<pos:position pos:line="182" pos:column="39"/></operator> <name pos:line="182" pos:column="40">FLAG_MISSING_DIR<pos:position pos:line="182" pos:column="56"/></name></expr>;<pos:position pos:line="182" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="183" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="184" pos:column="17">real_ret<pos:position pos:line="184" pos:column="25"/></name> <operator pos:line="184" pos:column="26">=<pos:position pos:line="184" pos:column="27"/></operator> <name pos:line="184" pos:column="28">statret<pos:position pos:line="184" pos:column="35"/></name></expr>;<pos:position pos:line="184" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="185" pos:column="17">real_sx<pos:position pos:line="185" pos:column="24"/></name> <operator pos:line="185" pos:column="25">=<pos:position pos:line="185" pos:column="26"/></operator> <name pos:line="185" pos:column="27">sx<pos:position pos:line="185" pos:column="29"/></name></expr>;<pos:position pos:line="185" pos:column="30"/></expr_stmt>
		<if pos:line="186" pos:column="17">if <condition pos:line="186" pos:column="20">(<expr><name><name pos:line="186" pos:column="21">file<pos:position pos:line="186" pos:column="25"/></name><operator pos:line="186" pos:column="25">-&gt;<pos:position pos:line="186" pos:column="30"/></operator><name pos:line="186" pos:column="27">flags<pos:position pos:line="186" pos:column="32"/></name></name> <operator pos:line="186" pos:column="33">&amp;<pos:position pos:line="186" pos:column="38"/></operator> <name pos:line="186" pos:column="35">FLAG_DIR_CREATED<pos:position pos:line="186" pos:column="51"/></name></expr>)<pos:position pos:line="186" pos:column="52"/></condition><then pos:line="186" pos:column="52">
			<block type="pseudo"><expr_stmt><expr><name pos:line="187" pos:column="25">statret<pos:position pos:line="187" pos:column="32"/></name> <operator pos:line="187" pos:column="33">=<pos:position pos:line="187" pos:column="34"/></operator> <operator pos:line="187" pos:column="35">-<pos:position pos:line="187" pos:column="36"/></operator><literal type="number" pos:line="187" pos:column="36">1<pos:position pos:line="187" pos:column="37"/></literal></expr>;<pos:position pos:line="187" pos:column="38"/></expr_stmt></block></then></if>
		<if pos:line="188" pos:column="17">if <condition pos:line="188" pos:column="20">(<expr><operator pos:line="188" pos:column="21">!<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="22">preserve_perms<pos:position pos:line="188" pos:column="36"/></name></expr>)<pos:position pos:line="188" pos:column="37"/></condition><then pos:line="188" pos:column="37"> <block pos:line="188" pos:column="38">{ <comment type="block" pos:line="188" pos:column="40">/* See comment in non-dir code below. */</comment>
			<expr_stmt><expr><name><name pos:line="189" pos:column="25">file<pos:position pos:line="189" pos:column="29"/></name><operator pos:line="189" pos:column="29">-&gt;<pos:position pos:line="189" pos:column="34"/></operator><name pos:line="189" pos:column="31">mode<pos:position pos:line="189" pos:column="35"/></name></name> <operator pos:line="189" pos:column="36">=<pos:position pos:line="189" pos:column="37"/></operator> <call><name pos:line="189" pos:column="38">dest_mode<pos:position pos:line="189" pos:column="47"/></name><argument_list pos:line="189" pos:column="47">(<argument><expr><name><name pos:line="189" pos:column="48">file<pos:position pos:line="189" pos:column="52"/></name><operator pos:line="189" pos:column="52">-&gt;<pos:position pos:line="189" pos:column="57"/></operator><name pos:line="189" pos:column="54">mode<pos:position pos:line="189" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="189" pos:column="60">sx<pos:position pos:line="189" pos:column="62"/></name><operator pos:line="189" pos:column="62">.<pos:position pos:line="189" pos:column="63"/></operator><name pos:line="189" pos:column="63">st<pos:position pos:line="189" pos:column="65"/></name><operator pos:line="189" pos:column="65">.<pos:position pos:line="189" pos:column="66"/></operator><name pos:line="189" pos:column="66">st_mode<pos:position pos:line="189" pos:column="73"/></name></name></expr></argument>,
					       <argument><expr><name pos:line="190" pos:column="48">dflt_perms<pos:position pos:line="190" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="190" pos:column="60">statret<pos:position pos:line="190" pos:column="67"/></name> <operator pos:line="190" pos:column="68">==<pos:position pos:line="190" pos:column="70"/></operator> <literal type="number" pos:line="190" pos:column="71">0<pos:position pos:line="190" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="191" pos:column="18"/></block></then></if>
		<if pos:line="192" pos:column="17">if <condition pos:line="192" pos:column="20">(<expr><name pos:line="192" pos:column="21">statret<pos:position pos:line="192" pos:column="28"/></name> <operator pos:line="192" pos:column="29">!=<pos:position pos:line="192" pos:column="31"/></operator> <literal type="number" pos:line="192" pos:column="32">0<pos:position pos:line="192" pos:column="33"/></literal> <operator pos:line="192" pos:column="34">&amp;&amp;<pos:position pos:line="192" pos:column="44"/></operator> <name><name pos:line="192" pos:column="37">basis_dir<pos:position pos:line="192" pos:column="46"/></name><index pos:line="192" pos:column="46">[<expr><literal type="number" pos:line="192" pos:column="47">0<pos:position pos:line="192" pos:column="48"/></literal></expr>]<pos:position pos:line="192" pos:column="49"/></index></name> <operator pos:line="192" pos:column="50">!=<pos:position pos:line="192" pos:column="52"/></operator> <name pos:line="192" pos:column="53">NULL<pos:position pos:line="192" pos:column="57"/></name></expr>)<pos:position pos:line="192" pos:column="58"/></condition><then pos:line="192" pos:column="58"> <block pos:line="192" pos:column="59">{
			<decl_stmt><decl><type><name pos:line="193" pos:column="25">int<pos:position pos:line="193" pos:column="28"/></name></type> <name pos:line="193" pos:column="29">j<pos:position pos:line="193" pos:column="30"/></name> <init pos:line="193" pos:column="31">= <expr><call><name pos:line="193" pos:column="33">try_dests_non<pos:position pos:line="193" pos:column="46"/></name><argument_list pos:line="193" pos:column="46">(<argument><expr><name pos:line="193" pos:column="47">file<pos:position pos:line="193" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="53">fname<pos:position pos:line="193" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="60">ndx<pos:position pos:line="193" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="65">fnamecmpbuf<pos:position pos:line="193" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="193" pos:column="78">&amp;<pos:position pos:line="193" pos:column="83"/></operator><name pos:line="193" pos:column="79">sx<pos:position pos:line="193" pos:column="81"/></name></expr></argument>,
					      <argument><expr><name pos:line="194" pos:column="47">itemizing<pos:position pos:line="194" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="58">code<pos:position pos:line="194" pos:column="62"/></name></expr></argument>)<pos:position pos:line="194" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="194" pos:column="64"/></decl_stmt>
			<if pos:line="195" pos:column="25">if <condition pos:line="195" pos:column="28">(<expr><name pos:line="195" pos:column="29">j<pos:position pos:line="195" pos:column="30"/></name> <operator pos:line="195" pos:column="31">==<pos:position pos:line="195" pos:column="33"/></operator> <operator pos:line="195" pos:column="34">-<pos:position pos:line="195" pos:column="35"/></operator><literal type="number" pos:line="195" pos:column="35">2<pos:position pos:line="195" pos:column="36"/></literal></expr>)<pos:position pos:line="195" pos:column="37"/></condition><then pos:line="195" pos:column="37"> <block pos:line="195" pos:column="38">{
				<expr_stmt><expr><name pos:line="196" pos:column="33">itemizing<pos:position pos:line="196" pos:column="42"/></name> <operator pos:line="196" pos:column="43">=<pos:position pos:line="196" pos:column="44"/></operator> <literal type="number" pos:line="196" pos:column="45">0<pos:position pos:line="196" pos:column="46"/></literal></expr>;<pos:position pos:line="196" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="197" pos:column="33">code<pos:position pos:line="197" pos:column="37"/></name> <operator pos:line="197" pos:column="38">=<pos:position pos:line="197" pos:column="39"/></operator> <name pos:line="197" pos:column="40">FNONE<pos:position pos:line="197" pos:column="45"/></name></expr>;<pos:position pos:line="197" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><name pos:line="198" pos:column="33">statret<pos:position pos:line="198" pos:column="40"/></name> <operator pos:line="198" pos:column="41">=<pos:position pos:line="198" pos:column="42"/></operator> <literal type="number" pos:line="198" pos:column="43">1<pos:position pos:line="198" pos:column="44"/></literal></expr>;<pos:position pos:line="198" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="199" pos:column="26"/></block></then> <elseif pos:line="199" pos:column="27">else <if pos:line="199" pos:column="32">if <condition pos:line="199" pos:column="35">(<expr><name pos:line="199" pos:column="36">j<pos:position pos:line="199" pos:column="37"/></name> <operator pos:line="199" pos:column="38">&gt;=<pos:position pos:line="199" pos:column="43"/></operator> <literal type="number" pos:line="199" pos:column="41">0<pos:position pos:line="199" pos:column="42"/></literal></expr>)<pos:position pos:line="199" pos:column="43"/></condition><then pos:line="199" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><name pos:line="200" pos:column="33">statret<pos:position pos:line="200" pos:column="40"/></name> <operator pos:line="200" pos:column="41">=<pos:position pos:line="200" pos:column="42"/></operator> <literal type="number" pos:line="200" pos:column="43">1<pos:position pos:line="200" pos:column="44"/></literal></expr>;<pos:position pos:line="200" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="201" pos:column="18"/></block></then></if>
		<if pos:line="202" pos:column="17">if <condition pos:line="202" pos:column="20">(<expr><name pos:line="202" pos:column="21">itemizing<pos:position pos:line="202" pos:column="30"/></name> <operator pos:line="202" pos:column="31">&amp;&amp;<pos:position pos:line="202" pos:column="41"/></operator> <name pos:line="202" pos:column="34">f_out<pos:position pos:line="202" pos:column="39"/></name> <operator pos:line="202" pos:column="40">!=<pos:position pos:line="202" pos:column="42"/></operator> <operator pos:line="202" pos:column="43">-<pos:position pos:line="202" pos:column="44"/></operator><literal type="number" pos:line="202" pos:column="44">1<pos:position pos:line="202" pos:column="45"/></literal></expr>)<pos:position pos:line="202" pos:column="46"/></condition><then pos:line="202" pos:column="46"> <block pos:line="202" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="203" pos:column="25">itemize<pos:position pos:line="203" pos:column="32"/></name><argument_list pos:line="203" pos:column="32">(<argument><expr><name pos:line="203" pos:column="33">fname<pos:position pos:line="203" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="40">file<pos:position pos:line="203" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="46">ndx<pos:position pos:line="203" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="51">statret<pos:position pos:line="203" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="203" pos:column="60">&amp;<pos:position pos:line="203" pos:column="65"/></operator><name pos:line="203" pos:column="61">sx<pos:position pos:line="203" pos:column="63"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="204" pos:column="33">statret<pos:position pos:line="204" pos:column="40"/></name></expr> ?<pos:position pos:line="204" pos:column="42"/></condition><then pos:line="204" pos:column="42"> <expr><name pos:line="204" pos:column="43">ITEM_LOCAL_CHANGE<pos:position pos:line="204" pos:column="60"/></name></expr> <pos:position pos:line="204" pos:column="61"/></then><else pos:line="204" pos:column="61">: <expr><literal type="number" pos:line="204" pos:column="63">0<pos:position pos:line="204" pos:column="64"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="number" pos:line="204" pos:column="66">0<pos:position pos:line="204" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="204" pos:column="69">NULL<pos:position pos:line="204" pos:column="73"/></name></expr></argument>)<pos:position pos:line="204" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="205" pos:column="18"/></block></then></if>
		<if pos:line="206" pos:column="17">if <condition pos:line="206" pos:column="20">(<expr><name pos:line="206" pos:column="21">real_ret<pos:position pos:line="206" pos:column="29"/></name> <operator pos:line="206" pos:column="30">!=<pos:position pos:line="206" pos:column="32"/></operator> <literal type="number" pos:line="206" pos:column="33">0<pos:position pos:line="206" pos:column="34"/></literal> <operator pos:line="206" pos:column="35">&amp;&amp;<pos:position pos:line="206" pos:column="45"/></operator> <call><name pos:line="206" pos:column="38">do_mkdir<pos:position pos:line="206" pos:column="46"/></name><argument_list pos:line="206" pos:column="46">(<argument><expr><name pos:line="206" pos:column="47">fname<pos:position pos:line="206" pos:column="52"/></name></expr></argument>,<argument><expr><name><name pos:line="206" pos:column="53">file<pos:position pos:line="206" pos:column="57"/></name><operator pos:line="206" pos:column="57">-&gt;<pos:position pos:line="206" pos:column="62"/></operator><name pos:line="206" pos:column="59">mode<pos:position pos:line="206" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="64"/></argument_list></call> <operator pos:line="206" pos:column="65">&lt;<pos:position pos:line="206" pos:column="69"/></operator> <literal type="number" pos:line="206" pos:column="67">0<pos:position pos:line="206" pos:column="68"/></literal> <operator pos:line="206" pos:column="69">&amp;&amp;<pos:position pos:line="206" pos:column="79"/></operator> <name pos:line="206" pos:column="72">errno<pos:position pos:line="206" pos:column="77"/></name> <operator pos:line="206" pos:column="78">!=<pos:position pos:line="206" pos:column="80"/></operator> <name pos:line="206" pos:column="81">EEXIST<pos:position pos:line="206" pos:column="87"/></name></expr>)<pos:position pos:line="206" pos:column="88"/></condition><then pos:line="206" pos:column="88"> <block pos:line="206" pos:column="89">{
			<if pos:line="207" pos:column="25">if <condition pos:line="207" pos:column="28">(<expr><operator pos:line="207" pos:column="29">!<pos:position pos:line="207" pos:column="30"/></operator><name pos:line="207" pos:column="30">relative_paths<pos:position pos:line="207" pos:column="44"/></name> <operator pos:line="207" pos:column="45">||<pos:position pos:line="207" pos:column="47"/></operator> <name pos:line="207" pos:column="48">errno<pos:position pos:line="207" pos:column="53"/></name> <operator pos:line="207" pos:column="54">!=<pos:position pos:line="207" pos:column="56"/></operator> <name pos:line="207" pos:column="57">ENOENT<pos:position pos:line="207" pos:column="63"/></name>
			    <operator pos:line="208" pos:column="29">||<pos:position pos:line="208" pos:column="31"/></operator> <call><name pos:line="208" pos:column="32">create_directory_path<pos:position pos:line="208" pos:column="53"/></name><argument_list pos:line="208" pos:column="53">(<argument><expr><name pos:line="208" pos:column="54">fname<pos:position pos:line="208" pos:column="59"/></name></expr></argument>)<pos:position pos:line="208" pos:column="60"/></argument_list></call> <operator pos:line="208" pos:column="61">&lt;<pos:position pos:line="208" pos:column="65"/></operator> <literal type="number" pos:line="208" pos:column="63">0<pos:position pos:line="208" pos:column="64"/></literal>
			    <operator pos:line="209" pos:column="29">||<pos:position pos:line="209" pos:column="31"/></operator> <operator pos:line="209" pos:column="32">(<pos:position pos:line="209" pos:column="33"/></operator><call><name pos:line="209" pos:column="33">do_mkdir<pos:position pos:line="209" pos:column="41"/></name><argument_list pos:line="209" pos:column="41">(<argument><expr><name pos:line="209" pos:column="42">fname<pos:position pos:line="209" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="209" pos:column="49">file<pos:position pos:line="209" pos:column="53"/></name><operator pos:line="209" pos:column="53">-&gt;<pos:position pos:line="209" pos:column="58"/></operator><name pos:line="209" pos:column="55">mode<pos:position pos:line="209" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="60"/></argument_list></call> <operator pos:line="209" pos:column="61">&lt;<pos:position pos:line="209" pos:column="65"/></operator> <literal type="number" pos:line="209" pos:column="63">0<pos:position pos:line="209" pos:column="64"/></literal> <operator pos:line="209" pos:column="65">&amp;&amp;<pos:position pos:line="209" pos:column="75"/></operator> <name pos:line="209" pos:column="68">errno<pos:position pos:line="209" pos:column="73"/></name> <operator pos:line="209" pos:column="74">!=<pos:position pos:line="209" pos:column="76"/></operator> <name pos:line="209" pos:column="77">EEXIST<pos:position pos:line="209" pos:column="83"/></name><operator pos:line="209" pos:column="83">)<pos:position pos:line="209" pos:column="84"/></operator></expr>)<pos:position pos:line="209" pos:column="85"/></condition><then pos:line="209" pos:column="85"> <block pos:line="209" pos:column="86">{
				<expr_stmt><expr><call><name pos:line="210" pos:column="33">rsyserr<pos:position pos:line="210" pos:column="40"/></name><argument_list pos:line="210" pos:column="40">(<argument><expr><name pos:line="210" pos:column="41">FERROR_XFER<pos:position pos:line="210" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="54">errno<pos:position pos:line="210" pos:column="59"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="211" pos:column="41">"recv_generator: mkdir %s failed"<pos:position pos:line="211" pos:column="74"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="212" pos:column="41">full_fname<pos:position pos:line="212" pos:column="51"/></name><argument_list pos:line="212" pos:column="51">(<argument><expr><name pos:line="212" pos:column="52">fname<pos:position pos:line="212" pos:column="57"/></name></expr></argument>)<pos:position pos:line="212" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="212" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="60"/></expr_stmt>
			  <label><name pos:line="213" pos:column="27">skipping_dir_contents<pos:position pos:line="213" pos:column="48"/></name>:<pos:position pos:line="213" pos:column="49"/></label>
				<expr_stmt><expr><call><name pos:line="214" pos:column="33">rprintf<pos:position pos:line="214" pos:column="40"/></name><argument_list pos:line="214" pos:column="40">(<argument><expr><name pos:line="214" pos:column="41">FERROR<pos:position pos:line="214" pos:column="47"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="215" pos:column="37">"*** Skipping any contents from this failed directory ***\n"<pos:position pos:line="215" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="99"/></expr_stmt>
				<expr_stmt><expr><name pos:line="216" pos:column="33">skip_dir<pos:position pos:line="216" pos:column="41"/></name> <operator pos:line="216" pos:column="42">=<pos:position pos:line="216" pos:column="43"/></operator> <name pos:line="216" pos:column="44">file<pos:position pos:line="216" pos:column="48"/></name></expr>;<pos:position pos:line="216" pos:column="49"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="217" pos:column="33">file<pos:position pos:line="217" pos:column="37"/></name><operator pos:line="217" pos:column="37">-&gt;<pos:position pos:line="217" pos:column="42"/></operator><name pos:line="217" pos:column="39">flags<pos:position pos:line="217" pos:column="44"/></name></name> <operator pos:line="217" pos:column="45">|=<pos:position pos:line="217" pos:column="47"/></operator> <name pos:line="217" pos:column="48">FLAG_MISSING_DIR<pos:position pos:line="217" pos:column="64"/></name></expr>;<pos:position pos:line="217" pos:column="65"/></expr_stmt>
				<goto pos:line="218" pos:column="33">goto <name pos:line="218" pos:column="38">cleanup<pos:position pos:line="218" pos:column="45"/></name>;<pos:position pos:line="218" pos:column="46"/></goto>
			}<pos:position pos:line="219" pos:column="26"/></block></then></if>
		}<pos:position pos:line="220" pos:column="18"/></block></then></if>
<cpp:ifdef pos:line="221" pos:column="1">#<cpp:directive pos:line="221" pos:column="2">ifdef<pos:position pos:line="221" pos:column="7"/></cpp:directive> <name pos:line="221" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="221" pos:column="22"/></name></cpp:ifdef>
		<if pos:line="222" pos:column="17">if <condition pos:line="222" pos:column="20">(<expr><name pos:line="222" pos:column="21">preserve_xattrs<pos:position pos:line="222" pos:column="36"/></name> <operator pos:line="222" pos:column="37">&amp;&amp;<pos:position pos:line="222" pos:column="47"/></operator> <name pos:line="222" pos:column="40">statret<pos:position pos:line="222" pos:column="47"/></name> <operator pos:line="222" pos:column="48">==<pos:position pos:line="222" pos:column="50"/></operator> <literal type="number" pos:line="222" pos:column="51">1<pos:position pos:line="222" pos:column="52"/></literal></expr>)<pos:position pos:line="222" pos:column="53"/></condition><then pos:line="222" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="223" pos:column="25">copy_xattrs<pos:position pos:line="223" pos:column="36"/></name><argument_list pos:line="223" pos:column="36">(<argument><expr><name pos:line="223" pos:column="37">fnamecmpbuf<pos:position pos:line="223" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="50">fname<pos:position pos:line="223" pos:column="55"/></name></expr></argument>)<pos:position pos:line="223" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="57"/></expr_stmt></block></then></if>
<cpp:endif pos:line="224" pos:column="1">#<cpp:directive pos:line="224" pos:column="2">endif<pos:position pos:line="224" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="225" pos:column="17">if <condition pos:line="225" pos:column="20">(<expr><call><name pos:line="225" pos:column="21">set_file_attrs<pos:position pos:line="225" pos:column="35"/></name><argument_list pos:line="225" pos:column="35">(<argument><expr><name pos:line="225" pos:column="36">fname<pos:position pos:line="225" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="43">file<pos:position pos:line="225" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="225" pos:column="49">real_ret<pos:position pos:line="225" pos:column="57"/></name></expr> ?<pos:position pos:line="225" pos:column="59"/></condition><then pos:line="225" pos:column="59"> <expr><name pos:line="225" pos:column="60">NULL<pos:position pos:line="225" pos:column="64"/></name></expr> <pos:position pos:line="225" pos:column="65"/></then><else pos:line="225" pos:column="65">: <expr><operator pos:line="225" pos:column="67">&amp;<pos:position pos:line="225" pos:column="72"/></operator><name pos:line="225" pos:column="68">real_sx<pos:position pos:line="225" pos:column="75"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="225" pos:column="77">NULL<pos:position pos:line="225" pos:column="81"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="225" pos:column="83">0<pos:position pos:line="225" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="85"/></argument_list></call>
		    <operator pos:line="226" pos:column="21">&amp;&amp;<pos:position pos:line="226" pos:column="31"/></operator> <name pos:line="226" pos:column="24">verbose<pos:position pos:line="226" pos:column="31"/></name> <operator pos:line="226" pos:column="32">&amp;&amp;<pos:position pos:line="226" pos:column="42"/></operator> <name pos:line="226" pos:column="35">code<pos:position pos:line="226" pos:column="39"/></name> <operator pos:line="226" pos:column="40">!=<pos:position pos:line="226" pos:column="42"/></operator> <name pos:line="226" pos:column="43">FNONE<pos:position pos:line="226" pos:column="48"/></name> <operator pos:line="226" pos:column="49">&amp;&amp;<pos:position pos:line="226" pos:column="59"/></operator> <name pos:line="226" pos:column="52">f_out<pos:position pos:line="226" pos:column="57"/></name> <operator pos:line="226" pos:column="58">!=<pos:position pos:line="226" pos:column="60"/></operator> <operator pos:line="226" pos:column="61">-<pos:position pos:line="226" pos:column="62"/></operator><literal type="number" pos:line="226" pos:column="62">1<pos:position pos:line="226" pos:column="63"/></literal></expr>)<pos:position pos:line="226" pos:column="64"/></condition><then pos:line="226" pos:column="64">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="227" pos:column="25">rprintf<pos:position pos:line="227" pos:column="32"/></name><argument_list pos:line="227" pos:column="32">(<argument><expr><name pos:line="227" pos:column="33">code<pos:position pos:line="227" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="39">"%s/\n"<pos:position pos:line="227" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="227" pos:column="48">fname<pos:position pos:line="227" pos:column="53"/></name></expr></argument>)<pos:position pos:line="227" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="55"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="229" pos:column="17">/* We need to ensure that the dirs in the transfer have writable
		 * permissions during the time we are putting files within them.
		 * This is then fixed after the transfer is done. */</comment>
<cpp:ifdef pos:line="232" pos:column="1">#<cpp:directive pos:line="232" pos:column="2">ifdef<pos:position pos:line="232" pos:column="7"/></cpp:directive> <name pos:line="232" pos:column="8">HAVE_CHMOD<pos:position pos:line="232" pos:column="18"/></name></cpp:ifdef>
		<if pos:line="233" pos:column="17">if <condition pos:line="233" pos:column="20">(<expr><operator pos:line="233" pos:column="21">!<pos:position pos:line="233" pos:column="22"/></operator><name pos:line="233" pos:column="22">am_root<pos:position pos:line="233" pos:column="29"/></name> <operator pos:line="233" pos:column="30">&amp;&amp;<pos:position pos:line="233" pos:column="40"/></operator> <operator pos:line="233" pos:column="33">!<pos:position pos:line="233" pos:column="34"/></operator><operator pos:line="233" pos:column="34">(<pos:position pos:line="233" pos:column="35"/></operator><name><name pos:line="233" pos:column="35">file<pos:position pos:line="233" pos:column="39"/></name><operator pos:line="233" pos:column="39">-&gt;<pos:position pos:line="233" pos:column="44"/></operator><name pos:line="233" pos:column="41">mode<pos:position pos:line="233" pos:column="45"/></name></name> <operator pos:line="233" pos:column="46">&amp;<pos:position pos:line="233" pos:column="51"/></operator> <name pos:line="233" pos:column="48">S_IWUSR<pos:position pos:line="233" pos:column="55"/></name><operator pos:line="233" pos:column="55">)<pos:position pos:line="233" pos:column="56"/></operator> <operator pos:line="233" pos:column="57">&amp;&amp;<pos:position pos:line="233" pos:column="67"/></operator> <name pos:line="233" pos:column="60">dir_tweaking<pos:position pos:line="233" pos:column="72"/></name></expr>)<pos:position pos:line="233" pos:column="73"/></condition><then pos:line="233" pos:column="73"> <block pos:line="233" pos:column="74">{
			<decl_stmt><decl><type><name pos:line="234" pos:column="25">mode_t<pos:position pos:line="234" pos:column="31"/></name></type> <name pos:line="234" pos:column="32">mode<pos:position pos:line="234" pos:column="36"/></name> <init pos:line="234" pos:column="37">= <expr><name><name pos:line="234" pos:column="39">file<pos:position pos:line="234" pos:column="43"/></name><operator pos:line="234" pos:column="43">-&gt;<pos:position pos:line="234" pos:column="48"/></operator><name pos:line="234" pos:column="45">mode<pos:position pos:line="234" pos:column="49"/></name></name> <operator pos:line="234" pos:column="50">|<pos:position pos:line="234" pos:column="51"/></operator> <name pos:line="234" pos:column="52">S_IWUSR<pos:position pos:line="234" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="234" pos:column="60"/></decl_stmt>
			<if pos:line="235" pos:column="25">if <condition pos:line="235" pos:column="28">(<expr><call><name pos:line="235" pos:column="29">do_chmod<pos:position pos:line="235" pos:column="37"/></name><argument_list pos:line="235" pos:column="37">(<argument><expr><name pos:line="235" pos:column="38">fname<pos:position pos:line="235" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="45">mode<pos:position pos:line="235" pos:column="49"/></name></expr></argument>)<pos:position pos:line="235" pos:column="50"/></argument_list></call> <operator pos:line="235" pos:column="51">&lt;<pos:position pos:line="235" pos:column="55"/></operator> <literal type="number" pos:line="235" pos:column="53">0<pos:position pos:line="235" pos:column="54"/></literal></expr>)<pos:position pos:line="235" pos:column="55"/></condition><then pos:line="235" pos:column="55"> <block pos:line="235" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="236" pos:column="33">rsyserr<pos:position pos:line="236" pos:column="40"/></name><argument_list pos:line="236" pos:column="40">(<argument><expr><name pos:line="236" pos:column="41">FERROR_XFER<pos:position pos:line="236" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="54">errno<pos:position pos:line="236" pos:column="59"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="237" pos:column="41">"failed to modify permissions on %s"<pos:position pos:line="237" pos:column="77"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="238" pos:column="41">full_fname<pos:position pos:line="238" pos:column="51"/></name><argument_list pos:line="238" pos:column="51">(<argument><expr><name pos:line="238" pos:column="52">fname<pos:position pos:line="238" pos:column="57"/></name></expr></argument>)<pos:position pos:line="238" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="238" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="239" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="240" pos:column="25">need_retouch_dir_perms<pos:position pos:line="240" pos:column="47"/></name> <operator pos:line="240" pos:column="48">=<pos:position pos:line="240" pos:column="49"/></operator> <literal type="number" pos:line="240" pos:column="50">1<pos:position pos:line="240" pos:column="51"/></literal></expr>;<pos:position pos:line="240" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="241" pos:column="18"/></block></then></if>
<cpp:endif pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">endif<pos:position pos:line="242" pos:column="7"/></cpp:directive></cpp:endif>

		<if pos:line="244" pos:column="17">if <condition pos:line="244" pos:column="20">(<expr><name pos:line="244" pos:column="21">real_ret<pos:position pos:line="244" pos:column="29"/></name> <operator pos:line="244" pos:column="30">!=<pos:position pos:line="244" pos:column="32"/></operator> <literal type="number" pos:line="244" pos:column="33">0<pos:position pos:line="244" pos:column="34"/></literal> <operator pos:line="244" pos:column="35">&amp;&amp;<pos:position pos:line="244" pos:column="45"/></operator> <name pos:line="244" pos:column="38">one_file_system<pos:position pos:line="244" pos:column="53"/></name></expr>)<pos:position pos:line="244" pos:column="54"/></condition><then pos:line="244" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="245" pos:column="25">real_sx<pos:position pos:line="245" pos:column="32"/></name><operator pos:line="245" pos:column="32">.<pos:position pos:line="245" pos:column="33"/></operator><name pos:line="245" pos:column="33">st<pos:position pos:line="245" pos:column="35"/></name><operator pos:line="245" pos:column="35">.<pos:position pos:line="245" pos:column="36"/></operator><name pos:line="245" pos:column="36">st_dev<pos:position pos:line="245" pos:column="42"/></name></name> <operator pos:line="245" pos:column="43">=<pos:position pos:line="245" pos:column="44"/></operator> <name pos:line="245" pos:column="45">filesystem_dev<pos:position pos:line="245" pos:column="59"/></name></expr>;<pos:position pos:line="245" pos:column="60"/></expr_stmt></block></then></if>
		<if pos:line="246" pos:column="17">if <condition pos:line="246" pos:column="20">(<expr><name pos:line="246" pos:column="21">inc_recurse<pos:position pos:line="246" pos:column="32"/></name></expr>)<pos:position pos:line="246" pos:column="33"/></condition><then pos:line="246" pos:column="33"> <block pos:line="246" pos:column="34">{
			<if pos:line="247" pos:column="25">if <condition pos:line="247" pos:column="28">(<expr><name pos:line="247" pos:column="29">one_file_system<pos:position pos:line="247" pos:column="44"/></name></expr>)<pos:position pos:line="247" pos:column="45"/></condition><then pos:line="247" pos:column="45"> <block pos:line="247" pos:column="46">{
				<decl_stmt><decl><type><name pos:line="248" pos:column="33">uint32<pos:position pos:line="248" pos:column="39"/></name> <modifier pos:line="248" pos:column="40">*<pos:position pos:line="248" pos:column="41"/></modifier></type><name pos:line="248" pos:column="41">devp<pos:position pos:line="248" pos:column="45"/></name> <init pos:line="248" pos:column="46">= <expr><call><name pos:line="248" pos:column="48">F_DIR_DEV_P<pos:position pos:line="248" pos:column="59"/></name><argument_list pos:line="248" pos:column="59">(<argument><expr><name pos:line="248" pos:column="60">file<pos:position pos:line="248" pos:column="64"/></name></expr></argument>)<pos:position pos:line="248" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="248" pos:column="66"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="249" pos:column="33">DEV_MAJOR<pos:position pos:line="249" pos:column="42"/></name><argument_list pos:line="249" pos:column="42">(<argument><expr><name pos:line="249" pos:column="43">devp<pos:position pos:line="249" pos:column="47"/></name></expr></argument>)<pos:position pos:line="249" pos:column="48"/></argument_list></call> <operator pos:line="249" pos:column="49">=<pos:position pos:line="249" pos:column="50"/></operator> <call><name pos:line="249" pos:column="51">major<pos:position pos:line="249" pos:column="56"/></name><argument_list pos:line="249" pos:column="56">(<argument><expr><name><name pos:line="249" pos:column="57">real_sx<pos:position pos:line="249" pos:column="64"/></name><operator pos:line="249" pos:column="64">.<pos:position pos:line="249" pos:column="65"/></operator><name pos:line="249" pos:column="65">st<pos:position pos:line="249" pos:column="67"/></name><operator pos:line="249" pos:column="67">.<pos:position pos:line="249" pos:column="68"/></operator><name pos:line="249" pos:column="68">st_dev<pos:position pos:line="249" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="249" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="250" pos:column="33">DEV_MINOR<pos:position pos:line="250" pos:column="42"/></name><argument_list pos:line="250" pos:column="42">(<argument><expr><name pos:line="250" pos:column="43">devp<pos:position pos:line="250" pos:column="47"/></name></expr></argument>)<pos:position pos:line="250" pos:column="48"/></argument_list></call> <operator pos:line="250" pos:column="49">=<pos:position pos:line="250" pos:column="50"/></operator> <call><name pos:line="250" pos:column="51">minor<pos:position pos:line="250" pos:column="56"/></name><argument_list pos:line="250" pos:column="56">(<argument><expr><name><name pos:line="250" pos:column="57">real_sx<pos:position pos:line="250" pos:column="64"/></name><operator pos:line="250" pos:column="64">.<pos:position pos:line="250" pos:column="65"/></operator><name pos:line="250" pos:column="65">st<pos:position pos:line="250" pos:column="67"/></name><operator pos:line="250" pos:column="67">.<pos:position pos:line="250" pos:column="68"/></operator><name pos:line="250" pos:column="68">st_dev<pos:position pos:line="250" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="250" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="76"/></expr_stmt>
			}<pos:position pos:line="251" pos:column="26"/></block></then></if>
		}<pos:position pos:line="252" pos:column="18"/></block></then>
		<elseif pos:line="253" pos:column="17">else <if pos:line="253" pos:column="22">if <condition pos:line="253" pos:column="25">(<expr><name pos:line="253" pos:column="26">delete_during<pos:position pos:line="253" pos:column="39"/></name> <operator pos:line="253" pos:column="40">&amp;&amp;<pos:position pos:line="253" pos:column="50"/></operator> <name pos:line="253" pos:column="43">f_out<pos:position pos:line="253" pos:column="48"/></name> <operator pos:line="253" pos:column="49">!=<pos:position pos:line="253" pos:column="51"/></operator> <operator pos:line="253" pos:column="52">-<pos:position pos:line="253" pos:column="53"/></operator><literal type="number" pos:line="253" pos:column="53">1<pos:position pos:line="253" pos:column="54"/></literal> <operator pos:line="253" pos:column="55">&amp;&amp;<pos:position pos:line="253" pos:column="65"/></operator> <operator pos:line="253" pos:column="58">!<pos:position pos:line="253" pos:column="59"/></operator><name pos:line="253" pos:column="59">phase<pos:position pos:line="253" pos:column="64"/></name>
		    <operator pos:line="254" pos:column="21">&amp;&amp;<pos:position pos:line="254" pos:column="31"/></operator> <operator pos:line="254" pos:column="24">!<pos:position pos:line="254" pos:column="25"/></operator><operator pos:line="254" pos:column="25">(<pos:position pos:line="254" pos:column="26"/></operator><name><name pos:line="254" pos:column="26">file<pos:position pos:line="254" pos:column="30"/></name><operator pos:line="254" pos:column="30">-&gt;<pos:position pos:line="254" pos:column="35"/></operator><name pos:line="254" pos:column="32">flags<pos:position pos:line="254" pos:column="37"/></name></name> <operator pos:line="254" pos:column="38">&amp;<pos:position pos:line="254" pos:column="43"/></operator> <name pos:line="254" pos:column="40">FLAG_MISSING_DIR<pos:position pos:line="254" pos:column="56"/></name><operator pos:line="254" pos:column="56">)<pos:position pos:line="254" pos:column="57"/></operator></expr>)<pos:position pos:line="254" pos:column="58"/></condition><then pos:line="254" pos:column="58"> <block pos:line="254" pos:column="59">{
			<if pos:line="255" pos:column="25">if <condition pos:line="255" pos:column="28">(<expr><name><name pos:line="255" pos:column="29">file<pos:position pos:line="255" pos:column="33"/></name><operator pos:line="255" pos:column="33">-&gt;<pos:position pos:line="255" pos:column="38"/></operator><name pos:line="255" pos:column="35">flags<pos:position pos:line="255" pos:column="40"/></name></name> <operator pos:line="255" pos:column="41">&amp;<pos:position pos:line="255" pos:column="46"/></operator> <name pos:line="255" pos:column="43">FLAG_CONTENT_DIR<pos:position pos:line="255" pos:column="59"/></name></expr>)<pos:position pos:line="255" pos:column="60"/></condition><then pos:line="255" pos:column="60">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="256" pos:column="33">delete_in_dir<pos:position pos:line="256" pos:column="46"/></name><argument_list pos:line="256" pos:column="46">(<argument><expr><name pos:line="256" pos:column="47">fname<pos:position pos:line="256" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="54">file<pos:position pos:line="256" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="256" pos:column="60">&amp;<pos:position pos:line="256" pos:column="65"/></operator><name><name pos:line="256" pos:column="61">real_sx<pos:position pos:line="256" pos:column="68"/></name><operator pos:line="256" pos:column="68">.<pos:position pos:line="256" pos:column="69"/></operator><name pos:line="256" pos:column="69">st<pos:position pos:line="256" pos:column="71"/></name><operator pos:line="256" pos:column="71">.<pos:position pos:line="256" pos:column="72"/></operator><name pos:line="256" pos:column="72">st_dev<pos:position pos:line="256" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="256" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="80"/></expr_stmt></block></then>
			<else pos:line="257" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="258" pos:column="33">change_local_filter_dir<pos:position pos:line="258" pos:column="56"/></name><argument_list pos:line="258" pos:column="56">(<argument><expr><name pos:line="258" pos:column="57">fname<pos:position pos:line="258" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="258" pos:column="64">strlen<pos:position pos:line="258" pos:column="70"/></name><argument_list pos:line="258" pos:column="70">(<argument><expr><name pos:line="258" pos:column="71">fname<pos:position pos:line="258" pos:column="76"/></name></expr></argument>)<pos:position pos:line="258" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="258" pos:column="79">F_DEPTH<pos:position pos:line="258" pos:column="86"/></name><argument_list pos:line="258" pos:column="86">(<argument><expr><name pos:line="258" pos:column="87">file<pos:position pos:line="258" pos:column="91"/></name></expr></argument>)<pos:position pos:line="258" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="258" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="94"/></expr_stmt></block></else></if>
		}<pos:position pos:line="259" pos:column="18"/></block></then></if></elseif></if>
		<goto pos:line="260" pos:column="17">goto <name pos:line="260" pos:column="22">cleanup<pos:position pos:line="260" pos:column="29"/></name>;<pos:position pos:line="260" pos:column="30"/></goto>
	}<pos:position pos:line="261" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="263" pos:column="9">/* If we're not preserving permissions, change the file-list's
	 * mode based on the local permissions and some heuristics. */</comment>
	<if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><operator pos:line="265" pos:column="13">!<pos:position pos:line="265" pos:column="14"/></operator><name pos:line="265" pos:column="14">preserve_perms<pos:position pos:line="265" pos:column="28"/></name></expr>)<pos:position pos:line="265" pos:column="29"/></condition><then pos:line="265" pos:column="29"> <block pos:line="265" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="266" pos:column="17">int<pos:position pos:line="266" pos:column="20"/></name></type> <name pos:line="266" pos:column="21">exists<pos:position pos:line="266" pos:column="27"/></name> <init pos:line="266" pos:column="28">= <expr><name pos:line="266" pos:column="30">statret<pos:position pos:line="266" pos:column="37"/></name> <operator pos:line="266" pos:column="38">==<pos:position pos:line="266" pos:column="40"/></operator> <literal type="number" pos:line="266" pos:column="41">0<pos:position pos:line="266" pos:column="42"/></literal> <operator pos:line="266" pos:column="43">&amp;&amp;<pos:position pos:line="266" pos:column="53"/></operator> <operator pos:line="266" pos:column="46">!<pos:position pos:line="266" pos:column="47"/></operator><call><name pos:line="266" pos:column="47">S_ISDIR<pos:position pos:line="266" pos:column="54"/></name><argument_list pos:line="266" pos:column="54">(<argument><expr><name><name pos:line="266" pos:column="55">sx<pos:position pos:line="266" pos:column="57"/></name><operator pos:line="266" pos:column="57">.<pos:position pos:line="266" pos:column="58"/></operator><name pos:line="266" pos:column="58">st<pos:position pos:line="266" pos:column="60"/></name><operator pos:line="266" pos:column="60">.<pos:position pos:line="266" pos:column="61"/></operator><name pos:line="266" pos:column="61">st_mode<pos:position pos:line="266" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="266" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="266" pos:column="70"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="267" pos:column="17">file<pos:position pos:line="267" pos:column="21"/></name><operator pos:line="267" pos:column="21">-&gt;<pos:position pos:line="267" pos:column="26"/></operator><name pos:line="267" pos:column="23">mode<pos:position pos:line="267" pos:column="27"/></name></name> <operator pos:line="267" pos:column="28">=<pos:position pos:line="267" pos:column="29"/></operator> <call><name pos:line="267" pos:column="30">dest_mode<pos:position pos:line="267" pos:column="39"/></name><argument_list pos:line="267" pos:column="39">(<argument><expr><name><name pos:line="267" pos:column="40">file<pos:position pos:line="267" pos:column="44"/></name><operator pos:line="267" pos:column="44">-&gt;<pos:position pos:line="267" pos:column="49"/></operator><name pos:line="267" pos:column="46">mode<pos:position pos:line="267" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="52">sx<pos:position pos:line="267" pos:column="54"/></name><operator pos:line="267" pos:column="54">.<pos:position pos:line="267" pos:column="55"/></operator><name pos:line="267" pos:column="55">st<pos:position pos:line="267" pos:column="57"/></name><operator pos:line="267" pos:column="57">.<pos:position pos:line="267" pos:column="58"/></operator><name pos:line="267" pos:column="58">st_mode<pos:position pos:line="267" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="67">dflt_perms<pos:position pos:line="267" pos:column="77"/></name></expr></argument>,
				       <argument><expr><name pos:line="268" pos:column="40">exists<pos:position pos:line="268" pos:column="46"/></name></expr></argument>)<pos:position pos:line="268" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="268" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="269" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="271" pos:column="1">#<cpp:directive pos:line="271" pos:column="2">ifdef<pos:position pos:line="271" pos:column="7"/></cpp:directive> <name pos:line="271" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="271" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="272" pos:column="9">if <condition pos:line="272" pos:column="12">(<expr><name pos:line="272" pos:column="13">preserve_hard_links<pos:position pos:line="272" pos:column="32"/></name> <operator pos:line="272" pos:column="33">&amp;&amp;<pos:position pos:line="272" pos:column="43"/></operator> <call><name pos:line="272" pos:column="36">F_HLINK_NOT_FIRST<pos:position pos:line="272" pos:column="53"/></name><argument_list pos:line="272" pos:column="53">(<argument><expr><name pos:line="272" pos:column="54">file<pos:position pos:line="272" pos:column="58"/></name></expr></argument>)<pos:position pos:line="272" pos:column="59"/></argument_list></call>
	 <operator pos:line="273" pos:column="10">&amp;&amp;<pos:position pos:line="273" pos:column="20"/></operator> <call><name pos:line="273" pos:column="13">hard_link_check<pos:position pos:line="273" pos:column="28"/></name><argument_list pos:line="273" pos:column="28">(<argument><expr><name pos:line="273" pos:column="29">file<pos:position pos:line="273" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="35">ndx<pos:position pos:line="273" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="40">fname<pos:position pos:line="273" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="47">statret<pos:position pos:line="273" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="273" pos:column="56">&amp;<pos:position pos:line="273" pos:column="61"/></operator><name pos:line="273" pos:column="57">sx<pos:position pos:line="273" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="61">itemizing<pos:position pos:line="273" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="273" pos:column="72">code<pos:position pos:line="273" pos:column="76"/></name></expr></argument>)<pos:position pos:line="273" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="273" pos:column="78"/></condition><then pos:line="273" pos:column="78">
		<block type="pseudo"><goto pos:line="274" pos:column="17">goto <name pos:line="274" pos:column="22">cleanup<pos:position pos:line="274" pos:column="29"/></name>;<pos:position pos:line="274" pos:column="30"/></goto></block></then></if>
<cpp:endif pos:line="275" pos:column="1">#<cpp:directive pos:line="275" pos:column="2">endif<pos:position pos:line="275" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="277" pos:column="9">if <condition pos:line="277" pos:column="12">(<expr><name pos:line="277" pos:column="13">preserve_links<pos:position pos:line="277" pos:column="27"/></name> <operator pos:line="277" pos:column="28">&amp;&amp;<pos:position pos:line="277" pos:column="38"/></operator> <call><name pos:line="277" pos:column="31">S_ISLNK<pos:position pos:line="277" pos:column="38"/></name><argument_list pos:line="277" pos:column="38">(<argument><expr><name><name pos:line="277" pos:column="39">file<pos:position pos:line="277" pos:column="43"/></name><operator pos:line="277" pos:column="43">-&gt;<pos:position pos:line="277" pos:column="48"/></operator><name pos:line="277" pos:column="45">mode<pos:position pos:line="277" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="277" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="277" pos:column="51"/></condition><then pos:line="277" pos:column="51"> <block pos:line="277" pos:column="52">{
<cpp:ifdef pos:line="278" pos:column="1">#<cpp:directive pos:line="278" pos:column="2">ifdef<pos:position pos:line="278" pos:column="7"/></cpp:directive> <name pos:line="278" pos:column="8">SUPPORT_LINKS<pos:position pos:line="278" pos:column="21"/></name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="279" pos:column="17">const<pos:position pos:line="279" pos:column="22"/></specifier> <name pos:line="279" pos:column="23">char<pos:position pos:line="279" pos:column="27"/></name> <modifier pos:line="279" pos:column="28">*<pos:position pos:line="279" pos:column="29"/></modifier></type><name pos:line="279" pos:column="29">sl<pos:position pos:line="279" pos:column="31"/></name> <init pos:line="279" pos:column="32">= <expr><call><name pos:line="279" pos:column="34">F_SYMLINK<pos:position pos:line="279" pos:column="43"/></name><argument_list pos:line="279" pos:column="43">(<argument><expr><name pos:line="279" pos:column="44">file<pos:position pos:line="279" pos:column="48"/></name></expr></argument>)<pos:position pos:line="279" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="279" pos:column="50"/></decl_stmt>
		<if pos:line="280" pos:column="17">if <condition pos:line="280" pos:column="20">(<expr><name pos:line="280" pos:column="21">safe_symlinks<pos:position pos:line="280" pos:column="34"/></name> <operator pos:line="280" pos:column="35">&amp;&amp;<pos:position pos:line="280" pos:column="45"/></operator> <call><name pos:line="280" pos:column="38">unsafe_symlink<pos:position pos:line="280" pos:column="52"/></name><argument_list pos:line="280" pos:column="52">(<argument><expr><name pos:line="280" pos:column="53">sl<pos:position pos:line="280" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="280" pos:column="57">fname<pos:position pos:line="280" pos:column="62"/></name></expr></argument>)<pos:position pos:line="280" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="280" pos:column="64"/></condition><then pos:line="280" pos:column="64"> <block pos:line="280" pos:column="65">{
			<if pos:line="281" pos:column="25">if <condition pos:line="281" pos:column="28">(<expr><name pos:line="281" pos:column="29">verbose<pos:position pos:line="281" pos:column="36"/></name></expr>)<pos:position pos:line="281" pos:column="37"/></condition><then pos:line="281" pos:column="37"> <block pos:line="281" pos:column="38">{
				<if pos:line="282" pos:column="33">if <condition pos:line="282" pos:column="36">(<expr><name pos:line="282" pos:column="37">solo_file<pos:position pos:line="282" pos:column="46"/></name></expr>)<pos:position pos:line="282" pos:column="47"/></condition><then pos:line="282" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><name pos:line="283" pos:column="41">fname<pos:position pos:line="283" pos:column="46"/></name> <operator pos:line="283" pos:column="47">=<pos:position pos:line="283" pos:column="48"/></operator> <call><name pos:line="283" pos:column="49">f_name<pos:position pos:line="283" pos:column="55"/></name><argument_list pos:line="283" pos:column="55">(<argument><expr><name pos:line="283" pos:column="56">file<pos:position pos:line="283" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="62">NULL<pos:position pos:line="283" pos:column="66"/></name></expr></argument>)<pos:position pos:line="283" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="68"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="284" pos:column="33">rprintf<pos:position pos:line="284" pos:column="40"/></name><argument_list pos:line="284" pos:column="40">(<argument><expr><name pos:line="284" pos:column="41">FINFO<pos:position pos:line="284" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="285" pos:column="41">"ignoring unsafe symlink %s -&gt; \"%s\"\n"<pos:position pos:line="285" pos:column="84"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="286" pos:column="41">full_fname<pos:position pos:line="286" pos:column="51"/></name><argument_list pos:line="286" pos:column="51">(<argument><expr><name pos:line="286" pos:column="52">fname<pos:position pos:line="286" pos:column="57"/></name></expr></argument>)<pos:position pos:line="286" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="286" pos:column="60">sl<pos:position pos:line="286" pos:column="62"/></name></expr></argument>)<pos:position pos:line="286" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="287" pos:column="26"/></block></then></if>
			<return pos:line="288" pos:column="25">return;<pos:position pos:line="288" pos:column="32"/></return>
		}<pos:position pos:line="289" pos:column="18"/></block></then></if>
		<if pos:line="290" pos:column="17">if <condition pos:line="290" pos:column="20">(<expr><name pos:line="290" pos:column="21">statret<pos:position pos:line="290" pos:column="28"/></name> <operator pos:line="290" pos:column="29">==<pos:position pos:line="290" pos:column="31"/></operator> <literal type="number" pos:line="290" pos:column="32">0<pos:position pos:line="290" pos:column="33"/></literal></expr>)<pos:position pos:line="290" pos:column="34"/></condition><then pos:line="290" pos:column="34"> <block pos:line="290" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="291" pos:column="25">char<pos:position pos:line="291" pos:column="29"/></name></type> <name><name pos:line="291" pos:column="30">lnk<pos:position pos:line="291" pos:column="33"/></name><index pos:line="291" pos:column="33">[<expr><name pos:line="291" pos:column="34">MAXPATHLEN<pos:position pos:line="291" pos:column="44"/></name></expr>]<pos:position pos:line="291" pos:column="45"/></index></name></decl>;<pos:position pos:line="291" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="292" pos:column="25">int<pos:position pos:line="292" pos:column="28"/></name></type> <name pos:line="292" pos:column="29">len<pos:position pos:line="292" pos:column="32"/></name></decl>;<pos:position pos:line="292" pos:column="33"/></decl_stmt>

			<if pos:line="294" pos:column="25">if <condition pos:line="294" pos:column="28">(<expr><operator pos:line="294" pos:column="29">!<pos:position pos:line="294" pos:column="30"/></operator><call><name pos:line="294" pos:column="30">S_ISLNK<pos:position pos:line="294" pos:column="37"/></name><argument_list pos:line="294" pos:column="37">(<argument><expr><name><name pos:line="294" pos:column="38">sx<pos:position pos:line="294" pos:column="40"/></name><operator pos:line="294" pos:column="40">.<pos:position pos:line="294" pos:column="41"/></operator><name pos:line="294" pos:column="41">st<pos:position pos:line="294" pos:column="43"/></name><operator pos:line="294" pos:column="43">.<pos:position pos:line="294" pos:column="44"/></operator><name pos:line="294" pos:column="44">st_mode<pos:position pos:line="294" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="294" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="294" pos:column="53"/></condition><then pos:line="294" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><name pos:line="295" pos:column="33">statret<pos:position pos:line="295" pos:column="40"/></name> <operator pos:line="295" pos:column="41">=<pos:position pos:line="295" pos:column="42"/></operator> <operator pos:line="295" pos:column="43">-<pos:position pos:line="295" pos:column="44"/></operator><literal type="number" pos:line="295" pos:column="44">1<pos:position pos:line="295" pos:column="45"/></literal></expr>;<pos:position pos:line="295" pos:column="46"/></expr_stmt></block></then>
			<elseif pos:line="296" pos:column="25">else <if pos:line="296" pos:column="30">if <condition pos:line="296" pos:column="33">(<expr><operator pos:line="296" pos:column="34">(<pos:position pos:line="296" pos:column="35"/></operator><name pos:line="296" pos:column="35">len<pos:position pos:line="296" pos:column="38"/></name> <operator pos:line="296" pos:column="39">=<pos:position pos:line="296" pos:column="40"/></operator> <call><name pos:line="296" pos:column="41">readlink<pos:position pos:line="296" pos:column="49"/></name><argument_list pos:line="296" pos:column="49">(<argument><expr><name pos:line="296" pos:column="50">fname<pos:position pos:line="296" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="57">lnk<pos:position pos:line="296" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="62">MAXPATHLEN<pos:position pos:line="296" pos:column="72"/></name><operator pos:line="296" pos:column="72">-<pos:position pos:line="296" pos:column="73"/></operator><literal type="number" pos:line="296" pos:column="73">1<pos:position pos:line="296" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="296" pos:column="75"/></argument_list></call><operator pos:line="296" pos:column="75">)<pos:position pos:line="296" pos:column="76"/></operator> <operator pos:line="296" pos:column="77">&gt;<pos:position pos:line="296" pos:column="81"/></operator> <literal type="number" pos:line="296" pos:column="79">0<pos:position pos:line="296" pos:column="80"/></literal>
			      <operator pos:line="297" pos:column="31">&amp;&amp;<pos:position pos:line="297" pos:column="41"/></operator> <call><name pos:line="297" pos:column="34">strncmp<pos:position pos:line="297" pos:column="41"/></name><argument_list pos:line="297" pos:column="41">(<argument><expr><name pos:line="297" pos:column="42">lnk<pos:position pos:line="297" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="47">sl<pos:position pos:line="297" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="297" pos:column="51">len<pos:position pos:line="297" pos:column="54"/></name></expr></argument>)<pos:position pos:line="297" pos:column="55"/></argument_list></call> <operator pos:line="297" pos:column="56">==<pos:position pos:line="297" pos:column="58"/></operator> <literal type="number" pos:line="297" pos:column="59">0<pos:position pos:line="297" pos:column="60"/></literal> <operator pos:line="297" pos:column="61">&amp;&amp;<pos:position pos:line="297" pos:column="71"/></operator> <name><name pos:line="297" pos:column="64">sl<pos:position pos:line="297" pos:column="66"/></name><index pos:line="297" pos:column="66">[<expr><name pos:line="297" pos:column="67">len<pos:position pos:line="297" pos:column="70"/></name></expr>]<pos:position pos:line="297" pos:column="71"/></index></name> <operator pos:line="297" pos:column="72">==<pos:position pos:line="297" pos:column="74"/></operator> <literal type="char" pos:line="297" pos:column="75">'\0'<pos:position pos:line="297" pos:column="79"/></literal></expr>)<pos:position pos:line="297" pos:column="80"/></condition><then pos:line="297" pos:column="80"> <block pos:line="297" pos:column="81">{
				<comment type="block" pos:line="298" pos:column="33">/* The link is pointing to the right place. */</comment>
				<expr_stmt><expr><call><name pos:line="299" pos:column="33">set_file_attrs<pos:position pos:line="299" pos:column="47"/></name><argument_list pos:line="299" pos:column="47">(<argument><expr><name pos:line="299" pos:column="48">fname<pos:position pos:line="299" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="55">file<pos:position pos:line="299" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="299" pos:column="61">&amp;<pos:position pos:line="299" pos:column="66"/></operator><name pos:line="299" pos:column="62">sx<pos:position pos:line="299" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="66">NULL<pos:position pos:line="299" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="299" pos:column="72">maybe_ATTRS_REPORT<pos:position pos:line="299" pos:column="90"/></name></expr></argument>)<pos:position pos:line="299" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="92"/></expr_stmt>
				<if pos:line="300" pos:column="33">if <condition pos:line="300" pos:column="36">(<expr><name pos:line="300" pos:column="37">itemizing<pos:position pos:line="300" pos:column="46"/></name></expr>)<pos:position pos:line="300" pos:column="47"/></condition><then pos:line="300" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="301" pos:column="41">itemize<pos:position pos:line="301" pos:column="48"/></name><argument_list pos:line="301" pos:column="48">(<argument><expr><name pos:line="301" pos:column="49">fname<pos:position pos:line="301" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="56">file<pos:position pos:line="301" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="62">ndx<pos:position pos:line="301" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="301" pos:column="67">0<pos:position pos:line="301" pos:column="68"/></literal></expr></argument>, <argument><expr><operator pos:line="301" pos:column="70">&amp;<pos:position pos:line="301" pos:column="75"/></operator><name pos:line="301" pos:column="71">sx<pos:position pos:line="301" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="301" pos:column="75">0<pos:position pos:line="301" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="301" pos:column="78">0<pos:position pos:line="301" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="301" pos:column="81">NULL<pos:position pos:line="301" pos:column="85"/></name></expr></argument>)<pos:position pos:line="301" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="87"/></expr_stmt></block></then></if>
<cpp:if pos:line="302" pos:column="1">#<cpp:directive pos:line="302" pos:column="2">if<pos:position pos:line="302" pos:column="4"/></cpp:directive> <expr><name pos:line="302" pos:column="5">defined<pos:position pos:line="302" pos:column="12"/></name> <name pos:line="302" pos:column="13">SUPPORT_HARD_LINKS<pos:position pos:line="302" pos:column="31"/></name> <operator pos:line="302" pos:column="32">&amp;&amp;<pos:position pos:line="302" pos:column="42"/></operator> <name pos:line="302" pos:column="35">defined<pos:position pos:line="302" pos:column="42"/></name> <name pos:line="302" pos:column="43">CAN_HARDLINK_SYMLINK<pos:position pos:line="302" pos:column="63"/></name></expr></cpp:if>
				<if pos:line="303" pos:column="33">if <condition pos:line="303" pos:column="36">(<expr><name pos:line="303" pos:column="37">preserve_hard_links<pos:position pos:line="303" pos:column="56"/></name> <operator pos:line="303" pos:column="57">&amp;&amp;<pos:position pos:line="303" pos:column="67"/></operator> <call><name pos:line="303" pos:column="60">F_IS_HLINKED<pos:position pos:line="303" pos:column="72"/></name><argument_list pos:line="303" pos:column="72">(<argument><expr><name pos:line="303" pos:column="73">file<pos:position pos:line="303" pos:column="77"/></name></expr></argument>)<pos:position pos:line="303" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="303" pos:column="79"/></condition><then pos:line="303" pos:column="79">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="304" pos:column="41">finish_hard_link<pos:position pos:line="304" pos:column="57"/></name><argument_list pos:line="304" pos:column="57">(<argument><expr><name pos:line="304" pos:column="58">file<pos:position pos:line="304" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="64">fname<pos:position pos:line="304" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="71">ndx<pos:position pos:line="304" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="304" pos:column="76">&amp;<pos:position pos:line="304" pos:column="81"/></operator><name><name pos:line="304" pos:column="77">sx<pos:position pos:line="304" pos:column="79"/></name><operator pos:line="304" pos:column="79">.<pos:position pos:line="304" pos:column="80"/></operator><name pos:line="304" pos:column="80">st<pos:position pos:line="304" pos:column="82"/></name></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="84">itemizing<pos:position pos:line="304" pos:column="93"/></name></expr></argument>, <argument><expr><name pos:line="304" pos:column="95">code<pos:position pos:line="304" pos:column="99"/></name></expr></argument>, <argument><expr><operator pos:line="304" pos:column="101">-<pos:position pos:line="304" pos:column="102"/></operator><literal type="number" pos:line="304" pos:column="102">1<pos:position pos:line="304" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="304" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="105"/></expr_stmt></block></then></if>
<cpp:endif pos:line="305" pos:column="1">#<cpp:directive pos:line="305" pos:column="2">endif<pos:position pos:line="305" pos:column="7"/></cpp:directive></cpp:endif>
				<if pos:line="306" pos:column="33">if <condition pos:line="306" pos:column="36">(<expr><name pos:line="306" pos:column="37">remove_source_files<pos:position pos:line="306" pos:column="56"/></name> <operator pos:line="306" pos:column="57">==<pos:position pos:line="306" pos:column="59"/></operator> <literal type="number" pos:line="306" pos:column="60">1<pos:position pos:line="306" pos:column="61"/></literal></expr>)<pos:position pos:line="306" pos:column="62"/></condition><then pos:line="306" pos:column="62">
					<block type="pseudo"><goto pos:line="307" pos:column="41">goto <name pos:line="307" pos:column="46">return_with_success<pos:position pos:line="307" pos:column="65"/></name>;<pos:position pos:line="307" pos:column="66"/></goto></block></then></if>
				<goto pos:line="308" pos:column="33">goto <name pos:line="308" pos:column="38">cleanup<pos:position pos:line="308" pos:column="45"/></name>;<pos:position pos:line="308" pos:column="46"/></goto>
			}<pos:position pos:line="309" pos:column="26"/></block></then></if></elseif></if>
			<comment type="block" pos:line="310" pos:column="25">/* Not the right symlink (or not a symlink), so
			 * delete it. */</comment>
			<if pos:line="312" pos:column="25">if <condition pos:line="312" pos:column="28">(<expr><call><name pos:line="312" pos:column="29">delete_item<pos:position pos:line="312" pos:column="40"/></name><argument_list pos:line="312" pos:column="40">(<argument><expr><name pos:line="312" pos:column="41">fname<pos:position pos:line="312" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="312" pos:column="48">sx<pos:position pos:line="312" pos:column="50"/></name><operator pos:line="312" pos:column="50">.<pos:position pos:line="312" pos:column="51"/></operator><name pos:line="312" pos:column="51">st<pos:position pos:line="312" pos:column="53"/></name><operator pos:line="312" pos:column="53">.<pos:position pos:line="312" pos:column="54"/></operator><name pos:line="312" pos:column="54">st_mode<pos:position pos:line="312" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="312" pos:column="63">del_opts<pos:position pos:line="312" pos:column="71"/></name> <operator pos:line="312" pos:column="72">|<pos:position pos:line="312" pos:column="73"/></operator> <name pos:line="312" pos:column="74">DEL_FOR_SYMLINK<pos:position pos:line="312" pos:column="89"/></name></expr></argument>)<pos:position pos:line="312" pos:column="90"/></argument_list></call> <operator pos:line="312" pos:column="91">!=<pos:position pos:line="312" pos:column="93"/></operator> <literal type="number" pos:line="312" pos:column="94">0<pos:position pos:line="312" pos:column="95"/></literal></expr>)<pos:position pos:line="312" pos:column="96"/></condition><then pos:line="312" pos:column="96">
				<block type="pseudo"><goto pos:line="313" pos:column="33">goto <name pos:line="313" pos:column="38">cleanup<pos:position pos:line="313" pos:column="45"/></name>;<pos:position pos:line="313" pos:column="46"/></goto></block></then></if>
		}<pos:position pos:line="314" pos:column="18"/></block></then> <elseif pos:line="314" pos:column="19">else <if pos:line="314" pos:column="24">if <condition pos:line="314" pos:column="27">(<expr><name><name pos:line="314" pos:column="28">basis_dir<pos:position pos:line="314" pos:column="37"/></name><index pos:line="314" pos:column="37">[<expr><literal type="number" pos:line="314" pos:column="38">0<pos:position pos:line="314" pos:column="39"/></literal></expr>]<pos:position pos:line="314" pos:column="40"/></index></name> <operator pos:line="314" pos:column="41">!=<pos:position pos:line="314" pos:column="43"/></operator> <name pos:line="314" pos:column="44">NULL<pos:position pos:line="314" pos:column="48"/></name></expr>)<pos:position pos:line="314" pos:column="49"/></condition><then pos:line="314" pos:column="49"> <block pos:line="314" pos:column="50">{
			<decl_stmt><decl><type><name pos:line="315" pos:column="25">int<pos:position pos:line="315" pos:column="28"/></name></type> <name pos:line="315" pos:column="29">j<pos:position pos:line="315" pos:column="30"/></name> <init pos:line="315" pos:column="31">= <expr><call><name pos:line="315" pos:column="33">try_dests_non<pos:position pos:line="315" pos:column="46"/></name><argument_list pos:line="315" pos:column="46">(<argument><expr><name pos:line="315" pos:column="47">file<pos:position pos:line="315" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="53">fname<pos:position pos:line="315" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="60">ndx<pos:position pos:line="315" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="315" pos:column="65">fnamecmpbuf<pos:position pos:line="315" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="315" pos:column="78">&amp;<pos:position pos:line="315" pos:column="83"/></operator><name pos:line="315" pos:column="79">sx<pos:position pos:line="315" pos:column="81"/></name></expr></argument>,
					      <argument><expr><name pos:line="316" pos:column="47">itemizing<pos:position pos:line="316" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="58">code<pos:position pos:line="316" pos:column="62"/></name></expr></argument>)<pos:position pos:line="316" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="316" pos:column="64"/></decl_stmt>
			<if pos:line="317" pos:column="25">if <condition pos:line="317" pos:column="28">(<expr><name pos:line="317" pos:column="29">j<pos:position pos:line="317" pos:column="30"/></name> <operator pos:line="317" pos:column="31">==<pos:position pos:line="317" pos:column="33"/></operator> <operator pos:line="317" pos:column="34">-<pos:position pos:line="317" pos:column="35"/></operator><literal type="number" pos:line="317" pos:column="35">2<pos:position pos:line="317" pos:column="36"/></literal></expr>)<pos:position pos:line="317" pos:column="37"/></condition><then pos:line="317" pos:column="37"> <block pos:line="317" pos:column="38">{
<cpp:ifndef pos:line="318" pos:column="1">#<cpp:directive pos:line="318" pos:column="2">ifndef<pos:position pos:line="318" pos:column="8"/></cpp:directive> <name pos:line="318" pos:column="9">CAN_HARDLINK_SYMLINK<pos:position pos:line="318" pos:column="29"/></name></cpp:ifndef>
				<if pos:line="319" pos:column="33">if <condition pos:line="319" pos:column="36">(<expr><name pos:line="319" pos:column="37">link_dest<pos:position pos:line="319" pos:column="46"/></name></expr>)<pos:position pos:line="319" pos:column="47"/></condition><then pos:line="319" pos:column="47"> <block pos:line="319" pos:column="48">{
					<comment type="block" pos:line="320" pos:column="41">/* Resort to --copy-dest behavior. */</comment>
				}<pos:position pos:line="321" pos:column="34"/></block></then> <elseif pos:line="321" pos:column="35">else
<cpp:endif pos:line="322" pos:column="1">#<cpp:directive pos:line="322" pos:column="2">endif<pos:position pos:line="322" pos:column="7"/></cpp:directive></cpp:endif>
				<if pos:line="323" pos:column="33">if <condition pos:line="323" pos:column="36">(<expr><operator pos:line="323" pos:column="37">!<pos:position pos:line="323" pos:column="38"/></operator><name pos:line="323" pos:column="38">copy_dest<pos:position pos:line="323" pos:column="47"/></name></expr>)<pos:position pos:line="323" pos:column="48"/></condition><then pos:line="323" pos:column="48">
					<block type="pseudo"><goto pos:line="324" pos:column="41">goto <name pos:line="324" pos:column="46">cleanup<pos:position pos:line="324" pos:column="53"/></name>;<pos:position pos:line="324" pos:column="54"/></goto></block></then></if></elseif></if>
				<expr_stmt><expr><name pos:line="325" pos:column="33">itemizing<pos:position pos:line="325" pos:column="42"/></name> <operator pos:line="325" pos:column="43">=<pos:position pos:line="325" pos:column="44"/></operator> <literal type="number" pos:line="325" pos:column="45">0<pos:position pos:line="325" pos:column="46"/></literal></expr>;<pos:position pos:line="325" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="326" pos:column="33">code<pos:position pos:line="326" pos:column="37"/></name> <operator pos:line="326" pos:column="38">=<pos:position pos:line="326" pos:column="39"/></operator> <name pos:line="326" pos:column="40">FNONE<pos:position pos:line="326" pos:column="45"/></name></expr>;<pos:position pos:line="326" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="327" pos:column="26"/></block></then> <elseif pos:line="327" pos:column="27">else <if pos:line="327" pos:column="32">if <condition pos:line="327" pos:column="35">(<expr><name pos:line="327" pos:column="36">j<pos:position pos:line="327" pos:column="37"/></name> <operator pos:line="327" pos:column="38">&gt;=<pos:position pos:line="327" pos:column="43"/></operator> <literal type="number" pos:line="327" pos:column="41">0<pos:position pos:line="327" pos:column="42"/></literal></expr>)<pos:position pos:line="327" pos:column="43"/></condition><then pos:line="327" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><name pos:line="328" pos:column="33">statret<pos:position pos:line="328" pos:column="40"/></name> <operator pos:line="328" pos:column="41">=<pos:position pos:line="328" pos:column="42"/></operator> <literal type="number" pos:line="328" pos:column="43">1<pos:position pos:line="328" pos:column="44"/></literal></expr>;<pos:position pos:line="328" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="329" pos:column="18"/></block></then></if></elseif></if>
<cpp:ifdef pos:line="330" pos:column="1">#<cpp:directive pos:line="330" pos:column="2">ifdef<pos:position pos:line="330" pos:column="7"/></cpp:directive> <name pos:line="330" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="330" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="331" pos:column="17">if <condition pos:line="331" pos:column="20">(<expr><name pos:line="331" pos:column="21">preserve_hard_links<pos:position pos:line="331" pos:column="40"/></name> <operator pos:line="331" pos:column="41">&amp;&amp;<pos:position pos:line="331" pos:column="51"/></operator> <call><name pos:line="331" pos:column="44">F_HLINK_NOT_LAST<pos:position pos:line="331" pos:column="60"/></name><argument_list pos:line="331" pos:column="60">(<argument><expr><name pos:line="331" pos:column="61">file<pos:position pos:line="331" pos:column="65"/></name></expr></argument>)<pos:position pos:line="331" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="331" pos:column="67"/></condition><then pos:line="331" pos:column="67"> <block pos:line="331" pos:column="68">{
			<expr_stmt><expr><name><name pos:line="332" pos:column="25">cur_flist<pos:position pos:line="332" pos:column="34"/></name><operator pos:line="332" pos:column="34">-&gt;<pos:position pos:line="332" pos:column="39"/></operator><name pos:line="332" pos:column="36">in_progress<pos:position pos:line="332" pos:column="47"/></name></name><operator pos:line="332" pos:column="47">++<pos:position pos:line="332" pos:column="49"/></operator></expr>;<pos:position pos:line="332" pos:column="50"/></expr_stmt>
			<goto pos:line="333" pos:column="25">goto <name pos:line="333" pos:column="30">cleanup<pos:position pos:line="333" pos:column="37"/></name>;<pos:position pos:line="333" pos:column="38"/></goto>
		}<pos:position pos:line="334" pos:column="18"/></block></then></if>
<cpp:endif pos:line="335" pos:column="1">#<cpp:directive pos:line="335" pos:column="2">endif<pos:position pos:line="335" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="336" pos:column="17">if <condition pos:line="336" pos:column="20">(<expr><call><name pos:line="336" pos:column="21">do_symlink<pos:position pos:line="336" pos:column="31"/></name><argument_list pos:line="336" pos:column="31">(<argument><expr><name pos:line="336" pos:column="32">sl<pos:position pos:line="336" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="336" pos:column="36">fname<pos:position pos:line="336" pos:column="41"/></name></expr></argument>)<pos:position pos:line="336" pos:column="42"/></argument_list></call> <operator pos:line="336" pos:column="43">!=<pos:position pos:line="336" pos:column="45"/></operator> <literal type="number" pos:line="336" pos:column="46">0<pos:position pos:line="336" pos:column="47"/></literal></expr>)<pos:position pos:line="336" pos:column="48"/></condition><then pos:line="336" pos:column="48"> <block pos:line="336" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="337" pos:column="25">rsyserr<pos:position pos:line="337" pos:column="32"/></name><argument_list pos:line="337" pos:column="32">(<argument><expr><name pos:line="337" pos:column="33">FERROR_XFER<pos:position pos:line="337" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="337" pos:column="46">errno<pos:position pos:line="337" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="337" pos:column="53">"symlink %s -&gt; \"%s\" failed"<pos:position pos:line="337" pos:column="85"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="338" pos:column="33">full_fname<pos:position pos:line="338" pos:column="43"/></name><argument_list pos:line="338" pos:column="43">(<argument><expr><name pos:line="338" pos:column="44">fname<pos:position pos:line="338" pos:column="49"/></name></expr></argument>)<pos:position pos:line="338" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="338" pos:column="52">sl<pos:position pos:line="338" pos:column="54"/></name></expr></argument>)<pos:position pos:line="338" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="339" pos:column="18"/></block></then> <else pos:line="339" pos:column="19">else <block pos:line="339" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="340" pos:column="25">set_file_attrs<pos:position pos:line="340" pos:column="39"/></name><argument_list pos:line="340" pos:column="39">(<argument><expr><name pos:line="340" pos:column="40">fname<pos:position pos:line="340" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="340" pos:column="47">file<pos:position pos:line="340" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="340" pos:column="53">NULL<pos:position pos:line="340" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="340" pos:column="59">NULL<pos:position pos:line="340" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="340" pos:column="65">0<pos:position pos:line="340" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="68"/></expr_stmt>
			<if pos:line="341" pos:column="25">if <condition pos:line="341" pos:column="28">(<expr><name pos:line="341" pos:column="29">itemizing<pos:position pos:line="341" pos:column="38"/></name></expr>)<pos:position pos:line="341" pos:column="39"/></condition><then pos:line="341" pos:column="39"> <block pos:line="341" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="342" pos:column="33">itemize<pos:position pos:line="342" pos:column="40"/></name><argument_list pos:line="342" pos:column="40">(<argument><expr><name pos:line="342" pos:column="41">fname<pos:position pos:line="342" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="342" pos:column="48">file<pos:position pos:line="342" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="342" pos:column="54">ndx<pos:position pos:line="342" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="342" pos:column="59">statret<pos:position pos:line="342" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="342" pos:column="68">&amp;<pos:position pos:line="342" pos:column="73"/></operator><name pos:line="342" pos:column="69">sx<pos:position pos:line="342" pos:column="71"/></name></expr></argument>,
					<argument><expr><name pos:line="343" pos:column="41">ITEM_LOCAL_CHANGE<pos:position pos:line="343" pos:column="58"/></name><operator pos:line="343" pos:column="58">|<pos:position pos:line="343" pos:column="59"/></operator><name pos:line="343" pos:column="59">ITEM_REPORT_CHANGE<pos:position pos:line="343" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="343" pos:column="79">0<pos:position pos:line="343" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="343" pos:column="82">NULL<pos:position pos:line="343" pos:column="86"/></name></expr></argument>)<pos:position pos:line="343" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="88"/></expr_stmt>
			}<pos:position pos:line="344" pos:column="26"/></block></then></if>
			<if pos:line="345" pos:column="25">if <condition pos:line="345" pos:column="28">(<expr><name pos:line="345" pos:column="29">code<pos:position pos:line="345" pos:column="33"/></name> <operator pos:line="345" pos:column="34">!=<pos:position pos:line="345" pos:column="36"/></operator> <name pos:line="345" pos:column="37">FNONE<pos:position pos:line="345" pos:column="42"/></name> <operator pos:line="345" pos:column="43">&amp;&amp;<pos:position pos:line="345" pos:column="53"/></operator> <name pos:line="345" pos:column="46">verbose<pos:position pos:line="345" pos:column="53"/></name></expr>)<pos:position pos:line="345" pos:column="54"/></condition><then pos:line="345" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="346" pos:column="33">rprintf<pos:position pos:line="346" pos:column="40"/></name><argument_list pos:line="346" pos:column="40">(<argument><expr><name pos:line="346" pos:column="41">code<pos:position pos:line="346" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="346" pos:column="47">"%s -&gt; %s\n"<pos:position pos:line="346" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="346" pos:column="61">fname<pos:position pos:line="346" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="346" pos:column="68">sl<pos:position pos:line="346" pos:column="70"/></name></expr></argument>)<pos:position pos:line="346" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="72"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="347" pos:column="1">#<cpp:directive pos:line="347" pos:column="2">ifdef<pos:position pos:line="347" pos:column="7"/></cpp:directive> <name pos:line="347" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="347" pos:column="26"/></name></cpp:ifdef>
			<if pos:line="348" pos:column="25">if <condition pos:line="348" pos:column="28">(<expr><name pos:line="348" pos:column="29">preserve_hard_links<pos:position pos:line="348" pos:column="48"/></name> <operator pos:line="348" pos:column="49">&amp;&amp;<pos:position pos:line="348" pos:column="59"/></operator> <call><name pos:line="348" pos:column="52">F_IS_HLINKED<pos:position pos:line="348" pos:column="64"/></name><argument_list pos:line="348" pos:column="64">(<argument><expr><name pos:line="348" pos:column="65">file<pos:position pos:line="348" pos:column="69"/></name></expr></argument>)<pos:position pos:line="348" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="348" pos:column="71"/></condition><then pos:line="348" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="349" pos:column="33">finish_hard_link<pos:position pos:line="349" pos:column="49"/></name><argument_list pos:line="349" pos:column="49">(<argument><expr><name pos:line="349" pos:column="50">file<pos:position pos:line="349" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="56">fname<pos:position pos:line="349" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="63">ndx<pos:position pos:line="349" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="68">NULL<pos:position pos:line="349" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="74">itemizing<pos:position pos:line="349" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="85">code<pos:position pos:line="349" pos:column="89"/></name></expr></argument>, <argument><expr><operator pos:line="349" pos:column="91">-<pos:position pos:line="349" pos:column="92"/></operator><literal type="number" pos:line="349" pos:column="92">1<pos:position pos:line="349" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="349" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="95"/></expr_stmt></block></then></if>
<cpp:endif pos:line="350" pos:column="1">#<cpp:directive pos:line="350" pos:column="2">endif<pos:position pos:line="350" pos:column="7"/></cpp:directive></cpp:endif>
			<comment type="block" pos:line="351" pos:column="25">/* This does not check remove_source_files == 1
			 * because this is one of the items that the old
			 * --remove-sent-files option would remove. */</comment>
			<if pos:line="354" pos:column="25">if <condition pos:line="354" pos:column="28">(<expr><name pos:line="354" pos:column="29">remove_source_files<pos:position pos:line="354" pos:column="48"/></name></expr>)<pos:position pos:line="354" pos:column="49"/></condition><then pos:line="354" pos:column="49">
				<block type="pseudo"><goto pos:line="355" pos:column="33">goto <name pos:line="355" pos:column="38">return_with_success<pos:position pos:line="355" pos:column="57"/></name>;<pos:position pos:line="355" pos:column="58"/></goto></block></then></if>
		}<pos:position pos:line="356" pos:column="18"/></block></else></if>
<cpp:endif pos:line="357" pos:column="1">#<cpp:directive pos:line="357" pos:column="2">endif<pos:position pos:line="357" pos:column="7"/></cpp:directive></cpp:endif>
		<goto pos:line="358" pos:column="17">goto <name pos:line="358" pos:column="22">cleanup<pos:position pos:line="358" pos:column="29"/></name>;<pos:position pos:line="358" pos:column="30"/></goto>
	}<pos:position pos:line="359" pos:column="10"/></block></then></if>

	<if pos:line="361" pos:column="9">if <condition pos:line="361" pos:column="12">(<expr><operator pos:line="361" pos:column="13">(<pos:position pos:line="361" pos:column="14"/></operator><name pos:line="361" pos:column="14">am_root<pos:position pos:line="361" pos:column="21"/></name> <operator pos:line="361" pos:column="22">&amp;&amp;<pos:position pos:line="361" pos:column="32"/></operator> <name pos:line="361" pos:column="25">preserve_devices<pos:position pos:line="361" pos:column="41"/></name> <operator pos:line="361" pos:column="42">&amp;&amp;<pos:position pos:line="361" pos:column="52"/></operator> <call><name pos:line="361" pos:column="45">IS_DEVICE<pos:position pos:line="361" pos:column="54"/></name><argument_list pos:line="361" pos:column="54">(<argument><expr><name><name pos:line="361" pos:column="55">file<pos:position pos:line="361" pos:column="59"/></name><operator pos:line="361" pos:column="59">-&gt;<pos:position pos:line="361" pos:column="64"/></operator><name pos:line="361" pos:column="61">mode<pos:position pos:line="361" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="361" pos:column="66"/></argument_list></call><operator pos:line="361" pos:column="66">)<pos:position pos:line="361" pos:column="67"/></operator>
	 <operator pos:line="362" pos:column="10">||<pos:position pos:line="362" pos:column="12"/></operator> <operator pos:line="362" pos:column="13">(<pos:position pos:line="362" pos:column="14"/></operator><name pos:line="362" pos:column="14">preserve_specials<pos:position pos:line="362" pos:column="31"/></name> <operator pos:line="362" pos:column="32">&amp;&amp;<pos:position pos:line="362" pos:column="42"/></operator> <call><name pos:line="362" pos:column="35">IS_SPECIAL<pos:position pos:line="362" pos:column="45"/></name><argument_list pos:line="362" pos:column="45">(<argument><expr><name><name pos:line="362" pos:column="46">file<pos:position pos:line="362" pos:column="50"/></name><operator pos:line="362" pos:column="50">-&gt;<pos:position pos:line="362" pos:column="55"/></operator><name pos:line="362" pos:column="52">mode<pos:position pos:line="362" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="362" pos:column="57"/></argument_list></call><operator pos:line="362" pos:column="57">)<pos:position pos:line="362" pos:column="58"/></operator></expr>)<pos:position pos:line="362" pos:column="59"/></condition><then pos:line="362" pos:column="59"> <block pos:line="362" pos:column="60">{
		<decl_stmt><decl><type><name pos:line="363" pos:column="17">uint32<pos:position pos:line="363" pos:column="23"/></name> <modifier pos:line="363" pos:column="24">*<pos:position pos:line="363" pos:column="25"/></modifier></type><name pos:line="363" pos:column="25">devp<pos:position pos:line="363" pos:column="29"/></name> <init pos:line="363" pos:column="30">= <expr><call><name pos:line="363" pos:column="32">F_RDEV_P<pos:position pos:line="363" pos:column="40"/></name><argument_list pos:line="363" pos:column="40">(<argument><expr><name pos:line="363" pos:column="41">file<pos:position pos:line="363" pos:column="45"/></name></expr></argument>)<pos:position pos:line="363" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="363" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="364" pos:column="17">dev_t<pos:position pos:line="364" pos:column="22"/></name></type> <name pos:line="364" pos:column="23">rdev<pos:position pos:line="364" pos:column="27"/></name> <init pos:line="364" pos:column="28">= <expr><call><name pos:line="364" pos:column="30">MAKEDEV<pos:position pos:line="364" pos:column="37"/></name><argument_list pos:line="364" pos:column="37">(<argument><expr><call><name pos:line="364" pos:column="38">DEV_MAJOR<pos:position pos:line="364" pos:column="47"/></name><argument_list pos:line="364" pos:column="47">(<argument><expr><name pos:line="364" pos:column="48">devp<pos:position pos:line="364" pos:column="52"/></name></expr></argument>)<pos:position pos:line="364" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="364" pos:column="55">DEV_MINOR<pos:position pos:line="364" pos:column="64"/></name><argument_list pos:line="364" pos:column="64">(<argument><expr><name pos:line="364" pos:column="65">devp<pos:position pos:line="364" pos:column="69"/></name></expr></argument>)<pos:position pos:line="364" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="364" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="364" pos:column="72"/></decl_stmt>
		<if pos:line="365" pos:column="17">if <condition pos:line="365" pos:column="20">(<expr><name pos:line="365" pos:column="21">statret<pos:position pos:line="365" pos:column="28"/></name> <operator pos:line="365" pos:column="29">==<pos:position pos:line="365" pos:column="31"/></operator> <literal type="number" pos:line="365" pos:column="32">0<pos:position pos:line="365" pos:column="33"/></literal></expr>)<pos:position pos:line="365" pos:column="34"/></condition><then pos:line="365" pos:column="34"> <block pos:line="365" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="366" pos:column="25">int<pos:position pos:line="366" pos:column="28"/></name></type> <name pos:line="366" pos:column="29">del_for_flag<pos:position pos:line="366" pos:column="41"/></name></decl>;<pos:position pos:line="366" pos:column="42"/></decl_stmt>
			<if pos:line="367" pos:column="25">if <condition pos:line="367" pos:column="28">(<expr><call><name pos:line="367" pos:column="29">IS_DEVICE<pos:position pos:line="367" pos:column="38"/></name><argument_list pos:line="367" pos:column="38">(<argument><expr><name><name pos:line="367" pos:column="39">file<pos:position pos:line="367" pos:column="43"/></name><operator pos:line="367" pos:column="43">-&gt;<pos:position pos:line="367" pos:column="48"/></operator><name pos:line="367" pos:column="45">mode<pos:position pos:line="367" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="367" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="367" pos:column="51"/></condition><then pos:line="367" pos:column="51"> <block pos:line="367" pos:column="52">{
				<if pos:line="368" pos:column="33">if <condition pos:line="368" pos:column="36">(<expr><operator pos:line="368" pos:column="37">!<pos:position pos:line="368" pos:column="38"/></operator><call><name pos:line="368" pos:column="38">IS_DEVICE<pos:position pos:line="368" pos:column="47"/></name><argument_list pos:line="368" pos:column="47">(<argument><expr><name><name pos:line="368" pos:column="48">sx<pos:position pos:line="368" pos:column="50"/></name><operator pos:line="368" pos:column="50">.<pos:position pos:line="368" pos:column="51"/></operator><name pos:line="368" pos:column="51">st<pos:position pos:line="368" pos:column="53"/></name><operator pos:line="368" pos:column="53">.<pos:position pos:line="368" pos:column="54"/></operator><name pos:line="368" pos:column="54">st_mode<pos:position pos:line="368" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="368" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="368" pos:column="63"/></condition><then pos:line="368" pos:column="63">
					<block type="pseudo"><expr_stmt><expr><name pos:line="369" pos:column="41">statret<pos:position pos:line="369" pos:column="48"/></name> <operator pos:line="369" pos:column="49">=<pos:position pos:line="369" pos:column="50"/></operator> <operator pos:line="369" pos:column="51">-<pos:position pos:line="369" pos:column="52"/></operator><literal type="number" pos:line="369" pos:column="52">1<pos:position pos:line="369" pos:column="53"/></literal></expr>;<pos:position pos:line="369" pos:column="54"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="370" pos:column="33">del_for_flag<pos:position pos:line="370" pos:column="45"/></name> <operator pos:line="370" pos:column="46">=<pos:position pos:line="370" pos:column="47"/></operator> <name pos:line="370" pos:column="48">DEL_FOR_DEVICE<pos:position pos:line="370" pos:column="62"/></name></expr>;<pos:position pos:line="370" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="371" pos:column="26"/></block></then> <else pos:line="371" pos:column="27">else <block pos:line="371" pos:column="32">{
				<if pos:line="372" pos:column="33">if <condition pos:line="372" pos:column="36">(<expr><operator pos:line="372" pos:column="37">!<pos:position pos:line="372" pos:column="38"/></operator><call><name pos:line="372" pos:column="38">IS_SPECIAL<pos:position pos:line="372" pos:column="48"/></name><argument_list pos:line="372" pos:column="48">(<argument><expr><name><name pos:line="372" pos:column="49">sx<pos:position pos:line="372" pos:column="51"/></name><operator pos:line="372" pos:column="51">.<pos:position pos:line="372" pos:column="52"/></operator><name pos:line="372" pos:column="52">st<pos:position pos:line="372" pos:column="54"/></name><operator pos:line="372" pos:column="54">.<pos:position pos:line="372" pos:column="55"/></operator><name pos:line="372" pos:column="55">st_mode<pos:position pos:line="372" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="372" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="372" pos:column="64"/></condition><then pos:line="372" pos:column="64">
					<block type="pseudo"><expr_stmt><expr><name pos:line="373" pos:column="41">statret<pos:position pos:line="373" pos:column="48"/></name> <operator pos:line="373" pos:column="49">=<pos:position pos:line="373" pos:column="50"/></operator> <operator pos:line="373" pos:column="51">-<pos:position pos:line="373" pos:column="52"/></operator><literal type="number" pos:line="373" pos:column="52">1<pos:position pos:line="373" pos:column="53"/></literal></expr>;<pos:position pos:line="373" pos:column="54"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="374" pos:column="33">del_for_flag<pos:position pos:line="374" pos:column="45"/></name> <operator pos:line="374" pos:column="46">=<pos:position pos:line="374" pos:column="47"/></operator> <name pos:line="374" pos:column="48">DEL_FOR_SPECIAL<pos:position pos:line="374" pos:column="63"/></name></expr>;<pos:position pos:line="374" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="375" pos:column="26"/></block></else></if>
			<if pos:line="376" pos:column="25">if <condition pos:line="376" pos:column="28">(<expr><name pos:line="376" pos:column="29">statret<pos:position pos:line="376" pos:column="36"/></name> <operator pos:line="376" pos:column="37">==<pos:position pos:line="376" pos:column="39"/></operator> <literal type="number" pos:line="376" pos:column="40">0<pos:position pos:line="376" pos:column="41"/></literal>
			 <operator pos:line="377" pos:column="26">&amp;&amp;<pos:position pos:line="377" pos:column="36"/></operator> <call><name pos:line="377" pos:column="29">BITS_EQUAL<pos:position pos:line="377" pos:column="39"/></name><argument_list pos:line="377" pos:column="39">(<argument><expr><name><name pos:line="377" pos:column="40">sx<pos:position pos:line="377" pos:column="42"/></name><operator pos:line="377" pos:column="42">.<pos:position pos:line="377" pos:column="43"/></operator><name pos:line="377" pos:column="43">st<pos:position pos:line="377" pos:column="45"/></name><operator pos:line="377" pos:column="45">.<pos:position pos:line="377" pos:column="46"/></operator><name pos:line="377" pos:column="46">st_mode<pos:position pos:line="377" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="377" pos:column="55">file<pos:position pos:line="377" pos:column="59"/></name><operator pos:line="377" pos:column="59">-&gt;<pos:position pos:line="377" pos:column="64"/></operator><name pos:line="377" pos:column="61">mode<pos:position pos:line="377" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="377" pos:column="67">_S_IFMT<pos:position pos:line="377" pos:column="74"/></name></expr></argument>)<pos:position pos:line="377" pos:column="75"/></argument_list></call>
			 <operator pos:line="378" pos:column="26">&amp;&amp;<pos:position pos:line="378" pos:column="36"/></operator> <name><name pos:line="378" pos:column="29">sx<pos:position pos:line="378" pos:column="31"/></name><operator pos:line="378" pos:column="31">.<pos:position pos:line="378" pos:column="32"/></operator><name pos:line="378" pos:column="32">st<pos:position pos:line="378" pos:column="34"/></name><operator pos:line="378" pos:column="34">.<pos:position pos:line="378" pos:column="35"/></operator><name pos:line="378" pos:column="35">st_rdev<pos:position pos:line="378" pos:column="42"/></name></name> <operator pos:line="378" pos:column="43">==<pos:position pos:line="378" pos:column="45"/></operator> <name pos:line="378" pos:column="46">rdev<pos:position pos:line="378" pos:column="50"/></name></expr>)<pos:position pos:line="378" pos:column="51"/></condition><then pos:line="378" pos:column="51"> <block pos:line="378" pos:column="52">{
				<comment type="block" pos:line="379" pos:column="33">/* The device or special file is identical. */</comment>
				<expr_stmt><expr><call><name pos:line="380" pos:column="33">set_file_attrs<pos:position pos:line="380" pos:column="47"/></name><argument_list pos:line="380" pos:column="47">(<argument><expr><name pos:line="380" pos:column="48">fname<pos:position pos:line="380" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="55">file<pos:position pos:line="380" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="380" pos:column="61">&amp;<pos:position pos:line="380" pos:column="66"/></operator><name pos:line="380" pos:column="62">sx<pos:position pos:line="380" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="66">NULL<pos:position pos:line="380" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="72">maybe_ATTRS_REPORT<pos:position pos:line="380" pos:column="90"/></name></expr></argument>)<pos:position pos:line="380" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="92"/></expr_stmt>
				<if pos:line="381" pos:column="33">if <condition pos:line="381" pos:column="36">(<expr><name pos:line="381" pos:column="37">itemizing<pos:position pos:line="381" pos:column="46"/></name></expr>)<pos:position pos:line="381" pos:column="47"/></condition><then pos:line="381" pos:column="47">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="382" pos:column="41">itemize<pos:position pos:line="382" pos:column="48"/></name><argument_list pos:line="382" pos:column="48">(<argument><expr><name pos:line="382" pos:column="49">fname<pos:position pos:line="382" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="382" pos:column="56">file<pos:position pos:line="382" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="382" pos:column="62">ndx<pos:position pos:line="382" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="382" pos:column="67">0<pos:position pos:line="382" pos:column="68"/></literal></expr></argument>, <argument><expr><operator pos:line="382" pos:column="70">&amp;<pos:position pos:line="382" pos:column="75"/></operator><name pos:line="382" pos:column="71">sx<pos:position pos:line="382" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="382" pos:column="75">0<pos:position pos:line="382" pos:column="76"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="382" pos:column="78">0<pos:position pos:line="382" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="382" pos:column="81">NULL<pos:position pos:line="382" pos:column="85"/></name></expr></argument>)<pos:position pos:line="382" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="87"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="383" pos:column="1">#<cpp:directive pos:line="383" pos:column="2">ifdef<pos:position pos:line="383" pos:column="7"/></cpp:directive> <name pos:line="383" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="383" pos:column="26"/></name></cpp:ifdef>
				<if pos:line="384" pos:column="33">if <condition pos:line="384" pos:column="36">(<expr><name pos:line="384" pos:column="37">preserve_hard_links<pos:position pos:line="384" pos:column="56"/></name> <operator pos:line="384" pos:column="57">&amp;&amp;<pos:position pos:line="384" pos:column="67"/></operator> <call><name pos:line="384" pos:column="60">F_IS_HLINKED<pos:position pos:line="384" pos:column="72"/></name><argument_list pos:line="384" pos:column="72">(<argument><expr><name pos:line="384" pos:column="73">file<pos:position pos:line="384" pos:column="77"/></name></expr></argument>)<pos:position pos:line="384" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="384" pos:column="79"/></condition><then pos:line="384" pos:column="79">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="385" pos:column="41">finish_hard_link<pos:position pos:line="385" pos:column="57"/></name><argument_list pos:line="385" pos:column="57">(<argument><expr><name pos:line="385" pos:column="58">file<pos:position pos:line="385" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="64">fname<pos:position pos:line="385" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="71">ndx<pos:position pos:line="385" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="385" pos:column="76">&amp;<pos:position pos:line="385" pos:column="81"/></operator><name><name pos:line="385" pos:column="77">sx<pos:position pos:line="385" pos:column="79"/></name><operator pos:line="385" pos:column="79">.<pos:position pos:line="385" pos:column="80"/></operator><name pos:line="385" pos:column="80">st<pos:position pos:line="385" pos:column="82"/></name></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="84">itemizing<pos:position pos:line="385" pos:column="93"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="95">code<pos:position pos:line="385" pos:column="99"/></name></expr></argument>, <argument><expr><operator pos:line="385" pos:column="101">-<pos:position pos:line="385" pos:column="102"/></operator><literal type="number" pos:line="385" pos:column="102">1<pos:position pos:line="385" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="385" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="105"/></expr_stmt></block></then></if>
<cpp:endif pos:line="386" pos:column="1">#<cpp:directive pos:line="386" pos:column="2">endif<pos:position pos:line="386" pos:column="7"/></cpp:directive></cpp:endif>
				<if pos:line="387" pos:column="33">if <condition pos:line="387" pos:column="36">(<expr><name pos:line="387" pos:column="37">remove_source_files<pos:position pos:line="387" pos:column="56"/></name> <operator pos:line="387" pos:column="57">==<pos:position pos:line="387" pos:column="59"/></operator> <literal type="number" pos:line="387" pos:column="60">1<pos:position pos:line="387" pos:column="61"/></literal></expr>)<pos:position pos:line="387" pos:column="62"/></condition><then pos:line="387" pos:column="62">
					<block type="pseudo"><goto pos:line="388" pos:column="41">goto <name pos:line="388" pos:column="46">return_with_success<pos:position pos:line="388" pos:column="65"/></name>;<pos:position pos:line="388" pos:column="66"/></goto></block></then></if>
				<goto pos:line="389" pos:column="33">goto <name pos:line="389" pos:column="38">cleanup<pos:position pos:line="389" pos:column="45"/></name>;<pos:position pos:line="389" pos:column="46"/></goto>
			}<pos:position pos:line="390" pos:column="26"/></block></then></if>
			<if pos:line="391" pos:column="25">if <condition pos:line="391" pos:column="28">(<expr><call><name pos:line="391" pos:column="29">delete_item<pos:position pos:line="391" pos:column="40"/></name><argument_list pos:line="391" pos:column="40">(<argument><expr><name pos:line="391" pos:column="41">fname<pos:position pos:line="391" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="391" pos:column="48">sx<pos:position pos:line="391" pos:column="50"/></name><operator pos:line="391" pos:column="50">.<pos:position pos:line="391" pos:column="51"/></operator><name pos:line="391" pos:column="51">st<pos:position pos:line="391" pos:column="53"/></name><operator pos:line="391" pos:column="53">.<pos:position pos:line="391" pos:column="54"/></operator><name pos:line="391" pos:column="54">st_mode<pos:position pos:line="391" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="63">del_opts<pos:position pos:line="391" pos:column="71"/></name> <operator pos:line="391" pos:column="72">|<pos:position pos:line="391" pos:column="73"/></operator> <name pos:line="391" pos:column="74">del_for_flag<pos:position pos:line="391" pos:column="86"/></name></expr></argument>)<pos:position pos:line="391" pos:column="87"/></argument_list></call> <operator pos:line="391" pos:column="88">!=<pos:position pos:line="391" pos:column="90"/></operator> <literal type="number" pos:line="391" pos:column="91">0<pos:position pos:line="391" pos:column="92"/></literal></expr>)<pos:position pos:line="391" pos:column="93"/></condition><then pos:line="391" pos:column="93">
				<block type="pseudo"><goto pos:line="392" pos:column="33">goto <name pos:line="392" pos:column="38">cleanup<pos:position pos:line="392" pos:column="45"/></name>;<pos:position pos:line="392" pos:column="46"/></goto></block></then></if>
		}<pos:position pos:line="393" pos:column="18"/></block></then> <elseif pos:line="393" pos:column="19">else <if pos:line="393" pos:column="24">if <condition pos:line="393" pos:column="27">(<expr><name><name pos:line="393" pos:column="28">basis_dir<pos:position pos:line="393" pos:column="37"/></name><index pos:line="393" pos:column="37">[<expr><literal type="number" pos:line="393" pos:column="38">0<pos:position pos:line="393" pos:column="39"/></literal></expr>]<pos:position pos:line="393" pos:column="40"/></index></name> <operator pos:line="393" pos:column="41">!=<pos:position pos:line="393" pos:column="43"/></operator> <name pos:line="393" pos:column="44">NULL<pos:position pos:line="393" pos:column="48"/></name></expr>)<pos:position pos:line="393" pos:column="49"/></condition><then pos:line="393" pos:column="49"> <block pos:line="393" pos:column="50">{
			<decl_stmt><decl><type><name pos:line="394" pos:column="25">int<pos:position pos:line="394" pos:column="28"/></name></type> <name pos:line="394" pos:column="29">j<pos:position pos:line="394" pos:column="30"/></name> <init pos:line="394" pos:column="31">= <expr><call><name pos:line="394" pos:column="33">try_dests_non<pos:position pos:line="394" pos:column="46"/></name><argument_list pos:line="394" pos:column="46">(<argument><expr><name pos:line="394" pos:column="47">file<pos:position pos:line="394" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="394" pos:column="53">fname<pos:position pos:line="394" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="394" pos:column="60">ndx<pos:position pos:line="394" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="394" pos:column="65">fnamecmpbuf<pos:position pos:line="394" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="394" pos:column="78">&amp;<pos:position pos:line="394" pos:column="83"/></operator><name pos:line="394" pos:column="79">sx<pos:position pos:line="394" pos:column="81"/></name></expr></argument>,
					      <argument><expr><name pos:line="395" pos:column="47">itemizing<pos:position pos:line="395" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="58">code<pos:position pos:line="395" pos:column="62"/></name></expr></argument>)<pos:position pos:line="395" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="395" pos:column="64"/></decl_stmt>
			<if pos:line="396" pos:column="25">if <condition pos:line="396" pos:column="28">(<expr><name pos:line="396" pos:column="29">j<pos:position pos:line="396" pos:column="30"/></name> <operator pos:line="396" pos:column="31">==<pos:position pos:line="396" pos:column="33"/></operator> <operator pos:line="396" pos:column="34">-<pos:position pos:line="396" pos:column="35"/></operator><literal type="number" pos:line="396" pos:column="35">2<pos:position pos:line="396" pos:column="36"/></literal></expr>)<pos:position pos:line="396" pos:column="37"/></condition><then pos:line="396" pos:column="37"> <block pos:line="396" pos:column="38">{
<cpp:ifndef pos:line="397" pos:column="1">#<cpp:directive pos:line="397" pos:column="2">ifndef<pos:position pos:line="397" pos:column="8"/></cpp:directive> <name pos:line="397" pos:column="9">CAN_HARDLINK_SPECIAL<pos:position pos:line="397" pos:column="29"/></name></cpp:ifndef>
				<if pos:line="398" pos:column="33">if <condition pos:line="398" pos:column="36">(<expr><name pos:line="398" pos:column="37">link_dest<pos:position pos:line="398" pos:column="46"/></name></expr>)<pos:position pos:line="398" pos:column="47"/></condition><then pos:line="398" pos:column="47"> <block pos:line="398" pos:column="48">{
					<comment type="block" pos:line="399" pos:column="41">/* Resort to --copy-dest behavior. */</comment>
				}<pos:position pos:line="400" pos:column="34"/></block></then> <elseif pos:line="400" pos:column="35">else
<cpp:endif pos:line="401" pos:column="1">#<cpp:directive pos:line="401" pos:column="2">endif<pos:position pos:line="401" pos:column="7"/></cpp:directive></cpp:endif>
				<if pos:line="402" pos:column="33">if <condition pos:line="402" pos:column="36">(<expr><operator pos:line="402" pos:column="37">!<pos:position pos:line="402" pos:column="38"/></operator><name pos:line="402" pos:column="38">copy_dest<pos:position pos:line="402" pos:column="47"/></name></expr>)<pos:position pos:line="402" pos:column="48"/></condition><then pos:line="402" pos:column="48">
					<block type="pseudo"><goto pos:line="403" pos:column="41">goto <name pos:line="403" pos:column="46">cleanup<pos:position pos:line="403" pos:column="53"/></name>;<pos:position pos:line="403" pos:column="54"/></goto></block></then></if></elseif></if>
				<expr_stmt><expr><name pos:line="404" pos:column="33">itemizing<pos:position pos:line="404" pos:column="42"/></name> <operator pos:line="404" pos:column="43">=<pos:position pos:line="404" pos:column="44"/></operator> <literal type="number" pos:line="404" pos:column="45">0<pos:position pos:line="404" pos:column="46"/></literal></expr>;<pos:position pos:line="404" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="405" pos:column="33">code<pos:position pos:line="405" pos:column="37"/></name> <operator pos:line="405" pos:column="38">=<pos:position pos:line="405" pos:column="39"/></operator> <name pos:line="405" pos:column="40">FNONE<pos:position pos:line="405" pos:column="45"/></name></expr>;<pos:position pos:line="405" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="406" pos:column="26"/></block></then> <elseif pos:line="406" pos:column="27">else <if pos:line="406" pos:column="32">if <condition pos:line="406" pos:column="35">(<expr><name pos:line="406" pos:column="36">j<pos:position pos:line="406" pos:column="37"/></name> <operator pos:line="406" pos:column="38">&gt;=<pos:position pos:line="406" pos:column="43"/></operator> <literal type="number" pos:line="406" pos:column="41">0<pos:position pos:line="406" pos:column="42"/></literal></expr>)<pos:position pos:line="406" pos:column="43"/></condition><then pos:line="406" pos:column="43">
				<block type="pseudo"><expr_stmt><expr><name pos:line="407" pos:column="33">statret<pos:position pos:line="407" pos:column="40"/></name> <operator pos:line="407" pos:column="41">=<pos:position pos:line="407" pos:column="42"/></operator> <literal type="number" pos:line="407" pos:column="43">1<pos:position pos:line="407" pos:column="44"/></literal></expr>;<pos:position pos:line="407" pos:column="45"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="408" pos:column="18"/></block></then></if></elseif></if>
<cpp:ifdef pos:line="409" pos:column="1">#<cpp:directive pos:line="409" pos:column="2">ifdef<pos:position pos:line="409" pos:column="7"/></cpp:directive> <name pos:line="409" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="409" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="410" pos:column="17">if <condition pos:line="410" pos:column="20">(<expr><name pos:line="410" pos:column="21">preserve_hard_links<pos:position pos:line="410" pos:column="40"/></name> <operator pos:line="410" pos:column="41">&amp;&amp;<pos:position pos:line="410" pos:column="51"/></operator> <call><name pos:line="410" pos:column="44">F_HLINK_NOT_LAST<pos:position pos:line="410" pos:column="60"/></name><argument_list pos:line="410" pos:column="60">(<argument><expr><name pos:line="410" pos:column="61">file<pos:position pos:line="410" pos:column="65"/></name></expr></argument>)<pos:position pos:line="410" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="410" pos:column="67"/></condition><then pos:line="410" pos:column="67"> <block pos:line="410" pos:column="68">{
			<expr_stmt><expr><name><name pos:line="411" pos:column="25">cur_flist<pos:position pos:line="411" pos:column="34"/></name><operator pos:line="411" pos:column="34">-&gt;<pos:position pos:line="411" pos:column="39"/></operator><name pos:line="411" pos:column="36">in_progress<pos:position pos:line="411" pos:column="47"/></name></name><operator pos:line="411" pos:column="47">++<pos:position pos:line="411" pos:column="49"/></operator></expr>;<pos:position pos:line="411" pos:column="50"/></expr_stmt>
			<goto pos:line="412" pos:column="25">goto <name pos:line="412" pos:column="30">cleanup<pos:position pos:line="412" pos:column="37"/></name>;<pos:position pos:line="412" pos:column="38"/></goto>
		}<pos:position pos:line="413" pos:column="18"/></block></then></if>
<cpp:endif pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">endif<pos:position pos:line="414" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="415" pos:column="17">if <condition pos:line="415" pos:column="20">(<expr><name pos:line="415" pos:column="21">verbose<pos:position pos:line="415" pos:column="28"/></name> <operator pos:line="415" pos:column="29">&gt;<pos:position pos:line="415" pos:column="33"/></operator> <literal type="number" pos:line="415" pos:column="31">2<pos:position pos:line="415" pos:column="32"/></literal></expr>)<pos:position pos:line="415" pos:column="33"/></condition><then pos:line="415" pos:column="33"> <block pos:line="415" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="416" pos:column="25">rprintf<pos:position pos:line="416" pos:column="32"/></name><argument_list pos:line="416" pos:column="32">(<argument><expr><name pos:line="416" pos:column="33">FINFO<pos:position pos:line="416" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="416" pos:column="40">"mknod(%s, 0%o, [%ld,%ld])\n"<pos:position pos:line="416" pos:column="69"/></literal></expr></argument>,
				<argument><expr><name pos:line="417" pos:column="33">fname<pos:position pos:line="417" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="417" pos:column="40">(<pos:position pos:line="417" pos:column="41"/></operator><name pos:line="417" pos:column="41">int<pos:position pos:line="417" pos:column="44"/></name><operator pos:line="417" pos:column="44">)<pos:position pos:line="417" pos:column="45"/></operator><name><name pos:line="417" pos:column="45">file<pos:position pos:line="417" pos:column="49"/></name><operator pos:line="417" pos:column="49">-&gt;<pos:position pos:line="417" pos:column="54"/></operator><name pos:line="417" pos:column="51">mode<pos:position pos:line="417" pos:column="55"/></name></name></expr></argument>,
				<argument><expr><operator pos:line="418" pos:column="33">(<pos:position pos:line="418" pos:column="34"/></operator><name pos:line="418" pos:column="34">long<pos:position pos:line="418" pos:column="38"/></name><operator pos:line="418" pos:column="38">)<pos:position pos:line="418" pos:column="39"/></operator><call><name pos:line="418" pos:column="39">major<pos:position pos:line="418" pos:column="44"/></name><argument_list pos:line="418" pos:column="44">(<argument><expr><name pos:line="418" pos:column="45">rdev<pos:position pos:line="418" pos:column="49"/></name></expr></argument>)<pos:position pos:line="418" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="418" pos:column="52">(<pos:position pos:line="418" pos:column="53"/></operator><name pos:line="418" pos:column="53">long<pos:position pos:line="418" pos:column="57"/></name><operator pos:line="418" pos:column="57">)<pos:position pos:line="418" pos:column="58"/></operator><call><name pos:line="418" pos:column="58">minor<pos:position pos:line="418" pos:column="63"/></name><argument_list pos:line="418" pos:column="63">(<argument><expr><name pos:line="418" pos:column="64">rdev<pos:position pos:line="418" pos:column="68"/></name></expr></argument>)<pos:position pos:line="418" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="418" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="419" pos:column="18"/></block></then></if>
		<if pos:line="420" pos:column="17">if <condition pos:line="420" pos:column="20">(<expr><call><name pos:line="420" pos:column="21">do_mknod<pos:position pos:line="420" pos:column="29"/></name><argument_list pos:line="420" pos:column="29">(<argument><expr><name pos:line="420" pos:column="30">fname<pos:position pos:line="420" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="420" pos:column="37">file<pos:position pos:line="420" pos:column="41"/></name><operator pos:line="420" pos:column="41">-&gt;<pos:position pos:line="420" pos:column="46"/></operator><name pos:line="420" pos:column="43">mode<pos:position pos:line="420" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="420" pos:column="49">rdev<pos:position pos:line="420" pos:column="53"/></name></expr></argument>)<pos:position pos:line="420" pos:column="54"/></argument_list></call> <operator pos:line="420" pos:column="55">&lt;<pos:position pos:line="420" pos:column="59"/></operator> <literal type="number" pos:line="420" pos:column="57">0<pos:position pos:line="420" pos:column="58"/></literal></expr>)<pos:position pos:line="420" pos:column="59"/></condition><then pos:line="420" pos:column="59"> <block pos:line="420" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="421" pos:column="25">rsyserr<pos:position pos:line="421" pos:column="32"/></name><argument_list pos:line="421" pos:column="32">(<argument><expr><name pos:line="421" pos:column="33">FERROR_XFER<pos:position pos:line="421" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="46">errno<pos:position pos:line="421" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="421" pos:column="53">"mknod %s failed"<pos:position pos:line="421" pos:column="70"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="422" pos:column="33">full_fname<pos:position pos:line="422" pos:column="43"/></name><argument_list pos:line="422" pos:column="43">(<argument><expr><name pos:line="422" pos:column="44">fname<pos:position pos:line="422" pos:column="49"/></name></expr></argument>)<pos:position pos:line="422" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="422" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="423" pos:column="18"/></block></then> <else pos:line="423" pos:column="19">else <block pos:line="423" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="424" pos:column="25">set_file_attrs<pos:position pos:line="424" pos:column="39"/></name><argument_list pos:line="424" pos:column="39">(<argument><expr><name pos:line="424" pos:column="40">fname<pos:position pos:line="424" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="47">file<pos:position pos:line="424" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="53">NULL<pos:position pos:line="424" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="424" pos:column="59">NULL<pos:position pos:line="424" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="424" pos:column="65">0<pos:position pos:line="424" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="424" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="68"/></expr_stmt>
			<if pos:line="425" pos:column="25">if <condition pos:line="425" pos:column="28">(<expr><name pos:line="425" pos:column="29">itemizing<pos:position pos:line="425" pos:column="38"/></name></expr>)<pos:position pos:line="425" pos:column="39"/></condition><then pos:line="425" pos:column="39"> <block pos:line="425" pos:column="40">{
				<expr_stmt><expr><call><name pos:line="426" pos:column="33">itemize<pos:position pos:line="426" pos:column="40"/></name><argument_list pos:line="426" pos:column="40">(<argument><expr><name pos:line="426" pos:column="41">fname<pos:position pos:line="426" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="426" pos:column="48">file<pos:position pos:line="426" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="426" pos:column="54">ndx<pos:position pos:line="426" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="426" pos:column="59">statret<pos:position pos:line="426" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="426" pos:column="68">&amp;<pos:position pos:line="426" pos:column="73"/></operator><name pos:line="426" pos:column="69">sx<pos:position pos:line="426" pos:column="71"/></name></expr></argument>,
					<argument><expr><name pos:line="427" pos:column="41">ITEM_LOCAL_CHANGE<pos:position pos:line="427" pos:column="58"/></name><operator pos:line="427" pos:column="58">|<pos:position pos:line="427" pos:column="59"/></operator><name pos:line="427" pos:column="59">ITEM_REPORT_CHANGE<pos:position pos:line="427" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="427" pos:column="79">0<pos:position pos:line="427" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="427" pos:column="82">NULL<pos:position pos:line="427" pos:column="86"/></name></expr></argument>)<pos:position pos:line="427" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="427" pos:column="88"/></expr_stmt>
			}<pos:position pos:line="428" pos:column="26"/></block></then></if>
			<if pos:line="429" pos:column="25">if <condition pos:line="429" pos:column="28">(<expr><name pos:line="429" pos:column="29">code<pos:position pos:line="429" pos:column="33"/></name> <operator pos:line="429" pos:column="34">!=<pos:position pos:line="429" pos:column="36"/></operator> <name pos:line="429" pos:column="37">FNONE<pos:position pos:line="429" pos:column="42"/></name> <operator pos:line="429" pos:column="43">&amp;&amp;<pos:position pos:line="429" pos:column="53"/></operator> <name pos:line="429" pos:column="46">verbose<pos:position pos:line="429" pos:column="53"/></name></expr>)<pos:position pos:line="429" pos:column="54"/></condition><then pos:line="429" pos:column="54">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="430" pos:column="33">rprintf<pos:position pos:line="430" pos:column="40"/></name><argument_list pos:line="430" pos:column="40">(<argument><expr><name pos:line="430" pos:column="41">code<pos:position pos:line="430" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="430" pos:column="47">"%s\n"<pos:position pos:line="430" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="430" pos:column="55">fname<pos:position pos:line="430" pos:column="60"/></name></expr></argument>)<pos:position pos:line="430" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="62"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="431" pos:column="1">#<cpp:directive pos:line="431" pos:column="2">ifdef<pos:position pos:line="431" pos:column="7"/></cpp:directive> <name pos:line="431" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="431" pos:column="26"/></name></cpp:ifdef>
			<if pos:line="432" pos:column="25">if <condition pos:line="432" pos:column="28">(<expr><name pos:line="432" pos:column="29">preserve_hard_links<pos:position pos:line="432" pos:column="48"/></name> <operator pos:line="432" pos:column="49">&amp;&amp;<pos:position pos:line="432" pos:column="59"/></operator> <call><name pos:line="432" pos:column="52">F_IS_HLINKED<pos:position pos:line="432" pos:column="64"/></name><argument_list pos:line="432" pos:column="64">(<argument><expr><name pos:line="432" pos:column="65">file<pos:position pos:line="432" pos:column="69"/></name></expr></argument>)<pos:position pos:line="432" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="432" pos:column="71"/></condition><then pos:line="432" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="433" pos:column="33">finish_hard_link<pos:position pos:line="433" pos:column="49"/></name><argument_list pos:line="433" pos:column="49">(<argument><expr><name pos:line="433" pos:column="50">file<pos:position pos:line="433" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="56">fname<pos:position pos:line="433" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="63">ndx<pos:position pos:line="433" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="68">NULL<pos:position pos:line="433" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="74">itemizing<pos:position pos:line="433" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="433" pos:column="85">code<pos:position pos:line="433" pos:column="89"/></name></expr></argument>, <argument><expr><operator pos:line="433" pos:column="91">-<pos:position pos:line="433" pos:column="92"/></operator><literal type="number" pos:line="433" pos:column="92">1<pos:position pos:line="433" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="433" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="433" pos:column="95"/></expr_stmt></block></then></if>
<cpp:endif pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">endif<pos:position pos:line="434" pos:column="7"/></cpp:directive></cpp:endif>
			<if pos:line="435" pos:column="25">if <condition pos:line="435" pos:column="28">(<expr><name pos:line="435" pos:column="29">remove_source_files<pos:position pos:line="435" pos:column="48"/></name> <operator pos:line="435" pos:column="49">==<pos:position pos:line="435" pos:column="51"/></operator> <literal type="number" pos:line="435" pos:column="52">1<pos:position pos:line="435" pos:column="53"/></literal></expr>)<pos:position pos:line="435" pos:column="54"/></condition><then pos:line="435" pos:column="54">
				<block type="pseudo"><goto pos:line="436" pos:column="33">goto <name pos:line="436" pos:column="38">return_with_success<pos:position pos:line="436" pos:column="57"/></name>;<pos:position pos:line="436" pos:column="58"/></goto></block></then></if>
		}<pos:position pos:line="437" pos:column="18"/></block></else></if>
		<goto pos:line="438" pos:column="17">goto <name pos:line="438" pos:column="22">cleanup<pos:position pos:line="438" pos:column="29"/></name>;<pos:position pos:line="438" pos:column="30"/></goto>
	}<pos:position pos:line="439" pos:column="10"/></block></then></if>

	<if pos:line="441" pos:column="9">if <condition pos:line="441" pos:column="12">(<expr><operator pos:line="441" pos:column="13">!<pos:position pos:line="441" pos:column="14"/></operator><call><name pos:line="441" pos:column="14">S_ISREG<pos:position pos:line="441" pos:column="21"/></name><argument_list pos:line="441" pos:column="21">(<argument><expr><name><name pos:line="441" pos:column="22">file<pos:position pos:line="441" pos:column="26"/></name><operator pos:line="441" pos:column="26">-&gt;<pos:position pos:line="441" pos:column="31"/></operator><name pos:line="441" pos:column="28">mode<pos:position pos:line="441" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="441" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="441" pos:column="34"/></condition><then pos:line="441" pos:column="34"> <block pos:line="441" pos:column="35">{
		<if pos:line="442" pos:column="17">if <condition pos:line="442" pos:column="20">(<expr><name pos:line="442" pos:column="21">solo_file<pos:position pos:line="442" pos:column="30"/></name></expr>)<pos:position pos:line="442" pos:column="31"/></condition><then pos:line="442" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="443" pos:column="25">fname<pos:position pos:line="443" pos:column="30"/></name> <operator pos:line="443" pos:column="31">=<pos:position pos:line="443" pos:column="32"/></operator> <call><name pos:line="443" pos:column="33">f_name<pos:position pos:line="443" pos:column="39"/></name><argument_list pos:line="443" pos:column="39">(<argument><expr><name pos:line="443" pos:column="40">file<pos:position pos:line="443" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="443" pos:column="46">NULL<pos:position pos:line="443" pos:column="50"/></name></expr></argument>)<pos:position pos:line="443" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="444" pos:column="17">rprintf<pos:position pos:line="444" pos:column="24"/></name><argument_list pos:line="444" pos:column="24">(<argument><expr><name pos:line="444" pos:column="25">FINFO<pos:position pos:line="444" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="444" pos:column="32">"skipping non-regular file \"%s\"\n"<pos:position pos:line="444" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="444" pos:column="70">fname<pos:position pos:line="444" pos:column="75"/></name></expr></argument>)<pos:position pos:line="444" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="77"/></expr_stmt>
		<goto pos:line="445" pos:column="17">goto <name pos:line="445" pos:column="22">cleanup<pos:position pos:line="445" pos:column="29"/></name>;<pos:position pos:line="445" pos:column="30"/></goto>
	}<pos:position pos:line="446" pos:column="10"/></block></then></if>

	<if pos:line="448" pos:column="9">if <condition pos:line="448" pos:column="12">(<expr><name pos:line="448" pos:column="13">max_size<pos:position pos:line="448" pos:column="21"/></name> <operator pos:line="448" pos:column="22">&gt;<pos:position pos:line="448" pos:column="26"/></operator> <literal type="number" pos:line="448" pos:column="24">0<pos:position pos:line="448" pos:column="25"/></literal> <operator pos:line="448" pos:column="26">&amp;&amp;<pos:position pos:line="448" pos:column="36"/></operator> <call><name pos:line="448" pos:column="29">F_LENGTH<pos:position pos:line="448" pos:column="37"/></name><argument_list pos:line="448" pos:column="37">(<argument><expr><name pos:line="448" pos:column="38">file<pos:position pos:line="448" pos:column="42"/></name></expr></argument>)<pos:position pos:line="448" pos:column="43"/></argument_list></call> <operator pos:line="448" pos:column="44">&gt;<pos:position pos:line="448" pos:column="48"/></operator> <name pos:line="448" pos:column="46">max_size<pos:position pos:line="448" pos:column="54"/></name></expr>)<pos:position pos:line="448" pos:column="55"/></condition><then pos:line="448" pos:column="55"> <block pos:line="448" pos:column="56">{
		<if pos:line="449" pos:column="17">if <condition pos:line="449" pos:column="20">(<expr><name pos:line="449" pos:column="21">verbose<pos:position pos:line="449" pos:column="28"/></name> <operator pos:line="449" pos:column="29">&gt;<pos:position pos:line="449" pos:column="33"/></operator> <literal type="number" pos:line="449" pos:column="31">1<pos:position pos:line="449" pos:column="32"/></literal></expr>)<pos:position pos:line="449" pos:column="33"/></condition><then pos:line="449" pos:column="33"> <block pos:line="449" pos:column="34">{
			<if pos:line="450" pos:column="25">if <condition pos:line="450" pos:column="28">(<expr><name pos:line="450" pos:column="29">solo_file<pos:position pos:line="450" pos:column="38"/></name></expr>)<pos:position pos:line="450" pos:column="39"/></condition><then pos:line="450" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name pos:line="451" pos:column="33">fname<pos:position pos:line="451" pos:column="38"/></name> <operator pos:line="451" pos:column="39">=<pos:position pos:line="451" pos:column="40"/></operator> <call><name pos:line="451" pos:column="41">f_name<pos:position pos:line="451" pos:column="47"/></name><argument_list pos:line="451" pos:column="47">(<argument><expr><name pos:line="451" pos:column="48">file<pos:position pos:line="451" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="54">NULL<pos:position pos:line="451" pos:column="58"/></name></expr></argument>)<pos:position pos:line="451" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="60"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="452" pos:column="25">rprintf<pos:position pos:line="452" pos:column="32"/></name><argument_list pos:line="452" pos:column="32">(<argument><expr><name pos:line="452" pos:column="33">FINFO<pos:position pos:line="452" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="452" pos:column="40">"%s is over max-size\n"<pos:position pos:line="452" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="452" pos:column="65">fname<pos:position pos:line="452" pos:column="70"/></name></expr></argument>)<pos:position pos:line="452" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="453" pos:column="18"/></block></then></if>
		<goto pos:line="454" pos:column="17">goto <name pos:line="454" pos:column="22">cleanup<pos:position pos:line="454" pos:column="29"/></name>;<pos:position pos:line="454" pos:column="30"/></goto>
	}<pos:position pos:line="455" pos:column="10"/></block></then></if>
	<if pos:line="456" pos:column="9">if <condition pos:line="456" pos:column="12">(<expr><name pos:line="456" pos:column="13">min_size<pos:position pos:line="456" pos:column="21"/></name> <operator pos:line="456" pos:column="22">&gt;<pos:position pos:line="456" pos:column="26"/></operator> <literal type="number" pos:line="456" pos:column="24">0<pos:position pos:line="456" pos:column="25"/></literal> <operator pos:line="456" pos:column="26">&amp;&amp;<pos:position pos:line="456" pos:column="36"/></operator> <call><name pos:line="456" pos:column="29">F_LENGTH<pos:position pos:line="456" pos:column="37"/></name><argument_list pos:line="456" pos:column="37">(<argument><expr><name pos:line="456" pos:column="38">file<pos:position pos:line="456" pos:column="42"/></name></expr></argument>)<pos:position pos:line="456" pos:column="43"/></argument_list></call> <operator pos:line="456" pos:column="44">&lt;<pos:position pos:line="456" pos:column="48"/></operator> <name pos:line="456" pos:column="46">min_size<pos:position pos:line="456" pos:column="54"/></name></expr>)<pos:position pos:line="456" pos:column="55"/></condition><then pos:line="456" pos:column="55"> <block pos:line="456" pos:column="56">{
		<if pos:line="457" pos:column="17">if <condition pos:line="457" pos:column="20">(<expr><name pos:line="457" pos:column="21">verbose<pos:position pos:line="457" pos:column="28"/></name> <operator pos:line="457" pos:column="29">&gt;<pos:position pos:line="457" pos:column="33"/></operator> <literal type="number" pos:line="457" pos:column="31">1<pos:position pos:line="457" pos:column="32"/></literal></expr>)<pos:position pos:line="457" pos:column="33"/></condition><then pos:line="457" pos:column="33"> <block pos:line="457" pos:column="34">{
			<if pos:line="458" pos:column="25">if <condition pos:line="458" pos:column="28">(<expr><name pos:line="458" pos:column="29">solo_file<pos:position pos:line="458" pos:column="38"/></name></expr>)<pos:position pos:line="458" pos:column="39"/></condition><then pos:line="458" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><name pos:line="459" pos:column="33">fname<pos:position pos:line="459" pos:column="38"/></name> <operator pos:line="459" pos:column="39">=<pos:position pos:line="459" pos:column="40"/></operator> <call><name pos:line="459" pos:column="41">f_name<pos:position pos:line="459" pos:column="47"/></name><argument_list pos:line="459" pos:column="47">(<argument><expr><name pos:line="459" pos:column="48">file<pos:position pos:line="459" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="459" pos:column="54">NULL<pos:position pos:line="459" pos:column="58"/></name></expr></argument>)<pos:position pos:line="459" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="60"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="460" pos:column="25">rprintf<pos:position pos:line="460" pos:column="32"/></name><argument_list pos:line="460" pos:column="32">(<argument><expr><name pos:line="460" pos:column="33">FINFO<pos:position pos:line="460" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="460" pos:column="40">"%s is under min-size\n"<pos:position pos:line="460" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="460" pos:column="66">fname<pos:position pos:line="460" pos:column="71"/></name></expr></argument>)<pos:position pos:line="460" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="461" pos:column="18"/></block></then></if>
		<goto pos:line="462" pos:column="17">goto <name pos:line="462" pos:column="22">cleanup<pos:position pos:line="462" pos:column="29"/></name>;<pos:position pos:line="462" pos:column="30"/></goto>
	}<pos:position pos:line="463" pos:column="10"/></block></then></if>

	<if pos:line="465" pos:column="9">if <condition pos:line="465" pos:column="12">(<expr><name pos:line="465" pos:column="13">update_only<pos:position pos:line="465" pos:column="24"/></name> <operator pos:line="465" pos:column="25">&gt;<pos:position pos:line="465" pos:column="29"/></operator> <literal type="number" pos:line="465" pos:column="27">0<pos:position pos:line="465" pos:column="28"/></literal> <operator pos:line="465" pos:column="29">&amp;&amp;<pos:position pos:line="465" pos:column="39"/></operator> <name pos:line="465" pos:column="32">statret<pos:position pos:line="465" pos:column="39"/></name> <operator pos:line="465" pos:column="40">==<pos:position pos:line="465" pos:column="42"/></operator> <literal type="number" pos:line="465" pos:column="43">0<pos:position pos:line="465" pos:column="44"/></literal>
	    <operator pos:line="466" pos:column="13">&amp;&amp;<pos:position pos:line="466" pos:column="23"/></operator> <call><name pos:line="466" pos:column="16">cmp_time<pos:position pos:line="466" pos:column="24"/></name><argument_list pos:line="466" pos:column="24">(<argument><expr><name><name pos:line="466" pos:column="25">sx<pos:position pos:line="466" pos:column="27"/></name><operator pos:line="466" pos:column="27">.<pos:position pos:line="466" pos:column="28"/></operator><name pos:line="466" pos:column="28">st<pos:position pos:line="466" pos:column="30"/></name><operator pos:line="466" pos:column="30">.<pos:position pos:line="466" pos:column="31"/></operator><name pos:line="466" pos:column="31">st_mtime<pos:position pos:line="466" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="466" pos:column="41">file<pos:position pos:line="466" pos:column="45"/></name><operator pos:line="466" pos:column="45">-&gt;<pos:position pos:line="466" pos:column="50"/></operator><name pos:line="466" pos:column="47">modtime<pos:position pos:line="466" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="466" pos:column="55"/></argument_list></call> <operator pos:line="466" pos:column="56">&gt;<pos:position pos:line="466" pos:column="60"/></operator> <literal type="number" pos:line="466" pos:column="58">0<pos:position pos:line="466" pos:column="59"/></literal></expr>)<pos:position pos:line="466" pos:column="60"/></condition><then pos:line="466" pos:column="60"> <block pos:line="466" pos:column="61">{
		<if pos:line="467" pos:column="17">if <condition pos:line="467" pos:column="20">(<expr><name pos:line="467" pos:column="21">verbose<pos:position pos:line="467" pos:column="28"/></name> <operator pos:line="467" pos:column="29">&gt;<pos:position pos:line="467" pos:column="33"/></operator> <literal type="number" pos:line="467" pos:column="31">1<pos:position pos:line="467" pos:column="32"/></literal></expr>)<pos:position pos:line="467" pos:column="33"/></condition><then pos:line="467" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="468" pos:column="25">rprintf<pos:position pos:line="468" pos:column="32"/></name><argument_list pos:line="468" pos:column="32">(<argument><expr><name pos:line="468" pos:column="33">FINFO<pos:position pos:line="468" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="468" pos:column="40">"%s is newer\n"<pos:position pos:line="468" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="468" pos:column="57">fname<pos:position pos:line="468" pos:column="62"/></name></expr></argument>)<pos:position pos:line="468" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="64"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">ifdef<pos:position pos:line="469" pos:column="7"/></cpp:directive> <name pos:line="469" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="469" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="470" pos:column="17">if <condition pos:line="470" pos:column="20">(<expr><call><name pos:line="470" pos:column="21">F_IS_HLINKED<pos:position pos:line="470" pos:column="33"/></name><argument_list pos:line="470" pos:column="33">(<argument><expr><name pos:line="470" pos:column="34">file<pos:position pos:line="470" pos:column="38"/></name></expr></argument>)<pos:position pos:line="470" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="470" pos:column="40"/></condition><then pos:line="470" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="471" pos:column="25">handle_skipped_hlink<pos:position pos:line="471" pos:column="45"/></name><argument_list pos:line="471" pos:column="45">(<argument><expr><name pos:line="471" pos:column="46">file<pos:position pos:line="471" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="471" pos:column="52">itemizing<pos:position pos:line="471" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="471" pos:column="63">code<pos:position pos:line="471" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="471" pos:column="69">f_out<pos:position pos:line="471" pos:column="74"/></name></expr></argument>)<pos:position pos:line="471" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="76"/></expr_stmt></block></then></if>
<cpp:endif pos:line="472" pos:column="1">#<cpp:directive pos:line="472" pos:column="2">endif<pos:position pos:line="472" pos:column="7"/></cpp:directive></cpp:endif>
		<goto pos:line="473" pos:column="17">goto <name pos:line="473" pos:column="22">cleanup<pos:position pos:line="473" pos:column="29"/></name>;<pos:position pos:line="473" pos:column="30"/></goto>
	}<pos:position pos:line="474" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="476" pos:column="9">fnamecmp<pos:position pos:line="476" pos:column="17"/></name> <operator pos:line="476" pos:column="18">=<pos:position pos:line="476" pos:column="19"/></operator> <name pos:line="476" pos:column="20">fname<pos:position pos:line="476" pos:column="25"/></name></expr>;<pos:position pos:line="476" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="477" pos:column="9">fnamecmp_type<pos:position pos:line="477" pos:column="22"/></name> <operator pos:line="477" pos:column="23">=<pos:position pos:line="477" pos:column="24"/></operator> <name pos:line="477" pos:column="25">FNAMECMP_FNAME<pos:position pos:line="477" pos:column="39"/></name></expr>;<pos:position pos:line="477" pos:column="40"/></expr_stmt>

	<if pos:line="479" pos:column="9">if <condition pos:line="479" pos:column="12">(<expr><name pos:line="479" pos:column="13">statret<pos:position pos:line="479" pos:column="20"/></name> <operator pos:line="479" pos:column="21">==<pos:position pos:line="479" pos:column="23"/></operator> <literal type="number" pos:line="479" pos:column="24">0<pos:position pos:line="479" pos:column="25"/></literal> <operator pos:line="479" pos:column="26">&amp;&amp;<pos:position pos:line="479" pos:column="36"/></operator> <operator pos:line="479" pos:column="29">!<pos:position pos:line="479" pos:column="30"/></operator><call><name pos:line="479" pos:column="30">S_ISREG<pos:position pos:line="479" pos:column="37"/></name><argument_list pos:line="479" pos:column="37">(<argument><expr><name><name pos:line="479" pos:column="38">sx<pos:position pos:line="479" pos:column="40"/></name><operator pos:line="479" pos:column="40">.<pos:position pos:line="479" pos:column="41"/></operator><name pos:line="479" pos:column="41">st<pos:position pos:line="479" pos:column="43"/></name><operator pos:line="479" pos:column="43">.<pos:position pos:line="479" pos:column="44"/></operator><name pos:line="479" pos:column="44">st_mode<pos:position pos:line="479" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="479" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="479" pos:column="53"/></condition><then pos:line="479" pos:column="53"> <block pos:line="479" pos:column="54">{
		<if pos:line="480" pos:column="17">if <condition pos:line="480" pos:column="20">(<expr><call><name pos:line="480" pos:column="21">delete_item<pos:position pos:line="480" pos:column="32"/></name><argument_list pos:line="480" pos:column="32">(<argument><expr><name pos:line="480" pos:column="33">fname<pos:position pos:line="480" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="480" pos:column="40">sx<pos:position pos:line="480" pos:column="42"/></name><operator pos:line="480" pos:column="42">.<pos:position pos:line="480" pos:column="43"/></operator><name pos:line="480" pos:column="43">st<pos:position pos:line="480" pos:column="45"/></name><operator pos:line="480" pos:column="45">.<pos:position pos:line="480" pos:column="46"/></operator><name pos:line="480" pos:column="46">st_mode<pos:position pos:line="480" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="480" pos:column="55">del_opts<pos:position pos:line="480" pos:column="63"/></name> <operator pos:line="480" pos:column="64">|<pos:position pos:line="480" pos:column="65"/></operator> <name pos:line="480" pos:column="66">DEL_FOR_FILE<pos:position pos:line="480" pos:column="78"/></name></expr></argument>)<pos:position pos:line="480" pos:column="79"/></argument_list></call> <operator pos:line="480" pos:column="80">!=<pos:position pos:line="480" pos:column="82"/></operator> <literal type="number" pos:line="480" pos:column="83">0<pos:position pos:line="480" pos:column="84"/></literal></expr>)<pos:position pos:line="480" pos:column="85"/></condition><then pos:line="480" pos:column="85">
			<block type="pseudo"><goto pos:line="481" pos:column="25">goto <name pos:line="481" pos:column="30">cleanup<pos:position pos:line="481" pos:column="37"/></name>;<pos:position pos:line="481" pos:column="38"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="482" pos:column="17">statret<pos:position pos:line="482" pos:column="24"/></name> <operator pos:line="482" pos:column="25">=<pos:position pos:line="482" pos:column="26"/></operator> <operator pos:line="482" pos:column="27">-<pos:position pos:line="482" pos:column="28"/></operator><literal type="number" pos:line="482" pos:column="28">1<pos:position pos:line="482" pos:column="29"/></literal></expr>;<pos:position pos:line="482" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="483" pos:column="17">stat_errno<pos:position pos:line="483" pos:column="27"/></name> <operator pos:line="483" pos:column="28">=<pos:position pos:line="483" pos:column="29"/></operator> <name pos:line="483" pos:column="30">ENOENT<pos:position pos:line="483" pos:column="36"/></name></expr>;<pos:position pos:line="483" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="484" pos:column="10"/></block></then></if>

	<if pos:line="486" pos:column="9">if <condition pos:line="486" pos:column="12">(<expr><name pos:line="486" pos:column="13">statret<pos:position pos:line="486" pos:column="20"/></name> <operator pos:line="486" pos:column="21">!=<pos:position pos:line="486" pos:column="23"/></operator> <literal type="number" pos:line="486" pos:column="24">0<pos:position pos:line="486" pos:column="25"/></literal> <operator pos:line="486" pos:column="26">&amp;&amp;<pos:position pos:line="486" pos:column="36"/></operator> <name><name pos:line="486" pos:column="29">basis_dir<pos:position pos:line="486" pos:column="38"/></name><index pos:line="486" pos:column="38">[<expr><literal type="number" pos:line="486" pos:column="39">0<pos:position pos:line="486" pos:column="40"/></literal></expr>]<pos:position pos:line="486" pos:column="41"/></index></name> <operator pos:line="486" pos:column="42">!=<pos:position pos:line="486" pos:column="44"/></operator> <name pos:line="486" pos:column="45">NULL<pos:position pos:line="486" pos:column="49"/></name></expr>)<pos:position pos:line="486" pos:column="50"/></condition><then pos:line="486" pos:column="50"> <block pos:line="486" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="487" pos:column="17">int<pos:position pos:line="487" pos:column="20"/></name></type> <name pos:line="487" pos:column="21">j<pos:position pos:line="487" pos:column="22"/></name> <init pos:line="487" pos:column="23">= <expr><call><name pos:line="487" pos:column="25">try_dests_reg<pos:position pos:line="487" pos:column="38"/></name><argument_list pos:line="487" pos:column="38">(<argument><expr><name pos:line="487" pos:column="39">file<pos:position pos:line="487" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="487" pos:column="45">fname<pos:position pos:line="487" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="487" pos:column="52">ndx<pos:position pos:line="487" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="487" pos:column="57">fnamecmpbuf<pos:position pos:line="487" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="487" pos:column="70">&amp;<pos:position pos:line="487" pos:column="75"/></operator><name pos:line="487" pos:column="71">sx<pos:position pos:line="487" pos:column="73"/></name></expr></argument>,
				      <argument><expr><name pos:line="488" pos:column="39">itemizing<pos:position pos:line="488" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="50">code<pos:position pos:line="488" pos:column="54"/></name></expr></argument>)<pos:position pos:line="488" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="488" pos:column="56"/></decl_stmt>
		<if pos:line="489" pos:column="17">if <condition pos:line="489" pos:column="20">(<expr><name pos:line="489" pos:column="21">j<pos:position pos:line="489" pos:column="22"/></name> <operator pos:line="489" pos:column="23">==<pos:position pos:line="489" pos:column="25"/></operator> <operator pos:line="489" pos:column="26">-<pos:position pos:line="489" pos:column="27"/></operator><literal type="number" pos:line="489" pos:column="27">2<pos:position pos:line="489" pos:column="28"/></literal></expr>)<pos:position pos:line="489" pos:column="29"/></condition><then pos:line="489" pos:column="29"> <block pos:line="489" pos:column="30">{
			<if pos:line="490" pos:column="25">if <condition pos:line="490" pos:column="28">(<expr><name pos:line="490" pos:column="29">remove_source_files<pos:position pos:line="490" pos:column="48"/></name> <operator pos:line="490" pos:column="49">==<pos:position pos:line="490" pos:column="51"/></operator> <literal type="number" pos:line="490" pos:column="52">1<pos:position pos:line="490" pos:column="53"/></literal></expr>)<pos:position pos:line="490" pos:column="54"/></condition><then pos:line="490" pos:column="54">
				<block type="pseudo"><goto pos:line="491" pos:column="33">goto <name pos:line="491" pos:column="38">return_with_success<pos:position pos:line="491" pos:column="57"/></name>;<pos:position pos:line="491" pos:column="58"/></goto></block></then></if>
			<goto pos:line="492" pos:column="25">goto <name pos:line="492" pos:column="30">cleanup<pos:position pos:line="492" pos:column="37"/></name>;<pos:position pos:line="492" pos:column="38"/></goto>
		}<pos:position pos:line="493" pos:column="18"/></block></then></if>
		<if pos:line="494" pos:column="17">if <condition pos:line="494" pos:column="20">(<expr><name pos:line="494" pos:column="21">j<pos:position pos:line="494" pos:column="22"/></name> <operator pos:line="494" pos:column="23">&gt;=<pos:position pos:line="494" pos:column="28"/></operator> <literal type="number" pos:line="494" pos:column="26">0<pos:position pos:line="494" pos:column="27"/></literal></expr>)<pos:position pos:line="494" pos:column="28"/></condition><then pos:line="494" pos:column="28"> <block pos:line="494" pos:column="29">{
			<expr_stmt><expr><name pos:line="495" pos:column="25">fnamecmp<pos:position pos:line="495" pos:column="33"/></name> <operator pos:line="495" pos:column="34">=<pos:position pos:line="495" pos:column="35"/></operator> <name pos:line="495" pos:column="36">fnamecmpbuf<pos:position pos:line="495" pos:column="47"/></name></expr>;<pos:position pos:line="495" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="496" pos:column="25">fnamecmp_type<pos:position pos:line="496" pos:column="38"/></name> <operator pos:line="496" pos:column="39">=<pos:position pos:line="496" pos:column="40"/></operator> <name pos:line="496" pos:column="41">j<pos:position pos:line="496" pos:column="42"/></name></expr>;<pos:position pos:line="496" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="497" pos:column="25">statret<pos:position pos:line="497" pos:column="32"/></name> <operator pos:line="497" pos:column="33">=<pos:position pos:line="497" pos:column="34"/></operator> <literal type="number" pos:line="497" pos:column="35">0<pos:position pos:line="497" pos:column="36"/></literal></expr>;<pos:position pos:line="497" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="498" pos:column="18"/></block></then></if>
	}<pos:position pos:line="499" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="501" pos:column="9">real_ret<pos:position pos:line="501" pos:column="17"/></name> <operator pos:line="501" pos:column="18">=<pos:position pos:line="501" pos:column="19"/></operator> <name pos:line="501" pos:column="20">statret<pos:position pos:line="501" pos:column="27"/></name></expr>;<pos:position pos:line="501" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="502" pos:column="9">real_sx<pos:position pos:line="502" pos:column="16"/></name> <operator pos:line="502" pos:column="17">=<pos:position pos:line="502" pos:column="18"/></operator> <name pos:line="502" pos:column="19">sx<pos:position pos:line="502" pos:column="21"/></name></expr>;<pos:position pos:line="502" pos:column="22"/></expr_stmt>

	<if pos:line="504" pos:column="9">if <condition pos:line="504" pos:column="12">(<expr><name pos:line="504" pos:column="13">partial_dir<pos:position pos:line="504" pos:column="24"/></name> <operator pos:line="504" pos:column="25">&amp;&amp;<pos:position pos:line="504" pos:column="35"/></operator> <operator pos:line="504" pos:column="28">(<pos:position pos:line="504" pos:column="29"/></operator><name pos:line="504" pos:column="29">partialptr<pos:position pos:line="504" pos:column="39"/></name> <operator pos:line="504" pos:column="40">=<pos:position pos:line="504" pos:column="41"/></operator> <call><name pos:line="504" pos:column="42">partial_dir_fname<pos:position pos:line="504" pos:column="59"/></name><argument_list pos:line="504" pos:column="59">(<argument><expr><name pos:line="504" pos:column="60">fname<pos:position pos:line="504" pos:column="65"/></name></expr></argument>)<pos:position pos:line="504" pos:column="66"/></argument_list></call><operator pos:line="504" pos:column="66">)<pos:position pos:line="504" pos:column="67"/></operator> <operator pos:line="504" pos:column="68">!=<pos:position pos:line="504" pos:column="70"/></operator> <name pos:line="504" pos:column="71">NULL<pos:position pos:line="504" pos:column="75"/></name>
	    <operator pos:line="505" pos:column="13">&amp;&amp;<pos:position pos:line="505" pos:column="23"/></operator> <call><name pos:line="505" pos:column="16">link_stat<pos:position pos:line="505" pos:column="25"/></name><argument_list pos:line="505" pos:column="25">(<argument><expr><name pos:line="505" pos:column="26">partialptr<pos:position pos:line="505" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="505" pos:column="38">&amp;<pos:position pos:line="505" pos:column="43"/></operator><name pos:line="505" pos:column="39">partial_st<pos:position pos:line="505" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="505" pos:column="51">0<pos:position pos:line="505" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="505" pos:column="53"/></argument_list></call> <operator pos:line="505" pos:column="54">==<pos:position pos:line="505" pos:column="56"/></operator> <literal type="number" pos:line="505" pos:column="57">0<pos:position pos:line="505" pos:column="58"/></literal>
	    <operator pos:line="506" pos:column="13">&amp;&amp;<pos:position pos:line="506" pos:column="23"/></operator> <call><name pos:line="506" pos:column="16">S_ISREG<pos:position pos:line="506" pos:column="23"/></name><argument_list pos:line="506" pos:column="23">(<argument><expr><name><name pos:line="506" pos:column="24">partial_st<pos:position pos:line="506" pos:column="34"/></name><operator pos:line="506" pos:column="34">.<pos:position pos:line="506" pos:column="35"/></operator><name pos:line="506" pos:column="35">st_mode<pos:position pos:line="506" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="506" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="506" pos:column="44"/></condition><then pos:line="506" pos:column="44"> <block pos:line="506" pos:column="45">{
		<if pos:line="507" pos:column="17">if <condition pos:line="507" pos:column="20">(<expr><name pos:line="507" pos:column="21">statret<pos:position pos:line="507" pos:column="28"/></name> <operator pos:line="507" pos:column="29">!=<pos:position pos:line="507" pos:column="31"/></operator> <literal type="number" pos:line="507" pos:column="32">0<pos:position pos:line="507" pos:column="33"/></literal></expr>)<pos:position pos:line="507" pos:column="34"/></condition><then pos:line="507" pos:column="34">
			<block type="pseudo"><goto pos:line="508" pos:column="25">goto <name pos:line="508" pos:column="30">prepare_to_open<pos:position pos:line="508" pos:column="45"/></name>;<pos:position pos:line="508" pos:column="46"/></goto></block></then></if>
	}<pos:position pos:line="509" pos:column="10"/></block></then> <else pos:line="509" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="510" pos:column="17">partialptr<pos:position pos:line="510" pos:column="27"/></name> <operator pos:line="510" pos:column="28">=<pos:position pos:line="510" pos:column="29"/></operator> <name pos:line="510" pos:column="30">NULL<pos:position pos:line="510" pos:column="34"/></name></expr>;<pos:position pos:line="510" pos:column="35"/></expr_stmt></block></else></if>

	<if pos:line="512" pos:column="9">if <condition pos:line="512" pos:column="12">(<expr><name pos:line="512" pos:column="13">statret<pos:position pos:line="512" pos:column="20"/></name> <operator pos:line="512" pos:column="21">!=<pos:position pos:line="512" pos:column="23"/></operator> <literal type="number" pos:line="512" pos:column="24">0<pos:position pos:line="512" pos:column="25"/></literal> <operator pos:line="512" pos:column="26">&amp;&amp;<pos:position pos:line="512" pos:column="36"/></operator> <name pos:line="512" pos:column="29">fuzzy_dirlist<pos:position pos:line="512" pos:column="42"/></name></expr>)<pos:position pos:line="512" pos:column="43"/></condition><then pos:line="512" pos:column="43"> <block pos:line="512" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="513" pos:column="17">int<pos:position pos:line="513" pos:column="20"/></name></type> <name pos:line="513" pos:column="21">j<pos:position pos:line="513" pos:column="22"/></name> <init pos:line="513" pos:column="23">= <expr><call><name pos:line="513" pos:column="25">find_fuzzy<pos:position pos:line="513" pos:column="35"/></name><argument_list pos:line="513" pos:column="35">(<argument><expr><name pos:line="513" pos:column="36">file<pos:position pos:line="513" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="513" pos:column="42">fuzzy_dirlist<pos:position pos:line="513" pos:column="55"/></name></expr></argument>)<pos:position pos:line="513" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="513" pos:column="57"/></decl_stmt>
		<if pos:line="514" pos:column="17">if <condition pos:line="514" pos:column="20">(<expr><name pos:line="514" pos:column="21">j<pos:position pos:line="514" pos:column="22"/></name> <operator pos:line="514" pos:column="23">&gt;=<pos:position pos:line="514" pos:column="28"/></operator> <literal type="number" pos:line="514" pos:column="26">0<pos:position pos:line="514" pos:column="27"/></literal></expr>)<pos:position pos:line="514" pos:column="28"/></condition><then pos:line="514" pos:column="28"> <block pos:line="514" pos:column="29">{
			<expr_stmt><expr><name pos:line="515" pos:column="25">fuzzy_file<pos:position pos:line="515" pos:column="35"/></name> <operator pos:line="515" pos:column="36">=<pos:position pos:line="515" pos:column="37"/></operator> <name><name pos:line="515" pos:column="38">fuzzy_dirlist<pos:position pos:line="515" pos:column="51"/></name><operator pos:line="515" pos:column="51">-&gt;<pos:position pos:line="515" pos:column="56"/></operator><name pos:line="515" pos:column="53">files<pos:position pos:line="515" pos:column="58"/></name><index pos:line="515" pos:column="58">[<expr><name pos:line="515" pos:column="59">j<pos:position pos:line="515" pos:column="60"/></name></expr>]<pos:position pos:line="515" pos:column="61"/></index></name></expr>;<pos:position pos:line="515" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="516" pos:column="25">f_name<pos:position pos:line="516" pos:column="31"/></name><argument_list pos:line="516" pos:column="31">(<argument><expr><name pos:line="516" pos:column="32">fuzzy_file<pos:position pos:line="516" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="516" pos:column="44">fnamecmpbuf<pos:position pos:line="516" pos:column="55"/></name></expr></argument>)<pos:position pos:line="516" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="57"/></expr_stmt>
			<if pos:line="517" pos:column="25">if <condition pos:line="517" pos:column="28">(<expr><name pos:line="517" pos:column="29">verbose<pos:position pos:line="517" pos:column="36"/></name> <operator pos:line="517" pos:column="37">&gt;<pos:position pos:line="517" pos:column="41"/></operator> <literal type="number" pos:line="517" pos:column="39">2<pos:position pos:line="517" pos:column="40"/></literal></expr>)<pos:position pos:line="517" pos:column="41"/></condition><then pos:line="517" pos:column="41"> <block pos:line="517" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="518" pos:column="33">rprintf<pos:position pos:line="518" pos:column="40"/></name><argument_list pos:line="518" pos:column="40">(<argument><expr><name pos:line="518" pos:column="41">FINFO<pos:position pos:line="518" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="518" pos:column="48">"fuzzy basis selected for %s: %s\n"<pos:position pos:line="518" pos:column="83"/></literal></expr></argument>,
					<argument><expr><name pos:line="519" pos:column="41">fname<pos:position pos:line="519" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="519" pos:column="48">fnamecmpbuf<pos:position pos:line="519" pos:column="59"/></name></expr></argument>)<pos:position pos:line="519" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="519" pos:column="61"/></expr_stmt>
			}<pos:position pos:line="520" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="521" pos:column="25">sx<pos:position pos:line="521" pos:column="27"/></name><operator pos:line="521" pos:column="27">.<pos:position pos:line="521" pos:column="28"/></operator><name pos:line="521" pos:column="28">st<pos:position pos:line="521" pos:column="30"/></name><operator pos:line="521" pos:column="30">.<pos:position pos:line="521" pos:column="31"/></operator><name pos:line="521" pos:column="31">st_size<pos:position pos:line="521" pos:column="38"/></name></name> <operator pos:line="521" pos:column="39">=<pos:position pos:line="521" pos:column="40"/></operator> <call><name pos:line="521" pos:column="41">F_LENGTH<pos:position pos:line="521" pos:column="49"/></name><argument_list pos:line="521" pos:column="49">(<argument><expr><name pos:line="521" pos:column="50">fuzzy_file<pos:position pos:line="521" pos:column="60"/></name></expr></argument>)<pos:position pos:line="521" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="521" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="522" pos:column="25">statret<pos:position pos:line="522" pos:column="32"/></name> <operator pos:line="522" pos:column="33">=<pos:position pos:line="522" pos:column="34"/></operator> <literal type="number" pos:line="522" pos:column="35">0<pos:position pos:line="522" pos:column="36"/></literal></expr>;<pos:position pos:line="522" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><name pos:line="523" pos:column="25">fnamecmp<pos:position pos:line="523" pos:column="33"/></name> <operator pos:line="523" pos:column="34">=<pos:position pos:line="523" pos:column="35"/></operator> <name pos:line="523" pos:column="36">fnamecmpbuf<pos:position pos:line="523" pos:column="47"/></name></expr>;<pos:position pos:line="523" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="524" pos:column="25">fnamecmp_type<pos:position pos:line="524" pos:column="38"/></name> <operator pos:line="524" pos:column="39">=<pos:position pos:line="524" pos:column="40"/></operator> <name pos:line="524" pos:column="41">FNAMECMP_FUZZY<pos:position pos:line="524" pos:column="55"/></name></expr>;<pos:position pos:line="524" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="525" pos:column="18"/></block></then></if>
	}<pos:position pos:line="526" pos:column="10"/></block></then></if>

	<if pos:line="528" pos:column="9">if <condition pos:line="528" pos:column="12">(<expr><name pos:line="528" pos:column="13">statret<pos:position pos:line="528" pos:column="20"/></name> <operator pos:line="528" pos:column="21">!=<pos:position pos:line="528" pos:column="23"/></operator> <literal type="number" pos:line="528" pos:column="24">0<pos:position pos:line="528" pos:column="25"/></literal></expr>)<pos:position pos:line="528" pos:column="26"/></condition><then pos:line="528" pos:column="26"> <block pos:line="528" pos:column="27">{
<cpp:ifdef pos:line="529" pos:column="1">#<cpp:directive pos:line="529" pos:column="2">ifdef<pos:position pos:line="529" pos:column="7"/></cpp:directive> <name pos:line="529" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="529" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="530" pos:column="17">if <condition pos:line="530" pos:column="20">(<expr><name pos:line="530" pos:column="21">preserve_hard_links<pos:position pos:line="530" pos:column="40"/></name> <operator pos:line="530" pos:column="41">&amp;&amp;<pos:position pos:line="530" pos:column="51"/></operator> <call><name pos:line="530" pos:column="44">F_HLINK_NOT_LAST<pos:position pos:line="530" pos:column="60"/></name><argument_list pos:line="530" pos:column="60">(<argument><expr><name pos:line="530" pos:column="61">file<pos:position pos:line="530" pos:column="65"/></name></expr></argument>)<pos:position pos:line="530" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="530" pos:column="67"/></condition><then pos:line="530" pos:column="67"> <block pos:line="530" pos:column="68">{
			<expr_stmt><expr><name><name pos:line="531" pos:column="25">cur_flist<pos:position pos:line="531" pos:column="34"/></name><operator pos:line="531" pos:column="34">-&gt;<pos:position pos:line="531" pos:column="39"/></operator><name pos:line="531" pos:column="36">in_progress<pos:position pos:line="531" pos:column="47"/></name></name><operator pos:line="531" pos:column="47">++<pos:position pos:line="531" pos:column="49"/></operator></expr>;<pos:position pos:line="531" pos:column="50"/></expr_stmt>
			<goto pos:line="532" pos:column="25">goto <name pos:line="532" pos:column="30">cleanup<pos:position pos:line="532" pos:column="37"/></name>;<pos:position pos:line="532" pos:column="38"/></goto>
		}<pos:position pos:line="533" pos:column="18"/></block></then></if>
<cpp:endif pos:line="534" pos:column="1">#<cpp:directive pos:line="534" pos:column="2">endif<pos:position pos:line="534" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="535" pos:column="17">if <condition pos:line="535" pos:column="20">(<expr><name pos:line="535" pos:column="21">stat_errno<pos:position pos:line="535" pos:column="31"/></name> <operator pos:line="535" pos:column="32">==<pos:position pos:line="535" pos:column="34"/></operator> <name pos:line="535" pos:column="35">ENOENT<pos:position pos:line="535" pos:column="41"/></name></expr>)<pos:position pos:line="535" pos:column="42"/></condition><then pos:line="535" pos:column="42">
			<block type="pseudo"><goto pos:line="536" pos:column="25">goto <name pos:line="536" pos:column="30">notify_others<pos:position pos:line="536" pos:column="43"/></name>;<pos:position pos:line="536" pos:column="44"/></goto></block></then></if>
		<expr_stmt><expr><call><name pos:line="537" pos:column="17">rsyserr<pos:position pos:line="537" pos:column="24"/></name><argument_list pos:line="537" pos:column="24">(<argument><expr><name pos:line="537" pos:column="25">FERROR_XFER<pos:position pos:line="537" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="537" pos:column="38">stat_errno<pos:position pos:line="537" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="537" pos:column="50">"recv_generator: failed to stat %s"<pos:position pos:line="537" pos:column="85"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="538" pos:column="25">full_fname<pos:position pos:line="538" pos:column="35"/></name><argument_list pos:line="538" pos:column="35">(<argument><expr><name pos:line="538" pos:column="36">fname<pos:position pos:line="538" pos:column="41"/></name></expr></argument>)<pos:position pos:line="538" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="538" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="538" pos:column="44"/></expr_stmt>
		<goto pos:line="539" pos:column="17">goto <name pos:line="539" pos:column="22">cleanup<pos:position pos:line="539" pos:column="29"/></name>;<pos:position pos:line="539" pos:column="30"/></goto>
	}<pos:position pos:line="540" pos:column="10"/></block></then></if>

	<if pos:line="542" pos:column="9">if <condition pos:line="542" pos:column="12">(<expr><name pos:line="542" pos:column="13">fnamecmp_type<pos:position pos:line="542" pos:column="26"/></name> <operator pos:line="542" pos:column="27">&lt;=<pos:position pos:line="542" pos:column="32"/></operator> <name pos:line="542" pos:column="30">FNAMECMP_BASIS_DIR_HIGH<pos:position pos:line="542" pos:column="53"/></name></expr>)<pos:position pos:line="542" pos:column="54"/></condition><then pos:line="542" pos:column="54">
		<block type="pseudo"><empty_stmt pos:line="543" pos:column="17">;<pos:position pos:line="543" pos:column="18"/></empty_stmt></block></then>
	<elseif pos:line="544" pos:column="9">else <if pos:line="544" pos:column="14">if <condition pos:line="544" pos:column="17">(<expr><name pos:line="544" pos:column="18">fnamecmp_type<pos:position pos:line="544" pos:column="31"/></name> <operator pos:line="544" pos:column="32">==<pos:position pos:line="544" pos:column="34"/></operator> <name pos:line="544" pos:column="35">FNAMECMP_FUZZY<pos:position pos:line="544" pos:column="49"/></name></expr>)<pos:position pos:line="544" pos:column="50"/></condition><then pos:line="544" pos:column="50">
		<block type="pseudo"><empty_stmt pos:line="545" pos:column="17">;<pos:position pos:line="545" pos:column="18"/></empty_stmt></block></then></if></elseif>
	<elseif pos:line="546" pos:column="9">else <if pos:line="546" pos:column="14">if <condition pos:line="546" pos:column="17">(<expr><call><name pos:line="546" pos:column="18">unchanged_file<pos:position pos:line="546" pos:column="32"/></name><argument_list pos:line="546" pos:column="32">(<argument><expr><name pos:line="546" pos:column="33">fnamecmp<pos:position pos:line="546" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="546" pos:column="43">file<pos:position pos:line="546" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="546" pos:column="49">&amp;<pos:position pos:line="546" pos:column="54"/></operator><name><name pos:line="546" pos:column="50">sx<pos:position pos:line="546" pos:column="52"/></name><operator pos:line="546" pos:column="52">.<pos:position pos:line="546" pos:column="53"/></operator><name pos:line="546" pos:column="53">st<pos:position pos:line="546" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="546" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="546" pos:column="57"/></condition><then pos:line="546" pos:column="57"> <block pos:line="546" pos:column="58">{
		<if pos:line="547" pos:column="17">if <condition pos:line="547" pos:column="20">(<expr><name pos:line="547" pos:column="21">partialptr<pos:position pos:line="547" pos:column="31"/></name></expr>)<pos:position pos:line="547" pos:column="32"/></condition><then pos:line="547" pos:column="32"> <block pos:line="547" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="548" pos:column="25">do_unlink<pos:position pos:line="548" pos:column="34"/></name><argument_list pos:line="548" pos:column="34">(<argument><expr><name pos:line="548" pos:column="35">partialptr<pos:position pos:line="548" pos:column="45"/></name></expr></argument>)<pos:position pos:line="548" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="548" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="549" pos:column="25">handle_partial_dir<pos:position pos:line="549" pos:column="43"/></name><argument_list pos:line="549" pos:column="43">(<argument><expr><name pos:line="549" pos:column="44">partialptr<pos:position pos:line="549" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="549" pos:column="56">PDIR_DELETE<pos:position pos:line="549" pos:column="67"/></name></expr></argument>)<pos:position pos:line="549" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="550" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="551" pos:column="17">set_file_attrs<pos:position pos:line="551" pos:column="31"/></name><argument_list pos:line="551" pos:column="31">(<argument><expr><name pos:line="551" pos:column="32">fname<pos:position pos:line="551" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="551" pos:column="39">file<pos:position pos:line="551" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="551" pos:column="45">&amp;<pos:position pos:line="551" pos:column="50"/></operator><name pos:line="551" pos:column="46">sx<pos:position pos:line="551" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="551" pos:column="50">NULL<pos:position pos:line="551" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="551" pos:column="56">maybe_ATTRS_REPORT<pos:position pos:line="551" pos:column="74"/></name></expr></argument>)<pos:position pos:line="551" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="551" pos:column="76"/></expr_stmt>
		<if pos:line="552" pos:column="17">if <condition pos:line="552" pos:column="20">(<expr><name pos:line="552" pos:column="21">itemizing<pos:position pos:line="552" pos:column="30"/></name></expr>)<pos:position pos:line="552" pos:column="31"/></condition><then pos:line="552" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="553" pos:column="25">itemize<pos:position pos:line="553" pos:column="32"/></name><argument_list pos:line="553" pos:column="32">(<argument><expr><name pos:line="553" pos:column="33">fnamecmp<pos:position pos:line="553" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="553" pos:column="43">file<pos:position pos:line="553" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="553" pos:column="49">ndx<pos:position pos:line="553" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="553" pos:column="54">statret<pos:position pos:line="553" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="553" pos:column="63">&amp;<pos:position pos:line="553" pos:column="68"/></operator><name pos:line="553" pos:column="64">sx<pos:position pos:line="553" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="553" pos:column="68">0<pos:position pos:line="553" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="553" pos:column="71">0<pos:position pos:line="553" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="553" pos:column="74">NULL<pos:position pos:line="553" pos:column="78"/></name></expr></argument>)<pos:position pos:line="553" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="553" pos:column="80"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="554" pos:column="1">#<cpp:directive pos:line="554" pos:column="2">ifdef<pos:position pos:line="554" pos:column="7"/></cpp:directive> <name pos:line="554" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="554" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="555" pos:column="17">if <condition pos:line="555" pos:column="20">(<expr><name pos:line="555" pos:column="21">preserve_hard_links<pos:position pos:line="555" pos:column="40"/></name> <operator pos:line="555" pos:column="41">&amp;&amp;<pos:position pos:line="555" pos:column="51"/></operator> <call><name pos:line="555" pos:column="44">F_IS_HLINKED<pos:position pos:line="555" pos:column="56"/></name><argument_list pos:line="555" pos:column="56">(<argument><expr><name pos:line="555" pos:column="57">file<pos:position pos:line="555" pos:column="61"/></name></expr></argument>)<pos:position pos:line="555" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="555" pos:column="63"/></condition><then pos:line="555" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="556" pos:column="25">finish_hard_link<pos:position pos:line="556" pos:column="41"/></name><argument_list pos:line="556" pos:column="41">(<argument><expr><name pos:line="556" pos:column="42">file<pos:position pos:line="556" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="48">fname<pos:position pos:line="556" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="55">ndx<pos:position pos:line="556" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="556" pos:column="60">&amp;<pos:position pos:line="556" pos:column="65"/></operator><name><name pos:line="556" pos:column="61">sx<pos:position pos:line="556" pos:column="63"/></name><operator pos:line="556" pos:column="63">.<pos:position pos:line="556" pos:column="64"/></operator><name pos:line="556" pos:column="64">st<pos:position pos:line="556" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="68">itemizing<pos:position pos:line="556" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="556" pos:column="79">code<pos:position pos:line="556" pos:column="83"/></name></expr></argument>, <argument><expr><operator pos:line="556" pos:column="85">-<pos:position pos:line="556" pos:column="86"/></operator><literal type="number" pos:line="556" pos:column="86">1<pos:position pos:line="556" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="556" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="556" pos:column="89"/></expr_stmt></block></then></if>
<cpp:endif pos:line="557" pos:column="1">#<cpp:directive pos:line="557" pos:column="2">endif<pos:position pos:line="557" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="558" pos:column="17">if <condition pos:line="558" pos:column="20">(<expr><name pos:line="558" pos:column="21">remove_source_files<pos:position pos:line="558" pos:column="40"/></name> <operator pos:line="558" pos:column="41">!=<pos:position pos:line="558" pos:column="43"/></operator> <literal type="number" pos:line="558" pos:column="44">1<pos:position pos:line="558" pos:column="45"/></literal></expr>)<pos:position pos:line="558" pos:column="46"/></condition><then pos:line="558" pos:column="46">
			<block type="pseudo"><goto pos:line="559" pos:column="25">goto <name pos:line="559" pos:column="30">cleanup<pos:position pos:line="559" pos:column="37"/></name>;<pos:position pos:line="559" pos:column="38"/></goto></block></then></if>
	  <label><name pos:line="560" pos:column="11">return_with_success<pos:position pos:line="560" pos:column="30"/></name>:<pos:position pos:line="560" pos:column="31"/></label>
		<if pos:line="561" pos:column="17">if <condition pos:line="561" pos:column="20">(<expr><operator pos:line="561" pos:column="21">!<pos:position pos:line="561" pos:column="22"/></operator><name pos:line="561" pos:column="22">dry_run<pos:position pos:line="561" pos:column="29"/></name></expr>)<pos:position pos:line="561" pos:column="30"/></condition><then pos:line="561" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="562" pos:column="25">send_msg_int<pos:position pos:line="562" pos:column="37"/></name><argument_list pos:line="562" pos:column="37">(<argument><expr><name pos:line="562" pos:column="38">MSG_SUCCESS<pos:position pos:line="562" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="562" pos:column="51">ndx<pos:position pos:line="562" pos:column="54"/></name></expr></argument>)<pos:position pos:line="562" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="562" pos:column="56"/></expr_stmt></block></then></if>
		<goto pos:line="563" pos:column="17">goto <name pos:line="563" pos:column="22">cleanup<pos:position pos:line="563" pos:column="29"/></name>;<pos:position pos:line="563" pos:column="30"/></goto>
	}<pos:position pos:line="564" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="566" pos:column="9">if <condition pos:line="566" pos:column="12">(<expr><name pos:line="566" pos:column="13">append_mode<pos:position pos:line="566" pos:column="24"/></name> <operator pos:line="566" pos:column="25">&gt;<pos:position pos:line="566" pos:column="29"/></operator> <literal type="number" pos:line="566" pos:column="27">0<pos:position pos:line="566" pos:column="28"/></literal> <operator pos:line="566" pos:column="29">&amp;&amp;<pos:position pos:line="566" pos:column="39"/></operator> <name><name pos:line="566" pos:column="32">sx<pos:position pos:line="566" pos:column="34"/></name><operator pos:line="566" pos:column="34">.<pos:position pos:line="566" pos:column="35"/></operator><name pos:line="566" pos:column="35">st<pos:position pos:line="566" pos:column="37"/></name><operator pos:line="566" pos:column="37">.<pos:position pos:line="566" pos:column="38"/></operator><name pos:line="566" pos:column="38">st_size<pos:position pos:line="566" pos:column="45"/></name></name> <operator pos:line="566" pos:column="46">&gt;=<pos:position pos:line="566" pos:column="51"/></operator> <call><name pos:line="566" pos:column="49">F_LENGTH<pos:position pos:line="566" pos:column="57"/></name><argument_list pos:line="566" pos:column="57">(<argument><expr><name pos:line="566" pos:column="58">file<pos:position pos:line="566" pos:column="62"/></name></expr></argument>)<pos:position pos:line="566" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="566" pos:column="64"/></condition><then pos:line="566" pos:column="64"> <block pos:line="566" pos:column="65">{
<cpp:ifdef pos:line="567" pos:column="1">#<cpp:directive pos:line="567" pos:column="2">ifdef<pos:position pos:line="567" pos:column="7"/></cpp:directive> <name pos:line="567" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="567" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="568" pos:column="17">if <condition pos:line="568" pos:column="20">(<expr><call><name pos:line="568" pos:column="21">F_IS_HLINKED<pos:position pos:line="568" pos:column="33"/></name><argument_list pos:line="568" pos:column="33">(<argument><expr><name pos:line="568" pos:column="34">file<pos:position pos:line="568" pos:column="38"/></name></expr></argument>)<pos:position pos:line="568" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="568" pos:column="40"/></condition><then pos:line="568" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="569" pos:column="25">handle_skipped_hlink<pos:position pos:line="569" pos:column="45"/></name><argument_list pos:line="569" pos:column="45">(<argument><expr><name pos:line="569" pos:column="46">file<pos:position pos:line="569" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="569" pos:column="52">itemizing<pos:position pos:line="569" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="569" pos:column="63">code<pos:position pos:line="569" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="569" pos:column="69">f_out<pos:position pos:line="569" pos:column="74"/></name></expr></argument>)<pos:position pos:line="569" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="569" pos:column="76"/></expr_stmt></block></then></if>
<cpp:endif pos:line="570" pos:column="1">#<cpp:directive pos:line="570" pos:column="2">endif<pos:position pos:line="570" pos:column="7"/></cpp:directive></cpp:endif>
		<goto pos:line="571" pos:column="17">goto <name pos:line="571" pos:column="22">cleanup<pos:position pos:line="571" pos:column="29"/></name>;<pos:position pos:line="571" pos:column="30"/></goto>
	}<pos:position pos:line="572" pos:column="10"/></block></then></if>

  <label><name pos:line="574" pos:column="3">prepare_to_open<pos:position pos:line="574" pos:column="18"/></name>:<pos:position pos:line="574" pos:column="19"/></label>
	<if pos:line="575" pos:column="9">if <condition pos:line="575" pos:column="12">(<expr><name pos:line="575" pos:column="13">partialptr<pos:position pos:line="575" pos:column="23"/></name></expr>)<pos:position pos:line="575" pos:column="24"/></condition><then pos:line="575" pos:column="24"> <block pos:line="575" pos:column="25">{
		<expr_stmt><expr><name><name pos:line="576" pos:column="17">sx<pos:position pos:line="576" pos:column="19"/></name><operator pos:line="576" pos:column="19">.<pos:position pos:line="576" pos:column="20"/></operator><name pos:line="576" pos:column="20">st<pos:position pos:line="576" pos:column="22"/></name></name> <operator pos:line="576" pos:column="23">=<pos:position pos:line="576" pos:column="24"/></operator> <name pos:line="576" pos:column="25">partial_st<pos:position pos:line="576" pos:column="35"/></name></expr>;<pos:position pos:line="576" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="577" pos:column="17">fnamecmp<pos:position pos:line="577" pos:column="25"/></name> <operator pos:line="577" pos:column="26">=<pos:position pos:line="577" pos:column="27"/></operator> <name pos:line="577" pos:column="28">partialptr<pos:position pos:line="577" pos:column="38"/></name></expr>;<pos:position pos:line="577" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="578" pos:column="17">fnamecmp_type<pos:position pos:line="578" pos:column="30"/></name> <operator pos:line="578" pos:column="31">=<pos:position pos:line="578" pos:column="32"/></operator> <name pos:line="578" pos:column="33">FNAMECMP_PARTIAL_DIR<pos:position pos:line="578" pos:column="53"/></name></expr>;<pos:position pos:line="578" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="579" pos:column="17">statret<pos:position pos:line="579" pos:column="24"/></name> <operator pos:line="579" pos:column="25">=<pos:position pos:line="579" pos:column="26"/></operator> <literal type="number" pos:line="579" pos:column="27">0<pos:position pos:line="579" pos:column="28"/></literal></expr>;<pos:position pos:line="579" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="580" pos:column="10"/></block></then></if>

	<if pos:line="582" pos:column="9">if <condition pos:line="582" pos:column="12">(<expr><operator pos:line="582" pos:column="13">!<pos:position pos:line="582" pos:column="14"/></operator><name pos:line="582" pos:column="14">do_xfers<pos:position pos:line="582" pos:column="22"/></name></expr>)<pos:position pos:line="582" pos:column="23"/></condition><then pos:line="582" pos:column="23">
		<block type="pseudo"><goto pos:line="583" pos:column="17">goto <name pos:line="583" pos:column="22">notify_others<pos:position pos:line="583" pos:column="35"/></name>;<pos:position pos:line="583" pos:column="36"/></goto></block></then></if>

	<if pos:line="585" pos:column="9">if <condition pos:line="585" pos:column="12">(<expr><name pos:line="585" pos:column="13">read_batch<pos:position pos:line="585" pos:column="23"/></name> <operator pos:line="585" pos:column="24">||<pos:position pos:line="585" pos:column="26"/></operator> <name pos:line="585" pos:column="27">whole_file<pos:position pos:line="585" pos:column="37"/></name></expr>)<pos:position pos:line="585" pos:column="38"/></condition><then pos:line="585" pos:column="38"> <block pos:line="585" pos:column="39">{
		<if pos:line="586" pos:column="17">if <condition pos:line="586" pos:column="20">(<expr><name pos:line="586" pos:column="21">inplace<pos:position pos:line="586" pos:column="28"/></name> <operator pos:line="586" pos:column="29">&amp;&amp;<pos:position pos:line="586" pos:column="39"/></operator> <name pos:line="586" pos:column="32">make_backups<pos:position pos:line="586" pos:column="44"/></name> <operator pos:line="586" pos:column="45">&gt;<pos:position pos:line="586" pos:column="49"/></operator> <literal type="number" pos:line="586" pos:column="47">0<pos:position pos:line="586" pos:column="48"/></literal> <operator pos:line="586" pos:column="49">&amp;&amp;<pos:position pos:line="586" pos:column="59"/></operator> <name pos:line="586" pos:column="52">fnamecmp_type<pos:position pos:line="586" pos:column="65"/></name> <operator pos:line="586" pos:column="66">==<pos:position pos:line="586" pos:column="68"/></operator> <name pos:line="586" pos:column="69">FNAMECMP_FNAME<pos:position pos:line="586" pos:column="83"/></name></expr>)<pos:position pos:line="586" pos:column="84"/></condition><then pos:line="586" pos:column="84"> <block pos:line="586" pos:column="85">{
			<if pos:line="587" pos:column="25">if <condition pos:line="587" pos:column="28">(<expr><operator pos:line="587" pos:column="29">!<pos:position pos:line="587" pos:column="30"/></operator><operator pos:line="587" pos:column="30">(<pos:position pos:line="587" pos:column="31"/></operator><name pos:line="587" pos:column="31">backupptr<pos:position pos:line="587" pos:column="40"/></name> <operator pos:line="587" pos:column="41">=<pos:position pos:line="587" pos:column="42"/></operator> <call><name pos:line="587" pos:column="43">get_backup_name<pos:position pos:line="587" pos:column="58"/></name><argument_list pos:line="587" pos:column="58">(<argument><expr><name pos:line="587" pos:column="59">fname<pos:position pos:line="587" pos:column="64"/></name></expr></argument>)<pos:position pos:line="587" pos:column="65"/></argument_list></call><operator pos:line="587" pos:column="65">)<pos:position pos:line="587" pos:column="66"/></operator></expr>)<pos:position pos:line="587" pos:column="67"/></condition><then pos:line="587" pos:column="67">
				<block type="pseudo"><goto pos:line="588" pos:column="33">goto <name pos:line="588" pos:column="38">cleanup<pos:position pos:line="588" pos:column="45"/></name>;<pos:position pos:line="588" pos:column="46"/></goto></block></then></if>
			<if pos:line="589" pos:column="25">if <condition pos:line="589" pos:column="28">(<expr><operator pos:line="589" pos:column="29">!<pos:position pos:line="589" pos:column="30"/></operator><operator pos:line="589" pos:column="30">(<pos:position pos:line="589" pos:column="31"/></operator><name pos:line="589" pos:column="31">back_file<pos:position pos:line="589" pos:column="40"/></name> <operator pos:line="589" pos:column="41">=<pos:position pos:line="589" pos:column="42"/></operator> <call><name pos:line="589" pos:column="43">make_file<pos:position pos:line="589" pos:column="52"/></name><argument_list pos:line="589" pos:column="52">(<argument><expr><name pos:line="589" pos:column="53">fname<pos:position pos:line="589" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="589" pos:column="60">NULL<pos:position pos:line="589" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="589" pos:column="66">NULL<pos:position pos:line="589" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="589" pos:column="72">0<pos:position pos:line="589" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="589" pos:column="75">NO_FILTERS<pos:position pos:line="589" pos:column="85"/></name></expr></argument>)<pos:position pos:line="589" pos:column="86"/></argument_list></call><operator pos:line="589" pos:column="86">)<pos:position pos:line="589" pos:column="87"/></operator></expr>)<pos:position pos:line="589" pos:column="88"/></condition><then pos:line="589" pos:column="88">
				<block type="pseudo"><goto pos:line="590" pos:column="33">goto <name pos:line="590" pos:column="38">pretend_missing<pos:position pos:line="590" pos:column="53"/></name>;<pos:position pos:line="590" pos:column="54"/></goto></block></then></if>
			<if pos:line="591" pos:column="25">if <condition pos:line="591" pos:column="28">(<expr><call><name pos:line="591" pos:column="29">copy_file<pos:position pos:line="591" pos:column="38"/></name><argument_list pos:line="591" pos:column="38">(<argument><expr><name pos:line="591" pos:column="39">fname<pos:position pos:line="591" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="591" pos:column="46">backupptr<pos:position pos:line="591" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="591" pos:column="57">-<pos:position pos:line="591" pos:column="58"/></operator><literal type="number" pos:line="591" pos:column="58">1<pos:position pos:line="591" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="591" pos:column="61">back_file<pos:position pos:line="591" pos:column="70"/></name><operator pos:line="591" pos:column="70">-&gt;<pos:position pos:line="591" pos:column="75"/></operator><name pos:line="591" pos:column="72">mode<pos:position pos:line="591" pos:column="76"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="591" pos:column="78">1<pos:position pos:line="591" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="591" pos:column="80"/></argument_list></call> <operator pos:line="591" pos:column="81">&lt;<pos:position pos:line="591" pos:column="85"/></operator> <literal type="number" pos:line="591" pos:column="83">0<pos:position pos:line="591" pos:column="84"/></literal></expr>)<pos:position pos:line="591" pos:column="85"/></condition><then pos:line="591" pos:column="85"> <block pos:line="591" pos:column="86">{
				<expr_stmt><expr><call><name pos:line="592" pos:column="33">unmake_file<pos:position pos:line="592" pos:column="44"/></name><argument_list pos:line="592" pos:column="44">(<argument><expr><name pos:line="592" pos:column="45">back_file<pos:position pos:line="592" pos:column="54"/></name></expr></argument>)<pos:position pos:line="592" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="592" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="593" pos:column="33">back_file<pos:position pos:line="593" pos:column="42"/></name> <operator pos:line="593" pos:column="43">=<pos:position pos:line="593" pos:column="44"/></operator> <name pos:line="593" pos:column="45">NULL<pos:position pos:line="593" pos:column="49"/></name></expr>;<pos:position pos:line="593" pos:column="50"/></expr_stmt>
				<goto pos:line="594" pos:column="33">goto <name pos:line="594" pos:column="38">cleanup<pos:position pos:line="594" pos:column="45"/></name>;<pos:position pos:line="594" pos:column="46"/></goto>
			}<pos:position pos:line="595" pos:column="26"/></block></then></if>
		}<pos:position pos:line="596" pos:column="18"/></block></then></if>
		<goto pos:line="597" pos:column="17">goto <name pos:line="597" pos:column="22">notify_others<pos:position pos:line="597" pos:column="35"/></name>;<pos:position pos:line="597" pos:column="36"/></goto>
	}<pos:position pos:line="598" pos:column="10"/></block></then></if>

	<if pos:line="600" pos:column="9">if <condition pos:line="600" pos:column="12">(<expr><name pos:line="600" pos:column="13">fuzzy_dirlist<pos:position pos:line="600" pos:column="26"/></name></expr>)<pos:position pos:line="600" pos:column="27"/></condition><then pos:line="600" pos:column="27"> <block pos:line="600" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="601" pos:column="17">int<pos:position pos:line="601" pos:column="20"/></name></type> <name pos:line="601" pos:column="21">j<pos:position pos:line="601" pos:column="22"/></name> <init pos:line="601" pos:column="23">= <expr><call><name pos:line="601" pos:column="25">flist_find<pos:position pos:line="601" pos:column="35"/></name><argument_list pos:line="601" pos:column="35">(<argument><expr><name pos:line="601" pos:column="36">fuzzy_dirlist<pos:position pos:line="601" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="601" pos:column="51">file<pos:position pos:line="601" pos:column="55"/></name></expr></argument>)<pos:position pos:line="601" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="601" pos:column="57"/></decl_stmt>
		<if pos:line="602" pos:column="17">if <condition pos:line="602" pos:column="20">(<expr><name pos:line="602" pos:column="21">j<pos:position pos:line="602" pos:column="22"/></name> <operator pos:line="602" pos:column="23">&gt;=<pos:position pos:line="602" pos:column="28"/></operator> <literal type="number" pos:line="602" pos:column="26">0<pos:position pos:line="602" pos:column="27"/></literal></expr>)<pos:position pos:line="602" pos:column="28"/></condition><then pos:line="602" pos:column="28"> <comment type="block" pos:line="602" pos:column="29">/* don't use changing file as future fuzzy basis */</comment>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="603" pos:column="25">fuzzy_dirlist<pos:position pos:line="603" pos:column="38"/></name><operator pos:line="603" pos:column="38">-&gt;<pos:position pos:line="603" pos:column="43"/></operator><name pos:line="603" pos:column="40">files<pos:position pos:line="603" pos:column="45"/></name><index pos:line="603" pos:column="45">[<expr><name pos:line="603" pos:column="46">j<pos:position pos:line="603" pos:column="47"/></name></expr>]<pos:position pos:line="603" pos:column="48"/></index></name><operator pos:line="603" pos:column="48">-&gt;<pos:position pos:line="603" pos:column="53"/></operator><name pos:line="603" pos:column="50">flags<pos:position pos:line="603" pos:column="55"/></name> <operator pos:line="603" pos:column="56">|=<pos:position pos:line="603" pos:column="58"/></operator> <name pos:line="603" pos:column="59">FLAG_FILE_SENT<pos:position pos:line="603" pos:column="73"/></name></expr>;<pos:position pos:line="603" pos:column="74"/></expr_stmt></block></then></if>
	}<pos:position pos:line="604" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="606" pos:column="9">/* open the file */</comment>
	<if pos:line="607" pos:column="9">if <condition pos:line="607" pos:column="12">(<expr><operator pos:line="607" pos:column="13">(<pos:position pos:line="607" pos:column="14"/></operator><name pos:line="607" pos:column="14">fd<pos:position pos:line="607" pos:column="16"/></name> <operator pos:line="607" pos:column="17">=<pos:position pos:line="607" pos:column="18"/></operator> <call><name pos:line="607" pos:column="19">do_open<pos:position pos:line="607" pos:column="26"/></name><argument_list pos:line="607" pos:column="26">(<argument><expr><name pos:line="607" pos:column="27">fnamecmp<pos:position pos:line="607" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="607" pos:column="37">O_RDONLY<pos:position pos:line="607" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="607" pos:column="47">0<pos:position pos:line="607" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="607" pos:column="49"/></argument_list></call><operator pos:line="607" pos:column="49">)<pos:position pos:line="607" pos:column="50"/></operator> <operator pos:line="607" pos:column="51">&lt;<pos:position pos:line="607" pos:column="55"/></operator> <literal type="number" pos:line="607" pos:column="53">0<pos:position pos:line="607" pos:column="54"/></literal></expr>)<pos:position pos:line="607" pos:column="55"/></condition><then pos:line="607" pos:column="55"> <block pos:line="607" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="608" pos:column="17">rsyserr<pos:position pos:line="608" pos:column="24"/></name><argument_list pos:line="608" pos:column="24">(<argument><expr><name pos:line="608" pos:column="25">FERROR<pos:position pos:line="608" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="608" pos:column="33">errno<pos:position pos:line="608" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="608" pos:column="40">"failed to open %s, continuing"<pos:position pos:line="608" pos:column="71"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="609" pos:column="25">full_fname<pos:position pos:line="609" pos:column="35"/></name><argument_list pos:line="609" pos:column="35">(<argument><expr><name pos:line="609" pos:column="36">fnamecmp<pos:position pos:line="609" pos:column="44"/></name></expr></argument>)<pos:position pos:line="609" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="609" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="47"/></expr_stmt>
	  <label><name pos:line="610" pos:column="11">pretend_missing<pos:position pos:line="610" pos:column="26"/></name>:<pos:position pos:line="610" pos:column="27"/></label>
		<comment type="block" pos:line="611" pos:column="17">/* pretend the file didn't exist */</comment>
<cpp:ifdef pos:line="612" pos:column="1">#<cpp:directive pos:line="612" pos:column="2">ifdef<pos:position pos:line="612" pos:column="7"/></cpp:directive> <name pos:line="612" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="612" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="613" pos:column="17">if <condition pos:line="613" pos:column="20">(<expr><name pos:line="613" pos:column="21">preserve_hard_links<pos:position pos:line="613" pos:column="40"/></name> <operator pos:line="613" pos:column="41">&amp;&amp;<pos:position pos:line="613" pos:column="51"/></operator> <call><name pos:line="613" pos:column="44">F_HLINK_NOT_LAST<pos:position pos:line="613" pos:column="60"/></name><argument_list pos:line="613" pos:column="60">(<argument><expr><name pos:line="613" pos:column="61">file<pos:position pos:line="613" pos:column="65"/></name></expr></argument>)<pos:position pos:line="613" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="613" pos:column="67"/></condition><then pos:line="613" pos:column="67"> <block pos:line="613" pos:column="68">{
			<expr_stmt><expr><name><name pos:line="614" pos:column="25">cur_flist<pos:position pos:line="614" pos:column="34"/></name><operator pos:line="614" pos:column="34">-&gt;<pos:position pos:line="614" pos:column="39"/></operator><name pos:line="614" pos:column="36">in_progress<pos:position pos:line="614" pos:column="47"/></name></name><operator pos:line="614" pos:column="47">++<pos:position pos:line="614" pos:column="49"/></operator></expr>;<pos:position pos:line="614" pos:column="50"/></expr_stmt>
			<goto pos:line="615" pos:column="25">goto <name pos:line="615" pos:column="30">cleanup<pos:position pos:line="615" pos:column="37"/></name>;<pos:position pos:line="615" pos:column="38"/></goto>
		}<pos:position pos:line="616" pos:column="18"/></block></then></if>
<cpp:endif pos:line="617" pos:column="1">#<cpp:directive pos:line="617" pos:column="2">endif<pos:position pos:line="617" pos:column="7"/></cpp:directive></cpp:endif>
		<expr_stmt><expr><name pos:line="618" pos:column="17">statret<pos:position pos:line="618" pos:column="24"/></name> <operator pos:line="618" pos:column="25">=<pos:position pos:line="618" pos:column="26"/></operator> <name pos:line="618" pos:column="27">real_ret<pos:position pos:line="618" pos:column="35"/></name> <operator pos:line="618" pos:column="36">=<pos:position pos:line="618" pos:column="37"/></operator> <operator pos:line="618" pos:column="38">-<pos:position pos:line="618" pos:column="39"/></operator><literal type="number" pos:line="618" pos:column="39">1<pos:position pos:line="618" pos:column="40"/></literal></expr>;<pos:position pos:line="618" pos:column="41"/></expr_stmt>
		<goto pos:line="619" pos:column="17">goto <name pos:line="619" pos:column="22">notify_others<pos:position pos:line="619" pos:column="35"/></name>;<pos:position pos:line="619" pos:column="36"/></goto>
	}<pos:position pos:line="620" pos:column="10"/></block></then></if>

	<if pos:line="622" pos:column="9">if <condition pos:line="622" pos:column="12">(<expr><name pos:line="622" pos:column="13">inplace<pos:position pos:line="622" pos:column="20"/></name> <operator pos:line="622" pos:column="21">&amp;&amp;<pos:position pos:line="622" pos:column="31"/></operator> <name pos:line="622" pos:column="24">make_backups<pos:position pos:line="622" pos:column="36"/></name> <operator pos:line="622" pos:column="37">&gt;<pos:position pos:line="622" pos:column="41"/></operator> <literal type="number" pos:line="622" pos:column="39">0<pos:position pos:line="622" pos:column="40"/></literal> <operator pos:line="622" pos:column="41">&amp;&amp;<pos:position pos:line="622" pos:column="51"/></operator> <name pos:line="622" pos:column="44">fnamecmp_type<pos:position pos:line="622" pos:column="57"/></name> <operator pos:line="622" pos:column="58">==<pos:position pos:line="622" pos:column="60"/></operator> <name pos:line="622" pos:column="61">FNAMECMP_FNAME<pos:position pos:line="622" pos:column="75"/></name></expr>)<pos:position pos:line="622" pos:column="76"/></condition><then pos:line="622" pos:column="76"> <block pos:line="622" pos:column="77">{
		<if pos:line="623" pos:column="17">if <condition pos:line="623" pos:column="20">(<expr><operator pos:line="623" pos:column="21">!<pos:position pos:line="623" pos:column="22"/></operator><operator pos:line="623" pos:column="22">(<pos:position pos:line="623" pos:column="23"/></operator><name pos:line="623" pos:column="23">backupptr<pos:position pos:line="623" pos:column="32"/></name> <operator pos:line="623" pos:column="33">=<pos:position pos:line="623" pos:column="34"/></operator> <call><name pos:line="623" pos:column="35">get_backup_name<pos:position pos:line="623" pos:column="50"/></name><argument_list pos:line="623" pos:column="50">(<argument><expr><name pos:line="623" pos:column="51">fname<pos:position pos:line="623" pos:column="56"/></name></expr></argument>)<pos:position pos:line="623" pos:column="57"/></argument_list></call><operator pos:line="623" pos:column="57">)<pos:position pos:line="623" pos:column="58"/></operator></expr>)<pos:position pos:line="623" pos:column="59"/></condition><then pos:line="623" pos:column="59"> <block pos:line="623" pos:column="60">{
			<expr_stmt><expr><call><name pos:line="624" pos:column="25">close<pos:position pos:line="624" pos:column="30"/></name><argument_list pos:line="624" pos:column="30">(<argument><expr><name pos:line="624" pos:column="31">fd<pos:position pos:line="624" pos:column="33"/></name></expr></argument>)<pos:position pos:line="624" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="624" pos:column="35"/></expr_stmt>
			<goto pos:line="625" pos:column="25">goto <name pos:line="625" pos:column="30">cleanup<pos:position pos:line="625" pos:column="37"/></name>;<pos:position pos:line="625" pos:column="38"/></goto>
		}<pos:position pos:line="626" pos:column="18"/></block></then></if>
		<if pos:line="627" pos:column="17">if <condition pos:line="627" pos:column="20">(<expr><operator pos:line="627" pos:column="21">!<pos:position pos:line="627" pos:column="22"/></operator><operator pos:line="627" pos:column="22">(<pos:position pos:line="627" pos:column="23"/></operator><name pos:line="627" pos:column="23">back_file<pos:position pos:line="627" pos:column="32"/></name> <operator pos:line="627" pos:column="33">=<pos:position pos:line="627" pos:column="34"/></operator> <call><name pos:line="627" pos:column="35">make_file<pos:position pos:line="627" pos:column="44"/></name><argument_list pos:line="627" pos:column="44">(<argument><expr><name pos:line="627" pos:column="45">fname<pos:position pos:line="627" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="627" pos:column="52">NULL<pos:position pos:line="627" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="627" pos:column="58">NULL<pos:position pos:line="627" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="627" pos:column="64">0<pos:position pos:line="627" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="627" pos:column="67">NO_FILTERS<pos:position pos:line="627" pos:column="77"/></name></expr></argument>)<pos:position pos:line="627" pos:column="78"/></argument_list></call><operator pos:line="627" pos:column="78">)<pos:position pos:line="627" pos:column="79"/></operator></expr>)<pos:position pos:line="627" pos:column="80"/></condition><then pos:line="627" pos:column="80"> <block pos:line="627" pos:column="81">{
			<expr_stmt><expr><call><name pos:line="628" pos:column="25">close<pos:position pos:line="628" pos:column="30"/></name><argument_list pos:line="628" pos:column="30">(<argument><expr><name pos:line="628" pos:column="31">fd<pos:position pos:line="628" pos:column="33"/></name></expr></argument>)<pos:position pos:line="628" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="628" pos:column="35"/></expr_stmt>
			<goto pos:line="629" pos:column="25">goto <name pos:line="629" pos:column="30">pretend_missing<pos:position pos:line="629" pos:column="45"/></name>;<pos:position pos:line="629" pos:column="46"/></goto>
		}<pos:position pos:line="630" pos:column="18"/></block></then></if>
		<if pos:line="631" pos:column="17">if <condition pos:line="631" pos:column="20">(<expr><call><name pos:line="631" pos:column="21">robust_unlink<pos:position pos:line="631" pos:column="34"/></name><argument_list pos:line="631" pos:column="34">(<argument><expr><name pos:line="631" pos:column="35">backupptr<pos:position pos:line="631" pos:column="44"/></name></expr></argument>)<pos:position pos:line="631" pos:column="45"/></argument_list></call> <operator pos:line="631" pos:column="46">&amp;&amp;<pos:position pos:line="631" pos:column="56"/></operator> <name pos:line="631" pos:column="49">errno<pos:position pos:line="631" pos:column="54"/></name> <operator pos:line="631" pos:column="55">!=<pos:position pos:line="631" pos:column="57"/></operator> <name pos:line="631" pos:column="58">ENOENT<pos:position pos:line="631" pos:column="64"/></name></expr>)<pos:position pos:line="631" pos:column="65"/></condition><then pos:line="631" pos:column="65"> <block pos:line="631" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="632" pos:column="25">rsyserr<pos:position pos:line="632" pos:column="32"/></name><argument_list pos:line="632" pos:column="32">(<argument><expr><name pos:line="632" pos:column="33">FERROR_XFER<pos:position pos:line="632" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="632" pos:column="46">errno<pos:position pos:line="632" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="632" pos:column="53">"unlink %s"<pos:position pos:line="632" pos:column="64"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="633" pos:column="33">full_fname<pos:position pos:line="633" pos:column="43"/></name><argument_list pos:line="633" pos:column="43">(<argument><expr><name pos:line="633" pos:column="44">backupptr<pos:position pos:line="633" pos:column="53"/></name></expr></argument>)<pos:position pos:line="633" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="633" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="633" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="634" pos:column="25">unmake_file<pos:position pos:line="634" pos:column="36"/></name><argument_list pos:line="634" pos:column="36">(<argument><expr><name pos:line="634" pos:column="37">back_file<pos:position pos:line="634" pos:column="46"/></name></expr></argument>)<pos:position pos:line="634" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="634" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name pos:line="635" pos:column="25">back_file<pos:position pos:line="635" pos:column="34"/></name> <operator pos:line="635" pos:column="35">=<pos:position pos:line="635" pos:column="36"/></operator> <name pos:line="635" pos:column="37">NULL<pos:position pos:line="635" pos:column="41"/></name></expr>;<pos:position pos:line="635" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="636" pos:column="25">close<pos:position pos:line="636" pos:column="30"/></name><argument_list pos:line="636" pos:column="30">(<argument><expr><name pos:line="636" pos:column="31">fd<pos:position pos:line="636" pos:column="33"/></name></expr></argument>)<pos:position pos:line="636" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="636" pos:column="35"/></expr_stmt>
			<goto pos:line="637" pos:column="25">goto <name pos:line="637" pos:column="30">cleanup<pos:position pos:line="637" pos:column="37"/></name>;<pos:position pos:line="637" pos:column="38"/></goto>
		}<pos:position pos:line="638" pos:column="18"/></block></then></if>
		<if pos:line="639" pos:column="17">if <condition pos:line="639" pos:column="20">(<expr><operator pos:line="639" pos:column="21">(<pos:position pos:line="639" pos:column="22"/></operator><name pos:line="639" pos:column="22">f_copy<pos:position pos:line="639" pos:column="28"/></name> <operator pos:line="639" pos:column="29">=<pos:position pos:line="639" pos:column="30"/></operator> <call><name pos:line="639" pos:column="31">do_open<pos:position pos:line="639" pos:column="38"/></name><argument_list pos:line="639" pos:column="38">(<argument><expr><name pos:line="639" pos:column="39">backupptr<pos:position pos:line="639" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="639" pos:column="50">O_WRONLY<pos:position pos:line="639" pos:column="58"/></name> <operator pos:line="639" pos:column="59">|<pos:position pos:line="639" pos:column="60"/></operator> <name pos:line="639" pos:column="61">O_CREAT<pos:position pos:line="639" pos:column="68"/></name> <operator pos:line="639" pos:column="69">|<pos:position pos:line="639" pos:column="70"/></operator> <name pos:line="639" pos:column="71">O_TRUNC<pos:position pos:line="639" pos:column="78"/></name> <operator pos:line="639" pos:column="79">|<pos:position pos:line="639" pos:column="80"/></operator> <name pos:line="639" pos:column="81">O_EXCL<pos:position pos:line="639" pos:column="87"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="639" pos:column="89">0600<pos:position pos:line="639" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="639" pos:column="94"/></argument_list></call><operator pos:line="639" pos:column="94">)<pos:position pos:line="639" pos:column="95"/></operator> <operator pos:line="639" pos:column="96">&lt;<pos:position pos:line="639" pos:column="100"/></operator> <literal type="number" pos:line="639" pos:column="98">0<pos:position pos:line="639" pos:column="99"/></literal></expr>)<pos:position pos:line="639" pos:column="100"/></condition><then pos:line="639" pos:column="100"> <block pos:line="639" pos:column="101">{
			<decl_stmt><decl><type><name pos:line="640" pos:column="25">int<pos:position pos:line="640" pos:column="28"/></name></type> <name pos:line="640" pos:column="29">save_errno<pos:position pos:line="640" pos:column="39"/></name> <init pos:line="640" pos:column="40">= <expr><ternary><condition><expr><name pos:line="640" pos:column="42">errno<pos:position pos:line="640" pos:column="47"/></name></expr> ?<pos:position pos:line="640" pos:column="49"/></condition><then pos:line="640" pos:column="49"> <expr><name pos:line="640" pos:column="50">errno<pos:position pos:line="640" pos:column="55"/></name></expr> <pos:position pos:line="640" pos:column="56"/></then><else pos:line="640" pos:column="56">: <expr><name pos:line="640" pos:column="58">EINVAL<pos:position pos:line="640" pos:column="64"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="640" pos:column="65"/></decl_stmt> <comment type="block" pos:line="640" pos:column="66">/* 0 paranoia */</comment>
			<if pos:line="641" pos:column="25">if <condition pos:line="641" pos:column="28">(<expr><name pos:line="641" pos:column="29">errno<pos:position pos:line="641" pos:column="34"/></name> <operator pos:line="641" pos:column="35">==<pos:position pos:line="641" pos:column="37"/></operator> <name pos:line="641" pos:column="38">ENOENT<pos:position pos:line="641" pos:column="44"/></name> <operator pos:line="641" pos:column="45">&amp;&amp;<pos:position pos:line="641" pos:column="55"/></operator> <call><name pos:line="641" pos:column="48">make_bak_dir<pos:position pos:line="641" pos:column="60"/></name><argument_list pos:line="641" pos:column="60">(<argument><expr><name pos:line="641" pos:column="61">backupptr<pos:position pos:line="641" pos:column="70"/></name></expr></argument>)<pos:position pos:line="641" pos:column="71"/></argument_list></call> <operator pos:line="641" pos:column="72">==<pos:position pos:line="641" pos:column="74"/></operator> <literal type="number" pos:line="641" pos:column="75">0<pos:position pos:line="641" pos:column="76"/></literal></expr>)<pos:position pos:line="641" pos:column="77"/></condition><then pos:line="641" pos:column="77"> <block pos:line="641" pos:column="78">{
				<if pos:line="642" pos:column="33">if <condition pos:line="642" pos:column="36">(<expr><operator pos:line="642" pos:column="37">(<pos:position pos:line="642" pos:column="38"/></operator><name pos:line="642" pos:column="38">f_copy<pos:position pos:line="642" pos:column="44"/></name> <operator pos:line="642" pos:column="45">=<pos:position pos:line="642" pos:column="46"/></operator> <call><name pos:line="642" pos:column="47">do_open<pos:position pos:line="642" pos:column="54"/></name><argument_list pos:line="642" pos:column="54">(<argument><expr><name pos:line="642" pos:column="55">backupptr<pos:position pos:line="642" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="642" pos:column="66">O_WRONLY<pos:position pos:line="642" pos:column="74"/></name> <operator pos:line="642" pos:column="75">|<pos:position pos:line="642" pos:column="76"/></operator> <name pos:line="642" pos:column="77">O_CREAT<pos:position pos:line="642" pos:column="84"/></name> <operator pos:line="642" pos:column="85">|<pos:position pos:line="642" pos:column="86"/></operator> <name pos:line="642" pos:column="87">O_TRUNC<pos:position pos:line="642" pos:column="94"/></name> <operator pos:line="642" pos:column="95">|<pos:position pos:line="642" pos:column="96"/></operator> <name pos:line="642" pos:column="97">O_EXCL<pos:position pos:line="642" pos:column="103"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="642" pos:column="105">0600<pos:position pos:line="642" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="642" pos:column="110"/></argument_list></call><operator pos:line="642" pos:column="110">)<pos:position pos:line="642" pos:column="111"/></operator> <operator pos:line="642" pos:column="112">&lt;<pos:position pos:line="642" pos:column="116"/></operator> <literal type="number" pos:line="642" pos:column="114">0<pos:position pos:line="642" pos:column="115"/></literal></expr>)<pos:position pos:line="642" pos:column="116"/></condition><then pos:line="642" pos:column="116">
					<block type="pseudo"><expr_stmt><expr><name pos:line="643" pos:column="41">save_errno<pos:position pos:line="643" pos:column="51"/></name> <operator pos:line="643" pos:column="52">=<pos:position pos:line="643" pos:column="53"/></operator> <ternary><condition><expr><name pos:line="643" pos:column="54">errno<pos:position pos:line="643" pos:column="59"/></name></expr> ?<pos:position pos:line="643" pos:column="61"/></condition><then pos:line="643" pos:column="61"> <expr><name pos:line="643" pos:column="62">errno<pos:position pos:line="643" pos:column="67"/></name></expr> <pos:position pos:line="643" pos:column="68"/></then><else pos:line="643" pos:column="68">: <expr><name pos:line="643" pos:column="70">save_errno<pos:position pos:line="643" pos:column="80"/></name></expr></else></ternary></expr>;<pos:position pos:line="643" pos:column="81"/></expr_stmt></block></then>
				<else pos:line="644" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="645" pos:column="41">save_errno<pos:position pos:line="645" pos:column="51"/></name> <operator pos:line="645" pos:column="52">=<pos:position pos:line="645" pos:column="53"/></operator> <literal type="number" pos:line="645" pos:column="54">0<pos:position pos:line="645" pos:column="55"/></literal></expr>;<pos:position pos:line="645" pos:column="56"/></expr_stmt></block></else></if>
			}<pos:position pos:line="646" pos:column="26"/></block></then></if>
			<if pos:line="647" pos:column="25">if <condition pos:line="647" pos:column="28">(<expr><name pos:line="647" pos:column="29">save_errno<pos:position pos:line="647" pos:column="39"/></name></expr>)<pos:position pos:line="647" pos:column="40"/></condition><then pos:line="647" pos:column="40"> <block pos:line="647" pos:column="41">{
				<expr_stmt><expr><call><name pos:line="648" pos:column="33">rsyserr<pos:position pos:line="648" pos:column="40"/></name><argument_list pos:line="648" pos:column="40">(<argument><expr><name pos:line="648" pos:column="41">FERROR_XFER<pos:position pos:line="648" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="648" pos:column="54">save_errno<pos:position pos:line="648" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="648" pos:column="66">"open %s"<pos:position pos:line="648" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="648" pos:column="77">full_fname<pos:position pos:line="648" pos:column="87"/></name><argument_list pos:line="648" pos:column="87">(<argument><expr><name pos:line="648" pos:column="88">backupptr<pos:position pos:line="648" pos:column="97"/></name></expr></argument>)<pos:position pos:line="648" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="648" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="648" pos:column="100"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="649" pos:column="33">unmake_file<pos:position pos:line="649" pos:column="44"/></name><argument_list pos:line="649" pos:column="44">(<argument><expr><name pos:line="649" pos:column="45">back_file<pos:position pos:line="649" pos:column="54"/></name></expr></argument>)<pos:position pos:line="649" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="649" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="650" pos:column="33">back_file<pos:position pos:line="650" pos:column="42"/></name> <operator pos:line="650" pos:column="43">=<pos:position pos:line="650" pos:column="44"/></operator> <name pos:line="650" pos:column="45">NULL<pos:position pos:line="650" pos:column="49"/></name></expr>;<pos:position pos:line="650" pos:column="50"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="651" pos:column="33">close<pos:position pos:line="651" pos:column="38"/></name><argument_list pos:line="651" pos:column="38">(<argument><expr><name pos:line="651" pos:column="39">fd<pos:position pos:line="651" pos:column="41"/></name></expr></argument>)<pos:position pos:line="651" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="651" pos:column="43"/></expr_stmt>
				<goto pos:line="652" pos:column="33">goto <name pos:line="652" pos:column="38">cleanup<pos:position pos:line="652" pos:column="45"/></name>;<pos:position pos:line="652" pos:column="46"/></goto>
			}<pos:position pos:line="653" pos:column="26"/></block></then></if>
		}<pos:position pos:line="654" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="655" pos:column="17">fnamecmp_type<pos:position pos:line="655" pos:column="30"/></name> <operator pos:line="655" pos:column="31">=<pos:position pos:line="655" pos:column="32"/></operator> <name pos:line="655" pos:column="33">FNAMECMP_BACKUP<pos:position pos:line="655" pos:column="48"/></name></expr>;<pos:position pos:line="655" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="656" pos:column="10"/></block></then></if>

	<if pos:line="658" pos:column="9">if <condition pos:line="658" pos:column="12">(<expr><name pos:line="658" pos:column="13">verbose<pos:position pos:line="658" pos:column="20"/></name> <operator pos:line="658" pos:column="21">&gt;<pos:position pos:line="658" pos:column="25"/></operator> <literal type="number" pos:line="658" pos:column="23">3<pos:position pos:line="658" pos:column="24"/></literal></expr>)<pos:position pos:line="658" pos:column="25"/></condition><then pos:line="658" pos:column="25"> <block pos:line="658" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="659" pos:column="17">rprintf<pos:position pos:line="659" pos:column="24"/></name><argument_list pos:line="659" pos:column="24">(<argument><expr><name pos:line="659" pos:column="25">FINFO<pos:position pos:line="659" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="659" pos:column="32">"gen mapped %s of size %.0f\n"<pos:position pos:line="659" pos:column="62"/></literal></expr></argument>,
			<argument><expr><name pos:line="660" pos:column="25">fnamecmp<pos:position pos:line="660" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="660" pos:column="35">(<pos:position pos:line="660" pos:column="36"/></operator><name pos:line="660" pos:column="36">double<pos:position pos:line="660" pos:column="42"/></name><operator pos:line="660" pos:column="42">)<pos:position pos:line="660" pos:column="43"/></operator><name><name pos:line="660" pos:column="43">sx<pos:position pos:line="660" pos:column="45"/></name><operator pos:line="660" pos:column="45">.<pos:position pos:line="660" pos:column="46"/></operator><name pos:line="660" pos:column="46">st<pos:position pos:line="660" pos:column="48"/></name><operator pos:line="660" pos:column="48">.<pos:position pos:line="660" pos:column="49"/></operator><name pos:line="660" pos:column="49">st_size<pos:position pos:line="660" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="660" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="660" pos:column="58"/></expr_stmt>
	}<pos:position pos:line="661" pos:column="10"/></block></then></if>

	<if pos:line="663" pos:column="9">if <condition pos:line="663" pos:column="12">(<expr><name pos:line="663" pos:column="13">verbose<pos:position pos:line="663" pos:column="20"/></name> <operator pos:line="663" pos:column="21">&gt;<pos:position pos:line="663" pos:column="25"/></operator> <literal type="number" pos:line="663" pos:column="23">2<pos:position pos:line="663" pos:column="24"/></literal></expr>)<pos:position pos:line="663" pos:column="25"/></condition><then pos:line="663" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="664" pos:column="17">rprintf<pos:position pos:line="664" pos:column="24"/></name><argument_list pos:line="664" pos:column="24">(<argument><expr><name pos:line="664" pos:column="25">FINFO<pos:position pos:line="664" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="664" pos:column="32">"generating and sending sums for %d\n"<pos:position pos:line="664" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="664" pos:column="72">ndx<pos:position pos:line="664" pos:column="75"/></name></expr></argument>)<pos:position pos:line="664" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="664" pos:column="77"/></expr_stmt></block></then></if>

  <label><name pos:line="666" pos:column="3">notify_others<pos:position pos:line="666" pos:column="16"/></name>:<pos:position pos:line="666" pos:column="17"/></label>
	<if pos:line="667" pos:column="9">if <condition pos:line="667" pos:column="12">(<expr><name pos:line="667" pos:column="13">remove_source_files<pos:position pos:line="667" pos:column="32"/></name> <operator pos:line="667" pos:column="33">&amp;&amp;<pos:position pos:line="667" pos:column="43"/></operator> <operator pos:line="667" pos:column="36">!<pos:position pos:line="667" pos:column="37"/></operator><name pos:line="667" pos:column="37">delay_updates<pos:position pos:line="667" pos:column="50"/></name> <operator pos:line="667" pos:column="51">&amp;&amp;<pos:position pos:line="667" pos:column="61"/></operator> <operator pos:line="667" pos:column="54">!<pos:position pos:line="667" pos:column="55"/></operator><name pos:line="667" pos:column="55">phase<pos:position pos:line="667" pos:column="60"/></name> <operator pos:line="667" pos:column="61">&amp;&amp;<pos:position pos:line="667" pos:column="71"/></operator> <operator pos:line="667" pos:column="64">!<pos:position pos:line="667" pos:column="65"/></operator><name pos:line="667" pos:column="65">dry_run<pos:position pos:line="667" pos:column="72"/></name></expr>)<pos:position pos:line="667" pos:column="73"/></condition><then pos:line="667" pos:column="73">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="668" pos:column="17">increment_active_files<pos:position pos:line="668" pos:column="39"/></name><argument_list pos:line="668" pos:column="39">(<argument><expr><name pos:line="668" pos:column="40">ndx<pos:position pos:line="668" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="668" pos:column="45">itemizing<pos:position pos:line="668" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="668" pos:column="56">code<pos:position pos:line="668" pos:column="60"/></name></expr></argument>)<pos:position pos:line="668" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="668" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="669" pos:column="9">if <condition pos:line="669" pos:column="12">(<expr><name pos:line="669" pos:column="13">inc_recurse<pos:position pos:line="669" pos:column="24"/></name> <operator pos:line="669" pos:column="25">&amp;&amp;<pos:position pos:line="669" pos:column="35"/></operator> <operator pos:line="669" pos:column="28">!<pos:position pos:line="669" pos:column="29"/></operator><name pos:line="669" pos:column="29">dry_run<pos:position pos:line="669" pos:column="36"/></name></expr>)<pos:position pos:line="669" pos:column="37"/></condition><then pos:line="669" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="670" pos:column="17">cur_flist<pos:position pos:line="670" pos:column="26"/></name><operator pos:line="670" pos:column="26">-&gt;<pos:position pos:line="670" pos:column="31"/></operator><name pos:line="670" pos:column="28">in_progress<pos:position pos:line="670" pos:column="39"/></name></name><operator pos:line="670" pos:column="39">++<pos:position pos:line="670" pos:column="41"/></operator></expr>;<pos:position pos:line="670" pos:column="42"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="671" pos:column="1">#<cpp:directive pos:line="671" pos:column="2">ifdef<pos:position pos:line="671" pos:column="7"/></cpp:directive> <name pos:line="671" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="671" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="672" pos:column="9">if <condition pos:line="672" pos:column="12">(<expr><name pos:line="672" pos:column="13">preserve_hard_links<pos:position pos:line="672" pos:column="32"/></name> <operator pos:line="672" pos:column="33">&amp;&amp;<pos:position pos:line="672" pos:column="43"/></operator> <call><name pos:line="672" pos:column="36">F_IS_HLINKED<pos:position pos:line="672" pos:column="48"/></name><argument_list pos:line="672" pos:column="48">(<argument><expr><name pos:line="672" pos:column="49">file<pos:position pos:line="672" pos:column="53"/></name></expr></argument>)<pos:position pos:line="672" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="672" pos:column="55"/></condition><then pos:line="672" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="673" pos:column="17">file<pos:position pos:line="673" pos:column="21"/></name><operator pos:line="673" pos:column="21">-&gt;<pos:position pos:line="673" pos:column="26"/></operator><name pos:line="673" pos:column="23">flags<pos:position pos:line="673" pos:column="28"/></name></name> <operator pos:line="673" pos:column="29">|=<pos:position pos:line="673" pos:column="31"/></operator> <name pos:line="673" pos:column="32">FLAG_FILE_SENT<pos:position pos:line="673" pos:column="46"/></name></expr>;<pos:position pos:line="673" pos:column="47"/></expr_stmt></block></then></if>
<cpp:endif pos:line="674" pos:column="1">#<cpp:directive pos:line="674" pos:column="2">endif<pos:position pos:line="674" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="675" pos:column="9">write_ndx<pos:position pos:line="675" pos:column="18"/></name><argument_list pos:line="675" pos:column="18">(<argument><expr><name pos:line="675" pos:column="19">f_out<pos:position pos:line="675" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="675" pos:column="26">ndx<pos:position pos:line="675" pos:column="29"/></name></expr></argument>)<pos:position pos:line="675" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="675" pos:column="31"/></expr_stmt>
	<if pos:line="676" pos:column="9">if <condition pos:line="676" pos:column="12">(<expr><name pos:line="676" pos:column="13">itemizing<pos:position pos:line="676" pos:column="22"/></name></expr>)<pos:position pos:line="676" pos:column="23"/></condition><then pos:line="676" pos:column="23"> <block pos:line="676" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="677" pos:column="17">int<pos:position pos:line="677" pos:column="20"/></name></type> <name pos:line="677" pos:column="21">iflags<pos:position pos:line="677" pos:column="27"/></name> <init pos:line="677" pos:column="28">= <expr><name pos:line="677" pos:column="30">ITEM_TRANSFER<pos:position pos:line="677" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="677" pos:column="44"/></decl_stmt>
		<if pos:line="678" pos:column="17">if <condition pos:line="678" pos:column="20">(<expr><name pos:line="678" pos:column="21">always_checksum<pos:position pos:line="678" pos:column="36"/></name> <operator pos:line="678" pos:column="37">&gt;<pos:position pos:line="678" pos:column="41"/></operator> <literal type="number" pos:line="678" pos:column="39">0<pos:position pos:line="678" pos:column="40"/></literal></expr>)<pos:position pos:line="678" pos:column="41"/></condition><then pos:line="678" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="679" pos:column="25">iflags<pos:position pos:line="679" pos:column="31"/></name> <operator pos:line="679" pos:column="32">|=<pos:position pos:line="679" pos:column="34"/></operator> <name pos:line="679" pos:column="35">ITEM_REPORT_CHANGE<pos:position pos:line="679" pos:column="53"/></name></expr>;<pos:position pos:line="679" pos:column="54"/></expr_stmt></block></then></if>
		<if pos:line="680" pos:column="17">if <condition pos:line="680" pos:column="20">(<expr><name pos:line="680" pos:column="21">fnamecmp_type<pos:position pos:line="680" pos:column="34"/></name> <operator pos:line="680" pos:column="35">!=<pos:position pos:line="680" pos:column="37"/></operator> <name pos:line="680" pos:column="38">FNAMECMP_FNAME<pos:position pos:line="680" pos:column="52"/></name></expr>)<pos:position pos:line="680" pos:column="53"/></condition><then pos:line="680" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="681" pos:column="25">iflags<pos:position pos:line="681" pos:column="31"/></name> <operator pos:line="681" pos:column="32">|=<pos:position pos:line="681" pos:column="34"/></operator> <name pos:line="681" pos:column="35">ITEM_BASIS_TYPE_FOLLOWS<pos:position pos:line="681" pos:column="58"/></name></expr>;<pos:position pos:line="681" pos:column="59"/></expr_stmt></block></then></if>
		<if pos:line="682" pos:column="17">if <condition pos:line="682" pos:column="20">(<expr><name pos:line="682" pos:column="21">fnamecmp_type<pos:position pos:line="682" pos:column="34"/></name> <operator pos:line="682" pos:column="35">==<pos:position pos:line="682" pos:column="37"/></operator> <name pos:line="682" pos:column="38">FNAMECMP_FUZZY<pos:position pos:line="682" pos:column="52"/></name></expr>)<pos:position pos:line="682" pos:column="53"/></condition><then pos:line="682" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="683" pos:column="25">iflags<pos:position pos:line="683" pos:column="31"/></name> <operator pos:line="683" pos:column="32">|=<pos:position pos:line="683" pos:column="34"/></operator> <name pos:line="683" pos:column="35">ITEM_XNAME_FOLLOWS<pos:position pos:line="683" pos:column="53"/></name></expr>;<pos:position pos:line="683" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="684" pos:column="17">itemize<pos:position pos:line="684" pos:column="24"/></name><argument_list pos:line="684" pos:column="24">(<argument><expr><name pos:line="684" pos:column="25">fnamecmp<pos:position pos:line="684" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="35">file<pos:position pos:line="684" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="684" pos:column="41">-<pos:position pos:line="684" pos:column="42"/></operator><literal type="number" pos:line="684" pos:column="42">1<pos:position pos:line="684" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="684" pos:column="45">real_ret<pos:position pos:line="684" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="684" pos:column="55">&amp;<pos:position pos:line="684" pos:column="60"/></operator><name pos:line="684" pos:column="56">real_sx<pos:position pos:line="684" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="65">iflags<pos:position pos:line="684" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="684" pos:column="73">fnamecmp_type<pos:position pos:line="684" pos:column="86"/></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="685" pos:column="25">fuzzy_file<pos:position pos:line="685" pos:column="35"/></name></expr> ?<pos:position pos:line="685" pos:column="37"/></condition><then pos:line="685" pos:column="37"> <expr><name><name pos:line="685" pos:column="38">fuzzy_file<pos:position pos:line="685" pos:column="48"/></name><operator pos:line="685" pos:column="48">-&gt;<pos:position pos:line="685" pos:column="53"/></operator><name pos:line="685" pos:column="50">basename<pos:position pos:line="685" pos:column="58"/></name></name></expr> <pos:position pos:line="685" pos:column="59"/></then><else pos:line="685" pos:column="59">: <expr><name pos:line="685" pos:column="61">NULL<pos:position pos:line="685" pos:column="65"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="685" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="685" pos:column="67"/></expr_stmt>
<cpp:ifdef pos:line="686" pos:column="1">#<cpp:directive pos:line="686" pos:column="2">ifdef<pos:position pos:line="686" pos:column="7"/></cpp:directive> <name pos:line="686" pos:column="8">SUPPORT_ACLS<pos:position pos:line="686" pos:column="20"/></name></cpp:ifdef>
		<if pos:line="687" pos:column="17">if <condition pos:line="687" pos:column="20">(<expr><name pos:line="687" pos:column="21">preserve_acls<pos:position pos:line="687" pos:column="34"/></name></expr>)<pos:position pos:line="687" pos:column="35"/></condition><then pos:line="687" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="688" pos:column="25">free_acl<pos:position pos:line="688" pos:column="33"/></name><argument_list pos:line="688" pos:column="33">(<argument><expr><operator pos:line="688" pos:column="34">&amp;<pos:position pos:line="688" pos:column="39"/></operator><name pos:line="688" pos:column="35">real_sx<pos:position pos:line="688" pos:column="42"/></name></expr></argument>)<pos:position pos:line="688" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="688" pos:column="44"/></expr_stmt></block></then></if>
<cpp:endif pos:line="689" pos:column="1">#<cpp:directive pos:line="689" pos:column="2">endif<pos:position pos:line="689" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="690" pos:column="1">#<cpp:directive pos:line="690" pos:column="2">ifdef<pos:position pos:line="690" pos:column="7"/></cpp:directive> <name pos:line="690" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="690" pos:column="22"/></name></cpp:ifdef>
		<if pos:line="691" pos:column="17">if <condition pos:line="691" pos:column="20">(<expr><name pos:line="691" pos:column="21">preserve_xattrs<pos:position pos:line="691" pos:column="36"/></name></expr>)<pos:position pos:line="691" pos:column="37"/></condition><then pos:line="691" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="692" pos:column="25">free_xattr<pos:position pos:line="692" pos:column="35"/></name><argument_list pos:line="692" pos:column="35">(<argument><expr><operator pos:line="692" pos:column="36">&amp;<pos:position pos:line="692" pos:column="41"/></operator><name pos:line="692" pos:column="37">real_sx<pos:position pos:line="692" pos:column="44"/></name></expr></argument>)<pos:position pos:line="692" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="692" pos:column="46"/></expr_stmt></block></then></if>
<cpp:endif pos:line="693" pos:column="1">#<cpp:directive pos:line="693" pos:column="2">endif<pos:position pos:line="693" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="694" pos:column="10"/></block></then></if>

	<if pos:line="696" pos:column="9">if <condition pos:line="696" pos:column="12">(<expr><operator pos:line="696" pos:column="13">!<pos:position pos:line="696" pos:column="14"/></operator><name pos:line="696" pos:column="14">do_xfers<pos:position pos:line="696" pos:column="22"/></name></expr>)<pos:position pos:line="696" pos:column="23"/></condition><then pos:line="696" pos:column="23"> <block pos:line="696" pos:column="24">{
<cpp:ifdef pos:line="697" pos:column="1">#<cpp:directive pos:line="697" pos:column="2">ifdef<pos:position pos:line="697" pos:column="7"/></cpp:directive> <name pos:line="697" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="697" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="698" pos:column="17">if <condition pos:line="698" pos:column="20">(<expr><name pos:line="698" pos:column="21">preserve_hard_links<pos:position pos:line="698" pos:column="40"/></name> <operator pos:line="698" pos:column="41">&amp;&amp;<pos:position pos:line="698" pos:column="51"/></operator> <call><name pos:line="698" pos:column="44">F_IS_HLINKED<pos:position pos:line="698" pos:column="56"/></name><argument_list pos:line="698" pos:column="56">(<argument><expr><name pos:line="698" pos:column="57">file<pos:position pos:line="698" pos:column="61"/></name></expr></argument>)<pos:position pos:line="698" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="698" pos:column="63"/></condition><then pos:line="698" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="699" pos:column="25">finish_hard_link<pos:position pos:line="699" pos:column="41"/></name><argument_list pos:line="699" pos:column="41">(<argument><expr><name pos:line="699" pos:column="42">file<pos:position pos:line="699" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="699" pos:column="48">fname<pos:position pos:line="699" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="699" pos:column="55">ndx<pos:position pos:line="699" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="699" pos:column="60">&amp;<pos:position pos:line="699" pos:column="65"/></operator><name><name pos:line="699" pos:column="61">sx<pos:position pos:line="699" pos:column="63"/></name><operator pos:line="699" pos:column="63">.<pos:position pos:line="699" pos:column="64"/></operator><name pos:line="699" pos:column="64">st<pos:position pos:line="699" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="699" pos:column="68">itemizing<pos:position pos:line="699" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="699" pos:column="79">code<pos:position pos:line="699" pos:column="83"/></name></expr></argument>, <argument><expr><operator pos:line="699" pos:column="85">-<pos:position pos:line="699" pos:column="86"/></operator><literal type="number" pos:line="699" pos:column="86">1<pos:position pos:line="699" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="699" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="699" pos:column="89"/></expr_stmt></block></then></if>
<cpp:endif pos:line="700" pos:column="1">#<cpp:directive pos:line="700" pos:column="2">endif<pos:position pos:line="700" pos:column="7"/></cpp:directive></cpp:endif>
		<goto pos:line="701" pos:column="17">goto <name pos:line="701" pos:column="22">cleanup<pos:position pos:line="701" pos:column="29"/></name>;<pos:position pos:line="701" pos:column="30"/></goto>
	}<pos:position pos:line="702" pos:column="10"/></block></then></if>
	<if pos:line="703" pos:column="9">if <condition pos:line="703" pos:column="12">(<expr><name pos:line="703" pos:column="13">read_batch<pos:position pos:line="703" pos:column="23"/></name></expr>)<pos:position pos:line="703" pos:column="24"/></condition><then pos:line="703" pos:column="24">
		<block type="pseudo"><goto pos:line="704" pos:column="17">goto <name pos:line="704" pos:column="22">cleanup<pos:position pos:line="704" pos:column="29"/></name>;<pos:position pos:line="704" pos:column="30"/></goto></block></then></if>

	<if pos:line="706" pos:column="9">if <condition pos:line="706" pos:column="12">(<expr><name pos:line="706" pos:column="13">statret<pos:position pos:line="706" pos:column="20"/></name> <operator pos:line="706" pos:column="21">!=<pos:position pos:line="706" pos:column="23"/></operator> <literal type="number" pos:line="706" pos:column="24">0<pos:position pos:line="706" pos:column="25"/></literal> <operator pos:line="706" pos:column="26">||<pos:position pos:line="706" pos:column="28"/></operator> <name pos:line="706" pos:column="29">whole_file<pos:position pos:line="706" pos:column="39"/></name></expr>)<pos:position pos:line="706" pos:column="40"/></condition><then pos:line="706" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="707" pos:column="17">write_sum_head<pos:position pos:line="707" pos:column="31"/></name><argument_list pos:line="707" pos:column="31">(<argument><expr><name pos:line="707" pos:column="32">f_out<pos:position pos:line="707" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="707" pos:column="39">NULL<pos:position pos:line="707" pos:column="43"/></name></expr></argument>)<pos:position pos:line="707" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="707" pos:column="45"/></expr_stmt></block></then>
	<elseif pos:line="708" pos:column="9">else <if pos:line="708" pos:column="14">if <condition pos:line="708" pos:column="17">(<expr><name><name pos:line="708" pos:column="18">sx<pos:position pos:line="708" pos:column="20"/></name><operator pos:line="708" pos:column="20">.<pos:position pos:line="708" pos:column="21"/></operator><name pos:line="708" pos:column="21">st<pos:position pos:line="708" pos:column="23"/></name><operator pos:line="708" pos:column="23">.<pos:position pos:line="708" pos:column="24"/></operator><name pos:line="708" pos:column="24">st_size<pos:position pos:line="708" pos:column="31"/></name></name> <operator pos:line="708" pos:column="32">&lt;=<pos:position pos:line="708" pos:column="37"/></operator> <literal type="number" pos:line="708" pos:column="35">0<pos:position pos:line="708" pos:column="36"/></literal></expr>)<pos:position pos:line="708" pos:column="37"/></condition><then pos:line="708" pos:column="37"> <block pos:line="708" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="709" pos:column="17">write_sum_head<pos:position pos:line="709" pos:column="31"/></name><argument_list pos:line="709" pos:column="31">(<argument><expr><name pos:line="709" pos:column="32">f_out<pos:position pos:line="709" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="709" pos:column="39">NULL<pos:position pos:line="709" pos:column="43"/></name></expr></argument>)<pos:position pos:line="709" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="709" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="710" pos:column="17">close<pos:position pos:line="710" pos:column="22"/></name><argument_list pos:line="710" pos:column="22">(<argument><expr><name pos:line="710" pos:column="23">fd<pos:position pos:line="710" pos:column="25"/></name></expr></argument>)<pos:position pos:line="710" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="710" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="711" pos:column="10"/></block></then></if></elseif> <else pos:line="711" pos:column="11">else <block pos:line="711" pos:column="16">{
		<if pos:line="712" pos:column="17">if <condition pos:line="712" pos:column="20">(<expr><call><name pos:line="712" pos:column="21">generate_and_send_sums<pos:position pos:line="712" pos:column="43"/></name><argument_list pos:line="712" pos:column="43">(<argument><expr><name pos:line="712" pos:column="44">fd<pos:position pos:line="712" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="712" pos:column="48">sx<pos:position pos:line="712" pos:column="50"/></name><operator pos:line="712" pos:column="50">.<pos:position pos:line="712" pos:column="51"/></operator><name pos:line="712" pos:column="51">st<pos:position pos:line="712" pos:column="53"/></name><operator pos:line="712" pos:column="53">.<pos:position pos:line="712" pos:column="54"/></operator><name pos:line="712" pos:column="54">st_size<pos:position pos:line="712" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="712" pos:column="63">f_out<pos:position pos:line="712" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="712" pos:column="70">f_copy<pos:position pos:line="712" pos:column="76"/></name></expr></argument>)<pos:position pos:line="712" pos:column="77"/></argument_list></call> <operator pos:line="712" pos:column="78">&lt;<pos:position pos:line="712" pos:column="82"/></operator> <literal type="number" pos:line="712" pos:column="80">0<pos:position pos:line="712" pos:column="81"/></literal></expr>)<pos:position pos:line="712" pos:column="82"/></condition><then pos:line="712" pos:column="82"> <block pos:line="712" pos:column="83">{
			<expr_stmt><expr><call><name pos:line="713" pos:column="25">rprintf<pos:position pos:line="713" pos:column="32"/></name><argument_list pos:line="713" pos:column="32">(<argument><expr><name pos:line="713" pos:column="33">FWARNING<pos:position pos:line="713" pos:column="41"/></name></expr></argument>,
			    <argument><expr><literal type="string" pos:line="714" pos:column="29">"WARNING: file is too large for checksum sending: %s\n"<pos:position pos:line="714" pos:column="84"/></literal></expr></argument>,
			    <argument><expr><name pos:line="715" pos:column="29">fnamecmp<pos:position pos:line="715" pos:column="37"/></name></expr></argument>)<pos:position pos:line="715" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="715" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="716" pos:column="25">write_sum_head<pos:position pos:line="716" pos:column="39"/></name><argument_list pos:line="716" pos:column="39">(<argument><expr><name pos:line="716" pos:column="40">f_out<pos:position pos:line="716" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="716" pos:column="47">NULL<pos:position pos:line="716" pos:column="51"/></name></expr></argument>)<pos:position pos:line="716" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="716" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="717" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="718" pos:column="17">close<pos:position pos:line="718" pos:column="22"/></name><argument_list pos:line="718" pos:column="22">(<argument><expr><name pos:line="718" pos:column="23">fd<pos:position pos:line="718" pos:column="25"/></name></expr></argument>)<pos:position pos:line="718" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="718" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="719" pos:column="10"/></block></else></if>

  <label><name pos:line="721" pos:column="3">cleanup<pos:position pos:line="721" pos:column="10"/></name>:<pos:position pos:line="721" pos:column="11"/></label>
	<if pos:line="722" pos:column="9">if <condition pos:line="722" pos:column="12">(<expr><name pos:line="722" pos:column="13">back_file<pos:position pos:line="722" pos:column="22"/></name></expr>)<pos:position pos:line="722" pos:column="23"/></condition><then pos:line="722" pos:column="23"> <block pos:line="722" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="723" pos:column="17">int<pos:position pos:line="723" pos:column="20"/></name></type> <name pos:line="723" pos:column="21">save_preserve_xattrs<pos:position pos:line="723" pos:column="41"/></name> <init pos:line="723" pos:column="42">= <expr><name pos:line="723" pos:column="44">preserve_xattrs<pos:position pos:line="723" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="723" pos:column="60"/></decl_stmt>
		<if pos:line="724" pos:column="17">if <condition pos:line="724" pos:column="20">(<expr><name pos:line="724" pos:column="21">f_copy<pos:position pos:line="724" pos:column="27"/></name> <operator pos:line="724" pos:column="28">&gt;=<pos:position pos:line="724" pos:column="33"/></operator> <literal type="number" pos:line="724" pos:column="31">0<pos:position pos:line="724" pos:column="32"/></literal></expr>)<pos:position pos:line="724" pos:column="33"/></condition><then pos:line="724" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="725" pos:column="25">close<pos:position pos:line="725" pos:column="30"/></name><argument_list pos:line="725" pos:column="30">(<argument><expr><name pos:line="725" pos:column="31">f_copy<pos:position pos:line="725" pos:column="37"/></name></expr></argument>)<pos:position pos:line="725" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="725" pos:column="39"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="726" pos:column="1">#<cpp:directive pos:line="726" pos:column="2">ifdef<pos:position pos:line="726" pos:column="7"/></cpp:directive> <name pos:line="726" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="726" pos:column="22"/></name></cpp:ifdef>
		<if pos:line="727" pos:column="17">if <condition pos:line="727" pos:column="20">(<expr><name pos:line="727" pos:column="21">preserve_xattrs<pos:position pos:line="727" pos:column="36"/></name></expr>)<pos:position pos:line="727" pos:column="37"/></condition><then pos:line="727" pos:column="37"> <block pos:line="727" pos:column="38">{
			<expr_stmt><expr><call><name pos:line="728" pos:column="25">copy_xattrs<pos:position pos:line="728" pos:column="36"/></name><argument_list pos:line="728" pos:column="36">(<argument><expr><name pos:line="728" pos:column="37">fname<pos:position pos:line="728" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="728" pos:column="44">backupptr<pos:position pos:line="728" pos:column="53"/></name></expr></argument>)<pos:position pos:line="728" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="728" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="729" pos:column="25">preserve_xattrs<pos:position pos:line="729" pos:column="40"/></name> <operator pos:line="729" pos:column="41">=<pos:position pos:line="729" pos:column="42"/></operator> <literal type="number" pos:line="729" pos:column="43">0<pos:position pos:line="729" pos:column="44"/></literal></expr>;<pos:position pos:line="729" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="730" pos:column="18"/></block></then></if>
<cpp:endif pos:line="731" pos:column="1">#<cpp:directive pos:line="731" pos:column="2">endif<pos:position pos:line="731" pos:column="7"/></cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="732" pos:column="17">set_file_attrs<pos:position pos:line="732" pos:column="31"/></name><argument_list pos:line="732" pos:column="31">(<argument><expr><name pos:line="732" pos:column="32">backupptr<pos:position pos:line="732" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="732" pos:column="43">back_file<pos:position pos:line="732" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="732" pos:column="54">NULL<pos:position pos:line="732" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="732" pos:column="60">NULL<pos:position pos:line="732" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="732" pos:column="66">0<pos:position pos:line="732" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="732" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="732" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><name pos:line="733" pos:column="17">preserve_xattrs<pos:position pos:line="733" pos:column="32"/></name> <operator pos:line="733" pos:column="33">=<pos:position pos:line="733" pos:column="34"/></operator> <name pos:line="733" pos:column="35">save_preserve_xattrs<pos:position pos:line="733" pos:column="55"/></name></expr>;<pos:position pos:line="733" pos:column="56"/></expr_stmt>
		<if pos:line="734" pos:column="17">if <condition pos:line="734" pos:column="20">(<expr><name pos:line="734" pos:column="21">verbose<pos:position pos:line="734" pos:column="28"/></name> <operator pos:line="734" pos:column="29">&gt;<pos:position pos:line="734" pos:column="33"/></operator> <literal type="number" pos:line="734" pos:column="31">1<pos:position pos:line="734" pos:column="32"/></literal></expr>)<pos:position pos:line="734" pos:column="33"/></condition><then pos:line="734" pos:column="33"> <block pos:line="734" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="735" pos:column="25">rprintf<pos:position pos:line="735" pos:column="32"/></name><argument_list pos:line="735" pos:column="32">(<argument><expr><name pos:line="735" pos:column="33">FINFO<pos:position pos:line="735" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="735" pos:column="40">"backed up %s to %s\n"<pos:position pos:line="735" pos:column="62"/></literal></expr></argument>,
				<argument><expr><name pos:line="736" pos:column="33">fname<pos:position pos:line="736" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="736" pos:column="40">backupptr<pos:position pos:line="736" pos:column="49"/></name></expr></argument>)<pos:position pos:line="736" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="736" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="737" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="738" pos:column="17">unmake_file<pos:position pos:line="738" pos:column="28"/></name><argument_list pos:line="738" pos:column="28">(<argument><expr><name pos:line="738" pos:column="29">back_file<pos:position pos:line="738" pos:column="38"/></name></expr></argument>)<pos:position pos:line="738" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="738" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="739" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="741" pos:column="1">#<cpp:directive pos:line="741" pos:column="2">ifdef<pos:position pos:line="741" pos:column="7"/></cpp:directive> <name pos:line="741" pos:column="8">SUPPORT_ACLS<pos:position pos:line="741" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="742" pos:column="9">if <condition pos:line="742" pos:column="12">(<expr><name pos:line="742" pos:column="13">preserve_acls<pos:position pos:line="742" pos:column="26"/></name></expr>)<pos:position pos:line="742" pos:column="27"/></condition><then pos:line="742" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="743" pos:column="17">free_acl<pos:position pos:line="743" pos:column="25"/></name><argument_list pos:line="743" pos:column="25">(<argument><expr><operator pos:line="743" pos:column="26">&amp;<pos:position pos:line="743" pos:column="31"/></operator><name pos:line="743" pos:column="27">sx<pos:position pos:line="743" pos:column="29"/></name></expr></argument>)<pos:position pos:line="743" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="743" pos:column="31"/></expr_stmt></block></then></if>
<cpp:endif pos:line="744" pos:column="1">#<cpp:directive pos:line="744" pos:column="2">endif<pos:position pos:line="744" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="745" pos:column="1">#<cpp:directive pos:line="745" pos:column="2">ifdef<pos:position pos:line="745" pos:column="7"/></cpp:directive> <name pos:line="745" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="745" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="746" pos:column="9">if <condition pos:line="746" pos:column="12">(<expr><name pos:line="746" pos:column="13">preserve_xattrs<pos:position pos:line="746" pos:column="28"/></name></expr>)<pos:position pos:line="746" pos:column="29"/></condition><then pos:line="746" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="747" pos:column="17">free_xattr<pos:position pos:line="747" pos:column="27"/></name><argument_list pos:line="747" pos:column="27">(<argument><expr><operator pos:line="747" pos:column="28">&amp;<pos:position pos:line="747" pos:column="33"/></operator><name pos:line="747" pos:column="29">sx<pos:position pos:line="747" pos:column="31"/></name></expr></argument>)<pos:position pos:line="747" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="747" pos:column="33"/></expr_stmt></block></then></if>
<cpp:endif pos:line="748" pos:column="1">#<cpp:directive pos:line="748" pos:column="2">endif<pos:position pos:line="748" pos:column="7"/></cpp:directive></cpp:endif>
	<return pos:line="749" pos:column="9">return;<pos:position pos:line="749" pos:column="16"/></return>
}<pos:position pos:line="750" pos:column="2"/></block></function></unit>

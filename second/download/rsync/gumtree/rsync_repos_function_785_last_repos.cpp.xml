<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_785_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SMB_ACL_T<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">sys_acl_get_file<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">path_p<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">SMB_ACL_TYPE_T<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">type<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">SMB_ACL_T<pos:position pos:line="3" pos:column="18"/></name></type>	<name pos:line="3" pos:column="25">acl_d<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>		<name pos:line="4" pos:column="25">count<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>		<comment type="block" pos:line="4" pos:column="41">/* # of ACL entries allocated	*/</comment>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>		<name pos:line="5" pos:column="25">naccess<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>	<comment type="block" pos:line="5" pos:column="41">/* # of access ACL entries	*/</comment>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type>		<name pos:line="6" pos:column="25">ndefault<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>	<comment type="block" pos:line="6" pos:column="41">/* # of default ACL entries	*/</comment>

	<if pos:line="8" pos:column="9">if<condition pos:line="8" pos:column="11">(<expr><call><name pos:line="8" pos:column="12">hpux_acl_call_presence<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call> <operator pos:line="8" pos:column="37">==<pos:position pos:line="8" pos:column="39"/></operator> <name pos:line="8" pos:column="40">False<pos:position pos:line="8" pos:column="45"/></name></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46"> <block pos:line="8" pos:column="47">{
		<comment type="block" pos:line="9" pos:column="17">/* Looks like we don't have the acl() system call on HPUX. 
		 * May be the system doesn't have the latest version of JFS.
		 */</comment>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></return> 
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">type<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">!=<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">SMB_ACL_TYPE_ACCESS<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">&amp;&amp;<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="44">type<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">!=<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="52">SMB_ACL_TYPE_DEFAULT<pos:position pos:line="15" pos:column="72"/></name></expr>)<pos:position pos:line="15" pos:column="73"/></condition><then pos:line="15" pos:column="73"> <block pos:line="15" pos:column="74">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">errno<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">EINVAL<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="20" pos:column="9">count<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">INITIAL_ACL_SIZE<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">acl_d<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <call><name pos:line="21" pos:column="22">sys_acl_init<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">count<pos:position pos:line="21" pos:column="40"/></name></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call><operator pos:line="21" pos:column="41">)<pos:position pos:line="21" pos:column="42"/></operator> <operator pos:line="21" pos:column="43">==<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="46">NULL<pos:position pos:line="21" pos:column="50"/></name></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51"> <block pos:line="21" pos:column="52">{
		<return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="25" pos:column="9">/*
	 * If there isn't enough space for the ACL entries we use
	 * ACL_CNT to determine the actual number of ACL entries
	 * reallocate and try again. This is in a loop because it
	 * is possible that someone else could modify the ACL and
	 * increase the number of entries between the call to
	 * ACL_CNT and the call to ACL_GET.
	 */</comment>
	<while pos:line="33" pos:column="9">while <condition pos:line="33" pos:column="15">(<expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">count<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <call><name pos:line="33" pos:column="25">acl<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">path_p<pos:position pos:line="33" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="37">ACL_GET<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">count<pos:position pos:line="33" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="53">&amp;<pos:position pos:line="33" pos:column="58"/></operator><name><name pos:line="33" pos:column="54">acl_d<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">-&gt;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="61">acl<pos:position pos:line="33" pos:column="64"/></name><index pos:line="33" pos:column="64">[<expr><literal type="number" pos:line="33" pos:column="65">0<pos:position pos:line="33" pos:column="66"/></literal></expr>]<pos:position pos:line="33" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call><operator pos:line="33" pos:column="68">)<pos:position pos:line="33" pos:column="69"/></operator> <operator pos:line="33" pos:column="70">&lt;<pos:position pos:line="33" pos:column="74"/></operator> <literal type="number" pos:line="33" pos:column="72">0<pos:position pos:line="33" pos:column="73"/></literal> <operator pos:line="33" pos:column="74">&amp;&amp;<pos:position pos:line="33" pos:column="84"/></operator> <name pos:line="33" pos:column="77">errno<pos:position pos:line="33" pos:column="82"/></name> <operator pos:line="33" pos:column="83">==<pos:position pos:line="33" pos:column="85"/></operator> <name pos:line="33" pos:column="86">ENOSPC<pos:position pos:line="33" pos:column="92"/></name></expr>)<pos:position pos:line="33" pos:column="93"/></condition> <block pos:line="33" pos:column="94">{

		<expr_stmt><expr><call><name pos:line="35" pos:column="17">sys_acl_free_acl<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">acl_d<pos:position pos:line="35" pos:column="39"/></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><operator pos:line="37" pos:column="21">(<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">count<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">=<pos:position pos:line="37" pos:column="29"/></operator> <call><name pos:line="37" pos:column="30">acl<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">path_p<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">ACL_CNT<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">NACLENTRIES<pos:position pos:line="37" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="64">NULL<pos:position pos:line="37" pos:column="68"/></name></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call><operator pos:line="37" pos:column="69">)<pos:position pos:line="37" pos:column="70"/></operator> <operator pos:line="37" pos:column="71">&lt;<pos:position pos:line="37" pos:column="75"/></operator> <literal type="number" pos:line="37" pos:column="73">0<pos:position pos:line="37" pos:column="74"/></literal></expr>)<pos:position pos:line="37" pos:column="75"/></condition><then pos:line="37" pos:column="75"> <block pos:line="37" pos:column="76">{
			<return pos:line="38" pos:column="25">return <expr><name pos:line="38" pos:column="32">NULL<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></return>
		}<pos:position pos:line="39" pos:column="18"/></block></then></if>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">acl_d<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">=<pos:position pos:line="41" pos:column="29"/></operator> <call><name pos:line="41" pos:column="30">sys_acl_init<pos:position pos:line="41" pos:column="42"/></name><argument_list pos:line="41" pos:column="42">(<argument><expr><name pos:line="41" pos:column="43">count<pos:position pos:line="41" pos:column="48"/></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call><operator pos:line="41" pos:column="49">)<pos:position pos:line="41" pos:column="50"/></operator> <operator pos:line="41" pos:column="51">==<pos:position pos:line="41" pos:column="53"/></operator> <name pos:line="41" pos:column="54">NULL<pos:position pos:line="41" pos:column="58"/></name></expr>)<pos:position pos:line="41" pos:column="59"/></condition><then pos:line="41" pos:column="59"> <block pos:line="41" pos:column="60">{
			<return pos:line="42" pos:column="25">return <expr><name pos:line="42" pos:column="32">NULL<pos:position pos:line="42" pos:column="36"/></name></expr>;<pos:position pos:line="42" pos:column="37"/></return>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>
	}<pos:position pos:line="44" pos:column="10"/></block></while>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">count<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">&lt;<pos:position pos:line="46" pos:column="23"/></operator> <literal type="number" pos:line="46" pos:column="21">0<pos:position pos:line="46" pos:column="22"/></literal></expr>)<pos:position pos:line="46" pos:column="23"/></condition><then pos:line="46" pos:column="23"> <block pos:line="46" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">sys_acl_free_acl<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">acl_d<pos:position pos:line="47" pos:column="39"/></name></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
		<return pos:line="48" pos:column="17">return <expr><name pos:line="48" pos:column="24">NULL<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="51" pos:column="9">/*
	 * calculate the number of access and default ACL entries
	 *
	 * Note: we assume that the acl() system call returned a
	 * well formed ACL which is sorted so that all of the
	 * access ACL entries preceed any default ACL entries
	 */</comment>
	<for pos:line="58" pos:column="9">for <control pos:line="58" pos:column="13">(<init><expr><name pos:line="58" pos:column="14">naccess<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <literal type="number" pos:line="58" pos:column="24">0<pos:position pos:line="58" pos:column="25"/></literal></expr>;<pos:position pos:line="58" pos:column="26"/></init> <condition><expr><name pos:line="58" pos:column="27">naccess<pos:position pos:line="58" pos:column="34"/></name> <operator pos:line="58" pos:column="35">&lt;<pos:position pos:line="58" pos:column="39"/></operator> <name pos:line="58" pos:column="37">count<pos:position pos:line="58" pos:column="42"/></name></expr>;<pos:position pos:line="58" pos:column="43"/></condition> <incr><expr><name pos:line="58" pos:column="44">naccess<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">++<pos:position pos:line="58" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="54"/></control> <block pos:line="58" pos:column="55">{
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name><name pos:line="59" pos:column="21">acl_d<pos:position pos:line="59" pos:column="26"/></name><operator pos:line="59" pos:column="26">-&gt;<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="28">acl<pos:position pos:line="59" pos:column="31"/></name><index pos:line="59" pos:column="31">[<expr><name pos:line="59" pos:column="32">naccess<pos:position pos:line="59" pos:column="39"/></name></expr>]<pos:position pos:line="59" pos:column="40"/></index></name><operator pos:line="59" pos:column="40">.<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="41">a_type<pos:position pos:line="59" pos:column="47"/></name> <operator pos:line="59" pos:column="48">&amp;<pos:position pos:line="59" pos:column="53"/></operator> <name pos:line="59" pos:column="50">ACL_DEFAULT<pos:position pos:line="59" pos:column="61"/></name></expr>)<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62">
			<block type="pseudo"><break pos:line="60" pos:column="25">break;<pos:position pos:line="60" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="62" pos:column="9">ndefault<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="20">count<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">-<pos:position pos:line="62" pos:column="27"/></operator> <name pos:line="62" pos:column="28">naccess<pos:position pos:line="62" pos:column="35"/></name></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>
	
	<comment type="block" pos:line="64" pos:column="9">/*
	 * if the caller wants the default ACL we have to copy
	 * the entries down to the start of the acl[] buffer
	 * and mask out the ACL_DEFAULT flag from the type field
	 */</comment>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">type<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">==<pos:position pos:line="69" pos:column="20"/></operator> <name pos:line="69" pos:column="21">SMB_ACL_TYPE_DEFAULT<pos:position pos:line="69" pos:column="41"/></name></expr>)<pos:position pos:line="69" pos:column="42"/></condition><then pos:line="69" pos:column="42"> <block pos:line="69" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="70" pos:column="17">int<pos:position pos:line="70" pos:column="20"/></name></type>	<name pos:line="70" pos:column="25">i<pos:position pos:line="70" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="70" pos:column="28">j<pos:position pos:line="70" pos:column="29"/></name></decl>;<pos:position pos:line="70" pos:column="30"/></decl_stmt>

		<for pos:line="72" pos:column="17">for <control pos:line="72" pos:column="21">(<init><expr><name pos:line="72" pos:column="22">i<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <literal type="number" pos:line="72" pos:column="26">0<pos:position pos:line="72" pos:column="27"/></literal></expr><operator pos:line="72" pos:column="27">,<pos:position pos:line="72" pos:column="28"/></operator> <expr><name pos:line="72" pos:column="29">j<pos:position pos:line="72" pos:column="30"/></name> <operator pos:line="72" pos:column="31">=<pos:position pos:line="72" pos:column="32"/></operator> <name pos:line="72" pos:column="33">naccess<pos:position pos:line="72" pos:column="40"/></name></expr>;<pos:position pos:line="72" pos:column="41"/></init> <condition><expr><name pos:line="72" pos:column="42">i<pos:position pos:line="72" pos:column="43"/></name> <operator pos:line="72" pos:column="44">&lt;<pos:position pos:line="72" pos:column="48"/></operator> <name pos:line="72" pos:column="46">ndefault<pos:position pos:line="72" pos:column="54"/></name></expr>;<pos:position pos:line="72" pos:column="55"/></condition> <incr><expr><name pos:line="72" pos:column="56">i<pos:position pos:line="72" pos:column="57"/></name><operator pos:line="72" pos:column="57">++<pos:position pos:line="72" pos:column="59"/></operator></expr><operator pos:line="72" pos:column="59">,<pos:position pos:line="72" pos:column="60"/></operator> <expr><name pos:line="72" pos:column="61">j<pos:position pos:line="72" pos:column="62"/></name><operator pos:line="72" pos:column="62">++<pos:position pos:line="72" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="72" pos:column="65"/></control> <block pos:line="72" pos:column="66">{
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">acl_d<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">-&gt;<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="32">acl<pos:position pos:line="73" pos:column="35"/></name><index pos:line="73" pos:column="35">[<expr><name pos:line="73" pos:column="36">i<pos:position pos:line="73" pos:column="37"/></name></expr>]<pos:position pos:line="73" pos:column="38"/></index></name> <operator pos:line="73" pos:column="39">=<pos:position pos:line="73" pos:column="40"/></operator> <name><name pos:line="73" pos:column="41">acl_d<pos:position pos:line="73" pos:column="46"/></name><operator pos:line="73" pos:column="46">-&gt;<pos:position pos:line="73" pos:column="51"/></operator><name pos:line="73" pos:column="48">acl<pos:position pos:line="73" pos:column="51"/></name><index pos:line="73" pos:column="51">[<expr><name pos:line="73" pos:column="52">j<pos:position pos:line="73" pos:column="53"/></name></expr>]<pos:position pos:line="73" pos:column="54"/></index></name></expr>;<pos:position pos:line="73" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="74" pos:column="25">acl_d<pos:position pos:line="74" pos:column="30"/></name><operator pos:line="74" pos:column="30">-&gt;<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="32">acl<pos:position pos:line="74" pos:column="35"/></name><index pos:line="74" pos:column="35">[<expr><name pos:line="74" pos:column="36">i<pos:position pos:line="74" pos:column="37"/></name></expr>]<pos:position pos:line="74" pos:column="38"/></index></name><operator pos:line="74" pos:column="38">.<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="39">a_type<pos:position pos:line="74" pos:column="45"/></name> <operator pos:line="74" pos:column="46">&amp;=<pos:position pos:line="74" pos:column="52"/></operator> <operator pos:line="74" pos:column="49">~<pos:position pos:line="74" pos:column="50"/></operator><name pos:line="74" pos:column="50">ACL_DEFAULT<pos:position pos:line="74" pos:column="61"/></name></expr>;<pos:position pos:line="74" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="75" pos:column="18"/></block></for>

		<expr_stmt><expr><name><name pos:line="77" pos:column="17">acl_d<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">-&gt;<pos:position pos:line="77" pos:column="27"/></operator><name pos:line="77" pos:column="24">count<pos:position pos:line="77" pos:column="29"/></name></name> <operator pos:line="77" pos:column="30">=<pos:position pos:line="77" pos:column="31"/></operator> <name pos:line="77" pos:column="32">ndefault<pos:position pos:line="77" pos:column="40"/></name></expr>;<pos:position pos:line="77" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="78" pos:column="10"/></block></then> <else pos:line="78" pos:column="11">else <block pos:line="78" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="79" pos:column="17">acl_d<pos:position pos:line="79" pos:column="22"/></name><operator pos:line="79" pos:column="22">-&gt;<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="24">count<pos:position pos:line="79" pos:column="29"/></name></name> <operator pos:line="79" pos:column="30">=<pos:position pos:line="79" pos:column="31"/></operator> <name pos:line="79" pos:column="32">naccess<pos:position pos:line="79" pos:column="39"/></name></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="80" pos:column="10"/></block></else></if>

	<return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">acl_d<pos:position pos:line="82" pos:column="21"/></name></expr>;<pos:position pos:line="82" pos:column="22"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

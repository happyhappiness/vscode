<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_157_rsync-2.6.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">_exit_cleanup<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">code<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">file<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">line<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">fprintf<pos:position pos:line="3" pos:column="16"/></name><argument_list pos:line="3" pos:column="16">(<argument><expr><name pos:line="3" pos:column="17">stderr<pos:position pos:line="3" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="25">"exit(%d): %s(%d)\n"<pos:position pos:line="3" pos:column="45"/></literal></expr></argument>,
		<argument><expr><name pos:line="4" pos:column="17">code<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">file<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="29">line<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">exit<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">code<pos:position pos:line="5" pos:column="18"/></name></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_307_rsync-2.6.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_secret<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">int<pos:position pos:line="1" pos:column="26"/></name></type> <name pos:line="1" pos:column="27">module<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">user<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">secret<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">len<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fname<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">lp_secrets_file<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">module<pos:position pos:line="3" pos:column="45"/></name></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">STRUCT_STAT<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="17">ok<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">1<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">ch<pos:position pos:line="6" pos:column="16"/></name></decl>, <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="19">p<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">fname<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">||<pos:position pos:line="8" pos:column="22"/></operator> <operator pos:line="8" pos:column="23">!<pos:position pos:line="8" pos:column="24"/></operator><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">fname<pos:position pos:line="8" pos:column="30"/></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">fd<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <call><name pos:line="11" pos:column="19">open<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">fname<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">O_RDONLY<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call><operator pos:line="11" pos:column="40">)<pos:position pos:line="11" pos:column="41"/></operator> <operator pos:line="11" pos:column="42">&lt;<pos:position pos:line="11" pos:column="46"/></operator> <literal type="number" pos:line="11" pos:column="44">0<pos:position pos:line="11" pos:column="45"/></literal></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">do_stat<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">fname<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">st<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call> <operator pos:line="14" pos:column="33">==<pos:position pos:line="14" pos:column="35"/></operator> <operator pos:line="14" pos:column="36">-<pos:position pos:line="14" pos:column="37"/></operator><literal type="number" pos:line="14" pos:column="37">1<pos:position pos:line="14" pos:column="38"/></literal></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39"> <block pos:line="14" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">rsyserr<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">FLOG<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">errno<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"stat(%s)"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">fname<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">ok<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <elseif pos:line="17" pos:column="11">else <if pos:line="17" pos:column="16">if <condition pos:line="17" pos:column="19">(<expr><call><name pos:line="17" pos:column="20">lp_strict_modes<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">module<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44"> <block pos:line="17" pos:column="45">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name><name pos:line="18" pos:column="22">st<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">st_mode<pos:position pos:line="18" pos:column="32"/></name></name> <operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator> <literal type="number" pos:line="18" pos:column="35">06<pos:position pos:line="18" pos:column="37"/></literal><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator> <operator pos:line="18" pos:column="39">!=<pos:position pos:line="18" pos:column="41"/></operator> <literal type="number" pos:line="18" pos:column="42">0<pos:position pos:line="18" pos:column="43"/></literal></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44"> <block pos:line="18" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">rprintf<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">FLOG<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"secrets file must not be other-accessible (see strict modes option)\n"<pos:position pos:line="19" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="112"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">ok<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <elseif pos:line="21" pos:column="19">else <if pos:line="21" pos:column="24">if <condition pos:line="21" pos:column="27">(<expr><call><name pos:line="21" pos:column="28">MY_UID<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">()<pos:position pos:line="21" pos:column="36"/></argument_list></call> <operator pos:line="21" pos:column="37">==<pos:position pos:line="21" pos:column="39"/></operator> <literal type="number" pos:line="21" pos:column="40">0<pos:position pos:line="21" pos:column="41"/></literal> <operator pos:line="21" pos:column="42">&amp;&amp;<pos:position pos:line="21" pos:column="52"/></operator> <name><name pos:line="21" pos:column="45">st<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">.<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="48">st_uid<pos:position pos:line="21" pos:column="54"/></name></name> <operator pos:line="21" pos:column="55">!=<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">0<pos:position pos:line="21" pos:column="59"/></literal></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60"> <block pos:line="21" pos:column="61">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">rprintf<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">FLOG<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"secrets file must be owned by root when running as root (see strict modes)\n"<pos:position pos:line="22" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="119"/></expr_stmt>
			<expr_stmt><expr><name pos:line="23" pos:column="25">ok<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif></if>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">ok<pos:position pos:line="26" pos:column="16"/></name></expr>)<pos:position pos:line="26" pos:column="17"/></condition><then pos:line="26" pos:column="17"> <block pos:line="26" pos:column="18">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">rprintf<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">FLOG<pos:position pos:line="27" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">"continuing without secrets file\n"<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">close<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">fd<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">*<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">user<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">==<pos:position pos:line="32" pos:column="21"/></operator> <literal type="char" pos:line="32" pos:column="22">'#'<pos:position pos:line="32" pos:column="25"/></literal></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
		<comment type="block" pos:line="33" pos:column="17">/* Reject attempt to match a comment. */</comment>
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">close<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">fd<pos:position pos:line="34" pos:column="25"/></name></expr></argument>)<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><literal type="number" pos:line="35" pos:column="24">0<pos:position pos:line="35" pos:column="25"/></literal></expr>;<pos:position pos:line="35" pos:column="26"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/* Try to find a line that starts with the user name and a ':'. */</comment>
	<expr_stmt><expr><name pos:line="39" pos:column="9">p<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <name pos:line="39" pos:column="13">user<pos:position pos:line="39" pos:column="17"/></name></expr>;<pos:position pos:line="39" pos:column="18"/></expr_stmt>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal></expr>)<pos:position pos:line="40" pos:column="18"/></condition> <block pos:line="40" pos:column="19">{
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><call><name pos:line="41" pos:column="21">read<pos:position pos:line="41" pos:column="25"/></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">fd<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="30">&amp;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="31">ch<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="35">1<pos:position pos:line="41" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call> <operator pos:line="41" pos:column="38">!=<pos:position pos:line="41" pos:column="40"/></operator> <literal type="number" pos:line="41" pos:column="41">1<pos:position pos:line="41" pos:column="42"/></literal></expr>)<pos:position pos:line="41" pos:column="43"/></condition><then pos:line="41" pos:column="43"> <block pos:line="41" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">close<pos:position pos:line="42" pos:column="30"/></name><argument_list pos:line="42" pos:column="30">(<argument><expr><name pos:line="42" pos:column="31">fd<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
			<return pos:line="43" pos:column="25">return <expr><literal type="number" pos:line="43" pos:column="32">0<pos:position pos:line="43" pos:column="33"/></literal></expr>;<pos:position pos:line="43" pos:column="34"/></return>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">ch<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">==<pos:position pos:line="45" pos:column="26"/></operator> <literal type="char" pos:line="45" pos:column="27">'\n'<pos:position pos:line="45" pos:column="31"/></literal></expr>)<pos:position pos:line="45" pos:column="32"/></condition><then pos:line="45" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="25">p<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">user<pos:position pos:line="46" pos:column="33"/></name></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt></block></then>
		<elseif pos:line="47" pos:column="17">else <if pos:line="47" pos:column="22">if <condition pos:line="47" pos:column="25">(<expr><name pos:line="47" pos:column="26">p<pos:position pos:line="47" pos:column="27"/></name></expr>)<pos:position pos:line="47" pos:column="28"/></condition><then pos:line="47" pos:column="28"> <block pos:line="47" pos:column="29">{
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><operator pos:line="48" pos:column="29">*<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="30">p<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">==<pos:position pos:line="48" pos:column="34"/></operator> <name pos:line="48" pos:column="35">ch<pos:position pos:line="48" pos:column="37"/></name></expr>)<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38">
				<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="33">p<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">++<pos:position pos:line="49" pos:column="36"/></operator></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt></block></then>
			<elseif pos:line="50" pos:column="25">else <if pos:line="50" pos:column="30">if <condition pos:line="50" pos:column="33">(<expr><operator pos:line="50" pos:column="34">!<pos:position pos:line="50" pos:column="35"/></operator><operator pos:line="50" pos:column="35">*<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="36">p<pos:position pos:line="50" pos:column="37"/></name> <operator pos:line="50" pos:column="38">&amp;&amp;<pos:position pos:line="50" pos:column="48"/></operator> <name pos:line="50" pos:column="41">ch<pos:position pos:line="50" pos:column="43"/></name> <operator pos:line="50" pos:column="44">==<pos:position pos:line="50" pos:column="46"/></operator> <literal type="char" pos:line="50" pos:column="47">':'<pos:position pos:line="50" pos:column="50"/></literal></expr>)<pos:position pos:line="50" pos:column="51"/></condition><then pos:line="50" pos:column="51">
				<block type="pseudo"><break pos:line="51" pos:column="33">break;<pos:position pos:line="51" pos:column="39"/></break></block></then></if></elseif>
			<else pos:line="52" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="33">p<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">=<pos:position pos:line="53" pos:column="36"/></operator> <name pos:line="53" pos:column="37">NULL<pos:position pos:line="53" pos:column="41"/></name></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt></block></else></if>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="55" pos:column="10"/></block></while>

	<comment type="block" pos:line="57" pos:column="9">/* Slurp the secret into the "secret" buffer. */</comment>
	<expr_stmt><expr><name pos:line="58" pos:column="9">p<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <name pos:line="58" pos:column="13">secret<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
	<while pos:line="59" pos:column="9">while <condition pos:line="59" pos:column="15">(<expr><name pos:line="59" pos:column="16">len<pos:position pos:line="59" pos:column="19"/></name> <operator pos:line="59" pos:column="20">&gt;<pos:position pos:line="59" pos:column="24"/></operator> <literal type="number" pos:line="59" pos:column="22">0<pos:position pos:line="59" pos:column="23"/></literal></expr>)<pos:position pos:line="59" pos:column="24"/></condition> <block pos:line="59" pos:column="25">{
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><call><name pos:line="60" pos:column="21">read<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">fd<pos:position pos:line="60" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="30">p<pos:position pos:line="60" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="33">1<pos:position pos:line="60" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="35"/></argument_list></call> <operator pos:line="60" pos:column="36">!=<pos:position pos:line="60" pos:column="38"/></operator> <literal type="number" pos:line="60" pos:column="39">1<pos:position pos:line="60" pos:column="40"/></literal> <operator pos:line="60" pos:column="41">||<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="44">*<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="45">p<pos:position pos:line="60" pos:column="46"/></name> <operator pos:line="60" pos:column="47">==<pos:position pos:line="60" pos:column="49"/></operator> <literal type="char" pos:line="60" pos:column="50">'\n'<pos:position pos:line="60" pos:column="54"/></literal></expr>)<pos:position pos:line="60" pos:column="55"/></condition><then pos:line="60" pos:column="55">
			<block type="pseudo"><break pos:line="61" pos:column="25">break;<pos:position pos:line="61" pos:column="31"/></break></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">*<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">p<pos:position pos:line="62" pos:column="23"/></name> <operator pos:line="62" pos:column="24">==<pos:position pos:line="62" pos:column="26"/></operator> <literal type="char" pos:line="62" pos:column="27">'\r'<pos:position pos:line="62" pos:column="31"/></literal></expr>)<pos:position pos:line="62" pos:column="32"/></condition><then pos:line="62" pos:column="32">
			<block type="pseudo"><continue pos:line="63" pos:column="25">continue;<pos:position pos:line="63" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="64" pos:column="17">p<pos:position pos:line="64" pos:column="18"/></name><operator pos:line="64" pos:column="18">++<pos:position pos:line="64" pos:column="20"/></operator></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
		<expr_stmt><expr><name pos:line="65" pos:column="17">len<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">--<pos:position pos:line="65" pos:column="22"/></operator></expr>;<pos:position pos:line="65" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="67" pos:column="9">*<pos:position pos:line="67" pos:column="10"/></operator><name pos:line="67" pos:column="10">p<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">=<pos:position pos:line="67" pos:column="13"/></operator> <literal type="char" pos:line="67" pos:column="14">'\0'<pos:position pos:line="67" pos:column="18"/></literal></expr>;<pos:position pos:line="67" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">close<pos:position pos:line="68" pos:column="14"/></name><argument_list pos:line="68" pos:column="14">(<argument><expr><name pos:line="68" pos:column="15">fd<pos:position pos:line="68" pos:column="17"/></name></expr></argument>)<pos:position pos:line="68" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="19"/></expr_stmt>

	<return pos:line="70" pos:column="9">return <expr><literal type="number" pos:line="70" pos:column="16">1<pos:position pos:line="70" pos:column="17"/></literal></expr>;<pos:position pos:line="70" pos:column="18"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

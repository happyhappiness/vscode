<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_497_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">uint32<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">recv_acl_access<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">f<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">uchar<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">name_follows_ptr<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">uint32<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">access<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><call><name pos:line="3" pos:column="25">read_varint<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><name pos:line="3" pos:column="37">f<pos:position pos:line="3" pos:column="38"/></name></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">name_follows_ptr<pos:position pos:line="5" pos:column="29"/></name></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30"> <block pos:line="5" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">flags<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">access<pos:position pos:line="6" pos:column="35"/></name> <operator pos:line="6" pos:column="36">&amp;<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="38">3<pos:position pos:line="6" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
		<expr_stmt><expr><name pos:line="7" pos:column="17">access<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&gt;&gt;=<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="28">2<pos:position pos:line="7" pos:column="29"/></literal></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">am_root<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&gt;=<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal> <operator pos:line="8" pos:column="34">&amp;&amp;<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="37">access<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">&amp;<pos:position pos:line="8" pos:column="49"/></operator> <operator pos:line="8" pos:column="46">~<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">SMB_ACL_VALID_NAME_BITS<pos:position pos:line="8" pos:column="70"/></name></expr>)<pos:position pos:line="8" pos:column="71"/></condition><then pos:line="8" pos:column="71">
			<block type="pseudo"><goto pos:line="9" pos:column="25">goto <name pos:line="9" pos:column="30">value_error<pos:position pos:line="9" pos:column="41"/></name>;<pos:position pos:line="9" pos:column="42"/></goto></block></then></if>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">flags<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="29">XFLAG_NAME_FOLLOWS<pos:position pos:line="10" pos:column="47"/></name></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">name_follows_ptr<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">=<pos:position pos:line="11" pos:column="44"/></operator> <literal type="number" pos:line="11" pos:column="45">1<pos:position pos:line="11" pos:column="46"/></literal></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt></block></then>
		<else pos:line="12" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">name_follows_ptr<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">=<pos:position pos:line="13" pos:column="44"/></operator> <literal type="number" pos:line="13" pos:column="45">0<pos:position pos:line="13" pos:column="46"/></literal></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt></block></else></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">flags<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="29">XFLAG_NAME_IS_USER<pos:position pos:line="14" pos:column="47"/></name></expr>)<pos:position pos:line="14" pos:column="48"/></condition><then pos:line="14" pos:column="48">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">access<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">|=<pos:position pos:line="15" pos:column="34"/></operator> <name pos:line="15" pos:column="35">NAME_IS_USER<pos:position pos:line="15" pos:column="47"/></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><name pos:line="16" pos:column="20">am_root<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&gt;=<pos:position pos:line="16" pos:column="33"/></operator> <literal type="number" pos:line="16" pos:column="31">0<pos:position pos:line="16" pos:column="32"/></literal> <operator pos:line="16" pos:column="33">&amp;&amp;<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="36">access<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator> <operator pos:line="16" pos:column="45">~<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">SMB_ACL_VALID_OBJ_BITS<pos:position pos:line="16" pos:column="68"/></name></expr>)<pos:position pos:line="16" pos:column="69"/></condition><then pos:line="16" pos:column="69"> <block pos:line="16" pos:column="70">{
	  <label><name pos:line="17" pos:column="11">value_error<pos:position pos:line="17" pos:column="22"/></name>:<pos:position pos:line="17" pos:column="23"/></label>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">rprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">FERROR_XFER<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="38">"recv_acl_access: value out of range: %x\n"<pos:position pos:line="18" pos:column="81"/></literal></expr></argument>,
			<argument><expr><name pos:line="19" pos:column="25">access<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">exit_cleanup<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">RERR_STREAMIO<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">access<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

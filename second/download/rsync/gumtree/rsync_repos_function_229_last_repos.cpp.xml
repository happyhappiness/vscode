<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_229_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">hashtable_destroy<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name><name pos:line="1" pos:column="24">struct<pos:position pos:line="1" pos:column="30"/></name> <name pos:line="1" pos:column="31">hashtable<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">tbl<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">DEBUG_GTE<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">HASH<pos:position pos:line="3" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="29">1<pos:position pos:line="3" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <block pos:line="3" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">rprintf<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">FINFO<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="32">"[%s] destroyed hashtable %lx (size: %d, keys: %d-bit)\n"<pos:position pos:line="4" pos:column="89"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="5" pos:column="25">who_am_i<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">()<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="5" pos:column="37">(<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">long<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">tbl<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="48">tbl<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">-&gt;<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="53">size<pos:position pos:line="5" pos:column="57"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="5" pos:column="59">tbl<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">-&gt;<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="64">key64<pos:position pos:line="5" pos:column="69"/></name></name></expr> ?<pos:position pos:line="5" pos:column="71"/></condition><then pos:line="5" pos:column="71"> <expr><literal type="number" pos:line="5" pos:column="72">64<pos:position pos:line="5" pos:column="74"/></literal></expr> <pos:position pos:line="5" pos:column="75"/></then><else pos:line="5" pos:column="75">: <expr><literal type="number" pos:line="5" pos:column="77">32<pos:position pos:line="5" pos:column="79"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">free<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">tbl<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">nodes<pos:position pos:line="7" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">free<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">tbl<pos:position pos:line="8" pos:column="17"/></name></expr></argument>)<pos:position pos:line="8" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

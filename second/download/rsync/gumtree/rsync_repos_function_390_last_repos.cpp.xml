<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_390_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">_Insure_trap_error<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">a1<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">a2<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">a3<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">a4<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">a5<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">int<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">a6<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<function_decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> (<modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier><name pos:line="3" pos:column="22">fn<pos:position pos:line="3" pos:column="24"/></name>)<parameter_list pos:line="3" pos:column="25">()<pos:position pos:line="3" pos:column="27"/></parameter_list>;<pos:position pos:line="3" pos:column="28"/></function_decl>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">pid_int<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">getpid<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">()<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">cmd<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">asprintf<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="23">cmd<pos:position pos:line="7" pos:column="26"/></name></expr></argument>,
	    <argument><expr><literal type="string" pos:line="8" pos:column="13">"/usr/X11R6/bin/xterm -display :0 -T Panic -n Panic -e /bin/sh -c 'cat /tmp/ierrs.*.%d ; "<pos:position pos:line="8" pos:column="103"/></literal>
	    <literal type="string" pos:line="9" pos:column="13">"gdb /proc/%d/exe %d'"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">pid_int<pos:position pos:line="9" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">pid_int<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">pid_int<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call> <operator pos:line="9" pos:column="64">&lt;<pos:position pos:line="9" pos:column="68"/></operator> <literal type="number" pos:line="9" pos:column="66">0<pos:position pos:line="9" pos:column="67"/></literal></expr>)<pos:position pos:line="9" pos:column="68"/></condition><then pos:line="9" pos:column="68">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">fn<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17"> <block pos:line="12" pos:column="18">{
		<decl_stmt><decl><specifier pos:line="13" pos:column="17">static<pos:position pos:line="13" pos:column="23"/></specifier> <type><name pos:line="13" pos:column="24">void<pos:position pos:line="13" pos:column="28"/></name> <modifier pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></modifier></type><name pos:line="13" pos:column="30">h<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">h<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">dlopen<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="string" pos:line="14" pos:column="28">"/usr/local/parasoft/insure++lite/lib.linux2/libinsure.so"<pos:position pos:line="14" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="88">RTLD_LAZY<pos:position pos:line="14" pos:column="97"/></name></expr></argument>)<pos:position pos:line="14" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="99"/></expr_stmt>
		<expr_stmt><expr><name pos:line="15" pos:column="17">fn<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <call><name pos:line="15" pos:column="22">dlsym<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">h<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="31">"_Insure_trap_error"<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">fn<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">a1<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">a2<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">a3<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">a4<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">a5<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">a6<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">system<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">cmd<pos:position pos:line="20" pos:column="19"/></name></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">cmd<pos:position pos:line="22" pos:column="17"/></name></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>

	<return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

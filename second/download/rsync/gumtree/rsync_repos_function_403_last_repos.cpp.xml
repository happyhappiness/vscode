<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_403_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">read_ndx_and_attrs<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">f_in<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f_out<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">iflag_ptr<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">uchar<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">type_ptr<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
		       <parameter><decl><type><name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">buf<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">len_ptr<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">iflags<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">file_list<pos:position pos:line="5" pos:column="25"/></name></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">flist<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">uchar<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">fnamecmp_type<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><name pos:line="6" pos:column="31">FNAMECMP_FNAME<pos:position pos:line="6" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ndx<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

  <label><name pos:line="9" pos:column="3">read_loop<pos:position pos:line="9" pos:column="12"/></name>:<pos:position pos:line="9" pos:column="13"/></label>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>)<pos:position pos:line="10" pos:column="18"/></condition> <block pos:line="10" pos:column="19">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">ndx<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <call><name pos:line="11" pos:column="23">read_ndx<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">f_in<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">ndx<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&gt;=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30">
			<block type="pseudo"><break pos:line="14" pos:column="25">break;<pos:position pos:line="14" pos:column="31"/></break></block></then></if>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">ndx<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">NDX_DONE<pos:position pos:line="15" pos:column="36"/></name></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
			<block type="pseudo"><return pos:line="16" pos:column="25">return <expr><name pos:line="16" pos:column="32">ndx<pos:position pos:line="16" pos:column="35"/></name></expr>;<pos:position pos:line="16" pos:column="36"/></return></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">ndx<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">==<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">NDX_DEL_STATS<pos:position pos:line="17" pos:column="41"/></name></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">read_del_stats<pos:position pos:line="18" pos:column="39"/></name><argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">f_in<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><name pos:line="19" pos:column="29">am_sender<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">&amp;&amp;<pos:position pos:line="19" pos:column="49"/></operator> <name pos:line="19" pos:column="42">am_server<pos:position pos:line="19" pos:column="51"/></name></expr>)<pos:position pos:line="19" pos:column="52"/></condition><then pos:line="19" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="33">write_del_stats<pos:position pos:line="20" pos:column="48"/></name><argument_list pos:line="20" pos:column="48">(<argument><expr><name pos:line="20" pos:column="49">f_out<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt></block></then></if>
			<continue pos:line="21" pos:column="25">continue;<pos:position pos:line="21" pos:column="34"/></continue>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">!<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">inc_recurse<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">||<pos:position pos:line="23" pos:column="36"/></operator> <name pos:line="23" pos:column="37">am_sender<pos:position pos:line="23" pos:column="46"/></name></expr>)<pos:position pos:line="23" pos:column="47"/></condition><then pos:line="23" pos:column="47"> <block pos:line="23" pos:column="48">{
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">int<pos:position pos:line="24" pos:column="28"/></name></type> <name pos:line="24" pos:column="29">last<pos:position pos:line="24" pos:column="33"/></name></decl>;<pos:position pos:line="24" pos:column="34"/></decl_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">first_flist<pos:position pos:line="25" pos:column="40"/></name></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="33">last<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <name><name pos:line="26" pos:column="40">first_flist<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">prev<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">-&gt;<pos:position pos:line="26" pos:column="62"/></operator><name pos:line="26" pos:column="59">ndx_start<pos:position pos:line="26" pos:column="68"/></name></name> <operator pos:line="26" pos:column="69">+<pos:position pos:line="26" pos:column="70"/></operator> <name><name pos:line="26" pos:column="71">first_flist<pos:position pos:line="26" pos:column="82"/></name><operator pos:line="26" pos:column="82">-&gt;<pos:position pos:line="26" pos:column="87"/></operator><name pos:line="26" pos:column="84">prev<pos:position pos:line="26" pos:column="88"/></name><operator pos:line="26" pos:column="88">-&gt;<pos:position pos:line="26" pos:column="93"/></operator><name pos:line="26" pos:column="90">used<pos:position pos:line="26" pos:column="94"/></name></name> <operator pos:line="26" pos:column="95">-<pos:position pos:line="26" pos:column="96"/></operator> <literal type="number" pos:line="26" pos:column="97">1<pos:position pos:line="26" pos:column="98"/></literal></expr>;<pos:position pos:line="26" pos:column="99"/></expr_stmt></block></then>
			<else pos:line="27" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="33">last<pos:position pos:line="28" pos:column="37"/></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <operator pos:line="28" pos:column="40">-<pos:position pos:line="28" pos:column="41"/></operator><literal type="number" pos:line="28" pos:column="41">1<pos:position pos:line="28" pos:column="42"/></literal></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">rprintf<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">FERROR<pos:position pos:line="29" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="30" pos:column="33">"Invalid file index: %d (%d - %d) [%s]\n"<pos:position pos:line="30" pos:column="74"/></literal></expr></argument>,
				<argument><expr><name pos:line="31" pos:column="33">ndx<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="38">NDX_DONE<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="48">last<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="54">who_am_i<pos:position pos:line="31" pos:column="62"/></name><argument_list pos:line="31" pos:column="62">()<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">exit_cleanup<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">RERR_PROTOCOL<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">ndx<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">==<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">NDX_FLIST_EOF<pos:position pos:line="34" pos:column="41"/></name></expr>)<pos:position pos:line="34" pos:column="42"/></condition><then pos:line="34" pos:column="42"> <block pos:line="34" pos:column="43">{
			<expr_stmt><expr><name pos:line="35" pos:column="25">flist_eof<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">=<pos:position pos:line="35" pos:column="36"/></operator> <literal type="number" pos:line="35" pos:column="37">1<pos:position pos:line="35" pos:column="38"/></literal></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt>
			<if pos:line="36" pos:column="25">if <condition pos:line="36" pos:column="28">(<expr><call><name pos:line="36" pos:column="29">DEBUG_GTE<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">FLIST<pos:position pos:line="36" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="46">3<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="49"/></condition><then pos:line="36" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="33">rprintf<pos:position pos:line="37" pos:column="40"/></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">FINFO<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="48">"[%s] flist_eof=1\n"<pos:position pos:line="37" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="70">who_am_i<pos:position pos:line="37" pos:column="78"/></name><argument_list pos:line="37" pos:column="78">()<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="82"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">write_int<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">f_out<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">NDX_FLIST_EOF<pos:position pos:line="38" pos:column="55"/></name></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="57"/></expr_stmt>
			<continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="41" pos:column="17">ndx<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <name pos:line="41" pos:column="23">NDX_FLIST_OFFSET<pos:position pos:line="41" pos:column="39"/></name> <operator pos:line="41" pos:column="40">-<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">ndx<pos:position pos:line="41" pos:column="45"/></name></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">ndx<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">&lt;<pos:position pos:line="42" pos:column="29"/></operator> <literal type="number" pos:line="42" pos:column="27">0<pos:position pos:line="42" pos:column="28"/></literal> <operator pos:line="42" pos:column="29">||<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="32">ndx<pos:position pos:line="42" pos:column="35"/></name> <operator pos:line="42" pos:column="36">&gt;=<pos:position pos:line="42" pos:column="41"/></operator> <name><name pos:line="42" pos:column="39">dir_flist<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">-&gt;<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="50">used<pos:position pos:line="42" pos:column="54"/></name></name></expr>)<pos:position pos:line="42" pos:column="55"/></condition><then pos:line="42" pos:column="55"> <block pos:line="42" pos:column="56">{
			<expr_stmt><expr><name pos:line="43" pos:column="25">ndx<pos:position pos:line="43" pos:column="28"/></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <name pos:line="43" pos:column="31">NDX_FLIST_OFFSET<pos:position pos:line="43" pos:column="47"/></name> <operator pos:line="43" pos:column="48">-<pos:position pos:line="43" pos:column="49"/></operator> <name pos:line="43" pos:column="50">ndx<pos:position pos:line="43" pos:column="53"/></name></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="44" pos:column="25">rprintf<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">FERROR<pos:position pos:line="44" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="45" pos:column="33">"Invalid dir index: %d (%d - %d) [%s]\n"<pos:position pos:line="45" pos:column="73"/></literal></expr></argument>,
				<argument><expr><name pos:line="46" pos:column="33">ndx<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">NDX_FLIST_OFFSET<pos:position pos:line="46" pos:column="54"/></name></expr></argument>,
				<argument><expr><name pos:line="47" pos:column="33">NDX_FLIST_OFFSET<pos:position pos:line="47" pos:column="49"/></name> <operator pos:line="47" pos:column="50">-<pos:position pos:line="47" pos:column="51"/></operator> <name><name pos:line="47" pos:column="52">dir_flist<pos:position pos:line="47" pos:column="61"/></name><operator pos:line="47" pos:column="61">-&gt;<pos:position pos:line="47" pos:column="66"/></operator><name pos:line="47" pos:column="63">used<pos:position pos:line="47" pos:column="67"/></name></name> <operator pos:line="47" pos:column="68">+<pos:position pos:line="47" pos:column="69"/></operator> <literal type="number" pos:line="47" pos:column="70">1<pos:position pos:line="47" pos:column="71"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="48" pos:column="33">who_am_i<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">()<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="49" pos:column="25">exit_cleanup<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><name pos:line="49" pos:column="38">RERR_PROTOCOL<pos:position pos:line="49" pos:column="51"/></name></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><call><name pos:line="52" pos:column="21">DEBUG_GTE<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">FLIST<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="38">2<pos:position pos:line="52" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <block pos:line="52" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">rprintf<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">FINFO<pos:position pos:line="53" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="40">"[%s] receiving flist for dir %d\n"<pos:position pos:line="53" pos:column="75"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="54" pos:column="33">who_am_i<pos:position pos:line="54" pos:column="41"/></name><argument_list pos:line="54" pos:column="41">()<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="45">ndx<pos:position pos:line="54" pos:column="48"/></name></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="55" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="56" pos:column="17">/* Send all the data we read for this flist to the generator. */</comment>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">start_flist_forward<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">ndx<pos:position pos:line="57" pos:column="40"/></name></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="58" pos:column="17">flist<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <call><name pos:line="58" pos:column="25">recv_file_list<pos:position pos:line="58" pos:column="39"/></name><argument_list pos:line="58" pos:column="39">(<argument><expr><name pos:line="58" pos:column="40">f_in<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">ndx<pos:position pos:line="58" pos:column="49"/></name></expr></argument>)<pos:position pos:line="58" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="59" pos:column="17">flist<pos:position pos:line="59" pos:column="22"/></name><operator pos:line="59" pos:column="22">-&gt;<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="24">parent_ndx<pos:position pos:line="59" pos:column="34"/></name></name> <operator pos:line="59" pos:column="35">=<pos:position pos:line="59" pos:column="36"/></operator> <name pos:line="59" pos:column="37">ndx<pos:position pos:line="59" pos:column="40"/></name></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="60" pos:column="17">stop_flist_forward<pos:position pos:line="60" pos:column="35"/></name><argument_list pos:line="60" pos:column="35">()<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="61" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="63" pos:column="9">iflags<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <ternary><condition><expr><name pos:line="63" pos:column="18">protocol_version<pos:position pos:line="63" pos:column="34"/></name> <operator pos:line="63" pos:column="35">&gt;=<pos:position pos:line="63" pos:column="40"/></operator> <literal type="number" pos:line="63" pos:column="38">29<pos:position pos:line="63" pos:column="40"/></literal></expr> ?<pos:position pos:line="63" pos:column="42"/></condition><then pos:line="63" pos:column="42"> <expr><call><name pos:line="63" pos:column="43">read_shortint<pos:position pos:line="63" pos:column="56"/></name><argument_list pos:line="63" pos:column="56">(<argument><expr><name pos:line="63" pos:column="57">f_in<pos:position pos:line="63" pos:column="61"/></name></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call></expr>
		   <pos:position pos:line="64" pos:column="6"/></then><else pos:line="64" pos:column="20">: <expr><name pos:line="64" pos:column="22">ITEM_TRANSFER<pos:position pos:line="64" pos:column="35"/></name> <operator pos:line="64" pos:column="36">|<pos:position pos:line="64" pos:column="37"/></operator> <name pos:line="64" pos:column="38">ITEM_MISSING_DATA<pos:position pos:line="64" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>

	<comment type="block" pos:line="66" pos:column="9">/* Support the protocol-29 keep-alive style. */</comment>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">protocol_version<pos:position pos:line="67" pos:column="29"/></name> <operator pos:line="67" pos:column="30">&lt;<pos:position pos:line="67" pos:column="34"/></operator> <literal type="number" pos:line="67" pos:column="32">30<pos:position pos:line="67" pos:column="34"/></literal> <operator pos:line="67" pos:column="35">&amp;&amp;<pos:position pos:line="67" pos:column="45"/></operator> <name pos:line="67" pos:column="38">ndx<pos:position pos:line="67" pos:column="41"/></name> <operator pos:line="67" pos:column="42">==<pos:position pos:line="67" pos:column="44"/></operator> <name><name pos:line="67" pos:column="45">cur_flist<pos:position pos:line="67" pos:column="54"/></name><operator pos:line="67" pos:column="54">-&gt;<pos:position pos:line="67" pos:column="59"/></operator><name pos:line="67" pos:column="56">used<pos:position pos:line="67" pos:column="60"/></name></name> <operator pos:line="67" pos:column="61">&amp;&amp;<pos:position pos:line="67" pos:column="71"/></operator> <name pos:line="67" pos:column="64">iflags<pos:position pos:line="67" pos:column="70"/></name> <operator pos:line="67" pos:column="71">==<pos:position pos:line="67" pos:column="73"/></operator> <name pos:line="67" pos:column="74">ITEM_IS_NEW<pos:position pos:line="67" pos:column="85"/></name></expr>)<pos:position pos:line="67" pos:column="86"/></condition><then pos:line="67" pos:column="86"> <block pos:line="67" pos:column="87">{
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">am_sender<pos:position pos:line="68" pos:column="30"/></name></expr>)<pos:position pos:line="68" pos:column="31"/></condition><then pos:line="68" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">maybe_send_keepalive<pos:position pos:line="69" pos:column="45"/></name><argument_list pos:line="69" pos:column="45">(<argument><expr><call><name pos:line="69" pos:column="46">time<pos:position pos:line="69" pos:column="50"/></name><argument_list pos:line="69" pos:column="50">(<argument><expr><name pos:line="69" pos:column="51">NULL<pos:position pos:line="69" pos:column="55"/></name></expr></argument>)<pos:position pos:line="69" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="58">MSK_ALLOW_FLUSH<pos:position pos:line="69" pos:column="73"/></name></expr></argument>)<pos:position pos:line="69" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="75"/></expr_stmt></block></then></if>
		<goto pos:line="70" pos:column="17">goto <name pos:line="70" pos:column="22">read_loop<pos:position pos:line="70" pos:column="31"/></name>;<pos:position pos:line="70" pos:column="32"/></goto>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="73" pos:column="9">flist<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <call><name pos:line="73" pos:column="17">flist_for_ndx<pos:position pos:line="73" pos:column="30"/></name><argument_list pos:line="73" pos:column="30">(<argument><expr><name pos:line="73" pos:column="31">ndx<pos:position pos:line="73" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="36">"read_ndx_and_attrs"<pos:position pos:line="73" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt>
	<if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">flist<pos:position pos:line="74" pos:column="18"/></name> <operator pos:line="74" pos:column="19">!=<pos:position pos:line="74" pos:column="21"/></operator> <name pos:line="74" pos:column="22">cur_flist<pos:position pos:line="74" pos:column="31"/></name></expr>)<pos:position pos:line="74" pos:column="32"/></condition><then pos:line="74" pos:column="32"> <block pos:line="74" pos:column="33">{
		<expr_stmt><expr><name pos:line="75" pos:column="17">cur_flist<pos:position pos:line="75" pos:column="26"/></name> <operator pos:line="75" pos:column="27">=<pos:position pos:line="75" pos:column="28"/></operator> <name pos:line="75" pos:column="29">flist<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">am_sender<pos:position pos:line="76" pos:column="30"/></name></expr>)<pos:position pos:line="76" pos:column="31"/></condition><then pos:line="76" pos:column="31"> <block pos:line="76" pos:column="32">{
			<expr_stmt><expr><name pos:line="77" pos:column="25">file_old_total<pos:position pos:line="77" pos:column="39"/></name> <operator pos:line="77" pos:column="40">=<pos:position pos:line="77" pos:column="41"/></operator> <name><name pos:line="77" pos:column="42">cur_flist<pos:position pos:line="77" pos:column="51"/></name><operator pos:line="77" pos:column="51">-&gt;<pos:position pos:line="77" pos:column="56"/></operator><name pos:line="77" pos:column="53">used<pos:position pos:line="77" pos:column="57"/></name></name></expr>;<pos:position pos:line="77" pos:column="58"/></expr_stmt>
			<for pos:line="78" pos:column="25">for <control pos:line="78" pos:column="29">(<init><expr><name pos:line="78" pos:column="30">flist<pos:position pos:line="78" pos:column="35"/></name> <operator pos:line="78" pos:column="36">=<pos:position pos:line="78" pos:column="37"/></operator> <name pos:line="78" pos:column="38">first_flist<pos:position pos:line="78" pos:column="49"/></name></expr>;<pos:position pos:line="78" pos:column="50"/></init> <condition><expr><name pos:line="78" pos:column="51">flist<pos:position pos:line="78" pos:column="56"/></name> <operator pos:line="78" pos:column="57">!=<pos:position pos:line="78" pos:column="59"/></operator> <name pos:line="78" pos:column="60">cur_flist<pos:position pos:line="78" pos:column="69"/></name></expr>;<pos:position pos:line="78" pos:column="70"/></condition> <incr><expr><name pos:line="78" pos:column="71">flist<pos:position pos:line="78" pos:column="76"/></name> <operator pos:line="78" pos:column="77">=<pos:position pos:line="78" pos:column="78"/></operator> <name><name pos:line="78" pos:column="79">flist<pos:position pos:line="78" pos:column="84"/></name><operator pos:line="78" pos:column="84">-&gt;<pos:position pos:line="78" pos:column="89"/></operator><name pos:line="78" pos:column="86">next<pos:position pos:line="78" pos:column="90"/></name></name></expr></incr>)<pos:position pos:line="78" pos:column="91"/></control>
				<block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="33">file_old_total<pos:position pos:line="79" pos:column="47"/></name> <operator pos:line="79" pos:column="48">+=<pos:position pos:line="79" pos:column="50"/></operator> <name><name pos:line="79" pos:column="51">flist<pos:position pos:line="79" pos:column="56"/></name><operator pos:line="79" pos:column="56">-&gt;<pos:position pos:line="79" pos:column="61"/></operator><name pos:line="79" pos:column="58">used<pos:position pos:line="79" pos:column="62"/></name></name></expr>;<pos:position pos:line="79" pos:column="63"/></expr_stmt></block></for>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>
	}<pos:position pos:line="81" pos:column="10"/></block></then></if>

	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">iflags<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">&amp;<pos:position pos:line="83" pos:column="25"/></operator> <name pos:line="83" pos:column="22">ITEM_BASIS_TYPE_FOLLOWS<pos:position pos:line="83" pos:column="45"/></name></expr>)<pos:position pos:line="83" pos:column="46"/></condition><then pos:line="83" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="17">fnamecmp_type<pos:position pos:line="84" pos:column="30"/></name> <operator pos:line="84" pos:column="31">=<pos:position pos:line="84" pos:column="32"/></operator> <call><name pos:line="84" pos:column="33">read_byte<pos:position pos:line="84" pos:column="42"/></name><argument_list pos:line="84" pos:column="42">(<argument><expr><name pos:line="84" pos:column="43">f_in<pos:position pos:line="84" pos:column="47"/></name></expr></argument>)<pos:position pos:line="84" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="49"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="85" pos:column="9">*<pos:position pos:line="85" pos:column="10"/></operator><name pos:line="85" pos:column="10">type_ptr<pos:position pos:line="85" pos:column="18"/></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <name pos:line="85" pos:column="21">fnamecmp_type<pos:position pos:line="85" pos:column="34"/></name></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>

	<if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">iflags<pos:position pos:line="87" pos:column="19"/></name> <operator pos:line="87" pos:column="20">&amp;<pos:position pos:line="87" pos:column="25"/></operator> <name pos:line="87" pos:column="22">ITEM_XNAME_FOLLOWS<pos:position pos:line="87" pos:column="40"/></name></expr>)<pos:position pos:line="87" pos:column="41"/></condition><then pos:line="87" pos:column="41"> <block pos:line="87" pos:column="42">{
		<if pos:line="88" pos:column="17">if <condition pos:line="88" pos:column="20">(<expr><operator pos:line="88" pos:column="21">(<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="22">len<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <call><name pos:line="88" pos:column="28">read_vstring<pos:position pos:line="88" pos:column="40"/></name><argument_list pos:line="88" pos:column="40">(<argument><expr><name pos:line="88" pos:column="41">f_in<pos:position pos:line="88" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="47">buf<pos:position pos:line="88" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="52">MAXPATHLEN<pos:position pos:line="88" pos:column="62"/></name></expr></argument>)<pos:position pos:line="88" pos:column="63"/></argument_list></call><operator pos:line="88" pos:column="63">)<pos:position pos:line="88" pos:column="64"/></operator> <operator pos:line="88" pos:column="65">&lt;<pos:position pos:line="88" pos:column="69"/></operator> <literal type="number" pos:line="88" pos:column="67">0<pos:position pos:line="88" pos:column="68"/></literal></expr>)<pos:position pos:line="88" pos:column="69"/></condition><then pos:line="88" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="25">exit_cleanup<pos:position pos:line="89" pos:column="37"/></name><argument_list pos:line="89" pos:column="37">(<argument><expr><name pos:line="89" pos:column="38">RERR_PROTOCOL<pos:position pos:line="89" pos:column="51"/></name></expr></argument>)<pos:position pos:line="89" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="90" pos:column="10"/></block></then> <else pos:line="90" pos:column="11">else <block pos:line="90" pos:column="16">{
		<expr_stmt><expr><operator pos:line="91" pos:column="17">*<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">buf<pos:position pos:line="91" pos:column="21"/></name> <operator pos:line="91" pos:column="22">=<pos:position pos:line="91" pos:column="23"/></operator> <literal type="char" pos:line="91" pos:column="24">'\0'<pos:position pos:line="91" pos:column="28"/></literal></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="92" pos:column="17">len<pos:position pos:line="92" pos:column="20"/></name> <operator pos:line="92" pos:column="21">=<pos:position pos:line="92" pos:column="22"/></operator> <operator pos:line="92" pos:column="23">-<pos:position pos:line="92" pos:column="24"/></operator><literal type="number" pos:line="92" pos:column="24">1<pos:position pos:line="92" pos:column="25"/></literal></expr>;<pos:position pos:line="92" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="93" pos:column="10"/></block></else></if>
	<expr_stmt><expr><operator pos:line="94" pos:column="9">*<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">len_ptr<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">=<pos:position pos:line="94" pos:column="19"/></operator> <name pos:line="94" pos:column="20">len<pos:position pos:line="94" pos:column="23"/></name></expr>;<pos:position pos:line="94" pos:column="24"/></expr_stmt>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">iflags<pos:position pos:line="96" pos:column="19"/></name> <operator pos:line="96" pos:column="20">&amp;<pos:position pos:line="96" pos:column="25"/></operator> <name pos:line="96" pos:column="22">ITEM_TRANSFER<pos:position pos:line="96" pos:column="35"/></name></expr>)<pos:position pos:line="96" pos:column="36"/></condition><then pos:line="96" pos:column="36"> <block pos:line="96" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="97" pos:column="17">int<pos:position pos:line="97" pos:column="20"/></name></type> <name pos:line="97" pos:column="21">i<pos:position pos:line="97" pos:column="22"/></name> <init pos:line="97" pos:column="23">= <expr><name pos:line="97" pos:column="25">ndx<pos:position pos:line="97" pos:column="28"/></name> <operator pos:line="97" pos:column="29">-<pos:position pos:line="97" pos:column="30"/></operator> <name><name pos:line="97" pos:column="31">cur_flist<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">-&gt;<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="42">ndx_start<pos:position pos:line="97" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="97" pos:column="52"/></decl_stmt>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">i<pos:position pos:line="98" pos:column="22"/></name> <operator pos:line="98" pos:column="23">&lt;<pos:position pos:line="98" pos:column="27"/></operator> <literal type="number" pos:line="98" pos:column="25">0<pos:position pos:line="98" pos:column="26"/></literal> <operator pos:line="98" pos:column="27">||<pos:position pos:line="98" pos:column="29"/></operator> <operator pos:line="98" pos:column="30">!<pos:position pos:line="98" pos:column="31"/></operator><call><name pos:line="98" pos:column="31">S_ISREG<pos:position pos:line="98" pos:column="38"/></name><argument_list pos:line="98" pos:column="38">(<argument><expr><name><name pos:line="98" pos:column="39">cur_flist<pos:position pos:line="98" pos:column="48"/></name><operator pos:line="98" pos:column="48">-&gt;<pos:position pos:line="98" pos:column="53"/></operator><name pos:line="98" pos:column="50">files<pos:position pos:line="98" pos:column="55"/></name><index pos:line="98" pos:column="55">[<expr><name pos:line="98" pos:column="56">i<pos:position pos:line="98" pos:column="57"/></name></expr>]<pos:position pos:line="98" pos:column="58"/></index></name><operator pos:line="98" pos:column="58">-&gt;<pos:position pos:line="98" pos:column="63"/></operator><name pos:line="98" pos:column="60">mode<pos:position pos:line="98" pos:column="64"/></name></expr></argument>)<pos:position pos:line="98" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="66"/></condition><then pos:line="98" pos:column="66"> <block pos:line="98" pos:column="67">{
			<expr_stmt><expr><call><name pos:line="99" pos:column="25">rprintf<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name pos:line="99" pos:column="33">FERROR<pos:position pos:line="99" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="100" pos:column="33">"received request to transfer non-regular file: %d [%s]\n"<pos:position pos:line="100" pos:column="91"/></literal></expr></argument>,
				<argument><expr><name pos:line="101" pos:column="33">ndx<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="38">who_am_i<pos:position pos:line="101" pos:column="46"/></name><argument_list pos:line="101" pos:column="46">()<pos:position pos:line="101" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="102" pos:column="25">exit_cleanup<pos:position pos:line="102" pos:column="37"/></name><argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">RERR_PROTOCOL<pos:position pos:line="102" pos:column="51"/></name></expr></argument>)<pos:position pos:line="102" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="103" pos:column="18"/></block></then></if>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="106" pos:column="9">*<pos:position pos:line="106" pos:column="10"/></operator><name pos:line="106" pos:column="10">iflag_ptr<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <name pos:line="106" pos:column="22">iflags<pos:position pos:line="106" pos:column="28"/></name></expr>;<pos:position pos:line="106" pos:column="29"/></expr_stmt>
	<return pos:line="107" pos:column="9">return <expr><name pos:line="107" pos:column="16">ndx<pos:position pos:line="107" pos:column="19"/></name></expr>;<pos:position pos:line="107" pos:column="20"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

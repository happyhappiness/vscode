<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_137_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int32<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">raw_read_int<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">data<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="21">buf<pos:position pos:line="3" pos:column="24"/></name><index pos:line="3" pos:column="24">[<expr><literal type="number" pos:line="3" pos:column="25">4<pos:position pos:line="3" pos:column="26"/></literal></expr>]<pos:position pos:line="3" pos:column="27"/></index></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">iobuf<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">.<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">in<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">size<pos:position pos:line="4" pos:column="26"/></name></name> <operator pos:line="4" pos:column="27">-<pos:position pos:line="4" pos:column="28"/></operator> <name><name pos:line="4" pos:column="29">iobuf<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">in<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">.<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">pos<pos:position pos:line="4" pos:column="41"/></name></name> <operator pos:line="4" pos:column="42">&gt;=<pos:position pos:line="4" pos:column="47"/></operator> <literal type="number" pos:line="4" pos:column="45">4<pos:position pos:line="4" pos:column="46"/></literal></expr>)<pos:position pos:line="4" pos:column="47"/></condition><then pos:line="4" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="17">data<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <call><name pos:line="5" pos:column="24">perform_io<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><literal type="number" pos:line="5" pos:column="35">4<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">PIO_INPUT_AND_CONSUME<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt></block></then>
	<else pos:line="6" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">raw_read_buf<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">data<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">=<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="37">buf<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="42">4<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt></block></else></if>
	<return pos:line="8" pos:column="9">return <expr><call><name pos:line="8" pos:column="16">IVAL<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">data<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

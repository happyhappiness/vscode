<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_792.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">auth_server<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">f_in<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">f_out<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">module<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">host<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">addr<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">leader<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">users<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name pos:line="4" pos:column="23">lp_auth_users<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">module<pos:position pos:line="4" pos:column="43"/></name></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">challenge<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">MD4_SUM_LENGTH<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></operator><literal type="number" pos:line="5" pos:column="39">2<pos:position pos:line="5" pos:column="40"/></literal></expr>]<pos:position pos:line="5" pos:column="41"/></index></name></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">line<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">MAXPATHLEN<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">secret<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><literal type="number" pos:line="7" pos:column="21">512<pos:position pos:line="7" pos:column="24"/></literal></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">pass2<pos:position pos:line="8" pos:column="19"/></name><index pos:line="8" pos:column="19">[<expr><name pos:line="8" pos:column="20">MD4_SUM_LENGTH<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">*<pos:position pos:line="8" pos:column="35"/></operator><literal type="number" pos:line="8" pos:column="35">2<pos:position pos:line="8" pos:column="36"/></literal></expr>]<pos:position pos:line="8" pos:column="37"/></index></name></decl>;<pos:position pos:line="8" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">tok<pos:position pos:line="9" pos:column="18"/></name></decl>, <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="21">pass<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

	<comment type="block" pos:line="11" pos:column="9">/* if no auth list then allow anyone in! */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">users<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">||<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">!<pos:position pos:line="12" pos:column="24"/></operator><operator pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">users<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
		<block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="string" pos:line="13" pos:column="24">""<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">gen_challenge<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">addr<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="29">challenge<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">io_printf<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">f_out<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="26">"%s%s\n"<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">leader<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">challenge<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">read_line<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">f_in<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">line<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="36">sizeof <name pos:line="19" pos:column="43">line<pos:position pos:line="19" pos:column="47"/></name></sizeof> <operator pos:line="19" pos:column="48">-<pos:position pos:line="19" pos:column="49"/></operator> <literal type="number" pos:line="19" pos:column="50">1<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call>
	 <operator pos:line="20" pos:column="10">||<pos:position pos:line="20" pos:column="12"/></operator> <operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">pass<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">strchr<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><name pos:line="20" pos:column="28">line<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="34">' '<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call><operator pos:line="20" pos:column="38">)<pos:position pos:line="20" pos:column="39"/></operator> <operator pos:line="20" pos:column="40">==<pos:position pos:line="20" pos:column="42"/></operator> <name pos:line="20" pos:column="43">NULL<pos:position pos:line="20" pos:column="47"/></name></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48"> <block pos:line="20" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">rprintf<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">FLOG<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"auth failed on module %s from %s (%s): "<pos:position pos:line="21" pos:column="72"/></literal>
			<literal type="string" pos:line="22" pos:column="25">"invalid challenge response\n"<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="23" pos:column="25">lp_name<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">module<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">host<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">addr<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
		<return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></return>
	}<pos:position pos:line="25" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">pass<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">++<pos:position pos:line="26" pos:column="16"/></operator> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="char" pos:line="26" pos:column="19">'\0'<pos:position pos:line="26" pos:column="23"/></literal></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">users<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name pos:line="28" pos:column="23">strdup<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">users<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">out_of_memory<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><literal type="string" pos:line="29" pos:column="31">"auth_server"<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="46"/></expr_stmt></block></then></if>

	<for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">tok<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <call><name pos:line="31" pos:column="20">strtok<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">users<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="34">" ,\t"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></init> <condition><expr><name pos:line="31" pos:column="43">tok<pos:position pos:line="31" pos:column="46"/></name></expr>;<pos:position pos:line="31" pos:column="47"/></condition> <incr><expr><name pos:line="31" pos:column="48">tok<pos:position pos:line="31" pos:column="51"/></name> <operator pos:line="31" pos:column="52">=<pos:position pos:line="31" pos:column="53"/></operator> <call><name pos:line="31" pos:column="54">strtok<pos:position pos:line="31" pos:column="60"/></name><argument_list pos:line="31" pos:column="60">(<argument><expr><name pos:line="31" pos:column="61">NULL<pos:position pos:line="31" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="67">" ,\t"<pos:position pos:line="31" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr></incr>)<pos:position pos:line="31" pos:column="75"/></control> <block pos:line="31" pos:column="76">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><call><name pos:line="32" pos:column="21">wildmatch<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">tok<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">line<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="42"/></condition><then pos:line="32" pos:column="42">
			<block type="pseudo"><break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">free<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">users<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">tok<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18"> <block pos:line="37" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">rprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">FLOG<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="31">"auth failed on module %s from %s (%s): "<pos:position pos:line="38" pos:column="72"/></literal>
			<literal type="string" pos:line="39" pos:column="25">"unauthorized user\n"<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="40" pos:column="25">lp_name<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">module<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">host<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">addr<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">NULL<pos:position pos:line="41" pos:column="28"/></name></expr>;<pos:position pos:line="41" pos:column="29"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">memset<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">secret<pos:position pos:line="44" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="27">sizeof <name pos:line="44" pos:column="34">secret<pos:position pos:line="44" pos:column="40"/></name></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><call><name pos:line="45" pos:column="14">get_secret<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">module<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">line<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">secret<pos:position pos:line="45" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="47">sizeof <name pos:line="45" pos:column="54">secret<pos:position pos:line="45" pos:column="60"/></name></sizeof> <operator pos:line="45" pos:column="61">-<pos:position pos:line="45" pos:column="62"/></operator> <literal type="number" pos:line="45" pos:column="63">1<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="66"/></condition><then pos:line="45" pos:column="66"> <block pos:line="45" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">memset<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">secret<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="32">0<pos:position pos:line="46" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="35">sizeof <name pos:line="46" pos:column="42">secret<pos:position pos:line="46" pos:column="48"/></name></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">rprintf<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">FLOG<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="31">"auth failed on module %s from %s (%s): "<pos:position pos:line="47" pos:column="72"/></literal>
			<literal type="string" pos:line="48" pos:column="25">"missing secret for user \"%s\"\n"<pos:position pos:line="48" pos:column="59"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="49" pos:column="25">lp_name<pos:position pos:line="49" pos:column="32"/></name><argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">module<pos:position pos:line="49" pos:column="39"/></name></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">host<pos:position pos:line="49" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">addr<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">line<pos:position pos:line="49" pos:column="58"/></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><name pos:line="50" pos:column="24">NULL<pos:position pos:line="50" pos:column="28"/></name></expr>;<pos:position pos:line="50" pos:column="29"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="53" pos:column="9">generate_hash<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">secret<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="31">challenge<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="42">pass2<pos:position pos:line="53" pos:column="47"/></name></expr></argument>)<pos:position pos:line="53" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">memset<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">secret<pos:position pos:line="54" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="24">0<pos:position pos:line="54" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="27">sizeof <name pos:line="54" pos:column="34">secret<pos:position pos:line="54" pos:column="40"/></name></sizeof></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">strcmp<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">pass<pos:position pos:line="56" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="26">pass2<pos:position pos:line="56" pos:column="31"/></name></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call> <operator pos:line="56" pos:column="33">!=<pos:position pos:line="56" pos:column="35"/></operator> <literal type="number" pos:line="56" pos:column="36">0<pos:position pos:line="56" pos:column="37"/></literal></expr>)<pos:position pos:line="56" pos:column="38"/></condition><then pos:line="56" pos:column="38"> <block pos:line="56" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">rprintf<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">FLOG<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="31">"auth failed on module %s from %s (%s): "<pos:position pos:line="57" pos:column="72"/></literal>
			<literal type="string" pos:line="58" pos:column="25">"password mismatch\n"<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="59" pos:column="25">lp_name<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">module<pos:position pos:line="59" pos:column="39"/></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">host<pos:position pos:line="59" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">addr<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>
		<return pos:line="60" pos:column="17">return <expr><name pos:line="60" pos:column="24">NULL<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></return>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>

	<return pos:line="63" pos:column="9">return <expr><call><name pos:line="63" pos:column="16">strdup<pos:position pos:line="63" pos:column="22"/></name><argument_list pos:line="63" pos:column="22">(<argument><expr><name pos:line="63" pos:column="23">line<pos:position pos:line="63" pos:column="27"/></name></expr></argument>)<pos:position pos:line="63" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="29"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

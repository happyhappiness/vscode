<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_912_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name><name pos:line="1" pos:column="14">struct<pos:position pos:line="1" pos:column="20"/></name> <name pos:line="1" pos:column="21">poptOption<pos:position pos:line="1" pos:column="31"/></name></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type>
<name pos:line="2" pos:column="1">findOption<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">poptOption<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type> <name pos:line="2" pos:column="38">opt<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <comment type="block" pos:line="2" pos:column="43">/*@null@*/</comment> <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type> <name pos:line="2" pos:column="67">longName<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">char<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">shortName<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>,
		<comment type="block" pos:line="4" pos:column="17">/*@null@*/</comment> <comment type="block" pos:line="4" pos:column="28">/*@out@*/</comment> <parameter><decl><type><name pos:line="4" pos:column="38">poptCallbackType<pos:position pos:line="4" pos:column="54"/></name> <modifier pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></modifier></type> <name pos:line="4" pos:column="57">callback<pos:position pos:line="4" pos:column="65"/></name></decl></parameter>,
		<comment type="block" pos:line="5" pos:column="17">/*@null@*/</comment> <comment type="block" pos:line="5" pos:column="28">/*@out@*/</comment> <parameter><decl><type><specifier pos:line="5" pos:column="38">const<pos:position pos:line="5" pos:column="43"/></specifier> <name pos:line="5" pos:column="44">void<pos:position pos:line="5" pos:column="48"/></name> <modifier pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></modifier><modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type> <name pos:line="5" pos:column="52">callbackData<pos:position pos:line="5" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="6" pos:column="17">int<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">singleDash<pos:position pos:line="6" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="32"/></parameter_list>
	<comment type="block" pos:line="7" pos:column="9">/*@modifies *callback, *callbackData */</comment>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name><name pos:line="9" pos:column="11">struct<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">poptOption<pos:position pos:line="9" pos:column="28"/></name></name> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier></type> <name pos:line="9" pos:column="31">cb<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name pos:line="9" pos:column="36">NULL<pos:position pos:line="9" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* This happens when a single - is given */</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">singleDash<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">&amp;&amp;<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="23">!<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">shortName<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">&amp;&amp;<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="37">(<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">longName<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">&amp;&amp;<pos:position pos:line="12" pos:column="57"/></operator> <operator pos:line="12" pos:column="50">*<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">longName<pos:position pos:line="12" pos:column="59"/></name> <operator pos:line="12" pos:column="60">==<pos:position pos:line="12" pos:column="62"/></operator> <literal type="char" pos:line="12" pos:column="63">'\0'<pos:position pos:line="12" pos:column="67"/></literal><operator pos:line="12" pos:column="67">)<pos:position pos:line="12" pos:column="68"/></operator></expr>)<pos:position pos:line="12" pos:column="69"/></condition><then pos:line="12" pos:column="69">
	<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">shortName<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="char" pos:line="13" pos:column="21">'-'<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt></block></then></if>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init pos:line="15" pos:column="10">;<pos:position pos:line="15" pos:column="11"/></init> <condition><expr><name><name pos:line="15" pos:column="12">opt<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">longName<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">||<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="29">opt<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">shortName<pos:position pos:line="15" pos:column="43"/></name></name> <operator pos:line="15" pos:column="44">||<pos:position pos:line="15" pos:column="46"/></operator> <name><name pos:line="15" pos:column="47">opt<pos:position pos:line="15" pos:column="50"/></name><operator pos:line="15" pos:column="50">-&gt;<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="52">arg<pos:position pos:line="15" pos:column="55"/></name></name></expr>;<pos:position pos:line="15" pos:column="56"/></condition> <incr><expr><name pos:line="15" pos:column="57">opt<pos:position pos:line="15" pos:column="60"/></name><operator pos:line="15" pos:column="60">++<pos:position pos:line="15" pos:column="62"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="63"/></control> <block pos:line="15" pos:column="64">{

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">opt<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">argInfo<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="29">POPT_ARG_MASK<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">)<pos:position pos:line="17" pos:column="43"/></operator> <operator pos:line="17" pos:column="44">==<pos:position pos:line="17" pos:column="46"/></operator> <name pos:line="17" pos:column="47">POPT_ARG_INCLUDE_TABLE<pos:position pos:line="17" pos:column="69"/></name></expr>)<pos:position pos:line="17" pos:column="70"/></condition><then pos:line="17" pos:column="70"> <block pos:line="17" pos:column="71">{
	    <decl_stmt><decl><type><specifier pos:line="18" pos:column="13">const<pos:position pos:line="18" pos:column="18"/></specifier> <name><name pos:line="18" pos:column="19">struct<pos:position pos:line="18" pos:column="25"/></name> <name pos:line="18" pos:column="26">poptOption<pos:position pos:line="18" pos:column="36"/></name></name> <modifier pos:line="18" pos:column="37">*<pos:position pos:line="18" pos:column="38"/></modifier></type> <name pos:line="18" pos:column="39">opt2<pos:position pos:line="18" pos:column="43"/></name></decl>;<pos:position pos:line="18" pos:column="44"/></decl_stmt>
	    <decl_stmt><decl><type><name pos:line="19" pos:column="13">void<pos:position pos:line="19" pos:column="17"/></name> <modifier pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></modifier></type> <name pos:line="19" pos:column="20">arg<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><name><name pos:line="19" pos:column="26">opt<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">arg<pos:position pos:line="19" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>

<comment type="block" pos:line="21" pos:column="1">/*@-branchstate@*/</comment>
	    <comment type="block" pos:line="22" pos:column="13">/* XXX sick hack to preserve pretense of ABI. */</comment>
	    <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">arg<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">poptHelpOptions<pos:position pos:line="23" pos:column="39"/></name></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="41">arg<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">=<pos:position pos:line="23" pos:column="46"/></operator> <name pos:line="23" pos:column="47">poptHelpOptionsI18N<pos:position pos:line="23" pos:column="66"/></name></expr>;<pos:position pos:line="23" pos:column="67"/></expr_stmt></block></then></if>
<comment type="block" pos:line="24" pos:column="1">/*@=branchstate@*/</comment>
	    <comment type="block" pos:line="25" pos:column="13">/* Recurse on included sub-tables. */</comment>
	    <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">arg<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">==<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <block type="pseudo"><continue pos:line="26" pos:column="30">continue;<pos:position pos:line="26" pos:column="39"/></continue></block></then></if>	<comment type="block" pos:line="26" pos:column="41">/* XXX program error */</comment>
	    <expr_stmt><expr><name pos:line="27" pos:column="13">opt2<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <call><name pos:line="27" pos:column="20">findOption<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><name pos:line="27" pos:column="31">arg<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">longName<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">shortName<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">callback<pos:position pos:line="27" pos:column="65"/></name></expr></argument>,
			      <argument><expr><name pos:line="28" pos:column="31">callbackData<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">singleDash<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>
	    <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">opt2<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">==<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">NULL<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30"> <block type="pseudo"><continue pos:line="29" pos:column="31">continue;<pos:position pos:line="29" pos:column="40"/></continue></block></then></if>
	    <comment type="block" pos:line="30" pos:column="13">/* Sub-table data will be inheirited if no data yet. */</comment>
	    <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><operator pos:line="31" pos:column="17">!<pos:position pos:line="31" pos:column="18"/></operator><operator pos:line="31" pos:column="18">(<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">callback<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">&amp;&amp;<pos:position pos:line="31" pos:column="38"/></operator> <operator pos:line="31" pos:column="31">*<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="32">callback<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">)<pos:position pos:line="31" pos:column="41"/></operator></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42"> <block type="pseudo"><return pos:line="31" pos:column="43">return <expr><name pos:line="31" pos:column="50">opt2<pos:position pos:line="31" pos:column="54"/></name></expr>;<pos:position pos:line="31" pos:column="55"/></return></block></then></if>
	    <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">!<pos:position pos:line="32" pos:column="18"/></operator><operator pos:line="32" pos:column="18">(<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">callbackData<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">&amp;&amp;<pos:position pos:line="32" pos:column="42"/></operator> <operator pos:line="32" pos:column="35">*<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">callbackData<pos:position pos:line="32" pos:column="48"/></name> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <name pos:line="32" pos:column="52">NULL<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">)<pos:position pos:line="32" pos:column="57"/></operator></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58"> <block type="pseudo"><return pos:line="32" pos:column="59">return <expr><name pos:line="32" pos:column="66">opt2<pos:position pos:line="32" pos:column="70"/></name></expr>;<pos:position pos:line="32" pos:column="71"/></return></block></then></if>
	    <comment type="block" pos:line="33" pos:column="13">/*@-observertrans -dependenttrans @*/</comment>
	    <expr_stmt><expr><operator pos:line="34" pos:column="13">*<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">callbackData<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <name><name pos:line="34" pos:column="29">opt<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="34">descrip<pos:position pos:line="34" pos:column="41"/></name></name></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
	    <comment type="block" pos:line="35" pos:column="13">/*@=observertrans =dependenttrans @*/</comment>
	    <return pos:line="36" pos:column="13">return <expr><name pos:line="36" pos:column="20">opt2<pos:position pos:line="36" pos:column="24"/></name></expr>;<pos:position pos:line="36" pos:column="25"/></return>
	}<pos:position pos:line="37" pos:column="10"/></block></then> <elseif pos:line="37" pos:column="11">else <if pos:line="37" pos:column="16">if <condition pos:line="37" pos:column="19">(<expr><operator pos:line="37" pos:column="20">(<pos:position pos:line="37" pos:column="21"/></operator><name><name pos:line="37" pos:column="21">opt<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">-&gt;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="26">argInfo<pos:position pos:line="37" pos:column="33"/></name></name> <operator pos:line="37" pos:column="34">&amp;<pos:position pos:line="37" pos:column="39"/></operator> <name pos:line="37" pos:column="36">POPT_ARG_MASK<pos:position pos:line="37" pos:column="49"/></name><operator pos:line="37" pos:column="49">)<pos:position pos:line="37" pos:column="50"/></operator> <operator pos:line="37" pos:column="51">==<pos:position pos:line="37" pos:column="53"/></operator> <name pos:line="37" pos:column="54">POPT_ARG_CALLBACK<pos:position pos:line="37" pos:column="71"/></name></expr>)<pos:position pos:line="37" pos:column="72"/></condition><then pos:line="37" pos:column="72"> <block pos:line="37" pos:column="73">{
	    <expr_stmt><expr><name pos:line="38" pos:column="13">cb<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">opt<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif> <elseif pos:line="39" pos:column="11">else <if pos:line="39" pos:column="16">if <condition pos:line="39" pos:column="19">(<expr><name pos:line="39" pos:column="20">longName<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">&amp;&amp;<pos:position pos:line="39" pos:column="39"/></operator> <name><name pos:line="39" pos:column="32">opt<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">longName<pos:position pos:line="39" pos:column="45"/></name></name> <operator pos:line="39" pos:column="46">&amp;&amp;<pos:position pos:line="39" pos:column="56"/></operator>
		   <operator pos:line="40" pos:column="20">(<pos:position pos:line="40" pos:column="21"/></operator><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">singleDash<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">||<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">(<pos:position pos:line="40" pos:column="37"/></operator><name><name pos:line="40" pos:column="37">opt<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">argInfo<pos:position pos:line="40" pos:column="49"/></name></name> <operator pos:line="40" pos:column="50">&amp;<pos:position pos:line="40" pos:column="55"/></operator> <name pos:line="40" pos:column="52">POPT_ARGFLAG_ONEDASH<pos:position pos:line="40" pos:column="72"/></name><operator pos:line="40" pos:column="72">)<pos:position pos:line="40" pos:column="73"/></operator><operator pos:line="40" pos:column="73">)<pos:position pos:line="40" pos:column="74"/></operator> <operator pos:line="40" pos:column="75">&amp;&amp;<pos:position pos:line="40" pos:column="85"/></operator>
		<comment type="block" pos:line="41" pos:column="17">/*@-nullpass@*/</comment>		<comment type="block" pos:line="41" pos:column="41">/* LCL: opt-&gt;longName != NULL */</comment>
		   <operator pos:line="42" pos:column="20">!<pos:position pos:line="42" pos:column="21"/></operator><call><name pos:line="42" pos:column="21">strcmp<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">longName<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="38">opt<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">-&gt;<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="43">longName<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53">
		<comment type="block" pos:line="43" pos:column="17">/*@=nullpass@*/</comment>
	<block pos:line="44" pos:column="9">{
	    <break pos:line="45" pos:column="13">break;<pos:position pos:line="45" pos:column="19"/></break>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif> <elseif pos:line="46" pos:column="11">else <if pos:line="46" pos:column="16">if <condition pos:line="46" pos:column="19">(<expr><name pos:line="46" pos:column="20">shortName<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">&amp;&amp;<pos:position pos:line="46" pos:column="40"/></operator> <name pos:line="46" pos:column="33">shortName<pos:position pos:line="46" pos:column="42"/></name> <operator pos:line="46" pos:column="43">==<pos:position pos:line="46" pos:column="45"/></operator> <name><name pos:line="46" pos:column="46">opt<pos:position pos:line="46" pos:column="49"/></name><operator pos:line="46" pos:column="49">-&gt;<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="51">shortName<pos:position pos:line="46" pos:column="60"/></name></name></expr>)<pos:position pos:line="46" pos:column="61"/></condition><then pos:line="46" pos:column="61"> <block pos:line="46" pos:column="62">{
	    <break pos:line="47" pos:column="13">break;<pos:position pos:line="47" pos:column="19"/></break>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="49" pos:column="6"/></block></for>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><name><name pos:line="51" pos:column="10">opt<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">-&gt;<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="15">longName<pos:position pos:line="51" pos:column="23"/></name></name> <operator pos:line="51" pos:column="24">&amp;&amp;<pos:position pos:line="51" pos:column="34"/></operator> <operator pos:line="51" pos:column="27">!<pos:position pos:line="51" pos:column="28"/></operator><name><name pos:line="51" pos:column="28">opt<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">shortName<pos:position pos:line="51" pos:column="42"/></name></name></expr>)<pos:position pos:line="51" pos:column="43"/></condition><then pos:line="51" pos:column="43">
	<block type="pseudo"><return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">NULL<pos:position pos:line="52" pos:column="20"/></name></expr>;<pos:position pos:line="52" pos:column="21"/></return></block></then></if>
    <comment type="block" pos:line="53" pos:column="5">/*@-modobserver -mods @*/</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">callback<pos:position pos:line="54" pos:column="17"/></name></expr>)<pos:position pos:line="54" pos:column="18"/></condition><then pos:line="54" pos:column="18"> <block type="pseudo"><expr_stmt><expr><operator pos:line="54" pos:column="19">*<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">callback<pos:position pos:line="54" pos:column="28"/></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <name pos:line="54" pos:column="31">NULL<pos:position pos:line="54" pos:column="35"/></name></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt></block></then></if>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">callbackData<pos:position pos:line="55" pos:column="21"/></name></expr>)<pos:position pos:line="55" pos:column="22"/></condition><then pos:line="55" pos:column="22"> <block type="pseudo"><expr_stmt><expr><operator pos:line="55" pos:column="23">*<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="24">callbackData<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">=<pos:position pos:line="55" pos:column="38"/></operator> <name pos:line="55" pos:column="39">NULL<pos:position pos:line="55" pos:column="43"/></name></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">cb<pos:position pos:line="56" pos:column="11"/></name></expr>)<pos:position pos:line="56" pos:column="12"/></condition><then pos:line="56" pos:column="12"> <block pos:line="56" pos:column="13">{
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">callback<pos:position pos:line="57" pos:column="21"/></name></expr>)<pos:position pos:line="57" pos:column="22"/></condition><then pos:line="57" pos:column="22">
	<comment type="block" pos:line="58" pos:column="9">/*@-castfcnptr@*/</comment>
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="59" pos:column="13">*<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="14">callback<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <operator pos:line="59" pos:column="25">(<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">poptCallbackType<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">)<pos:position pos:line="59" pos:column="43"/></operator><name><name pos:line="59" pos:column="43">cb<pos:position pos:line="59" pos:column="45"/></name><operator pos:line="59" pos:column="45">-&gt;<pos:position pos:line="59" pos:column="50"/></operator><name pos:line="59" pos:column="47">arg<pos:position pos:line="59" pos:column="50"/></name></name></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt></block></then></if>
	<comment type="block" pos:line="60" pos:column="9">/*@=castfcnptr@*/</comment>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><operator pos:line="61" pos:column="14">(<pos:position pos:line="61" pos:column="15"/></operator><name><name pos:line="61" pos:column="15">cb<pos:position pos:line="61" pos:column="17"/></name><operator pos:line="61" pos:column="17">-&gt;<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="19">argInfo<pos:position pos:line="61" pos:column="26"/></name></name> <operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="29">POPT_CBFLAG_INC_DATA<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">)<pos:position pos:line="61" pos:column="50"/></operator></expr>)<pos:position pos:line="61" pos:column="51"/></condition><then pos:line="61" pos:column="51"> <block pos:line="61" pos:column="52">{
	    <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><name pos:line="62" pos:column="17">callbackData<pos:position pos:line="62" pos:column="29"/></name></expr>)<pos:position pos:line="62" pos:column="30"/></condition><then pos:line="62" pos:column="30">
		<comment type="block" pos:line="63" pos:column="17">/*@-observertrans@*/</comment>	<comment type="block" pos:line="63" pos:column="41">/* FIX: typedef double indirection. */</comment>
		<block type="pseudo"><expr_stmt><expr><operator pos:line="64" pos:column="17">*<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">callbackData<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">=<pos:position pos:line="64" pos:column="32"/></operator> <name><name pos:line="64" pos:column="33">cb<pos:position pos:line="64" pos:column="35"/></name><operator pos:line="64" pos:column="35">-&gt;<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="37">descrip<pos:position pos:line="64" pos:column="44"/></name></name></expr>;<pos:position pos:line="64" pos:column="45"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="65" pos:column="17">/*@=observertrans@*/</comment>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="68" pos:column="5">/*@=modobserver =mods @*/</comment>

    <return pos:line="70" pos:column="5">return <expr><name pos:line="70" pos:column="12">opt<pos:position pos:line="70" pos:column="15"/></name></expr>;<pos:position pos:line="70" pos:column="16"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

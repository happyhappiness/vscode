<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_96_rsync-2.0.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_a_socket<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">fd<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">v<pos:position pos:line="3" pos:column="8"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="9">l<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">l<pos:position pos:line="4" pos:column="4"/></name> <operator pos:line="4" pos:column="5">=<pos:position pos:line="4" pos:column="6"/></operator> <sizeof pos:line="4" pos:column="7">sizeof<argument_list pos:line="4" pos:column="13">(<argument><expr><name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></sizeof></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
  <return pos:line="5" pos:column="3">return<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><call><name pos:line="5" pos:column="10">getsockopt<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">fd<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">SOL_SOCKET<pos:position pos:line="5" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="37">SO_TYPE<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="46">(<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">char<pos:position pos:line="5" pos:column="51"/></name> <operator pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></operator><operator pos:line="5" pos:column="53">)<pos:position pos:line="5" pos:column="54"/></operator><operator pos:line="5" pos:column="54">&amp;<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="55">v<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="58">&amp;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="59">l<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call> <operator pos:line="5" pos:column="62">==<pos:position pos:line="5" pos:column="64"/></operator> <literal type="number" pos:line="5" pos:column="65">0<pos:position pos:line="5" pos:column="66"/></literal><operator pos:line="5" pos:column="66">)<pos:position pos:line="5" pos:column="67"/></operator></expr>;<pos:position pos:line="5" pos:column="68"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_612_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">ZLIB_INTERNAL<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">_tr_stored_block<pos:position pos:line="1" pos:column="36"/></name><argument_list pos:line="1" pos:column="36">(<argument><expr><name pos:line="1" pos:column="37">s<pos:position pos:line="1" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="40">buf<pos:position pos:line="1" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="45">stored_len<pos:position pos:line="1" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="57">last<pos:position pos:line="1" pos:column="61"/></name></expr></argument>)<pos:position pos:line="1" pos:column="62"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">charf<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">buf<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>       <comment type="block" pos:line="3" pos:column="23">/* input block */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ulg<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">stored_len<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>   <comment type="block" pos:line="4" pos:column="23">/* length of input block */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">last<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>         <comment type="block" pos:line="5" pos:column="23">/* one if this is the last block for a file */</comment>
<block pos:line="6" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">send_bits<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">s<pos:position pos:line="7" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">STORED_BLOCK<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">&lt;&lt;<pos:position pos:line="7" pos:column="39"/></operator><literal type="number" pos:line="7" pos:column="33">1<pos:position pos:line="7" pos:column="34"/></literal><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator><operator pos:line="7" pos:column="35">+<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">last<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="42">3<pos:position pos:line="7" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>    <comment type="block" pos:line="7" pos:column="49">/* send block type */</comment>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">DEBUG<pos:position pos:line="8" pos:column="13"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">s<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">compressed_len<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">(<pos:position pos:line="9" pos:column="26"/></operator><name><name pos:line="9" pos:column="26">s<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">compressed_len<pos:position pos:line="9" pos:column="43"/></name></name> <operator pos:line="9" pos:column="44">+<pos:position pos:line="9" pos:column="45"/></operator> <literal type="number" pos:line="9" pos:column="46">3<pos:position pos:line="9" pos:column="47"/></literal> <operator pos:line="9" pos:column="48">+<pos:position pos:line="9" pos:column="49"/></operator> <literal type="number" pos:line="9" pos:column="50">7<pos:position pos:line="9" pos:column="51"/></literal><operator pos:line="9" pos:column="51">)<pos:position pos:line="9" pos:column="52"/></operator> <operator pos:line="9" pos:column="53">&amp;<pos:position pos:line="9" pos:column="58"/></operator> <operator pos:line="9" pos:column="55">(<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="56">ulg<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">)<pos:position pos:line="9" pos:column="60"/></operator><operator pos:line="9" pos:column="60">~<pos:position pos:line="9" pos:column="61"/></operator><literal type="number" pos:line="9" pos:column="61">7L<pos:position pos:line="9" pos:column="63"/></literal></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">compressed_len<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">+=<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">stored_len<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">+<pos:position pos:line="10" pos:column="39"/></operator> <literal type="number" pos:line="10" pos:column="40">4<pos:position pos:line="10" pos:column="41"/></literal><operator pos:line="10" pos:column="41">)<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="43">&lt;&lt;<pos:position pos:line="10" pos:column="51"/></operator> <literal type="number" pos:line="10" pos:column="46">3<pos:position pos:line="10" pos:column="47"/></literal></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">copy_block<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">s<pos:position pos:line="12" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">buf<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">unsigned<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">stored_len<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="46">1<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt> <comment type="block" pos:line="12" pos:column="50">/* with header */</comment>
}<pos:position pos:line="13" pos:column="2"/></block></unit>

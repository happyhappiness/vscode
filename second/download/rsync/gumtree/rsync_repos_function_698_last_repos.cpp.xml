<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_698_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">block_state<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">deflate_stored<pos:position pos:line="1" pos:column="33"/></name><argument_list pos:line="1" pos:column="33">(<argument><expr><name pos:line="1" pos:column="34">s<pos:position pos:line="1" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="37">flush<pos:position pos:line="1" pos:column="42"/></name></expr></argument>)<pos:position pos:line="1" pos:column="43"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">flush<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
<block pos:line="4" pos:column="1">{
    <comment type="block" pos:line="5" pos:column="5">/* Stored blocks are limited to 0xffff bytes, pending_buf is limited
     * to pending_buf_size, and each stored block has a 5 byte header:
     */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ulg<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">max_block_size<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><literal type="number" pos:line="8" pos:column="26">0xffff<pos:position pos:line="8" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ulg<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">max_start<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">max_block_size<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&gt;<pos:position pos:line="11" pos:column="28"/></operator> <name><name pos:line="11" pos:column="26">s<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">pending_buf_size<pos:position pos:line="11" pos:column="45"/></name></name> <operator pos:line="11" pos:column="46">-<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">5<pos:position pos:line="11" pos:column="49"/></literal></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50"> <block pos:line="11" pos:column="51">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">max_block_size<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name><name pos:line="12" pos:column="26">s<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">pending_buf_size<pos:position pos:line="12" pos:column="45"/></name></name> <operator pos:line="12" pos:column="46">-<pos:position pos:line="12" pos:column="47"/></operator> <literal type="number" pos:line="12" pos:column="48">5<pos:position pos:line="12" pos:column="49"/></literal></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* Copy as much as possible from input to output: */</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init pos:line="16" pos:column="10">;<pos:position pos:line="16" pos:column="11"/></init><condition pos:line="16" pos:column="11">;<pos:position pos:line="16" pos:column="12"/></condition><incr/>)<pos:position pos:line="16" pos:column="13"/></control> <block pos:line="16" pos:column="14">{
        <comment type="block" pos:line="17" pos:column="9">/* Fill the window as much as possible: */</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">s<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">lookahead<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">&lt;=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="29">1<pos:position pos:line="18" pos:column="30"/></literal></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{

            <expr_stmt><expr><call><name pos:line="20" pos:column="13">Assert<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name><name pos:line="20" pos:column="20">s<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">strstart<pos:position pos:line="20" pos:column="31"/></name></name> <operator pos:line="20" pos:column="32">&lt;<pos:position pos:line="20" pos:column="36"/></operator> <name><name pos:line="20" pos:column="34">s<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">w_size<pos:position pos:line="20" pos:column="43"/></name></name><operator pos:line="20" pos:column="43">+<pos:position pos:line="20" pos:column="44"/></operator><call><name pos:line="20" pos:column="44">MAX_DIST<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">(<argument><expr><name pos:line="20" pos:column="53">s<pos:position pos:line="20" pos:column="54"/></name></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call> <operator pos:line="20" pos:column="56">||<pos:position pos:line="20" pos:column="58"/></operator>
                   <name><name pos:line="21" pos:column="20">s<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">block_start<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">&gt;=<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="38">(<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">long<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">)<pos:position pos:line="21" pos:column="44"/></operator><name><name pos:line="21" pos:column="44">s<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">w_size<pos:position pos:line="21" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="55">"slide too late"<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="23" pos:column="13">fill_window<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">s<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name><name pos:line="24" pos:column="17">s<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">lookahead<pos:position pos:line="24" pos:column="29"/></name></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <literal type="number" pos:line="24" pos:column="33">0<pos:position pos:line="24" pos:column="34"/></literal> <operator pos:line="24" pos:column="35">&amp;&amp;<pos:position pos:line="24" pos:column="45"/></operator> <name pos:line="24" pos:column="38">flush<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">==<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="47">Z_NO_FLUSH<pos:position pos:line="24" pos:column="57"/></name></expr>)<pos:position pos:line="24" pos:column="58"/></condition><then pos:line="24" pos:column="58"> <block type="pseudo"><return pos:line="24" pos:column="59">return <expr><name pos:line="24" pos:column="66">need_more<pos:position pos:line="24" pos:column="75"/></name></expr>;<pos:position pos:line="24" pos:column="76"/></return></block></then></if>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name><name pos:line="26" pos:column="17">s<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">lookahead<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">==<pos:position pos:line="26" pos:column="32"/></operator> <literal type="number" pos:line="26" pos:column="33">0<pos:position pos:line="26" pos:column="34"/></literal></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block type="pseudo"><break pos:line="26" pos:column="36">break;<pos:position pos:line="26" pos:column="42"/></break></block></then></if> <comment type="block" pos:line="26" pos:column="43">/* flush the current block */</comment>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">Assert<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name><name pos:line="28" pos:column="16">s<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">block_start<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">&gt;=<pos:position pos:line="28" pos:column="36"/></operator> <literal type="number" pos:line="28" pos:column="34">0L<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="38">"block gone"<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="30" pos:column="9">s<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">strstart<pos:position pos:line="30" pos:column="20"/></name></name> <operator pos:line="30" pos:column="21">+=<pos:position pos:line="30" pos:column="23"/></operator> <name><name pos:line="30" pos:column="24">s<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">lookahead<pos:position pos:line="30" pos:column="36"/></name></name></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">s<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">lookahead<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">flush<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">==<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">Z_INSERT_ONLY<pos:position pos:line="33" pos:column="35"/></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
	    <expr_stmt><expr><name><name pos:line="34" pos:column="13">s<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">block_start<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <name><name pos:line="34" pos:column="30">s<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">-&gt;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="33">strstart<pos:position pos:line="34" pos:column="41"/></name></name></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
	    <continue pos:line="35" pos:column="13">continue;<pos:position pos:line="35" pos:column="22"/></continue>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="38" pos:column="9">/* Emit a stored block if pending_buf will be full: */</comment>
        <expr_stmt><expr><name pos:line="39" pos:column="9">max_start<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <name><name pos:line="39" pos:column="21">s<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">block_start<pos:position pos:line="39" pos:column="35"/></name></name> <operator pos:line="39" pos:column="36">+<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">max_block_size<pos:position pos:line="39" pos:column="52"/></name></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name><name pos:line="40" pos:column="13">s<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">strstart<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">==<pos:position pos:line="40" pos:column="27"/></operator> <literal type="number" pos:line="40" pos:column="28">0<pos:position pos:line="40" pos:column="29"/></literal> <operator pos:line="40" pos:column="30">||<pos:position pos:line="40" pos:column="32"/></operator> <operator pos:line="40" pos:column="33">(<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">ulg<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">)<pos:position pos:line="40" pos:column="38"/></operator><name><name pos:line="40" pos:column="38">s<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">strstart<pos:position pos:line="40" pos:column="49"/></name></name> <operator pos:line="40" pos:column="50">&gt;=<pos:position pos:line="40" pos:column="55"/></operator> <name pos:line="40" pos:column="53">max_start<pos:position pos:line="40" pos:column="62"/></name></expr>)<pos:position pos:line="40" pos:column="63"/></condition><then pos:line="40" pos:column="63"> <block pos:line="40" pos:column="64">{
            <comment type="block" pos:line="41" pos:column="13">/* strstart == 0 is possible when wraparound on 16-bit machine */</comment>
            <expr_stmt><expr><name><name pos:line="42" pos:column="13">s<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">lookahead<pos:position pos:line="42" pos:column="25"/></name></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <call pos:line="42" pos:column="28">(<name pos:line="42" pos:column="29">uInt<pos:position pos:line="42" pos:column="33"/></name>)<argument_list pos:line="42" pos:column="34">(<argument><expr><name><name pos:line="42" pos:column="35">s<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">strstart<pos:position pos:line="42" pos:column="46"/></name></name> <operator pos:line="42" pos:column="47">-<pos:position pos:line="42" pos:column="48"/></operator> <name pos:line="42" pos:column="49">max_start<pos:position pos:line="42" pos:column="58"/></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">s<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">strstart<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <operator pos:line="43" pos:column="27">(<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">uInt<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">)<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">max_start<pos:position pos:line="43" pos:column="42"/></name></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">FLUSH_BLOCK<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">s<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="28">0<pos:position pos:line="44" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="46" pos:column="9">/* Flush if we may have to slide, otherwise block_start may become
         * negative and the data will be gone:
         */</comment>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name><name pos:line="49" pos:column="13">s<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">strstart<pos:position pos:line="49" pos:column="24"/></name></name> <operator pos:line="49" pos:column="25">-<pos:position pos:line="49" pos:column="26"/></operator> <operator pos:line="49" pos:column="27">(<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">uInt<pos:position pos:line="49" pos:column="32"/></name><operator pos:line="49" pos:column="32">)<pos:position pos:line="49" pos:column="33"/></operator><name><name pos:line="49" pos:column="33">s<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">-&gt;<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="36">block_start<pos:position pos:line="49" pos:column="47"/></name></name> <operator pos:line="49" pos:column="48">&gt;=<pos:position pos:line="49" pos:column="53"/></operator> <call><name pos:line="49" pos:column="51">MAX_DIST<pos:position pos:line="49" pos:column="59"/></name><argument_list pos:line="49" pos:column="59">(<argument><expr><name pos:line="49" pos:column="60">s<pos:position pos:line="49" pos:column="61"/></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="63"/></condition><then pos:line="49" pos:column="63"> <block pos:line="49" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">FLUSH_BLOCK<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">s<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="28">0<pos:position pos:line="50" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">s<pos:position pos:line="53" pos:column="6"/></name><operator pos:line="53" pos:column="6">-&gt;<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="8">insert<pos:position pos:line="53" pos:column="14"/></name></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <literal type="number" pos:line="53" pos:column="17">0<pos:position pos:line="53" pos:column="18"/></literal></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">flush<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">==<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">Z_INSERT_ONLY<pos:position pos:line="54" pos:column="31"/></name></expr>)<pos:position pos:line="54" pos:column="32"/></condition><then pos:line="54" pos:column="32"> <block pos:line="54" pos:column="33">{
	<expr_stmt><expr><name><name pos:line="55" pos:column="9">s<pos:position pos:line="55" pos:column="10"/></name><operator pos:line="55" pos:column="10">-&gt;<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="12">block_start<pos:position pos:line="55" pos:column="23"/></name></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <name><name pos:line="55" pos:column="26">s<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">-&gt;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="29">strstart<pos:position pos:line="55" pos:column="37"/></name></name></expr>;<pos:position pos:line="55" pos:column="38"/></expr_stmt>
	<return pos:line="56" pos:column="9">return <expr><name pos:line="56" pos:column="16">need_more<pos:position pos:line="56" pos:column="25"/></name></expr>;<pos:position pos:line="56" pos:column="26"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">flush<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">==<pos:position pos:line="58" pos:column="17"/></operator> <name pos:line="58" pos:column="18">Z_FINISH<pos:position pos:line="58" pos:column="26"/></name></expr>)<pos:position pos:line="58" pos:column="27"/></condition><then pos:line="58" pos:column="27"> <block pos:line="58" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">FLUSH_BLOCK<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">s<pos:position pos:line="59" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="24">1<pos:position pos:line="59" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
        <return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">finish_done<pos:position pos:line="60" pos:column="27"/></name></expr>;<pos:position pos:line="60" pos:column="28"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">(<pos:position pos:line="62" pos:column="10"/></operator><name pos:line="62" pos:column="10">long<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">)<pos:position pos:line="62" pos:column="15"/></operator><name><name pos:line="62" pos:column="15">s<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">-&gt;<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="18">strstart<pos:position pos:line="62" pos:column="26"/></name></name> <operator pos:line="62" pos:column="27">&gt;<pos:position pos:line="62" pos:column="31"/></operator> <name><name pos:line="62" pos:column="29">s<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">block_start<pos:position pos:line="62" pos:column="43"/></name></name></expr>)<pos:position pos:line="62" pos:column="44"/></condition><then pos:line="62" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="9">FLUSH_BLOCK<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">s<pos:position pos:line="63" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="24">0<pos:position pos:line="63" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="27"/></expr_stmt></block></then></if>
    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">block_done<pos:position pos:line="64" pos:column="22"/></name></expr>;<pos:position pos:line="64" pos:column="23"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></unit>

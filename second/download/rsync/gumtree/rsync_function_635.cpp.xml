<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_635.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">map_ptr<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">map_struct<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">map<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="38">OFF_T<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">offset<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">len<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">nread<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22"> 
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">len<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&gt;<pos:position pos:line="8" pos:column="21"/></operator> <operator pos:line="8" pos:column="19">(<pos:position pos:line="8" pos:column="20"/></operator><name><name pos:line="8" pos:column="20">map<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">size<pos:position pos:line="8" pos:column="29"/></name></name><operator pos:line="8" pos:column="29">-<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">offset<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">len<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name><name pos:line="9" pos:column="23">map<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">size<pos:position pos:line="9" pos:column="32"/></name></name><operator pos:line="9" pos:column="32">-<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">offset<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt></block></then></if>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">USE_MMAP<pos:position pos:line="11" pos:column="16"/></name></cpp:ifdef>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">map<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">map<pos:position pos:line="12" pos:column="21"/></name></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">offset<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&gt;=<pos:position pos:line="13" pos:column="33"/></operator> <name><name pos:line="13" pos:column="31">map<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">p_offset<pos:position pos:line="13" pos:column="44"/></name></name> <operator pos:line="13" pos:column="45">&amp;&amp;<pos:position pos:line="13" pos:column="55"/></operator> 
		    <name pos:line="14" pos:column="21">offset<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">+<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">len<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">&lt;=<pos:position pos:line="14" pos:column="37"/></operator> <name><name pos:line="14" pos:column="35">map<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">-&gt;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="40">p_offset<pos:position pos:line="14" pos:column="48"/></name></name><operator pos:line="14" pos:column="48">+<pos:position pos:line="14" pos:column="49"/></operator><name><name pos:line="14" pos:column="49">map<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">p_len<pos:position pos:line="14" pos:column="59"/></name></name></expr>)<pos:position pos:line="14" pos:column="60"/></condition><then pos:line="14" pos:column="60"> <block pos:line="14" pos:column="61">{
			<return pos:line="15" pos:column="25">return <expr><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><name><name pos:line="15" pos:column="33">map<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">map<pos:position pos:line="15" pos:column="41"/></name></name> <operator pos:line="15" pos:column="42">+<pos:position pos:line="15" pos:column="43"/></operator> <operator pos:line="15" pos:column="44">(<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">offset<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">-<pos:position pos:line="15" pos:column="53"/></operator> <name><name pos:line="15" pos:column="54">map<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">-&gt;<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="59">p_offset<pos:position pos:line="15" pos:column="67"/></name></name><operator pos:line="15" pos:column="67">)<pos:position pos:line="15" pos:column="68"/></operator><operator pos:line="15" pos:column="68">)<pos:position pos:line="15" pos:column="69"/></operator></expr>;<pos:position pos:line="15" pos:column="70"/></return>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">munmap<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name><name pos:line="17" pos:column="28">map<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">map<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="38">map<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">p_len<pos:position pos:line="17" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call> <operator pos:line="17" pos:column="50">!=<pos:position pos:line="17" pos:column="52"/></operator> <literal type="number" pos:line="17" pos:column="53">0<pos:position pos:line="17" pos:column="54"/></literal></expr>)<pos:position pos:line="17" pos:column="55"/></condition><then pos:line="17" pos:column="55"> <block pos:line="17" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">rprintf<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">FERROR<pos:position pos:line="18" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="18" pos:column="40">"munmap failed : %s\n"<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="64">strerror<pos:position pos:line="18" pos:column="72"/></name><argument_list pos:line="18" pos:column="72">(<argument><expr><name pos:line="18" pos:column="73">errno<pos:position pos:line="18" pos:column="78"/></name></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">exit_cleanup<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><literal type="number" pos:line="19" pos:column="38">1<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="22" pos:column="17">/* align the mmap region on a nice boundary back a bit from
		   where it is asked for to allow for some seeking */</comment>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">offset<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">&gt;<pos:position pos:line="24" pos:column="32"/></operator> <literal type="number" pos:line="24" pos:column="30">2<pos:position pos:line="24" pos:column="31"/></literal><operator pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">CHUNK_SIZE<pos:position pos:line="24" pos:column="42"/></name></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <block pos:line="24" pos:column="44">{
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">map<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">p_offset<pos:position pos:line="25" pos:column="38"/></name></name> <operator pos:line="25" pos:column="39">=<pos:position pos:line="25" pos:column="40"/></operator> <name pos:line="25" pos:column="41">offset<pos:position pos:line="25" pos:column="47"/></name> <operator pos:line="25" pos:column="48">-<pos:position pos:line="25" pos:column="49"/></operator> <literal type="number" pos:line="25" pos:column="50">2<pos:position pos:line="25" pos:column="51"/></literal><operator pos:line="25" pos:column="51">*<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">CHUNK_SIZE<pos:position pos:line="25" pos:column="62"/></name></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">map<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">p_offset<pos:position pos:line="26" pos:column="38"/></name></name> <operator pos:line="26" pos:column="39">&amp;=<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="42">~<pos:position pos:line="26" pos:column="43"/></operator><operator pos:line="26" pos:column="43">(<pos:position pos:line="26" pos:column="44"/></operator><call pos:line="26" pos:column="44">(<name pos:line="26" pos:column="45">OFF_T<pos:position pos:line="26" pos:column="50"/></name>)<argument_list pos:line="26" pos:column="51">(<argument><expr><name pos:line="26" pos:column="52">CHUNK_SIZE<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">-<pos:position pos:line="26" pos:column="63"/></operator><literal type="number" pos:line="26" pos:column="63">1<pos:position pos:line="26" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call><operator pos:line="26" pos:column="65">)<pos:position pos:line="26" pos:column="66"/></operator></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then> <else pos:line="27" pos:column="19">else <block pos:line="27" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="28" pos:column="25">map<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">p_offset<pos:position pos:line="28" pos:column="38"/></name></name> <operator pos:line="28" pos:column="39">=<pos:position pos:line="28" pos:column="40"/></operator> <literal type="number" pos:line="28" pos:column="41">0<pos:position pos:line="28" pos:column="42"/></literal></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="29" pos:column="18"/></block></else></if>
		
		<comment type="block" pos:line="31" pos:column="17">/* map up to MAX_MAP_SIZE */</comment>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">map<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">p_len<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <call><name pos:line="32" pos:column="30">MAX<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">len<pos:position pos:line="32" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="39">MAX_MAP_SIZE<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">map<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">p_len<pos:position pos:line="33" pos:column="27"/></name></name> <operator pos:line="33" pos:column="28">=<pos:position pos:line="33" pos:column="29"/></operator> <call><name pos:line="33" pos:column="30">MIN<pos:position pos:line="33" pos:column="33"/></name><argument_list pos:line="33" pos:column="33">(<argument><expr><name><name pos:line="33" pos:column="34">map<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">p_len<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="46">map<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">size<pos:position pos:line="33" pos:column="55"/></name></name> <operator pos:line="33" pos:column="56">-<pos:position pos:line="33" pos:column="57"/></operator> <name><name pos:line="33" pos:column="58">map<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">-&gt;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="63">p_offset<pos:position pos:line="33" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="35" pos:column="17">map<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">map<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <operator pos:line="35" pos:column="28">(<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">char<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">*<pos:position pos:line="35" pos:column="35"/></operator><operator pos:line="35" pos:column="35">)<pos:position pos:line="35" pos:column="36"/></operator><call><name pos:line="35" pos:column="36">do_mmap<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><name pos:line="35" pos:column="44">NULL<pos:position pos:line="35" pos:column="48"/></name></expr></argument>,<argument><expr><name><name pos:line="35" pos:column="49">map<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">p_len<pos:position pos:line="35" pos:column="59"/></name></name></expr></argument>,<argument><expr><name pos:line="35" pos:column="60">PROT_READ<pos:position pos:line="35" pos:column="69"/></name></expr></argument>,
					   <argument><expr><name pos:line="36" pos:column="44">MAP_SHARED<pos:position pos:line="36" pos:column="54"/></name></expr></argument>,<argument><expr><name><name pos:line="36" pos:column="55">map<pos:position pos:line="36" pos:column="58"/></name><operator pos:line="36" pos:column="58">-&gt;<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="60">fd<pos:position pos:line="36" pos:column="62"/></name></name></expr></argument>,<argument><expr><name><name pos:line="36" pos:column="63">map<pos:position pos:line="36" pos:column="66"/></name><operator pos:line="36" pos:column="66">-&gt;<pos:position pos:line="36" pos:column="71"/></operator><name pos:line="36" pos:column="68">p_offset<pos:position pos:line="36" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="78"/></expr_stmt>

		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name><name pos:line="38" pos:column="21">map<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">map<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">==<pos:position pos:line="38" pos:column="32"/></operator> <operator pos:line="38" pos:column="33">(<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">char<pos:position pos:line="38" pos:column="38"/></name> <operator pos:line="38" pos:column="39">*<pos:position pos:line="38" pos:column="40"/></operator><operator pos:line="38" pos:column="40">)<pos:position pos:line="38" pos:column="41"/></operator><operator pos:line="38" pos:column="41">-<pos:position pos:line="38" pos:column="42"/></operator><literal type="number" pos:line="38" pos:column="42">1<pos:position pos:line="38" pos:column="43"/></literal></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44"> <block pos:line="38" pos:column="45">{
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">map<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">map<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">NULL<pos:position pos:line="39" pos:column="40"/></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">map<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">p_len<pos:position pos:line="40" pos:column="35"/></name></name> <operator pos:line="40" pos:column="36">=<pos:position pos:line="40" pos:column="37"/></operator> <literal type="number" pos:line="40" pos:column="38">0<pos:position pos:line="40" pos:column="39"/></literal></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="41" pos:column="25">map<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">p_offset<pos:position pos:line="41" pos:column="38"/></name></name> <operator pos:line="41" pos:column="39">=<pos:position pos:line="41" pos:column="40"/></operator> <literal type="number" pos:line="41" pos:column="41">0<pos:position pos:line="41" pos:column="42"/></literal></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></then> <else pos:line="42" pos:column="19">else <block pos:line="42" pos:column="24">{
			<return pos:line="43" pos:column="25">return <expr><operator pos:line="43" pos:column="32">(<pos:position pos:line="43" pos:column="33"/></operator><name><name pos:line="43" pos:column="33">map<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">map<pos:position pos:line="43" pos:column="41"/></name></name> <operator pos:line="43" pos:column="42">+<pos:position pos:line="43" pos:column="43"/></operator> <operator pos:line="43" pos:column="44">(<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="45">offset<pos:position pos:line="43" pos:column="51"/></name> <operator pos:line="43" pos:column="52">-<pos:position pos:line="43" pos:column="53"/></operator> <name><name pos:line="43" pos:column="54">map<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">p_offset<pos:position pos:line="43" pos:column="67"/></name></name><operator pos:line="43" pos:column="67">)<pos:position pos:line="43" pos:column="68"/></operator><operator pos:line="43" pos:column="68">)<pos:position pos:line="43" pos:column="69"/></operator></expr>;<pos:position pos:line="43" pos:column="70"/></return>
		}<pos:position pos:line="44" pos:column="18"/></block></else></if>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">offset<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">&gt;=<pos:position pos:line="48" pos:column="25"/></operator> <name><name pos:line="48" pos:column="23">map<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">p_offset<pos:position pos:line="48" pos:column="36"/></name></name> <operator pos:line="48" pos:column="37">&amp;&amp;<pos:position pos:line="48" pos:column="47"/></operator> 
	    <name pos:line="49" pos:column="13">offset<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">+<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">len<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">&lt;=<pos:position pos:line="49" pos:column="29"/></operator> <name><name pos:line="49" pos:column="27">map<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">p_offset<pos:position pos:line="49" pos:column="40"/></name></name><operator pos:line="49" pos:column="40">+<pos:position pos:line="49" pos:column="41"/></operator><name><name pos:line="49" pos:column="41">map<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">p_len<pos:position pos:line="49" pos:column="51"/></name></name></expr>)<pos:position pos:line="49" pos:column="52"/></condition><then pos:line="49" pos:column="52"> <block pos:line="49" pos:column="53">{
		<return pos:line="50" pos:column="17">return <expr><operator pos:line="50" pos:column="24">(<pos:position pos:line="50" pos:column="25"/></operator><name><name pos:line="50" pos:column="25">map<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">p<pos:position pos:line="50" pos:column="31"/></name></name> <operator pos:line="50" pos:column="32">+<pos:position pos:line="50" pos:column="33"/></operator> <operator pos:line="50" pos:column="34">(<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="35">offset<pos:position pos:line="50" pos:column="41"/></name> <operator pos:line="50" pos:column="42">-<pos:position pos:line="50" pos:column="43"/></operator> <name><name pos:line="50" pos:column="44">map<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">-&gt;<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="49">p_offset<pos:position pos:line="50" pos:column="57"/></name></name><operator pos:line="50" pos:column="57">)<pos:position pos:line="50" pos:column="58"/></operator><operator pos:line="50" pos:column="58">)<pos:position pos:line="50" pos:column="59"/></operator></expr>;<pos:position pos:line="50" pos:column="60"/></return>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="53" pos:column="9">len<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <call><name pos:line="53" pos:column="15">MAX<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name pos:line="53" pos:column="19">len<pos:position pos:line="53" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="23">CHUNK_SIZE<pos:position pos:line="53" pos:column="33"/></name></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">len<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">&gt;<pos:position pos:line="54" pos:column="21"/></operator> <operator pos:line="54" pos:column="19">(<pos:position pos:line="54" pos:column="20"/></operator><name><name pos:line="54" pos:column="20">map<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">size<pos:position pos:line="54" pos:column="29"/></name></name><operator pos:line="54" pos:column="29">-<pos:position pos:line="54" pos:column="30"/></operator><name pos:line="54" pos:column="30">offset<pos:position pos:line="54" pos:column="36"/></name><operator pos:line="54" pos:column="36">)<pos:position pos:line="54" pos:column="37"/></operator></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="17">len<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <name><name pos:line="55" pos:column="23">map<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">size<pos:position pos:line="55" pos:column="32"/></name></name><operator pos:line="55" pos:column="32">-<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="33">offset<pos:position pos:line="55" pos:column="39"/></name></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt></block></then></if>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">len<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&gt;<pos:position pos:line="57" pos:column="21"/></operator> <name><name pos:line="57" pos:column="19">map<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">-&gt;<pos:position pos:line="57" pos:column="27"/></operator><name pos:line="57" pos:column="24">p_size<pos:position pos:line="57" pos:column="30"/></name></name></expr>)<pos:position pos:line="57" pos:column="31"/></condition><then pos:line="57" pos:column="31"> <block pos:line="57" pos:column="32">{
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name><name pos:line="58" pos:column="21">map<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">p<pos:position pos:line="58" pos:column="27"/></name></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition><then pos:line="58" pos:column="28"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="29">free<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name><name pos:line="58" pos:column="34">map<pos:position pos:line="58" pos:column="37"/></name><operator pos:line="58" pos:column="37">-&gt;<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="39">p<pos:position pos:line="58" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="59" pos:column="17">map<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">p<pos:position pos:line="59" pos:column="23"/></name></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <operator pos:line="59" pos:column="26">(<pos:position pos:line="59" pos:column="27"/></operator><name pos:line="59" pos:column="27">char<pos:position pos:line="59" pos:column="31"/></name> <operator pos:line="59" pos:column="32">*<pos:position pos:line="59" pos:column="33"/></operator><operator pos:line="59" pos:column="33">)<pos:position pos:line="59" pos:column="34"/></operator><call><name pos:line="59" pos:column="34">malloc<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">len<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">!<pos:position pos:line="60" pos:column="22"/></operator><name><name pos:line="60" pos:column="22">map<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">p<pos:position pos:line="60" pos:column="28"/></name></name></expr>)<pos:position pos:line="60" pos:column="29"/></condition><then pos:line="60" pos:column="29"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="30">out_of_memory<pos:position pos:line="60" pos:column="43"/></name><argument_list pos:line="60" pos:column="43">(<argument><expr><literal type="string" pos:line="60" pos:column="44">"map_ptr"<pos:position pos:line="60" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="55"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="61" pos:column="17">map<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">p_size<pos:position pos:line="61" pos:column="28"/></name></name> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <name pos:line="61" pos:column="31">len<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="64" pos:column="9">map<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">p_offset<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="25">offset<pos:position pos:line="64" pos:column="31"/></name></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="65" pos:column="9">map<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">p_len<pos:position pos:line="65" pos:column="19"/></name></name> <operator pos:line="65" pos:column="20">=<pos:position pos:line="65" pos:column="21"/></operator> <name pos:line="65" pos:column="22">len<pos:position pos:line="65" pos:column="25"/></name></expr>;<pos:position pos:line="65" pos:column="26"/></expr_stmt>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><call><name pos:line="67" pos:column="13">do_lseek<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name><name pos:line="67" pos:column="22">map<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">-&gt;<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="27">fd<pos:position pos:line="67" pos:column="29"/></name></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="30">offset<pos:position pos:line="67" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="37">SEEK_SET<pos:position pos:line="67" pos:column="45"/></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call> <operator pos:line="67" pos:column="47">!=<pos:position pos:line="67" pos:column="49"/></operator> <name pos:line="67" pos:column="50">offset<pos:position pos:line="67" pos:column="56"/></name></expr>)<pos:position pos:line="67" pos:column="57"/></condition><then pos:line="67" pos:column="57"> <block pos:line="67" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="68" pos:column="17">rprintf<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">FERROR<pos:position pos:line="68" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="68" pos:column="32">"lseek failed in map_ptr\n"<pos:position pos:line="68" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">exit_cleanup<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><literal type="number" pos:line="69" pos:column="30">1<pos:position pos:line="69" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>

	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">(<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">nread<pos:position pos:line="72" pos:column="19"/></name><operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator><call><name pos:line="72" pos:column="20">read<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name><name pos:line="72" pos:column="25">map<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">-&gt;<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="30">fd<pos:position pos:line="72" pos:column="32"/></name></name></expr></argument>,<argument><expr><name><name pos:line="72" pos:column="33">map<pos:position pos:line="72" pos:column="36"/></name><operator pos:line="72" pos:column="36">-&gt;<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="38">p<pos:position pos:line="72" pos:column="39"/></name></name></expr></argument>,<argument><expr><name pos:line="72" pos:column="40">len<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call><operator pos:line="72" pos:column="44">)<pos:position pos:line="72" pos:column="45"/></operator> <operator pos:line="72" pos:column="46">!=<pos:position pos:line="72" pos:column="48"/></operator> <name pos:line="72" pos:column="49">len<pos:position pos:line="72" pos:column="52"/></name></expr>)<pos:position pos:line="72" pos:column="53"/></condition><then pos:line="72" pos:column="53"> <block pos:line="72" pos:column="54">{		
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">nread<pos:position pos:line="73" pos:column="26"/></name> <operator pos:line="73" pos:column="27">&lt;<pos:position pos:line="73" pos:column="31"/></operator> <literal type="number" pos:line="73" pos:column="29">0<pos:position pos:line="73" pos:column="30"/></literal></expr>)<pos:position pos:line="73" pos:column="31"/></condition><then pos:line="73" pos:column="31"> <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="32">nread<pos:position pos:line="73" pos:column="37"/></name> <operator pos:line="73" pos:column="38">=<pos:position pos:line="73" pos:column="39"/></operator> <literal type="number" pos:line="73" pos:column="40">0<pos:position pos:line="73" pos:column="41"/></literal></expr>;<pos:position pos:line="73" pos:column="42"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="74" pos:column="17">/* the best we can do is zero the buffer - the file
                   has changed mid transfer! */</comment>
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">memset<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><name><name pos:line="76" pos:column="24">map<pos:position pos:line="76" pos:column="27"/></name><operator pos:line="76" pos:column="27">-&gt;<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="29">p<pos:position pos:line="76" pos:column="30"/></name></name><operator pos:line="76" pos:column="30">+<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="31">nread<pos:position pos:line="76" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="38">0<pos:position pos:line="76" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="41">len<pos:position pos:line="76" pos:column="44"/></name> <operator pos:line="76" pos:column="45">-<pos:position pos:line="76" pos:column="46"/></operator> <name pos:line="76" pos:column="47">nread<pos:position pos:line="76" pos:column="52"/></name></expr></argument>)<pos:position pos:line="76" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="77" pos:column="10"/></block></then></if>
  
	<return pos:line="79" pos:column="9">return <expr><name><name pos:line="79" pos:column="16">map<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">-&gt;<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="21">p<pos:position pos:line="79" pos:column="22"/></name></name></expr>;<pos:position pos:line="79" pos:column="23"/></return> 
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

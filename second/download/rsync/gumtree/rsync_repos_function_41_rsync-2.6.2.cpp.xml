<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_41_rsync-2.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">get_exclude_tok<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">p<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">len_ptr<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">incl_ptr<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">xflags<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">unsigned<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">char<pos:position pos:line="4" pos:column="28"/></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">s<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><specifier pos:line="4" pos:column="35">const<pos:position pos:line="4" pos:column="40"/></specifier> <name pos:line="4" pos:column="41">unsigned<pos:position pos:line="4" pos:column="49"/></name> <name pos:line="4" pos:column="50">char<pos:position pos:line="4" pos:column="54"/></name> <operator pos:line="4" pos:column="55">*<pos:position pos:line="4" pos:column="56"/></operator><operator pos:line="4" pos:column="56">)<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="57">p<pos:position pos:line="4" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">xflags<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&amp;<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="22">XFLG_WORD_SPLIT<pos:position pos:line="7" pos:column="37"/></name></expr>)<pos:position pos:line="7" pos:column="38"/></condition><then pos:line="7" pos:column="38"> <block pos:line="7" pos:column="39">{
		<comment type="block" pos:line="8" pos:column="17">/* Skip over any initial whitespace. */</comment>
		<while pos:line="9" pos:column="17">while <condition pos:line="9" pos:column="23">(<expr><call><name pos:line="9" pos:column="24">isspace<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><operator pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">s<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="36"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="25">s<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">++<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></while>
		<comment type="block" pos:line="11" pos:column="17">/* Update for "!" check. */</comment>
		<expr_stmt><expr><name pos:line="12" pos:column="17">p<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><specifier pos:line="12" pos:column="22">const<pos:position pos:line="12" pos:column="27"/></specifier> <name pos:line="12" pos:column="28">char<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">*<pos:position pos:line="12" pos:column="34"/></operator><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">s<pos:position pos:line="12" pos:column="36"/></name></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="15" pos:column="9">/* Is this a '+' or '-' followed by a space (not whitespace)? */</comment>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">xflags<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">&amp;<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="24">XFLG_WORDS_ONLY<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator>
	    <operator pos:line="17" pos:column="13">&amp;&amp;<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">s<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <literal type="char" pos:line="17" pos:column="23">'-'<pos:position pos:line="17" pos:column="26"/></literal> <operator pos:line="17" pos:column="27">||<pos:position pos:line="17" pos:column="29"/></operator> <operator pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">s<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">==<pos:position pos:line="17" pos:column="35"/></operator> <literal type="char" pos:line="17" pos:column="36">'+'<pos:position pos:line="17" pos:column="39"/></literal><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="41">&amp;&amp;<pos:position pos:line="17" pos:column="51"/></operator> <name><name pos:line="17" pos:column="44">s<pos:position pos:line="17" pos:column="45"/></name><index pos:line="17" pos:column="45">[<expr><literal type="number" pos:line="17" pos:column="46">1<pos:position pos:line="17" pos:column="47"/></literal></expr>]<pos:position pos:line="17" pos:column="48"/></index></name> <operator pos:line="17" pos:column="49">==<pos:position pos:line="17" pos:column="51"/></operator> <literal type="char" pos:line="17" pos:column="52">' '<pos:position pos:line="17" pos:column="55"/></literal></expr>)<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56"> <block pos:line="17" pos:column="57">{
		<expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">incl_ptr<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">=<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="29">*<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">s<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">==<pos:position pos:line="18" pos:column="34"/></operator> <literal type="char" pos:line="18" pos:column="35">'+'<pos:position pos:line="18" pos:column="38"/></literal></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">s<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">+=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">2<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">incl_ptr<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">xflags<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">&amp;<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="38">XFLG_DEF_INCLUDE<pos:position pos:line="21" pos:column="54"/></name></expr>;<pos:position pos:line="21" pos:column="55"/></expr_stmt></block></else></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">xflags<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">&amp;<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="22">XFLG_WORD_SPLIT<pos:position pos:line="23" pos:column="37"/></name></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38"> <block pos:line="23" pos:column="39">{
		<decl_stmt><decl><type><specifier pos:line="24" pos:column="17">const<pos:position pos:line="24" pos:column="22"/></specifier> <name pos:line="24" pos:column="23">unsigned<pos:position pos:line="24" pos:column="31"/></name> <name pos:line="24" pos:column="32">char<pos:position pos:line="24" pos:column="36"/></name> <modifier pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></modifier></type><name pos:line="24" pos:column="38">cp<pos:position pos:line="24" pos:column="40"/></name> <init pos:line="24" pos:column="41">= <expr><name pos:line="24" pos:column="43">s<pos:position pos:line="24" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="45"/></decl_stmt>
		<comment type="block" pos:line="25" pos:column="17">/* Token ends at whitespace or the end of the string. */</comment>
		<while pos:line="26" pos:column="17">while <condition pos:line="26" pos:column="23">(<expr><operator pos:line="26" pos:column="24">!<pos:position pos:line="26" pos:column="25"/></operator><call><name pos:line="26" pos:column="25">isspace<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><operator pos:line="26" pos:column="33">*<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">cp<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call> <operator pos:line="26" pos:column="38">&amp;&amp;<pos:position pos:line="26" pos:column="48"/></operator> <operator pos:line="26" pos:column="41">*<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">cp<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">!=<pos:position pos:line="26" pos:column="47"/></operator> <literal type="char" pos:line="26" pos:column="48">'\0'<pos:position pos:line="26" pos:column="52"/></literal></expr>)<pos:position pos:line="26" pos:column="53"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">cp<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">++<pos:position pos:line="27" pos:column="29"/></operator></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="28" pos:column="17">len<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">cp<pos:position pos:line="28" pos:column="25"/></name> <operator pos:line="28" pos:column="26">-<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">s<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then> <else pos:line="29" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">len<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <call><name pos:line="30" pos:column="23">strlen<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">s<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt></block></else></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">*<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">p<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">==<pos:position pos:line="32" pos:column="18"/></operator> <literal type="char" pos:line="32" pos:column="19">'!'<pos:position pos:line="32" pos:column="22"/></literal> <operator pos:line="32" pos:column="23">&amp;&amp;<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="26">len<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">==<pos:position pos:line="32" pos:column="32"/></operator> <literal type="number" pos:line="32" pos:column="33">1<pos:position pos:line="32" pos:column="34"/></literal> <operator pos:line="32" pos:column="35">&amp;&amp;<pos:position pos:line="32" pos:column="45"/></operator> <operator pos:line="32" pos:column="38">!<pos:position pos:line="32" pos:column="39"/></operator><operator pos:line="32" pos:column="39">(<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">xflags<pos:position pos:line="32" pos:column="46"/></name> <operator pos:line="32" pos:column="47">&amp;<pos:position pos:line="32" pos:column="52"/></operator> <name pos:line="32" pos:column="49">XFLG_WORDS_ONLY<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">)<pos:position pos:line="32" pos:column="65"/></operator></expr>)<pos:position pos:line="32" pos:column="66"/></condition><then pos:line="32" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">incl_ptr<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator><literal type="number" pos:line="33" pos:column="30">1<pos:position pos:line="33" pos:column="31"/></literal></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt></block></then></if>

	<expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">len_ptr<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">len<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
	<return pos:line="36" pos:column="9">return <expr><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><specifier pos:line="36" pos:column="17">const<pos:position pos:line="36" pos:column="22"/></specifier> <name pos:line="36" pos:column="23">char<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">*<pos:position pos:line="36" pos:column="29"/></operator><operator pos:line="36" pos:column="29">)<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">s<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_561_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">set_output_verbosity<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">level<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">uchar<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">priority<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">j<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">level<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">&gt;<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="21">MAX_VERBOSITY<pos:position pos:line="5" pos:column="34"/></name></expr>)<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">level<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">MAX_VERBOSITY<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt></block></then></if>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">j<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">j<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="26">level<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></condition> <incr><expr><name pos:line="8" pos:column="33">j<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">++<pos:position pos:line="8" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="37"/></control> <block pos:line="8" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">parse_output_words<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">info_words<pos:position pos:line="9" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="48">info_levels<pos:position pos:line="9" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="61">info_verbosity<pos:position pos:line="9" pos:column="75"/></name><index pos:line="9" pos:column="75">[<expr><name pos:line="9" pos:column="76">j<pos:position pos:line="9" pos:column="77"/></name></expr>]<pos:position pos:line="9" pos:column="78"/></index></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="80">priority<pos:position pos:line="9" pos:column="88"/></name></expr></argument>)<pos:position pos:line="9" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="90"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">parse_output_words<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">debug_words<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">debug_levels<pos:position pos:line="10" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="63">debug_verbosity<pos:position pos:line="10" pos:column="78"/></name><index pos:line="10" pos:column="78">[<expr><name pos:line="10" pos:column="79">j<pos:position pos:line="10" pos:column="80"/></name></expr>]<pos:position pos:line="10" pos:column="81"/></index></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="83">priority<pos:position pos:line="10" pos:column="91"/></name></expr></argument>)<pos:position pos:line="10" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="93"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_137_rsync-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">keep_backup<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">fname<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_STAT<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">st<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">file_struct<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">file<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">buf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">kept<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret_code<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* return if no file to keep */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">do_lstat<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">fname<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="29">&amp;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="30">st<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call> <operator pos:line="10" pos:column="34">&lt;<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="36">0<pos:position pos:line="10" pos:column="37"/></literal></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></return></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">file<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <call><name pos:line="13" pos:column="22">make_file<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">fname<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">NULL<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">NULL<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">NO_FILTERS<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call><operator pos:line="13" pos:column="65">)<pos:position pos:line="13" pos:column="66"/></operator></expr>)<pos:position pos:line="13" pos:column="67"/></condition><then pos:line="13" pos:column="67">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if> <comment type="block" pos:line="14" pos:column="27">/* the file could have disappeared */</comment>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">buf<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">get_backup_name<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">fname<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="19" pos:column="9">/* Check to see if this is a device file, or link */</comment>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">(<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">am_root<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">&amp;&amp;<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="25">preserve_devices<pos:position pos:line="20" pos:column="41"/></name> <operator pos:line="20" pos:column="42">&amp;&amp;<pos:position pos:line="20" pos:column="52"/></operator> <call><name pos:line="20" pos:column="45">IS_DEVICE<pos:position pos:line="20" pos:column="54"/></name><argument_list pos:line="20" pos:column="54">(<argument><expr><name><name pos:line="20" pos:column="55">file<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">mode<pos:position pos:line="20" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call><operator pos:line="20" pos:column="66">)<pos:position pos:line="20" pos:column="67"/></operator>
	 <operator pos:line="21" pos:column="10">||<pos:position pos:line="21" pos:column="12"/></operator> <operator pos:line="21" pos:column="13">(<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">preserve_specials<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">&amp;&amp;<pos:position pos:line="21" pos:column="42"/></operator> <call><name pos:line="21" pos:column="35">IS_SPECIAL<pos:position pos:line="21" pos:column="45"/></name><argument_list pos:line="21" pos:column="45">(<argument><expr><name><name pos:line="21" pos:column="46">file<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">-&gt;<pos:position pos:line="21" pos:column="55"/></operator><name pos:line="21" pos:column="52">mode<pos:position pos:line="21" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call><operator pos:line="21" pos:column="57">)<pos:position pos:line="21" pos:column="58"/></operator></expr>)<pos:position pos:line="21" pos:column="59"/></condition><then pos:line="21" pos:column="59"> <block pos:line="21" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">do_unlink<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">buf<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">do_mknod<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">buf<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="35">file<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">mode<pos:position pos:line="23" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="47">file<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">u<pos:position pos:line="23" pos:column="54"/></name><operator pos:line="23" pos:column="54">.<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">rdev<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call> <operator pos:line="23" pos:column="61">&lt;<pos:position pos:line="23" pos:column="65"/></operator> <literal type="number" pos:line="23" pos:column="63">0<pos:position pos:line="23" pos:column="64"/></literal>
		    <operator pos:line="24" pos:column="21">&amp;&amp;<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="24">(<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">errno<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">!=<pos:position pos:line="24" pos:column="33"/></operator> <name pos:line="24" pos:column="34">ENOENT<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">||<pos:position pos:line="24" pos:column="43"/></operator> <call><name pos:line="24" pos:column="44">make_bak_dir<pos:position pos:line="24" pos:column="56"/></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name pos:line="24" pos:column="57">buf<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call> <operator pos:line="24" pos:column="62">&lt;<pos:position pos:line="24" pos:column="66"/></operator> <literal type="number" pos:line="24" pos:column="64">0<pos:position pos:line="24" pos:column="65"/></literal>
		     <operator pos:line="25" pos:column="22">||<pos:position pos:line="25" pos:column="24"/></operator> <call><name pos:line="25" pos:column="25">do_mknod<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><name pos:line="25" pos:column="34">buf<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="39">file<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">mode<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="51">file<pos:position pos:line="25" pos:column="55"/></name><operator pos:line="25" pos:column="55">-&gt;<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="57">u<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">.<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">rdev<pos:position pos:line="25" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call> <operator pos:line="25" pos:column="65">&lt;<pos:position pos:line="25" pos:column="69"/></operator> <literal type="number" pos:line="25" pos:column="67">0<pos:position pos:line="25" pos:column="68"/></literal><operator pos:line="25" pos:column="68">)<pos:position pos:line="25" pos:column="69"/></operator></expr>)<pos:position pos:line="25" pos:column="70"/></condition><then pos:line="25" pos:column="70"> <block pos:line="25" pos:column="71">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">rsyserr<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">FERROR<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">errno<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="48">"mknod %s failed"<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="27" pos:column="33">full_fname<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">buf<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then> <elseif pos:line="28" pos:column="19">else <if pos:line="28" pos:column="24">if <condition pos:line="28" pos:column="27">(<expr><name pos:line="28" pos:column="28">verbose<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">&gt;<pos:position pos:line="28" pos:column="40"/></operator> <literal type="number" pos:line="28" pos:column="38">2<pos:position pos:line="28" pos:column="39"/></literal></expr>)<pos:position pos:line="28" pos:column="40"/></condition><then pos:line="28" pos:column="40"> <block pos:line="28" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">rprintf<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">FINFO<pos:position pos:line="29" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="40">"make_backup: DEVICE %s successful.\n"<pos:position pos:line="29" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name pos:line="30" pos:column="33">fname<pos:position pos:line="30" pos:column="38"/></name></expr></argument>)<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="32" pos:column="17">kept<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="24">1<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">do_unlink<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name pos:line="33" pos:column="27">fname<pos:position pos:line="33" pos:column="32"/></name></expr></argument>)<pos:position pos:line="33" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">kept<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&amp;&amp;<pos:position pos:line="36" pos:column="29"/></operator> <call><name pos:line="36" pos:column="22">S_ISDIR<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">file<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">-&gt;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="36">mode<pos:position pos:line="36" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42"> <block pos:line="36" pos:column="43">{
		<comment type="block" pos:line="37" pos:column="17">/* make an empty directory */</comment>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">do_mkdir<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">buf<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="35">file<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">mode<pos:position pos:line="38" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call> <operator pos:line="38" pos:column="47">&lt;<pos:position pos:line="38" pos:column="51"/></operator> <literal type="number" pos:line="38" pos:column="49">0<pos:position pos:line="38" pos:column="50"/></literal>
		    <operator pos:line="39" pos:column="21">&amp;&amp;<pos:position pos:line="39" pos:column="31"/></operator> <operator pos:line="39" pos:column="24">(<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="25">errno<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">!=<pos:position pos:line="39" pos:column="33"/></operator> <name pos:line="39" pos:column="34">ENOENT<pos:position pos:line="39" pos:column="40"/></name> <operator pos:line="39" pos:column="41">||<pos:position pos:line="39" pos:column="43"/></operator> <call><name pos:line="39" pos:column="44">make_bak_dir<pos:position pos:line="39" pos:column="56"/></name><argument_list pos:line="39" pos:column="56">(<argument><expr><name pos:line="39" pos:column="57">buf<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call> <operator pos:line="39" pos:column="62">&lt;<pos:position pos:line="39" pos:column="66"/></operator> <literal type="number" pos:line="39" pos:column="64">0<pos:position pos:line="39" pos:column="65"/></literal>
		     <operator pos:line="40" pos:column="22">||<pos:position pos:line="40" pos:column="24"/></operator> <call><name pos:line="40" pos:column="25">do_mkdir<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">buf<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="39">file<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">mode<pos:position pos:line="40" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="50"/></argument_list></call> <operator pos:line="40" pos:column="51">&lt;<pos:position pos:line="40" pos:column="55"/></operator> <literal type="number" pos:line="40" pos:column="53">0<pos:position pos:line="40" pos:column="54"/></literal><operator pos:line="40" pos:column="54">)<pos:position pos:line="40" pos:column="55"/></operator></expr>)<pos:position pos:line="40" pos:column="56"/></condition><then pos:line="40" pos:column="56"> <block pos:line="40" pos:column="57">{
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">rsyserr<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">FINFO<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">errno<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="47">"mkdir %s failed"<pos:position pos:line="41" pos:column="64"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="42" pos:column="33">full_fname<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">buf<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="45" pos:column="17">ret_code<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <call><name pos:line="45" pos:column="28">do_rmdir<pos:position pos:line="45" pos:column="36"/></name><argument_list pos:line="45" pos:column="36">(<argument><expr><name pos:line="45" pos:column="37">fname<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">verbose<pos:position pos:line="46" pos:column="28"/></name> <operator pos:line="46" pos:column="29">&gt;<pos:position pos:line="46" pos:column="33"/></operator> <literal type="number" pos:line="46" pos:column="31">2<pos:position pos:line="46" pos:column="32"/></literal></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33"> <block pos:line="46" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">rprintf<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">FINFO<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="40">"make_backup: RMDIR %s returns %i\n"<pos:position pos:line="47" pos:column="76"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="48" pos:column="33">full_fname<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">fname<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="52">ret_code<pos:position pos:line="48" pos:column="60"/></name></expr></argument>)<pos:position pos:line="48" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="49" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="50" pos:column="17">kept<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <literal type="number" pos:line="50" pos:column="24">1<pos:position pos:line="50" pos:column="25"/></literal></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">SUPPORT_LINKS<pos:position pos:line="53" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><operator pos:line="54" pos:column="13">!<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="14">kept<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&amp;&amp;<pos:position pos:line="54" pos:column="29"/></operator> <name pos:line="54" pos:column="22">preserve_links<pos:position pos:line="54" pos:column="36"/></name> <operator pos:line="54" pos:column="37">&amp;&amp;<pos:position pos:line="54" pos:column="47"/></operator> <call><name pos:line="54" pos:column="40">S_ISLNK<pos:position pos:line="54" pos:column="47"/></name><argument_list pos:line="54" pos:column="47">(<argument><expr><name><name pos:line="54" pos:column="48">file<pos:position pos:line="54" pos:column="52"/></name><operator pos:line="54" pos:column="52">-&gt;<pos:position pos:line="54" pos:column="57"/></operator><name pos:line="54" pos:column="54">mode<pos:position pos:line="54" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="60"/></condition><then pos:line="54" pos:column="60"> <block pos:line="54" pos:column="61">{
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">safe_symlinks<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">&amp;&amp;<pos:position pos:line="55" pos:column="45"/></operator> <call><name pos:line="55" pos:column="38">unsafe_symlink<pos:position pos:line="55" pos:column="52"/></name><argument_list pos:line="55" pos:column="52">(<argument><expr><name><name pos:line="55" pos:column="53">file<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">u<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">.<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="61">link<pos:position pos:line="55" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="67">buf<pos:position pos:line="55" pos:column="70"/></name></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="72"/></condition><then pos:line="55" pos:column="72"> <block pos:line="55" pos:column="73">{
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name pos:line="56" pos:column="29">verbose<pos:position pos:line="56" pos:column="36"/></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37"> <block pos:line="56" pos:column="38">{
				<expr_stmt><expr><call><name pos:line="57" pos:column="33">rprintf<pos:position pos:line="57" pos:column="40"/></name><argument_list pos:line="57" pos:column="40">(<argument><expr><name pos:line="57" pos:column="41">FINFO<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="48">"ignoring unsafe symlink %s -&gt; %s\n"<pos:position pos:line="57" pos:column="87"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="58" pos:column="41">full_fname<pos:position pos:line="58" pos:column="51"/></name><argument_list pos:line="58" pos:column="51">(<argument><expr><name pos:line="58" pos:column="52">buf<pos:position pos:line="58" pos:column="55"/></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="58">file<pos:position pos:line="58" pos:column="62"/></name><operator pos:line="58" pos:column="62">-&gt;<pos:position pos:line="58" pos:column="67"/></operator><name pos:line="58" pos:column="64">u<pos:position pos:line="58" pos:column="65"/></name><operator pos:line="58" pos:column="65">.<pos:position pos:line="58" pos:column="66"/></operator><name pos:line="58" pos:column="66">link<pos:position pos:line="58" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="60" pos:column="25">kept<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <literal type="number" pos:line="60" pos:column="32">1<pos:position pos:line="60" pos:column="33"/></literal></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then> <else pos:line="61" pos:column="19">else <block pos:line="61" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">do_unlink<pos:position pos:line="62" pos:column="34"/></name><argument_list pos:line="62" pos:column="34">(<argument><expr><name pos:line="62" pos:column="35">buf<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><call><name pos:line="63" pos:column="29">do_symlink<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name><name pos:line="63" pos:column="40">file<pos:position pos:line="63" pos:column="44"/></name><operator pos:line="63" pos:column="44">-&gt;<pos:position pos:line="63" pos:column="49"/></operator><name pos:line="63" pos:column="46">u<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">.<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="48">link<pos:position pos:line="63" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="54">buf<pos:position pos:line="63" pos:column="57"/></name></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call> <operator pos:line="63" pos:column="59">&lt;<pos:position pos:line="63" pos:column="63"/></operator> <literal type="number" pos:line="63" pos:column="61">0<pos:position pos:line="63" pos:column="62"/></literal>
			    <operator pos:line="64" pos:column="29">&amp;&amp;<pos:position pos:line="64" pos:column="39"/></operator> <operator pos:line="64" pos:column="32">(<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">errno<pos:position pos:line="64" pos:column="38"/></name> <operator pos:line="64" pos:column="39">!=<pos:position pos:line="64" pos:column="41"/></operator> <name pos:line="64" pos:column="42">ENOENT<pos:position pos:line="64" pos:column="48"/></name> <operator pos:line="64" pos:column="49">||<pos:position pos:line="64" pos:column="51"/></operator> <call><name pos:line="64" pos:column="52">make_bak_dir<pos:position pos:line="64" pos:column="64"/></name><argument_list pos:line="64" pos:column="64">(<argument><expr><name pos:line="64" pos:column="65">buf<pos:position pos:line="64" pos:column="68"/></name></expr></argument>)<pos:position pos:line="64" pos:column="69"/></argument_list></call> <operator pos:line="64" pos:column="70">&lt;<pos:position pos:line="64" pos:column="74"/></operator> <literal type="number" pos:line="64" pos:column="72">0<pos:position pos:line="64" pos:column="73"/></literal>
			     <operator pos:line="65" pos:column="30">||<pos:position pos:line="65" pos:column="32"/></operator> <call><name pos:line="65" pos:column="33">do_symlink<pos:position pos:line="65" pos:column="43"/></name><argument_list pos:line="65" pos:column="43">(<argument><expr><name><name pos:line="65" pos:column="44">file<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">-&gt;<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="50">u<pos:position pos:line="65" pos:column="51"/></name><operator pos:line="65" pos:column="51">.<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="52">link<pos:position pos:line="65" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="58">buf<pos:position pos:line="65" pos:column="61"/></name></expr></argument>)<pos:position pos:line="65" pos:column="62"/></argument_list></call> <operator pos:line="65" pos:column="63">&lt;<pos:position pos:line="65" pos:column="67"/></operator> <literal type="number" pos:line="65" pos:column="65">0<pos:position pos:line="65" pos:column="66"/></literal><operator pos:line="65" pos:column="66">)<pos:position pos:line="65" pos:column="67"/></operator></expr>)<pos:position pos:line="65" pos:column="68"/></condition><then pos:line="65" pos:column="68"> <block pos:line="65" pos:column="69">{
				<expr_stmt><expr><call><name pos:line="66" pos:column="33">rsyserr<pos:position pos:line="66" pos:column="40"/></name><argument_list pos:line="66" pos:column="40">(<argument><expr><name pos:line="66" pos:column="41">FERROR<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="49">errno<pos:position pos:line="66" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="56">"link %s -&gt; \"%s\""<pos:position pos:line="66" pos:column="78"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="67" pos:column="41">full_fname<pos:position pos:line="67" pos:column="51"/></name><argument_list pos:line="67" pos:column="51">(<argument><expr><name pos:line="67" pos:column="52">buf<pos:position pos:line="67" pos:column="55"/></name></expr></argument>)<pos:position pos:line="67" pos:column="56"/></argument_list></call></expr></argument>,
					<argument><expr><name><name pos:line="68" pos:column="41">file<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">-&gt;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="47">u<pos:position pos:line="68" pos:column="48"/></name><operator pos:line="68" pos:column="48">.<pos:position pos:line="68" pos:column="49"/></operator><name pos:line="68" pos:column="49">link<pos:position pos:line="68" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="69" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="70" pos:column="25">do_unlink<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">(<argument><expr><name pos:line="70" pos:column="35">fname<pos:position pos:line="70" pos:column="40"/></name></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">kept<pos:position pos:line="71" pos:column="29"/></name> <operator pos:line="71" pos:column="30">=<pos:position pos:line="71" pos:column="31"/></operator> <literal type="number" pos:line="71" pos:column="32">1<pos:position pos:line="71" pos:column="33"/></literal></expr>;<pos:position pos:line="71" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></else></if>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><operator pos:line="76" pos:column="13">!<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">kept<pos:position pos:line="76" pos:column="18"/></name> <operator pos:line="76" pos:column="19">&amp;&amp;<pos:position pos:line="76" pos:column="29"/></operator> <operator pos:line="76" pos:column="22">!<pos:position pos:line="76" pos:column="23"/></operator><call><name pos:line="76" pos:column="23">S_ISREG<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name><name pos:line="76" pos:column="31">file<pos:position pos:line="76" pos:column="35"/></name><operator pos:line="76" pos:column="35">-&gt;<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="37">mode<pos:position pos:line="76" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="43"/></condition><then pos:line="76" pos:column="43"> <block pos:line="76" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="77" pos:column="17">rprintf<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">FINFO<pos:position pos:line="77" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="32">"make_bak: skipping non-regular file %s\n"<pos:position pos:line="77" pos:column="74"/></literal></expr></argument>,
			<argument><expr><name pos:line="78" pos:column="25">fname<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
		<return pos:line="79" pos:column="17">return <expr><literal type="number" pos:line="79" pos:column="24">1<pos:position pos:line="79" pos:column="25"/></literal></expr>;<pos:position pos:line="79" pos:column="26"/></return>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="82" pos:column="9">/* move to keep tree if a file */</comment>
	<if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><operator pos:line="83" pos:column="13">!<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="14">kept<pos:position pos:line="83" pos:column="18"/></name></expr>)<pos:position pos:line="83" pos:column="19"/></condition><then pos:line="83" pos:column="19"> <block pos:line="83" pos:column="20">{
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><call><name pos:line="84" pos:column="21">robust_move<pos:position pos:line="84" pos:column="32"/></name><argument_list pos:line="84" pos:column="32">(<argument><expr><name pos:line="84" pos:column="33">fname<pos:position pos:line="84" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="40">buf<pos:position pos:line="84" pos:column="43"/></name></expr></argument>)<pos:position pos:line="84" pos:column="44"/></argument_list></call> <operator pos:line="84" pos:column="45">!=<pos:position pos:line="84" pos:column="47"/></operator> <literal type="number" pos:line="84" pos:column="48">0<pos:position pos:line="84" pos:column="49"/></literal></expr>)<pos:position pos:line="84" pos:column="50"/></condition><then pos:line="84" pos:column="50"> <block pos:line="84" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">rsyserr<pos:position pos:line="85" pos:column="32"/></name><argument_list pos:line="85" pos:column="32">(<argument><expr><name pos:line="85" pos:column="33">FERROR<pos:position pos:line="85" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="41">errno<pos:position pos:line="85" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="48">"keep_backup failed: %s -&gt; \"%s\""<pos:position pos:line="85" pos:column="85"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="86" pos:column="33">full_fname<pos:position pos:line="86" pos:column="43"/></name><argument_list pos:line="86" pos:column="43">(<argument><expr><name pos:line="86" pos:column="44">fname<pos:position pos:line="86" pos:column="49"/></name></expr></argument>)<pos:position pos:line="86" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="86" pos:column="52">buf<pos:position pos:line="86" pos:column="55"/></name></expr></argument>)<pos:position pos:line="86" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="87" pos:column="18"/></block></then> <elseif pos:line="87" pos:column="19">else <if pos:line="87" pos:column="24">if <condition pos:line="87" pos:column="27">(<expr><name><name pos:line="87" pos:column="28">st<pos:position pos:line="87" pos:column="30"/></name><operator pos:line="87" pos:column="30">.<pos:position pos:line="87" pos:column="31"/></operator><name pos:line="87" pos:column="31">st_nlink<pos:position pos:line="87" pos:column="39"/></name></name> <operator pos:line="87" pos:column="40">&gt;<pos:position pos:line="87" pos:column="44"/></operator> <literal type="number" pos:line="87" pos:column="42">1<pos:position pos:line="87" pos:column="43"/></literal></expr>)<pos:position pos:line="87" pos:column="44"/></condition><then pos:line="87" pos:column="44"> <block pos:line="87" pos:column="45">{
			<comment type="block" pos:line="88" pos:column="25">/* If someone has hard-linked the file into the backup
			 * dir, rename() might return success but do nothing! */</comment>
			<expr_stmt><expr><call><name pos:line="90" pos:column="25">robust_unlink<pos:position pos:line="90" pos:column="38"/></name><argument_list pos:line="90" pos:column="38">(<argument><expr><name pos:line="90" pos:column="39">fname<pos:position pos:line="90" pos:column="44"/></name></expr></argument>)<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="46"/></expr_stmt> <comment type="block" pos:line="90" pos:column="47">/* Just in case... */</comment>
		}<pos:position pos:line="91" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="92" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">set_file_attrs<pos:position pos:line="93" pos:column="23"/></name><argument_list pos:line="93" pos:column="23">(<argument><expr><name pos:line="93" pos:column="24">buf<pos:position pos:line="93" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="29">file<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="35">NULL<pos:position pos:line="93" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="41">0<pos:position pos:line="93" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">free<pos:position pos:line="94" pos:column="13"/></name><argument_list pos:line="94" pos:column="13">(<argument><expr><name pos:line="94" pos:column="14">file<pos:position pos:line="94" pos:column="18"/></name></expr></argument>)<pos:position pos:line="94" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="20"/></expr_stmt>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">verbose<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">&gt;<pos:position pos:line="96" pos:column="25"/></operator> <literal type="number" pos:line="96" pos:column="23">1<pos:position pos:line="96" pos:column="24"/></literal></expr>)<pos:position pos:line="96" pos:column="25"/></condition><then pos:line="96" pos:column="25"> <block pos:line="96" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">rprintf<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><name pos:line="97" pos:column="25">FINFO<pos:position pos:line="97" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="32">"backed up %s to %s\n"<pos:position pos:line="97" pos:column="54"/></literal></expr></argument>,
			<argument><expr><name pos:line="98" pos:column="25">fname<pos:position pos:line="98" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="32">buf<pos:position pos:line="98" pos:column="35"/></name></expr></argument>)<pos:position pos:line="98" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="99" pos:column="10"/></block></then></if>
	<return pos:line="100" pos:column="9">return <expr><literal type="number" pos:line="100" pos:column="16">1<pos:position pos:line="100" pos:column="17"/></literal></expr>;<pos:position pos:line="100" pos:column="18"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_344_rsync-2.6.6.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_struct<pos:position pos:line="1" pos:column="19"/></name></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">make_file<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fname<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">file_list<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">flist<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
			      <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">filter_level<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">lastdir<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">int<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">lastdir_len<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><operator pos:line="5" pos:column="34">-<pos:position pos:line="5" pos:column="35"/></operator><literal type="number" pos:line="5" pos:column="35">1<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">file_struct<pos:position pos:line="6" pos:column="27"/></name></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">file<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">STRUCT_STAT<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">sum<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">SUM_LENGTH<pos:position pos:line="8" pos:column="28"/></name></expr>]<pos:position pos:line="8" pos:column="29"/></index></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">thisname<pos:position pos:line="9" pos:column="22"/></name><index pos:line="9" pos:column="22">[<expr><name pos:line="9" pos:column="23">MAXPATHLEN<pos:position pos:line="9" pos:column="33"/></name></expr>]<pos:position pos:line="9" pos:column="34"/></index></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">linkname<pos:position pos:line="10" pos:column="22"/></name><index pos:line="10" pos:column="22">[<expr><name pos:line="10" pos:column="23">MAXPATHLEN<pos:position pos:line="10" pos:column="33"/></name></expr>]<pos:position pos:line="10" pos:column="34"/></index></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">alloc_len<pos:position pos:line="11" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="24">basename_len<pos:position pos:line="11" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="38">dirname_len<pos:position pos:line="11" pos:column="49"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="51">linkname_len<pos:position pos:line="11" pos:column="63"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="65">sum_len<pos:position pos:line="11" pos:column="72"/></name></decl>;<pos:position pos:line="11" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">basename<pos:position pos:line="12" pos:column="23"/></name></decl>, <modifier pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="26">dirname<pos:position pos:line="12" pos:column="33"/></name></decl>, <modifier pos:line="12" pos:column="35">*<pos:position pos:line="12" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="36">bp<pos:position pos:line="12" pos:column="38"/></name></decl>;<pos:position pos:line="12" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">unsigned<pos:position pos:line="13" pos:column="17"/></name> <name pos:line="13" pos:column="18">short<pos:position pos:line="13" pos:column="23"/></name></type> <name pos:line="13" pos:column="24">flags<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">flist<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">||<pos:position pos:line="15" pos:column="22"/></operator> <operator pos:line="15" pos:column="23">!<pos:position pos:line="15" pos:column="24"/></operator><name><name pos:line="15" pos:column="24">flist<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">count<pos:position pos:line="15" pos:column="36"/></name></name></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">	<comment type="block" pos:line="15" pos:column="41">/* Ignore lastdir when invalid. */</comment>
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">lastdir_len<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="31">-<pos:position pos:line="16" pos:column="32"/></operator><literal type="number" pos:line="16" pos:column="32">1<pos:position pos:line="16" pos:column="33"/></literal></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">strlcpy<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">thisname<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">fname<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="38">sizeof <name pos:line="18" pos:column="45">thisname<pos:position pos:line="18" pos:column="53"/></name></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call>
	    <operator pos:line="19" pos:column="13">&gt;=<pos:position pos:line="19" pos:column="18"/></operator> <sizeof pos:line="19" pos:column="16">sizeof <name pos:line="19" pos:column="23">thisname<pos:position pos:line="19" pos:column="31"/></name></sizeof> <operator pos:line="19" pos:column="32">-<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">flist_dir_len<pos:position pos:line="19" pos:column="47"/></name></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">rprintf<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">FINFO<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"skipping overly long name: %s\n"<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="21" pos:column="25">safe_fname<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">fname<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">clean_fname<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">thisname<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">sanitize_paths<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">sanitize_path<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">thisname<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">thisname<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="51">""<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="55">0<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="28" pos:column="9">memset<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">sum<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="24">SUM_LENGTH<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">readlink_stat<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">thisname<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="37">&amp;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="38">st<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">linkname<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call> <operator pos:line="30" pos:column="52">!=<pos:position pos:line="30" pos:column="54"/></operator> <literal type="number" pos:line="30" pos:column="55">0<pos:position pos:line="30" pos:column="56"/></literal></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57"> <block pos:line="30" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name></type> <name pos:line="31" pos:column="21">save_errno<pos:position pos:line="31" pos:column="31"/></name> <init pos:line="31" pos:column="32">= <expr><name pos:line="31" pos:column="34">errno<pos:position pos:line="31" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="40"/></decl_stmt>
		<comment type="block" pos:line="32" pos:column="17">/* See if file is excluded before reporting an error. */</comment>
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">filter_level<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">!=<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">NO_FILTERS<pos:position pos:line="33" pos:column="47"/></name>
		    <operator pos:line="34" pos:column="21">&amp;&amp;<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="24">is_excluded<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">thisname<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="46">0<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">filter_level<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="63"/></condition><then pos:line="34" pos:column="63">
			<block type="pseudo"><return pos:line="35" pos:column="25">return <expr><name pos:line="35" pos:column="32">NULL<pos:position pos:line="35" pos:column="36"/></name></expr>;<pos:position pos:line="35" pos:column="37"/></return></block></then></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">save_errno<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">==<pos:position pos:line="36" pos:column="34"/></operator> <name pos:line="36" pos:column="35">ENOENT<pos:position pos:line="36" pos:column="41"/></name></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42"> <block pos:line="36" pos:column="43">{
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">SUPPORT_LINKS<pos:position pos:line="37" pos:column="21"/></name></cpp:ifdef>
			<comment type="block" pos:line="38" pos:column="25">/* Avoid "vanished" error if symlink points nowhere. */</comment>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">copy_links<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">&amp;&amp;<pos:position pos:line="39" pos:column="50"/></operator> <call><name pos:line="39" pos:column="43">do_lstat<pos:position pos:line="39" pos:column="51"/></name><argument_list pos:line="39" pos:column="51">(<argument><expr><name pos:line="39" pos:column="52">thisname<pos:position pos:line="39" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="62">&amp;<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="63">st<pos:position pos:line="39" pos:column="65"/></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call> <operator pos:line="39" pos:column="67">==<pos:position pos:line="39" pos:column="69"/></operator> <literal type="number" pos:line="39" pos:column="70">0<pos:position pos:line="39" pos:column="71"/></literal>
			    <operator pos:line="40" pos:column="29">&amp;&amp;<pos:position pos:line="40" pos:column="39"/></operator> <call><name pos:line="40" pos:column="32">S_ISLNK<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><name><name pos:line="40" pos:column="40">st<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">.<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="43">st_mode<pos:position pos:line="40" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="52"/></condition><then pos:line="40" pos:column="52"> <block pos:line="40" pos:column="53">{
				<expr_stmt><expr><name pos:line="41" pos:column="33">io_error<pos:position pos:line="41" pos:column="41"/></name> <operator pos:line="41" pos:column="42">|=<pos:position pos:line="41" pos:column="44"/></operator> <name pos:line="41" pos:column="45">IOERR_GENERAL<pos:position pos:line="41" pos:column="58"/></name></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="42" pos:column="33">rprintf<pos:position pos:line="42" pos:column="40"/></name><argument_list pos:line="42" pos:column="40">(<argument><expr><name pos:line="42" pos:column="41">FERROR<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="49">"symlink has no referent: %s\n"<pos:position pos:line="42" pos:column="80"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="43" pos:column="41">full_fname<pos:position pos:line="43" pos:column="51"/></name><argument_list pos:line="43" pos:column="51">(<argument><expr><name pos:line="43" pos:column="52">thisname<pos:position pos:line="43" pos:column="60"/></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="44" pos:column="26"/></block></then> <else pos:line="44" pos:column="27">else
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
			<block pos:line="46" pos:column="25">{
				<decl_stmt><decl><type><name><name pos:line="47" pos:column="33">enum<pos:position pos:line="47" pos:column="37"/></name> <name pos:line="47" pos:column="38">logcode<pos:position pos:line="47" pos:column="45"/></name></name></type> <name pos:line="47" pos:column="46">c<pos:position pos:line="47" pos:column="47"/></name> <init pos:line="47" pos:column="48">= <expr><ternary><condition><expr><name pos:line="47" pos:column="50">am_daemon<pos:position pos:line="47" pos:column="59"/></name> <operator pos:line="47" pos:column="60">&amp;&amp;<pos:position pos:line="47" pos:column="70"/></operator> <name pos:line="47" pos:column="63">protocol_version<pos:position pos:line="47" pos:column="79"/></name> <operator pos:line="47" pos:column="80">&lt;<pos:position pos:line="47" pos:column="84"/></operator> <literal type="number" pos:line="47" pos:column="82">28<pos:position pos:line="47" pos:column="84"/></literal></expr>
				    ?<pos:position pos:line="48" pos:column="38"/></condition><then pos:line="48" pos:column="38"> <expr><name pos:line="48" pos:column="39">FERROR<pos:position pos:line="48" pos:column="45"/></name></expr> <pos:position pos:line="48" pos:column="46"/></then><else pos:line="48" pos:column="46">: <expr><name pos:line="48" pos:column="48">FINFO<pos:position pos:line="48" pos:column="53"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="48" pos:column="54"/></decl_stmt>
				<expr_stmt><expr><name pos:line="49" pos:column="33">io_error<pos:position pos:line="49" pos:column="41"/></name> <operator pos:line="49" pos:column="42">|=<pos:position pos:line="49" pos:column="44"/></operator> <name pos:line="49" pos:column="45">IOERR_VANISHED<pos:position pos:line="49" pos:column="59"/></name></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="50" pos:column="33">rprintf<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">c<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="44">"file has vanished: %s\n"<pos:position pos:line="50" pos:column="69"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="51" pos:column="41">full_fname<pos:position pos:line="51" pos:column="51"/></name><argument_list pos:line="51" pos:column="51">(<argument><expr><name pos:line="51" pos:column="52">thisname<pos:position pos:line="51" pos:column="60"/></name></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></else></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then> <else pos:line="53" pos:column="19">else <block pos:line="53" pos:column="24">{
			<expr_stmt><expr><name pos:line="54" pos:column="25">io_error<pos:position pos:line="54" pos:column="33"/></name> <operator pos:line="54" pos:column="34">|=<pos:position pos:line="54" pos:column="36"/></operator> <name pos:line="54" pos:column="37">IOERR_GENERAL<pos:position pos:line="54" pos:column="50"/></name></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">rsyserr<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">FERROR<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">save_errno<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="53">"readlink %s failed"<pos:position pos:line="55" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="56" pos:column="33">full_fname<pos:position pos:line="56" pos:column="43"/></name><argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">thisname<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></else></if>
		<return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">NULL<pos:position pos:line="58" pos:column="28"/></name></expr>;<pos:position pos:line="58" pos:column="29"/></return>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="61" pos:column="9">/* backup.c calls us with filter_level set to NO_FILTERS. */</comment>
	<if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">filter_level<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">==<pos:position pos:line="62" pos:column="28"/></operator> <name pos:line="62" pos:column="29">NO_FILTERS<pos:position pos:line="62" pos:column="39"/></name></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40">
		<block type="pseudo"><goto pos:line="63" pos:column="17">goto <name pos:line="63" pos:column="22">skip_filters<pos:position pos:line="63" pos:column="34"/></name>;<pos:position pos:line="63" pos:column="35"/></goto></block></then></if>

	<if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><call><name pos:line="65" pos:column="13">S_ISDIR<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><name><name pos:line="65" pos:column="21">st<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">.<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">st_mode<pos:position pos:line="65" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call> <operator pos:line="65" pos:column="33">&amp;&amp;<pos:position pos:line="65" pos:column="43"/></operator> <operator pos:line="65" pos:column="36">!<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="37">xfer_dirs<pos:position pos:line="65" pos:column="46"/></name></expr>)<pos:position pos:line="65" pos:column="47"/></condition><then pos:line="65" pos:column="47"> <block pos:line="65" pos:column="48">{
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">rprintf<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">FINFO<pos:position pos:line="66" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="32">"skipping directory %s\n"<pos:position pos:line="66" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="59">safe_fname<pos:position pos:line="66" pos:column="69"/></name><argument_list pos:line="66" pos:column="69">(<argument><expr><name pos:line="66" pos:column="70">thisname<pos:position pos:line="66" pos:column="78"/></name></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="81"/></expr_stmt>
		<return pos:line="67" pos:column="17">return <expr><name pos:line="67" pos:column="24">NULL<pos:position pos:line="67" pos:column="28"/></name></expr>;<pos:position pos:line="67" pos:column="29"/></return>
	}<pos:position pos:line="68" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="70" pos:column="9">/* We only care about directories because we need to avoid recursing
	 * into a mount-point directory, not to avoid copying a symlinked
	 * file if -L (or similar) was specified. */</comment>
	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">one_file_system<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">&amp;&amp;<pos:position pos:line="73" pos:column="39"/></operator> <name><name pos:line="73" pos:column="32">st<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">.<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="35">st_dev<pos:position pos:line="73" pos:column="41"/></name></name> <operator pos:line="73" pos:column="42">!=<pos:position pos:line="73" pos:column="44"/></operator> <name pos:line="73" pos:column="45">filesystem_dev<pos:position pos:line="73" pos:column="59"/></name>
	    <operator pos:line="74" pos:column="13">&amp;&amp;<pos:position pos:line="74" pos:column="23"/></operator> <call><name pos:line="74" pos:column="16">S_ISDIR<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><name><name pos:line="74" pos:column="24">st<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">.<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="27">st_mode<pos:position pos:line="74" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="36"/></condition><then pos:line="74" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="17">flags<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">|=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">FLAG_MOUNT_POINT<pos:position pos:line="75" pos:column="42"/></name></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt></block></then></if>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name pos:line="77" pos:column="13">is_excluded<pos:position pos:line="77" pos:column="24"/></name><argument_list pos:line="77" pos:column="24">(<argument><expr><name pos:line="77" pos:column="25">thisname<pos:position pos:line="77" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="35">S_ISDIR<pos:position pos:line="77" pos:column="42"/></name><argument_list pos:line="77" pos:column="42">(<argument><expr><name><name pos:line="77" pos:column="43">st<pos:position pos:line="77" pos:column="45"/></name><operator pos:line="77" pos:column="45">.<pos:position pos:line="77" pos:column="46"/></operator><name pos:line="77" pos:column="46">st_mode<pos:position pos:line="77" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="54"/></argument_list></call> <operator pos:line="77" pos:column="55">!=<pos:position pos:line="77" pos:column="57"/></operator> <literal type="number" pos:line="77" pos:column="58">0<pos:position pos:line="77" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="61">filter_level<pos:position pos:line="77" pos:column="73"/></name></expr></argument>)<pos:position pos:line="77" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="75"/></condition><then pos:line="77" pos:column="75">
		<block type="pseudo"><return pos:line="78" pos:column="17">return <expr><name pos:line="78" pos:column="24">NULL<pos:position pos:line="78" pos:column="28"/></name></expr>;<pos:position pos:line="78" pos:column="29"/></return></block></then></if>

	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><call><name pos:line="80" pos:column="13">lp_ignore_nonreadable<pos:position pos:line="80" pos:column="34"/></name><argument_list pos:line="80" pos:column="34">(<argument><expr><name pos:line="80" pos:column="35">module_id<pos:position pos:line="80" pos:column="44"/></name></expr></argument>)<pos:position pos:line="80" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="46"/></condition><then pos:line="80" pos:column="46"> <block pos:line="80" pos:column="47">{
<cpp:ifdef pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">ifdef<pos:position pos:line="81" pos:column="7"/></cpp:directive> <name pos:line="81" pos:column="8">SUPPORT_LINKS<pos:position pos:line="81" pos:column="21"/></name></cpp:ifdef>
		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><operator pos:line="82" pos:column="21">!<pos:position pos:line="82" pos:column="22"/></operator><call><name pos:line="82" pos:column="22">S_ISLNK<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">(<argument><expr><name><name pos:line="82" pos:column="30">st<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">.<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="33">st_mode<pos:position pos:line="82" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="42"/></condition><then pos:line="82" pos:column="42">
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>
			<block type="pseudo"><if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><call><name pos:line="84" pos:column="29">access<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">(<argument><expr><name pos:line="84" pos:column="36">thisname<pos:position pos:line="84" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="46">R_OK<pos:position pos:line="84" pos:column="50"/></name></expr></argument>)<pos:position pos:line="84" pos:column="51"/></argument_list></call> <operator pos:line="84" pos:column="52">!=<pos:position pos:line="84" pos:column="54"/></operator> <literal type="number" pos:line="84" pos:column="55">0<pos:position pos:line="84" pos:column="56"/></literal></expr>)<pos:position pos:line="84" pos:column="57"/></condition><then pos:line="84" pos:column="57">
				<block type="pseudo"><return pos:line="85" pos:column="33">return <expr><name pos:line="85" pos:column="40">NULL<pos:position pos:line="85" pos:column="44"/></name></expr>;<pos:position pos:line="85" pos:column="45"/></return></block></then></if></block></then></if>
	}<pos:position pos:line="86" pos:column="10"/></block></then></if>

<label><name pos:line="88" pos:column="1">skip_filters<pos:position pos:line="88" pos:column="13"/></name>:<pos:position pos:line="88" pos:column="14"/></label>

	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name pos:line="90" pos:column="13">verbose<pos:position pos:line="90" pos:column="20"/></name> <operator pos:line="90" pos:column="21">&gt;<pos:position pos:line="90" pos:column="25"/></operator> <literal type="number" pos:line="90" pos:column="23">2<pos:position pos:line="90" pos:column="24"/></literal></expr>)<pos:position pos:line="90" pos:column="25"/></condition><then pos:line="90" pos:column="25"> <block pos:line="90" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="91" pos:column="17">rprintf<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">FINFO<pos:position pos:line="91" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="32">"[%s] make_file(%s,*,%d)\n"<pos:position pos:line="91" pos:column="59"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="92" pos:column="25">who_am_i<pos:position pos:line="92" pos:column="33"/></name><argument_list pos:line="92" pos:column="33">()<pos:position pos:line="92" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="92" pos:column="37">safe_fname<pos:position pos:line="92" pos:column="47"/></name><argument_list pos:line="92" pos:column="47">(<argument><expr><name pos:line="92" pos:column="48">thisname<pos:position pos:line="92" pos:column="56"/></name></expr></argument>)<pos:position pos:line="92" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="92" pos:column="59">filter_level<pos:position pos:line="92" pos:column="71"/></name></expr></argument>)<pos:position pos:line="92" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if>

	<if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><operator pos:line="95" pos:column="13">(<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="14">basename<pos:position pos:line="95" pos:column="22"/></name> <operator pos:line="95" pos:column="23">=<pos:position pos:line="95" pos:column="24"/></operator> <call><name pos:line="95" pos:column="25">strrchr<pos:position pos:line="95" pos:column="32"/></name><argument_list pos:line="95" pos:column="32">(<argument><expr><name pos:line="95" pos:column="33">thisname<pos:position pos:line="95" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="95" pos:column="43">'/'<pos:position pos:line="95" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="47"/></argument_list></call><operator pos:line="95" pos:column="47">)<pos:position pos:line="95" pos:column="48"/></operator> <operator pos:line="95" pos:column="49">!=<pos:position pos:line="95" pos:column="51"/></operator> <name pos:line="95" pos:column="52">NULL<pos:position pos:line="95" pos:column="56"/></name></expr>)<pos:position pos:line="95" pos:column="57"/></condition><then pos:line="95" pos:column="57"> <block pos:line="95" pos:column="58">{
		<expr_stmt><expr><name pos:line="96" pos:column="17">dirname_len<pos:position pos:line="96" pos:column="28"/></name> <operator pos:line="96" pos:column="29">=<pos:position pos:line="96" pos:column="30"/></operator> <operator pos:line="96" pos:column="31">++<pos:position pos:line="96" pos:column="33"/></operator><name pos:line="96" pos:column="33">basename<pos:position pos:line="96" pos:column="41"/></name> <operator pos:line="96" pos:column="42">-<pos:position pos:line="96" pos:column="43"/></operator> <name pos:line="96" pos:column="44">thisname<pos:position pos:line="96" pos:column="52"/></name></expr>;<pos:position pos:line="96" pos:column="53"/></expr_stmt> <comment type="block" pos:line="96" pos:column="54">/* counts future '\0' */</comment>
		<if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><name pos:line="97" pos:column="21">lastdir_len<pos:position pos:line="97" pos:column="32"/></name> <operator pos:line="97" pos:column="33">==<pos:position pos:line="97" pos:column="35"/></operator> <name pos:line="97" pos:column="36">dirname_len<pos:position pos:line="97" pos:column="47"/></name> <operator pos:line="97" pos:column="48">-<pos:position pos:line="97" pos:column="49"/></operator> <literal type="number" pos:line="97" pos:column="50">1<pos:position pos:line="97" pos:column="51"/></literal>
		    <operator pos:line="98" pos:column="21">&amp;&amp;<pos:position pos:line="98" pos:column="31"/></operator> <call><name pos:line="98" pos:column="24">strncmp<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name pos:line="98" pos:column="32">thisname<pos:position pos:line="98" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="42">lastdir<pos:position pos:line="98" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="51">lastdir_len<pos:position pos:line="98" pos:column="62"/></name></expr></argument>)<pos:position pos:line="98" pos:column="63"/></argument_list></call> <operator pos:line="98" pos:column="64">==<pos:position pos:line="98" pos:column="66"/></operator> <literal type="number" pos:line="98" pos:column="67">0<pos:position pos:line="98" pos:column="68"/></literal></expr>)<pos:position pos:line="98" pos:column="69"/></condition><then pos:line="98" pos:column="69"> <block pos:line="98" pos:column="70">{
			<expr_stmt><expr><name pos:line="99" pos:column="25">dirname<pos:position pos:line="99" pos:column="32"/></name> <operator pos:line="99" pos:column="33">=<pos:position pos:line="99" pos:column="34"/></operator> <name pos:line="99" pos:column="35">lastdir<pos:position pos:line="99" pos:column="42"/></name></expr>;<pos:position pos:line="99" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="100" pos:column="25">dirname_len<pos:position pos:line="100" pos:column="36"/></name> <operator pos:line="100" pos:column="37">=<pos:position pos:line="100" pos:column="38"/></operator> <literal type="number" pos:line="100" pos:column="39">0<pos:position pos:line="100" pos:column="40"/></literal></expr>;<pos:position pos:line="100" pos:column="41"/></expr_stmt> <comment type="block" pos:line="100" pos:column="42">/* indicates no copy is needed */</comment>
		}<pos:position pos:line="101" pos:column="18"/></block></then> <else pos:line="101" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="25">dirname<pos:position pos:line="102" pos:column="32"/></name> <operator pos:line="102" pos:column="33">=<pos:position pos:line="102" pos:column="34"/></operator> <name pos:line="102" pos:column="35">thisname<pos:position pos:line="102" pos:column="43"/></name></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt></block></else></if>
	}<pos:position pos:line="103" pos:column="10"/></block></then> <else pos:line="103" pos:column="11">else <block pos:line="103" pos:column="16">{
		<expr_stmt><expr><name pos:line="104" pos:column="17">basename<pos:position pos:line="104" pos:column="25"/></name> <operator pos:line="104" pos:column="26">=<pos:position pos:line="104" pos:column="27"/></operator> <name pos:line="104" pos:column="28">thisname<pos:position pos:line="104" pos:column="36"/></name></expr>;<pos:position pos:line="104" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="105" pos:column="17">dirname<pos:position pos:line="105" pos:column="24"/></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <name pos:line="105" pos:column="27">NULL<pos:position pos:line="105" pos:column="31"/></name></expr>;<pos:position pos:line="105" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><name pos:line="106" pos:column="17">dirname_len<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <literal type="number" pos:line="106" pos:column="31">0<pos:position pos:line="106" pos:column="32"/></literal></expr>;<pos:position pos:line="106" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="107" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="108" pos:column="9">basename_len<pos:position pos:line="108" pos:column="21"/></name> <operator pos:line="108" pos:column="22">=<pos:position pos:line="108" pos:column="23"/></operator> <call><name pos:line="108" pos:column="24">strlen<pos:position pos:line="108" pos:column="30"/></name><argument_list pos:line="108" pos:column="30">(<argument><expr><name pos:line="108" pos:column="31">basename<pos:position pos:line="108" pos:column="39"/></name></expr></argument>)<pos:position pos:line="108" pos:column="40"/></argument_list></call> <operator pos:line="108" pos:column="41">+<pos:position pos:line="108" pos:column="42"/></operator> <literal type="number" pos:line="108" pos:column="43">1<pos:position pos:line="108" pos:column="44"/></literal></expr>;<pos:position pos:line="108" pos:column="45"/></expr_stmt> <comment type="block" pos:line="108" pos:column="46">/* count the '\0' */</comment>

<cpp:ifdef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifdef<pos:position pos:line="110" pos:column="7"/></cpp:directive> <name pos:line="110" pos:column="8">SUPPORT_LINKS<pos:position pos:line="110" pos:column="21"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="111" pos:column="9">linkname_len<pos:position pos:line="111" pos:column="21"/></name> <operator pos:line="111" pos:column="22">=<pos:position pos:line="111" pos:column="23"/></operator> <ternary><condition><expr><call><name pos:line="111" pos:column="24">S_ISLNK<pos:position pos:line="111" pos:column="31"/></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name><name pos:line="111" pos:column="32">st<pos:position pos:line="111" pos:column="34"/></name><operator pos:line="111" pos:column="34">.<pos:position pos:line="111" pos:column="35"/></operator><name pos:line="111" pos:column="35">st_mode<pos:position pos:line="111" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="43"/></argument_list></call></expr> ?<pos:position pos:line="111" pos:column="45"/></condition><then pos:line="111" pos:column="45"> <expr><call><name pos:line="111" pos:column="46">strlen<pos:position pos:line="111" pos:column="52"/></name><argument_list pos:line="111" pos:column="52">(<argument><expr><name pos:line="111" pos:column="53">linkname<pos:position pos:line="111" pos:column="61"/></name></expr></argument>)<pos:position pos:line="111" pos:column="62"/></argument_list></call> <operator pos:line="111" pos:column="63">+<pos:position pos:line="111" pos:column="64"/></operator> <literal type="number" pos:line="111" pos:column="65">1<pos:position pos:line="111" pos:column="66"/></literal></expr> <pos:position pos:line="111" pos:column="67"/></then><else pos:line="111" pos:column="67">: <expr><literal type="number" pos:line="111" pos:column="69">0<pos:position pos:line="111" pos:column="70"/></literal></expr></else></ternary></expr>;<pos:position pos:line="111" pos:column="71"/></expr_stmt>
<cpp:else pos:line="112" pos:column="1">#<cpp:directive pos:line="112" pos:column="2">else<pos:position pos:line="112" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="113" pos:column="9">linkname_len<pos:position pos:line="113" pos:column="21"/></name> <operator pos:line="113" pos:column="22">=<pos:position pos:line="113" pos:column="23"/></operator> <literal type="number" pos:line="113" pos:column="24">0<pos:position pos:line="113" pos:column="25"/></literal></expr>;<pos:position pos:line="113" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="116" pos:column="9">sum_len<pos:position pos:line="116" pos:column="16"/></name> <operator pos:line="116" pos:column="17">=<pos:position pos:line="116" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="116" pos:column="19">always_checksum<pos:position pos:line="116" pos:column="34"/></name> <operator pos:line="116" pos:column="35">&amp;&amp;<pos:position pos:line="116" pos:column="45"/></operator> <call><name pos:line="116" pos:column="38">S_ISREG<pos:position pos:line="116" pos:column="45"/></name><argument_list pos:line="116" pos:column="45">(<argument><expr><name><name pos:line="116" pos:column="46">st<pos:position pos:line="116" pos:column="48"/></name><operator pos:line="116" pos:column="48">.<pos:position pos:line="116" pos:column="49"/></operator><name pos:line="116" pos:column="49">st_mode<pos:position pos:line="116" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="57"/></argument_list></call></expr> ?<pos:position pos:line="116" pos:column="59"/></condition><then pos:line="116" pos:column="59"> <expr><name pos:line="116" pos:column="60">MD4_SUM_LENGTH<pos:position pos:line="116" pos:column="74"/></name></expr> <pos:position pos:line="116" pos:column="75"/></then><else pos:line="116" pos:column="75">: <expr><literal type="number" pos:line="116" pos:column="77">0<pos:position pos:line="116" pos:column="78"/></literal></expr></else></ternary></expr>;<pos:position pos:line="116" pos:column="79"/></expr_stmt>

	<expr_stmt><expr><name pos:line="118" pos:column="9">alloc_len<pos:position pos:line="118" pos:column="18"/></name> <operator pos:line="118" pos:column="19">=<pos:position pos:line="118" pos:column="20"/></operator> <name pos:line="118" pos:column="21">file_struct_len<pos:position pos:line="118" pos:column="36"/></name> <operator pos:line="118" pos:column="37">+<pos:position pos:line="118" pos:column="38"/></operator> <name pos:line="118" pos:column="39">dirname_len<pos:position pos:line="118" pos:column="50"/></name> <operator pos:line="118" pos:column="51">+<pos:position pos:line="118" pos:column="52"/></operator> <name pos:line="118" pos:column="53">basename_len<pos:position pos:line="118" pos:column="65"/></name>
	    <operator pos:line="119" pos:column="13">+<pos:position pos:line="119" pos:column="14"/></operator> <name pos:line="119" pos:column="15">linkname_len<pos:position pos:line="119" pos:column="27"/></name> <operator pos:line="119" pos:column="28">+<pos:position pos:line="119" pos:column="29"/></operator> <name pos:line="119" pos:column="30">sum_len<pos:position pos:line="119" pos:column="37"/></name></expr>;<pos:position pos:line="119" pos:column="38"/></expr_stmt>
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">flist<pos:position pos:line="120" pos:column="18"/></name></expr>)<pos:position pos:line="120" pos:column="19"/></condition><then pos:line="120" pos:column="19"> <block pos:line="120" pos:column="20">{
		<expr_stmt><expr><name pos:line="121" pos:column="17">bp<pos:position pos:line="121" pos:column="19"/></name> <operator pos:line="121" pos:column="20">=<pos:position pos:line="121" pos:column="21"/></operator> <call><name pos:line="121" pos:column="22">pool_alloc<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name><name pos:line="121" pos:column="33">flist<pos:position pos:line="121" pos:column="38"/></name><operator pos:line="121" pos:column="38">-&gt;<pos:position pos:line="121" pos:column="43"/></operator><name pos:line="121" pos:column="40">file_pool<pos:position pos:line="121" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="121" pos:column="51">alloc_len<pos:position pos:line="121" pos:column="60"/></name></expr></argument>,
		    <argument><expr><literal type="string" pos:line="122" pos:column="21">"receive_file_entry"<pos:position pos:line="122" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="123" pos:column="10"/></block></then> <else pos:line="123" pos:column="11">else <block pos:line="123" pos:column="16">{
		<if pos:line="124" pos:column="17">if <condition pos:line="124" pos:column="20">(<expr><operator pos:line="124" pos:column="21">!<pos:position pos:line="124" pos:column="22"/></operator><operator pos:line="124" pos:column="22">(<pos:position pos:line="124" pos:column="23"/></operator><name pos:line="124" pos:column="23">bp<pos:position pos:line="124" pos:column="25"/></name> <operator pos:line="124" pos:column="26">=<pos:position pos:line="124" pos:column="27"/></operator> <call><name pos:line="124" pos:column="28">new_array<pos:position pos:line="124" pos:column="37"/></name><argument_list pos:line="124" pos:column="37">(<argument><expr><name pos:line="124" pos:column="38">char<pos:position pos:line="124" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="44">alloc_len<pos:position pos:line="124" pos:column="53"/></name></expr></argument>)<pos:position pos:line="124" pos:column="54"/></argument_list></call><operator pos:line="124" pos:column="54">)<pos:position pos:line="124" pos:column="55"/></operator></expr>)<pos:position pos:line="124" pos:column="56"/></condition><then pos:line="124" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="25">out_of_memory<pos:position pos:line="125" pos:column="38"/></name><argument_list pos:line="125" pos:column="38">(<argument><expr><literal type="string" pos:line="125" pos:column="39">"receive_file_entry"<pos:position pos:line="125" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="61"/></expr_stmt></block></then></if>
	}<pos:position pos:line="126" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="128" pos:column="9">file<pos:position pos:line="128" pos:column="13"/></name> <operator pos:line="128" pos:column="14">=<pos:position pos:line="128" pos:column="15"/></operator> <operator pos:line="128" pos:column="16">(<pos:position pos:line="128" pos:column="17"/></operator>struct <name pos:line="128" pos:column="24">file_struct<pos:position pos:line="128" pos:column="35"/></name> <operator pos:line="128" pos:column="36">*<pos:position pos:line="128" pos:column="37"/></operator><operator pos:line="128" pos:column="37">)<pos:position pos:line="128" pos:column="38"/></operator><name pos:line="128" pos:column="38">bp<pos:position pos:line="128" pos:column="40"/></name></expr>;<pos:position pos:line="128" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">memset<pos:position pos:line="129" pos:column="15"/></name><argument_list pos:line="129" pos:column="15">(<argument><expr><name pos:line="129" pos:column="16">bp<pos:position pos:line="129" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="20">0<pos:position pos:line="129" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="23">file_struct_len<pos:position pos:line="129" pos:column="38"/></name></expr></argument>)<pos:position pos:line="129" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="130" pos:column="9">bp<pos:position pos:line="130" pos:column="11"/></name> <operator pos:line="130" pos:column="12">+=<pos:position pos:line="130" pos:column="14"/></operator> <name pos:line="130" pos:column="15">file_struct_len<pos:position pos:line="130" pos:column="30"/></name></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="132" pos:column="9">file<pos:position pos:line="132" pos:column="13"/></name><operator pos:line="132" pos:column="13">-&gt;<pos:position pos:line="132" pos:column="18"/></operator><name pos:line="132" pos:column="15">flags<pos:position pos:line="132" pos:column="20"/></name></name> <operator pos:line="132" pos:column="21">=<pos:position pos:line="132" pos:column="22"/></operator> <name pos:line="132" pos:column="23">flags<pos:position pos:line="132" pos:column="28"/></name></expr>;<pos:position pos:line="132" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="133" pos:column="9">file<pos:position pos:line="133" pos:column="13"/></name><operator pos:line="133" pos:column="13">-&gt;<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="15">modtime<pos:position pos:line="133" pos:column="22"/></name></name> <operator pos:line="133" pos:column="23">=<pos:position pos:line="133" pos:column="24"/></operator> <name><name pos:line="133" pos:column="25">st<pos:position pos:line="133" pos:column="27"/></name><operator pos:line="133" pos:column="27">.<pos:position pos:line="133" pos:column="28"/></operator><name pos:line="133" pos:column="28">st_mtime<pos:position pos:line="133" pos:column="36"/></name></name></expr>;<pos:position pos:line="133" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="134" pos:column="9">file<pos:position pos:line="134" pos:column="13"/></name><operator pos:line="134" pos:column="13">-&gt;<pos:position pos:line="134" pos:column="18"/></operator><name pos:line="134" pos:column="15">length<pos:position pos:line="134" pos:column="21"/></name></name> <operator pos:line="134" pos:column="22">=<pos:position pos:line="134" pos:column="23"/></operator> <name><name pos:line="134" pos:column="24">st<pos:position pos:line="134" pos:column="26"/></name><operator pos:line="134" pos:column="26">.<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="27">st_size<pos:position pos:line="134" pos:column="34"/></name></name></expr>;<pos:position pos:line="134" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="135" pos:column="9">file<pos:position pos:line="135" pos:column="13"/></name><operator pos:line="135" pos:column="13">-&gt;<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="15">mode<pos:position pos:line="135" pos:column="19"/></name></name> <operator pos:line="135" pos:column="20">=<pos:position pos:line="135" pos:column="21"/></operator> <name><name pos:line="135" pos:column="22">st<pos:position pos:line="135" pos:column="24"/></name><operator pos:line="135" pos:column="24">.<pos:position pos:line="135" pos:column="25"/></operator><name pos:line="135" pos:column="25">st_mode<pos:position pos:line="135" pos:column="32"/></name></name></expr>;<pos:position pos:line="135" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="136" pos:column="9">file<pos:position pos:line="136" pos:column="13"/></name><operator pos:line="136" pos:column="13">-&gt;<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="15">uid<pos:position pos:line="136" pos:column="18"/></name></name> <operator pos:line="136" pos:column="19">=<pos:position pos:line="136" pos:column="20"/></operator> <name><name pos:line="136" pos:column="21">st<pos:position pos:line="136" pos:column="23"/></name><operator pos:line="136" pos:column="23">.<pos:position pos:line="136" pos:column="24"/></operator><name pos:line="136" pos:column="24">st_uid<pos:position pos:line="136" pos:column="30"/></name></name></expr>;<pos:position pos:line="136" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="137" pos:column="9">file<pos:position pos:line="137" pos:column="13"/></name><operator pos:line="137" pos:column="13">-&gt;<pos:position pos:line="137" pos:column="18"/></operator><name pos:line="137" pos:column="15">gid<pos:position pos:line="137" pos:column="18"/></name></name> <operator pos:line="137" pos:column="19">=<pos:position pos:line="137" pos:column="20"/></operator> <name><name pos:line="137" pos:column="21">st<pos:position pos:line="137" pos:column="23"/></name><operator pos:line="137" pos:column="23">.<pos:position pos:line="137" pos:column="24"/></operator><name pos:line="137" pos:column="24">st_gid<pos:position pos:line="137" pos:column="30"/></name></name></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>

<cpp:ifdef pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">ifdef<pos:position pos:line="139" pos:column="7"/></cpp:directive> <name pos:line="139" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="139" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><name pos:line="140" pos:column="13">flist<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">&amp;&amp;<pos:position pos:line="140" pos:column="29"/></operator> <name><name pos:line="140" pos:column="22">flist<pos:position pos:line="140" pos:column="27"/></name><operator pos:line="140" pos:column="27">-&gt;<pos:position pos:line="140" pos:column="32"/></operator><name pos:line="140" pos:column="29">hlink_pool<pos:position pos:line="140" pos:column="39"/></name></name></expr>)<pos:position pos:line="140" pos:column="40"/></condition><then pos:line="140" pos:column="40"> <block pos:line="140" pos:column="41">{
		<if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><name pos:line="141" pos:column="21">protocol_version<pos:position pos:line="141" pos:column="37"/></name> <operator pos:line="141" pos:column="38">&lt;<pos:position pos:line="141" pos:column="42"/></operator> <literal type="number" pos:line="141" pos:column="40">28<pos:position pos:line="141" pos:column="42"/></literal></expr>)<pos:position pos:line="141" pos:column="43"/></condition><then pos:line="141" pos:column="43"> <block pos:line="141" pos:column="44">{
			<if pos:line="142" pos:column="25">if <condition pos:line="142" pos:column="28">(<expr><call><name pos:line="142" pos:column="29">S_ISREG<pos:position pos:line="142" pos:column="36"/></name><argument_list pos:line="142" pos:column="36">(<argument><expr><name><name pos:line="142" pos:column="37">st<pos:position pos:line="142" pos:column="39"/></name><operator pos:line="142" pos:column="39">.<pos:position pos:line="142" pos:column="40"/></operator><name pos:line="142" pos:column="40">st_mode<pos:position pos:line="142" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="49"/></condition><then pos:line="142" pos:column="49">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="143" pos:column="33">file<pos:position pos:line="143" pos:column="37"/></name><operator pos:line="143" pos:column="37">-&gt;<pos:position pos:line="143" pos:column="42"/></operator><name pos:line="143" pos:column="39">link_u<pos:position pos:line="143" pos:column="45"/></name><operator pos:line="143" pos:column="45">.<pos:position pos:line="143" pos:column="46"/></operator><name pos:line="143" pos:column="46">idev<pos:position pos:line="143" pos:column="50"/></name></name> <operator pos:line="143" pos:column="51">=<pos:position pos:line="143" pos:column="52"/></operator> <call><name pos:line="143" pos:column="53">pool_talloc<pos:position pos:line="143" pos:column="64"/></name><argument_list pos:line="143" pos:column="64">(
				    <argument><expr><name><name pos:line="144" pos:column="37">flist<pos:position pos:line="144" pos:column="42"/></name><operator pos:line="144" pos:column="42">-&gt;<pos:position pos:line="144" pos:column="47"/></operator><name pos:line="144" pos:column="44">hlink_pool<pos:position pos:line="144" pos:column="54"/></name></name></expr></argument>, <argument><expr pos:line="144" pos:column="56">struct <name pos:line="144" pos:column="63">idev<pos:position pos:line="144" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="69">1<pos:position pos:line="144" pos:column="70"/></literal></expr></argument>,
				    <argument><expr><literal type="string" pos:line="145" pos:column="37">"inode_table"<pos:position pos:line="145" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="52"/></expr_stmt></block></then></if>
		}<pos:position pos:line="146" pos:column="18"/></block></then> <else pos:line="146" pos:column="19">else <block pos:line="146" pos:column="24">{
			<if pos:line="147" pos:column="25">if <condition pos:line="147" pos:column="28">(<expr><operator pos:line="147" pos:column="29">!<pos:position pos:line="147" pos:column="30"/></operator><call><name pos:line="147" pos:column="30">S_ISDIR<pos:position pos:line="147" pos:column="37"/></name><argument_list pos:line="147" pos:column="37">(<argument><expr><name><name pos:line="147" pos:column="38">st<pos:position pos:line="147" pos:column="40"/></name><operator pos:line="147" pos:column="40">.<pos:position pos:line="147" pos:column="41"/></operator><name pos:line="147" pos:column="41">st_mode<pos:position pos:line="147" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="49"/></argument_list></call> <operator pos:line="147" pos:column="50">&amp;&amp;<pos:position pos:line="147" pos:column="60"/></operator> <name><name pos:line="147" pos:column="53">st<pos:position pos:line="147" pos:column="55"/></name><operator pos:line="147" pos:column="55">.<pos:position pos:line="147" pos:column="56"/></operator><name pos:line="147" pos:column="56">st_nlink<pos:position pos:line="147" pos:column="64"/></name></name> <operator pos:line="147" pos:column="65">&gt;<pos:position pos:line="147" pos:column="69"/></operator> <literal type="number" pos:line="147" pos:column="67">1<pos:position pos:line="147" pos:column="68"/></literal></expr>)<pos:position pos:line="147" pos:column="69"/></condition><then pos:line="147" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="148" pos:column="33">file<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">-&gt;<pos:position pos:line="148" pos:column="42"/></operator><name pos:line="148" pos:column="39">link_u<pos:position pos:line="148" pos:column="45"/></name><operator pos:line="148" pos:column="45">.<pos:position pos:line="148" pos:column="46"/></operator><name pos:line="148" pos:column="46">idev<pos:position pos:line="148" pos:column="50"/></name></name> <operator pos:line="148" pos:column="51">=<pos:position pos:line="148" pos:column="52"/></operator> <call><name pos:line="148" pos:column="53">pool_talloc<pos:position pos:line="148" pos:column="64"/></name><argument_list pos:line="148" pos:column="64">(
				    <argument><expr><name><name pos:line="149" pos:column="37">flist<pos:position pos:line="149" pos:column="42"/></name><operator pos:line="149" pos:column="42">-&gt;<pos:position pos:line="149" pos:column="47"/></operator><name pos:line="149" pos:column="44">hlink_pool<pos:position pos:line="149" pos:column="54"/></name></name></expr></argument>, <argument><expr pos:line="149" pos:column="56">struct <name pos:line="149" pos:column="63">idev<pos:position pos:line="149" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="149" pos:column="69">1<pos:position pos:line="149" pos:column="70"/></literal></expr></argument>,
				    <argument><expr><literal type="string" pos:line="150" pos:column="37">"inode_table"<pos:position pos:line="150" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="52"/></expr_stmt></block></then></if>
		}<pos:position pos:line="151" pos:column="18"/></block></else></if>
	}<pos:position pos:line="152" pos:column="10"/></block></then></if>
	<if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name><name pos:line="153" pos:column="13">file<pos:position pos:line="153" pos:column="17"/></name><operator pos:line="153" pos:column="17">-&gt;<pos:position pos:line="153" pos:column="22"/></operator><name pos:line="153" pos:column="19">link_u<pos:position pos:line="153" pos:column="25"/></name><operator pos:line="153" pos:column="25">.<pos:position pos:line="153" pos:column="26"/></operator><name pos:line="153" pos:column="26">idev<pos:position pos:line="153" pos:column="30"/></name></name></expr>)<pos:position pos:line="153" pos:column="31"/></condition><then pos:line="153" pos:column="31"> <block pos:line="153" pos:column="32">{
		<expr_stmt><expr><name><name pos:line="154" pos:column="17">file<pos:position pos:line="154" pos:column="21"/></name><operator pos:line="154" pos:column="21">-&gt;<pos:position pos:line="154" pos:column="26"/></operator><name pos:line="154" pos:column="23">F_DEV<pos:position pos:line="154" pos:column="28"/></name></name> <operator pos:line="154" pos:column="29">=<pos:position pos:line="154" pos:column="30"/></operator> <name><name pos:line="154" pos:column="31">st<pos:position pos:line="154" pos:column="33"/></name><operator pos:line="154" pos:column="33">.<pos:position pos:line="154" pos:column="34"/></operator><name pos:line="154" pos:column="34">st_dev<pos:position pos:line="154" pos:column="40"/></name></name></expr>;<pos:position pos:line="154" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="155" pos:column="17">file<pos:position pos:line="155" pos:column="21"/></name><operator pos:line="155" pos:column="21">-&gt;<pos:position pos:line="155" pos:column="26"/></operator><name pos:line="155" pos:column="23">F_INODE<pos:position pos:line="155" pos:column="30"/></name></name> <operator pos:line="155" pos:column="31">=<pos:position pos:line="155" pos:column="32"/></operator> <name><name pos:line="155" pos:column="33">st<pos:position pos:line="155" pos:column="35"/></name><operator pos:line="155" pos:column="35">.<pos:position pos:line="155" pos:column="36"/></operator><name pos:line="155" pos:column="36">st_ino<pos:position pos:line="155" pos:column="42"/></name></name></expr>;<pos:position pos:line="155" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="156" pos:column="10"/></block></then></if>
<cpp:endif pos:line="157" pos:column="1">#<cpp:directive pos:line="157" pos:column="2">endif<pos:position pos:line="157" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><name pos:line="159" pos:column="13">dirname_len<pos:position pos:line="159" pos:column="24"/></name></expr>)<pos:position pos:line="159" pos:column="25"/></condition><then pos:line="159" pos:column="25"> <block pos:line="159" pos:column="26">{
		<expr_stmt><expr><name><name pos:line="160" pos:column="17">file<pos:position pos:line="160" pos:column="21"/></name><operator pos:line="160" pos:column="21">-&gt;<pos:position pos:line="160" pos:column="26"/></operator><name pos:line="160" pos:column="23">dirname<pos:position pos:line="160" pos:column="30"/></name></name> <operator pos:line="160" pos:column="31">=<pos:position pos:line="160" pos:column="32"/></operator> <name pos:line="160" pos:column="33">lastdir<pos:position pos:line="160" pos:column="40"/></name> <operator pos:line="160" pos:column="41">=<pos:position pos:line="160" pos:column="42"/></operator> <name pos:line="160" pos:column="43">bp<pos:position pos:line="160" pos:column="45"/></name></expr>;<pos:position pos:line="160" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="161" pos:column="17">lastdir_len<pos:position pos:line="161" pos:column="28"/></name> <operator pos:line="161" pos:column="29">=<pos:position pos:line="161" pos:column="30"/></operator> <name pos:line="161" pos:column="31">dirname_len<pos:position pos:line="161" pos:column="42"/></name> <operator pos:line="161" pos:column="43">-<pos:position pos:line="161" pos:column="44"/></operator> <literal type="number" pos:line="161" pos:column="45">1<pos:position pos:line="161" pos:column="46"/></literal></expr>;<pos:position pos:line="161" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="162" pos:column="17">memcpy<pos:position pos:line="162" pos:column="23"/></name><argument_list pos:line="162" pos:column="23">(<argument><expr><name pos:line="162" pos:column="24">bp<pos:position pos:line="162" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="28">dirname<pos:position pos:line="162" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="37">dirname_len<pos:position pos:line="162" pos:column="48"/></name> <operator pos:line="162" pos:column="49">-<pos:position pos:line="162" pos:column="50"/></operator> <literal type="number" pos:line="162" pos:column="51">1<pos:position pos:line="162" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="163" pos:column="17">bp<pos:position pos:line="163" pos:column="19"/></name> <operator pos:line="163" pos:column="20">+=<pos:position pos:line="163" pos:column="22"/></operator> <name pos:line="163" pos:column="23">dirname_len<pos:position pos:line="163" pos:column="34"/></name></expr>;<pos:position pos:line="163" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="164" pos:column="17">bp<pos:position pos:line="164" pos:column="19"/></name><index pos:line="164" pos:column="19">[<expr><operator pos:line="164" pos:column="20">-<pos:position pos:line="164" pos:column="21"/></operator><literal type="number" pos:line="164" pos:column="21">1<pos:position pos:line="164" pos:column="22"/></literal></expr>]<pos:position pos:line="164" pos:column="23"/></index></name> <operator pos:line="164" pos:column="24">=<pos:position pos:line="164" pos:column="25"/></operator> <literal type="char" pos:line="164" pos:column="26">'\0'<pos:position pos:line="164" pos:column="30"/></literal></expr>;<pos:position pos:line="164" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="165" pos:column="10"/></block></then> <elseif pos:line="165" pos:column="11">else <if pos:line="165" pos:column="16">if <condition pos:line="165" pos:column="19">(<expr><name pos:line="165" pos:column="20">dirname<pos:position pos:line="165" pos:column="27"/></name></expr>)<pos:position pos:line="165" pos:column="28"/></condition><then pos:line="165" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="166" pos:column="17">file<pos:position pos:line="166" pos:column="21"/></name><operator pos:line="166" pos:column="21">-&gt;<pos:position pos:line="166" pos:column="26"/></operator><name pos:line="166" pos:column="23">dirname<pos:position pos:line="166" pos:column="30"/></name></name> <operator pos:line="166" pos:column="31">=<pos:position pos:line="166" pos:column="32"/></operator> <name pos:line="166" pos:column="33">dirname<pos:position pos:line="166" pos:column="40"/></name></expr>;<pos:position pos:line="166" pos:column="41"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><name><name pos:line="168" pos:column="9">file<pos:position pos:line="168" pos:column="13"/></name><operator pos:line="168" pos:column="13">-&gt;<pos:position pos:line="168" pos:column="18"/></operator><name pos:line="168" pos:column="15">basename<pos:position pos:line="168" pos:column="23"/></name></name> <operator pos:line="168" pos:column="24">=<pos:position pos:line="168" pos:column="25"/></operator> <name pos:line="168" pos:column="26">bp<pos:position pos:line="168" pos:column="28"/></name></expr>;<pos:position pos:line="168" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="169" pos:column="9">memcpy<pos:position pos:line="169" pos:column="15"/></name><argument_list pos:line="169" pos:column="15">(<argument><expr><name pos:line="169" pos:column="16">bp<pos:position pos:line="169" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="20">basename<pos:position pos:line="169" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="30">basename_len<pos:position pos:line="169" pos:column="42"/></name></expr></argument>)<pos:position pos:line="169" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="170" pos:column="9">bp<pos:position pos:line="170" pos:column="11"/></name> <operator pos:line="170" pos:column="12">+=<pos:position pos:line="170" pos:column="14"/></operator> <name pos:line="170" pos:column="15">basename_len<pos:position pos:line="170" pos:column="27"/></name></expr>;<pos:position pos:line="170" pos:column="28"/></expr_stmt>

<cpp:ifdef pos:line="172" pos:column="1">#<cpp:directive pos:line="172" pos:column="2">ifdef<pos:position pos:line="172" pos:column="7"/></cpp:directive> <name pos:line="172" pos:column="8">HAVE_STRUCT_STAT_ST_RDEV<pos:position pos:line="172" pos:column="32"/></name></cpp:ifdef>
	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><name pos:line="173" pos:column="13">preserve_devices<pos:position pos:line="173" pos:column="29"/></name> <operator pos:line="173" pos:column="30">&amp;&amp;<pos:position pos:line="173" pos:column="40"/></operator> <call><name pos:line="173" pos:column="33">IS_DEVICE<pos:position pos:line="173" pos:column="42"/></name><argument_list pos:line="173" pos:column="42">(<argument><expr><name><name pos:line="173" pos:column="43">st<pos:position pos:line="173" pos:column="45"/></name><operator pos:line="173" pos:column="45">.<pos:position pos:line="173" pos:column="46"/></operator><name pos:line="173" pos:column="46">st_mode<pos:position pos:line="173" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="173" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="173" pos:column="55"/></condition><then pos:line="173" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="174" pos:column="17">file<pos:position pos:line="174" pos:column="21"/></name><operator pos:line="174" pos:column="21">-&gt;<pos:position pos:line="174" pos:column="26"/></operator><name pos:line="174" pos:column="23">u<pos:position pos:line="174" pos:column="24"/></name><operator pos:line="174" pos:column="24">.<pos:position pos:line="174" pos:column="25"/></operator><name pos:line="174" pos:column="25">rdev<pos:position pos:line="174" pos:column="29"/></name></name> <operator pos:line="174" pos:column="30">=<pos:position pos:line="174" pos:column="31"/></operator> <name><name pos:line="174" pos:column="32">st<pos:position pos:line="174" pos:column="34"/></name><operator pos:line="174" pos:column="34">.<pos:position pos:line="174" pos:column="35"/></operator><name pos:line="174" pos:column="35">st_rdev<pos:position pos:line="174" pos:column="42"/></name></name></expr>;<pos:position pos:line="174" pos:column="43"/></expr_stmt></block></then></if>
<cpp:endif pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">endif<pos:position pos:line="175" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">ifdef<pos:position pos:line="177" pos:column="7"/></cpp:directive> <name pos:line="177" pos:column="8">SUPPORT_LINKS<pos:position pos:line="177" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><name pos:line="178" pos:column="13">linkname_len<pos:position pos:line="178" pos:column="25"/></name></expr>)<pos:position pos:line="178" pos:column="26"/></condition><then pos:line="178" pos:column="26"> <block pos:line="178" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="179" pos:column="17">file<pos:position pos:line="179" pos:column="21"/></name><operator pos:line="179" pos:column="21">-&gt;<pos:position pos:line="179" pos:column="26"/></operator><name pos:line="179" pos:column="23">u<pos:position pos:line="179" pos:column="24"/></name><operator pos:line="179" pos:column="24">.<pos:position pos:line="179" pos:column="25"/></operator><name pos:line="179" pos:column="25">link<pos:position pos:line="179" pos:column="29"/></name></name> <operator pos:line="179" pos:column="30">=<pos:position pos:line="179" pos:column="31"/></operator> <name pos:line="179" pos:column="32">bp<pos:position pos:line="179" pos:column="34"/></name></expr>;<pos:position pos:line="179" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="180" pos:column="17">memcpy<pos:position pos:line="180" pos:column="23"/></name><argument_list pos:line="180" pos:column="23">(<argument><expr><name pos:line="180" pos:column="24">bp<pos:position pos:line="180" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="28">linkname<pos:position pos:line="180" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="180" pos:column="38">linkname_len<pos:position pos:line="180" pos:column="50"/></name></expr></argument>)<pos:position pos:line="180" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="181" pos:column="17">bp<pos:position pos:line="181" pos:column="19"/></name> <operator pos:line="181" pos:column="20">+=<pos:position pos:line="181" pos:column="22"/></operator> <name pos:line="181" pos:column="23">linkname_len<pos:position pos:line="181" pos:column="35"/></name></expr>;<pos:position pos:line="181" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="182" pos:column="10"/></block></then></if>
<cpp:endif pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">endif<pos:position pos:line="183" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">sum_len<pos:position pos:line="185" pos:column="20"/></name></expr>)<pos:position pos:line="185" pos:column="21"/></condition><then pos:line="185" pos:column="21"> <block pos:line="185" pos:column="22">{
		<expr_stmt><expr><name><name pos:line="186" pos:column="17">file<pos:position pos:line="186" pos:column="21"/></name><operator pos:line="186" pos:column="21">-&gt;<pos:position pos:line="186" pos:column="26"/></operator><name pos:line="186" pos:column="23">u<pos:position pos:line="186" pos:column="24"/></name><operator pos:line="186" pos:column="24">.<pos:position pos:line="186" pos:column="25"/></operator><name pos:line="186" pos:column="25">sum<pos:position pos:line="186" pos:column="28"/></name></name> <operator pos:line="186" pos:column="29">=<pos:position pos:line="186" pos:column="30"/></operator> <name pos:line="186" pos:column="31">bp<pos:position pos:line="186" pos:column="33"/></name></expr>;<pos:position pos:line="186" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="187" pos:column="17">file_checksum<pos:position pos:line="187" pos:column="30"/></name><argument_list pos:line="187" pos:column="30">(<argument><expr><name pos:line="187" pos:column="31">thisname<pos:position pos:line="187" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="41">bp<pos:position pos:line="187" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="45">st<pos:position pos:line="187" pos:column="47"/></name><operator pos:line="187" pos:column="47">.<pos:position pos:line="187" pos:column="48"/></operator><name pos:line="187" pos:column="48">st_size<pos:position pos:line="187" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="57"/></expr_stmt>
		<comment type="block" pos:line="188" pos:column="17">/*bp += sum_len;*/</comment>
	}<pos:position pos:line="189" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="191" pos:column="9">file<pos:position pos:line="191" pos:column="13"/></name><operator pos:line="191" pos:column="13">-&gt;<pos:position pos:line="191" pos:column="18"/></operator><name pos:line="191" pos:column="15">dir<pos:position pos:line="191" pos:column="18"/></name><operator pos:line="191" pos:column="18">.<pos:position pos:line="191" pos:column="19"/></operator><name pos:line="191" pos:column="19">root<pos:position pos:line="191" pos:column="23"/></name></name> <operator pos:line="191" pos:column="24">=<pos:position pos:line="191" pos:column="25"/></operator> <name pos:line="191" pos:column="26">flist_dir<pos:position pos:line="191" pos:column="35"/></name></expr>;<pos:position pos:line="191" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="193" pos:column="9">/* This code is only used by the receiver when it is building
	 * a list of files for a delete pass. */</comment>
	<if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><name pos:line="195" pos:column="13">keep_dirlinks<pos:position pos:line="195" pos:column="26"/></name> <operator pos:line="195" pos:column="27">&amp;&amp;<pos:position pos:line="195" pos:column="37"/></operator> <name pos:line="195" pos:column="30">linkname_len<pos:position pos:line="195" pos:column="42"/></name> <operator pos:line="195" pos:column="43">&amp;&amp;<pos:position pos:line="195" pos:column="53"/></operator> <name pos:line="195" pos:column="46">flist<pos:position pos:line="195" pos:column="51"/></name></expr>)<pos:position pos:line="195" pos:column="52"/></condition><then pos:line="195" pos:column="52"> <block pos:line="195" pos:column="53">{
		<decl_stmt><decl><type><name pos:line="196" pos:column="17">STRUCT_STAT<pos:position pos:line="196" pos:column="28"/></name></type> <name pos:line="196" pos:column="29">st2<pos:position pos:line="196" pos:column="32"/></name></decl>;<pos:position pos:line="196" pos:column="33"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="197" pos:column="17">int<pos:position pos:line="197" pos:column="20"/></name></type> <name pos:line="197" pos:column="21">save_mode<pos:position pos:line="197" pos:column="30"/></name> <init pos:line="197" pos:column="31">= <expr><name><name pos:line="197" pos:column="33">file<pos:position pos:line="197" pos:column="37"/></name><operator pos:line="197" pos:column="37">-&gt;<pos:position pos:line="197" pos:column="42"/></operator><name pos:line="197" pos:column="39">mode<pos:position pos:line="197" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="197" pos:column="44"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="198" pos:column="17">file<pos:position pos:line="198" pos:column="21"/></name><operator pos:line="198" pos:column="21">-&gt;<pos:position pos:line="198" pos:column="26"/></operator><name pos:line="198" pos:column="23">mode<pos:position pos:line="198" pos:column="27"/></name></name> <operator pos:line="198" pos:column="28">=<pos:position pos:line="198" pos:column="29"/></operator> <name pos:line="198" pos:column="30">S_IFDIR<pos:position pos:line="198" pos:column="37"/></name></expr>;<pos:position pos:line="198" pos:column="38"/></expr_stmt> <comment type="block" pos:line="198" pos:column="39">/* find a directory w/our name */</comment>
		<if pos:line="199" pos:column="17">if <condition pos:line="199" pos:column="20">(<expr><call><name pos:line="199" pos:column="21">flist_find<pos:position pos:line="199" pos:column="31"/></name><argument_list pos:line="199" pos:column="31">(<argument><expr><name pos:line="199" pos:column="32">the_file_list<pos:position pos:line="199" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="47">file<pos:position pos:line="199" pos:column="51"/></name></expr></argument>)<pos:position pos:line="199" pos:column="52"/></argument_list></call> <operator pos:line="199" pos:column="53">&gt;=<pos:position pos:line="199" pos:column="58"/></operator> <literal type="number" pos:line="199" pos:column="56">0<pos:position pos:line="199" pos:column="57"/></literal>
		    <operator pos:line="200" pos:column="21">&amp;&amp;<pos:position pos:line="200" pos:column="31"/></operator> <call><name pos:line="200" pos:column="24">do_stat<pos:position pos:line="200" pos:column="31"/></name><argument_list pos:line="200" pos:column="31">(<argument><expr><name pos:line="200" pos:column="32">thisname<pos:position pos:line="200" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="200" pos:column="42">&amp;<pos:position pos:line="200" pos:column="47"/></operator><name pos:line="200" pos:column="43">st2<pos:position pos:line="200" pos:column="46"/></name></expr></argument>)<pos:position pos:line="200" pos:column="47"/></argument_list></call> <operator pos:line="200" pos:column="48">==<pos:position pos:line="200" pos:column="50"/></operator> <literal type="number" pos:line="200" pos:column="51">0<pos:position pos:line="200" pos:column="52"/></literal> <operator pos:line="200" pos:column="53">&amp;&amp;<pos:position pos:line="200" pos:column="63"/></operator> <call><name pos:line="200" pos:column="56">S_ISDIR<pos:position pos:line="200" pos:column="63"/></name><argument_list pos:line="200" pos:column="63">(<argument><expr><name><name pos:line="200" pos:column="64">st2<pos:position pos:line="200" pos:column="67"/></name><operator pos:line="200" pos:column="67">.<pos:position pos:line="200" pos:column="68"/></operator><name pos:line="200" pos:column="68">st_mode<pos:position pos:line="200" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="200" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="200" pos:column="77"/></condition><then pos:line="200" pos:column="77"> <block pos:line="200" pos:column="78">{
			<expr_stmt><expr><name><name pos:line="201" pos:column="25">file<pos:position pos:line="201" pos:column="29"/></name><operator pos:line="201" pos:column="29">-&gt;<pos:position pos:line="201" pos:column="34"/></operator><name pos:line="201" pos:column="31">modtime<pos:position pos:line="201" pos:column="38"/></name></name> <operator pos:line="201" pos:column="39">=<pos:position pos:line="201" pos:column="40"/></operator> <name><name pos:line="201" pos:column="41">st2<pos:position pos:line="201" pos:column="44"/></name><operator pos:line="201" pos:column="44">.<pos:position pos:line="201" pos:column="45"/></operator><name pos:line="201" pos:column="45">st_mtime<pos:position pos:line="201" pos:column="53"/></name></name></expr>;<pos:position pos:line="201" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="202" pos:column="25">file<pos:position pos:line="202" pos:column="29"/></name><operator pos:line="202" pos:column="29">-&gt;<pos:position pos:line="202" pos:column="34"/></operator><name pos:line="202" pos:column="31">length<pos:position pos:line="202" pos:column="37"/></name></name> <operator pos:line="202" pos:column="38">=<pos:position pos:line="202" pos:column="39"/></operator> <name><name pos:line="202" pos:column="40">st2<pos:position pos:line="202" pos:column="43"/></name><operator pos:line="202" pos:column="43">.<pos:position pos:line="202" pos:column="44"/></operator><name pos:line="202" pos:column="44">st_size<pos:position pos:line="202" pos:column="51"/></name></name></expr>;<pos:position pos:line="202" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="203" pos:column="25">file<pos:position pos:line="203" pos:column="29"/></name><operator pos:line="203" pos:column="29">-&gt;<pos:position pos:line="203" pos:column="34"/></operator><name pos:line="203" pos:column="31">mode<pos:position pos:line="203" pos:column="35"/></name></name> <operator pos:line="203" pos:column="36">=<pos:position pos:line="203" pos:column="37"/></operator> <name><name pos:line="203" pos:column="38">st2<pos:position pos:line="203" pos:column="41"/></name><operator pos:line="203" pos:column="41">.<pos:position pos:line="203" pos:column="42"/></operator><name pos:line="203" pos:column="42">st_mode<pos:position pos:line="203" pos:column="49"/></name></name></expr>;<pos:position pos:line="203" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="204" pos:column="25">file<pos:position pos:line="204" pos:column="29"/></name><operator pos:line="204" pos:column="29">-&gt;<pos:position pos:line="204" pos:column="34"/></operator><name pos:line="204" pos:column="31">uid<pos:position pos:line="204" pos:column="34"/></name></name> <operator pos:line="204" pos:column="35">=<pos:position pos:line="204" pos:column="36"/></operator> <name><name pos:line="204" pos:column="37">st2<pos:position pos:line="204" pos:column="40"/></name><operator pos:line="204" pos:column="40">.<pos:position pos:line="204" pos:column="41"/></operator><name pos:line="204" pos:column="41">st_uid<pos:position pos:line="204" pos:column="47"/></name></name></expr>;<pos:position pos:line="204" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="205" pos:column="25">file<pos:position pos:line="205" pos:column="29"/></name><operator pos:line="205" pos:column="29">-&gt;<pos:position pos:line="205" pos:column="34"/></operator><name pos:line="205" pos:column="31">gid<pos:position pos:line="205" pos:column="34"/></name></name> <operator pos:line="205" pos:column="35">=<pos:position pos:line="205" pos:column="36"/></operator> <name><name pos:line="205" pos:column="37">st2<pos:position pos:line="205" pos:column="40"/></name><operator pos:line="205" pos:column="40">.<pos:position pos:line="205" pos:column="41"/></operator><name pos:line="205" pos:column="41">st_gid<pos:position pos:line="205" pos:column="47"/></name></name></expr>;<pos:position pos:line="205" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="206" pos:column="25">file<pos:position pos:line="206" pos:column="29"/></name><operator pos:line="206" pos:column="29">-&gt;<pos:position pos:line="206" pos:column="34"/></operator><name pos:line="206" pos:column="31">u<pos:position pos:line="206" pos:column="32"/></name><operator pos:line="206" pos:column="32">.<pos:position pos:line="206" pos:column="33"/></operator><name pos:line="206" pos:column="33">link<pos:position pos:line="206" pos:column="37"/></name></name> <operator pos:line="206" pos:column="38">=<pos:position pos:line="206" pos:column="39"/></operator> <name pos:line="206" pos:column="40">NULL<pos:position pos:line="206" pos:column="44"/></name></expr>;<pos:position pos:line="206" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="207" pos:column="18"/></block></then> <else pos:line="207" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="208" pos:column="25">file<pos:position pos:line="208" pos:column="29"/></name><operator pos:line="208" pos:column="29">-&gt;<pos:position pos:line="208" pos:column="34"/></operator><name pos:line="208" pos:column="31">mode<pos:position pos:line="208" pos:column="35"/></name></name> <operator pos:line="208" pos:column="36">=<pos:position pos:line="208" pos:column="37"/></operator> <name pos:line="208" pos:column="38">save_mode<pos:position pos:line="208" pos:column="47"/></name></expr>;<pos:position pos:line="208" pos:column="48"/></expr_stmt></block></else></if>
	}<pos:position pos:line="209" pos:column="10"/></block></then></if>

	<if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<expr><call><name pos:line="211" pos:column="13">S_ISREG<pos:position pos:line="211" pos:column="20"/></name><argument_list pos:line="211" pos:column="20">(<argument><expr><name><name pos:line="211" pos:column="21">st<pos:position pos:line="211" pos:column="23"/></name><operator pos:line="211" pos:column="23">.<pos:position pos:line="211" pos:column="24"/></operator><name pos:line="211" pos:column="24">st_mode<pos:position pos:line="211" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="32"/></argument_list></call> <operator pos:line="211" pos:column="33">||<pos:position pos:line="211" pos:column="35"/></operator> <call><name pos:line="211" pos:column="36">S_ISLNK<pos:position pos:line="211" pos:column="43"/></name><argument_list pos:line="211" pos:column="43">(<argument><expr><name><name pos:line="211" pos:column="44">st<pos:position pos:line="211" pos:column="46"/></name><operator pos:line="211" pos:column="46">.<pos:position pos:line="211" pos:column="47"/></operator><name pos:line="211" pos:column="47">st_mode<pos:position pos:line="211" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="211" pos:column="56"/></condition><then pos:line="211" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="212" pos:column="17">stats<pos:position pos:line="212" pos:column="22"/></name><operator pos:line="212" pos:column="22">.<pos:position pos:line="212" pos:column="23"/></operator><name pos:line="212" pos:column="23">total_size<pos:position pos:line="212" pos:column="33"/></name></name> <operator pos:line="212" pos:column="34">+=<pos:position pos:line="212" pos:column="36"/></operator> <name><name pos:line="212" pos:column="37">st<pos:position pos:line="212" pos:column="39"/></name><operator pos:line="212" pos:column="39">.<pos:position pos:line="212" pos:column="40"/></operator><name pos:line="212" pos:column="40">st_size<pos:position pos:line="212" pos:column="47"/></name></name></expr>;<pos:position pos:line="212" pos:column="48"/></expr_stmt></block></then></if>

	<return pos:line="214" pos:column="9">return <expr><name pos:line="214" pos:column="16">file<pos:position pos:line="214" pos:column="20"/></name></expr>;<pos:position pos:line="214" pos:column="21"/></return>
}<pos:position pos:line="215" pos:column="2"/></block></function></unit>

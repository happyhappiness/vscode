<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_518.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">hash_search<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">f<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">sum_struct<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">s<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,
			<parameter><decl><type><name><name pos:line="2" pos:column="25">struct<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">map_struct<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">buf<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="48">off_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">len<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">off_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">offset<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">j<pos:position pos:line="5" pos:column="14"/></name></decl>,<decl><type ref="prev"/><name pos:line="5" pos:column="15">k<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">end<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">sum2<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><name pos:line="7" pos:column="19">SUM_LENGTH<pos:position pos:line="7" pos:column="29"/></name></expr>]<pos:position pos:line="7" pos:column="30"/></index></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">uint32<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">s1<pos:position pos:line="8" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="20">s2<pos:position pos:line="8" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="24">sum<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt> 
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">signed<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">char<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">map<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">verbose<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&gt;<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">2<pos:position pos:line="11" pos:column="24"/></literal></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">fprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FINFO<pos:position pos:line="12" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="12" pos:column="31">"hash search b=%d len=%d\n"<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>,<argument><expr><name><name pos:line="12" pos:column="59">s<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">-&gt;<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="62">n<pos:position pos:line="12" pos:column="63"/></name></name></expr></argument>,<argument><expr><operator pos:line="12" pos:column="64">(<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="65">int<pos:position pos:line="12" pos:column="68"/></name><operator pos:line="12" pos:column="68">)<pos:position pos:line="12" pos:column="69"/></operator><name pos:line="12" pos:column="69">len<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">k<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">MIN<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">len<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="22">s<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">n<pos:position pos:line="14" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
	
	<expr_stmt><expr><name pos:line="16" pos:column="9">map<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <operator pos:line="16" pos:column="15">(<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">signed<pos:position pos:line="16" pos:column="22"/></name> <name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></operator><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator><call><name pos:line="16" pos:column="30">map_ptr<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">buf<pos:position pos:line="16" pos:column="41"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="42">0<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>,<argument><expr><name pos:line="16" pos:column="44">k<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>
	
	<expr_stmt><expr><name pos:line="18" pos:column="9">sum<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">get_checksum1<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><operator pos:line="18" pos:column="29">(<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">char<pos:position pos:line="18" pos:column="34"/></name> <operator pos:line="18" pos:column="35">*<pos:position pos:line="18" pos:column="36"/></operator><operator pos:line="18" pos:column="36">)<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">map<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="42">k<pos:position pos:line="18" pos:column="43"/></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><name pos:line="19" pos:column="9">s1<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">sum<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">&amp;<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="20">0xFFFF<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">s2<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">sum<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">&gt;&gt;<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="21">16<pos:position pos:line="20" pos:column="23"/></literal></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">verbose<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&gt;<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="23">3<pos:position pos:line="21" pos:column="24"/></literal></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">fprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">FINFO<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="32">"sum=%.8x k=%d\n"<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">sum<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="56">k<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt></block></then></if>
	
	<expr_stmt><expr><name pos:line="24" pos:column="9">offset<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
	
	<expr_stmt><expr><name pos:line="26" pos:column="9">end<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">len<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">+<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="21">1<pos:position pos:line="26" pos:column="22"/></literal> <operator pos:line="26" pos:column="23">-<pos:position pos:line="26" pos:column="24"/></operator> <name><name pos:line="26" pos:column="25">s<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">sums<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name><name pos:line="26" pos:column="33">s<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">-&gt;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="36">count<pos:position pos:line="26" pos:column="41"/></name></name><operator pos:line="26" pos:column="41">-<pos:position pos:line="26" pos:column="42"/></operator><literal type="number" pos:line="26" pos:column="42">1<pos:position pos:line="26" pos:column="43"/></literal></expr>]<pos:position pos:line="26" pos:column="44"/></index></name><operator pos:line="26" pos:column="44">.<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="45">len<pos:position pos:line="26" pos:column="48"/></name></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
	
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">verbose<pos:position pos:line="28" pos:column="20"/></name> <operator pos:line="28" pos:column="21">&gt;<pos:position pos:line="28" pos:column="25"/></operator> <literal type="number" pos:line="28" pos:column="23">3<pos:position pos:line="28" pos:column="24"/></literal></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">fprintf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">FINFO<pos:position pos:line="29" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="31">"hash search s-&gt;n=%d len=%d count=%d\n"<pos:position pos:line="29" pos:column="73"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="30" pos:column="25">s<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">n<pos:position pos:line="30" pos:column="29"/></name></name></expr></argument>,<argument><expr><operator pos:line="30" pos:column="30">(<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">int<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">)<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">len<pos:position pos:line="30" pos:column="38"/></name></expr></argument>,<argument><expr><name><name pos:line="30" pos:column="39">s<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">count<pos:position pos:line="30" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt></block></then></if>
	
	<do pos:line="32" pos:column="9">do <block pos:line="32" pos:column="12">{
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">tag<pos:position pos:line="33" pos:column="20"/></name></type> <name pos:line="33" pos:column="21">t<pos:position pos:line="33" pos:column="22"/></name> <init pos:line="33" pos:column="23">= <expr><call><name pos:line="33" pos:column="25">gettag2<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">s1<pos:position pos:line="33" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="33" pos:column="36">s2<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="40"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">int<pos:position pos:line="34" pos:column="20"/></name></type> <name pos:line="34" pos:column="21">done_csum2<pos:position pos:line="34" pos:column="31"/></name> <init pos:line="34" pos:column="32">= <expr><literal type="number" pos:line="34" pos:column="34">0<pos:position pos:line="34" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="36"/></decl_stmt>
			
		<expr_stmt><expr><name pos:line="36" pos:column="17">j<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <name><name pos:line="36" pos:column="21">tag_table<pos:position pos:line="36" pos:column="30"/></name><index pos:line="36" pos:column="30">[<expr><name pos:line="36" pos:column="31">t<pos:position pos:line="36" pos:column="32"/></name></expr>]<pos:position pos:line="36" pos:column="33"/></index></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">verbose<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">&gt;<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="31">4<pos:position pos:line="37" pos:column="32"/></literal></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="25">fprintf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">FINFO<pos:position pos:line="38" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="38" pos:column="39">"offset=%d sum=%08x\n"<pos:position pos:line="38" pos:column="61"/></literal></expr></argument>,<argument><expr><operator pos:line="38" pos:column="62">(<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="63">int<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">)<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="67">offset<pos:position pos:line="38" pos:column="73"/></name></expr></argument>,<argument><expr><name pos:line="38" pos:column="74">sum<pos:position pos:line="38" pos:column="77"/></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="79"/></expr_stmt></block></then></if>
		
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">j<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">==<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">NULL_TAG<pos:position pos:line="40" pos:column="34"/></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35"> <block pos:line="40" pos:column="36">{
			<goto pos:line="41" pos:column="25">goto <name pos:line="41" pos:column="30">null_tag<pos:position pos:line="41" pos:column="38"/></name>;<pos:position pos:line="41" pos:column="39"/></goto>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="44" pos:column="17">sum<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <operator pos:line="44" pos:column="23">(<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">s1<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator> <literal type="number" pos:line="44" pos:column="29">0xffff<pos:position pos:line="44" pos:column="35"/></literal><operator pos:line="44" pos:column="35">)<pos:position pos:line="44" pos:column="36"/></operator> <operator pos:line="44" pos:column="37">|<pos:position pos:line="44" pos:column="38"/></operator> <operator pos:line="44" pos:column="39">(<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">s2<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">&lt;&lt;<pos:position pos:line="44" pos:column="51"/></operator> <literal type="number" pos:line="44" pos:column="46">16<pos:position pos:line="44" pos:column="48"/></literal><operator pos:line="44" pos:column="48">)<pos:position pos:line="44" pos:column="49"/></operator></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">tag_hits<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">++<pos:position pos:line="45" pos:column="27"/></operator></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
		<for pos:line="46" pos:column="17">for <control pos:line="46" pos:column="21">(<init pos:line="46" pos:column="22">;<pos:position pos:line="46" pos:column="23"/></init> <condition><expr><name pos:line="46" pos:column="24">j<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">&lt;<pos:position pos:line="46" pos:column="29"/></operator><name><name pos:line="46" pos:column="26">s<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">count<pos:position pos:line="46" pos:column="34"/></name></name> <operator pos:line="46" pos:column="35">&amp;&amp;<pos:position pos:line="46" pos:column="45"/></operator> <name><name pos:line="46" pos:column="38">targets<pos:position pos:line="46" pos:column="45"/></name><index pos:line="46" pos:column="45">[<expr><name pos:line="46" pos:column="46">j<pos:position pos:line="46" pos:column="47"/></name></expr>]<pos:position pos:line="46" pos:column="48"/></index></name><operator pos:line="46" pos:column="48">.<pos:position pos:line="46" pos:column="49"/></operator><name pos:line="46" pos:column="49">t<pos:position pos:line="46" pos:column="50"/></name> <operator pos:line="46" pos:column="51">==<pos:position pos:line="46" pos:column="53"/></operator> <name pos:line="46" pos:column="54">t<pos:position pos:line="46" pos:column="55"/></name></expr>;<pos:position pos:line="46" pos:column="56"/></condition> <incr><expr><name pos:line="46" pos:column="57">j<pos:position pos:line="46" pos:column="58"/></name><operator pos:line="46" pos:column="58">++<pos:position pos:line="46" pos:column="60"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="61"/></control> <block pos:line="46" pos:column="62">{
			<decl_stmt><decl><type><name pos:line="47" pos:column="25">int<pos:position pos:line="47" pos:column="28"/></name></type> <name pos:line="47" pos:column="29">i<pos:position pos:line="47" pos:column="30"/></name> <init pos:line="47" pos:column="31">= <expr><name><name pos:line="47" pos:column="33">targets<pos:position pos:line="47" pos:column="40"/></name><index pos:line="47" pos:column="40">[<expr><name pos:line="47" pos:column="41">j<pos:position pos:line="47" pos:column="42"/></name></expr>]<pos:position pos:line="47" pos:column="43"/></index></name><operator pos:line="47" pos:column="43">.<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">i<pos:position pos:line="47" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="46"/></decl_stmt>
			
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">sum<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">!=<pos:position pos:line="49" pos:column="35"/></operator> <name><name pos:line="49" pos:column="36">s<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">-&gt;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="39">sums<pos:position pos:line="49" pos:column="43"/></name><index pos:line="49" pos:column="43">[<expr><name pos:line="49" pos:column="44">i<pos:position pos:line="49" pos:column="45"/></name></expr>]<pos:position pos:line="49" pos:column="46"/></index></name><operator pos:line="49" pos:column="46">.<pos:position pos:line="49" pos:column="47"/></operator><name pos:line="49" pos:column="47">sum1<pos:position pos:line="49" pos:column="51"/></name></expr>)<pos:position pos:line="49" pos:column="52"/></condition><then pos:line="49" pos:column="52"> <block type="pseudo"><continue pos:line="49" pos:column="53">continue;<pos:position pos:line="49" pos:column="62"/></continue></block></then></if>
			
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name pos:line="51" pos:column="29">verbose<pos:position pos:line="51" pos:column="36"/></name> <operator pos:line="51" pos:column="37">&gt;<pos:position pos:line="51" pos:column="41"/></operator> <literal type="number" pos:line="51" pos:column="39">3<pos:position pos:line="51" pos:column="40"/></literal></expr>)<pos:position pos:line="51" pos:column="41"/></condition><then pos:line="51" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="33">fprintf<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">FINFO<pos:position pos:line="52" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="52" pos:column="47">"potential match at %d target=%d %d sum=%08x\n"<pos:position pos:line="52" pos:column="94"/></literal></expr></argument>,
					<argument><expr><operator pos:line="53" pos:column="41">(<pos:position pos:line="53" pos:column="42"/></operator><name pos:line="53" pos:column="42">int<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">)<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="46">offset<pos:position pos:line="53" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="53">j<pos:position pos:line="53" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="55">i<pos:position pos:line="53" pos:column="56"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="57">sum<pos:position pos:line="53" pos:column="60"/></name></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt></block></then></if>
			
			<if pos:line="55" pos:column="25">if <condition pos:line="55" pos:column="28">(<expr><operator pos:line="55" pos:column="29">!<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">done_csum2<pos:position pos:line="55" pos:column="40"/></name></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41"> <block pos:line="55" pos:column="42">{
				<decl_stmt><decl><type><name pos:line="56" pos:column="33">int<pos:position pos:line="56" pos:column="36"/></name></type> <name pos:line="56" pos:column="37">l<pos:position pos:line="56" pos:column="38"/></name> <init pos:line="56" pos:column="39">= <expr><call><name pos:line="56" pos:column="41">MIN<pos:position pos:line="56" pos:column="44"/></name><argument_list pos:line="56" pos:column="44">(<argument><expr><name><name pos:line="56" pos:column="45">s<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">-&gt;<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="48">n<pos:position pos:line="56" pos:column="49"/></name></name></expr></argument>,<argument><expr><name pos:line="56" pos:column="50">len<pos:position pos:line="56" pos:column="53"/></name><operator pos:line="56" pos:column="53">-<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="54">offset<pos:position pos:line="56" pos:column="60"/></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="62"/></decl_stmt>
				<expr_stmt><expr><name pos:line="57" pos:column="33">map<pos:position pos:line="57" pos:column="36"/></name> <operator pos:line="57" pos:column="37">=<pos:position pos:line="57" pos:column="38"/></operator> <operator pos:line="57" pos:column="39">(<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="40">signed<pos:position pos:line="57" pos:column="46"/></name> <name pos:line="57" pos:column="47">char<pos:position pos:line="57" pos:column="51"/></name> <operator pos:line="57" pos:column="52">*<pos:position pos:line="57" pos:column="53"/></operator><operator pos:line="57" pos:column="53">)<pos:position pos:line="57" pos:column="54"/></operator><call><name pos:line="57" pos:column="54">map_ptr<pos:position pos:line="57" pos:column="61"/></name><argument_list pos:line="57" pos:column="61">(<argument><expr><name pos:line="57" pos:column="62">buf<pos:position pos:line="57" pos:column="65"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="66">offset<pos:position pos:line="57" pos:column="72"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="73">l<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="58" pos:column="33">get_checksum2<pos:position pos:line="58" pos:column="46"/></name><argument_list pos:line="58" pos:column="46">(<argument><expr><operator pos:line="58" pos:column="47">(<pos:position pos:line="58" pos:column="48"/></operator><name pos:line="58" pos:column="48">char<pos:position pos:line="58" pos:column="52"/></name> <operator pos:line="58" pos:column="53">*<pos:position pos:line="58" pos:column="54"/></operator><operator pos:line="58" pos:column="54">)<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="55">map<pos:position pos:line="58" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="58" pos:column="59">l<pos:position pos:line="58" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="58" pos:column="61">sum2<pos:position pos:line="58" pos:column="65"/></name></expr></argument>)<pos:position pos:line="58" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="67"/></expr_stmt>
				<expr_stmt><expr><name pos:line="59" pos:column="33">done_csum2<pos:position pos:line="59" pos:column="43"/></name> <operator pos:line="59" pos:column="44">=<pos:position pos:line="59" pos:column="45"/></operator> <literal type="number" pos:line="59" pos:column="46">1<pos:position pos:line="59" pos:column="47"/></literal></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="60" pos:column="26"/></block></then></if>
			
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><call><name pos:line="62" pos:column="29">memcmp<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">sum2<pos:position pos:line="62" pos:column="40"/></name></expr></argument>,<argument><expr><name><name pos:line="62" pos:column="41">s<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">sums<pos:position pos:line="62" pos:column="48"/></name><index pos:line="62" pos:column="48">[<expr><name pos:line="62" pos:column="49">i<pos:position pos:line="62" pos:column="50"/></name></expr>]<pos:position pos:line="62" pos:column="51"/></index></name><operator pos:line="62" pos:column="51">.<pos:position pos:line="62" pos:column="52"/></operator><name pos:line="62" pos:column="52">sum2<pos:position pos:line="62" pos:column="56"/></name></expr></argument>,<argument><expr><name pos:line="62" pos:column="57">csum_length<pos:position pos:line="62" pos:column="68"/></name></expr></argument>)<pos:position pos:line="62" pos:column="69"/></argument_list></call> <operator pos:line="62" pos:column="70">!=<pos:position pos:line="62" pos:column="72"/></operator> <literal type="number" pos:line="62" pos:column="73">0<pos:position pos:line="62" pos:column="74"/></literal></expr>)<pos:position pos:line="62" pos:column="75"/></condition><then pos:line="62" pos:column="75"> <block pos:line="62" pos:column="76">{
				<expr_stmt><expr><name pos:line="63" pos:column="33">false_alarms<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">++<pos:position pos:line="63" pos:column="47"/></operator></expr>;<pos:position pos:line="63" pos:column="48"/></expr_stmt>
				<continue pos:line="64" pos:column="33">continue;<pos:position pos:line="64" pos:column="42"/></continue>
			}<pos:position pos:line="65" pos:column="26"/></block></then></if>
			
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">matched<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">f<pos:position pos:line="67" pos:column="34"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="35">s<pos:position pos:line="67" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="37">buf<pos:position pos:line="67" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="41">offset<pos:position pos:line="67" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="48">i<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><name pos:line="68" pos:column="25">offset<pos:position pos:line="68" pos:column="31"/></name> <operator pos:line="68" pos:column="32">+=<pos:position pos:line="68" pos:column="34"/></operator> <name><name pos:line="68" pos:column="35">s<pos:position pos:line="68" pos:column="36"/></name><operator pos:line="68" pos:column="36">-&gt;<pos:position pos:line="68" pos:column="41"/></operator><name pos:line="68" pos:column="38">sums<pos:position pos:line="68" pos:column="42"/></name><index pos:line="68" pos:column="42">[<expr><name pos:line="68" pos:column="43">i<pos:position pos:line="68" pos:column="44"/></name></expr>]<pos:position pos:line="68" pos:column="45"/></index></name><operator pos:line="68" pos:column="45">.<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">len<pos:position pos:line="68" pos:column="49"/></name> <operator pos:line="68" pos:column="50">-<pos:position pos:line="68" pos:column="51"/></operator> <literal type="number" pos:line="68" pos:column="52">1<pos:position pos:line="68" pos:column="53"/></literal></expr>;<pos:position pos:line="68" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name pos:line="69" pos:column="25">k<pos:position pos:line="69" pos:column="26"/></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <call><name pos:line="69" pos:column="29">MIN<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><operator pos:line="69" pos:column="33">(<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="34">len<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">-<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="38">offset<pos:position pos:line="69" pos:column="44"/></name><operator pos:line="69" pos:column="44">)<pos:position pos:line="69" pos:column="45"/></operator></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="47">s<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">n<pos:position pos:line="69" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">map<pos:position pos:line="70" pos:column="28"/></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <operator pos:line="70" pos:column="31">(<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="32">signed<pos:position pos:line="70" pos:column="38"/></name> <name pos:line="70" pos:column="39">char<pos:position pos:line="70" pos:column="43"/></name> <operator pos:line="70" pos:column="44">*<pos:position pos:line="70" pos:column="45"/></operator><operator pos:line="70" pos:column="45">)<pos:position pos:line="70" pos:column="46"/></operator><call><name pos:line="70" pos:column="46">map_ptr<pos:position pos:line="70" pos:column="53"/></name><argument_list pos:line="70" pos:column="53">(<argument><expr><name pos:line="70" pos:column="54">buf<pos:position pos:line="70" pos:column="57"/></name></expr></argument>,<argument><expr><name pos:line="70" pos:column="58">offset<pos:position pos:line="70" pos:column="64"/></name></expr></argument>,<argument><expr><name pos:line="70" pos:column="65">k<pos:position pos:line="70" pos:column="66"/></name></expr></argument>)<pos:position pos:line="70" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">sum<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <call><name pos:line="71" pos:column="31">get_checksum1<pos:position pos:line="71" pos:column="44"/></name><argument_list pos:line="71" pos:column="44">(<argument><expr><operator pos:line="71" pos:column="45">(<pos:position pos:line="71" pos:column="46"/></operator><name pos:line="71" pos:column="46">char<pos:position pos:line="71" pos:column="50"/></name> <operator pos:line="71" pos:column="51">*<pos:position pos:line="71" pos:column="52"/></operator><operator pos:line="71" pos:column="52">)<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="53">map<pos:position pos:line="71" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="58">k<pos:position pos:line="71" pos:column="59"/></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><name pos:line="72" pos:column="25">s1<pos:position pos:line="72" pos:column="27"/></name> <operator pos:line="72" pos:column="28">=<pos:position pos:line="72" pos:column="29"/></operator> <name pos:line="72" pos:column="30">sum<pos:position pos:line="72" pos:column="33"/></name> <operator pos:line="72" pos:column="34">&amp;<pos:position pos:line="72" pos:column="39"/></operator> <literal type="number" pos:line="72" pos:column="36">0xFFFF<pos:position pos:line="72" pos:column="42"/></literal></expr>;<pos:position pos:line="72" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="73" pos:column="25">s2<pos:position pos:line="73" pos:column="27"/></name> <operator pos:line="73" pos:column="28">=<pos:position pos:line="73" pos:column="29"/></operator> <name pos:line="73" pos:column="30">sum<pos:position pos:line="73" pos:column="33"/></name> <operator pos:line="73" pos:column="34">&gt;&gt;<pos:position pos:line="73" pos:column="39"/></operator> <literal type="number" pos:line="73" pos:column="37">16<pos:position pos:line="73" pos:column="39"/></literal></expr>;<pos:position pos:line="73" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="74" pos:column="25">matches<pos:position pos:line="74" pos:column="32"/></name><operator pos:line="74" pos:column="32">++<pos:position pos:line="74" pos:column="34"/></operator></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt>
			<break pos:line="75" pos:column="25">break;<pos:position pos:line="75" pos:column="31"/></break>
		}<pos:position pos:line="76" pos:column="18"/></block></for>
		
	<label><name pos:line="78" pos:column="9">null_tag<pos:position pos:line="78" pos:column="17"/></name>:<pos:position pos:line="78" pos:column="18"/></label>
		<comment type="block" pos:line="79" pos:column="17">/* Trim off the first byte from the checksum */</comment>
		<expr_stmt><expr><name pos:line="80" pos:column="17">map<pos:position pos:line="80" pos:column="20"/></name> <operator pos:line="80" pos:column="21">=<pos:position pos:line="80" pos:column="22"/></operator> <operator pos:line="80" pos:column="23">(<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="24">signed<pos:position pos:line="80" pos:column="30"/></name> <name pos:line="80" pos:column="31">char<pos:position pos:line="80" pos:column="35"/></name> <operator pos:line="80" pos:column="36">*<pos:position pos:line="80" pos:column="37"/></operator><operator pos:line="80" pos:column="37">)<pos:position pos:line="80" pos:column="38"/></operator><call><name pos:line="80" pos:column="38">map_ptr<pos:position pos:line="80" pos:column="45"/></name><argument_list pos:line="80" pos:column="45">(<argument><expr><name pos:line="80" pos:column="46">buf<pos:position pos:line="80" pos:column="49"/></name></expr></argument>,<argument><expr><name pos:line="80" pos:column="50">offset<pos:position pos:line="80" pos:column="56"/></name></expr></argument>,<argument><expr><name pos:line="80" pos:column="57">k<pos:position pos:line="80" pos:column="58"/></name><operator pos:line="80" pos:column="58">+<pos:position pos:line="80" pos:column="59"/></operator><literal type="number" pos:line="80" pos:column="59">1<pos:position pos:line="80" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="81" pos:column="17">s1<pos:position pos:line="81" pos:column="19"/></name> <operator pos:line="81" pos:column="20">-=<pos:position pos:line="81" pos:column="22"/></operator> <name><name pos:line="81" pos:column="23">map<pos:position pos:line="81" pos:column="26"/></name><index pos:line="81" pos:column="26">[<expr><literal type="number" pos:line="81" pos:column="27">0<pos:position pos:line="81" pos:column="28"/></literal></expr>]<pos:position pos:line="81" pos:column="29"/></index></name> <operator pos:line="81" pos:column="30">+<pos:position pos:line="81" pos:column="31"/></operator> <name pos:line="81" pos:column="32">CHAR_OFFSET<pos:position pos:line="81" pos:column="43"/></name></expr>;<pos:position pos:line="81" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="82" pos:column="17">s2<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">-=<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">k<pos:position pos:line="82" pos:column="24"/></name> <operator pos:line="82" pos:column="25">*<pos:position pos:line="82" pos:column="26"/></operator> <operator pos:line="82" pos:column="27">(<pos:position pos:line="82" pos:column="28"/></operator><name><name pos:line="82" pos:column="28">map<pos:position pos:line="82" pos:column="31"/></name><index pos:line="82" pos:column="31">[<expr><literal type="number" pos:line="82" pos:column="32">0<pos:position pos:line="82" pos:column="33"/></literal></expr>]<pos:position pos:line="82" pos:column="34"/></index></name><operator pos:line="82" pos:column="34">+<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="35">CHAR_OFFSET<pos:position pos:line="82" pos:column="46"/></name><operator pos:line="82" pos:column="46">)<pos:position pos:line="82" pos:column="47"/></operator></expr>;<pos:position pos:line="82" pos:column="48"/></expr_stmt>
		
		<comment type="block" pos:line="84" pos:column="17">/* Add on the next byte (if there is one) to the checksum */</comment>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name pos:line="85" pos:column="21">k<pos:position pos:line="85" pos:column="22"/></name> <operator pos:line="85" pos:column="23">&lt;<pos:position pos:line="85" pos:column="27"/></operator> <operator pos:line="85" pos:column="25">(<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="26">len<pos:position pos:line="85" pos:column="29"/></name><operator pos:line="85" pos:column="29">-<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="30">offset<pos:position pos:line="85" pos:column="36"/></name><operator pos:line="85" pos:column="36">)<pos:position pos:line="85" pos:column="37"/></operator></expr>)<pos:position pos:line="85" pos:column="38"/></condition><then pos:line="85" pos:column="38"> <block pos:line="85" pos:column="39">{
			<expr_stmt><expr><name pos:line="86" pos:column="25">s1<pos:position pos:line="86" pos:column="27"/></name> <operator pos:line="86" pos:column="28">+=<pos:position pos:line="86" pos:column="30"/></operator> <operator pos:line="86" pos:column="31">(<pos:position pos:line="86" pos:column="32"/></operator><name><name pos:line="86" pos:column="32">map<pos:position pos:line="86" pos:column="35"/></name><index pos:line="86" pos:column="35">[<expr><name pos:line="86" pos:column="36">k<pos:position pos:line="86" pos:column="37"/></name></expr>]<pos:position pos:line="86" pos:column="38"/></index></name><operator pos:line="86" pos:column="38">+<pos:position pos:line="86" pos:column="39"/></operator><name pos:line="86" pos:column="39">CHAR_OFFSET<pos:position pos:line="86" pos:column="50"/></name><operator pos:line="86" pos:column="50">)<pos:position pos:line="86" pos:column="51"/></operator></expr>;<pos:position pos:line="86" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="87" pos:column="25">s2<pos:position pos:line="87" pos:column="27"/></name> <operator pos:line="87" pos:column="28">+=<pos:position pos:line="87" pos:column="30"/></operator> <name pos:line="87" pos:column="31">s1<pos:position pos:line="87" pos:column="33"/></name></expr>;<pos:position pos:line="87" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="88" pos:column="18"/></block></then> <else pos:line="88" pos:column="19">else <block pos:line="88" pos:column="24">{
			<expr_stmt><expr><operator pos:line="89" pos:column="25">--<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="27">k<pos:position pos:line="89" pos:column="28"/></name></expr>;<pos:position pos:line="89" pos:column="29"/></expr_stmt>
		}<pos:position pos:line="90" pos:column="18"/></block></else></if>
		
	}<pos:position pos:line="92" pos:column="10"/></block> while <condition pos:line="92" pos:column="17">(<expr><operator pos:line="92" pos:column="18">++<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="20">offset<pos:position pos:line="92" pos:column="26"/></name> <operator pos:line="92" pos:column="27">&lt;<pos:position pos:line="92" pos:column="31"/></operator> <name pos:line="92" pos:column="29">end<pos:position pos:line="92" pos:column="32"/></name></expr>)<pos:position pos:line="92" pos:column="33"/></condition>;<pos:position pos:line="92" pos:column="34"/></do>
	
	<expr_stmt><expr><call><name pos:line="94" pos:column="9">matched<pos:position pos:line="94" pos:column="16"/></name><argument_list pos:line="94" pos:column="16">(<argument><expr><name pos:line="94" pos:column="17">f<pos:position pos:line="94" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="94" pos:column="19">s<pos:position pos:line="94" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="94" pos:column="21">buf<pos:position pos:line="94" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="94" pos:column="25">len<pos:position pos:line="94" pos:column="28"/></name></expr></argument>,<argument><expr><operator pos:line="94" pos:column="29">-<pos:position pos:line="94" pos:column="30"/></operator><literal type="number" pos:line="94" pos:column="30">1<pos:position pos:line="94" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="95" pos:column="9">map_ptr<pos:position pos:line="95" pos:column="16"/></name><argument_list pos:line="95" pos:column="16">(<argument><expr><name pos:line="95" pos:column="17">buf<pos:position pos:line="95" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="95" pos:column="21">len<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">-<pos:position pos:line="95" pos:column="25"/></operator><literal type="number" pos:line="95" pos:column="25">1<pos:position pos:line="95" pos:column="26"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="95" pos:column="27">1<pos:position pos:line="95" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="30"/></expr_stmt>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_418_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">receive_data<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">f_in<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">fname_r<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">fd_r<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">OFF_T<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">size_r<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">fname<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">fd<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">OFF_T<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">total_size<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">file_sum1<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[<expr><name pos:line="4" pos:column="31">MAX_DIGEST_LEN<pos:position pos:line="4" pos:column="45"/></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">map_struct<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">mapbuf<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">sum_struct<pos:position pos:line="6" pos:column="26"/></name></name></type> <name pos:line="6" pos:column="27">sum<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int32<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">len<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">OFF_T<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">offset<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">OFF_T<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">offset2<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">data<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int32<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">i<pos:position pos:line="11" pos:column="16"/></name></decl>;<pos:position pos:line="11" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">map<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">SUPPORT_PREALLOCATION<pos:position pos:line="13" pos:column="29"/></name></cpp:ifdef>
<cpp:ifdef pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">ifdef<pos:position pos:line="14" pos:column="7"/></cpp:directive> <name pos:line="14" pos:column="8">PREALLOCATE_NEEDS_TRUNCATE<pos:position pos:line="14" pos:column="34"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">OFF_T<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">preallocated_len<pos:position pos:line="15" pos:column="31"/></name> <init pos:line="15" pos:column="32">= <expr><literal type="number" pos:line="15" pos:column="34">0<pos:position pos:line="15" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">preallocate_files<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">&amp;&amp;<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="34">fd<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">!=<pos:position pos:line="18" pos:column="39"/></operator> <operator pos:line="18" pos:column="40">-<pos:position pos:line="18" pos:column="41"/></operator><literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal> <operator pos:line="18" pos:column="43">&amp;&amp;<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="46">total_size<pos:position pos:line="18" pos:column="56"/></name> <operator pos:line="18" pos:column="57">&gt;<pos:position pos:line="18" pos:column="61"/></operator> <literal type="number" pos:line="18" pos:column="59">0<pos:position pos:line="18" pos:column="60"/></literal> <operator pos:line="18" pos:column="61">&amp;&amp;<pos:position pos:line="18" pos:column="71"/></operator> <operator pos:line="18" pos:column="64">(<pos:position pos:line="18" pos:column="65"/></operator><operator pos:line="18" pos:column="65">!<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="66">inplace<pos:position pos:line="18" pos:column="73"/></name> <operator pos:line="18" pos:column="74">||<pos:position pos:line="18" pos:column="76"/></operator> <name pos:line="18" pos:column="77">total_size<pos:position pos:line="18" pos:column="87"/></name> <operator pos:line="18" pos:column="88">&gt;<pos:position pos:line="18" pos:column="92"/></operator> <name pos:line="18" pos:column="90">size_r<pos:position pos:line="18" pos:column="96"/></name><operator pos:line="18" pos:column="96">)<pos:position pos:line="18" pos:column="97"/></operator></expr>)<pos:position pos:line="18" pos:column="98"/></condition><then pos:line="18" pos:column="98"> <block pos:line="18" pos:column="99">{
		<comment type="block" pos:line="19" pos:column="17">/* Try to preallocate enough space for file's eventual length.  Can
		 * reduce fragmentation on filesystems like ext4, xfs, and NTFS. */</comment>
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><call><name pos:line="21" pos:column="21">do_fallocate<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">fd<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="38">0<pos:position pos:line="21" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">total_size<pos:position pos:line="21" pos:column="51"/></name></expr></argument>)<pos:position pos:line="21" pos:column="52"/></argument_list></call> <operator pos:line="21" pos:column="53">==<pos:position pos:line="21" pos:column="55"/></operator> <literal type="number" pos:line="21" pos:column="56">0<pos:position pos:line="21" pos:column="57"/></literal></expr>)<pos:position pos:line="21" pos:column="58"/></condition><then pos:line="21" pos:column="58"> <block pos:line="21" pos:column="59">{
<cpp:ifdef pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">ifdef<pos:position pos:line="22" pos:column="7"/></cpp:directive> <name pos:line="22" pos:column="8">PREALLOCATE_NEEDS_TRUNCATE<pos:position pos:line="22" pos:column="34"/></name></cpp:ifdef>
			<expr_stmt><expr><name pos:line="23" pos:column="25">preallocated_len<pos:position pos:line="23" pos:column="41"/></name> <operator pos:line="23" pos:column="42">=<pos:position pos:line="23" pos:column="43"/></operator> <name pos:line="23" pos:column="44">total_size<pos:position pos:line="23" pos:column="54"/></name></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="25" pos:column="18"/></block></then> <else pos:line="25" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">rsyserr<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">FWARNING<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">errno<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="50">"do_fallocate %s"<pos:position pos:line="26" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="69">full_fname<pos:position pos:line="26" pos:column="79"/></name><argument_list pos:line="26" pos:column="79">(<argument><expr><name pos:line="26" pos:column="80">fname<pos:position pos:line="26" pos:column="85"/></name></expr></argument>)<pos:position pos:line="26" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="88"/></expr_stmt></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">read_sum_head<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">f_in<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="30">sum<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">fd_r<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">&gt;=<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal> <operator pos:line="32" pos:column="23">&amp;&amp;<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="26">size_r<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">&gt;<pos:position pos:line="32" pos:column="37"/></operator> <literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37"> <block pos:line="32" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">int32<pos:position pos:line="33" pos:column="22"/></name></type> <name pos:line="33" pos:column="23">read_size<pos:position pos:line="33" pos:column="32"/></name> <init pos:line="33" pos:column="33">= <expr><call><name pos:line="33" pos:column="35">MAX<pos:position pos:line="33" pos:column="38"/></name><argument_list pos:line="33" pos:column="38">(<argument><expr><name><name pos:line="33" pos:column="39">sum<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">.<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">blength<pos:position pos:line="33" pos:column="50"/></name></name> <operator pos:line="33" pos:column="51">*<pos:position pos:line="33" pos:column="52"/></operator> <literal type="number" pos:line="33" pos:column="53">2<pos:position pos:line="33" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="56">16<pos:position pos:line="33" pos:column="58"/></literal><operator pos:line="33" pos:column="58">*<pos:position pos:line="33" pos:column="59"/></operator><literal type="number" pos:line="33" pos:column="59">1024<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="65"/></decl_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">mapbuf<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <call><name pos:line="34" pos:column="26">map_file<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><name pos:line="34" pos:column="35">fd_r<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">size_r<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="49">read_size<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="60">sum<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">.<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="64">blength<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">DEBUG_GTE<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">DELTASUM<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="41">2<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44"> <block pos:line="35" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">rprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">FINFO<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="40">"recv mapped %s of size %s\n"<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>,
				<argument><expr><name pos:line="37" pos:column="33">fname_r<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="42">big_num<pos:position pos:line="37" pos:column="49"/></name><argument_list pos:line="37" pos:column="49">(<argument><expr><name pos:line="37" pos:column="50">size_r<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></then> <else pos:line="39" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">mapbuf<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">NULL<pos:position pos:line="40" pos:column="30"/></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">sum_init<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">checksum_seed<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">append_mode<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">&gt;<pos:position pos:line="44" pos:column="29"/></operator> <literal type="number" pos:line="44" pos:column="27">0<pos:position pos:line="44" pos:column="28"/></literal></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29"> <block pos:line="44" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">OFF_T<pos:position pos:line="45" pos:column="22"/></name></type> <name pos:line="45" pos:column="23">j<pos:position pos:line="45" pos:column="24"/></name></decl>;<pos:position pos:line="45" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="46" pos:column="17">sum<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">.<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">flength<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">=<pos:position pos:line="46" pos:column="30"/></operator> <operator pos:line="46" pos:column="31">(<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="32">OFF_T<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">)<pos:position pos:line="46" pos:column="38"/></operator><name><name pos:line="46" pos:column="38">sum<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">.<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">count<pos:position pos:line="46" pos:column="47"/></name></name> <operator pos:line="46" pos:column="48">*<pos:position pos:line="46" pos:column="49"/></operator> <name><name pos:line="46" pos:column="50">sum<pos:position pos:line="46" pos:column="53"/></name><operator pos:line="46" pos:column="53">.<pos:position pos:line="46" pos:column="54"/></operator><name pos:line="46" pos:column="54">blength<pos:position pos:line="46" pos:column="61"/></name></name></expr>;<pos:position pos:line="46" pos:column="62"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">sum<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">.<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="25">remainder<pos:position pos:line="47" pos:column="34"/></name></name></expr>)<pos:position pos:line="47" pos:column="35"/></condition><then pos:line="47" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="25">sum<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">.<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="29">flength<pos:position pos:line="48" pos:column="36"/></name></name> <operator pos:line="48" pos:column="37">-=<pos:position pos:line="48" pos:column="39"/></operator> <name><name pos:line="48" pos:column="40">sum<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">.<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">blength<pos:position pos:line="48" pos:column="51"/></name></name> <operator pos:line="48" pos:column="52">-<pos:position pos:line="48" pos:column="53"/></operator> <name><name pos:line="48" pos:column="54">sum<pos:position pos:line="48" pos:column="57"/></name><operator pos:line="48" pos:column="57">.<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="58">remainder<pos:position pos:line="48" pos:column="67"/></name></name></expr>;<pos:position pos:line="48" pos:column="68"/></expr_stmt></block></then></if>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">append_mode<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">==<pos:position pos:line="49" pos:column="35"/></operator> <literal type="number" pos:line="49" pos:column="36">2<pos:position pos:line="49" pos:column="37"/></literal> <operator pos:line="49" pos:column="38">&amp;&amp;<pos:position pos:line="49" pos:column="48"/></operator> <name pos:line="49" pos:column="41">mapbuf<pos:position pos:line="49" pos:column="47"/></name></expr>)<pos:position pos:line="49" pos:column="48"/></condition><then pos:line="49" pos:column="48"> <block pos:line="49" pos:column="49">{
			<for pos:line="50" pos:column="25">for <control pos:line="50" pos:column="29">(<init><expr><name pos:line="50" pos:column="30">j<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="34">CHUNK_SIZE<pos:position pos:line="50" pos:column="44"/></name></expr>;<pos:position pos:line="50" pos:column="45"/></init> <condition><expr><name pos:line="50" pos:column="46">j<pos:position pos:line="50" pos:column="47"/></name> <operator pos:line="50" pos:column="48">&lt;<pos:position pos:line="50" pos:column="52"/></operator> <name><name pos:line="50" pos:column="50">sum<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">.<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="54">flength<pos:position pos:line="50" pos:column="61"/></name></name></expr>;<pos:position pos:line="50" pos:column="62"/></condition> <incr><expr><name pos:line="50" pos:column="63">j<pos:position pos:line="50" pos:column="64"/></name> <operator pos:line="50" pos:column="65">+=<pos:position pos:line="50" pos:column="67"/></operator> <name pos:line="50" pos:column="68">CHUNK_SIZE<pos:position pos:line="50" pos:column="78"/></name></expr></incr>)<pos:position pos:line="50" pos:column="79"/></control> <block pos:line="50" pos:column="80">{
				<if pos:line="51" pos:column="33">if <condition pos:line="51" pos:column="36">(<expr><call><name pos:line="51" pos:column="37">INFO_GTE<pos:position pos:line="51" pos:column="45"/></name><argument_list pos:line="51" pos:column="45">(<argument><expr><name pos:line="51" pos:column="46">PROGRESS<pos:position pos:line="51" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="56">1<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="59"/></condition><then pos:line="51" pos:column="59">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="41">show_progress<pos:position pos:line="52" pos:column="54"/></name><argument_list pos:line="52" pos:column="54">(<argument><expr><name pos:line="52" pos:column="55">offset<pos:position pos:line="52" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="63">total_size<pos:position pos:line="52" pos:column="73"/></name></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="75"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="53" pos:column="33">sum_update<pos:position pos:line="53" pos:column="43"/></name><argument_list pos:line="53" pos:column="43">(<argument><expr><call><name pos:line="53" pos:column="44">map_ptr<pos:position pos:line="53" pos:column="51"/></name><argument_list pos:line="53" pos:column="51">(<argument><expr><name pos:line="53" pos:column="52">mapbuf<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="60">offset<pos:position pos:line="53" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="68">CHUNK_SIZE<pos:position pos:line="53" pos:column="78"/></name></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr></argument>,
					   <argument><expr><name pos:line="54" pos:column="44">CHUNK_SIZE<pos:position pos:line="54" pos:column="54"/></name></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
				<expr_stmt><expr><name pos:line="55" pos:column="33">offset<pos:position pos:line="55" pos:column="39"/></name> <operator pos:line="55" pos:column="40">=<pos:position pos:line="55" pos:column="41"/></operator> <name pos:line="55" pos:column="42">j<pos:position pos:line="55" pos:column="43"/></name></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="56" pos:column="26"/></block></for>
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><name pos:line="57" pos:column="29">offset<pos:position pos:line="57" pos:column="35"/></name> <operator pos:line="57" pos:column="36">&lt;<pos:position pos:line="57" pos:column="40"/></operator> <name><name pos:line="57" pos:column="38">sum<pos:position pos:line="57" pos:column="41"/></name><operator pos:line="57" pos:column="41">.<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="42">flength<pos:position pos:line="57" pos:column="49"/></name></name></expr>)<pos:position pos:line="57" pos:column="50"/></condition><then pos:line="57" pos:column="50"> <block pos:line="57" pos:column="51">{
				<decl_stmt><decl><type><name pos:line="58" pos:column="33">int32<pos:position pos:line="58" pos:column="38"/></name></type> <name pos:line="58" pos:column="39">len<pos:position pos:line="58" pos:column="42"/></name> <init pos:line="58" pos:column="43">= <expr><call pos:line="58" pos:column="45">(<name pos:line="58" pos:column="46">int32<pos:position pos:line="58" pos:column="51"/></name>)<argument_list pos:line="58" pos:column="52">(<argument><expr><name><name pos:line="58" pos:column="53">sum<pos:position pos:line="58" pos:column="56"/></name><operator pos:line="58" pos:column="56">.<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="57">flength<pos:position pos:line="58" pos:column="64"/></name></name> <operator pos:line="58" pos:column="65">-<pos:position pos:line="58" pos:column="66"/></operator> <name pos:line="58" pos:column="67">offset<pos:position pos:line="58" pos:column="73"/></name></expr></argument>)<pos:position pos:line="58" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="75"/></decl_stmt>
				<if pos:line="59" pos:column="33">if <condition pos:line="59" pos:column="36">(<expr><call><name pos:line="59" pos:column="37">INFO_GTE<pos:position pos:line="59" pos:column="45"/></name><argument_list pos:line="59" pos:column="45">(<argument><expr><name pos:line="59" pos:column="46">PROGRESS<pos:position pos:line="59" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="56">1<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="59"/></condition><then pos:line="59" pos:column="59">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="41">show_progress<pos:position pos:line="60" pos:column="54"/></name><argument_list pos:line="60" pos:column="54">(<argument><expr><name pos:line="60" pos:column="55">offset<pos:position pos:line="60" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="63">total_size<pos:position pos:line="60" pos:column="73"/></name></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="61" pos:column="33">sum_update<pos:position pos:line="61" pos:column="43"/></name><argument_list pos:line="61" pos:column="43">(<argument><expr><call><name pos:line="61" pos:column="44">map_ptr<pos:position pos:line="61" pos:column="51"/></name><argument_list pos:line="61" pos:column="51">(<argument><expr><name pos:line="61" pos:column="52">mapbuf<pos:position pos:line="61" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="60">offset<pos:position pos:line="61" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="68">len<pos:position pos:line="61" pos:column="71"/></name></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="61" pos:column="74">len<pos:position pos:line="61" pos:column="77"/></name></expr></argument>)<pos:position pos:line="61" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="79"/></expr_stmt>
			}<pos:position pos:line="62" pos:column="26"/></block></then></if>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="64" pos:column="17">offset<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <name><name pos:line="64" pos:column="26">sum<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">.<pos:position pos:line="64" pos:column="30"/></operator><name pos:line="64" pos:column="30">flength<pos:position pos:line="64" pos:column="37"/></name></name></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">fd<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">!=<pos:position pos:line="65" pos:column="26"/></operator> <operator pos:line="65" pos:column="27">-<pos:position pos:line="65" pos:column="28"/></operator><literal type="number" pos:line="65" pos:column="28">1<pos:position pos:line="65" pos:column="29"/></literal> <operator pos:line="65" pos:column="30">&amp;&amp;<pos:position pos:line="65" pos:column="40"/></operator> <operator pos:line="65" pos:column="33">(<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">j<pos:position pos:line="65" pos:column="35"/></name> <operator pos:line="65" pos:column="36">=<pos:position pos:line="65" pos:column="37"/></operator> <call><name pos:line="65" pos:column="38">do_lseek<pos:position pos:line="65" pos:column="46"/></name><argument_list pos:line="65" pos:column="46">(<argument><expr><name pos:line="65" pos:column="47">fd<pos:position pos:line="65" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="51">offset<pos:position pos:line="65" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="59">SEEK_SET<pos:position pos:line="65" pos:column="67"/></name></expr></argument>)<pos:position pos:line="65" pos:column="68"/></argument_list></call><operator pos:line="65" pos:column="68">)<pos:position pos:line="65" pos:column="69"/></operator> <operator pos:line="65" pos:column="70">!=<pos:position pos:line="65" pos:column="72"/></operator> <name pos:line="65" pos:column="73">offset<pos:position pos:line="65" pos:column="79"/></name></expr>)<pos:position pos:line="65" pos:column="80"/></condition><then pos:line="65" pos:column="80"> <block pos:line="65" pos:column="81">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">rsyserr<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">FERROR_XFER<pos:position pos:line="66" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="46">errno<pos:position pos:line="66" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="53">"lseek of %s returned %s, not %s"<pos:position pos:line="66" pos:column="86"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="67" pos:column="33">full_fname<pos:position pos:line="67" pos:column="43"/></name><argument_list pos:line="67" pos:column="43">(<argument><expr><name pos:line="67" pos:column="44">fname<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="52">big_num<pos:position pos:line="67" pos:column="59"/></name><argument_list pos:line="67" pos:column="59">(<argument><expr><name pos:line="67" pos:column="60">j<pos:position pos:line="67" pos:column="61"/></name></expr></argument>)<pos:position pos:line="67" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="64">big_num<pos:position pos:line="67" pos:column="71"/></name><argument_list pos:line="67" pos:column="71">(<argument><expr><name pos:line="67" pos:column="72">offset<pos:position pos:line="67" pos:column="78"/></name></expr></argument>)<pos:position pos:line="67" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="81"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">exit_cleanup<pos:position pos:line="68" pos:column="37"/></name><argument_list pos:line="68" pos:column="37">(<argument><expr><name pos:line="68" pos:column="38">RERR_FILEIO<pos:position pos:line="68" pos:column="49"/></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="69" pos:column="18"/></block></then></if>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>

	<while pos:line="72" pos:column="9">while <condition pos:line="72" pos:column="15">(<expr><operator pos:line="72" pos:column="16">(<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">i<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <call><name pos:line="72" pos:column="21">recv_token<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">f_in<pos:position pos:line="72" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="38">&amp;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="39">data<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call><operator pos:line="72" pos:column="44">)<pos:position pos:line="72" pos:column="45"/></operator> <operator pos:line="72" pos:column="46">!=<pos:position pos:line="72" pos:column="48"/></operator> <literal type="number" pos:line="72" pos:column="49">0<pos:position pos:line="72" pos:column="50"/></literal></expr>)<pos:position pos:line="72" pos:column="51"/></condition> <block pos:line="72" pos:column="52">{
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><call><name pos:line="73" pos:column="21">INFO_GTE<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name pos:line="73" pos:column="30">PROGRESS<pos:position pos:line="73" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="40">1<pos:position pos:line="73" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="43"/></condition><then pos:line="73" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="25">show_progress<pos:position pos:line="74" pos:column="38"/></name><argument_list pos:line="74" pos:column="38">(<argument><expr><name pos:line="74" pos:column="39">offset<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">total_size<pos:position pos:line="74" pos:column="57"/></name></expr></argument>)<pos:position pos:line="74" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="59"/></expr_stmt></block></then></if>

		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name pos:line="76" pos:column="21">allowed_lull<pos:position pos:line="76" pos:column="33"/></name></expr>)<pos:position pos:line="76" pos:column="34"/></condition><then pos:line="76" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="25">maybe_send_keepalive<pos:position pos:line="77" pos:column="45"/></name><argument_list pos:line="77" pos:column="45">(<argument><expr><call><name pos:line="77" pos:column="46">time<pos:position pos:line="77" pos:column="50"/></name><argument_list pos:line="77" pos:column="50">(<argument><expr><name pos:line="77" pos:column="51">NULL<pos:position pos:line="77" pos:column="55"/></name></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="77" pos:column="58">MSK_ALLOW_FLUSH<pos:position pos:line="77" pos:column="73"/></name> <operator pos:line="77" pos:column="74">|<pos:position pos:line="77" pos:column="75"/></operator> <name pos:line="77" pos:column="76">MSK_ACTIVE_RECEIVER<pos:position pos:line="77" pos:column="95"/></name></expr></argument>)<pos:position pos:line="77" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="97"/></expr_stmt></block></then></if>

		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">i<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">&gt;<pos:position pos:line="79" pos:column="27"/></operator> <literal type="number" pos:line="79" pos:column="25">0<pos:position pos:line="79" pos:column="26"/></literal></expr>)<pos:position pos:line="79" pos:column="27"/></condition><then pos:line="79" pos:column="27"> <block pos:line="79" pos:column="28">{
			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><call><name pos:line="80" pos:column="29">DEBUG_GTE<pos:position pos:line="80" pos:column="38"/></name><argument_list pos:line="80" pos:column="38">(<argument><expr><name pos:line="80" pos:column="39">DELTASUM<pos:position pos:line="80" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="49">3<pos:position pos:line="80" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="80" pos:column="52"/></condition><then pos:line="80" pos:column="52"> <block pos:line="80" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="81" pos:column="33">rprintf<pos:position pos:line="81" pos:column="40"/></name><argument_list pos:line="81" pos:column="40">(<argument><expr><name pos:line="81" pos:column="41">FINFO<pos:position pos:line="81" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="81" pos:column="47">"data recv %d at %s\n"<pos:position pos:line="81" pos:column="69"/></literal></expr></argument>,
					<argument><expr><name pos:line="82" pos:column="41">i<pos:position pos:line="82" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="44">big_num<pos:position pos:line="82" pos:column="51"/></name><argument_list pos:line="82" pos:column="51">(<argument><expr><name pos:line="82" pos:column="52">offset<pos:position pos:line="82" pos:column="58"/></name></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="61"/></expr_stmt>
			}<pos:position pos:line="83" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name><name pos:line="85" pos:column="25">stats<pos:position pos:line="85" pos:column="30"/></name><operator pos:line="85" pos:column="30">.<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="31">literal_data<pos:position pos:line="85" pos:column="43"/></name></name> <operator pos:line="85" pos:column="44">+=<pos:position pos:line="85" pos:column="46"/></operator> <name pos:line="85" pos:column="47">i<pos:position pos:line="85" pos:column="48"/></name></expr>;<pos:position pos:line="85" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><name pos:line="86" pos:column="25">cleanup_got_literal<pos:position pos:line="86" pos:column="44"/></name> <operator pos:line="86" pos:column="45">=<pos:position pos:line="86" pos:column="46"/></operator> <literal type="number" pos:line="86" pos:column="47">1<pos:position pos:line="86" pos:column="48"/></literal></expr>;<pos:position pos:line="86" pos:column="49"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="88" pos:column="25">sum_update<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name pos:line="88" pos:column="36">data<pos:position pos:line="88" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="42">i<pos:position pos:line="88" pos:column="43"/></name></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="45"/></expr_stmt>

			<if pos:line="90" pos:column="25">if <condition pos:line="90" pos:column="28">(<expr><name pos:line="90" pos:column="29">fd<pos:position pos:line="90" pos:column="31"/></name> <operator pos:line="90" pos:column="32">!=<pos:position pos:line="90" pos:column="34"/></operator> <operator pos:line="90" pos:column="35">-<pos:position pos:line="90" pos:column="36"/></operator><literal type="number" pos:line="90" pos:column="36">1<pos:position pos:line="90" pos:column="37"/></literal> <operator pos:line="90" pos:column="38">&amp;&amp;<pos:position pos:line="90" pos:column="48"/></operator> <call><name pos:line="90" pos:column="41">write_file<pos:position pos:line="90" pos:column="51"/></name><argument_list pos:line="90" pos:column="51">(<argument><expr><name pos:line="90" pos:column="52">fd<pos:position pos:line="90" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="90" pos:column="55">data<pos:position pos:line="90" pos:column="59"/></name></expr></argument>,<argument><expr><name pos:line="90" pos:column="60">i<pos:position pos:line="90" pos:column="61"/></name></expr></argument>)<pos:position pos:line="90" pos:column="62"/></argument_list></call> <operator pos:line="90" pos:column="63">!=<pos:position pos:line="90" pos:column="65"/></operator> <name pos:line="90" pos:column="66">i<pos:position pos:line="90" pos:column="67"/></name></expr>)<pos:position pos:line="90" pos:column="68"/></condition><then pos:line="90" pos:column="68">
				<block type="pseudo"><goto pos:line="91" pos:column="33">goto <name pos:line="91" pos:column="38">report_write_error<pos:position pos:line="91" pos:column="56"/></name>;<pos:position pos:line="91" pos:column="57"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="92" pos:column="25">offset<pos:position pos:line="92" pos:column="31"/></name> <operator pos:line="92" pos:column="32">+=<pos:position pos:line="92" pos:column="34"/></operator> <name pos:line="92" pos:column="35">i<pos:position pos:line="92" pos:column="36"/></name></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>
			<continue pos:line="93" pos:column="25">continue;<pos:position pos:line="93" pos:column="34"/></continue>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="96" pos:column="17">i<pos:position pos:line="96" pos:column="18"/></name> <operator pos:line="96" pos:column="19">=<pos:position pos:line="96" pos:column="20"/></operator> <operator pos:line="96" pos:column="21">-<pos:position pos:line="96" pos:column="22"/></operator><operator pos:line="96" pos:column="22">(<pos:position pos:line="96" pos:column="23"/></operator><name pos:line="96" pos:column="23">i<pos:position pos:line="96" pos:column="24"/></name><operator pos:line="96" pos:column="24">+<pos:position pos:line="96" pos:column="25"/></operator><literal type="number" pos:line="96" pos:column="25">1<pos:position pos:line="96" pos:column="26"/></literal><operator pos:line="96" pos:column="26">)<pos:position pos:line="96" pos:column="27"/></operator></expr>;<pos:position pos:line="96" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="97" pos:column="17">offset2<pos:position pos:line="97" pos:column="24"/></name> <operator pos:line="97" pos:column="25">=<pos:position pos:line="97" pos:column="26"/></operator> <name pos:line="97" pos:column="27">i<pos:position pos:line="97" pos:column="28"/></name> <operator pos:line="97" pos:column="29">*<pos:position pos:line="97" pos:column="30"/></operator> <operator pos:line="97" pos:column="31">(<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="32">OFF_T<pos:position pos:line="97" pos:column="37"/></name><operator pos:line="97" pos:column="37">)<pos:position pos:line="97" pos:column="38"/></operator><name><name pos:line="97" pos:column="38">sum<pos:position pos:line="97" pos:column="41"/></name><operator pos:line="97" pos:column="41">.<pos:position pos:line="97" pos:column="42"/></operator><name pos:line="97" pos:column="42">blength<pos:position pos:line="97" pos:column="49"/></name></name></expr>;<pos:position pos:line="97" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><name pos:line="98" pos:column="17">len<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">=<pos:position pos:line="98" pos:column="22"/></operator> <name><name pos:line="98" pos:column="23">sum<pos:position pos:line="98" pos:column="26"/></name><operator pos:line="98" pos:column="26">.<pos:position pos:line="98" pos:column="27"/></operator><name pos:line="98" pos:column="27">blength<pos:position pos:line="98" pos:column="34"/></name></name></expr>;<pos:position pos:line="98" pos:column="35"/></expr_stmt>
		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><name pos:line="99" pos:column="21">i<pos:position pos:line="99" pos:column="22"/></name> <operator pos:line="99" pos:column="23">==<pos:position pos:line="99" pos:column="25"/></operator> <operator pos:line="99" pos:column="26">(<pos:position pos:line="99" pos:column="27"/></operator><name pos:line="99" pos:column="27">int<pos:position pos:line="99" pos:column="30"/></name><operator pos:line="99" pos:column="30">)<pos:position pos:line="99" pos:column="31"/></operator><name><name pos:line="99" pos:column="31">sum<pos:position pos:line="99" pos:column="34"/></name><operator pos:line="99" pos:column="34">.<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="35">count<pos:position pos:line="99" pos:column="40"/></name></name><operator pos:line="99" pos:column="40">-<pos:position pos:line="99" pos:column="41"/></operator><literal type="number" pos:line="99" pos:column="41">1<pos:position pos:line="99" pos:column="42"/></literal> <operator pos:line="99" pos:column="43">&amp;&amp;<pos:position pos:line="99" pos:column="53"/></operator> <name><name pos:line="99" pos:column="46">sum<pos:position pos:line="99" pos:column="49"/></name><operator pos:line="99" pos:column="49">.<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="50">remainder<pos:position pos:line="99" pos:column="59"/></name></name> <operator pos:line="99" pos:column="60">!=<pos:position pos:line="99" pos:column="62"/></operator> <literal type="number" pos:line="99" pos:column="63">0<pos:position pos:line="99" pos:column="64"/></literal></expr>)<pos:position pos:line="99" pos:column="65"/></condition><then pos:line="99" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="25">len<pos:position pos:line="100" pos:column="28"/></name> <operator pos:line="100" pos:column="29">=<pos:position pos:line="100" pos:column="30"/></operator> <name><name pos:line="100" pos:column="31">sum<pos:position pos:line="100" pos:column="34"/></name><operator pos:line="100" pos:column="34">.<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="35">remainder<pos:position pos:line="100" pos:column="44"/></name></name></expr>;<pos:position pos:line="100" pos:column="45"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="102" pos:column="17">stats<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">.<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="23">matched_data<pos:position pos:line="102" pos:column="35"/></name></name> <operator pos:line="102" pos:column="36">+=<pos:position pos:line="102" pos:column="38"/></operator> <name pos:line="102" pos:column="39">len<pos:position pos:line="102" pos:column="42"/></name></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt>

		<if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><call><name pos:line="104" pos:column="21">DEBUG_GTE<pos:position pos:line="104" pos:column="30"/></name><argument_list pos:line="104" pos:column="30">(<argument><expr><name pos:line="104" pos:column="31">DELTASUM<pos:position pos:line="104" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="41">3<pos:position pos:line="104" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="104" pos:column="44"/></condition><then pos:line="104" pos:column="44"> <block pos:line="104" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">rprintf<pos:position pos:line="105" pos:column="32"/></name><argument_list pos:line="105" pos:column="32">(<argument><expr><name pos:line="105" pos:column="33">FINFO<pos:position pos:line="105" pos:column="38"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="106" pos:column="33">"chunk[%d] of size %ld at %s offset=%s%s\n"<pos:position pos:line="106" pos:column="76"/></literal></expr></argument>,
				<argument><expr><name pos:line="107" pos:column="33">i<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="36">(<pos:position pos:line="107" pos:column="37"/></operator><name pos:line="107" pos:column="37">long<pos:position pos:line="107" pos:column="41"/></name><operator pos:line="107" pos:column="41">)<pos:position pos:line="107" pos:column="42"/></operator><name pos:line="107" pos:column="42">len<pos:position pos:line="107" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="47">big_num<pos:position pos:line="107" pos:column="54"/></name><argument_list pos:line="107" pos:column="54">(<argument><expr><name pos:line="107" pos:column="55">offset2<pos:position pos:line="107" pos:column="62"/></name></expr></argument>)<pos:position pos:line="107" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="65">big_num<pos:position pos:line="107" pos:column="72"/></name><argument_list pos:line="107" pos:column="72">(<argument><expr><name pos:line="107" pos:column="73">offset<pos:position pos:line="107" pos:column="79"/></name></expr></argument>)<pos:position pos:line="107" pos:column="80"/></argument_list></call></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="108" pos:column="33">updating_basis_or_equiv<pos:position pos:line="108" pos:column="56"/></name> <operator pos:line="108" pos:column="57">&amp;&amp;<pos:position pos:line="108" pos:column="67"/></operator> <name pos:line="108" pos:column="60">offset<pos:position pos:line="108" pos:column="66"/></name> <operator pos:line="108" pos:column="67">==<pos:position pos:line="108" pos:column="69"/></operator> <name pos:line="108" pos:column="70">offset2<pos:position pos:line="108" pos:column="77"/></name></expr> ?<pos:position pos:line="108" pos:column="79"/></condition><then pos:line="108" pos:column="79"> <expr><literal type="string" pos:line="108" pos:column="80">" (seek)"<pos:position pos:line="108" pos:column="89"/></literal></expr> <pos:position pos:line="108" pos:column="90"/></then><else pos:line="108" pos:column="90">: <expr><literal type="string" pos:line="108" pos:column="92">""<pos:position pos:line="108" pos:column="94"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="108" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="96"/></expr_stmt>
		}<pos:position pos:line="109" pos:column="18"/></block></then></if>

		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name pos:line="111" pos:column="21">mapbuf<pos:position pos:line="111" pos:column="27"/></name></expr>)<pos:position pos:line="111" pos:column="28"/></condition><then pos:line="111" pos:column="28"> <block pos:line="111" pos:column="29">{
			<expr_stmt><expr><name pos:line="112" pos:column="25">map<pos:position pos:line="112" pos:column="28"/></name> <operator pos:line="112" pos:column="29">=<pos:position pos:line="112" pos:column="30"/></operator> <call><name pos:line="112" pos:column="31">map_ptr<pos:position pos:line="112" pos:column="38"/></name><argument_list pos:line="112" pos:column="38">(<argument><expr><name pos:line="112" pos:column="39">mapbuf<pos:position pos:line="112" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="112" pos:column="46">offset2<pos:position pos:line="112" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="112" pos:column="54">len<pos:position pos:line="112" pos:column="57"/></name></expr></argument>)<pos:position pos:line="112" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="59"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="114" pos:column="25">see_token<pos:position pos:line="114" pos:column="34"/></name><argument_list pos:line="114" pos:column="34">(<argument><expr><name pos:line="114" pos:column="35">map<pos:position pos:line="114" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="40">len<pos:position pos:line="114" pos:column="43"/></name></expr></argument>)<pos:position pos:line="114" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="115" pos:column="25">sum_update<pos:position pos:line="115" pos:column="35"/></name><argument_list pos:line="115" pos:column="35">(<argument><expr><name pos:line="115" pos:column="36">map<pos:position pos:line="115" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="41">len<pos:position pos:line="115" pos:column="44"/></name></expr></argument>)<pos:position pos:line="115" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="116" pos:column="18"/></block></then></if>

		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><name pos:line="118" pos:column="21">updating_basis_or_equiv<pos:position pos:line="118" pos:column="44"/></name></expr>)<pos:position pos:line="118" pos:column="45"/></condition><then pos:line="118" pos:column="45"> <block pos:line="118" pos:column="46">{
			<if pos:line="119" pos:column="25">if <condition pos:line="119" pos:column="28">(<expr><name pos:line="119" pos:column="29">offset<pos:position pos:line="119" pos:column="35"/></name> <operator pos:line="119" pos:column="36">==<pos:position pos:line="119" pos:column="38"/></operator> <name pos:line="119" pos:column="39">offset2<pos:position pos:line="119" pos:column="46"/></name> <operator pos:line="119" pos:column="47">&amp;&amp;<pos:position pos:line="119" pos:column="57"/></operator> <name pos:line="119" pos:column="50">fd<pos:position pos:line="119" pos:column="52"/></name> <operator pos:line="119" pos:column="53">!=<pos:position pos:line="119" pos:column="55"/></operator> <operator pos:line="119" pos:column="56">-<pos:position pos:line="119" pos:column="57"/></operator><literal type="number" pos:line="119" pos:column="57">1<pos:position pos:line="119" pos:column="58"/></literal></expr>)<pos:position pos:line="119" pos:column="59"/></condition><then pos:line="119" pos:column="59"> <block pos:line="119" pos:column="60">{
				<decl_stmt><decl><type><name pos:line="120" pos:column="33">OFF_T<pos:position pos:line="120" pos:column="38"/></name></type> <name pos:line="120" pos:column="39">pos<pos:position pos:line="120" pos:column="42"/></name></decl>;<pos:position pos:line="120" pos:column="43"/></decl_stmt>
				<if pos:line="121" pos:column="33">if <condition pos:line="121" pos:column="36">(<expr><call><name pos:line="121" pos:column="37">flush_write_file<pos:position pos:line="121" pos:column="53"/></name><argument_list pos:line="121" pos:column="53">(<argument><expr><name pos:line="121" pos:column="54">fd<pos:position pos:line="121" pos:column="56"/></name></expr></argument>)<pos:position pos:line="121" pos:column="57"/></argument_list></call> <operator pos:line="121" pos:column="58">&lt;<pos:position pos:line="121" pos:column="62"/></operator> <literal type="number" pos:line="121" pos:column="60">0<pos:position pos:line="121" pos:column="61"/></literal></expr>)<pos:position pos:line="121" pos:column="62"/></condition><then pos:line="121" pos:column="62">
					<block type="pseudo"><goto pos:line="122" pos:column="41">goto <name pos:line="122" pos:column="46">report_write_error<pos:position pos:line="122" pos:column="64"/></name>;<pos:position pos:line="122" pos:column="65"/></goto></block></then></if>
				<expr_stmt><expr><name pos:line="123" pos:column="33">offset<pos:position pos:line="123" pos:column="39"/></name> <operator pos:line="123" pos:column="40">+=<pos:position pos:line="123" pos:column="42"/></operator> <name pos:line="123" pos:column="43">len<pos:position pos:line="123" pos:column="46"/></name></expr>;<pos:position pos:line="123" pos:column="47"/></expr_stmt>
				<if pos:line="124" pos:column="33">if <condition pos:line="124" pos:column="36">(<expr><operator pos:line="124" pos:column="37">(<pos:position pos:line="124" pos:column="38"/></operator><name pos:line="124" pos:column="38">pos<pos:position pos:line="124" pos:column="41"/></name> <operator pos:line="124" pos:column="42">=<pos:position pos:line="124" pos:column="43"/></operator> <call><name pos:line="124" pos:column="44">do_lseek<pos:position pos:line="124" pos:column="52"/></name><argument_list pos:line="124" pos:column="52">(<argument><expr><name pos:line="124" pos:column="53">fd<pos:position pos:line="124" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="57">len<pos:position pos:line="124" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="62">SEEK_CUR<pos:position pos:line="124" pos:column="70"/></name></expr></argument>)<pos:position pos:line="124" pos:column="71"/></argument_list></call><operator pos:line="124" pos:column="71">)<pos:position pos:line="124" pos:column="72"/></operator> <operator pos:line="124" pos:column="73">!=<pos:position pos:line="124" pos:column="75"/></operator> <name pos:line="124" pos:column="76">offset<pos:position pos:line="124" pos:column="82"/></name></expr>)<pos:position pos:line="124" pos:column="83"/></condition><then pos:line="124" pos:column="83"> <block pos:line="124" pos:column="84">{
					<expr_stmt><expr><call><name pos:line="125" pos:column="41">rsyserr<pos:position pos:line="125" pos:column="48"/></name><argument_list pos:line="125" pos:column="48">(<argument><expr><name pos:line="125" pos:column="49">FERROR_XFER<pos:position pos:line="125" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="62">errno<pos:position pos:line="125" pos:column="67"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="126" pos:column="49">"lseek of %s returned %s, not %s"<pos:position pos:line="126" pos:column="82"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="127" pos:column="49">full_fname<pos:position pos:line="127" pos:column="59"/></name><argument_list pos:line="127" pos:column="59">(<argument><expr><name pos:line="127" pos:column="60">fname<pos:position pos:line="127" pos:column="65"/></name></expr></argument>)<pos:position pos:line="127" pos:column="66"/></argument_list></call></expr></argument>,
						<argument><expr><call><name pos:line="128" pos:column="49">big_num<pos:position pos:line="128" pos:column="56"/></name><argument_list pos:line="128" pos:column="56">(<argument><expr><name pos:line="128" pos:column="57">pos<pos:position pos:line="128" pos:column="60"/></name></expr></argument>)<pos:position pos:line="128" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="128" pos:column="63">big_num<pos:position pos:line="128" pos:column="70"/></name><argument_list pos:line="128" pos:column="70">(<argument><expr><name pos:line="128" pos:column="71">offset<pos:position pos:line="128" pos:column="77"/></name></expr></argument>)<pos:position pos:line="128" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="80"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="129" pos:column="41">exit_cleanup<pos:position pos:line="129" pos:column="53"/></name><argument_list pos:line="129" pos:column="53">(<argument><expr><name pos:line="129" pos:column="54">RERR_FILEIO<pos:position pos:line="129" pos:column="65"/></name></expr></argument>)<pos:position pos:line="129" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="67"/></expr_stmt>
				}<pos:position pos:line="130" pos:column="34"/></block></then></if>
				<continue pos:line="131" pos:column="33">continue;<pos:position pos:line="131" pos:column="42"/></continue>
			}<pos:position pos:line="132" pos:column="26"/></block></then></if>
		}<pos:position pos:line="133" pos:column="18"/></block></then></if>
		<if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><name pos:line="134" pos:column="21">fd<pos:position pos:line="134" pos:column="23"/></name> <operator pos:line="134" pos:column="24">!=<pos:position pos:line="134" pos:column="26"/></operator> <operator pos:line="134" pos:column="27">-<pos:position pos:line="134" pos:column="28"/></operator><literal type="number" pos:line="134" pos:column="28">1<pos:position pos:line="134" pos:column="29"/></literal> <operator pos:line="134" pos:column="30">&amp;&amp;<pos:position pos:line="134" pos:column="40"/></operator> <name pos:line="134" pos:column="33">map<pos:position pos:line="134" pos:column="36"/></name> <operator pos:line="134" pos:column="37">&amp;&amp;<pos:position pos:line="134" pos:column="47"/></operator> <call><name pos:line="134" pos:column="40">write_file<pos:position pos:line="134" pos:column="50"/></name><argument_list pos:line="134" pos:column="50">(<argument><expr><name pos:line="134" pos:column="51">fd<pos:position pos:line="134" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="55">map<pos:position pos:line="134" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="60">len<pos:position pos:line="134" pos:column="63"/></name></expr></argument>)<pos:position pos:line="134" pos:column="64"/></argument_list></call> <operator pos:line="134" pos:column="65">!=<pos:position pos:line="134" pos:column="67"/></operator> <operator pos:line="134" pos:column="68">(<pos:position pos:line="134" pos:column="69"/></operator><name pos:line="134" pos:column="69">int<pos:position pos:line="134" pos:column="72"/></name><operator pos:line="134" pos:column="72">)<pos:position pos:line="134" pos:column="73"/></operator><name pos:line="134" pos:column="73">len<pos:position pos:line="134" pos:column="76"/></name></expr>)<pos:position pos:line="134" pos:column="77"/></condition><then pos:line="134" pos:column="77">
			<block type="pseudo"><goto pos:line="135" pos:column="25">goto <name pos:line="135" pos:column="30">report_write_error<pos:position pos:line="135" pos:column="48"/></name>;<pos:position pos:line="135" pos:column="49"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="136" pos:column="17">offset<pos:position pos:line="136" pos:column="23"/></name> <operator pos:line="136" pos:column="24">+=<pos:position pos:line="136" pos:column="26"/></operator> <name pos:line="136" pos:column="27">len<pos:position pos:line="136" pos:column="30"/></name></expr>;<pos:position pos:line="136" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="137" pos:column="10"/></block></while>

	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><call><name pos:line="139" pos:column="13">flush_write_file<pos:position pos:line="139" pos:column="29"/></name><argument_list pos:line="139" pos:column="29">(<argument><expr><name pos:line="139" pos:column="30">fd<pos:position pos:line="139" pos:column="32"/></name></expr></argument>)<pos:position pos:line="139" pos:column="33"/></argument_list></call> <operator pos:line="139" pos:column="34">&lt;<pos:position pos:line="139" pos:column="38"/></operator> <literal type="number" pos:line="139" pos:column="36">0<pos:position pos:line="139" pos:column="37"/></literal></expr>)<pos:position pos:line="139" pos:column="38"/></condition><then pos:line="139" pos:column="38">
		<block type="pseudo"><goto pos:line="140" pos:column="17">goto <name pos:line="140" pos:column="22">report_write_error<pos:position pos:line="140" pos:column="40"/></name>;<pos:position pos:line="140" pos:column="41"/></goto></block></then></if>

<cpp:ifdef pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">ifdef<pos:position pos:line="142" pos:column="7"/></cpp:directive> <name pos:line="142" pos:column="8">HAVE_FTRUNCATE<pos:position pos:line="142" pos:column="22"/></name></cpp:ifdef>
	<comment type="block" pos:line="143" pos:column="9">/* inplace: New data could be shorter than old data.
	 * preallocate_files: total_size could have been an overestimate.
	 *     Cut off any extra preallocated zeros from dest file. */</comment>
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><operator pos:line="146" pos:column="13">(<pos:position pos:line="146" pos:column="14"/></operator><name pos:line="146" pos:column="14">inplace<pos:position pos:line="146" pos:column="21"/></name>
<cpp:ifdef pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">ifdef<pos:position pos:line="147" pos:column="7"/></cpp:directive> <name pos:line="147" pos:column="8">PREALLOCATE_NEEDS_TRUNCATE<pos:position pos:line="147" pos:column="34"/></name></cpp:ifdef>
	  <operator pos:line="148" pos:column="11">||<pos:position pos:line="148" pos:column="13"/></operator> <name pos:line="148" pos:column="14">preallocated_len<pos:position pos:line="148" pos:column="30"/></name> <operator pos:line="148" pos:column="31">&gt;<pos:position pos:line="148" pos:column="35"/></operator> <name pos:line="148" pos:column="33">offset<pos:position pos:line="148" pos:column="39"/></name>
<cpp:endif pos:line="149" pos:column="1">#<cpp:directive pos:line="149" pos:column="2">endif<pos:position pos:line="149" pos:column="7"/></cpp:directive></cpp:endif>
	  <operator pos:line="150" pos:column="11">)<pos:position pos:line="150" pos:column="12"/></operator> <operator pos:line="150" pos:column="13">&amp;&amp;<pos:position pos:line="150" pos:column="23"/></operator> <name pos:line="150" pos:column="16">fd<pos:position pos:line="150" pos:column="18"/></name> <operator pos:line="150" pos:column="19">!=<pos:position pos:line="150" pos:column="21"/></operator> <operator pos:line="150" pos:column="22">-<pos:position pos:line="150" pos:column="23"/></operator><literal type="number" pos:line="150" pos:column="23">1<pos:position pos:line="150" pos:column="24"/></literal> <operator pos:line="150" pos:column="25">&amp;&amp;<pos:position pos:line="150" pos:column="35"/></operator> <call><name pos:line="150" pos:column="28">do_ftruncate<pos:position pos:line="150" pos:column="40"/></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">fd<pos:position pos:line="150" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="45">offset<pos:position pos:line="150" pos:column="51"/></name></expr></argument>)<pos:position pos:line="150" pos:column="52"/></argument_list></call> <operator pos:line="150" pos:column="53">&lt;<pos:position pos:line="150" pos:column="57"/></operator> <literal type="number" pos:line="150" pos:column="55">0<pos:position pos:line="150" pos:column="56"/></literal></expr>)<pos:position pos:line="150" pos:column="57"/></condition><then pos:line="150" pos:column="57"> <block pos:line="150" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="151" pos:column="17">rsyserr<pos:position pos:line="151" pos:column="24"/></name><argument_list pos:line="151" pos:column="24">(<argument><expr><name pos:line="151" pos:column="25">FERROR_XFER<pos:position pos:line="151" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="38">errno<pos:position pos:line="151" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="45">"ftruncate failed on %s"<pos:position pos:line="151" pos:column="69"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="152" pos:column="25">full_fname<pos:position pos:line="152" pos:column="35"/></name><argument_list pos:line="152" pos:column="35">(<argument><expr><name pos:line="152" pos:column="36">fname<pos:position pos:line="152" pos:column="41"/></name></expr></argument>)<pos:position pos:line="152" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="152" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="153" pos:column="10"/></block></then></if>
<cpp:endif pos:line="154" pos:column="1">#<cpp:directive pos:line="154" pos:column="2">endif<pos:position pos:line="154" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><call><name pos:line="156" pos:column="13">INFO_GTE<pos:position pos:line="156" pos:column="21"/></name><argument_list pos:line="156" pos:column="21">(<argument><expr><name pos:line="156" pos:column="22">PROGRESS<pos:position pos:line="156" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="32">1<pos:position pos:line="156" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="156" pos:column="35"/></condition><then pos:line="156" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="17">end_progress<pos:position pos:line="157" pos:column="29"/></name><argument_list pos:line="157" pos:column="29">(<argument><expr><name pos:line="157" pos:column="30">total_size<pos:position pos:line="157" pos:column="40"/></name></expr></argument>)<pos:position pos:line="157" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="42"/></expr_stmt></block></then></if>

	<if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><name pos:line="159" pos:column="13">fd<pos:position pos:line="159" pos:column="15"/></name> <operator pos:line="159" pos:column="16">!=<pos:position pos:line="159" pos:column="18"/></operator> <operator pos:line="159" pos:column="19">-<pos:position pos:line="159" pos:column="20"/></operator><literal type="number" pos:line="159" pos:column="20">1<pos:position pos:line="159" pos:column="21"/></literal> <operator pos:line="159" pos:column="22">&amp;&amp;<pos:position pos:line="159" pos:column="32"/></operator> <name pos:line="159" pos:column="25">offset<pos:position pos:line="159" pos:column="31"/></name> <operator pos:line="159" pos:column="32">&gt;<pos:position pos:line="159" pos:column="36"/></operator> <literal type="number" pos:line="159" pos:column="34">0<pos:position pos:line="159" pos:column="35"/></literal> <operator pos:line="159" pos:column="36">&amp;&amp;<pos:position pos:line="159" pos:column="46"/></operator> <call><name pos:line="159" pos:column="39">sparse_end<pos:position pos:line="159" pos:column="49"/></name><argument_list pos:line="159" pos:column="49">(<argument><expr><name pos:line="159" pos:column="50">fd<pos:position pos:line="159" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="54">offset<pos:position pos:line="159" pos:column="60"/></name></expr></argument>)<pos:position pos:line="159" pos:column="61"/></argument_list></call> <operator pos:line="159" pos:column="62">!=<pos:position pos:line="159" pos:column="64"/></operator> <literal type="number" pos:line="159" pos:column="65">0<pos:position pos:line="159" pos:column="66"/></literal></expr>)<pos:position pos:line="159" pos:column="67"/></condition><then pos:line="159" pos:column="67"> <block pos:line="159" pos:column="68">{
	    <label><name pos:line="160" pos:column="13">report_write_error<pos:position pos:line="160" pos:column="31"/></name>:<pos:position pos:line="160" pos:column="32"/></label>
		<expr_stmt><expr><call><name pos:line="161" pos:column="17">rsyserr<pos:position pos:line="161" pos:column="24"/></name><argument_list pos:line="161" pos:column="24">(<argument><expr><name pos:line="161" pos:column="25">FERROR_XFER<pos:position pos:line="161" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="38">errno<pos:position pos:line="161" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="45">"write failed on %s"<pos:position pos:line="161" pos:column="65"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="162" pos:column="25">full_fname<pos:position pos:line="162" pos:column="35"/></name><argument_list pos:line="162" pos:column="35">(<argument><expr><name pos:line="162" pos:column="36">fname<pos:position pos:line="162" pos:column="41"/></name></expr></argument>)<pos:position pos:line="162" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="162" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="163" pos:column="17">exit_cleanup<pos:position pos:line="163" pos:column="29"/></name><argument_list pos:line="163" pos:column="29">(<argument><expr><name pos:line="163" pos:column="30">RERR_FILEIO<pos:position pos:line="163" pos:column="41"/></name></expr></argument>)<pos:position pos:line="163" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="164" pos:column="10"/></block></then></if>

	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><call><name pos:line="166" pos:column="13">sum_end<pos:position pos:line="166" pos:column="20"/></name><argument_list pos:line="166" pos:column="20">(<argument><expr><name pos:line="166" pos:column="21">file_sum1<pos:position pos:line="166" pos:column="30"/></name></expr></argument>)<pos:position pos:line="166" pos:column="31"/></argument_list></call> <operator pos:line="166" pos:column="32">!=<pos:position pos:line="166" pos:column="34"/></operator> <name pos:line="166" pos:column="35">checksum_len<pos:position pos:line="166" pos:column="47"/></name></expr>)<pos:position pos:line="166" pos:column="48"/></condition><then pos:line="166" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="167" pos:column="17">overflow_exit<pos:position pos:line="167" pos:column="30"/></name><argument_list pos:line="167" pos:column="30">(<argument><expr><literal type="string" pos:line="167" pos:column="31">"checksum_len"<pos:position pos:line="167" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="47"/></expr_stmt></block></then></if> <comment type="block" pos:line="167" pos:column="48">/* Impossible... */</comment>

	<if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name pos:line="169" pos:column="13">mapbuf<pos:position pos:line="169" pos:column="19"/></name></expr>)<pos:position pos:line="169" pos:column="20"/></condition><then pos:line="169" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="170" pos:column="17">unmap_file<pos:position pos:line="170" pos:column="27"/></name><argument_list pos:line="170" pos:column="27">(<argument><expr><name pos:line="170" pos:column="28">mapbuf<pos:position pos:line="170" pos:column="34"/></name></expr></argument>)<pos:position pos:line="170" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="172" pos:column="9">read_buf<pos:position pos:line="172" pos:column="17"/></name><argument_list pos:line="172" pos:column="17">(<argument><expr><name pos:line="172" pos:column="18">f_in<pos:position pos:line="172" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="24">sender_file_sum<pos:position pos:line="172" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="41">checksum_len<pos:position pos:line="172" pos:column="53"/></name></expr></argument>)<pos:position pos:line="172" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="55"/></expr_stmt>
	<if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><call><name pos:line="173" pos:column="13">DEBUG_GTE<pos:position pos:line="173" pos:column="22"/></name><argument_list pos:line="173" pos:column="22">(<argument><expr><name pos:line="173" pos:column="23">DELTASUM<pos:position pos:line="173" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="173" pos:column="33">2<pos:position pos:line="173" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="173" pos:column="36"/></condition><then pos:line="173" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="174" pos:column="17">rprintf<pos:position pos:line="174" pos:column="24"/></name><argument_list pos:line="174" pos:column="24">(<argument><expr><name pos:line="174" pos:column="25">FINFO<pos:position pos:line="174" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="174" pos:column="31">"got file_sum\n"<pos:position pos:line="174" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="49"/></expr_stmt></block></then></if>
	<if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><name pos:line="175" pos:column="13">fd<pos:position pos:line="175" pos:column="15"/></name> <operator pos:line="175" pos:column="16">!=<pos:position pos:line="175" pos:column="18"/></operator> <operator pos:line="175" pos:column="19">-<pos:position pos:line="175" pos:column="20"/></operator><literal type="number" pos:line="175" pos:column="20">1<pos:position pos:line="175" pos:column="21"/></literal> <operator pos:line="175" pos:column="22">&amp;&amp;<pos:position pos:line="175" pos:column="32"/></operator> <call><name pos:line="175" pos:column="25">memcmp<pos:position pos:line="175" pos:column="31"/></name><argument_list pos:line="175" pos:column="31">(<argument><expr><name pos:line="175" pos:column="32">file_sum1<pos:position pos:line="175" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="43">sender_file_sum<pos:position pos:line="175" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="60">checksum_len<pos:position pos:line="175" pos:column="72"/></name></expr></argument>)<pos:position pos:line="175" pos:column="73"/></argument_list></call> <operator pos:line="175" pos:column="74">!=<pos:position pos:line="175" pos:column="76"/></operator> <literal type="number" pos:line="175" pos:column="77">0<pos:position pos:line="175" pos:column="78"/></literal></expr>)<pos:position pos:line="175" pos:column="79"/></condition><then pos:line="175" pos:column="79">
		<block type="pseudo"><return pos:line="176" pos:column="17">return <expr><literal type="number" pos:line="176" pos:column="24">0<pos:position pos:line="176" pos:column="25"/></literal></expr>;<pos:position pos:line="176" pos:column="26"/></return></block></then></if>
	<return pos:line="177" pos:column="9">return <expr><literal type="number" pos:line="177" pos:column="16">1<pos:position pos:line="177" pos:column="17"/></literal></expr>;<pos:position pos:line="177" pos:column="18"/></return>
}<pos:position pos:line="178" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_249.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">generate_files<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">f<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">file_list<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">flist<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">local_name<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">f_recv<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">phase<pos:position pos:line="4" pos:column="12"/></name><init pos:line="4" pos:column="12">=<expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">verbose<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">&gt;<pos:position pos:line="6" pos:column="19"/></operator> <literal type="number" pos:line="6" pos:column="17">2<pos:position pos:line="6" pos:column="18"/></literal></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="5">fprintf<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">FERROR<pos:position pos:line="7" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="20">"generator starting pid=%d count=%d\n"<pos:position pos:line="7" pos:column="58"/></literal></expr></argument>,
	    <argument><expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">)<pos:position pos:line="8" pos:column="18"/></operator><call><name pos:line="8" pos:column="18">getpid<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">()<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr></argument>,<argument><expr><name><name pos:line="8" pos:column="27">flist<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">count<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt></block></then></if>

  <for pos:line="10" pos:column="3">for <control pos:line="10" pos:column="7">(<init><expr><name pos:line="10" pos:column="8">i<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></init> <condition><expr><name pos:line="10" pos:column="15">i<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&lt;<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="19">flist<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">count<pos:position pos:line="10" pos:column="31"/></name></name></expr>;<pos:position pos:line="10" pos:column="32"/></condition> <incr><expr><name pos:line="10" pos:column="33">i<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">++<pos:position pos:line="10" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="37"/></control> <block pos:line="10" pos:column="38">{
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">file_struct<pos:position pos:line="11" pos:column="23"/></name></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">file<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator><name><name pos:line="11" pos:column="33">flist<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">files<pos:position pos:line="11" pos:column="45"/></name><index pos:line="11" pos:column="45">[<expr><name pos:line="11" pos:column="46">i<pos:position pos:line="11" pos:column="47"/></name></expr>]<pos:position pos:line="11" pos:column="48"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">file<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">name<pos:position pos:line="12" pos:column="20"/></name></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block type="pseudo"><continue pos:line="12" pos:column="22">continue;<pos:position pos:line="12" pos:column="31"/></continue></block></then></if>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">S_ISDIR<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name><name pos:line="13" pos:column="17">file<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">mode<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <block pos:line="13" pos:column="30">{
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">dry_run<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block type="pseudo"><continue pos:line="14" pos:column="20">continue;<pos:position pos:line="14" pos:column="29"/></continue></block></then></if>
      <if pos:line="15" pos:column="7">if <condition pos:line="15" pos:column="10">(<expr><call><name pos:line="15" pos:column="11">mkdir<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name><name pos:line="15" pos:column="17">file<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">name<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>,<argument><expr><name><name pos:line="15" pos:column="28">file<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">mode<pos:position pos:line="15" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call> <operator pos:line="15" pos:column="40">!=<pos:position pos:line="15" pos:column="42"/></operator> <literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal> <operator pos:line="15" pos:column="45">&amp;&amp;<pos:position pos:line="15" pos:column="55"/></operator>
	  <name pos:line="16" pos:column="11">errno<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">!=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">EEXIST<pos:position pos:line="16" pos:column="26"/></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27"> <block pos:line="16" pos:column="28">{
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">FERROR<pos:position pos:line="17" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="17" pos:column="24">"mkdir %s : %s\n"<pos:position pos:line="17" pos:column="41"/></literal></expr></argument>,
		<argument><expr><name><name pos:line="18" pos:column="17">file<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">name<pos:position pos:line="18" pos:column="27"/></name></name></expr></argument>,<argument><expr><call><name pos:line="18" pos:column="28">strerror<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><name pos:line="18" pos:column="37">errno<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
      }<pos:position pos:line="19" pos:column="8"/></block></then></if>
      <continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">recv_generator<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><ternary><condition><expr><name pos:line="22" pos:column="20">local_name<pos:position pos:line="22" pos:column="30"/></name></expr>?<pos:position pos:line="22" pos:column="31"/></condition><then><expr><name pos:line="22" pos:column="31">local_name<pos:position pos:line="22" pos:column="41"/></name></expr></then><else pos:line="22" pos:column="41">:<expr><name><name pos:line="22" pos:column="42">file<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">-&gt;<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="48">name<pos:position pos:line="22" pos:column="52"/></name></name></expr></else></ternary></expr></argument>,
		   <argument><expr><name pos:line="23" pos:column="20">flist<pos:position pos:line="23" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="23" pos:column="26">i<pos:position pos:line="23" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="23" pos:column="28">f<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="26" pos:column="3">phase<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">++<pos:position pos:line="26" pos:column="10"/></operator></expr>;<pos:position pos:line="26" pos:column="11"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">csum_length<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">SUM_LENGTH<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">ignore_times<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>

  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">verbose<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">&gt;<pos:position pos:line="30" pos:column="19"/></operator> <literal type="number" pos:line="30" pos:column="17">2<pos:position pos:line="30" pos:column="18"/></literal></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">fprintf<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">FERROR<pos:position pos:line="31" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="31" pos:column="20">"generate_files phase=%d\n"<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>,<argument><expr><name pos:line="31" pos:column="48">phase<pos:position pos:line="31" pos:column="53"/></name></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">write_int<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">f<pos:position pos:line="33" pos:column="14"/></name></expr></argument>,<argument><expr><operator pos:line="33" pos:column="15">-<pos:position pos:line="33" pos:column="16"/></operator><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="34" pos:column="3">write_flush<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">f<pos:position pos:line="34" pos:column="16"/></name></expr></argument>)<pos:position pos:line="34" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">remote_version<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">&gt;=<pos:position pos:line="36" pos:column="27"/></operator> <literal type="number" pos:line="36" pos:column="25">13<pos:position pos:line="36" pos:column="27"/></literal></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28"> <block pos:line="36" pos:column="29">{
    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><expr><name pos:line="37" pos:column="10">i<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator><call><name pos:line="37" pos:column="12">read_int<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">f_recv<pos:position pos:line="37" pos:column="27"/></name></expr></argument>)<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></init> <condition><expr><name pos:line="37" pos:column="30">i<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">!=<pos:position pos:line="37" pos:column="34"/></operator> <operator pos:line="37" pos:column="35">-<pos:position pos:line="37" pos:column="36"/></operator><literal type="number" pos:line="37" pos:column="36">1<pos:position pos:line="37" pos:column="37"/></literal></expr>;<pos:position pos:line="37" pos:column="38"/></condition> <incr><expr><name pos:line="37" pos:column="39">i<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">=<pos:position pos:line="37" pos:column="41"/></operator><call><name pos:line="37" pos:column="41">read_int<pos:position pos:line="37" pos:column="49"/></name><argument_list pos:line="37" pos:column="49">(<argument><expr><name pos:line="37" pos:column="50">f_recv<pos:position pos:line="37" pos:column="56"/></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr></incr>)<pos:position pos:line="37" pos:column="58"/></control> <block pos:line="37" pos:column="59">{
      <decl_stmt><decl><type><name><name pos:line="38" pos:column="7">struct<pos:position pos:line="38" pos:column="13"/></name> <name pos:line="38" pos:column="14">file_struct<pos:position pos:line="38" pos:column="25"/></name></name> <modifier pos:line="38" pos:column="26">*<pos:position pos:line="38" pos:column="27"/></modifier></type><name pos:line="38" pos:column="27">file<pos:position pos:line="38" pos:column="31"/></name> <init pos:line="38" pos:column="32">= <expr><operator pos:line="38" pos:column="34">&amp;<pos:position pos:line="38" pos:column="39"/></operator><name><name pos:line="38" pos:column="35">flist<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">files<pos:position pos:line="38" pos:column="47"/></name><index pos:line="38" pos:column="47">[<expr><name pos:line="38" pos:column="48">i<pos:position pos:line="38" pos:column="49"/></name></expr>]<pos:position pos:line="38" pos:column="50"/></index></name></expr></init></decl>;<pos:position pos:line="38" pos:column="51"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">recv_generator<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><ternary><condition><expr><name pos:line="39" pos:column="22">local_name<pos:position pos:line="39" pos:column="32"/></name></expr>?<pos:position pos:line="39" pos:column="33"/></condition><then><expr><name pos:line="39" pos:column="33">local_name<pos:position pos:line="39" pos:column="43"/></name></expr></then><else pos:line="39" pos:column="43">:<expr><name><name pos:line="39" pos:column="44">file<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">name<pos:position pos:line="39" pos:column="54"/></name></name></expr></else></ternary></expr></argument>,
		     <argument><expr><name pos:line="40" pos:column="22">flist<pos:position pos:line="40" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="40" pos:column="28">i<pos:position pos:line="40" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="40" pos:column="30">f<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>    
    }<pos:position pos:line="41" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="43" pos:column="5">phase<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">++<pos:position pos:line="43" pos:column="12"/></operator></expr>;<pos:position pos:line="43" pos:column="13"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">verbose<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">&gt;<pos:position pos:line="44" pos:column="21"/></operator> <literal type="number" pos:line="44" pos:column="19">2<pos:position pos:line="44" pos:column="20"/></literal></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="7">fprintf<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">FERROR<pos:position pos:line="45" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="45" pos:column="22">"generate_files phase=%d\n"<pos:position pos:line="45" pos:column="49"/></literal></expr></argument>,<argument><expr><name pos:line="45" pos:column="50">phase<pos:position pos:line="45" pos:column="55"/></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="47" pos:column="5">write_int<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">f<pos:position pos:line="47" pos:column="16"/></name></expr></argument>,<argument><expr><operator pos:line="47" pos:column="17">-<pos:position pos:line="47" pos:column="18"/></operator><literal type="number" pos:line="47" pos:column="18">1<pos:position pos:line="47" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">write_flush<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">f<pos:position pos:line="48" pos:column="18"/></name></expr></argument>)<pos:position pos:line="48" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then></if>


  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">verbose<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">&gt;<pos:position pos:line="52" pos:column="19"/></operator> <literal type="number" pos:line="52" pos:column="17">2<pos:position pos:line="52" pos:column="18"/></literal></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="5">fprintf<pos:position pos:line="53" pos:column="12"/></name><argument_list pos:line="53" pos:column="12">(<argument><expr><name pos:line="53" pos:column="13">FERROR<pos:position pos:line="53" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="53" pos:column="20">"generator wrote %d\n"<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>,<argument><expr><call><name pos:line="53" pos:column="43">write_total<pos:position pos:line="53" pos:column="54"/></name><argument_list pos:line="53" pos:column="54">()<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="58"/></expr_stmt></block></then></if>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

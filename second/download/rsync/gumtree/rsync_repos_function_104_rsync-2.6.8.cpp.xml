<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_104_rsync-2.6.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">read_longint<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int64<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">num<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">b<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><literal type="number" pos:line="4" pos:column="16">8<pos:position pos:line="4" pos:column="17"/></literal></expr>]<pos:position pos:line="4" pos:column="18"/></index></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<expr_stmt><expr><name pos:line="5" pos:column="9">num<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name pos:line="5" pos:column="15">read_int<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">f<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">int32<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">)<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">num<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">!=<pos:position pos:line="7" pos:column="26"/></operator> <operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">int32<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">)<pos:position pos:line="7" pos:column="34"/></operator><literal type="number" pos:line="7" pos:column="34">0xffffffff<pos:position pos:line="7" pos:column="44"/></literal></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><name pos:line="8" pos:column="24">num<pos:position pos:line="8" pos:column="27"/></name></expr>;<pos:position pos:line="8" pos:column="28"/></return></block></then></if>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">SIZEOF_INT64<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&lt;<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="20">8<pos:position pos:line="10" pos:column="21"/></literal></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">rprintf<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">FERROR<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"Integer overflow: attempted 64-bit offset\n"<pos:position pos:line="11" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">exit_cleanup<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">RERR_UNSUPPORTED<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">readfd<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">f<pos:position pos:line="14" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="14" pos:column="18">b<pos:position pos:line="14" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="20">8<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">num<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">IVAL<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">b<pos:position pos:line="15" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call> <operator pos:line="15" pos:column="25">|<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="27">(<pos:position pos:line="15" pos:column="28"/></operator><operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">int64<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator><call><name pos:line="15" pos:column="36">IVAL<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">b<pos:position pos:line="15" pos:column="42"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="43">4<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator><operator pos:line="15" pos:column="46">&lt;&lt;<pos:position pos:line="15" pos:column="54"/></operator><literal type="number" pos:line="15" pos:column="48">32<pos:position pos:line="15" pos:column="50"/></literal><operator pos:line="15" pos:column="50">)<pos:position pos:line="15" pos:column="51"/></operator></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">num<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

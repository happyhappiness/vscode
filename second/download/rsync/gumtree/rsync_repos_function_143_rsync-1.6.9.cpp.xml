<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_143_rsync-1.6.9.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">deflateEnd<pos:position pos:line="1" pos:column="15"/></name> <argument_list pos:line="1" pos:column="16">(<argument><expr><name pos:line="1" pos:column="17">strm<pos:position pos:line="1" pos:column="21"/></name></expr></argument>)<pos:position pos:line="1" pos:column="22"/></argument_list>
    <name pos:line="2" pos:column="5">z_stream<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier><name pos:line="2" pos:column="15">strm<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">deflate_state<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">state<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><operator pos:line="4" pos:column="28">(<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">deflate_state<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></operator><operator pos:line="4" pos:column="44">)<pos:position pos:line="4" pos:column="45"/></operator> <name><name pos:line="4" pos:column="46">strm<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">state<pos:position pos:line="4" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">strm<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">Z_NULL<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">||<pos:position pos:line="6" pos:column="26"/></operator> <name pos:line="6" pos:column="27">state<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">==<pos:position pos:line="6" pos:column="35"/></operator> <name pos:line="6" pos:column="36">Z_NULL<pos:position pos:line="6" pos:column="42"/></name></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <block type="pseudo"><return pos:line="6" pos:column="44">return <expr><name pos:line="6" pos:column="51">Z_STREAM_ERROR<pos:position pos:line="6" pos:column="65"/></name></expr>;<pos:position pos:line="6" pos:column="66"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">TRY_FREE<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">strm<pos:position pos:line="8" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="20">state<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">window<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="35">state<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">w_size<pos:position pos:line="8" pos:column="48"/></name></name> <operator pos:line="8" pos:column="49">*<pos:position pos:line="8" pos:column="50"/></operator> <literal type="number" pos:line="8" pos:column="51">2<pos:position pos:line="8" pos:column="52"/></literal> <operator pos:line="8" pos:column="53">*<pos:position pos:line="8" pos:column="54"/></operator> <sizeof pos:line="8" pos:column="55">sizeof<argument_list pos:line="8" pos:column="61">(<argument><expr><name pos:line="8" pos:column="62">Byte<pos:position pos:line="8" pos:column="66"/></name></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">TRY_FREE<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">strm<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="20">state<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">prev<pos:position pos:line="9" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="33">state<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">w_size<pos:position pos:line="9" pos:column="46"/></name></name> <operator pos:line="9" pos:column="47">*<pos:position pos:line="9" pos:column="48"/></operator> <sizeof pos:line="9" pos:column="49">sizeof<argument_list pos:line="9" pos:column="55">(<argument><expr><name pos:line="9" pos:column="56">Pos<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">TRY_FREE<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">strm<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="20">state<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">head<pos:position pos:line="10" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="33">state<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">hash_size<pos:position pos:line="10" pos:column="49"/></name></name> <operator pos:line="10" pos:column="50">*<pos:position pos:line="10" pos:column="51"/></operator> <sizeof pos:line="10" pos:column="52">sizeof<argument_list pos:line="10" pos:column="58">(<argument><expr><name pos:line="10" pos:column="59">Pos<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">TRY_FREE<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">strm<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="20">state<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">pending_buf<pos:position pos:line="11" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="40">state<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">-&gt;<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="47">lit_bufsize<pos:position pos:line="11" pos:column="58"/></name></name> <operator pos:line="11" pos:column="59">*<pos:position pos:line="11" pos:column="60"/></operator> <literal type="number" pos:line="11" pos:column="61">2<pos:position pos:line="11" pos:column="62"/></literal> <operator pos:line="11" pos:column="63">*<pos:position pos:line="11" pos:column="64"/></operator> <sizeof pos:line="11" pos:column="65">sizeof<argument_list pos:line="11" pos:column="71">(<argument><expr><name pos:line="11" pos:column="72">ush<pos:position pos:line="11" pos:column="75"/></name></expr></argument>)<pos:position pos:line="11" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ZFREE<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">strm<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="17">state<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof<argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">deflate_state<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">strm<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">state<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">Z_NULL<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>

    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">Z_OK<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></unit>

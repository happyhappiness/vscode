<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_610_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">int<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">build_bl_tree<pos:position pos:line="1" pos:column="24"/></name><argument_list pos:line="1" pos:column="24">(<argument><expr><name pos:line="1" pos:column="25">s<pos:position pos:line="1" pos:column="26"/></name></expr></argument>)<pos:position pos:line="1" pos:column="27"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">max_blindex<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>  <comment type="block" pos:line="4" pos:column="23">/* index of last bit length code of non zero freq */</comment>

    <comment type="block" pos:line="6" pos:column="5">/* Determine the bit length frequencies for literal and distance trees */</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">scan_tree<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">s<pos:position pos:line="7" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">ct_data<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator><name><name pos:line="7" pos:column="29">s<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">dyn_ltree<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="43">s<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">l_desc<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">.<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="53">max_code<pos:position pos:line="7" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">scan_tree<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">s<pos:position pos:line="8" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">ct_data<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></operator><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator><name><name pos:line="8" pos:column="29">s<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">dyn_dtree<pos:position pos:line="8" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="43">s<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">d_desc<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">.<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">max_code<pos:position pos:line="8" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Build the bit length tree: */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">build_tree<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">s<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="19">(<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">tree_desc<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">*<pos:position pos:line="11" pos:column="31"/></operator><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="34">(<pos:position pos:line="11" pos:column="35"/></operator><name><name pos:line="11" pos:column="35">s<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">bl_desc<pos:position pos:line="11" pos:column="45"/></name></name><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator><operator pos:line="11" pos:column="46">)<pos:position pos:line="11" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* opt_len now includes the length of the tree representations, except
     * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
     */</comment>

    <comment type="block" pos:line="16" pos:column="5">/* Determine the number of bit length codes to send. The pkzip format
     * requires that at least 4 bit length codes be sent. (appnote.txt says
     * 3 but the actual value used is 4.)
     */</comment>
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">max_blindex<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="24">BL_CODES<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-<pos:position pos:line="20" pos:column="33"/></operator><literal type="number" pos:line="20" pos:column="33">1<pos:position pos:line="20" pos:column="34"/></literal></expr>;<pos:position pos:line="20" pos:column="35"/></init> <condition><expr><name pos:line="20" pos:column="36">max_blindex<pos:position pos:line="20" pos:column="47"/></name> <operator pos:line="20" pos:column="48">&gt;=<pos:position pos:line="20" pos:column="53"/></operator> <literal type="number" pos:line="20" pos:column="51">3<pos:position pos:line="20" pos:column="52"/></literal></expr>;<pos:position pos:line="20" pos:column="53"/></condition> <incr><expr><name pos:line="20" pos:column="54">max_blindex<pos:position pos:line="20" pos:column="65"/></name><operator pos:line="20" pos:column="65">--<pos:position pos:line="20" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="68"/></control> <block pos:line="20" pos:column="69">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">s<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">bl_tree<pos:position pos:line="21" pos:column="23"/></name><index pos:line="21" pos:column="23">[<expr><name><name pos:line="21" pos:column="24">bl_order<pos:position pos:line="21" pos:column="32"/></name><index pos:line="21" pos:column="32">[<expr><name pos:line="21" pos:column="33">max_blindex<pos:position pos:line="21" pos:column="44"/></name></expr>]<pos:position pos:line="21" pos:column="45"/></index></name></expr>]<pos:position pos:line="21" pos:column="46"/></index></name><operator pos:line="21" pos:column="46">.<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">Len<pos:position pos:line="21" pos:column="50"/></name> <operator pos:line="21" pos:column="51">!=<pos:position pos:line="21" pos:column="53"/></operator> <literal type="number" pos:line="21" pos:column="54">0<pos:position pos:line="21" pos:column="55"/></literal></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56"> <block type="pseudo"><break pos:line="21" pos:column="57">break;<pos:position pos:line="21" pos:column="63"/></break></block></then></if>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
    <comment type="block" pos:line="23" pos:column="5">/* Update opt_len to include the bit length tree and counts */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">s<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">opt_len<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">+=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">3<pos:position pos:line="24" pos:column="20"/></literal><operator pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></operator><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">max_blindex<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">+<pos:position pos:line="24" pos:column="34"/></operator><literal type="number" pos:line="24" pos:column="34">1<pos:position pos:line="24" pos:column="35"/></literal><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator> <operator pos:line="24" pos:column="37">+<pos:position pos:line="24" pos:column="38"/></operator> <literal type="number" pos:line="24" pos:column="39">5<pos:position pos:line="24" pos:column="40"/></literal><operator pos:line="24" pos:column="40">+<pos:position pos:line="24" pos:column="41"/></operator><literal type="number" pos:line="24" pos:column="41">5<pos:position pos:line="24" pos:column="42"/></literal><operator pos:line="24" pos:column="42">+<pos:position pos:line="24" pos:column="43"/></operator><literal type="number" pos:line="24" pos:column="43">4<pos:position pos:line="24" pos:column="44"/></literal></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">Tracev<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">stderr<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">,<pos:position pos:line="25" pos:column="20"/></operator> <literal type="string" pos:line="25" pos:column="21">"\ndyn trees: dyn %ld, stat %ld"<pos:position pos:line="25" pos:column="53"/></literal><operator pos:line="25" pos:column="53">,<pos:position pos:line="25" pos:column="54"/></operator>
            <name><name pos:line="26" pos:column="13">s<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">opt_len<pos:position pos:line="26" pos:column="23"/></name></name><operator pos:line="26" pos:column="23">,<pos:position pos:line="26" pos:column="24"/></operator> <name><name pos:line="26" pos:column="25">s<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">static_len<pos:position pos:line="26" pos:column="38"/></name></name><operator pos:line="26" pos:column="38">)<pos:position pos:line="26" pos:column="39"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="41"/></expr_stmt>

    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">max_blindex<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></unit>

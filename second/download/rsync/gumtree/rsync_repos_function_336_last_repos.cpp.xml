<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_336_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">log_item<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">enum<pos:position pos:line="1" pos:column="19"/></name> <name pos:line="1" pos:column="20">logcode<pos:position pos:line="1" pos:column="27"/></name></name></type> <name pos:line="1" pos:column="28">code<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="34">struct<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">file_struct<pos:position pos:line="1" pos:column="52"/></name></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">file<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">iflags<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="72">const<pos:position pos:line="1" pos:column="77"/></specifier> <name pos:line="1" pos:column="78">char<pos:position pos:line="1" pos:column="82"/></name> <modifier pos:line="1" pos:column="83">*<pos:position pos:line="1" pos:column="84"/></modifier></type><name pos:line="1" pos:column="84">hlink<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">s_or_r<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><ternary><condition><expr><name pos:line="3" pos:column="30">am_sender<pos:position pos:line="3" pos:column="39"/></name></expr> ?<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41"> <expr><literal type="string" pos:line="3" pos:column="42">"send"<pos:position pos:line="3" pos:column="48"/></literal></expr> <pos:position pos:line="3" pos:column="49"/></then><else pos:line="3" pos:column="49">: <expr><literal type="string" pos:line="3" pos:column="51">"recv"<pos:position pos:line="3" pos:column="57"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="58"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">code<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">FLOG<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&amp;&amp;<pos:position pos:line="5" pos:column="36"/></operator> <name pos:line="5" pos:column="29">stdout_format<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">&amp;&amp;<pos:position pos:line="5" pos:column="53"/></operator> <operator pos:line="5" pos:column="46">!<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">am_server<pos:position pos:line="5" pos:column="56"/></name></expr>)<pos:position pos:line="5" pos:column="57"/></condition><then pos:line="5" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="17">log_formatted<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">FCLIENT<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">stdout_format<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="55">s_or_r<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">file<pos:position pos:line="6" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="69">NULL<pos:position pos:line="6" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="75">iflags<pos:position pos:line="6" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="83">hlink<pos:position pos:line="6" pos:column="88"/></name></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="90"/></expr_stmt></block></then></if>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">code<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">!=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">FCLIENT<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">&amp;&amp;<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="32">logfile_format<pos:position pos:line="7" pos:column="46"/></name> <operator pos:line="7" pos:column="47">&amp;&amp;<pos:position pos:line="7" pos:column="57"/></operator> <operator pos:line="7" pos:column="50">*<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">logfile_format<pos:position pos:line="7" pos:column="65"/></name></expr>)<pos:position pos:line="7" pos:column="66"/></condition><then pos:line="7" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">log_formatted<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">FLOG<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">logfile_format<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">s_or_r<pos:position pos:line="8" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="61">file<pos:position pos:line="8" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="67">NULL<pos:position pos:line="8" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="73">iflags<pos:position pos:line="8" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="81">hlink<pos:position pos:line="8" pos:column="86"/></name></expr></argument>)<pos:position pos:line="8" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="88"/></expr_stmt></block></then></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

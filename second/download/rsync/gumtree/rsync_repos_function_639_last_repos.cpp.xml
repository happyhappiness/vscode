<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_639_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">inflateGetDictionary<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">strm<pos:position pos:line="1" pos:column="38"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">dictionary<pos:position pos:line="1" pos:column="50"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">dictLength<pos:position pos:line="1" pos:column="62"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">strm<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">Bytef<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">dictionary<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">uInt<pos:position pos:line="4" pos:column="5"/></name> <modifier pos:line="4" pos:column="6">*<pos:position pos:line="4" pos:column="7"/></modifier></type><name pos:line="4" pos:column="7">dictLength<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">inflate_state<pos:position pos:line="6" pos:column="25"/></name></name> <name pos:line="6" pos:column="26">FAR<pos:position pos:line="6" pos:column="29"/></name> <modifier pos:line="6" pos:column="30">*<pos:position pos:line="6" pos:column="31"/></modifier></type><name pos:line="6" pos:column="31">state<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* check state */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">strm<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">Z_NULL<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">||<pos:position pos:line="9" pos:column="26"/></operator> <name><name pos:line="9" pos:column="27">strm<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">state<pos:position pos:line="9" pos:column="38"/></name></name> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">Z_NULL<pos:position pos:line="9" pos:column="48"/></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block type="pseudo"><return pos:line="9" pos:column="50">return <expr><name pos:line="9" pos:column="57">Z_STREAM_ERROR<pos:position pos:line="9" pos:column="71"/></name></expr>;<pos:position pos:line="9" pos:column="72"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">state<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator>struct <name pos:line="10" pos:column="21">inflate_state<pos:position pos:line="10" pos:column="34"/></name> <name pos:line="10" pos:column="35">FAR<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator><name><name pos:line="10" pos:column="41">strm<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">state<pos:position pos:line="10" pos:column="52"/></name></name></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* copy dictionary */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">state<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">whave<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="25">dictionary<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">!=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">Z_NULL<pos:position pos:line="13" pos:column="45"/></name></expr>)<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <block pos:line="13" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">zmemcpy<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">dictionary<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="29">state<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">window<pos:position pos:line="14" pos:column="42"/></name></name> <operator pos:line="14" pos:column="43">+<pos:position pos:line="14" pos:column="44"/></operator> <name><name pos:line="14" pos:column="45">state<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">wnext<pos:position pos:line="14" pos:column="57"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="15" pos:column="17">state<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">whave<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">-<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="32">state<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">-&gt;<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="39">wnext<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">zmemcpy<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">dictionary<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">+<pos:position pos:line="16" pos:column="29"/></operator> <name><name pos:line="16" pos:column="30">state<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">whave<pos:position pos:line="16" pos:column="42"/></name></name> <operator pos:line="16" pos:column="43">-<pos:position pos:line="16" pos:column="44"/></operator> <name><name pos:line="16" pos:column="45">state<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">wnext<pos:position pos:line="16" pos:column="57"/></name></name></expr></argument>,
                <argument><expr><name><name pos:line="17" pos:column="17">state<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">window<pos:position pos:line="17" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="32">state<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">wnext<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">dictLength<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">!=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">Z_NULL<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">dictLength<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name><name pos:line="20" pos:column="23">state<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">-&gt;<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="30">whave<pos:position pos:line="20" pos:column="35"/></name></name></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt></block></then></if>
    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">Z_OK<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function_decl></unit>

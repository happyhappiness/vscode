<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_202_rsync-1.7.4.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">void<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">bi_windup<pos:position pos:line="1" pos:column="21"/></name><argument_list pos:line="1" pos:column="21">(<argument><expr><name pos:line="1" pos:column="22">s<pos:position pos:line="1" pos:column="23"/></name></expr></argument>)<pos:position pos:line="1" pos:column="24"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">bi_valid<pos:position pos:line="4" pos:column="20"/></name></name> <operator pos:line="4" pos:column="21">&gt;<pos:position pos:line="4" pos:column="25"/></operator> <literal type="number" pos:line="4" pos:column="23">8<pos:position pos:line="4" pos:column="24"/></literal></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25"> <block pos:line="4" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">put_short<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">s<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="22">s<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">bi_buf<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then> <elseif pos:line="6" pos:column="7">else <if pos:line="6" pos:column="12">if <condition pos:line="6" pos:column="15">(<expr><name><name pos:line="6" pos:column="16">s<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">bi_valid<pos:position pos:line="6" pos:column="27"/></name></name> <operator pos:line="6" pos:column="28">&gt;<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="30">0<pos:position pos:line="6" pos:column="31"/></literal></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32"> <block pos:line="6" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">put_byte<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">s<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">Byte<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator><name><name pos:line="7" pos:column="27">s<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">bi_buf<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">s<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">bi_buf<pos:position pos:line="9" pos:column="14"/></name></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">bi_valid<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">DEBUG_ZLIB<pos:position pos:line="11" pos:column="18"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">s<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">bits_sent<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name><name pos:line="12" pos:column="21">s<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">bits_sent<pos:position pos:line="12" pos:column="33"/></name></name><operator pos:line="12" pos:column="33">+<pos:position pos:line="12" pos:column="34"/></operator><literal type="number" pos:line="12" pos:column="34">7<pos:position pos:line="12" pos:column="35"/></literal><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator> <operator pos:line="12" pos:column="37">&amp;<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="39">~<pos:position pos:line="12" pos:column="40"/></operator><literal type="number" pos:line="12" pos:column="40">7<pos:position pos:line="12" pos:column="41"/></literal></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="14" pos:column="2"/></block></unit>

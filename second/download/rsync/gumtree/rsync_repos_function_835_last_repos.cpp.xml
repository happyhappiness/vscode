<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_835_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dowild<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><specifier pos:line="1" pos:column="19">const<pos:position pos:line="1" pos:column="24"/></specifier> <name pos:line="1" pos:column="25">uchar<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">p<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">uchar<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">text<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">uchar<pos:position pos:line="1" pos:column="65"/></name><modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier><specifier pos:line="1" pos:column="66">const<pos:position pos:line="1" pos:column="71"/></specifier> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">a<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">uchar<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">p_ch<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">WILD_TEST_ITERATIONS<pos:position pos:line="5" pos:column="28"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="6" pos:column="5">wildmatch_iteration_count<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">++<pos:position pos:line="6" pos:column="32"/></operator></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">( <init pos:line="9" pos:column="11">;<pos:position pos:line="9" pos:column="12"/></init> <condition><expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">p_ch<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">p<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">)<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <literal type="char" pos:line="9" pos:column="28">'\0'<pos:position pos:line="9" pos:column="32"/></literal></expr>;<pos:position pos:line="9" pos:column="33"/></condition> <incr><expr><name pos:line="9" pos:column="34">text<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">++<pos:position pos:line="9" pos:column="40"/></operator></expr><operator pos:line="9" pos:column="40">,<pos:position pos:line="9" pos:column="41"/></operator> <expr><name pos:line="9" pos:column="42">p<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">++<pos:position pos:line="9" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="46"/></control> <block pos:line="9" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">matched<pos:position pos:line="10" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="22">special<pos:position pos:line="10" pos:column="29"/></name></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">uchar<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">t_ch<pos:position pos:line="11" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="21">prev_ch<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
	<while pos:line="12" pos:column="9">while <condition pos:line="12" pos:column="15">(<expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">t_ch<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">text<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">)<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="31">==<pos:position pos:line="12" pos:column="33"/></operator> <literal type="char" pos:line="12" pos:column="34">'\0'<pos:position pos:line="12" pos:column="38"/></literal></expr>)<pos:position pos:line="12" pos:column="39"/></condition> <block pos:line="12" pos:column="40">{
	    <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">a<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">p_ch<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">!=<pos:position pos:line="14" pos:column="28"/></operator> <literal type="char" pos:line="14" pos:column="29">'*'<pos:position pos:line="14" pos:column="32"/></literal></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
		    <block type="pseudo"><return pos:line="15" pos:column="21">return <expr><name pos:line="15" pos:column="28">ABORT_ALL<pos:position pos:line="15" pos:column="37"/></name></expr>;<pos:position pos:line="15" pos:column="38"/></return></block></then></if>
		<break pos:line="16" pos:column="17">break;<pos:position pos:line="16" pos:column="23"/></break>
	    }<pos:position pos:line="17" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name pos:line="18" pos:column="13">text<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">a<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">++<pos:position pos:line="18" pos:column="24"/></operator></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></while>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">force_lower_case<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">&amp;&amp;<pos:position pos:line="20" pos:column="40"/></operator> <call><name pos:line="20" pos:column="33">ISUPPER<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">t_ch<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47">
	    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="13">t_ch<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">tolower<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">t_ch<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt></block></then></if>
	<switch pos:line="22" pos:column="9">switch <condition pos:line="22" pos:column="16">(<expr><name pos:line="22" pos:column="17">p_ch<pos:position pos:line="22" pos:column="21"/></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition> <block pos:line="22" pos:column="23">{
	  <case pos:line="23" pos:column="11">case <expr><literal type="char" pos:line="23" pos:column="16">'\\'<pos:position pos:line="23" pos:column="20"/></literal></expr>:<pos:position pos:line="23" pos:column="21"/></case>
	    <comment type="block" pos:line="24" pos:column="13">/* Literal match with following character.  Note that the test
	     * in "default" handles the p[1] == '\0' failure case. */</comment>
	    <expr_stmt><expr><name pos:line="26" pos:column="13">p_ch<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <operator pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></operator><operator pos:line="26" pos:column="21">++<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">p<pos:position pos:line="26" pos:column="24"/></name></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
	    <comment type="block" pos:line="27" pos:column="13">/* FALLTHROUGH */</comment>
	  <default pos:line="28" pos:column="11">default:<pos:position pos:line="28" pos:column="19"/></default>
	    <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">t_ch<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">!=<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">p_ch<pos:position pos:line="29" pos:column="29"/></name></expr>)<pos:position pos:line="29" pos:column="30"/></condition><then pos:line="29" pos:column="30">
		<block type="pseudo"><return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">FALSE<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></return></block></then></if>
	    <continue pos:line="31" pos:column="13">continue;<pos:position pos:line="31" pos:column="22"/></continue>
	  <case pos:line="32" pos:column="11">case <expr><literal type="char" pos:line="32" pos:column="16">'?'<pos:position pos:line="32" pos:column="19"/></literal></expr>:<pos:position pos:line="32" pos:column="20"/></case>
	    <comment type="block" pos:line="33" pos:column="13">/* Match anything but '/'. */</comment>
	    <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">t_ch<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">==<pos:position pos:line="34" pos:column="24"/></operator> <literal type="char" pos:line="34" pos:column="25">'/'<pos:position pos:line="34" pos:column="28"/></literal></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29">
		<block type="pseudo"><return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">FALSE<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></return></block></then></if>
	    <continue pos:line="36" pos:column="13">continue;<pos:position pos:line="36" pos:column="22"/></continue>
	  <case pos:line="37" pos:column="11">case <expr><literal type="char" pos:line="37" pos:column="16">'*'<pos:position pos:line="37" pos:column="19"/></literal></expr>:<pos:position pos:line="37" pos:column="20"/></case>
	    <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><operator pos:line="38" pos:column="18">++<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">p<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">==<pos:position pos:line="38" pos:column="24"/></operator> <literal type="char" pos:line="38" pos:column="25">'*'<pos:position pos:line="38" pos:column="28"/></literal></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29"> <block pos:line="38" pos:column="30">{
		<while pos:line="39" pos:column="17">while <condition pos:line="39" pos:column="23">(<expr><operator pos:line="39" pos:column="24">*<pos:position pos:line="39" pos:column="25"/></operator><operator pos:line="39" pos:column="25">++<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">p<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">==<pos:position pos:line="39" pos:column="31"/></operator> <literal type="char" pos:line="39" pos:column="32">'*'<pos:position pos:line="39" pos:column="35"/></literal></expr>)<pos:position pos:line="39" pos:column="36"/></condition> <block pos:line="39" pos:column="37">{}<pos:position pos:line="39" pos:column="39"/></block></while>
		<expr_stmt><expr><name pos:line="40" pos:column="17">special<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">TRUE<pos:position pos:line="40" pos:column="31"/></name></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>
	    }<pos:position pos:line="41" pos:column="14"/></block></then> <else pos:line="41" pos:column="15">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">special<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">FALSE<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt></block></else></if>
	    <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">p<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">==<pos:position pos:line="43" pos:column="22"/></operator> <literal type="char" pos:line="43" pos:column="23">'\0'<pos:position pos:line="43" pos:column="27"/></literal></expr>)<pos:position pos:line="43" pos:column="28"/></condition><then pos:line="43" pos:column="28"> <block pos:line="43" pos:column="29">{
		<comment type="block" pos:line="44" pos:column="17">/* Trailing "**" matches everything.  Trailing "*" matches
		 * only if there are no more slash characters. */</comment>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">!<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">special<pos:position pos:line="46" pos:column="29"/></name></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30"> <block pos:line="46" pos:column="31">{
		    <do pos:line="47" pos:column="21">do <block pos:line="47" pos:column="24">{
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><call><name pos:line="48" pos:column="29">strchr<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><operator pos:line="48" pos:column="36">(<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="37">char<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">*<pos:position pos:line="48" pos:column="42"/></operator><operator pos:line="48" pos:column="42">)<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="43">text<pos:position pos:line="48" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="48" pos:column="49">'/'<pos:position pos:line="48" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call> <operator pos:line="48" pos:column="54">!=<pos:position pos:line="48" pos:column="56"/></operator> <name pos:line="48" pos:column="57">NULL<pos:position pos:line="48" pos:column="61"/></name></expr>)<pos:position pos:line="48" pos:column="62"/></condition><then pos:line="48" pos:column="62">
			    <block type="pseudo"><return pos:line="49" pos:column="29">return <expr><name pos:line="49" pos:column="36">FALSE<pos:position pos:line="49" pos:column="41"/></name></expr>;<pos:position pos:line="49" pos:column="42"/></return></block></then></if>
		    }<pos:position pos:line="50" pos:column="22"/></block> while <condition pos:line="50" pos:column="29">(<expr><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">text<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <operator pos:line="50" pos:column="38">*<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="39">a<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">++<pos:position pos:line="50" pos:column="42"/></operator><operator pos:line="50" pos:column="42">)<pos:position pos:line="50" pos:column="43"/></operator> <operator pos:line="50" pos:column="44">!=<pos:position pos:line="50" pos:column="46"/></operator> <name pos:line="50" pos:column="47">NULL<pos:position pos:line="50" pos:column="51"/></name></expr>)<pos:position pos:line="50" pos:column="52"/></condition>;<pos:position pos:line="50" pos:column="53"/></do>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
		<return pos:line="52" pos:column="17">return <expr><name pos:line="52" pos:column="24">TRUE<pos:position pos:line="52" pos:column="28"/></name></expr>;<pos:position pos:line="52" pos:column="29"/></return>
	    }<pos:position pos:line="53" pos:column="14"/></block></then></if>
	    <while pos:line="54" pos:column="13">while <condition pos:line="54" pos:column="19">(<expr><literal type="number" pos:line="54" pos:column="20">1<pos:position pos:line="54" pos:column="21"/></literal></expr>)<pos:position pos:line="54" pos:column="22"/></condition> <block pos:line="54" pos:column="23">{
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><name pos:line="55" pos:column="21">t_ch<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">==<pos:position pos:line="55" pos:column="28"/></operator> <literal type="char" pos:line="55" pos:column="29">'\0'<pos:position pos:line="55" pos:column="33"/></literal></expr>)<pos:position pos:line="55" pos:column="34"/></condition><then pos:line="55" pos:column="34"> <block pos:line="55" pos:column="35">{
		    <if pos:line="56" pos:column="21">if <condition pos:line="56" pos:column="24">(<expr><operator pos:line="56" pos:column="25">(<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">text<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">=<pos:position pos:line="56" pos:column="32"/></operator> <operator pos:line="56" pos:column="33">*<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="34">a<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">++<pos:position pos:line="56" pos:column="37"/></operator><operator pos:line="56" pos:column="37">)<pos:position pos:line="56" pos:column="38"/></operator> <operator pos:line="56" pos:column="39">==<pos:position pos:line="56" pos:column="41"/></operator> <name pos:line="56" pos:column="42">NULL<pos:position pos:line="56" pos:column="46"/></name></expr>)<pos:position pos:line="56" pos:column="47"/></condition><then pos:line="56" pos:column="47">
			<block type="pseudo"><break pos:line="57" pos:column="25">break;<pos:position pos:line="57" pos:column="31"/></break></block></then></if>
		    <expr_stmt><expr><name pos:line="58" pos:column="21">t_ch<pos:position pos:line="58" pos:column="25"/></name> <operator pos:line="58" pos:column="26">=<pos:position pos:line="58" pos:column="27"/></operator> <operator pos:line="58" pos:column="28">*<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="29">text<pos:position pos:line="58" pos:column="33"/></name></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>
		    <continue pos:line="59" pos:column="21">continue;<pos:position pos:line="59" pos:column="30"/></continue>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><operator pos:line="61" pos:column="21">(<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">matched<pos:position pos:line="61" pos:column="29"/></name> <operator pos:line="61" pos:column="30">=<pos:position pos:line="61" pos:column="31"/></operator> <call><name pos:line="61" pos:column="32">dowild<pos:position pos:line="61" pos:column="38"/></name><argument_list pos:line="61" pos:column="38">(<argument><expr><name pos:line="61" pos:column="39">p<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="42">text<pos:position pos:line="61" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="48">a<pos:position pos:line="61" pos:column="49"/></name></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call><operator pos:line="61" pos:column="50">)<pos:position pos:line="61" pos:column="51"/></operator> <operator pos:line="61" pos:column="52">!=<pos:position pos:line="61" pos:column="54"/></operator> <name pos:line="61" pos:column="55">FALSE<pos:position pos:line="61" pos:column="60"/></name></expr>)<pos:position pos:line="61" pos:column="61"/></condition><then pos:line="61" pos:column="61"> <block pos:line="61" pos:column="62">{
		    <if pos:line="62" pos:column="21">if <condition pos:line="62" pos:column="24">(<expr><operator pos:line="62" pos:column="25">!<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">special<pos:position pos:line="62" pos:column="33"/></name> <operator pos:line="62" pos:column="34">||<pos:position pos:line="62" pos:column="36"/></operator> <name pos:line="62" pos:column="37">matched<pos:position pos:line="62" pos:column="44"/></name> <operator pos:line="62" pos:column="45">!=<pos:position pos:line="62" pos:column="47"/></operator> <name pos:line="62" pos:column="48">ABORT_TO_STARSTAR<pos:position pos:line="62" pos:column="65"/></name></expr>)<pos:position pos:line="62" pos:column="66"/></condition><then pos:line="62" pos:column="66">
			<block type="pseudo"><return pos:line="63" pos:column="25">return <expr><name pos:line="63" pos:column="32">matched<pos:position pos:line="63" pos:column="39"/></name></expr>;<pos:position pos:line="63" pos:column="40"/></return></block></then></if>
		}<pos:position pos:line="64" pos:column="18"/></block></then> <elseif pos:line="64" pos:column="19">else <if pos:line="64" pos:column="24">if <condition pos:line="64" pos:column="27">(<expr><operator pos:line="64" pos:column="28">!<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="29">special<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">&amp;&amp;<pos:position pos:line="64" pos:column="47"/></operator> <name pos:line="64" pos:column="40">t_ch<pos:position pos:line="64" pos:column="44"/></name> <operator pos:line="64" pos:column="45">==<pos:position pos:line="64" pos:column="47"/></operator> <literal type="char" pos:line="64" pos:column="48">'/'<pos:position pos:line="64" pos:column="51"/></literal></expr>)<pos:position pos:line="64" pos:column="52"/></condition><then pos:line="64" pos:column="52">
		    <block type="pseudo"><return pos:line="65" pos:column="21">return <expr><name pos:line="65" pos:column="28">ABORT_TO_STARSTAR<pos:position pos:line="65" pos:column="45"/></name></expr>;<pos:position pos:line="65" pos:column="46"/></return></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="66" pos:column="17">t_ch<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <operator pos:line="66" pos:column="24">*<pos:position pos:line="66" pos:column="25"/></operator><operator pos:line="66" pos:column="25">++<pos:position pos:line="66" pos:column="27"/></operator><name pos:line="66" pos:column="27">text<pos:position pos:line="66" pos:column="31"/></name></expr>;<pos:position pos:line="66" pos:column="32"/></expr_stmt>
	    }<pos:position pos:line="67" pos:column="14"/></block></while>
	    <return pos:line="68" pos:column="13">return <expr><name pos:line="68" pos:column="20">ABORT_ALL<pos:position pos:line="68" pos:column="29"/></name></expr>;<pos:position pos:line="68" pos:column="30"/></return>
	  <case pos:line="69" pos:column="11">case <expr><literal type="char" pos:line="69" pos:column="16">'['<pos:position pos:line="69" pos:column="19"/></literal></expr>:<pos:position pos:line="69" pos:column="20"/></case>
	    <expr_stmt><expr><name pos:line="70" pos:column="13">p_ch<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <operator pos:line="70" pos:column="20">*<pos:position pos:line="70" pos:column="21"/></operator><operator pos:line="70" pos:column="21">++<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="23">p<pos:position pos:line="70" pos:column="24"/></name></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">NEGATE_CLASS2<pos:position pos:line="71" pos:column="21"/></name></cpp:ifdef>
	    <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><name pos:line="72" pos:column="17">p_ch<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">==<pos:position pos:line="72" pos:column="24"/></operator> <name pos:line="72" pos:column="25">NEGATE_CLASS2<pos:position pos:line="72" pos:column="38"/></name></expr>)<pos:position pos:line="72" pos:column="39"/></condition><then pos:line="72" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="17">p_ch<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">NEGATE_CLASS<pos:position pos:line="73" pos:column="36"/></name></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt></block></then></if>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>
	    <comment type="block" pos:line="75" pos:column="13">/* Assign literal TRUE/FALSE because of "matched" comparison. */</comment>
	    <expr_stmt><expr><name pos:line="76" pos:column="13">special<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="76" pos:column="23">p_ch<pos:position pos:line="76" pos:column="27"/></name> <operator pos:line="76" pos:column="28">==<pos:position pos:line="76" pos:column="30"/></operator> <name pos:line="76" pos:column="31">NEGATE_CLASS<pos:position pos:line="76" pos:column="43"/></name></expr>?<pos:position pos:line="76" pos:column="44"/></condition><then pos:line="76" pos:column="44"> <expr><name pos:line="76" pos:column="45">TRUE<pos:position pos:line="76" pos:column="49"/></name></expr> <pos:position pos:line="76" pos:column="50"/></then><else pos:line="76" pos:column="50">: <expr><name pos:line="76" pos:column="52">FALSE<pos:position pos:line="76" pos:column="57"/></name></expr></else></ternary></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>
	    <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">special<pos:position pos:line="77" pos:column="24"/></name></expr>)<pos:position pos:line="77" pos:column="25"/></condition><then pos:line="77" pos:column="25"> <block pos:line="77" pos:column="26">{
		<comment type="block" pos:line="78" pos:column="17">/* Inverted character class. */</comment>
		<expr_stmt><expr><name pos:line="79" pos:column="17">p_ch<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <operator pos:line="79" pos:column="24">*<pos:position pos:line="79" pos:column="25"/></operator><operator pos:line="79" pos:column="25">++<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">p<pos:position pos:line="79" pos:column="28"/></name></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="80" pos:column="14"/></block></then></if>
	    <expr_stmt><expr><name pos:line="81" pos:column="13">prev_ch<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">=<pos:position pos:line="81" pos:column="22"/></operator> <literal type="number" pos:line="81" pos:column="23">0<pos:position pos:line="81" pos:column="24"/></literal></expr>;<pos:position pos:line="81" pos:column="25"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="82" pos:column="13">matched<pos:position pos:line="82" pos:column="20"/></name> <operator pos:line="82" pos:column="21">=<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">FALSE<pos:position pos:line="82" pos:column="28"/></name></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
	    <do pos:line="83" pos:column="13">do <block pos:line="83" pos:column="16">{
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><operator pos:line="84" pos:column="21">!<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="22">p_ch<pos:position pos:line="84" pos:column="26"/></name></expr>)<pos:position pos:line="84" pos:column="27"/></condition><then pos:line="84" pos:column="27">
		    <block type="pseudo"><return pos:line="85" pos:column="21">return <expr><name pos:line="85" pos:column="28">ABORT_ALL<pos:position pos:line="85" pos:column="37"/></name></expr>;<pos:position pos:line="85" pos:column="38"/></return></block></then></if>
		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">p_ch<pos:position pos:line="86" pos:column="25"/></name> <operator pos:line="86" pos:column="26">==<pos:position pos:line="86" pos:column="28"/></operator> <literal type="char" pos:line="86" pos:column="29">'\\'<pos:position pos:line="86" pos:column="33"/></literal></expr>)<pos:position pos:line="86" pos:column="34"/></condition><then pos:line="86" pos:column="34"> <block pos:line="86" pos:column="35">{
		    <expr_stmt><expr><name pos:line="87" pos:column="21">p_ch<pos:position pos:line="87" pos:column="25"/></name> <operator pos:line="87" pos:column="26">=<pos:position pos:line="87" pos:column="27"/></operator> <operator pos:line="87" pos:column="28">*<pos:position pos:line="87" pos:column="29"/></operator><operator pos:line="87" pos:column="29">++<pos:position pos:line="87" pos:column="31"/></operator><name pos:line="87" pos:column="31">p<pos:position pos:line="87" pos:column="32"/></name></expr>;<pos:position pos:line="87" pos:column="33"/></expr_stmt>
		    <if pos:line="88" pos:column="21">if <condition pos:line="88" pos:column="24">(<expr><operator pos:line="88" pos:column="25">!<pos:position pos:line="88" pos:column="26"/></operator><name pos:line="88" pos:column="26">p_ch<pos:position pos:line="88" pos:column="30"/></name></expr>)<pos:position pos:line="88" pos:column="31"/></condition><then pos:line="88" pos:column="31">
			<block type="pseudo"><return pos:line="89" pos:column="25">return <expr><name pos:line="89" pos:column="32">ABORT_ALL<pos:position pos:line="89" pos:column="41"/></name></expr>;<pos:position pos:line="89" pos:column="42"/></return></block></then></if>
		    <if pos:line="90" pos:column="21">if <condition pos:line="90" pos:column="24">(<expr><name pos:line="90" pos:column="25">t_ch<pos:position pos:line="90" pos:column="29"/></name> <operator pos:line="90" pos:column="30">==<pos:position pos:line="90" pos:column="32"/></operator> <name pos:line="90" pos:column="33">p_ch<pos:position pos:line="90" pos:column="37"/></name></expr>)<pos:position pos:line="90" pos:column="38"/></condition><then pos:line="90" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="25">matched<pos:position pos:line="91" pos:column="32"/></name> <operator pos:line="91" pos:column="33">=<pos:position pos:line="91" pos:column="34"/></operator> <name pos:line="91" pos:column="35">TRUE<pos:position pos:line="91" pos:column="39"/></name></expr>;<pos:position pos:line="91" pos:column="40"/></expr_stmt></block></then></if>
		}<pos:position pos:line="92" pos:column="18"/></block></then> <elseif pos:line="92" pos:column="19">else <if pos:line="92" pos:column="24">if <condition pos:line="92" pos:column="27">(<expr><name pos:line="92" pos:column="28">p_ch<pos:position pos:line="92" pos:column="32"/></name> <operator pos:line="92" pos:column="33">==<pos:position pos:line="92" pos:column="35"/></operator> <literal type="char" pos:line="92" pos:column="36">'-'<pos:position pos:line="92" pos:column="39"/></literal> <operator pos:line="92" pos:column="40">&amp;&amp;<pos:position pos:line="92" pos:column="50"/></operator> <name pos:line="92" pos:column="43">prev_ch<pos:position pos:line="92" pos:column="50"/></name> <operator pos:line="92" pos:column="51">&amp;&amp;<pos:position pos:line="92" pos:column="61"/></operator> <name><name pos:line="92" pos:column="54">p<pos:position pos:line="92" pos:column="55"/></name><index pos:line="92" pos:column="55">[<expr><literal type="number" pos:line="92" pos:column="56">1<pos:position pos:line="92" pos:column="57"/></literal></expr>]<pos:position pos:line="92" pos:column="58"/></index></name> <operator pos:line="92" pos:column="59">&amp;&amp;<pos:position pos:line="92" pos:column="69"/></operator> <name><name pos:line="92" pos:column="62">p<pos:position pos:line="92" pos:column="63"/></name><index pos:line="92" pos:column="63">[<expr><literal type="number" pos:line="92" pos:column="64">1<pos:position pos:line="92" pos:column="65"/></literal></expr>]<pos:position pos:line="92" pos:column="66"/></index></name> <operator pos:line="92" pos:column="67">!=<pos:position pos:line="92" pos:column="69"/></operator> <literal type="char" pos:line="92" pos:column="70">']'<pos:position pos:line="92" pos:column="73"/></literal></expr>)<pos:position pos:line="92" pos:column="74"/></condition><then pos:line="92" pos:column="74"> <block pos:line="92" pos:column="75">{
		    <expr_stmt><expr><name pos:line="93" pos:column="21">p_ch<pos:position pos:line="93" pos:column="25"/></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <operator pos:line="93" pos:column="28">*<pos:position pos:line="93" pos:column="29"/></operator><operator pos:line="93" pos:column="29">++<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="31">p<pos:position pos:line="93" pos:column="32"/></name></expr>;<pos:position pos:line="93" pos:column="33"/></expr_stmt>
		    <if pos:line="94" pos:column="21">if <condition pos:line="94" pos:column="24">(<expr><name pos:line="94" pos:column="25">p_ch<pos:position pos:line="94" pos:column="29"/></name> <operator pos:line="94" pos:column="30">==<pos:position pos:line="94" pos:column="32"/></operator> <literal type="char" pos:line="94" pos:column="33">'\\'<pos:position pos:line="94" pos:column="37"/></literal></expr>)<pos:position pos:line="94" pos:column="38"/></condition><then pos:line="94" pos:column="38"> <block pos:line="94" pos:column="39">{
			<expr_stmt><expr><name pos:line="95" pos:column="25">p_ch<pos:position pos:line="95" pos:column="29"/></name> <operator pos:line="95" pos:column="30">=<pos:position pos:line="95" pos:column="31"/></operator> <operator pos:line="95" pos:column="32">*<pos:position pos:line="95" pos:column="33"/></operator><operator pos:line="95" pos:column="33">++<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="35">p<pos:position pos:line="95" pos:column="36"/></name></expr>;<pos:position pos:line="95" pos:column="37"/></expr_stmt>
			<if pos:line="96" pos:column="25">if <condition pos:line="96" pos:column="28">(<expr><operator pos:line="96" pos:column="29">!<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="30">p_ch<pos:position pos:line="96" pos:column="34"/></name></expr>)<pos:position pos:line="96" pos:column="35"/></condition><then pos:line="96" pos:column="35">
			    <block type="pseudo"><return pos:line="97" pos:column="29">return <expr><name pos:line="97" pos:column="36">ABORT_ALL<pos:position pos:line="97" pos:column="45"/></name></expr>;<pos:position pos:line="97" pos:column="46"/></return></block></then></if>
		    }<pos:position pos:line="98" pos:column="22"/></block></then></if>
		    <if pos:line="99" pos:column="21">if <condition pos:line="99" pos:column="24">(<expr><name pos:line="99" pos:column="25">t_ch<pos:position pos:line="99" pos:column="29"/></name> <operator pos:line="99" pos:column="30">&lt;=<pos:position pos:line="99" pos:column="35"/></operator> <name pos:line="99" pos:column="33">p_ch<pos:position pos:line="99" pos:column="37"/></name> <operator pos:line="99" pos:column="38">&amp;&amp;<pos:position pos:line="99" pos:column="48"/></operator> <name pos:line="99" pos:column="41">t_ch<pos:position pos:line="99" pos:column="45"/></name> <operator pos:line="99" pos:column="46">&gt;=<pos:position pos:line="99" pos:column="51"/></operator> <name pos:line="99" pos:column="49">prev_ch<pos:position pos:line="99" pos:column="56"/></name></expr>)<pos:position pos:line="99" pos:column="57"/></condition><then pos:line="99" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="25">matched<pos:position pos:line="100" pos:column="32"/></name> <operator pos:line="100" pos:column="33">=<pos:position pos:line="100" pos:column="34"/></operator> <name pos:line="100" pos:column="35">TRUE<pos:position pos:line="100" pos:column="39"/></name></expr>;<pos:position pos:line="100" pos:column="40"/></expr_stmt></block></then></if>
		    <expr_stmt><expr><name pos:line="101" pos:column="21">p_ch<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">=<pos:position pos:line="101" pos:column="27"/></operator> <literal type="number" pos:line="101" pos:column="28">0<pos:position pos:line="101" pos:column="29"/></literal></expr>;<pos:position pos:line="101" pos:column="30"/></expr_stmt> <comment type="block" pos:line="101" pos:column="31">/* This makes "prev_ch" get set to 0. */</comment>
		}<pos:position pos:line="102" pos:column="18"/></block></then></if></elseif> <elseif pos:line="102" pos:column="19">else <if pos:line="102" pos:column="24">if <condition pos:line="102" pos:column="27">(<expr><name pos:line="102" pos:column="28">p_ch<pos:position pos:line="102" pos:column="32"/></name> <operator pos:line="102" pos:column="33">==<pos:position pos:line="102" pos:column="35"/></operator> <literal type="char" pos:line="102" pos:column="36">'['<pos:position pos:line="102" pos:column="39"/></literal> <operator pos:line="102" pos:column="40">&amp;&amp;<pos:position pos:line="102" pos:column="50"/></operator> <name><name pos:line="102" pos:column="43">p<pos:position pos:line="102" pos:column="44"/></name><index pos:line="102" pos:column="44">[<expr><literal type="number" pos:line="102" pos:column="45">1<pos:position pos:line="102" pos:column="46"/></literal></expr>]<pos:position pos:line="102" pos:column="47"/></index></name> <operator pos:line="102" pos:column="48">==<pos:position pos:line="102" pos:column="50"/></operator> <literal type="char" pos:line="102" pos:column="51">':'<pos:position pos:line="102" pos:column="54"/></literal></expr>)<pos:position pos:line="102" pos:column="55"/></condition><then pos:line="102" pos:column="55"> <block pos:line="102" pos:column="56">{
		    <decl_stmt><decl><type><specifier pos:line="103" pos:column="21">const<pos:position pos:line="103" pos:column="26"/></specifier> <name pos:line="103" pos:column="27">uchar<pos:position pos:line="103" pos:column="32"/></name> <modifier pos:line="103" pos:column="33">*<pos:position pos:line="103" pos:column="34"/></modifier></type><name pos:line="103" pos:column="34">s<pos:position pos:line="103" pos:column="35"/></name></decl>;<pos:position pos:line="103" pos:column="36"/></decl_stmt>
		    <decl_stmt><decl><type><name pos:line="104" pos:column="21">int<pos:position pos:line="104" pos:column="24"/></name></type> <name pos:line="104" pos:column="25">i<pos:position pos:line="104" pos:column="26"/></name></decl>;<pos:position pos:line="104" pos:column="27"/></decl_stmt>
		    <for pos:line="105" pos:column="21">for <control pos:line="105" pos:column="25">(<init><expr><name pos:line="105" pos:column="26">s<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">=<pos:position pos:line="105" pos:column="29"/></operator> <name pos:line="105" pos:column="30">p<pos:position pos:line="105" pos:column="31"/></name> <operator pos:line="105" pos:column="32">+=<pos:position pos:line="105" pos:column="34"/></operator> <literal type="number" pos:line="105" pos:column="35">2<pos:position pos:line="105" pos:column="36"/></literal></expr>;<pos:position pos:line="105" pos:column="37"/></init> <condition><expr><operator pos:line="105" pos:column="38">(<pos:position pos:line="105" pos:column="39"/></operator><name pos:line="105" pos:column="39">p_ch<pos:position pos:line="105" pos:column="43"/></name> <operator pos:line="105" pos:column="44">=<pos:position pos:line="105" pos:column="45"/></operator> <operator pos:line="105" pos:column="46">*<pos:position pos:line="105" pos:column="47"/></operator><name pos:line="105" pos:column="47">p<pos:position pos:line="105" pos:column="48"/></name><operator pos:line="105" pos:column="48">)<pos:position pos:line="105" pos:column="49"/></operator> <operator pos:line="105" pos:column="50">&amp;&amp;<pos:position pos:line="105" pos:column="60"/></operator> <name pos:line="105" pos:column="53">p_ch<pos:position pos:line="105" pos:column="57"/></name> <operator pos:line="105" pos:column="58">!=<pos:position pos:line="105" pos:column="60"/></operator> <literal type="char" pos:line="105" pos:column="61">']'<pos:position pos:line="105" pos:column="64"/></literal></expr>;<pos:position pos:line="105" pos:column="65"/></condition> <incr><expr><name pos:line="105" pos:column="66">p<pos:position pos:line="105" pos:column="67"/></name><operator pos:line="105" pos:column="67">++<pos:position pos:line="105" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="105" pos:column="70"/></control> <block pos:line="105" pos:column="71">{}<pos:position pos:line="105" pos:column="73"/></block></for> <comment type="block" pos:line="105" pos:column="74">/*SHARED ITERATOR*/</comment>
		    <if pos:line="106" pos:column="21">if <condition pos:line="106" pos:column="24">(<expr><operator pos:line="106" pos:column="25">!<pos:position pos:line="106" pos:column="26"/></operator><name pos:line="106" pos:column="26">p_ch<pos:position pos:line="106" pos:column="30"/></name></expr>)<pos:position pos:line="106" pos:column="31"/></condition><then pos:line="106" pos:column="31">
			<block type="pseudo"><return pos:line="107" pos:column="25">return <expr><name pos:line="107" pos:column="32">ABORT_ALL<pos:position pos:line="107" pos:column="41"/></name></expr>;<pos:position pos:line="107" pos:column="42"/></return></block></then></if>
		    <expr_stmt><expr><name pos:line="108" pos:column="21">i<pos:position pos:line="108" pos:column="22"/></name> <operator pos:line="108" pos:column="23">=<pos:position pos:line="108" pos:column="24"/></operator> <name pos:line="108" pos:column="25">p<pos:position pos:line="108" pos:column="26"/></name> <operator pos:line="108" pos:column="27">-<pos:position pos:line="108" pos:column="28"/></operator> <name pos:line="108" pos:column="29">s<pos:position pos:line="108" pos:column="30"/></name> <operator pos:line="108" pos:column="31">-<pos:position pos:line="108" pos:column="32"/></operator> <literal type="number" pos:line="108" pos:column="33">1<pos:position pos:line="108" pos:column="34"/></literal></expr>;<pos:position pos:line="108" pos:column="35"/></expr_stmt>
		    <if pos:line="109" pos:column="21">if <condition pos:line="109" pos:column="24">(<expr><name pos:line="109" pos:column="25">i<pos:position pos:line="109" pos:column="26"/></name> <operator pos:line="109" pos:column="27">&lt;<pos:position pos:line="109" pos:column="31"/></operator> <literal type="number" pos:line="109" pos:column="29">0<pos:position pos:line="109" pos:column="30"/></literal> <operator pos:line="109" pos:column="31">||<pos:position pos:line="109" pos:column="33"/></operator> <name><name pos:line="109" pos:column="34">p<pos:position pos:line="109" pos:column="35"/></name><index pos:line="109" pos:column="35">[<expr><operator pos:line="109" pos:column="36">-<pos:position pos:line="109" pos:column="37"/></operator><literal type="number" pos:line="109" pos:column="37">1<pos:position pos:line="109" pos:column="38"/></literal></expr>]<pos:position pos:line="109" pos:column="39"/></index></name> <operator pos:line="109" pos:column="40">!=<pos:position pos:line="109" pos:column="42"/></operator> <literal type="char" pos:line="109" pos:column="43">':'<pos:position pos:line="109" pos:column="46"/></literal></expr>)<pos:position pos:line="109" pos:column="47"/></condition><then pos:line="109" pos:column="47"> <block pos:line="109" pos:column="48">{
			<comment type="block" pos:line="110" pos:column="25">/* Didn't find ":]", so treat like a normal set. */</comment>
			<expr_stmt><expr><name pos:line="111" pos:column="25">p<pos:position pos:line="111" pos:column="26"/></name> <operator pos:line="111" pos:column="27">=<pos:position pos:line="111" pos:column="28"/></operator> <name pos:line="111" pos:column="29">s<pos:position pos:line="111" pos:column="30"/></name> <operator pos:line="111" pos:column="31">-<pos:position pos:line="111" pos:column="32"/></operator> <literal type="number" pos:line="111" pos:column="33">2<pos:position pos:line="111" pos:column="34"/></literal></expr>;<pos:position pos:line="111" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="112" pos:column="25">p_ch<pos:position pos:line="112" pos:column="29"/></name> <operator pos:line="112" pos:column="30">=<pos:position pos:line="112" pos:column="31"/></operator> <literal type="char" pos:line="112" pos:column="32">'['<pos:position pos:line="112" pos:column="35"/></literal></expr>;<pos:position pos:line="112" pos:column="36"/></expr_stmt>
			<if pos:line="113" pos:column="25">if <condition pos:line="113" pos:column="28">(<expr><name pos:line="113" pos:column="29">t_ch<pos:position pos:line="113" pos:column="33"/></name> <operator pos:line="113" pos:column="34">==<pos:position pos:line="113" pos:column="36"/></operator> <name pos:line="113" pos:column="37">p_ch<pos:position pos:line="113" pos:column="41"/></name></expr>)<pos:position pos:line="113" pos:column="42"/></condition><then pos:line="113" pos:column="42">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="114" pos:column="29">matched<pos:position pos:line="114" pos:column="36"/></name> <operator pos:line="114" pos:column="37">=<pos:position pos:line="114" pos:column="38"/></operator> <name pos:line="114" pos:column="39">TRUE<pos:position pos:line="114" pos:column="43"/></name></expr>;<pos:position pos:line="114" pos:column="44"/></expr_stmt></block></then></if>
			<continue pos:line="115" pos:column="25">continue;<pos:position pos:line="115" pos:column="34"/></continue>
		    }<pos:position pos:line="116" pos:column="22"/></block></then></if>
		    <if pos:line="117" pos:column="21">if <condition pos:line="117" pos:column="24">(<expr><call><name pos:line="117" pos:column="25">CC_EQ<pos:position pos:line="117" pos:column="30"/></name><argument_list pos:line="117" pos:column="30">(<argument><expr><name pos:line="117" pos:column="31">s<pos:position pos:line="117" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="117" pos:column="33">i<pos:position pos:line="117" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="36">"alnum"<pos:position pos:line="117" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="45"/></condition><then pos:line="117" pos:column="45"> <block pos:line="117" pos:column="46">{
			<if pos:line="118" pos:column="25">if <condition pos:line="118" pos:column="28">(<expr><call><name pos:line="118" pos:column="29">ISALNUM<pos:position pos:line="118" pos:column="36"/></name><argument_list pos:line="118" pos:column="36">(<argument><expr><name pos:line="118" pos:column="37">t_ch<pos:position pos:line="118" pos:column="41"/></name></expr></argument>)<pos:position pos:line="118" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="43"/></condition><then pos:line="118" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="29">matched<pos:position pos:line="119" pos:column="36"/></name> <operator pos:line="119" pos:column="37">=<pos:position pos:line="119" pos:column="38"/></operator> <name pos:line="119" pos:column="39">TRUE<pos:position pos:line="119" pos:column="43"/></name></expr>;<pos:position pos:line="119" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="120" pos:column="22"/></block></then> <elseif pos:line="120" pos:column="23">else <if pos:line="120" pos:column="28">if <condition pos:line="120" pos:column="31">(<expr><call><name pos:line="120" pos:column="32">CC_EQ<pos:position pos:line="120" pos:column="37"/></name><argument_list pos:line="120" pos:column="37">(<argument><expr><name pos:line="120" pos:column="38">s<pos:position pos:line="120" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="120" pos:column="40">i<pos:position pos:line="120" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="43">"alpha"<pos:position pos:line="120" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="52"/></condition><then pos:line="120" pos:column="52"> <block pos:line="120" pos:column="53">{
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><call><name pos:line="121" pos:column="29">ISALPHA<pos:position pos:line="121" pos:column="36"/></name><argument_list pos:line="121" pos:column="36">(<argument><expr><name pos:line="121" pos:column="37">t_ch<pos:position pos:line="121" pos:column="41"/></name></expr></argument>)<pos:position pos:line="121" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="43"/></condition><then pos:line="121" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="29">matched<pos:position pos:line="122" pos:column="36"/></name> <operator pos:line="122" pos:column="37">=<pos:position pos:line="122" pos:column="38"/></operator> <name pos:line="122" pos:column="39">TRUE<pos:position pos:line="122" pos:column="43"/></name></expr>;<pos:position pos:line="122" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="123" pos:column="22"/></block></then></if></elseif> <elseif pos:line="123" pos:column="23">else <if pos:line="123" pos:column="28">if <condition pos:line="123" pos:column="31">(<expr><call><name pos:line="123" pos:column="32">CC_EQ<pos:position pos:line="123" pos:column="37"/></name><argument_list pos:line="123" pos:column="37">(<argument><expr><name pos:line="123" pos:column="38">s<pos:position pos:line="123" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="123" pos:column="40">i<pos:position pos:line="123" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="43">"blank"<pos:position pos:line="123" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="52"/></condition><then pos:line="123" pos:column="52"> <block pos:line="123" pos:column="53">{
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><call><name pos:line="124" pos:column="29">ISBLANK<pos:position pos:line="124" pos:column="36"/></name><argument_list pos:line="124" pos:column="36">(<argument><expr><name pos:line="124" pos:column="37">t_ch<pos:position pos:line="124" pos:column="41"/></name></expr></argument>)<pos:position pos:line="124" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="43"/></condition><then pos:line="124" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="29">matched<pos:position pos:line="125" pos:column="36"/></name> <operator pos:line="125" pos:column="37">=<pos:position pos:line="125" pos:column="38"/></operator> <name pos:line="125" pos:column="39">TRUE<pos:position pos:line="125" pos:column="43"/></name></expr>;<pos:position pos:line="125" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="126" pos:column="22"/></block></then></if></elseif> <elseif pos:line="126" pos:column="23">else <if pos:line="126" pos:column="28">if <condition pos:line="126" pos:column="31">(<expr><call><name pos:line="126" pos:column="32">CC_EQ<pos:position pos:line="126" pos:column="37"/></name><argument_list pos:line="126" pos:column="37">(<argument><expr><name pos:line="126" pos:column="38">s<pos:position pos:line="126" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="126" pos:column="40">i<pos:position pos:line="126" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="43">"cntrl"<pos:position pos:line="126" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="52"/></condition><then pos:line="126" pos:column="52"> <block pos:line="126" pos:column="53">{
			<if pos:line="127" pos:column="25">if <condition pos:line="127" pos:column="28">(<expr><call><name pos:line="127" pos:column="29">ISCNTRL<pos:position pos:line="127" pos:column="36"/></name><argument_list pos:line="127" pos:column="36">(<argument><expr><name pos:line="127" pos:column="37">t_ch<pos:position pos:line="127" pos:column="41"/></name></expr></argument>)<pos:position pos:line="127" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="43"/></condition><then pos:line="127" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="128" pos:column="29">matched<pos:position pos:line="128" pos:column="36"/></name> <operator pos:line="128" pos:column="37">=<pos:position pos:line="128" pos:column="38"/></operator> <name pos:line="128" pos:column="39">TRUE<pos:position pos:line="128" pos:column="43"/></name></expr>;<pos:position pos:line="128" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="129" pos:column="22"/></block></then></if></elseif> <elseif pos:line="129" pos:column="23">else <if pos:line="129" pos:column="28">if <condition pos:line="129" pos:column="31">(<expr><call><name pos:line="129" pos:column="32">CC_EQ<pos:position pos:line="129" pos:column="37"/></name><argument_list pos:line="129" pos:column="37">(<argument><expr><name pos:line="129" pos:column="38">s<pos:position pos:line="129" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="129" pos:column="40">i<pos:position pos:line="129" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="43">"digit"<pos:position pos:line="129" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="129" pos:column="52"/></condition><then pos:line="129" pos:column="52"> <block pos:line="129" pos:column="53">{
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><call><name pos:line="130" pos:column="29">ISDIGIT<pos:position pos:line="130" pos:column="36"/></name><argument_list pos:line="130" pos:column="36">(<argument><expr><name pos:line="130" pos:column="37">t_ch<pos:position pos:line="130" pos:column="41"/></name></expr></argument>)<pos:position pos:line="130" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="43"/></condition><then pos:line="130" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="131" pos:column="29">matched<pos:position pos:line="131" pos:column="36"/></name> <operator pos:line="131" pos:column="37">=<pos:position pos:line="131" pos:column="38"/></operator> <name pos:line="131" pos:column="39">TRUE<pos:position pos:line="131" pos:column="43"/></name></expr>;<pos:position pos:line="131" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="132" pos:column="22"/></block></then></if></elseif> <elseif pos:line="132" pos:column="23">else <if pos:line="132" pos:column="28">if <condition pos:line="132" pos:column="31">(<expr><call><name pos:line="132" pos:column="32">CC_EQ<pos:position pos:line="132" pos:column="37"/></name><argument_list pos:line="132" pos:column="37">(<argument><expr><name pos:line="132" pos:column="38">s<pos:position pos:line="132" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="132" pos:column="40">i<pos:position pos:line="132" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="43">"graph"<pos:position pos:line="132" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="52"/></condition><then pos:line="132" pos:column="52"> <block pos:line="132" pos:column="53">{
			<if pos:line="133" pos:column="25">if <condition pos:line="133" pos:column="28">(<expr><call><name pos:line="133" pos:column="29">ISGRAPH<pos:position pos:line="133" pos:column="36"/></name><argument_list pos:line="133" pos:column="36">(<argument><expr><name pos:line="133" pos:column="37">t_ch<pos:position pos:line="133" pos:column="41"/></name></expr></argument>)<pos:position pos:line="133" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="43"/></condition><then pos:line="133" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="134" pos:column="29">matched<pos:position pos:line="134" pos:column="36"/></name> <operator pos:line="134" pos:column="37">=<pos:position pos:line="134" pos:column="38"/></operator> <name pos:line="134" pos:column="39">TRUE<pos:position pos:line="134" pos:column="43"/></name></expr>;<pos:position pos:line="134" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="135" pos:column="22"/></block></then></if></elseif> <elseif pos:line="135" pos:column="23">else <if pos:line="135" pos:column="28">if <condition pos:line="135" pos:column="31">(<expr><call><name pos:line="135" pos:column="32">CC_EQ<pos:position pos:line="135" pos:column="37"/></name><argument_list pos:line="135" pos:column="37">(<argument><expr><name pos:line="135" pos:column="38">s<pos:position pos:line="135" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="135" pos:column="40">i<pos:position pos:line="135" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="43">"lower"<pos:position pos:line="135" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="52"/></condition><then pos:line="135" pos:column="52"> <block pos:line="135" pos:column="53">{
			<if pos:line="136" pos:column="25">if <condition pos:line="136" pos:column="28">(<expr><call><name pos:line="136" pos:column="29">ISLOWER<pos:position pos:line="136" pos:column="36"/></name><argument_list pos:line="136" pos:column="36">(<argument><expr><name pos:line="136" pos:column="37">t_ch<pos:position pos:line="136" pos:column="41"/></name></expr></argument>)<pos:position pos:line="136" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="43"/></condition><then pos:line="136" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="137" pos:column="29">matched<pos:position pos:line="137" pos:column="36"/></name> <operator pos:line="137" pos:column="37">=<pos:position pos:line="137" pos:column="38"/></operator> <name pos:line="137" pos:column="39">TRUE<pos:position pos:line="137" pos:column="43"/></name></expr>;<pos:position pos:line="137" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="138" pos:column="22"/></block></then></if></elseif> <elseif pos:line="138" pos:column="23">else <if pos:line="138" pos:column="28">if <condition pos:line="138" pos:column="31">(<expr><call><name pos:line="138" pos:column="32">CC_EQ<pos:position pos:line="138" pos:column="37"/></name><argument_list pos:line="138" pos:column="37">(<argument><expr><name pos:line="138" pos:column="38">s<pos:position pos:line="138" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="138" pos:column="40">i<pos:position pos:line="138" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="43">"print"<pos:position pos:line="138" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="52"/></condition><then pos:line="138" pos:column="52"> <block pos:line="138" pos:column="53">{
			<if pos:line="139" pos:column="25">if <condition pos:line="139" pos:column="28">(<expr><call><name pos:line="139" pos:column="29">ISPRINT<pos:position pos:line="139" pos:column="36"/></name><argument_list pos:line="139" pos:column="36">(<argument><expr><name pos:line="139" pos:column="37">t_ch<pos:position pos:line="139" pos:column="41"/></name></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="139" pos:column="43"/></condition><then pos:line="139" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="29">matched<pos:position pos:line="140" pos:column="36"/></name> <operator pos:line="140" pos:column="37">=<pos:position pos:line="140" pos:column="38"/></operator> <name pos:line="140" pos:column="39">TRUE<pos:position pos:line="140" pos:column="43"/></name></expr>;<pos:position pos:line="140" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="141" pos:column="22"/></block></then></if></elseif> <elseif pos:line="141" pos:column="23">else <if pos:line="141" pos:column="28">if <condition pos:line="141" pos:column="31">(<expr><call><name pos:line="141" pos:column="32">CC_EQ<pos:position pos:line="141" pos:column="37"/></name><argument_list pos:line="141" pos:column="37">(<argument><expr><name pos:line="141" pos:column="38">s<pos:position pos:line="141" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="141" pos:column="40">i<pos:position pos:line="141" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="43">"punct"<pos:position pos:line="141" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="141" pos:column="52"/></condition><then pos:line="141" pos:column="52"> <block pos:line="141" pos:column="53">{
			<if pos:line="142" pos:column="25">if <condition pos:line="142" pos:column="28">(<expr><call><name pos:line="142" pos:column="29">ISPUNCT<pos:position pos:line="142" pos:column="36"/></name><argument_list pos:line="142" pos:column="36">(<argument><expr><name pos:line="142" pos:column="37">t_ch<pos:position pos:line="142" pos:column="41"/></name></expr></argument>)<pos:position pos:line="142" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="43"/></condition><then pos:line="142" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="29">matched<pos:position pos:line="143" pos:column="36"/></name> <operator pos:line="143" pos:column="37">=<pos:position pos:line="143" pos:column="38"/></operator> <name pos:line="143" pos:column="39">TRUE<pos:position pos:line="143" pos:column="43"/></name></expr>;<pos:position pos:line="143" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="144" pos:column="22"/></block></then></if></elseif> <elseif pos:line="144" pos:column="23">else <if pos:line="144" pos:column="28">if <condition pos:line="144" pos:column="31">(<expr><call><name pos:line="144" pos:column="32">CC_EQ<pos:position pos:line="144" pos:column="37"/></name><argument_list pos:line="144" pos:column="37">(<argument><expr><name pos:line="144" pos:column="38">s<pos:position pos:line="144" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="144" pos:column="40">i<pos:position pos:line="144" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="43">"space"<pos:position pos:line="144" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="144" pos:column="52"/></condition><then pos:line="144" pos:column="52"> <block pos:line="144" pos:column="53">{
			<if pos:line="145" pos:column="25">if <condition pos:line="145" pos:column="28">(<expr><call><name pos:line="145" pos:column="29">ISSPACE<pos:position pos:line="145" pos:column="36"/></name><argument_list pos:line="145" pos:column="36">(<argument><expr><name pos:line="145" pos:column="37">t_ch<pos:position pos:line="145" pos:column="41"/></name></expr></argument>)<pos:position pos:line="145" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="43"/></condition><then pos:line="145" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="29">matched<pos:position pos:line="146" pos:column="36"/></name> <operator pos:line="146" pos:column="37">=<pos:position pos:line="146" pos:column="38"/></operator> <name pos:line="146" pos:column="39">TRUE<pos:position pos:line="146" pos:column="43"/></name></expr>;<pos:position pos:line="146" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="147" pos:column="22"/></block></then></if></elseif> <elseif pos:line="147" pos:column="23">else <if pos:line="147" pos:column="28">if <condition pos:line="147" pos:column="31">(<expr><call><name pos:line="147" pos:column="32">CC_EQ<pos:position pos:line="147" pos:column="37"/></name><argument_list pos:line="147" pos:column="37">(<argument><expr><name pos:line="147" pos:column="38">s<pos:position pos:line="147" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="147" pos:column="40">i<pos:position pos:line="147" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="43">"upper"<pos:position pos:line="147" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="147" pos:column="52"/></condition><then pos:line="147" pos:column="52"> <block pos:line="147" pos:column="53">{
			<if pos:line="148" pos:column="25">if <condition pos:line="148" pos:column="28">(<expr><call><name pos:line="148" pos:column="29">ISUPPER<pos:position pos:line="148" pos:column="36"/></name><argument_list pos:line="148" pos:column="36">(<argument><expr><name pos:line="148" pos:column="37">t_ch<pos:position pos:line="148" pos:column="41"/></name></expr></argument>)<pos:position pos:line="148" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="148" pos:column="43"/></condition><then pos:line="148" pos:column="43">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="149" pos:column="29">matched<pos:position pos:line="149" pos:column="36"/></name> <operator pos:line="149" pos:column="37">=<pos:position pos:line="149" pos:column="38"/></operator> <name pos:line="149" pos:column="39">TRUE<pos:position pos:line="149" pos:column="43"/></name></expr>;<pos:position pos:line="149" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="150" pos:column="22"/></block></then></if></elseif> <elseif pos:line="150" pos:column="23">else <if pos:line="150" pos:column="28">if <condition pos:line="150" pos:column="31">(<expr><call><name pos:line="150" pos:column="32">CC_EQ<pos:position pos:line="150" pos:column="37"/></name><argument_list pos:line="150" pos:column="37">(<argument><expr><name pos:line="150" pos:column="38">s<pos:position pos:line="150" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="150" pos:column="40">i<pos:position pos:line="150" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="43">"xdigit"<pos:position pos:line="150" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="53"/></condition><then pos:line="150" pos:column="53"> <block pos:line="150" pos:column="54">{
			<if pos:line="151" pos:column="25">if <condition pos:line="151" pos:column="28">(<expr><call><name pos:line="151" pos:column="29">ISXDIGIT<pos:position pos:line="151" pos:column="37"/></name><argument_list pos:line="151" pos:column="37">(<argument><expr><name pos:line="151" pos:column="38">t_ch<pos:position pos:line="151" pos:column="42"/></name></expr></argument>)<pos:position pos:line="151" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="44"/></condition><then pos:line="151" pos:column="44">
			    <block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="29">matched<pos:position pos:line="152" pos:column="36"/></name> <operator pos:line="152" pos:column="37">=<pos:position pos:line="152" pos:column="38"/></operator> <name pos:line="152" pos:column="39">TRUE<pos:position pos:line="152" pos:column="43"/></name></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt></block></then></if>
		    }<pos:position pos:line="153" pos:column="22"/></block></then></if></elseif> <else pos:line="153" pos:column="23">else <comment type="block" pos:line="153" pos:column="28">/* malformed [:class:] string */</comment>
			<block type="pseudo"><return pos:line="154" pos:column="25">return <expr><name pos:line="154" pos:column="32">ABORT_ALL<pos:position pos:line="154" pos:column="41"/></name></expr>;<pos:position pos:line="154" pos:column="42"/></return></block></else></if>
		    <expr_stmt><expr><name pos:line="155" pos:column="21">p_ch<pos:position pos:line="155" pos:column="25"/></name> <operator pos:line="155" pos:column="26">=<pos:position pos:line="155" pos:column="27"/></operator> <literal type="number" pos:line="155" pos:column="28">0<pos:position pos:line="155" pos:column="29"/></literal></expr>;<pos:position pos:line="155" pos:column="30"/></expr_stmt> <comment type="block" pos:line="155" pos:column="31">/* This makes "prev_ch" get set to 0. */</comment>
		}<pos:position pos:line="156" pos:column="18"/></block></then></if></elseif> <elseif pos:line="156" pos:column="19">else <if pos:line="156" pos:column="24">if <condition pos:line="156" pos:column="27">(<expr><name pos:line="156" pos:column="28">t_ch<pos:position pos:line="156" pos:column="32"/></name> <operator pos:line="156" pos:column="33">==<pos:position pos:line="156" pos:column="35"/></operator> <name pos:line="156" pos:column="36">p_ch<pos:position pos:line="156" pos:column="40"/></name></expr>)<pos:position pos:line="156" pos:column="41"/></condition><then pos:line="156" pos:column="41">
		    <block type="pseudo"><expr_stmt><expr><name pos:line="157" pos:column="21">matched<pos:position pos:line="157" pos:column="28"/></name> <operator pos:line="157" pos:column="29">=<pos:position pos:line="157" pos:column="30"/></operator> <name pos:line="157" pos:column="31">TRUE<pos:position pos:line="157" pos:column="35"/></name></expr>;<pos:position pos:line="157" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
	    }<pos:position pos:line="158" pos:column="14"/></block> while <condition pos:line="158" pos:column="21">(<expr><name pos:line="158" pos:column="22">prev_ch<pos:position pos:line="158" pos:column="29"/></name> <operator pos:line="158" pos:column="30">=<pos:position pos:line="158" pos:column="31"/></operator> <name pos:line="158" pos:column="32">p_ch<pos:position pos:line="158" pos:column="36"/></name></expr><operator pos:line="158" pos:column="36">,<pos:position pos:line="158" pos:column="37"/></operator> <expr><operator pos:line="158" pos:column="38">(<pos:position pos:line="158" pos:column="39"/></operator><name pos:line="158" pos:column="39">p_ch<pos:position pos:line="158" pos:column="43"/></name> <operator pos:line="158" pos:column="44">=<pos:position pos:line="158" pos:column="45"/></operator> <operator pos:line="158" pos:column="46">*<pos:position pos:line="158" pos:column="47"/></operator><operator pos:line="158" pos:column="47">++<pos:position pos:line="158" pos:column="49"/></operator><name pos:line="158" pos:column="49">p<pos:position pos:line="158" pos:column="50"/></name><operator pos:line="158" pos:column="50">)<pos:position pos:line="158" pos:column="51"/></operator> <operator pos:line="158" pos:column="52">!=<pos:position pos:line="158" pos:column="54"/></operator> <literal type="char" pos:line="158" pos:column="55">']'<pos:position pos:line="158" pos:column="58"/></literal></expr>)<pos:position pos:line="158" pos:column="59"/></condition>;<pos:position pos:line="158" pos:column="60"/></do>
	    <if pos:line="159" pos:column="13">if <condition pos:line="159" pos:column="16">(<expr><name pos:line="159" pos:column="17">matched<pos:position pos:line="159" pos:column="24"/></name> <operator pos:line="159" pos:column="25">==<pos:position pos:line="159" pos:column="27"/></operator> <name pos:line="159" pos:column="28">special<pos:position pos:line="159" pos:column="35"/></name> <operator pos:line="159" pos:column="36">||<pos:position pos:line="159" pos:column="38"/></operator> <name pos:line="159" pos:column="39">t_ch<pos:position pos:line="159" pos:column="43"/></name> <operator pos:line="159" pos:column="44">==<pos:position pos:line="159" pos:column="46"/></operator> <literal type="char" pos:line="159" pos:column="47">'/'<pos:position pos:line="159" pos:column="50"/></literal></expr>)<pos:position pos:line="159" pos:column="51"/></condition><then pos:line="159" pos:column="51">
		<block type="pseudo"><return pos:line="160" pos:column="17">return <expr><name pos:line="160" pos:column="24">FALSE<pos:position pos:line="160" pos:column="29"/></name></expr>;<pos:position pos:line="160" pos:column="30"/></return></block></then></if>
	    <continue pos:line="161" pos:column="13">continue;<pos:position pos:line="161" pos:column="22"/></continue>
	}<pos:position pos:line="162" pos:column="10"/></block></switch>
    }<pos:position pos:line="163" pos:column="6"/></block></for>

    <do pos:line="165" pos:column="5">do <block pos:line="165" pos:column="8">{
	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><operator pos:line="166" pos:column="13">*<pos:position pos:line="166" pos:column="14"/></operator><name pos:line="166" pos:column="14">text<pos:position pos:line="166" pos:column="18"/></name></expr>)<pos:position pos:line="166" pos:column="19"/></condition><then pos:line="166" pos:column="19">
	    <block type="pseudo"><return pos:line="167" pos:column="13">return <expr><name pos:line="167" pos:column="20">FALSE<pos:position pos:line="167" pos:column="25"/></name></expr>;<pos:position pos:line="167" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="168" pos:column="6"/></block> while <condition pos:line="168" pos:column="13">(<expr><operator pos:line="168" pos:column="14">(<pos:position pos:line="168" pos:column="15"/></operator><name pos:line="168" pos:column="15">text<pos:position pos:line="168" pos:column="19"/></name> <operator pos:line="168" pos:column="20">=<pos:position pos:line="168" pos:column="21"/></operator> <operator pos:line="168" pos:column="22">*<pos:position pos:line="168" pos:column="23"/></operator><name pos:line="168" pos:column="23">a<pos:position pos:line="168" pos:column="24"/></name><operator pos:line="168" pos:column="24">++<pos:position pos:line="168" pos:column="26"/></operator><operator pos:line="168" pos:column="26">)<pos:position pos:line="168" pos:column="27"/></operator> <operator pos:line="168" pos:column="28">!=<pos:position pos:line="168" pos:column="30"/></operator> <name pos:line="168" pos:column="31">NULL<pos:position pos:line="168" pos:column="35"/></name></expr>)<pos:position pos:line="168" pos:column="36"/></condition>;<pos:position pos:line="168" pos:column="37"/></do>

    <return pos:line="170" pos:column="5">return <expr><name pos:line="170" pos:column="12">TRUE<pos:position pos:line="170" pos:column="16"/></name></expr>;<pos:position pos:line="170" pos:column="17"/></return>
}<pos:position pos:line="171" pos:column="2"/></block></function></unit>

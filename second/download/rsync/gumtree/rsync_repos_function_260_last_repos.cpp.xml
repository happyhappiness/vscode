<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_260_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">close_all<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">void<pos:position pos:line="1" pos:column="20"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="21"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">SHUTDOWN_ALL_SOCKETS<pos:position pos:line="3" pos:column="28"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">max_fd<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">fd<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">ret<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">STRUCT_STAT<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">st<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">max_fd<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">sysconf<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">_SC_OPEN_MAX<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call> <operator pos:line="9" pos:column="40">-<pos:position pos:line="9" pos:column="41"/></operator> <literal type="number" pos:line="9" pos:column="42">1<pos:position pos:line="9" pos:column="43"/></literal></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">fd<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">max_fd<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></init> <condition><expr><name pos:line="10" pos:column="27">fd<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">&gt;=<pos:position pos:line="10" pos:column="35"/></operator> <literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal></expr>;<pos:position pos:line="10" pos:column="35"/></condition> <incr><expr><name pos:line="10" pos:column="36">fd<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">--<pos:position pos:line="10" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="41"/></control> <block pos:line="10" pos:column="42">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><operator pos:line="11" pos:column="21">(<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">ret<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <call><name pos:line="11" pos:column="28">do_fstat<pos:position pos:line="11" pos:column="36"/></name><argument_list pos:line="11" pos:column="36">(<argument><expr><name pos:line="11" pos:column="37">fd<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="42">st<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="47">==<pos:position pos:line="11" pos:column="49"/></operator> <literal type="number" pos:line="11" pos:column="50">0<pos:position pos:line="11" pos:column="51"/></literal></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52"> <block pos:line="11" pos:column="53">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">is_a_socket<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><name pos:line="12" pos:column="41">fd<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="33">ret<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">=<pos:position pos:line="13" pos:column="38"/></operator> <call><name pos:line="13" pos:column="39">shutdown<pos:position pos:line="13" pos:column="47"/></name><argument_list pos:line="13" pos:column="47">(<argument><expr><name pos:line="13" pos:column="48">fd<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="52">2<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="14" pos:column="25">ret<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <call><name pos:line="14" pos:column="31">close<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">fd<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></for>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

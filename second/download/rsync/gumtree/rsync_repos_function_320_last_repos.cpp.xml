<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_320_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">generate_files<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">f_out<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">local_name<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">ndx<pos:position pos:line="3" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="21">next_loopchk<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><literal type="number" pos:line="3" pos:column="36">0<pos:position pos:line="3" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">fbuf<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><name pos:line="4" pos:column="19">MAXPATHLEN<pos:position pos:line="4" pos:column="29"/></name></expr>]<pos:position pos:line="4" pos:column="30"/></index></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">itemizing<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">logcode<pos:position pos:line="6" pos:column="21"/></name></name></type> <name pos:line="6" pos:column="22">code<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">save_info_flist<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name><name pos:line="7" pos:column="31">info_levels<pos:position pos:line="7" pos:column="42"/></name><index pos:line="7" pos:column="42">[<expr><name pos:line="7" pos:column="43">INFO_FLIST<pos:position pos:line="7" pos:column="53"/></name></expr>]<pos:position pos:line="7" pos:column="54"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">save_info_progress<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name><name pos:line="8" pos:column="34">info_levels<pos:position pos:line="8" pos:column="45"/></name><index pos:line="8" pos:column="45">[<expr><name pos:line="8" pos:column="46">INFO_PROGRESS<pos:position pos:line="8" pos:column="59"/></name></expr>]<pos:position pos:line="8" pos:column="60"/></index></name></expr></init></decl>;<pos:position pos:line="8" pos:column="61"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">protocol_version<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">&gt;=<pos:position pos:line="10" pos:column="35"/></operator> <literal type="number" pos:line="10" pos:column="33">29<pos:position pos:line="10" pos:column="35"/></literal></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">itemizing<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="29">1<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">maybe_ATTRS_REPORT<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">=<pos:position pos:line="12" pos:column="37"/></operator> <ternary><condition><expr><name pos:line="12" pos:column="38">stdout_format_has_i<pos:position pos:line="12" pos:column="57"/></name></expr> ?<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59"> <expr><literal type="number" pos:line="12" pos:column="60">0<pos:position pos:line="12" pos:column="61"/></literal></expr> <pos:position pos:line="12" pos:column="62"/></then><else pos:line="12" pos:column="62">: <expr><name pos:line="12" pos:column="64">ATTRS_REPORT<pos:position pos:line="12" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">code<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">=<pos:position pos:line="13" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="24">logfile_format_has_i<pos:position pos:line="13" pos:column="44"/></name></expr> ?<pos:position pos:line="13" pos:column="46"/></condition><then pos:line="13" pos:column="46"> <expr><name pos:line="13" pos:column="47">FNONE<pos:position pos:line="13" pos:column="52"/></name></expr> <pos:position pos:line="13" pos:column="53"/></then><else pos:line="13" pos:column="53">: <expr><name pos:line="13" pos:column="55">FLOG<pos:position pos:line="13" pos:column="59"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <elseif pos:line="14" pos:column="11">else <if pos:line="14" pos:column="16">if <condition pos:line="14" pos:column="19">(<expr><name pos:line="14" pos:column="20">am_daemon<pos:position pos:line="14" pos:column="29"/></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">itemizing<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">logfile_format_has_i<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">&amp;&amp;<pos:position pos:line="15" pos:column="60"/></operator> <name pos:line="15" pos:column="53">do_xfers<pos:position pos:line="15" pos:column="61"/></name></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">maybe_ATTRS_REPORT<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">=<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">ATTRS_REPORT<pos:position pos:line="16" pos:column="50"/></name></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">code<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="17" pos:column="24">itemizing<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">||<pos:position pos:line="17" pos:column="36"/></operator> <operator pos:line="17" pos:column="37">!<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">do_xfers<pos:position pos:line="17" pos:column="46"/></name></expr> ?<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <expr><name pos:line="17" pos:column="49">FCLIENT<pos:position pos:line="17" pos:column="56"/></name></expr> <pos:position pos:line="17" pos:column="57"/></then><else pos:line="17" pos:column="57">: <expr><name pos:line="17" pos:column="59">FINFO<pos:position pos:line="17" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><operator pos:line="18" pos:column="20">!<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">am_server<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">itemizing<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">stdout_format_has_i<pos:position pos:line="19" pos:column="48"/></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="20" pos:column="17">maybe_ATTRS_REPORT<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">=<pos:position pos:line="20" pos:column="37"/></operator> <ternary><condition><expr><name pos:line="20" pos:column="38">stdout_format_has_i<pos:position pos:line="20" pos:column="57"/></name></expr> ?<pos:position pos:line="20" pos:column="59"/></condition><then pos:line="20" pos:column="59"> <expr><literal type="number" pos:line="20" pos:column="60">0<pos:position pos:line="20" pos:column="61"/></literal></expr> <pos:position pos:line="20" pos:column="62"/></then><else pos:line="20" pos:column="62">: <expr><name pos:line="20" pos:column="64">ATTRS_REPORT<pos:position pos:line="20" pos:column="76"/></name></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">code<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="21" pos:column="24">itemizing<pos:position pos:line="21" pos:column="33"/></name></expr> ?<pos:position pos:line="21" pos:column="35"/></condition><then pos:line="21" pos:column="35"> <expr><name pos:line="21" pos:column="36">FNONE<pos:position pos:line="21" pos:column="41"/></name></expr> <pos:position pos:line="21" pos:column="42"/></then><else pos:line="21" pos:column="42">: <expr><name pos:line="21" pos:column="44">FINFO<pos:position pos:line="21" pos:column="49"/></name></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if></elseif> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">itemizing<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="24" pos:column="17">maybe_ATTRS_REPORT<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="38">ATTRS_REPORT<pos:position pos:line="24" pos:column="50"/></name></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">code<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">FINFO<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>
	<expr_stmt><expr><name pos:line="27" pos:column="9">solo_file<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">local_name<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">dir_tweaking<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <operator pos:line="28" pos:column="24">!<pos:position pos:line="28" pos:column="25"/></operator><operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">list_only<pos:position pos:line="28" pos:column="35"/></name> <operator pos:line="28" pos:column="36">||<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="39">solo_file<pos:position pos:line="28" pos:column="48"/></name> <operator pos:line="28" pos:column="49">||<pos:position pos:line="28" pos:column="51"/></operator> <name pos:line="28" pos:column="52">dry_run<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
	<expr_stmt><expr><name pos:line="29" pos:column="9">need_retouch_dir_times<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <name pos:line="29" pos:column="34">preserve_times<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">&amp;<pos:position pos:line="29" pos:column="54"/></operator> <name pos:line="29" pos:column="51">PRESERVE_DIR_TIMES<pos:position pos:line="29" pos:column="69"/></name></expr>;<pos:position pos:line="29" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">loopchk_limit<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="30" pos:column="25">allowed_lull<pos:position pos:line="30" pos:column="37"/></name></expr> ?<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39"> <expr><name pos:line="30" pos:column="40">allowed_lull<pos:position pos:line="30" pos:column="52"/></name> <operator pos:line="30" pos:column="53">*<pos:position pos:line="30" pos:column="54"/></operator> <literal type="number" pos:line="30" pos:column="55">5<pos:position pos:line="30" pos:column="56"/></literal></expr> <pos:position pos:line="30" pos:column="57"/></then><else pos:line="30" pos:column="57">: <expr><literal type="number" pos:line="30" pos:column="59">200<pos:position pos:line="30" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">symlink_timeset_failed_flags<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">=<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="40">ITEM_REPORT_TIME<pos:position pos:line="31" pos:column="56"/></name>
	    <operator pos:line="32" pos:column="13">|<pos:position pos:line="32" pos:column="14"/></operator> <operator pos:line="32" pos:column="15">(<pos:position pos:line="32" pos:column="16"/></operator><ternary><condition><expr><name pos:line="32" pos:column="16">protocol_version<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">&gt;=<pos:position pos:line="32" pos:column="38"/></operator> <literal type="number" pos:line="32" pos:column="36">30<pos:position pos:line="32" pos:column="38"/></literal> <operator pos:line="32" pos:column="39">||<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="42">!<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="43">am_server<pos:position pos:line="32" pos:column="52"/></name></expr> ?<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54"> <expr><name pos:line="32" pos:column="55">ITEM_REPORT_TIMEFAIL<pos:position pos:line="32" pos:column="75"/></name></expr> <pos:position pos:line="32" pos:column="76"/></then><else pos:line="32" pos:column="76">: <expr><literal type="number" pos:line="32" pos:column="78">0<pos:position pos:line="32" pos:column="79"/></literal></expr></else></ternary><operator pos:line="32" pos:column="79">)<pos:position pos:line="32" pos:column="80"/></operator></expr>;<pos:position pos:line="32" pos:column="81"/></expr_stmt>
	<expr_stmt><expr><name pos:line="33" pos:column="9">implied_dirs_are_missing<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="36">relative_paths<pos:position pos:line="33" pos:column="50"/></name> <operator pos:line="33" pos:column="51">&amp;&amp;<pos:position pos:line="33" pos:column="61"/></operator> <operator pos:line="33" pos:column="54">!<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="55">implied_dirs<pos:position pos:line="33" pos:column="67"/></name> <operator pos:line="33" pos:column="68">&amp;&amp;<pos:position pos:line="33" pos:column="78"/></operator> <name pos:line="33" pos:column="71">protocol_version<pos:position pos:line="33" pos:column="87"/></name> <operator pos:line="33" pos:column="88">&lt;<pos:position pos:line="33" pos:column="92"/></operator> <literal type="number" pos:line="33" pos:column="90">30<pos:position pos:line="33" pos:column="92"/></literal></expr>;<pos:position pos:line="33" pos:column="93"/></expr_stmt>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">DEBUG_GTE<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">GENR<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="29">1<pos:position pos:line="35" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">rprintf<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">FINFO<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="32">"generator starting pid=%d\n"<pos:position pos:line="36" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="36" pos:column="63">(<pos:position pos:line="36" pos:column="64"/></operator><name pos:line="36" pos:column="64">int<pos:position pos:line="36" pos:column="67"/></name><operator pos:line="36" pos:column="67">)<pos:position pos:line="36" pos:column="68"/></operator><call><name pos:line="36" pos:column="68">getpid<pos:position pos:line="36" pos:column="74"/></name><argument_list pos:line="36" pos:column="74">()<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="78"/></expr_stmt></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">delete_before<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&amp;&amp;<pos:position pos:line="38" pos:column="37"/></operator> <operator pos:line="38" pos:column="30">!<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">solo_file<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">&amp;&amp;<pos:position pos:line="38" pos:column="51"/></operator> <name><name pos:line="38" pos:column="44">cur_flist<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">-&gt;<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="55">used<pos:position pos:line="38" pos:column="59"/></name></name> <operator pos:line="38" pos:column="60">&gt;<pos:position pos:line="38" pos:column="64"/></operator> <literal type="number" pos:line="38" pos:column="62">0<pos:position pos:line="38" pos:column="63"/></literal></expr>)<pos:position pos:line="38" pos:column="64"/></condition><then pos:line="38" pos:column="64">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">do_delete_pass<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">()<pos:position pos:line="39" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt></block></then></if>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">delete_during<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">==<pos:position pos:line="40" pos:column="29"/></operator> <literal type="number" pos:line="40" pos:column="30">2<pos:position pos:line="40" pos:column="31"/></literal></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32"> <block pos:line="40" pos:column="33">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">deldelay_size<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">=<pos:position pos:line="41" pos:column="32"/></operator> <name pos:line="41" pos:column="33">BIGPATHBUFLEN<pos:position pos:line="41" pos:column="46"/></name> <operator pos:line="41" pos:column="47">*<pos:position pos:line="41" pos:column="48"/></operator> <literal type="number" pos:line="41" pos:column="49">4<pos:position pos:line="41" pos:column="50"/></literal></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="42" pos:column="17">deldelay_buf<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <call><name pos:line="42" pos:column="32">new_array<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">char<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">deldelay_size<pos:position pos:line="42" pos:column="61"/></name></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">deldelay_buf<pos:position pos:line="43" pos:column="34"/></name></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">out_of_memory<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><literal type="string" pos:line="44" pos:column="39">"delete-delay"<pos:position pos:line="44" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">info_levels<pos:position pos:line="46" pos:column="20"/></name><index pos:line="46" pos:column="20">[<expr><name pos:line="46" pos:column="21">INFO_FLIST<pos:position pos:line="46" pos:column="31"/></name></expr>]<pos:position pos:line="46" pos:column="32"/></index></name> <operator pos:line="46" pos:column="33">=<pos:position pos:line="46" pos:column="34"/></operator> <name><name pos:line="46" pos:column="35">info_levels<pos:position pos:line="46" pos:column="46"/></name><index pos:line="46" pos:column="46">[<expr><name pos:line="46" pos:column="47">INFO_PROGRESS<pos:position pos:line="46" pos:column="60"/></name></expr>]<pos:position pos:line="46" pos:column="61"/></index></name> <operator pos:line="46" pos:column="62">=<pos:position pos:line="46" pos:column="63"/></operator> <literal type="number" pos:line="46" pos:column="64">0<pos:position pos:line="46" pos:column="65"/></literal></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">append_mode<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">&gt;<pos:position pos:line="48" pos:column="29"/></operator> <literal type="number" pos:line="48" pos:column="27">0<pos:position pos:line="48" pos:column="28"/></literal> <operator pos:line="48" pos:column="29">||<pos:position pos:line="48" pos:column="31"/></operator> <name pos:line="48" pos:column="32">whole_file<pos:position pos:line="48" pos:column="42"/></name> <operator pos:line="48" pos:column="43">&lt;<pos:position pos:line="48" pos:column="47"/></operator> <literal type="number" pos:line="48" pos:column="45">0<pos:position pos:line="48" pos:column="46"/></literal></expr>)<pos:position pos:line="48" pos:column="47"/></condition><then pos:line="48" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="17">whole_file<pos:position pos:line="49" pos:column="27"/></name> <operator pos:line="49" pos:column="28">=<pos:position pos:line="49" pos:column="29"/></operator> <literal type="number" pos:line="49" pos:column="30">0<pos:position pos:line="49" pos:column="31"/></literal></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt></block></then></if>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><call><name pos:line="50" pos:column="13">DEBUG_GTE<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">FLIST<pos:position pos:line="50" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="30">1<pos:position pos:line="50" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33"> <block pos:line="50" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">rprintf<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">FINFO<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="32">"delta-transmission %s\n"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="52" pos:column="25">whole_file<pos:position pos:line="52" pos:column="35"/></name></expr>
			?<pos:position pos:line="53" pos:column="26"/></condition><then pos:line="53" pos:column="26"> <expr><literal type="string" pos:line="53" pos:column="27">"disabled for local transfer or --whole-file"<pos:position pos:line="53" pos:column="72"/></literal></expr>
			<pos:position pos:line="54" pos:column="4"/></then><else pos:line="54" pos:column="25">: <expr><literal type="string" pos:line="54" pos:column="27">"enabled"<pos:position pos:line="54" pos:column="36"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="54" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="57" pos:column="9">dflt_perms<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <operator pos:line="57" pos:column="22">(<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">ACCESSPERMS<pos:position pos:line="57" pos:column="34"/></name> <operator pos:line="57" pos:column="35">&amp;<pos:position pos:line="57" pos:column="40"/></operator> <operator pos:line="57" pos:column="37">~<pos:position pos:line="57" pos:column="38"/></operator><name pos:line="57" pos:column="38">orig_umask<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">)<pos:position pos:line="57" pos:column="49"/></operator></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>

	<do pos:line="59" pos:column="9">do <block pos:line="59" pos:column="12">{
<cpp:ifdef pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">ifdef<pos:position pos:line="60" pos:column="7"/></cpp:directive> <name pos:line="60" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="60" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">preserve_hard_links<pos:position pos:line="61" pos:column="40"/></name> <operator pos:line="61" pos:column="41">&amp;&amp;<pos:position pos:line="61" pos:column="51"/></operator> <name pos:line="61" pos:column="44">inc_recurse<pos:position pos:line="61" pos:column="55"/></name></expr>)<pos:position pos:line="61" pos:column="56"/></condition><then pos:line="61" pos:column="56"> <block pos:line="61" pos:column="57">{
			<while pos:line="62" pos:column="25">while <condition pos:line="62" pos:column="31">(<expr><operator pos:line="62" pos:column="32">!<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="33">flist_eof<pos:position pos:line="62" pos:column="42"/></name> <operator pos:line="62" pos:column="43">&amp;&amp;<pos:position pos:line="62" pos:column="53"/></operator> <name pos:line="62" pos:column="46">file_total<pos:position pos:line="62" pos:column="56"/></name> <operator pos:line="62" pos:column="57">&lt;<pos:position pos:line="62" pos:column="61"/></operator> <name pos:line="62" pos:column="59">MIN_FILECNT_LOOKAHEAD<pos:position pos:line="62" pos:column="80"/></name><operator pos:line="62" pos:column="80">/<pos:position pos:line="62" pos:column="81"/></operator><literal type="number" pos:line="62" pos:column="81">2<pos:position pos:line="62" pos:column="82"/></literal></expr>)<pos:position pos:line="62" pos:column="83"/></condition>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="63" pos:column="33">wait_for_receiver<pos:position pos:line="63" pos:column="50"/></name><argument_list pos:line="63" pos:column="50">()<pos:position pos:line="63" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="53"/></expr_stmt></block></while>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>

		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name pos:line="67" pos:column="21">inc_recurse<pos:position pos:line="67" pos:column="32"/></name> <operator pos:line="67" pos:column="33">&amp;&amp;<pos:position pos:line="67" pos:column="43"/></operator> <name><name pos:line="67" pos:column="36">cur_flist<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">-&gt;<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="47">parent_ndx<pos:position pos:line="67" pos:column="57"/></name></name> <operator pos:line="67" pos:column="58">&gt;=<pos:position pos:line="67" pos:column="63"/></operator> <literal type="number" pos:line="67" pos:column="61">0<pos:position pos:line="67" pos:column="62"/></literal></expr>)<pos:position pos:line="67" pos:column="63"/></condition><then pos:line="67" pos:column="63"> <block pos:line="67" pos:column="64">{
			<decl_stmt><decl><type><name><name pos:line="68" pos:column="25">struct<pos:position pos:line="68" pos:column="31"/></name> <name pos:line="68" pos:column="32">file_struct<pos:position pos:line="68" pos:column="43"/></name></name> <modifier pos:line="68" pos:column="44">*<pos:position pos:line="68" pos:column="45"/></modifier></type><name pos:line="68" pos:column="45">fp<pos:position pos:line="68" pos:column="47"/></name> <init pos:line="68" pos:column="48">= <expr><name><name pos:line="68" pos:column="50">dir_flist<pos:position pos:line="68" pos:column="59"/></name><operator pos:line="68" pos:column="59">-&gt;<pos:position pos:line="68" pos:column="64"/></operator><name pos:line="68" pos:column="61">files<pos:position pos:line="68" pos:column="66"/></name><index pos:line="68" pos:column="66">[<expr><name><name pos:line="68" pos:column="67">cur_flist<pos:position pos:line="68" pos:column="76"/></name><operator pos:line="68" pos:column="76">-&gt;<pos:position pos:line="68" pos:column="81"/></operator><name pos:line="68" pos:column="78">parent_ndx<pos:position pos:line="68" pos:column="88"/></name></name></expr>]<pos:position pos:line="68" pos:column="89"/></index></name></expr></init></decl>;<pos:position pos:line="68" pos:column="90"/></decl_stmt>
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><name pos:line="69" pos:column="29">solo_file<pos:position pos:line="69" pos:column="38"/></name></expr>)<pos:position pos:line="69" pos:column="39"/></condition><then pos:line="69" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="33">strlcpy<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name pos:line="70" pos:column="41">fbuf<pos:position pos:line="70" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="47">solo_file<pos:position pos:line="70" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="58">sizeof <name pos:line="70" pos:column="65">fbuf<pos:position pos:line="70" pos:column="69"/></name></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="71"/></expr_stmt></block></then>
			<else pos:line="71" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="33">f_name<pos:position pos:line="72" pos:column="39"/></name><argument_list pos:line="72" pos:column="39">(<argument><expr><name pos:line="72" pos:column="40">fp<pos:position pos:line="72" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="44">fbuf<pos:position pos:line="72" pos:column="48"/></name></expr></argument>)<pos:position pos:line="72" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="50"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="73" pos:column="25">ndx<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name><name pos:line="73" pos:column="31">cur_flist<pos:position pos:line="73" pos:column="40"/></name><operator pos:line="73" pos:column="40">-&gt;<pos:position pos:line="73" pos:column="45"/></operator><name pos:line="73" pos:column="42">ndx_start<pos:position pos:line="73" pos:column="51"/></name></name> <operator pos:line="73" pos:column="52">-<pos:position pos:line="73" pos:column="53"/></operator> <literal type="number" pos:line="73" pos:column="54">1<pos:position pos:line="73" pos:column="55"/></literal></expr>;<pos:position pos:line="73" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="74" pos:column="25">recv_generator<pos:position pos:line="74" pos:column="39"/></name><argument_list pos:line="74" pos:column="39">(<argument><expr><name pos:line="74" pos:column="40">fbuf<pos:position pos:line="74" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="46">fp<pos:position pos:line="74" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="50">ndx<pos:position pos:line="74" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="55">itemizing<pos:position pos:line="74" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="66">code<pos:position pos:line="74" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="72">f_out<pos:position pos:line="74" pos:column="77"/></name></expr></argument>)<pos:position pos:line="74" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="79"/></expr_stmt>
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name pos:line="75" pos:column="29">delete_during<pos:position pos:line="75" pos:column="42"/></name> <operator pos:line="75" pos:column="43">&amp;&amp;<pos:position pos:line="75" pos:column="53"/></operator> <name pos:line="75" pos:column="46">dry_run<pos:position pos:line="75" pos:column="53"/></name> <operator pos:line="75" pos:column="54">&lt;<pos:position pos:line="75" pos:column="58"/></operator> <literal type="number" pos:line="75" pos:column="56">2<pos:position pos:line="75" pos:column="57"/></literal> <operator pos:line="75" pos:column="58">&amp;&amp;<pos:position pos:line="75" pos:column="68"/></operator> <operator pos:line="75" pos:column="61">!<pos:position pos:line="75" pos:column="62"/></operator><name pos:line="75" pos:column="62">list_only<pos:position pos:line="75" pos:column="71"/></name>
			 <operator pos:line="76" pos:column="26">&amp;&amp;<pos:position pos:line="76" pos:column="36"/></operator> <operator pos:line="76" pos:column="29">!<pos:position pos:line="76" pos:column="30"/></operator><operator pos:line="76" pos:column="30">(<pos:position pos:line="76" pos:column="31"/></operator><name><name pos:line="76" pos:column="31">fp<pos:position pos:line="76" pos:column="33"/></name><operator pos:line="76" pos:column="33">-&gt;<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="35">flags<pos:position pos:line="76" pos:column="40"/></name></name> <operator pos:line="76" pos:column="41">&amp;<pos:position pos:line="76" pos:column="46"/></operator> <name pos:line="76" pos:column="43">FLAG_MISSING_DIR<pos:position pos:line="76" pos:column="59"/></name><operator pos:line="76" pos:column="59">)<pos:position pos:line="76" pos:column="60"/></operator></expr>)<pos:position pos:line="76" pos:column="61"/></condition><then pos:line="76" pos:column="61"> <block pos:line="76" pos:column="62">{
				<if pos:line="77" pos:column="33">if <condition pos:line="77" pos:column="36">(<expr><name><name pos:line="77" pos:column="37">fp<pos:position pos:line="77" pos:column="39"/></name><operator pos:line="77" pos:column="39">-&gt;<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="41">flags<pos:position pos:line="77" pos:column="46"/></name></name> <operator pos:line="77" pos:column="47">&amp;<pos:position pos:line="77" pos:column="52"/></operator> <name pos:line="77" pos:column="49">FLAG_CONTENT_DIR<pos:position pos:line="77" pos:column="65"/></name></expr>)<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66"> <block pos:line="77" pos:column="67">{
					<decl_stmt><decl><type><name pos:line="78" pos:column="41">dev_t<pos:position pos:line="78" pos:column="46"/></name></type> <name pos:line="78" pos:column="47">dirdev<pos:position pos:line="78" pos:column="53"/></name></decl>;<pos:position pos:line="78" pos:column="54"/></decl_stmt>
					<if pos:line="79" pos:column="41">if <condition pos:line="79" pos:column="44">(<expr><name pos:line="79" pos:column="45">one_file_system<pos:position pos:line="79" pos:column="60"/></name></expr>)<pos:position pos:line="79" pos:column="61"/></condition><then pos:line="79" pos:column="61"> <block pos:line="79" pos:column="62">{
						<decl_stmt><decl><type><name pos:line="80" pos:column="49">uint32<pos:position pos:line="80" pos:column="55"/></name> <modifier pos:line="80" pos:column="56">*<pos:position pos:line="80" pos:column="57"/></modifier></type><name pos:line="80" pos:column="57">devp<pos:position pos:line="80" pos:column="61"/></name> <init pos:line="80" pos:column="62">= <expr><call><name pos:line="80" pos:column="64">F_DIR_DEV_P<pos:position pos:line="80" pos:column="75"/></name><argument_list pos:line="80" pos:column="75">(<argument><expr><name pos:line="80" pos:column="76">fp<pos:position pos:line="80" pos:column="78"/></name></expr></argument>)<pos:position pos:line="80" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="80" pos:column="80"/></decl_stmt>
						<expr_stmt><expr><name pos:line="81" pos:column="49">dirdev<pos:position pos:line="81" pos:column="55"/></name> <operator pos:line="81" pos:column="56">=<pos:position pos:line="81" pos:column="57"/></operator> <call><name pos:line="81" pos:column="58">MAKEDEV<pos:position pos:line="81" pos:column="65"/></name><argument_list pos:line="81" pos:column="65">(<argument><expr><call><name pos:line="81" pos:column="66">DEV_MAJOR<pos:position pos:line="81" pos:column="75"/></name><argument_list pos:line="81" pos:column="75">(<argument><expr><name pos:line="81" pos:column="76">devp<pos:position pos:line="81" pos:column="80"/></name></expr></argument>)<pos:position pos:line="81" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="81" pos:column="83">DEV_MINOR<pos:position pos:line="81" pos:column="92"/></name><argument_list pos:line="81" pos:column="92">(<argument><expr><name pos:line="81" pos:column="93">devp<pos:position pos:line="81" pos:column="97"/></name></expr></argument>)<pos:position pos:line="81" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="100"/></expr_stmt>
					}<pos:position pos:line="82" pos:column="42"/></block></then> <else pos:line="82" pos:column="43">else
						<block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="49">dirdev<pos:position pos:line="83" pos:column="55"/></name> <operator pos:line="83" pos:column="56">=<pos:position pos:line="83" pos:column="57"/></operator> <call><name pos:line="83" pos:column="58">MAKEDEV<pos:position pos:line="83" pos:column="65"/></name><argument_list pos:line="83" pos:column="65">(<argument><expr><literal type="number" pos:line="83" pos:column="66">0<pos:position pos:line="83" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="69">0<pos:position pos:line="83" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="72"/></expr_stmt></block></else></if>
					<expr_stmt><expr><call><name pos:line="84" pos:column="41">delete_in_dir<pos:position pos:line="84" pos:column="54"/></name><argument_list pos:line="84" pos:column="54">(<argument><expr><name pos:line="84" pos:column="55">fbuf<pos:position pos:line="84" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="61">fp<pos:position pos:line="84" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="65">&amp;<pos:position pos:line="84" pos:column="70"/></operator><name pos:line="84" pos:column="66">dirdev<pos:position pos:line="84" pos:column="72"/></name></expr></argument>)<pos:position pos:line="84" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="74"/></expr_stmt>
				}<pos:position pos:line="85" pos:column="34"/></block></then> <else pos:line="85" pos:column="35">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="41">change_local_filter_dir<pos:position pos:line="86" pos:column="64"/></name><argument_list pos:line="86" pos:column="64">(<argument><expr><name pos:line="86" pos:column="65">fbuf<pos:position pos:line="86" pos:column="69"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="71">strlen<pos:position pos:line="86" pos:column="77"/></name><argument_list pos:line="86" pos:column="77">(<argument><expr><name pos:line="86" pos:column="78">fbuf<pos:position pos:line="86" pos:column="82"/></name></expr></argument>)<pos:position pos:line="86" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="85">F_DEPTH<pos:position pos:line="86" pos:column="92"/></name><argument_list pos:line="86" pos:column="92">(<argument><expr><name pos:line="86" pos:column="93">fp<pos:position pos:line="86" pos:column="95"/></name></expr></argument>)<pos:position pos:line="86" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="98"/></expr_stmt></block></else></if>
			}<pos:position pos:line="87" pos:column="26"/></block></then></if>
		}<pos:position pos:line="88" pos:column="18"/></block></then></if>
		<for pos:line="89" pos:column="17">for <control pos:line="89" pos:column="21">(<init><expr><name pos:line="89" pos:column="22">i<pos:position pos:line="89" pos:column="23"/></name> <operator pos:line="89" pos:column="24">=<pos:position pos:line="89" pos:column="25"/></operator> <name><name pos:line="89" pos:column="26">cur_flist<pos:position pos:line="89" pos:column="35"/></name><operator pos:line="89" pos:column="35">-&gt;<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="37">low<pos:position pos:line="89" pos:column="40"/></name></name></expr>;<pos:position pos:line="89" pos:column="41"/></init> <condition><expr><name pos:line="89" pos:column="42">i<pos:position pos:line="89" pos:column="43"/></name> <operator pos:line="89" pos:column="44">&lt;=<pos:position pos:line="89" pos:column="49"/></operator> <name><name pos:line="89" pos:column="47">cur_flist<pos:position pos:line="89" pos:column="56"/></name><operator pos:line="89" pos:column="56">-&gt;<pos:position pos:line="89" pos:column="61"/></operator><name pos:line="89" pos:column="58">high<pos:position pos:line="89" pos:column="62"/></name></name></expr>;<pos:position pos:line="89" pos:column="63"/></condition> <incr><expr><name pos:line="89" pos:column="64">i<pos:position pos:line="89" pos:column="65"/></name><operator pos:line="89" pos:column="65">++<pos:position pos:line="89" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="89" pos:column="68"/></control> <block pos:line="89" pos:column="69">{
			<decl_stmt><decl><type><name><name pos:line="90" pos:column="25">struct<pos:position pos:line="90" pos:column="31"/></name> <name pos:line="90" pos:column="32">file_struct<pos:position pos:line="90" pos:column="43"/></name></name> <modifier pos:line="90" pos:column="44">*<pos:position pos:line="90" pos:column="45"/></modifier></type><name pos:line="90" pos:column="45">file<pos:position pos:line="90" pos:column="49"/></name> <init pos:line="90" pos:column="50">= <expr><name><name pos:line="90" pos:column="52">cur_flist<pos:position pos:line="90" pos:column="61"/></name><operator pos:line="90" pos:column="61">-&gt;<pos:position pos:line="90" pos:column="66"/></operator><name pos:line="90" pos:column="63">sorted<pos:position pos:line="90" pos:column="69"/></name><index pos:line="90" pos:column="69">[<expr><name pos:line="90" pos:column="70">i<pos:position pos:line="90" pos:column="71"/></name></expr>]<pos:position pos:line="90" pos:column="72"/></index></name></expr></init></decl>;<pos:position pos:line="90" pos:column="73"/></decl_stmt>

			<if pos:line="92" pos:column="25">if <condition pos:line="92" pos:column="28">(<expr><operator pos:line="92" pos:column="29">!<pos:position pos:line="92" pos:column="30"/></operator><call><name pos:line="92" pos:column="30">F_IS_ACTIVE<pos:position pos:line="92" pos:column="41"/></name><argument_list pos:line="92" pos:column="41">(<argument><expr><name pos:line="92" pos:column="42">file<pos:position pos:line="92" pos:column="46"/></name></expr></argument>)<pos:position pos:line="92" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="48"/></condition><then pos:line="92" pos:column="48">
				<block type="pseudo"><continue pos:line="93" pos:column="33">continue;<pos:position pos:line="93" pos:column="42"/></continue></block></then></if>

			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><name pos:line="95" pos:column="29">unsort_ndx<pos:position pos:line="95" pos:column="39"/></name></expr>)<pos:position pos:line="95" pos:column="40"/></condition><then pos:line="95" pos:column="40">
				<block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="33">ndx<pos:position pos:line="96" pos:column="36"/></name> <operator pos:line="96" pos:column="37">=<pos:position pos:line="96" pos:column="38"/></operator> <call><name pos:line="96" pos:column="39">F_NDX<pos:position pos:line="96" pos:column="44"/></name><argument_list pos:line="96" pos:column="44">(<argument><expr><name pos:line="96" pos:column="45">file<pos:position pos:line="96" pos:column="49"/></name></expr></argument>)<pos:position pos:line="96" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="51"/></expr_stmt></block></then>
			<else pos:line="97" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="33">ndx<pos:position pos:line="98" pos:column="36"/></name> <operator pos:line="98" pos:column="37">=<pos:position pos:line="98" pos:column="38"/></operator> <name pos:line="98" pos:column="39">i<pos:position pos:line="98" pos:column="40"/></name> <operator pos:line="98" pos:column="41">+<pos:position pos:line="98" pos:column="42"/></operator> <name><name pos:line="98" pos:column="43">cur_flist<pos:position pos:line="98" pos:column="52"/></name><operator pos:line="98" pos:column="52">-&gt;<pos:position pos:line="98" pos:column="57"/></operator><name pos:line="98" pos:column="54">ndx_start<pos:position pos:line="98" pos:column="63"/></name></name></expr>;<pos:position pos:line="98" pos:column="64"/></expr_stmt></block></else></if>

			<if pos:line="100" pos:column="25">if <condition pos:line="100" pos:column="28">(<expr><name pos:line="100" pos:column="29">solo_file<pos:position pos:line="100" pos:column="38"/></name></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="101" pos:column="33">strlcpy<pos:position pos:line="101" pos:column="40"/></name><argument_list pos:line="101" pos:column="40">(<argument><expr><name pos:line="101" pos:column="41">fbuf<pos:position pos:line="101" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="47">solo_file<pos:position pos:line="101" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="58">sizeof <name pos:line="101" pos:column="65">fbuf<pos:position pos:line="101" pos:column="69"/></name></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="71"/></expr_stmt></block></then>
			<else pos:line="102" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="33">f_name<pos:position pos:line="103" pos:column="39"/></name><argument_list pos:line="103" pos:column="39">(<argument><expr><name pos:line="103" pos:column="40">file<pos:position pos:line="103" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="46">fbuf<pos:position pos:line="103" pos:column="50"/></name></expr></argument>)<pos:position pos:line="103" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="52"/></expr_stmt></block></else></if>
			<expr_stmt><expr><call><name pos:line="104" pos:column="25">recv_generator<pos:position pos:line="104" pos:column="39"/></name><argument_list pos:line="104" pos:column="39">(<argument><expr><name pos:line="104" pos:column="40">fbuf<pos:position pos:line="104" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="46">file<pos:position pos:line="104" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="52">ndx<pos:position pos:line="104" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="57">itemizing<pos:position pos:line="104" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="68">code<pos:position pos:line="104" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="74">f_out<pos:position pos:line="104" pos:column="79"/></name></expr></argument>)<pos:position pos:line="104" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="81"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="106" pos:column="25">check_for_finished_files<pos:position pos:line="106" pos:column="49"/></name><argument_list pos:line="106" pos:column="49">(<argument><expr><name pos:line="106" pos:column="50">itemizing<pos:position pos:line="106" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="61">code<pos:position pos:line="106" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="67">0<pos:position pos:line="106" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="70"/></expr_stmt>

			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><name pos:line="108" pos:column="29">i<pos:position pos:line="108" pos:column="30"/></name> <operator pos:line="108" pos:column="31">+<pos:position pos:line="108" pos:column="32"/></operator> <name><name pos:line="108" pos:column="33">cur_flist<pos:position pos:line="108" pos:column="42"/></name><operator pos:line="108" pos:column="42">-&gt;<pos:position pos:line="108" pos:column="47"/></operator><name pos:line="108" pos:column="44">ndx_start<pos:position pos:line="108" pos:column="53"/></name></name> <operator pos:line="108" pos:column="54">&gt;=<pos:position pos:line="108" pos:column="59"/></operator> <name pos:line="108" pos:column="57">next_loopchk<pos:position pos:line="108" pos:column="69"/></name></expr>)<pos:position pos:line="108" pos:column="70"/></condition><then pos:line="108" pos:column="70"> <block pos:line="108" pos:column="71">{
				<if pos:line="109" pos:column="33">if <condition pos:line="109" pos:column="36">(<expr><name pos:line="109" pos:column="37">allowed_lull<pos:position pos:line="109" pos:column="49"/></name></expr>)<pos:position pos:line="109" pos:column="50"/></condition><then pos:line="109" pos:column="50">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="41">maybe_send_keepalive<pos:position pos:line="110" pos:column="61"/></name><argument_list pos:line="110" pos:column="61">(<argument><expr><call><name pos:line="110" pos:column="62">time<pos:position pos:line="110" pos:column="66"/></name><argument_list pos:line="110" pos:column="66">(<argument><expr><name pos:line="110" pos:column="67">NULL<pos:position pos:line="110" pos:column="71"/></name></expr></argument>)<pos:position pos:line="110" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="110" pos:column="74">MSK_ALLOW_FLUSH<pos:position pos:line="110" pos:column="89"/></name></expr></argument>)<pos:position pos:line="110" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="91"/></expr_stmt></block></then>
				<else pos:line="111" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="41">maybe_flush_socket<pos:position pos:line="112" pos:column="59"/></name><argument_list pos:line="112" pos:column="59">(<argument><expr><literal type="number" pos:line="112" pos:column="60">0<pos:position pos:line="112" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="63"/></expr_stmt></block></else></if>
				<expr_stmt><expr><name pos:line="113" pos:column="33">next_loopchk<pos:position pos:line="113" pos:column="45"/></name> <operator pos:line="113" pos:column="46">+=<pos:position pos:line="113" pos:column="48"/></operator> <name pos:line="113" pos:column="49">loopchk_limit<pos:position pos:line="113" pos:column="62"/></name></expr>;<pos:position pos:line="113" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="114" pos:column="26"/></block></then></if>
		}<pos:position pos:line="115" pos:column="18"/></block></for>

		<if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><operator pos:line="117" pos:column="21">!<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">inc_recurse<pos:position pos:line="117" pos:column="33"/></name></expr>)<pos:position pos:line="117" pos:column="34"/></condition><then pos:line="117" pos:column="34"> <block pos:line="117" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="118" pos:column="25">write_ndx<pos:position pos:line="118" pos:column="34"/></name><argument_list pos:line="118" pos:column="34">(<argument><expr><name pos:line="118" pos:column="35">f_out<pos:position pos:line="118" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="42">NDX_DONE<pos:position pos:line="118" pos:column="50"/></name></expr></argument>)<pos:position pos:line="118" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="52"/></expr_stmt>
			<break pos:line="119" pos:column="25">break;<pos:position pos:line="119" pos:column="31"/></break>
		}<pos:position pos:line="120" pos:column="18"/></block></then></if>

		<while pos:line="122" pos:column="17">while <condition pos:line="122" pos:column="23">(<expr><literal type="number" pos:line="122" pos:column="24">1<pos:position pos:line="122" pos:column="25"/></literal></expr>)<pos:position pos:line="122" pos:column="26"/></condition> <block pos:line="122" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="123" pos:column="25">check_for_finished_files<pos:position pos:line="123" pos:column="49"/></name><argument_list pos:line="123" pos:column="49">(<argument><expr><name pos:line="123" pos:column="50">itemizing<pos:position pos:line="123" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="61">code<pos:position pos:line="123" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="67">1<pos:position pos:line="123" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="70"/></expr_stmt>
			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><name><name pos:line="124" pos:column="29">cur_flist<pos:position pos:line="124" pos:column="38"/></name><operator pos:line="124" pos:column="38">-&gt;<pos:position pos:line="124" pos:column="43"/></operator><name pos:line="124" pos:column="40">next<pos:position pos:line="124" pos:column="44"/></name></name> <operator pos:line="124" pos:column="45">||<pos:position pos:line="124" pos:column="47"/></operator> <name pos:line="124" pos:column="48">flist_eof<pos:position pos:line="124" pos:column="57"/></name></expr>)<pos:position pos:line="124" pos:column="58"/></condition><then pos:line="124" pos:column="58">
				<block type="pseudo"><break pos:line="125" pos:column="33">break;<pos:position pos:line="125" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="126" pos:column="25">wait_for_receiver<pos:position pos:line="126" pos:column="42"/></name><argument_list pos:line="126" pos:column="42">()<pos:position pos:line="126" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="127" pos:column="18"/></block></while>
	}<pos:position pos:line="128" pos:column="10"/></block> while <condition pos:line="128" pos:column="17">(<expr><operator pos:line="128" pos:column="18">(<pos:position pos:line="128" pos:column="19"/></operator><name pos:line="128" pos:column="19">cur_flist<pos:position pos:line="128" pos:column="28"/></name> <operator pos:line="128" pos:column="29">=<pos:position pos:line="128" pos:column="30"/></operator> <name><name pos:line="128" pos:column="31">cur_flist<pos:position pos:line="128" pos:column="40"/></name><operator pos:line="128" pos:column="40">-&gt;<pos:position pos:line="128" pos:column="45"/></operator><name pos:line="128" pos:column="42">next<pos:position pos:line="128" pos:column="46"/></name></name><operator pos:line="128" pos:column="46">)<pos:position pos:line="128" pos:column="47"/></operator> <operator pos:line="128" pos:column="48">!=<pos:position pos:line="128" pos:column="50"/></operator> <name pos:line="128" pos:column="51">NULL<pos:position pos:line="128" pos:column="55"/></name></expr>)<pos:position pos:line="128" pos:column="56"/></condition>;<pos:position pos:line="128" pos:column="57"/></do>

	<if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">delete_during<pos:position pos:line="130" pos:column="26"/></name></expr>)<pos:position pos:line="130" pos:column="27"/></condition><then pos:line="130" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="17">delete_in_dir<pos:position pos:line="131" pos:column="30"/></name><argument_list pos:line="131" pos:column="30">(<argument><expr><name pos:line="131" pos:column="31">NULL<pos:position pos:line="131" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="37">NULL<pos:position pos:line="131" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="43">&amp;<pos:position pos:line="131" pos:column="48"/></operator><name pos:line="131" pos:column="44">dev_zero<pos:position pos:line="131" pos:column="52"/></name></expr></argument>)<pos:position pos:line="131" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="54"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="132" pos:column="9">phase<pos:position pos:line="132" pos:column="14"/></name><operator pos:line="132" pos:column="14">++<pos:position pos:line="132" pos:column="16"/></operator></expr>;<pos:position pos:line="132" pos:column="17"/></expr_stmt>
	<if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><call><name pos:line="133" pos:column="13">DEBUG_GTE<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><name pos:line="133" pos:column="23">GENR<pos:position pos:line="133" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="29">1<pos:position pos:line="133" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="32"/></condition><then pos:line="133" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="17">rprintf<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><name pos:line="134" pos:column="25">FINFO<pos:position pos:line="134" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="32">"generate_files phase=%d\n"<pos:position pos:line="134" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="61">phase<pos:position pos:line="134" pos:column="66"/></name></expr></argument>)<pos:position pos:line="134" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="68"/></expr_stmt></block></then></if>

	<while pos:line="136" pos:column="9">while <condition pos:line="136" pos:column="15">(<expr><literal type="number" pos:line="136" pos:column="16">1<pos:position pos:line="136" pos:column="17"/></literal></expr>)<pos:position pos:line="136" pos:column="18"/></condition> <block pos:line="136" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="137" pos:column="17">check_for_finished_files<pos:position pos:line="137" pos:column="41"/></name><argument_list pos:line="137" pos:column="41">(<argument><expr><name pos:line="137" pos:column="42">itemizing<pos:position pos:line="137" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="53">code<pos:position pos:line="137" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="59">1<pos:position pos:line="137" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="62"/></expr_stmt>
		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><name pos:line="138" pos:column="21">msgdone_cnt<pos:position pos:line="138" pos:column="32"/></name></expr>)<pos:position pos:line="138" pos:column="33"/></condition><then pos:line="138" pos:column="33">
			<block type="pseudo"><break pos:line="139" pos:column="25">break;<pos:position pos:line="139" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><call><name pos:line="140" pos:column="17">wait_for_receiver<pos:position pos:line="140" pos:column="34"/></name><argument_list pos:line="140" pos:column="34">()<pos:position pos:line="140" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="141" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="143" pos:column="9">phase<pos:position pos:line="143" pos:column="14"/></name><operator pos:line="143" pos:column="14">++<pos:position pos:line="143" pos:column="16"/></operator></expr>;<pos:position pos:line="143" pos:column="17"/></expr_stmt>
	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><call><name pos:line="144" pos:column="13">DEBUG_GTE<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><name pos:line="144" pos:column="23">GENR<pos:position pos:line="144" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="29">1<pos:position pos:line="144" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="144" pos:column="32"/></condition><then pos:line="144" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="17">rprintf<pos:position pos:line="145" pos:column="24"/></name><argument_list pos:line="145" pos:column="24">(<argument><expr><name pos:line="145" pos:column="25">FINFO<pos:position pos:line="145" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="32">"generate_files phase=%d\n"<pos:position pos:line="145" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="145" pos:column="61">phase<pos:position pos:line="145" pos:column="66"/></name></expr></argument>)<pos:position pos:line="145" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="68"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="147" pos:column="9">write_ndx<pos:position pos:line="147" pos:column="18"/></name><argument_list pos:line="147" pos:column="18">(<argument><expr><name pos:line="147" pos:column="19">f_out<pos:position pos:line="147" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="26">NDX_DONE<pos:position pos:line="147" pos:column="34"/></name></expr></argument>)<pos:position pos:line="147" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="36"/></expr_stmt>

	<comment type="block" pos:line="149" pos:column="9">/* Reduce round-trip lag-time for a useless delay-updates phase. */</comment>
	<if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><name pos:line="150" pos:column="13">protocol_version<pos:position pos:line="150" pos:column="29"/></name> <operator pos:line="150" pos:column="30">&gt;=<pos:position pos:line="150" pos:column="35"/></operator> <literal type="number" pos:line="150" pos:column="33">29<pos:position pos:line="150" pos:column="35"/></literal> <operator pos:line="150" pos:column="36">&amp;&amp;<pos:position pos:line="150" pos:column="46"/></operator> <call><name pos:line="150" pos:column="39">EARLY_DELAY_DONE_MSG<pos:position pos:line="150" pos:column="59"/></name><argument_list pos:line="150" pos:column="59">()<pos:position pos:line="150" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="62"/></condition><then pos:line="150" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="17">write_ndx<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><name pos:line="151" pos:column="27">f_out<pos:position pos:line="151" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="34">NDX_DONE<pos:position pos:line="151" pos:column="42"/></name></expr></argument>)<pos:position pos:line="151" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name pos:line="153" pos:column="13">protocol_version<pos:position pos:line="153" pos:column="29"/></name> <operator pos:line="153" pos:column="30">&gt;=<pos:position pos:line="153" pos:column="35"/></operator> <literal type="number" pos:line="153" pos:column="33">31<pos:position pos:line="153" pos:column="35"/></literal> <operator pos:line="153" pos:column="36">&amp;&amp;<pos:position pos:line="153" pos:column="46"/></operator> <call><name pos:line="153" pos:column="39">EARLY_DELETE_DONE_MSG<pos:position pos:line="153" pos:column="60"/></name><argument_list pos:line="153" pos:column="60">()<pos:position pos:line="153" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="153" pos:column="63"/></condition><then pos:line="153" pos:column="63"> <block pos:line="153" pos:column="64">{
		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><operator pos:line="154" pos:column="21">(<pos:position pos:line="154" pos:column="22"/></operator><call><name pos:line="154" pos:column="22">INFO_GTE<pos:position pos:line="154" pos:column="30"/></name><argument_list pos:line="154" pos:column="30">(<argument><expr><name pos:line="154" pos:column="31">STATS<pos:position pos:line="154" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="38">2<pos:position pos:line="154" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="40"/></argument_list></call> <operator pos:line="154" pos:column="41">&amp;&amp;<pos:position pos:line="154" pos:column="51"/></operator> <operator pos:line="154" pos:column="44">(<pos:position pos:line="154" pos:column="45"/></operator><name pos:line="154" pos:column="45">delete_mode<pos:position pos:line="154" pos:column="56"/></name> <operator pos:line="154" pos:column="57">||<pos:position pos:line="154" pos:column="59"/></operator> <name pos:line="154" pos:column="60">force_delete<pos:position pos:line="154" pos:column="72"/></name><operator pos:line="154" pos:column="72">)<pos:position pos:line="154" pos:column="73"/></operator><operator pos:line="154" pos:column="73">)<pos:position pos:line="154" pos:column="74"/></operator> <operator pos:line="154" pos:column="75">||<pos:position pos:line="154" pos:column="77"/></operator> <name pos:line="154" pos:column="78">read_batch<pos:position pos:line="154" pos:column="88"/></name></expr>)<pos:position pos:line="154" pos:column="89"/></condition><then pos:line="154" pos:column="89">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="155" pos:column="25">write_del_stats<pos:position pos:line="155" pos:column="40"/></name><argument_list pos:line="155" pos:column="40">(<argument><expr><name pos:line="155" pos:column="41">f_out<pos:position pos:line="155" pos:column="46"/></name></expr></argument>)<pos:position pos:line="155" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><call><name pos:line="156" pos:column="21">EARLY_DELAY_DONE_MSG<pos:position pos:line="156" pos:column="41"/></name><argument_list pos:line="156" pos:column="41">()<pos:position pos:line="156" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="156" pos:column="44"/></condition><then pos:line="156" pos:column="44"> <comment type="block" pos:line="156" pos:column="45">/* Can't send this before delay */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="25">write_ndx<pos:position pos:line="157" pos:column="34"/></name><argument_list pos:line="157" pos:column="34">(<argument><expr><name pos:line="157" pos:column="35">f_out<pos:position pos:line="157" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="42">NDX_DONE<pos:position pos:line="157" pos:column="50"/></name></expr></argument>)<pos:position pos:line="157" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="52"/></expr_stmt></block></then></if>
	}<pos:position pos:line="158" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="160" pos:column="9">/* Read MSG_DONE for the redo phase (and any prior messages). */</comment>
	<while pos:line="161" pos:column="9">while <condition pos:line="161" pos:column="15">(<expr><literal type="number" pos:line="161" pos:column="16">1<pos:position pos:line="161" pos:column="17"/></literal></expr>)<pos:position pos:line="161" pos:column="18"/></condition> <block pos:line="161" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="162" pos:column="17">check_for_finished_files<pos:position pos:line="162" pos:column="41"/></name><argument_list pos:line="162" pos:column="41">(<argument><expr><name pos:line="162" pos:column="42">itemizing<pos:position pos:line="162" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="53">code<pos:position pos:line="162" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="59">0<pos:position pos:line="162" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="62"/></expr_stmt>
		<if pos:line="163" pos:column="17">if <condition pos:line="163" pos:column="20">(<expr><name pos:line="163" pos:column="21">msgdone_cnt<pos:position pos:line="163" pos:column="32"/></name> <operator pos:line="163" pos:column="33">&gt;<pos:position pos:line="163" pos:column="37"/></operator> <literal type="number" pos:line="163" pos:column="35">1<pos:position pos:line="163" pos:column="36"/></literal></expr>)<pos:position pos:line="163" pos:column="37"/></condition><then pos:line="163" pos:column="37">
			<block type="pseudo"><break pos:line="164" pos:column="25">break;<pos:position pos:line="164" pos:column="31"/></break></block></then></if>
		<expr_stmt><expr><call><name pos:line="165" pos:column="17">wait_for_receiver<pos:position pos:line="165" pos:column="34"/></name><argument_list pos:line="165" pos:column="34">()<pos:position pos:line="165" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="166" pos:column="10"/></block></while>

	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name pos:line="168" pos:column="13">protocol_version<pos:position pos:line="168" pos:column="29"/></name> <operator pos:line="168" pos:column="30">&gt;=<pos:position pos:line="168" pos:column="35"/></operator> <literal type="number" pos:line="168" pos:column="33">29<pos:position pos:line="168" pos:column="35"/></literal></expr>)<pos:position pos:line="168" pos:column="36"/></condition><then pos:line="168" pos:column="36"> <block pos:line="168" pos:column="37">{
		<expr_stmt><expr><name pos:line="169" pos:column="17">phase<pos:position pos:line="169" pos:column="22"/></name><operator pos:line="169" pos:column="22">++<pos:position pos:line="169" pos:column="24"/></operator></expr>;<pos:position pos:line="169" pos:column="25"/></expr_stmt>
		<if pos:line="170" pos:column="17">if <condition pos:line="170" pos:column="20">(<expr><call><name pos:line="170" pos:column="21">DEBUG_GTE<pos:position pos:line="170" pos:column="30"/></name><argument_list pos:line="170" pos:column="30">(<argument><expr><name pos:line="170" pos:column="31">GENR<pos:position pos:line="170" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="37">1<pos:position pos:line="170" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="40"/></condition><then pos:line="170" pos:column="40">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="171" pos:column="25">rprintf<pos:position pos:line="171" pos:column="32"/></name><argument_list pos:line="171" pos:column="32">(<argument><expr><name pos:line="171" pos:column="33">FINFO<pos:position pos:line="171" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="40">"generate_files phase=%d\n"<pos:position pos:line="171" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="69">phase<pos:position pos:line="171" pos:column="74"/></name></expr></argument>)<pos:position pos:line="171" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="76"/></expr_stmt></block></then></if>
		<if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><operator pos:line="172" pos:column="21">!<pos:position pos:line="172" pos:column="22"/></operator><call><name pos:line="172" pos:column="22">EARLY_DELAY_DONE_MSG<pos:position pos:line="172" pos:column="42"/></name><argument_list pos:line="172" pos:column="42">()<pos:position pos:line="172" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="172" pos:column="45"/></condition><then pos:line="172" pos:column="45"> <block pos:line="172" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="173" pos:column="25">write_ndx<pos:position pos:line="173" pos:column="34"/></name><argument_list pos:line="173" pos:column="34">(<argument><expr><name pos:line="173" pos:column="35">f_out<pos:position pos:line="173" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="42">NDX_DONE<pos:position pos:line="173" pos:column="50"/></name></expr></argument>)<pos:position pos:line="173" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="52"/></expr_stmt>
			<if pos:line="174" pos:column="25">if <condition pos:line="174" pos:column="28">(<expr><name pos:line="174" pos:column="29">protocol_version<pos:position pos:line="174" pos:column="45"/></name> <operator pos:line="174" pos:column="46">&gt;=<pos:position pos:line="174" pos:column="51"/></operator> <literal type="number" pos:line="174" pos:column="49">31<pos:position pos:line="174" pos:column="51"/></literal> <operator pos:line="174" pos:column="52">&amp;&amp;<pos:position pos:line="174" pos:column="62"/></operator> <call><name pos:line="174" pos:column="55">EARLY_DELETE_DONE_MSG<pos:position pos:line="174" pos:column="76"/></name><argument_list pos:line="174" pos:column="76">()<pos:position pos:line="174" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="79"/></condition><then pos:line="174" pos:column="79">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="175" pos:column="33">write_ndx<pos:position pos:line="175" pos:column="42"/></name><argument_list pos:line="175" pos:column="42">(<argument><expr><name pos:line="175" pos:column="43">f_out<pos:position pos:line="175" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="50">NDX_DONE<pos:position pos:line="175" pos:column="58"/></name></expr></argument>)<pos:position pos:line="175" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="60"/></expr_stmt></block></then></if>
		}<pos:position pos:line="176" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="177" pos:column="17">/* Read MSG_DONE for delay-updates phase &amp; prior messages. */</comment>
		<while pos:line="178" pos:column="17">while <condition pos:line="178" pos:column="23">(<expr><name pos:line="178" pos:column="24">msgdone_cnt<pos:position pos:line="178" pos:column="35"/></name> <operator pos:line="178" pos:column="36">==<pos:position pos:line="178" pos:column="38"/></operator> <literal type="number" pos:line="178" pos:column="39">2<pos:position pos:line="178" pos:column="40"/></literal></expr>)<pos:position pos:line="178" pos:column="41"/></condition>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="179" pos:column="25">wait_for_receiver<pos:position pos:line="179" pos:column="42"/></name><argument_list pos:line="179" pos:column="42">()<pos:position pos:line="179" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="45"/></expr_stmt></block></while>
	}<pos:position pos:line="180" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="182" pos:column="9">info_levels<pos:position pos:line="182" pos:column="20"/></name><index pos:line="182" pos:column="20">[<expr><name pos:line="182" pos:column="21">INFO_FLIST<pos:position pos:line="182" pos:column="31"/></name></expr>]<pos:position pos:line="182" pos:column="32"/></index></name> <operator pos:line="182" pos:column="33">=<pos:position pos:line="182" pos:column="34"/></operator> <name pos:line="182" pos:column="35">save_info_flist<pos:position pos:line="182" pos:column="50"/></name></expr>;<pos:position pos:line="182" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="183" pos:column="9">info_levels<pos:position pos:line="183" pos:column="20"/></name><index pos:line="183" pos:column="20">[<expr><name pos:line="183" pos:column="21">INFO_PROGRESS<pos:position pos:line="183" pos:column="34"/></name></expr>]<pos:position pos:line="183" pos:column="35"/></index></name> <operator pos:line="183" pos:column="36">=<pos:position pos:line="183" pos:column="37"/></operator> <name pos:line="183" pos:column="38">save_info_progress<pos:position pos:line="183" pos:column="56"/></name></expr>;<pos:position pos:line="183" pos:column="57"/></expr_stmt>

	<if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">delete_during<pos:position pos:line="185" pos:column="26"/></name> <operator pos:line="185" pos:column="27">==<pos:position pos:line="185" pos:column="29"/></operator> <literal type="number" pos:line="185" pos:column="30">2<pos:position pos:line="185" pos:column="31"/></literal></expr>)<pos:position pos:line="185" pos:column="32"/></condition><then pos:line="185" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="17">do_delayed_deletions<pos:position pos:line="186" pos:column="37"/></name><argument_list pos:line="186" pos:column="37">(<argument><expr><name pos:line="186" pos:column="38">fbuf<pos:position pos:line="186" pos:column="42"/></name></expr></argument>)<pos:position pos:line="186" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="44"/></expr_stmt></block></then></if>
	<if pos:line="187" pos:column="9">if <condition pos:line="187" pos:column="12">(<expr><name pos:line="187" pos:column="13">delete_after<pos:position pos:line="187" pos:column="25"/></name> <operator pos:line="187" pos:column="26">&amp;&amp;<pos:position pos:line="187" pos:column="36"/></operator> <operator pos:line="187" pos:column="29">!<pos:position pos:line="187" pos:column="30"/></operator><name pos:line="187" pos:column="30">solo_file<pos:position pos:line="187" pos:column="39"/></name> <operator pos:line="187" pos:column="40">&amp;&amp;<pos:position pos:line="187" pos:column="50"/></operator> <name pos:line="187" pos:column="43">file_total<pos:position pos:line="187" pos:column="53"/></name> <operator pos:line="187" pos:column="54">&gt;<pos:position pos:line="187" pos:column="58"/></operator> <literal type="number" pos:line="187" pos:column="56">0<pos:position pos:line="187" pos:column="57"/></literal></expr>)<pos:position pos:line="187" pos:column="58"/></condition><then pos:line="187" pos:column="58">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="17">do_delete_pass<pos:position pos:line="188" pos:column="31"/></name><argument_list pos:line="188" pos:column="31">()<pos:position pos:line="188" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="190" pos:column="9">if <condition pos:line="190" pos:column="12">(<expr><name pos:line="190" pos:column="13">max_delete<pos:position pos:line="190" pos:column="23"/></name> <operator pos:line="190" pos:column="24">&gt;=<pos:position pos:line="190" pos:column="29"/></operator> <literal type="number" pos:line="190" pos:column="27">0<pos:position pos:line="190" pos:column="28"/></literal> <operator pos:line="190" pos:column="29">&amp;&amp;<pos:position pos:line="190" pos:column="39"/></operator> <name pos:line="190" pos:column="32">skipped_deletes<pos:position pos:line="190" pos:column="47"/></name></expr>)<pos:position pos:line="190" pos:column="48"/></condition><then pos:line="190" pos:column="48"> <block pos:line="190" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="191" pos:column="17">rprintf<pos:position pos:line="191" pos:column="24"/></name><argument_list pos:line="191" pos:column="24">(<argument><expr><name pos:line="191" pos:column="25">FWARNING<pos:position pos:line="191" pos:column="33"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="192" pos:column="25">"Deletions stopped due to --max-delete limit (%d skipped)\n"<pos:position pos:line="192" pos:column="85"/></literal></expr></argument>,
			<argument><expr><name pos:line="193" pos:column="25">skipped_deletes<pos:position pos:line="193" pos:column="40"/></name></expr></argument>)<pos:position pos:line="193" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="194" pos:column="17">io_error<pos:position pos:line="194" pos:column="25"/></name> <operator pos:line="194" pos:column="26">|=<pos:position pos:line="194" pos:column="28"/></operator> <name pos:line="194" pos:column="29">IOERR_DEL_LIMIT<pos:position pos:line="194" pos:column="44"/></name></expr>;<pos:position pos:line="194" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="195" pos:column="10"/></block></then></if>

	<if pos:line="197" pos:column="9">if <condition pos:line="197" pos:column="12">(<expr><name pos:line="197" pos:column="13">protocol_version<pos:position pos:line="197" pos:column="29"/></name> <operator pos:line="197" pos:column="30">&gt;=<pos:position pos:line="197" pos:column="35"/></operator> <literal type="number" pos:line="197" pos:column="33">31<pos:position pos:line="197" pos:column="35"/></literal></expr>)<pos:position pos:line="197" pos:column="36"/></condition><then pos:line="197" pos:column="36"> <block pos:line="197" pos:column="37">{
		<if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><operator pos:line="198" pos:column="21">!<pos:position pos:line="198" pos:column="22"/></operator><call><name pos:line="198" pos:column="22">EARLY_DELETE_DONE_MSG<pos:position pos:line="198" pos:column="43"/></name><argument_list pos:line="198" pos:column="43">()<pos:position pos:line="198" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="198" pos:column="46"/></condition><then pos:line="198" pos:column="46"> <block pos:line="198" pos:column="47">{
			<if pos:line="199" pos:column="25">if <condition pos:line="199" pos:column="28">(<expr><call><name pos:line="199" pos:column="29">INFO_GTE<pos:position pos:line="199" pos:column="37"/></name><argument_list pos:line="199" pos:column="37">(<argument><expr><name pos:line="199" pos:column="38">STATS<pos:position pos:line="199" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="199" pos:column="45">2<pos:position pos:line="199" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="47"/></argument_list></call> <operator pos:line="199" pos:column="48">||<pos:position pos:line="199" pos:column="50"/></operator> <name pos:line="199" pos:column="51">read_batch<pos:position pos:line="199" pos:column="61"/></name></expr>)<pos:position pos:line="199" pos:column="62"/></condition><then pos:line="199" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="200" pos:column="33">write_del_stats<pos:position pos:line="200" pos:column="48"/></name><argument_list pos:line="200" pos:column="48">(<argument><expr><name pos:line="200" pos:column="49">f_out<pos:position pos:line="200" pos:column="54"/></name></expr></argument>)<pos:position pos:line="200" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="56"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="201" pos:column="25">write_ndx<pos:position pos:line="201" pos:column="34"/></name><argument_list pos:line="201" pos:column="34">(<argument><expr><name pos:line="201" pos:column="35">f_out<pos:position pos:line="201" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="42">NDX_DONE<pos:position pos:line="201" pos:column="50"/></name></expr></argument>)<pos:position pos:line="201" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="202" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="204" pos:column="17">/* Read MSG_DONE for late-delete phase &amp; prior messages. */</comment>
		<while pos:line="205" pos:column="17">while <condition pos:line="205" pos:column="23">(<expr><name pos:line="205" pos:column="24">msgdone_cnt<pos:position pos:line="205" pos:column="35"/></name> <operator pos:line="205" pos:column="36">==<pos:position pos:line="205" pos:column="38"/></operator> <literal type="number" pos:line="205" pos:column="39">3<pos:position pos:line="205" pos:column="40"/></literal></expr>)<pos:position pos:line="205" pos:column="41"/></condition>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="206" pos:column="25">wait_for_receiver<pos:position pos:line="206" pos:column="42"/></name><argument_list pos:line="206" pos:column="42">()<pos:position pos:line="206" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="45"/></expr_stmt></block></while>
	}<pos:position pos:line="207" pos:column="10"/></block></then></if>

	<if pos:line="209" pos:column="9">if <condition pos:line="209" pos:column="12">(<expr><operator pos:line="209" pos:column="13">(<pos:position pos:line="209" pos:column="14"/></operator><name pos:line="209" pos:column="14">need_retouch_dir_perms<pos:position pos:line="209" pos:column="36"/></name> <operator pos:line="209" pos:column="37">||<pos:position pos:line="209" pos:column="39"/></operator> <name pos:line="209" pos:column="40">need_retouch_dir_times<pos:position pos:line="209" pos:column="62"/></name><operator pos:line="209" pos:column="62">)<pos:position pos:line="209" pos:column="63"/></operator>
	 <operator pos:line="210" pos:column="10">&amp;&amp;<pos:position pos:line="210" pos:column="20"/></operator> <name pos:line="210" pos:column="13">dir_tweaking<pos:position pos:line="210" pos:column="25"/></name> <operator pos:line="210" pos:column="26">&amp;&amp;<pos:position pos:line="210" pos:column="36"/></operator> <operator pos:line="210" pos:column="29">(<pos:position pos:line="210" pos:column="30"/></operator><operator pos:line="210" pos:column="30">!<pos:position pos:line="210" pos:column="31"/></operator><name pos:line="210" pos:column="31">inc_recurse<pos:position pos:line="210" pos:column="42"/></name> <operator pos:line="210" pos:column="43">||<pos:position pos:line="210" pos:column="45"/></operator> <name pos:line="210" pos:column="46">delete_during<pos:position pos:line="210" pos:column="59"/></name> <operator pos:line="210" pos:column="60">==<pos:position pos:line="210" pos:column="62"/></operator> <literal type="number" pos:line="210" pos:column="63">2<pos:position pos:line="210" pos:column="64"/></literal><operator pos:line="210" pos:column="64">)<pos:position pos:line="210" pos:column="65"/></operator></expr>)<pos:position pos:line="210" pos:column="66"/></condition><then pos:line="210" pos:column="66">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="211" pos:column="17">touch_up_dirs<pos:position pos:line="211" pos:column="30"/></name><argument_list pos:line="211" pos:column="30">(<argument><expr><name pos:line="211" pos:column="31">dir_flist<pos:position pos:line="211" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="211" pos:column="42">-<pos:position pos:line="211" pos:column="43"/></operator><literal type="number" pos:line="211" pos:column="43">1<pos:position pos:line="211" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="46"/></expr_stmt></block></then></if>

	<if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><call><name pos:line="213" pos:column="13">DEBUG_GTE<pos:position pos:line="213" pos:column="22"/></name><argument_list pos:line="213" pos:column="22">(<argument><expr><name pos:line="213" pos:column="23">GENR<pos:position pos:line="213" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="213" pos:column="29">1<pos:position pos:line="213" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="213" pos:column="32"/></condition><then pos:line="213" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="214" pos:column="17">rprintf<pos:position pos:line="214" pos:column="24"/></name><argument_list pos:line="214" pos:column="24">(<argument><expr><name pos:line="214" pos:column="25">FINFO<pos:position pos:line="214" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="32">"generate_files finished\n"<pos:position pos:line="214" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="61"/></expr_stmt></block></then></if>
}<pos:position pos:line="215" pos:column="2"/></block></function></unit>

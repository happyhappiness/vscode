<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_271_rsync-2.0.18.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">inflateSetDictionary<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">z<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">dictionary<pos:position pos:line="1" pos:column="47"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">dictLength<pos:position pos:line="1" pos:column="59"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">z<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="3" pos:column="1">const<pos:position pos:line="3" pos:column="6"/></specifier> <name pos:line="3" pos:column="7">Bytef<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">dictionary<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">uInt<pos:position pos:line="4" pos:column="5"/></name></type>  <name pos:line="4" pos:column="7">dictLength<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">uInt<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">length<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">dictLength<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">z<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">==<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">Z_NULL<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">||<pos:position pos:line="8" pos:column="21"/></operator> <name><name pos:line="8" pos:column="22">z<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">state<pos:position pos:line="8" pos:column="30"/></name></name> <operator pos:line="8" pos:column="31">==<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="34">Z_NULL<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">||<pos:position pos:line="8" pos:column="43"/></operator> <name><name pos:line="8" pos:column="44">z<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">state<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">-&gt;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="54">mode<pos:position pos:line="8" pos:column="58"/></name></name> <operator pos:line="8" pos:column="59">!=<pos:position pos:line="8" pos:column="61"/></operator> <name pos:line="8" pos:column="62">DICT0<pos:position pos:line="8" pos:column="67"/></name></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">Z_STREAM_ERROR<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">adler32<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><literal type="number" pos:line="11" pos:column="15">1L<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">dictionary<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="31">dictLength<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call> <operator pos:line="11" pos:column="43">!=<pos:position pos:line="11" pos:column="45"/></operator> <name><name pos:line="11" pos:column="46">z<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">adler<pos:position pos:line="11" pos:column="54"/></name></name></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55"> <block type="pseudo"><return pos:line="11" pos:column="56">return <expr><name pos:line="11" pos:column="63">Z_DATA_ERROR<pos:position pos:line="11" pos:column="75"/></name></expr>;<pos:position pos:line="11" pos:column="76"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">z<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">-&gt;<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="6">adler<pos:position pos:line="12" pos:column="11"/></name></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">1L<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">length<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&gt;=<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><operator pos:line="14" pos:column="18">(<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">uInt<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">)<pos:position pos:line="14" pos:column="24"/></operator><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal><operator pos:line="14" pos:column="25">&lt;&lt;<pos:position pos:line="14" pos:column="33"/></operator><name><name pos:line="14" pos:column="27">z<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">state<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">wbits<pos:position pos:line="14" pos:column="42"/></name></name><operator pos:line="14" pos:column="42">)<pos:position pos:line="14" pos:column="43"/></operator></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44">
  <block pos:line="15" pos:column="3">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">length<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><literal type="number" pos:line="16" pos:column="15">1<pos:position pos:line="16" pos:column="16"/></literal><operator pos:line="16" pos:column="16">&lt;&lt;<pos:position pos:line="16" pos:column="24"/></operator><name><name pos:line="16" pos:column="18">z<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">state<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">wbits<pos:position pos:line="16" pos:column="33"/></name></name><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator><operator pos:line="16" pos:column="34">-<pos:position pos:line="16" pos:column="35"/></operator><literal type="number" pos:line="16" pos:column="35">1<pos:position pos:line="16" pos:column="36"/></literal></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">dictionary<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">+=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">dictLength<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">-<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">length<pos:position pos:line="17" pos:column="38"/></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">inflate_set_dictionary<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name><name pos:line="19" pos:column="26">z<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">state<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">-&gt;<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="36">blocks<pos:position pos:line="19" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="44">dictionary<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">length<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">z<pos:position pos:line="20" pos:column="4"/></name><operator pos:line="20" pos:column="4">-&gt;<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="6">state<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">mode<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">BLOCKS<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
  <return pos:line="21" pos:column="3">return <expr><name pos:line="21" pos:column="10">Z_OK<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function_decl></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_372_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">glob_match<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">arg<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">abpos<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">int<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">fbpos<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">slash<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">arg<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">==<pos:position pos:line="6" pos:column="23"/></operator> <literal type="char" pos:line="6" pos:column="24">'.'<pos:position pos:line="6" pos:column="27"/></literal> <operator pos:line="6" pos:column="28">&amp;&amp;<pos:position pos:line="6" pos:column="38"/></operator> <name><name pos:line="6" pos:column="31">arg<pos:position pos:line="6" pos:column="34"/></name><index pos:line="6" pos:column="34">[<expr><literal type="number" pos:line="6" pos:column="35">1<pos:position pos:line="6" pos:column="36"/></literal></expr>]<pos:position pos:line="6" pos:column="37"/></index></name> <operator pos:line="6" pos:column="38">==<pos:position pos:line="6" pos:column="40"/></operator> <literal type="char" pos:line="6" pos:column="41">'/'<pos:position pos:line="6" pos:column="44"/></literal></expr>)<pos:position pos:line="6" pos:column="45"/></condition> <block pos:line="6" pos:column="46">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name pos:line="7" pos:column="21">fbpos<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31"> <block pos:line="7" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="8" pos:column="25">ENSURE_MEMSPACE<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><name><name pos:line="8" pos:column="41">glob<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">filt_buf<pos:position pos:line="8" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="56">char<pos:position pos:line="8" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="62">glob<pos:position pos:line="8" pos:column="66"/></name><operator pos:line="8" pos:column="66">.<pos:position pos:line="8" pos:column="67"/></operator><name pos:line="8" pos:column="67">fbsize<pos:position pos:line="8" pos:column="73"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="75">glob<pos:position pos:line="8" pos:column="79"/></name><operator pos:line="8" pos:column="79">.<pos:position pos:line="8" pos:column="80"/></operator><name pos:line="8" pos:column="80">absize<pos:position pos:line="8" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">memcpy<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name><name pos:line="9" pos:column="32">glob<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">filt_buf<pos:position pos:line="9" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="47">glob<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">.<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="52">arg_buf<pos:position pos:line="9" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="61">abpos<pos:position pos:line="9" pos:column="66"/></name> <operator pos:line="9" pos:column="67">+<pos:position pos:line="9" pos:column="68"/></operator> <literal type="number" pos:line="9" pos:column="69">1<pos:position pos:line="9" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
			<expr_stmt><expr><name pos:line="10" pos:column="25">fbpos<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">abpos<pos:position pos:line="10" pos:column="38"/></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ENSURE_MEMSPACE<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">glob<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">.<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">arg_buf<pos:position pos:line="12" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="47">char<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="53">glob<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">.<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">absize<pos:position pos:line="12" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="66">abpos<pos:position pos:line="12" pos:column="71"/></name> <operator pos:line="12" pos:column="72">+<pos:position pos:line="12" pos:column="73"/></operator> <literal type="number" pos:line="12" pos:column="74">3<pos:position pos:line="12" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">glob<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">arg_buf<pos:position pos:line="13" pos:column="29"/></name><index pos:line="13" pos:column="29">[<expr><name pos:line="13" pos:column="30">abpos<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">++<pos:position pos:line="13" pos:column="37"/></operator></expr>]<pos:position pos:line="13" pos:column="38"/></index></name> <operator pos:line="13" pos:column="39">=<pos:position pos:line="13" pos:column="40"/></operator> <operator pos:line="13" pos:column="41">*<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">arg<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">++<pos:position pos:line="13" pos:column="47"/></operator></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="14" pos:column="17">glob<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">arg_buf<pos:position pos:line="14" pos:column="29"/></name><index pos:line="14" pos:column="29">[<expr><name pos:line="14" pos:column="30">abpos<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">++<pos:position pos:line="14" pos:column="37"/></operator></expr>]<pos:position pos:line="14" pos:column="38"/></index></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="41">*<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">arg<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">++<pos:position pos:line="14" pos:column="47"/></operator></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">glob<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">arg_buf<pos:position pos:line="15" pos:column="29"/></name><index pos:line="15" pos:column="29">[<expr><name pos:line="15" pos:column="30">abpos<pos:position pos:line="15" pos:column="35"/></name></expr>]<pos:position pos:line="15" pos:column="36"/></index></name> <operator pos:line="15" pos:column="37">=<pos:position pos:line="15" pos:column="38"/></operator> <literal type="char" pos:line="15" pos:column="39">'\0'<pos:position pos:line="15" pos:column="43"/></literal></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></while>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">slash<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">strchr<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">arg<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="34">'/'<pos:position pos:line="17" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call><operator pos:line="17" pos:column="38">)<pos:position pos:line="17" pos:column="39"/></operator> <operator pos:line="17" pos:column="40">!=<pos:position pos:line="17" pos:column="42"/></operator> <name pos:line="17" pos:column="43">NULL<pos:position pos:line="17" pos:column="47"/></name></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <block pos:line="17" pos:column="49">{
		<expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">slash<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <literal type="char" pos:line="18" pos:column="26">'\0'<pos:position pos:line="18" pos:column="30"/></literal></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">len<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">slash<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">-<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">arg<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">len<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">strlen<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">arg<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt></block></else></if>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">strpbrk<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">arg<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="26">"*?["<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33"> <block pos:line="22" pos:column="34">{
		<decl_stmt><decl><type><name><name pos:line="23" pos:column="17">struct<pos:position pos:line="23" pos:column="23"/></name> <name pos:line="23" pos:column="24">dirent<pos:position pos:line="23" pos:column="30"/></name></name> <modifier pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></modifier></type><name pos:line="23" pos:column="32">di<pos:position pos:line="23" pos:column="34"/></name></decl>;<pos:position pos:line="23" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">DIR<pos:position pos:line="24" pos:column="20"/></name> <modifier pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></modifier></type><name pos:line="24" pos:column="22">d<pos:position pos:line="24" pos:column="23"/></name></decl>;<pos:position pos:line="24" pos:column="24"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><operator pos:line="26" pos:column="22">(<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">d<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <call><name pos:line="26" pos:column="27">opendir<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><ternary><condition><expr><name pos:line="26" pos:column="35">abpos<pos:position pos:line="26" pos:column="40"/></name></expr> ?<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42"> <expr><name><name pos:line="26" pos:column="43">glob<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">.<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">arg_buf<pos:position pos:line="26" pos:column="55"/></name></name></expr> <pos:position pos:line="26" pos:column="56"/></then><else pos:line="26" pos:column="56">: <expr><literal type="string" pos:line="26" pos:column="58">"."<pos:position pos:line="26" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call><operator pos:line="26" pos:column="62">)<pos:position pos:line="26" pos:column="63"/></operator></expr>)<pos:position pos:line="26" pos:column="64"/></condition><then pos:line="26" pos:column="64">
			<block type="pseudo"><return pos:line="27" pos:column="25">return;<pos:position pos:line="27" pos:column="32"/></return></block></then></if>
		<while pos:line="28" pos:column="17">while <condition pos:line="28" pos:column="23">(<expr><operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">di<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <call><name pos:line="28" pos:column="30">readdir<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">d<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call><operator pos:line="28" pos:column="40">)<pos:position pos:line="28" pos:column="41"/></operator> <operator pos:line="28" pos:column="42">!=<pos:position pos:line="28" pos:column="44"/></operator> <name pos:line="28" pos:column="45">NULL<pos:position pos:line="28" pos:column="49"/></name></expr>)<pos:position pos:line="28" pos:column="50"/></condition> <block pos:line="28" pos:column="51">{
			<decl_stmt><decl><type><name pos:line="29" pos:column="25">char<pos:position pos:line="29" pos:column="29"/></name> <modifier pos:line="29" pos:column="30">*<pos:position pos:line="29" pos:column="31"/></modifier></type><name pos:line="29" pos:column="31">dname<pos:position pos:line="29" pos:column="36"/></name> <init pos:line="29" pos:column="37">= <expr><call><name pos:line="29" pos:column="39">d_name<pos:position pos:line="29" pos:column="45"/></name><argument_list pos:line="29" pos:column="45">(<argument><expr><name pos:line="29" pos:column="46">di<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="50"/></decl_stmt>
			<if pos:line="30" pos:column="25">if <condition pos:line="30" pos:column="28">(<expr><name><name pos:line="30" pos:column="29">dname<pos:position pos:line="30" pos:column="34"/></name><index pos:line="30" pos:column="34">[<expr><literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal></expr>]<pos:position pos:line="30" pos:column="37"/></index></name> <operator pos:line="30" pos:column="38">==<pos:position pos:line="30" pos:column="40"/></operator> <literal type="char" pos:line="30" pos:column="41">'.'<pos:position pos:line="30" pos:column="44"/></literal> <operator pos:line="30" pos:column="45">&amp;&amp;<pos:position pos:line="30" pos:column="55"/></operator> <operator pos:line="30" pos:column="48">(<pos:position pos:line="30" pos:column="49"/></operator><name><name pos:line="30" pos:column="49">dname<pos:position pos:line="30" pos:column="54"/></name><index pos:line="30" pos:column="54">[<expr><literal type="number" pos:line="30" pos:column="55">1<pos:position pos:line="30" pos:column="56"/></literal></expr>]<pos:position pos:line="30" pos:column="57"/></index></name> <operator pos:line="30" pos:column="58">==<pos:position pos:line="30" pos:column="60"/></operator> <literal type="char" pos:line="30" pos:column="61">'\0'<pos:position pos:line="30" pos:column="65"/></literal>
			  <operator pos:line="31" pos:column="27">||<pos:position pos:line="31" pos:column="29"/></operator> <operator pos:line="31" pos:column="30">(<pos:position pos:line="31" pos:column="31"/></operator><name><name pos:line="31" pos:column="31">dname<pos:position pos:line="31" pos:column="36"/></name><index pos:line="31" pos:column="36">[<expr><literal type="number" pos:line="31" pos:column="37">1<pos:position pos:line="31" pos:column="38"/></literal></expr>]<pos:position pos:line="31" pos:column="39"/></index></name> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <literal type="char" pos:line="31" pos:column="43">'.'<pos:position pos:line="31" pos:column="46"/></literal> <operator pos:line="31" pos:column="47">&amp;&amp;<pos:position pos:line="31" pos:column="57"/></operator> <name><name pos:line="31" pos:column="50">dname<pos:position pos:line="31" pos:column="55"/></name><index pos:line="31" pos:column="55">[<expr><literal type="number" pos:line="31" pos:column="56">2<pos:position pos:line="31" pos:column="57"/></literal></expr>]<pos:position pos:line="31" pos:column="58"/></index></name> <operator pos:line="31" pos:column="59">==<pos:position pos:line="31" pos:column="61"/></operator> <literal type="char" pos:line="31" pos:column="62">'\0'<pos:position pos:line="31" pos:column="66"/></literal><operator pos:line="31" pos:column="66">)<pos:position pos:line="31" pos:column="67"/></operator><operator pos:line="31" pos:column="67">)<pos:position pos:line="31" pos:column="68"/></operator></expr>)<pos:position pos:line="31" pos:column="69"/></condition><then pos:line="31" pos:column="69">
				<block type="pseudo"><continue pos:line="32" pos:column="33">continue;<pos:position pos:line="32" pos:column="42"/></continue></block></then></if>
			<if pos:line="33" pos:column="25">if <condition pos:line="33" pos:column="28">(<expr><operator pos:line="33" pos:column="29">!<pos:position pos:line="33" pos:column="30"/></operator><call><name pos:line="33" pos:column="30">wildmatch<pos:position pos:line="33" pos:column="39"/></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name pos:line="33" pos:column="40">arg<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">dname<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52">
				<block type="pseudo"><continue pos:line="34" pos:column="33">continue;<pos:position pos:line="34" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">call_glob_match<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">dname<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="48">strlen<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">(<argument><expr><name pos:line="35" pos:column="55">dname<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="63">1<pos:position pos:line="35" pos:column="64"/></literal></expr></argument>,
					<argument><expr><ternary><condition><expr><name pos:line="36" pos:column="41">slash<pos:position pos:line="36" pos:column="46"/></name></expr> ?<pos:position pos:line="36" pos:column="48"/></condition><then pos:line="36" pos:column="48"> <expr><name pos:line="36" pos:column="49">arg<pos:position pos:line="36" pos:column="52"/></name> <operator pos:line="36" pos:column="53">+<pos:position pos:line="36" pos:column="54"/></operator> <name pos:line="36" pos:column="55">len<pos:position pos:line="36" pos:column="58"/></name> <operator pos:line="36" pos:column="59">+<pos:position pos:line="36" pos:column="60"/></operator> <literal type="number" pos:line="36" pos:column="61">1<pos:position pos:line="36" pos:column="62"/></literal></expr> <pos:position pos:line="36" pos:column="63"/></then><else pos:line="36" pos:column="63">: <expr><name pos:line="36" pos:column="65">NULL<pos:position pos:line="36" pos:column="69"/></name></expr></else></ternary></expr></argument>,
					<argument><expr><name pos:line="37" pos:column="41">abpos<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="48">fbpos<pos:position pos:line="37" pos:column="53"/></name></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></while>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">closedir<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">d<pos:position pos:line="39" pos:column="27"/></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then> <else pos:line="40" pos:column="11">else <block pos:line="40" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">call_glob_match<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">arg<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="38">len<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="43">0<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="42" pos:column="33">slash<pos:position pos:line="42" pos:column="38"/></name></expr> ?<pos:position pos:line="42" pos:column="40"/></condition><then pos:line="42" pos:column="40"> <expr><name pos:line="42" pos:column="41">arg<pos:position pos:line="42" pos:column="44"/></name> <operator pos:line="42" pos:column="45">+<pos:position pos:line="42" pos:column="46"/></operator> <name pos:line="42" pos:column="47">len<pos:position pos:line="42" pos:column="50"/></name> <operator pos:line="42" pos:column="51">+<pos:position pos:line="42" pos:column="52"/></operator> <literal type="number" pos:line="42" pos:column="53">1<pos:position pos:line="42" pos:column="54"/></literal></expr> <pos:position pos:line="42" pos:column="55"/></then><else pos:line="42" pos:column="55">: <expr><name pos:line="42" pos:column="57">NULL<pos:position pos:line="42" pos:column="61"/></name></expr></else></ternary></expr></argument>,
				<argument><expr><name pos:line="43" pos:column="33">abpos<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">fbpos<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></else></if>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">slash<pos:position pos:line="45" pos:column="18"/></name></expr>)<pos:position pos:line="45" pos:column="19"/></condition><then pos:line="45" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="17">*<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">slash<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <literal type="char" pos:line="46" pos:column="26">'/'<pos:position pos:line="46" pos:column="29"/></literal></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt></block></then></if>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

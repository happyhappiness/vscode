<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_114_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">is_in_group<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">gid_t<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">gid<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_GETGROUPS<pos:position pos:line="3" pos:column="22"/></name></cpp:ifdef>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">gid_t<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">last_in<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">static<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">int<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">ngroups<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">-<pos:position pos:line="5" pos:column="31"/></operator><literal type="number" pos:line="5" pos:column="31">2<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="34">last_out<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><operator pos:line="5" pos:column="45">-<pos:position pos:line="5" pos:column="46"/></operator><literal type="number" pos:line="5" pos:column="46">1<pos:position pos:line="5" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">GETGROUPS_T<pos:position pos:line="6" pos:column="27"/></name> <modifier pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></modifier></type><name pos:line="6" pos:column="29">gidset<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">n<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">gid<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">last_in<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&amp;&amp;<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="31">last_out<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">&gt;=<pos:position pos:line="9" pos:column="45"/></operator> <literal type="number" pos:line="9" pos:column="43">0<pos:position pos:line="9" pos:column="44"/></literal></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">last_out<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></return></block></then></if>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">ngroups<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">&lt;<pos:position pos:line="11" pos:column="25"/></operator> <operator pos:line="11" pos:column="23">-<pos:position pos:line="11" pos:column="24"/></operator><literal type="number" pos:line="11" pos:column="24">1<pos:position pos:line="11" pos:column="25"/></literal></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">ngroups<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">=<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="32">getgroups<pos:position pos:line="12" pos:column="41"/></name><argument_list pos:line="12" pos:column="41">(<argument><expr><literal type="number" pos:line="12" pos:column="42">0<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">NULL<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call><operator pos:line="12" pos:column="50">)<pos:position pos:line="12" pos:column="51"/></operator> <operator pos:line="12" pos:column="52">&lt;<pos:position pos:line="12" pos:column="56"/></operator> <literal type="number" pos:line="12" pos:column="54">0<pos:position pos:line="12" pos:column="55"/></literal></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">ngroups<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="14" pos:column="17">gidset<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <call><name pos:line="14" pos:column="26">new_array<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><name pos:line="14" pos:column="36">GETGROUPS_T<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">ngroups<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">+<pos:position pos:line="14" pos:column="57"/></operator><literal type="number" pos:line="14" pos:column="57">1<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">gidset<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">out_of_memory<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"is_in_group"<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">ngroups<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">&gt;<pos:position pos:line="17" pos:column="33"/></operator> <literal type="number" pos:line="17" pos:column="31">0<pos:position pos:line="17" pos:column="32"/></literal></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">ngroups<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">=<pos:position pos:line="18" pos:column="34"/></operator> <call><name pos:line="18" pos:column="35">getgroups<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name pos:line="18" pos:column="45">ngroups<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">gidset<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="19" pos:column="17">/* The default gid might not be in the list on some systems. */</comment>
		<for pos:line="20" pos:column="17">for <control pos:line="20" pos:column="21">(<init><expr><name pos:line="20" pos:column="22">n<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">0<pos:position pos:line="20" pos:column="27"/></literal></expr>;<pos:position pos:line="20" pos:column="28"/></init> <condition><expr><name pos:line="20" pos:column="29">n<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&lt;<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="33">ngroups<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></condition> <incr><expr><name pos:line="20" pos:column="42">n<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">++<pos:position pos:line="20" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="46"/></control> <block pos:line="20" pos:column="47">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">gidset<pos:position pos:line="21" pos:column="35"/></name><index pos:line="21" pos:column="35">[<expr><name pos:line="21" pos:column="36">n<pos:position pos:line="21" pos:column="37"/></name></expr>]<pos:position pos:line="21" pos:column="38"/></index></name> <operator pos:line="21" pos:column="39">==<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="42">our_gid<pos:position pos:line="21" pos:column="49"/></name></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50">
				<block type="pseudo"><break pos:line="22" pos:column="33">break;<pos:position pos:line="22" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="23" pos:column="18"/></block></for>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">n<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">==<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">ngroups<pos:position pos:line="24" pos:column="33"/></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="25">gidset<pos:position pos:line="25" pos:column="31"/></name><index pos:line="25" pos:column="31">[<expr><name pos:line="25" pos:column="32">ngroups<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">++<pos:position pos:line="25" pos:column="41"/></operator></expr>]<pos:position pos:line="25" pos:column="42"/></index></name> <operator pos:line="25" pos:column="43">=<pos:position pos:line="25" pos:column="44"/></operator> <name pos:line="25" pos:column="45">our_gid<pos:position pos:line="25" pos:column="52"/></name></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt></block></then></if>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">DEBUG_GTE<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">OWN<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="36">2<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <block pos:line="26" pos:column="40">{
			<decl_stmt><decl><type><name pos:line="27" pos:column="25">int<pos:position pos:line="27" pos:column="28"/></name></type> <name pos:line="27" pos:column="29">pos<pos:position pos:line="27" pos:column="32"/></name></decl>;<pos:position pos:line="27" pos:column="33"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">char<pos:position pos:line="28" pos:column="29"/></name> <modifier pos:line="28" pos:column="30">*<pos:position pos:line="28" pos:column="31"/></modifier></type><name pos:line="28" pos:column="31">gidbuf<pos:position pos:line="28" pos:column="37"/></name> <init pos:line="28" pos:column="38">= <expr><call><name pos:line="28" pos:column="40">new_array<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">char<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">ngroups<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">*<pos:position pos:line="28" pos:column="64"/></operator><literal type="number" pos:line="28" pos:column="64">21<pos:position pos:line="28" pos:column="66"/></literal><operator pos:line="28" pos:column="66">+<pos:position pos:line="28" pos:column="67"/></operator><literal type="number" pos:line="28" pos:column="67">32<pos:position pos:line="28" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="71"/></decl_stmt>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">!<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">gidbuf<pos:position pos:line="29" pos:column="36"/></name></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="33">out_of_memory<pos:position pos:line="30" pos:column="46"/></name><argument_list pos:line="30" pos:column="46">(<argument><expr><literal type="string" pos:line="30" pos:column="47">"is_in_group"<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="31" pos:column="25">pos<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">snprintf<pos:position pos:line="31" pos:column="39"/></name><argument_list pos:line="31" pos:column="39">(<argument><expr><name pos:line="31" pos:column="40">gidbuf<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="48">32<pos:position pos:line="31" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="52">"process has %d gid%s: "<pos:position pos:line="31" pos:column="76"/></literal></expr></argument>,
				       <argument><expr><name pos:line="32" pos:column="40">ngroups<pos:position pos:line="32" pos:column="47"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="32" pos:column="49">ngroups<pos:position pos:line="32" pos:column="56"/></name> <operator pos:line="32" pos:column="57">==<pos:position pos:line="32" pos:column="59"/></operator> <literal type="number" pos:line="32" pos:column="60">1<pos:position pos:line="32" pos:column="61"/></literal></expr>?<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62"> <expr><literal type="string" pos:line="32" pos:column="63">""<pos:position pos:line="32" pos:column="65"/></literal></expr> <pos:position pos:line="32" pos:column="66"/></then><else pos:line="32" pos:column="66">: <expr><literal type="string" pos:line="32" pos:column="68">"s"<pos:position pos:line="32" pos:column="71"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>
			<for pos:line="33" pos:column="25">for <control pos:line="33" pos:column="29">(<init><expr><name pos:line="33" pos:column="30">n<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr>;<pos:position pos:line="33" pos:column="36"/></init> <condition><expr><name pos:line="33" pos:column="37">n<pos:position pos:line="33" pos:column="38"/></name> <operator pos:line="33" pos:column="39">&lt;<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="41">ngroups<pos:position pos:line="33" pos:column="48"/></name></expr>;<pos:position pos:line="33" pos:column="49"/></condition> <incr><expr><name pos:line="33" pos:column="50">n<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">++<pos:position pos:line="33" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="54"/></control> <block pos:line="33" pos:column="55">{
				<expr_stmt><expr><name pos:line="34" pos:column="33">pos<pos:position pos:line="34" pos:column="36"/></name> <operator pos:line="34" pos:column="37">+=<pos:position pos:line="34" pos:column="39"/></operator> <call><name pos:line="34" pos:column="40">snprintf<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name pos:line="34" pos:column="49">gidbuf<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">+<pos:position pos:line="34" pos:column="56"/></operator><name pos:line="34" pos:column="56">pos<pos:position pos:line="34" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="61">21<pos:position pos:line="34" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="65">" %d"<pos:position pos:line="34" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="72">(<pos:position pos:line="34" pos:column="73"/></operator><name pos:line="34" pos:column="73">int<pos:position pos:line="34" pos:column="76"/></name><operator pos:line="34" pos:column="76">)<pos:position pos:line="34" pos:column="77"/></operator><name><name pos:line="34" pos:column="77">gidset<pos:position pos:line="34" pos:column="83"/></name><index pos:line="34" pos:column="83">[<expr><name pos:line="34" pos:column="84">n<pos:position pos:line="34" pos:column="85"/></name></expr>]<pos:position pos:line="34" pos:column="86"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="88"/></expr_stmt>
			}<pos:position pos:line="35" pos:column="26"/></block></for>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">rprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">FINFO<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="40">"%s\n"<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">gidbuf<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">free<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">gidbuf<pos:position pos:line="37" pos:column="36"/></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then></if>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="41" pos:column="9">last_in<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">gid<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
	<for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">n<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal></expr>;<pos:position pos:line="42" pos:column="20"/></init> <condition><expr><name pos:line="42" pos:column="21">n<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&lt;<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="25">ngroups<pos:position pos:line="42" pos:column="32"/></name></expr>;<pos:position pos:line="42" pos:column="33"/></condition> <incr><expr><name pos:line="42" pos:column="34">n<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">++<pos:position pos:line="42" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="38"/></control> <block pos:line="42" pos:column="39">{
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">gidset<pos:position pos:line="43" pos:column="27"/></name><index pos:line="43" pos:column="27">[<expr><name pos:line="43" pos:column="28">n<pos:position pos:line="43" pos:column="29"/></name></expr>]<pos:position pos:line="43" pos:column="30"/></index></name> <operator pos:line="43" pos:column="31">==<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">gid<pos:position pos:line="43" pos:column="37"/></name></expr>)<pos:position pos:line="43" pos:column="38"/></condition><then pos:line="43" pos:column="38">
			<block type="pseudo"><return pos:line="44" pos:column="25">return <expr><name pos:line="44" pos:column="32">last_out<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">=<pos:position pos:line="44" pos:column="42"/></operator> <literal type="number" pos:line="44" pos:column="43">1<pos:position pos:line="44" pos:column="44"/></literal></expr>;<pos:position pos:line="44" pos:column="45"/></return></block></then></if>
	}<pos:position pos:line="45" pos:column="10"/></block></for>
	<return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">last_out<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <literal type="number" pos:line="46" pos:column="27">0<pos:position pos:line="46" pos:column="28"/></literal></expr>;<pos:position pos:line="46" pos:column="29"/></return>

<cpp:else pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">else<pos:position pos:line="48" pos:column="6"/></cpp:directive></cpp:else>
	<return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">gid<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">==<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="23">our_gid<pos:position pos:line="49" pos:column="30"/></name></expr>;<pos:position pos:line="49" pos:column="31"/></return>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_279_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">receive_xattr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">file_struct<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">file<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">item_list<pos:position pos:line="3" pos:column="25"/></name></type> <name pos:line="3" pos:column="26">temp_xattr<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><name pos:line="3" pos:column="39">EMPTY_ITEM_LIST<pos:position pos:line="3" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">count<pos:position pos:line="4" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="20">num<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">HAVE_LINUX_XATTRS<pos:position pos:line="5" pos:column="25"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">need_sort<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
<cpp:else pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">else<pos:position pos:line="7" pos:column="6"/></cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">need_sort<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">ndx<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><call><name pos:line="10" pos:column="19">read_varint<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">f<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">ndx<pos:position pos:line="12" pos:column="16"/></name> <argument_list type="generic" pos:line="12" pos:column="17">&lt; <argument><expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal> <operator pos:line="12" pos:column="21">||<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">size_t<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">ndx<pos:position pos:line="12" pos:column="35"/></name></expr></argument> &gt;<pos:position pos:line="12" pos:column="40"/></argument_list></name> <name><name pos:line="12" pos:column="38">rsync_xal_l<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">.<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">count<pos:position pos:line="12" pos:column="55"/></name></name></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56"> <block pos:line="12" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">rprintf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">FERROR<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"receive_xattr: xa index %d out of"<pos:position pos:line="13" pos:column="68"/></literal>
			<literal type="string" pos:line="14" pos:column="25">" range for %s\n"<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="44">ndx<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="49">f_name<pos:position pos:line="14" pos:column="55"/></name><argument_list pos:line="14" pos:column="55">(<argument><expr><name pos:line="14" pos:column="56">file<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">NULL<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">exit_cleanup<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">RERR_STREAMIO<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">ndx<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">!=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">F_XATTR<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">file<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call> <operator pos:line="19" pos:column="31">=<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">ndx<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">-<pos:position pos:line="19" pos:column="38"/></operator> <literal type="number" pos:line="19" pos:column="39">1<pos:position pos:line="19" pos:column="40"/></literal></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">count<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">read_varint<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">f<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call><operator pos:line="23" pos:column="36">)<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="38">!=<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <block pos:line="23" pos:column="44">{
		<expr_stmt><expr><operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">void<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">)<pos:position pos:line="24" pos:column="23"/></operator><call><name pos:line="24" pos:column="23">EXPAND_ITEM_LIST<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="41">temp_xattr<pos:position pos:line="24" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="53">rsync_xa<pos:position pos:line="24" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="63">count<pos:position pos:line="24" pos:column="68"/></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">temp_xattr<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">count<pos:position pos:line="25" pos:column="33"/></name></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <literal type="number" pos:line="25" pos:column="36">0<pos:position pos:line="25" pos:column="37"/></literal></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><expr><name pos:line="28" pos:column="14">num<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <literal type="number" pos:line="28" pos:column="20">1<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></init> <condition><expr><name pos:line="28" pos:column="23">num<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">&lt;=<pos:position pos:line="28" pos:column="32"/></operator> <name pos:line="28" pos:column="30">count<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></condition> <incr><expr><name pos:line="28" pos:column="37">num<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">++<pos:position pos:line="28" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="43"/></control> <block pos:line="28" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">char<pos:position pos:line="29" pos:column="21"/></name> <modifier pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></modifier></type><name pos:line="29" pos:column="23">ptr<pos:position pos:line="29" pos:column="26"/></name></decl>, <modifier pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="29" pos:column="29">name<pos:position pos:line="29" pos:column="33"/></name></decl>;<pos:position pos:line="29" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="30" pos:column="17">rsync_xa<pos:position pos:line="30" pos:column="25"/></name> <modifier pos:line="30" pos:column="26">*<pos:position pos:line="30" pos:column="27"/></modifier></type><name pos:line="30" pos:column="27">rxa<pos:position pos:line="30" pos:column="30"/></name></decl>;<pos:position pos:line="30" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">size_t<pos:position pos:line="31" pos:column="23"/></name></type> <name pos:line="31" pos:column="24">name_len<pos:position pos:line="31" pos:column="32"/></name> <init pos:line="31" pos:column="33">= <expr><call><name pos:line="31" pos:column="35">read_varint<pos:position pos:line="31" pos:column="46"/></name><argument_list pos:line="31" pos:column="46">(<argument><expr><name pos:line="31" pos:column="47">f<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="50"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">size_t<pos:position pos:line="32" pos:column="23"/></name></type> <name pos:line="32" pos:column="24">datum_len<pos:position pos:line="32" pos:column="33"/></name> <init pos:line="32" pos:column="34">= <expr><call><name pos:line="32" pos:column="36">read_varint<pos:position pos:line="32" pos:column="47"/></name><argument_list pos:line="32" pos:column="47">(<argument><expr><name pos:line="32" pos:column="48">f<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="33" pos:column="17">size_t<pos:position pos:line="33" pos:column="23"/></name></type> <name pos:line="33" pos:column="24">dget_len<pos:position pos:line="33" pos:column="32"/></name> <init pos:line="33" pos:column="33">= <expr><ternary><condition><expr><name pos:line="33" pos:column="35">datum_len<pos:position pos:line="33" pos:column="44"/></name> <operator pos:line="33" pos:column="45">&gt;<pos:position pos:line="33" pos:column="49"/></operator> <name pos:line="33" pos:column="47">MAX_FULL_DATUM<pos:position pos:line="33" pos:column="61"/></name></expr> ?<pos:position pos:line="33" pos:column="63"/></condition><then pos:line="33" pos:column="63"> <expr><literal type="number" pos:line="33" pos:column="64">1<pos:position pos:line="33" pos:column="65"/></literal> <operator pos:line="33" pos:column="66">+<pos:position pos:line="33" pos:column="67"/></operator> <name pos:line="33" pos:column="68">MAX_DIGEST_LEN<pos:position pos:line="33" pos:column="82"/></name></expr> <pos:position pos:line="33" pos:column="83"/></then><else pos:line="33" pos:column="83">: <expr><name pos:line="33" pos:column="85">datum_len<pos:position pos:line="33" pos:column="94"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="33" pos:column="95"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">size_t<pos:position pos:line="34" pos:column="23"/></name></type> <name pos:line="34" pos:column="24">extra_len<pos:position pos:line="34" pos:column="33"/></name> <init pos:line="34" pos:column="34">= <expr><ternary><condition><expr><name pos:line="34" pos:column="36">MIGHT_NEED_RPRE<pos:position pos:line="34" pos:column="51"/></name></expr> ?<pos:position pos:line="34" pos:column="53"/></condition><then pos:line="34" pos:column="53"> <expr><name pos:line="34" pos:column="54">RPRE_LEN<pos:position pos:line="34" pos:column="62"/></name></expr> <pos:position pos:line="34" pos:column="63"/></then><else pos:line="34" pos:column="63">: <expr><literal type="number" pos:line="34" pos:column="65">0<pos:position pos:line="34" pos:column="66"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="34" pos:column="67"/></decl_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">dget_len<pos:position pos:line="35" pos:column="30"/></name> <operator pos:line="35" pos:column="31">+<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="33">extra_len<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">&lt;<pos:position pos:line="35" pos:column="47"/></operator> <name pos:line="35" pos:column="45">dget_len<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">)<pos:position pos:line="35" pos:column="54"/></operator>
		 <operator pos:line="36" pos:column="18">||<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="21">(<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">dget_len<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">+<pos:position pos:line="36" pos:column="32"/></operator> <name pos:line="36" pos:column="33">extra_len<pos:position pos:line="36" pos:column="42"/></name> <operator pos:line="36" pos:column="43">+<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="45">name_len<pos:position pos:line="36" pos:column="53"/></name> <operator pos:line="36" pos:column="54">&lt;<pos:position pos:line="36" pos:column="58"/></operator> <name pos:line="36" pos:column="56">dget_len<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">)<pos:position pos:line="36" pos:column="65"/></operator></expr>)<pos:position pos:line="36" pos:column="66"/></condition><then pos:line="36" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="25">overflow_exit<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><literal type="string" pos:line="37" pos:column="39">"receive_xattr"<pos:position pos:line="37" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="38" pos:column="17">ptr<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <call><name pos:line="38" pos:column="23">new_array<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">char<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="39">dget_len<pos:position pos:line="38" pos:column="47"/></name> <operator pos:line="38" pos:column="48">+<pos:position pos:line="38" pos:column="49"/></operator> <name pos:line="38" pos:column="50">extra_len<pos:position pos:line="38" pos:column="59"/></name> <operator pos:line="38" pos:column="60">+<pos:position pos:line="38" pos:column="61"/></operator> <name pos:line="38" pos:column="62">name_len<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt>
		<if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">ptr<pos:position pos:line="39" pos:column="25"/></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="25">out_of_memory<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><literal type="string" pos:line="40" pos:column="39">"receive_xattr"<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="41" pos:column="17">name<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">ptr<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">+<pos:position pos:line="41" pos:column="29"/></operator> <name pos:line="41" pos:column="30">dget_len<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">+<pos:position pos:line="41" pos:column="40"/></operator> <name pos:line="41" pos:column="41">extra_len<pos:position pos:line="41" pos:column="50"/></name></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">read_buf<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">f<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="29">name<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">name_len<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">dget_len<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">==<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">datum_len<pos:position pos:line="43" pos:column="42"/></name></expr>)<pos:position pos:line="43" pos:column="43"/></condition><then pos:line="43" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="25">read_buf<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">f<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">ptr<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="42">dget_len<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt></block></then>
		<else pos:line="45" pos:column="17">else <block pos:line="45" pos:column="22">{
			<expr_stmt><expr><operator pos:line="46" pos:column="25">*<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="26">ptr<pos:position pos:line="46" pos:column="29"/></name> <operator pos:line="46" pos:column="30">=<pos:position pos:line="46" pos:column="31"/></operator> <name pos:line="46" pos:column="32">XSTATE_ABBREV<pos:position pos:line="46" pos:column="45"/></name></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">read_buf<pos:position pos:line="47" pos:column="33"/></name><argument_list pos:line="47" pos:column="33">(<argument><expr><name pos:line="47" pos:column="34">f<pos:position pos:line="47" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="37">ptr<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">+<pos:position pos:line="47" pos:column="42"/></operator> <literal type="number" pos:line="47" pos:column="43">1<pos:position pos:line="47" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="46">MAX_DIGEST_LEN<pos:position pos:line="47" pos:column="60"/></name></expr></argument>)<pos:position pos:line="47" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></else></if>
<cpp:ifdef pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">ifdef<pos:position pos:line="49" pos:column="7"/></cpp:directive> <name pos:line="49" pos:column="8">HAVE_LINUX_XATTRS<pos:position pos:line="49" pos:column="25"/></name></cpp:ifdef>
		<comment type="block" pos:line="50" pos:column="17">/* Non-root can only save the user namespace. */</comment>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name pos:line="51" pos:column="21">am_root<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">&lt;=<pos:position pos:line="51" pos:column="34"/></operator> <literal type="number" pos:line="51" pos:column="32">0<pos:position pos:line="51" pos:column="33"/></literal> <operator pos:line="51" pos:column="34">&amp;&amp;<pos:position pos:line="51" pos:column="44"/></operator> <operator pos:line="51" pos:column="37">!<pos:position pos:line="51" pos:column="38"/></operator><call><name pos:line="51" pos:column="38">HAS_PREFIX<pos:position pos:line="51" pos:column="48"/></name><argument_list pos:line="51" pos:column="48">(<argument><expr><name pos:line="51" pos:column="49">name<pos:position pos:line="51" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="55">USER_PREFIX<pos:position pos:line="51" pos:column="66"/></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="68"/></condition><then pos:line="51" pos:column="68"> <block pos:line="51" pos:column="69">{
			<if pos:line="52" pos:column="25">if <condition pos:line="52" pos:column="28">(<expr><operator pos:line="52" pos:column="29">!<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">am_root<pos:position pos:line="52" pos:column="37"/></name></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38"> <block pos:line="52" pos:column="39">{
				<expr_stmt><expr><call><name pos:line="53" pos:column="33">free<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name pos:line="53" pos:column="38">ptr<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>
				<continue pos:line="54" pos:column="33">continue;<pos:position pos:line="54" pos:column="42"/></continue>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="56" pos:column="25">name<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">-=<pos:position pos:line="56" pos:column="32"/></operator> <name pos:line="56" pos:column="33">RPRE_LEN<pos:position pos:line="56" pos:column="41"/></name></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">name_len<pos:position pos:line="57" pos:column="33"/></name> <operator pos:line="57" pos:column="34">+=<pos:position pos:line="57" pos:column="36"/></operator> <name pos:line="57" pos:column="37">RPRE_LEN<pos:position pos:line="57" pos:column="45"/></name></expr>;<pos:position pos:line="57" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="58" pos:column="25">memcpy<pos:position pos:line="58" pos:column="31"/></name><argument_list pos:line="58" pos:column="31">(<argument><expr><name pos:line="58" pos:column="32">name<pos:position pos:line="58" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="38">RSYNC_PREFIX<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="52">RPRE_LEN<pos:position pos:line="58" pos:column="60"/></name></expr></argument>)<pos:position pos:line="58" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="59" pos:column="25">need_sort<pos:position pos:line="59" pos:column="34"/></name> <operator pos:line="59" pos:column="35">=<pos:position pos:line="59" pos:column="36"/></operator> <literal type="number" pos:line="59" pos:column="37">1<pos:position pos:line="59" pos:column="38"/></literal></expr>;<pos:position pos:line="59" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>
<cpp:else pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">else<pos:position pos:line="61" pos:column="6"/></cpp:directive></cpp:else>
		<comment type="block" pos:line="62" pos:column="17">/* This OS only has a user namespace, so we either
		 * strip the user prefix, or we put a non-user
		 * namespace inside our rsync hierarchy. */</comment>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">HAS_PREFIX<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">name<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">USER_PREFIX<pos:position pos:line="65" pos:column="49"/></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="51"/></condition><then pos:line="65" pos:column="51"> <block pos:line="65" pos:column="52">{
			<expr_stmt><expr><name pos:line="66" pos:column="25">name<pos:position pos:line="66" pos:column="29"/></name> <operator pos:line="66" pos:column="30">+=<pos:position pos:line="66" pos:column="32"/></operator> <name pos:line="66" pos:column="33">UPRE_LEN<pos:position pos:line="66" pos:column="41"/></name></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="67" pos:column="25">name_len<pos:position pos:line="67" pos:column="33"/></name> <operator pos:line="67" pos:column="34">-=<pos:position pos:line="67" pos:column="36"/></operator> <name pos:line="67" pos:column="37">UPRE_LEN<pos:position pos:line="67" pos:column="45"/></name></expr>;<pos:position pos:line="67" pos:column="46"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></then> <elseif pos:line="68" pos:column="19">else <if pos:line="68" pos:column="24">if <condition pos:line="68" pos:column="27">(<expr><name pos:line="68" pos:column="28">am_root<pos:position pos:line="68" pos:column="35"/></name></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36"> <block pos:line="68" pos:column="37">{
			<expr_stmt><expr><name pos:line="69" pos:column="25">name<pos:position pos:line="69" pos:column="29"/></name> <operator pos:line="69" pos:column="30">-=<pos:position pos:line="69" pos:column="32"/></operator> <name pos:line="69" pos:column="33">RPRE_LEN<pos:position pos:line="69" pos:column="41"/></name></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">name_len<pos:position pos:line="70" pos:column="33"/></name> <operator pos:line="70" pos:column="34">+=<pos:position pos:line="70" pos:column="36"/></operator> <name pos:line="70" pos:column="37">RPRE_LEN<pos:position pos:line="70" pos:column="45"/></name></expr>;<pos:position pos:line="70" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">memcpy<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><name pos:line="71" pos:column="32">name<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">RSYNC_PREFIX<pos:position pos:line="71" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="52">RPRE_LEN<pos:position pos:line="71" pos:column="60"/></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if></elseif> <else pos:line="72" pos:column="19">else <block pos:line="72" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">free<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name pos:line="73" pos:column="30">ptr<pos:position pos:line="73" pos:column="33"/></name></expr></argument>)<pos:position pos:line="73" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="35"/></expr_stmt>
			<continue pos:line="74" pos:column="25">continue;<pos:position pos:line="74" pos:column="34"/></continue>
		}<pos:position pos:line="75" pos:column="18"/></block></else></if>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>
		<comment type="block" pos:line="77" pos:column="17">/* No rsync.%FOO attributes are copied w/o 2 -X options. */</comment>
		<if pos:line="78" pos:column="17">if <condition pos:line="78" pos:column="20">(<expr><name><name pos:line="78" pos:column="21">preserve_xattrs<pos:position pos:line="78" pos:column="36"/></name> <argument_list type="generic" pos:line="78" pos:column="37">&lt; <argument><expr><literal type="number" pos:line="78" pos:column="39">2<pos:position pos:line="78" pos:column="40"/></literal> <operator pos:line="78" pos:column="41">&amp;&amp;<pos:position pos:line="78" pos:column="51"/></operator> <name pos:line="78" pos:column="44">name_len<pos:position pos:line="78" pos:column="52"/></name></expr></argument> &gt;<pos:position pos:line="78" pos:column="57"/></argument_list></name> <name pos:line="78" pos:column="55">RPRE_LEN<pos:position pos:line="78" pos:column="63"/></name>
		 <operator pos:line="79" pos:column="18">&amp;&amp;<pos:position pos:line="79" pos:column="28"/></operator> <name><name pos:line="79" pos:column="21">name<pos:position pos:line="79" pos:column="25"/></name><index pos:line="79" pos:column="25">[<expr><name pos:line="79" pos:column="26">RPRE_LEN<pos:position pos:line="79" pos:column="34"/></name></expr>]<pos:position pos:line="79" pos:column="35"/></index></name> <operator pos:line="79" pos:column="36">==<pos:position pos:line="79" pos:column="38"/></operator> <literal type="char" pos:line="79" pos:column="39">'%'<pos:position pos:line="79" pos:column="42"/></literal> <operator pos:line="79" pos:column="43">&amp;&amp;<pos:position pos:line="79" pos:column="53"/></operator> <call><name pos:line="79" pos:column="46">HAS_PREFIX<pos:position pos:line="79" pos:column="56"/></name><argument_list pos:line="79" pos:column="56">(<argument><expr><name pos:line="79" pos:column="57">name<pos:position pos:line="79" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="63">RSYNC_PREFIX<pos:position pos:line="79" pos:column="75"/></name></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="77"/></condition><then pos:line="79" pos:column="77"> <block pos:line="79" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="80" pos:column="25">free<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">ptr<pos:position pos:line="80" pos:column="33"/></name></expr></argument>)<pos:position pos:line="80" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="35"/></expr_stmt>
			<continue pos:line="81" pos:column="25">continue;<pos:position pos:line="81" pos:column="34"/></continue>
		}<pos:position pos:line="82" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="83" pos:column="17">rxa<pos:position pos:line="83" pos:column="20"/></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <call><name pos:line="83" pos:column="23">EXPAND_ITEM_LIST<pos:position pos:line="83" pos:column="39"/></name><argument_list pos:line="83" pos:column="39">(<argument><expr><operator pos:line="83" pos:column="40">&amp;<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="41">temp_xattr<pos:position pos:line="83" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="53">rsync_xa<pos:position pos:line="83" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="63">1<pos:position pos:line="83" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="84" pos:column="17">rxa<pos:position pos:line="84" pos:column="20"/></name><operator pos:line="84" pos:column="20">-&gt;<pos:position pos:line="84" pos:column="25"/></operator><name pos:line="84" pos:column="22">name<pos:position pos:line="84" pos:column="26"/></name></name> <operator pos:line="84" pos:column="27">=<pos:position pos:line="84" pos:column="28"/></operator> <name pos:line="84" pos:column="29">name<pos:position pos:line="84" pos:column="33"/></name></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="85" pos:column="17">rxa<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">-&gt;<pos:position pos:line="85" pos:column="25"/></operator><name pos:line="85" pos:column="22">datum<pos:position pos:line="85" pos:column="27"/></name></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <name pos:line="85" pos:column="30">ptr<pos:position pos:line="85" pos:column="33"/></name></expr>;<pos:position pos:line="85" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="86" pos:column="17">rxa<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">-&gt;<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="22">name_len<pos:position pos:line="86" pos:column="30"/></name></name> <operator pos:line="86" pos:column="31">=<pos:position pos:line="86" pos:column="32"/></operator> <name pos:line="86" pos:column="33">name_len<pos:position pos:line="86" pos:column="41"/></name></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="87" pos:column="17">rxa<pos:position pos:line="87" pos:column="20"/></name><operator pos:line="87" pos:column="20">-&gt;<pos:position pos:line="87" pos:column="25"/></operator><name pos:line="87" pos:column="22">datum_len<pos:position pos:line="87" pos:column="31"/></name></name> <operator pos:line="87" pos:column="32">=<pos:position pos:line="87" pos:column="33"/></operator> <name pos:line="87" pos:column="34">datum_len<pos:position pos:line="87" pos:column="43"/></name></expr>;<pos:position pos:line="87" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="88" pos:column="17">rxa<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">-&gt;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="22">num<pos:position pos:line="88" pos:column="25"/></name></name> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <name pos:line="88" pos:column="28">num<pos:position pos:line="88" pos:column="31"/></name></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="89" pos:column="10"/></block></for>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">need_sort<pos:position pos:line="91" pos:column="22"/></name> <operator pos:line="91" pos:column="23">&amp;&amp;<pos:position pos:line="91" pos:column="33"/></operator> <name pos:line="91" pos:column="26">count<pos:position pos:line="91" pos:column="31"/></name> <operator pos:line="91" pos:column="32">&gt;<pos:position pos:line="91" pos:column="36"/></operator> <literal type="number" pos:line="91" pos:column="34">1<pos:position pos:line="91" pos:column="35"/></literal></expr>)<pos:position pos:line="91" pos:column="36"/></condition><then pos:line="91" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="17">qsort<pos:position pos:line="92" pos:column="22"/></name><argument_list pos:line="92" pos:column="22">(<argument><expr><name><name pos:line="92" pos:column="23">temp_xattr<pos:position pos:line="92" pos:column="33"/></name><operator pos:line="92" pos:column="33">.<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="34">items<pos:position pos:line="92" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="41">count<pos:position pos:line="92" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="48">sizeof <argument_list pos:line="92" pos:column="55">(<argument><expr><name pos:line="92" pos:column="56">rsync_xa<pos:position pos:line="92" pos:column="64"/></name></expr></argument>)<pos:position pos:line="92" pos:column="65"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="92" pos:column="67">rsync_xal_compare_names<pos:position pos:line="92" pos:column="90"/></name></expr></argument>)<pos:position pos:line="92" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="92"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="94" pos:column="9">ndx<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">=<pos:position pos:line="94" pos:column="14"/></operator> <name><name pos:line="94" pos:column="15">rsync_xal_l<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">.<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="27">count<pos:position pos:line="94" pos:column="32"/></name></name></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt> <comment type="block" pos:line="94" pos:column="34">/* pre-incremented count */</comment>
	<expr_stmt><expr><call><name pos:line="95" pos:column="9">rsync_xal_store<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><operator pos:line="95" pos:column="25">&amp;<pos:position pos:line="95" pos:column="30"/></operator><name pos:line="95" pos:column="26">temp_xattr<pos:position pos:line="95" pos:column="36"/></name></expr></argument>)<pos:position pos:line="95" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt> <comment type="block" pos:line="95" pos:column="39">/* adds item to rsync_xal_l */</comment>

	<expr_stmt><expr><call><name pos:line="97" pos:column="9">F_XATTR<pos:position pos:line="97" pos:column="16"/></name><argument_list pos:line="97" pos:column="16">(<argument><expr><name pos:line="97" pos:column="17">file<pos:position pos:line="97" pos:column="21"/></name></expr></argument>)<pos:position pos:line="97" pos:column="22"/></argument_list></call> <operator pos:line="97" pos:column="23">=<pos:position pos:line="97" pos:column="24"/></operator> <name pos:line="97" pos:column="25">ndx<pos:position pos:line="97" pos:column="28"/></name></expr>;<pos:position pos:line="97" pos:column="29"/></expr_stmt>
}<pos:position pos:line="98" pos:column="2"/></block></function></unit>

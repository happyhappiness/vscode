<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_549_rsync-2.6.8.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">str_isnumber<pos:position pos:line="2" pos:column="13"/></name><argument_list pos:line="2" pos:column="13">(<argument><expr><name pos:line="2" pos:column="14">p<pos:position pos:line="2" pos:column="15"/></name></expr></argument>)<pos:position pos:line="2" pos:column="16"/></argument_list>
	const <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><name pos:line="3" pos:column="21">p<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">q<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><operator pos:line="5" pos:column="19">(<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">char<pos:position pos:line="5" pos:column="24"/></name> <operator pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></operator><operator pos:line="5" pos:column="26">)<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">p<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">q<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition> <block pos:line="6" pos:column="20">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator> <call><name pos:line="7" pos:column="23">isdigit<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">q<pos:position pos:line="7" pos:column="33"/></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
			<block type="pseudo"><return pos:line="8" pos:column="25">return <expr><name pos:line="8" pos:column="32">NO<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="9" pos:column="17">q<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">++<pos:position pos:line="9" pos:column="20"/></operator></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></while>
	<return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">YES<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></unit>

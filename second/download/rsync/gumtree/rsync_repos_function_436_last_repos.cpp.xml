<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_436_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">base64_encode<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">buf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">len<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">out<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">pad<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">b64<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="string" pos:line="3" pos:column="21">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"<pos:position pos:line="3" pos:column="87"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="88"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">bit_offset<pos:position pos:line="4" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="25">byte_offset<pos:position pos:line="4" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="38">idx<pos:position pos:line="4" pos:column="41"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="43">i<pos:position pos:line="4" pos:column="44"/></name></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">uchar<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">d<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">(<pos:position pos:line="5" pos:column="27"/></operator><specifier pos:line="5" pos:column="27">const<pos:position pos:line="5" pos:column="32"/></specifier> <name pos:line="5" pos:column="33">uchar<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="41">buf<pos:position pos:line="5" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">bytes<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><operator pos:line="6" pos:column="21">(<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">len<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><literal type="number" pos:line="6" pos:column="26">8<pos:position pos:line="6" pos:column="27"/></literal> <operator pos:line="6" pos:column="28">+<pos:position pos:line="6" pos:column="29"/></operator> <literal type="number" pos:line="6" pos:column="30">5<pos:position pos:line="6" pos:column="31"/></literal><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator><operator pos:line="6" pos:column="32">/<pos:position pos:line="6" pos:column="33"/></operator><literal type="number" pos:line="6" pos:column="33">6<pos:position pos:line="6" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="25">bytes<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></condition> <incr><expr><name pos:line="8" pos:column="32">i<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">++<pos:position pos:line="8" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="36"/></control> <block pos:line="8" pos:column="37">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">byte_offset<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">i<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><literal type="number" pos:line="9" pos:column="34">6<pos:position pos:line="9" pos:column="35"/></literal><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator><operator pos:line="9" pos:column="36">/<pos:position pos:line="9" pos:column="37"/></operator><literal type="number" pos:line="9" pos:column="37">8<pos:position pos:line="9" pos:column="38"/></literal></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="10" pos:column="17">bit_offset<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">i<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator><literal type="number" pos:line="10" pos:column="33">6<pos:position pos:line="10" pos:column="34"/></literal><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator><operator pos:line="10" pos:column="35">%<pos:position pos:line="10" pos:column="36"/></operator><literal type="number" pos:line="10" pos:column="36">8<pos:position pos:line="10" pos:column="37"/></literal></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">bit_offset<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">&lt;<pos:position pos:line="11" pos:column="36"/></operator> <literal type="number" pos:line="11" pos:column="34">3<pos:position pos:line="11" pos:column="35"/></literal></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <block pos:line="11" pos:column="37">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">idx<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">=<pos:position pos:line="12" pos:column="30"/></operator> <operator pos:line="12" pos:column="31">(<pos:position pos:line="12" pos:column="32"/></operator><name><name pos:line="12" pos:column="32">d<pos:position pos:line="12" pos:column="33"/></name><index pos:line="12" pos:column="33">[<expr><name pos:line="12" pos:column="34">byte_offset<pos:position pos:line="12" pos:column="45"/></name></expr>]<pos:position pos:line="12" pos:column="46"/></index></name> <operator pos:line="12" pos:column="47">&gt;&gt;<pos:position pos:line="12" pos:column="52"/></operator> <operator pos:line="12" pos:column="50">(<pos:position pos:line="12" pos:column="51"/></operator><literal type="number" pos:line="12" pos:column="51">2<pos:position pos:line="12" pos:column="52"/></literal><operator pos:line="12" pos:column="52">-<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="53">bit_offset<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">)<pos:position pos:line="12" pos:column="64"/></operator><operator pos:line="12" pos:column="64">)<pos:position pos:line="12" pos:column="65"/></operator> <operator pos:line="12" pos:column="66">&amp;<pos:position pos:line="12" pos:column="71"/></operator> <literal type="number" pos:line="12" pos:column="68">0x3F<pos:position pos:line="12" pos:column="72"/></literal></expr>;<pos:position pos:line="12" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="13" pos:column="18"/></block></then> <else pos:line="13" pos:column="19">else <block pos:line="13" pos:column="24">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">idx<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <operator pos:line="14" pos:column="31">(<pos:position pos:line="14" pos:column="32"/></operator><name><name pos:line="14" pos:column="32">d<pos:position pos:line="14" pos:column="33"/></name><index pos:line="14" pos:column="33">[<expr><name pos:line="14" pos:column="34">byte_offset<pos:position pos:line="14" pos:column="45"/></name></expr>]<pos:position pos:line="14" pos:column="46"/></index></name> <operator pos:line="14" pos:column="47">&lt;&lt;<pos:position pos:line="14" pos:column="55"/></operator> <operator pos:line="14" pos:column="50">(<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="51">bit_offset<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">-<pos:position pos:line="14" pos:column="62"/></operator><literal type="number" pos:line="14" pos:column="62">2<pos:position pos:line="14" pos:column="63"/></literal><operator pos:line="14" pos:column="63">)<pos:position pos:line="14" pos:column="64"/></operator><operator pos:line="14" pos:column="64">)<pos:position pos:line="14" pos:column="65"/></operator> <operator pos:line="14" pos:column="66">&amp;<pos:position pos:line="14" pos:column="71"/></operator> <literal type="number" pos:line="14" pos:column="68">0x3F<pos:position pos:line="14" pos:column="72"/></literal></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><name pos:line="15" pos:column="29">byte_offset<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">+<pos:position pos:line="15" pos:column="41"/></operator><literal type="number" pos:line="15" pos:column="41">1<pos:position pos:line="15" pos:column="42"/></literal> <operator pos:line="15" pos:column="43">&lt;<pos:position pos:line="15" pos:column="47"/></operator> <name pos:line="15" pos:column="45">len<pos:position pos:line="15" pos:column="48"/></name></expr>)<pos:position pos:line="15" pos:column="49"/></condition><then pos:line="15" pos:column="49"> <block pos:line="15" pos:column="50">{
				<expr_stmt><expr><name pos:line="16" pos:column="33">idx<pos:position pos:line="16" pos:column="36"/></name> <operator pos:line="16" pos:column="37">|=<pos:position pos:line="16" pos:column="39"/></operator> <operator pos:line="16" pos:column="40">(<pos:position pos:line="16" pos:column="41"/></operator><name><name pos:line="16" pos:column="41">d<pos:position pos:line="16" pos:column="42"/></name><index pos:line="16" pos:column="42">[<expr><name pos:line="16" pos:column="43">byte_offset<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">+<pos:position pos:line="16" pos:column="55"/></operator><literal type="number" pos:line="16" pos:column="55">1<pos:position pos:line="16" pos:column="56"/></literal></expr>]<pos:position pos:line="16" pos:column="57"/></index></name> <operator pos:line="16" pos:column="58">&gt;&gt;<pos:position pos:line="16" pos:column="63"/></operator> <operator pos:line="16" pos:column="61">(<pos:position pos:line="16" pos:column="62"/></operator><literal type="number" pos:line="16" pos:column="62">8<pos:position pos:line="16" pos:column="63"/></literal><operator pos:line="16" pos:column="63">-<pos:position pos:line="16" pos:column="64"/></operator><operator pos:line="16" pos:column="64">(<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="65">bit_offset<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">-<pos:position pos:line="16" pos:column="76"/></operator><literal type="number" pos:line="16" pos:column="76">2<pos:position pos:line="16" pos:column="77"/></literal><operator pos:line="16" pos:column="77">)<pos:position pos:line="16" pos:column="78"/></operator><operator pos:line="16" pos:column="78">)<pos:position pos:line="16" pos:column="79"/></operator><operator pos:line="16" pos:column="79">)<pos:position pos:line="16" pos:column="80"/></operator></expr>;<pos:position pos:line="16" pos:column="81"/></expr_stmt>
			}<pos:position pos:line="17" pos:column="26"/></block></then></if>
		}<pos:position pos:line="18" pos:column="18"/></block></else></if>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">out<pos:position pos:line="19" pos:column="20"/></name><index pos:line="19" pos:column="20">[<expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name></expr>]<pos:position pos:line="19" pos:column="23"/></index></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name><name pos:line="19" pos:column="26">b64<pos:position pos:line="19" pos:column="29"/></name><index pos:line="19" pos:column="29">[<expr><name pos:line="19" pos:column="30">idx<pos:position pos:line="19" pos:column="33"/></name></expr>]<pos:position pos:line="19" pos:column="34"/></index></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></for>

	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><name pos:line="22" pos:column="16">pad<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&amp;&amp;<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">i<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">%<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">4<pos:position pos:line="22" pos:column="29"/></literal><operator pos:line="22" pos:column="29">)<pos:position pos:line="22" pos:column="30"/></operator></expr>)<pos:position pos:line="22" pos:column="31"/></condition>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">out<pos:position pos:line="23" pos:column="20"/></name><index pos:line="23" pos:column="20">[<expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">++<pos:position pos:line="23" pos:column="24"/></operator></expr>]<pos:position pos:line="23" pos:column="25"/></index></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <literal type="char" pos:line="23" pos:column="28">'='<pos:position pos:line="23" pos:column="31"/></literal></expr>;<pos:position pos:line="23" pos:column="32"/></expr_stmt></block></while>

	<expr_stmt><expr><name><name pos:line="25" pos:column="9">out<pos:position pos:line="25" pos:column="12"/></name><index pos:line="25" pos:column="12">[<expr><name pos:line="25" pos:column="13">i<pos:position pos:line="25" pos:column="14"/></name></expr>]<pos:position pos:line="25" pos:column="15"/></index></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="char" pos:line="25" pos:column="18">'\0'<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

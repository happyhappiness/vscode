<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_171_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">read_sum_head<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">sum_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">sum<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int32<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">max_blength<pos:position pos:line="3" pos:column="26"/></name> <init pos:line="3" pos:column="27">= <expr><ternary><condition><expr><name pos:line="3" pos:column="29">protocol_version<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">&lt;<pos:position pos:line="3" pos:column="50"/></operator> <literal type="number" pos:line="3" pos:column="48">30<pos:position pos:line="3" pos:column="50"/></literal></expr> ?<pos:position pos:line="3" pos:column="52"/></condition><then pos:line="3" pos:column="52"> <expr><name pos:line="3" pos:column="53">OLD_MAX_BLOCK_SIZE<pos:position pos:line="3" pos:column="71"/></name></expr> <pos:position pos:line="3" pos:column="72"/></then><else pos:line="3" pos:column="72">: <expr><name pos:line="3" pos:column="74">MAX_BLOCK_SIZE<pos:position pos:line="3" pos:column="88"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="89"/></decl_stmt>
	<expr_stmt><expr><name><name pos:line="4" pos:column="9">sum<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">count<pos:position pos:line="4" pos:column="19"/></name></name> <operator pos:line="4" pos:column="20">=<pos:position pos:line="4" pos:column="21"/></operator> <call><name pos:line="4" pos:column="22">read_int<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">(<argument><expr><name pos:line="4" pos:column="31">f<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">sum<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">count<pos:position pos:line="5" pos:column="23"/></name></name> <operator pos:line="5" pos:column="24">&lt;<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">rprintf<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">FERROR<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="33">"Invalid checksum count %ld [%s]\n"<pos:position pos:line="6" pos:column="68"/></literal></expr></argument>,
			<argument><expr><operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">long<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">)<pos:position pos:line="7" pos:column="31"/></operator><name><name pos:line="7" pos:column="31">sum<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">count<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="43">who_am_i<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">()<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">exit_cleanup<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">RERR_PROTOCOL<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="10" pos:column="9">sum<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">blength<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <call><name pos:line="10" pos:column="24">read_int<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">f<pos:position pos:line="10" pos:column="34"/></name></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">sum<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name><name pos:line="11" pos:column="18">blength<pos:position pos:line="11" pos:column="25"/></name> <argument_list type="generic" pos:line="11" pos:column="26">&lt; <argument><expr><literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal> <operator pos:line="11" pos:column="30">||<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="33">sum<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">blength<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument> &gt;<pos:position pos:line="11" pos:column="50"/></argument_list></name></name> <name pos:line="11" pos:column="48">max_blength<pos:position pos:line="11" pos:column="59"/></name></expr>)<pos:position pos:line="11" pos:column="60"/></condition><then pos:line="11" pos:column="60"> <block pos:line="11" pos:column="61">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FERROR<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"Invalid block length %ld [%s]\n"<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>,
			<argument><expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">long<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator><name><name pos:line="13" pos:column="31">sum<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">blength<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="45">who_am_i<pos:position pos:line="13" pos:column="53"/></name><argument_list pos:line="13" pos:column="53">()<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">exit_cleanup<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">RERR_PROTOCOL<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">sum<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">s2length<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="16" pos:column="25">protocol_version<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">&lt;<pos:position pos:line="16" pos:column="46"/></operator> <literal type="number" pos:line="16" pos:column="44">27<pos:position pos:line="16" pos:column="46"/></literal></expr> ?<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <expr><name pos:line="16" pos:column="49">csum_length<pos:position pos:line="16" pos:column="60"/></name></expr> <pos:position pos:line="16" pos:column="61"/></then><else pos:line="16" pos:column="61">: <expr><operator pos:line="16" pos:column="63">(<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="64">int<pos:position pos:line="16" pos:column="67"/></name><operator pos:line="16" pos:column="67">)<pos:position pos:line="16" pos:column="68"/></operator><call><name pos:line="16" pos:column="68">read_int<pos:position pos:line="16" pos:column="76"/></name><argument_list pos:line="16" pos:column="76">(<argument><expr><name pos:line="16" pos:column="77">f<pos:position pos:line="16" pos:column="78"/></name></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="80"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">sum<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name><name pos:line="17" pos:column="18">s2length<pos:position pos:line="17" pos:column="26"/></name> <argument_list type="generic" pos:line="17" pos:column="27">&lt; <argument><expr><literal type="number" pos:line="17" pos:column="29">0<pos:position pos:line="17" pos:column="30"/></literal> <operator pos:line="17" pos:column="31">||<pos:position pos:line="17" pos:column="33"/></operator> <name><name pos:line="17" pos:column="34">sum<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">s2length<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument> &gt;<pos:position pos:line="17" pos:column="52"/></argument_list></name></name> <name pos:line="17" pos:column="50">MAX_DIGEST_LEN<pos:position pos:line="17" pos:column="64"/></name></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65"> <block pos:line="17" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">rprintf<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">FERROR<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="33">"Invalid checksum length %d [%s]\n"<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="19" pos:column="25">sum<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">s2length<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="40">who_am_i<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">()<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">exit_cleanup<pos:position pos:line="20" pos:column="29"/></name><argument_list pos:line="20" pos:column="29">(<argument><expr><name pos:line="20" pos:column="30">RERR_PROTOCOL<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">sum<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">remainder<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <call><name pos:line="22" pos:column="26">read_int<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">f<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">sum<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name><name pos:line="23" pos:column="18">remainder<pos:position pos:line="23" pos:column="27"/></name> <argument_list type="generic" pos:line="23" pos:column="28">&lt; <argument><expr><literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal> <operator pos:line="23" pos:column="32">||<pos:position pos:line="23" pos:column="34"/></operator> <name><name pos:line="23" pos:column="35">sum<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">-&gt;<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="40">remainder<pos:position pos:line="23" pos:column="49"/></name></name></expr></argument> &gt;<pos:position pos:line="23" pos:column="54"/></argument_list></name></name> <name><name pos:line="23" pos:column="52">sum<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">blength<pos:position pos:line="23" pos:column="64"/></name></name></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65"> <block pos:line="23" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">rprintf<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">FERROR<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"Invalid remainder length %ld [%s]\n"<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>,
			<argument><expr><operator pos:line="25" pos:column="25">(<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">long<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">)<pos:position pos:line="25" pos:column="31"/></operator><name><name pos:line="25" pos:column="31">sum<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">remainder<pos:position pos:line="25" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="47">who_am_i<pos:position pos:line="25" pos:column="55"/></name><argument_list pos:line="25" pos:column="55">()<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">exit_cleanup<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">RERR_PROTOCOL<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

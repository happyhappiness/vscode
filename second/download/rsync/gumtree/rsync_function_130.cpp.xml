<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_130.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">read_buf<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">f<pos:position pos:line="1" pos:column="20"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">buf<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">len<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">(<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">ret<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">=<pos:position pos:line="4" pos:column="12"/></operator><call><name pos:line="4" pos:column="12">readfd<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">f<pos:position pos:line="4" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="4" pos:column="21">buf<pos:position pos:line="4" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="4" pos:column="25">len<pos:position pos:line="4" pos:column="28"/></name></expr></argument>)<pos:position pos:line="4" pos:column="29"/></argument_list></call><operator pos:line="4" pos:column="29">)<pos:position pos:line="4" pos:column="30"/></operator> <operator pos:line="4" pos:column="31">!=<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">len<pos:position pos:line="4" pos:column="37"/></name></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38"> <block pos:line="4" pos:column="39">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">verbose<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&gt;<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="19">1<pos:position pos:line="5" pos:column="20"/></literal></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21"> 
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="7">fprintf<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">stderr<pos:position pos:line="6" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="6" pos:column="22">"Error reading %d bytes : %s\n"<pos:position pos:line="6" pos:column="53"/></literal></expr></argument>,
	      <argument><expr><name pos:line="7" pos:column="15">len<pos:position pos:line="7" pos:column="18"/></name></expr></argument>,<argument><expr><ternary><condition><expr><name pos:line="7" pos:column="19">ret<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">==<pos:position pos:line="7" pos:column="24"/></operator><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>?<pos:position pos:line="7" pos:column="27"/></condition><then><expr><call><name pos:line="7" pos:column="27">strerror<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">errno<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr></then><else pos:line="7" pos:column="42">:<expr><literal type="string" pos:line="7" pos:column="43">"EOF"<pos:position pos:line="7" pos:column="48"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">exit_cleanup<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><literal type="number" pos:line="8" pos:column="18">1<pos:position pos:line="8" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="10" pos:column="3">total_read<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">+=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">len<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

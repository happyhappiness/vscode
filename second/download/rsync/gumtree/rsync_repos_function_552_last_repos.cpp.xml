<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_552_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">output_flist<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">file_list<pos:position pos:line="1" pos:column="42"/></name></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">flist<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">uidbuf<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">16<pos:position pos:line="3" pos:column="23"/></literal></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="26">gidbuf<pos:position pos:line="3" pos:column="32"/></name><index pos:line="3" pos:column="32">[<expr><literal type="number" pos:line="3" pos:column="33">16<pos:position pos:line="3" pos:column="35"/></literal></expr>]<pos:position pos:line="3" pos:column="36"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="3" pos:column="38">depthbuf<pos:position pos:line="3" pos:column="46"/></name><index pos:line="3" pos:column="46">[<expr><literal type="number" pos:line="3" pos:column="47">16<pos:position pos:line="3" pos:column="49"/></literal></expr>]<pos:position pos:line="3" pos:column="50"/></index></name></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">file_struct<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">file<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">root<pos:position pos:line="5" pos:column="25"/></name></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="28">dir<pos:position pos:line="5" pos:column="31"/></name></decl>, <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="34">slash<pos:position pos:line="5" pos:column="39"/></name></decl>, <modifier pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="42">name<pos:position pos:line="5" pos:column="46"/></name></decl>, <modifier pos:line="5" pos:column="48">*<pos:position pos:line="5" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="49">trail<pos:position pos:line="5" pos:column="54"/></name></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">who<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><call><name pos:line="6" pos:column="27">who_am_i<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">()<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">rprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">FINFO<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="24">"[%s] flist start=%d, used=%d, low=%d, high=%d\n"<pos:position pos:line="9" pos:column="73"/></literal></expr></argument>,
		<argument><expr><name pos:line="10" pos:column="17">who<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="22">flist<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">ndx_start<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="40">flist<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">used<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="53">flist<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">-&gt;<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="60">low<pos:position pos:line="10" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="65">flist<pos:position pos:line="10" pos:column="70"/></name><operator pos:line="10" pos:column="70">-&gt;<pos:position pos:line="10" pos:column="75"/></operator><name pos:line="10" pos:column="72">high<pos:position pos:line="10" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></expr_stmt>
	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="25">flist<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">used<pos:position pos:line="11" pos:column="36"/></name></name></expr>;<pos:position pos:line="11" pos:column="37"/></condition> <incr><expr><name pos:line="11" pos:column="38">i<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">++<pos:position pos:line="11" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="42"/></control> <block pos:line="11" pos:column="43">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">file<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="24">flist<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">files<pos:position pos:line="12" pos:column="36"/></name><index pos:line="12" pos:column="36">[<expr><name pos:line="12" pos:column="37">i<pos:position pos:line="12" pos:column="38"/></name></expr>]<pos:position pos:line="12" pos:column="39"/></index></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">am_root<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">||<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">am_sender<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">)<pos:position pos:line="13" pos:column="43"/></operator> <operator pos:line="13" pos:column="44">&amp;&amp;<pos:position pos:line="13" pos:column="54"/></operator> <name pos:line="13" pos:column="47">uid_ndx<pos:position pos:line="13" pos:column="54"/></name></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55"> <block pos:line="13" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">snprintf<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">uidbuf<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="42">sizeof <name pos:line="14" pos:column="49">uidbuf<pos:position pos:line="14" pos:column="55"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="57">" uid=%u"<pos:position pos:line="14" pos:column="66"/></literal></expr></argument>,
				 <argument><expr><call><name pos:line="15" pos:column="34">F_OWNER<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">file<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then> <else pos:line="16" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">uidbuf<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <literal type="char" pos:line="17" pos:column="35">'\0'<pos:position pos:line="17" pos:column="39"/></literal></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt></block></else></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">gid_ndx<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block pos:line="18" pos:column="30">{
			<decl_stmt><decl><specifier pos:line="19" pos:column="25">static<pos:position pos:line="19" pos:column="31"/></specifier> <type><name pos:line="19" pos:column="32">char<pos:position pos:line="19" pos:column="36"/></name></type> <name><name pos:line="19" pos:column="37">parens<pos:position pos:line="19" pos:column="43"/></name><index pos:line="19" pos:column="43">[]<pos:position pos:line="19" pos:column="45"/></index></name> <init pos:line="19" pos:column="46">= <expr><literal type="string" pos:line="19" pos:column="48">"(\0)\0\0\0"<pos:position pos:line="19" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="61"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="20" pos:column="25">char<pos:position pos:line="20" pos:column="29"/></name> <modifier pos:line="20" pos:column="30">*<pos:position pos:line="20" pos:column="31"/></modifier></type><name pos:line="20" pos:column="31">pp<pos:position pos:line="20" pos:column="33"/></name> <init pos:line="20" pos:column="34">= <expr><name pos:line="20" pos:column="36">parens<pos:position pos:line="20" pos:column="42"/></name> <operator pos:line="20" pos:column="43">+<pos:position pos:line="20" pos:column="44"/></operator> <operator pos:line="20" pos:column="45">(<pos:position pos:line="20" pos:column="46"/></operator><ternary><condition><expr><name><name pos:line="20" pos:column="46">file<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">-&gt;<pos:position pos:line="20" pos:column="55"/></operator><name pos:line="20" pos:column="52">flags<pos:position pos:line="20" pos:column="57"/></name></name> <operator pos:line="20" pos:column="58">&amp;<pos:position pos:line="20" pos:column="63"/></operator> <name pos:line="20" pos:column="60">FLAG_SKIP_GROUP<pos:position pos:line="20" pos:column="75"/></name></expr> ?<pos:position pos:line="20" pos:column="77"/></condition><then pos:line="20" pos:column="77"> <expr><literal type="number" pos:line="20" pos:column="78">0<pos:position pos:line="20" pos:column="79"/></literal></expr> <pos:position pos:line="20" pos:column="80"/></then><else pos:line="20" pos:column="80">: <expr><literal type="number" pos:line="20" pos:column="82">3<pos:position pos:line="20" pos:column="83"/></literal></expr></else></ternary><operator pos:line="20" pos:column="83">)<pos:position pos:line="20" pos:column="84"/></operator></expr></init></decl>;<pos:position pos:line="20" pos:column="85"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">snprintf<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">gidbuf<pos:position pos:line="21" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="42">sizeof <name pos:line="21" pos:column="49">gidbuf<pos:position pos:line="21" pos:column="55"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="57">" gid=%s%u%s"<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>,
				 <argument><expr><name pos:line="22" pos:column="34">pp<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="38">F_GROUP<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name pos:line="22" pos:column="46">file<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="53">pp<pos:position pos:line="22" pos:column="55"/></name> <operator pos:line="22" pos:column="56">+<pos:position pos:line="22" pos:column="57"/></operator> <literal type="number" pos:line="22" pos:column="58">2<pos:position pos:line="22" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then> <else pos:line="23" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">gidbuf<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">=<pos:position pos:line="24" pos:column="34"/></operator> <literal type="char" pos:line="24" pos:column="35">'\0'<pos:position pos:line="24" pos:column="39"/></literal></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt></block></else></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">am_sender<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">snprintf<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">depthbuf<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="44">sizeof <name pos:line="26" pos:column="51">depthbuf<pos:position pos:line="26" pos:column="59"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="61">"%d"<pos:position pos:line="26" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="67">F_DEPTH<pos:position pos:line="26" pos:column="74"/></name><argument_list pos:line="26" pos:column="74">(<argument><expr><name pos:line="26" pos:column="75">file<pos:position pos:line="26" pos:column="79"/></name></expr></argument>)<pos:position pos:line="26" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="82"/></expr_stmt></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">F_IS_ACTIVE<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">file<pos:position pos:line="27" pos:column="37"/></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39"> <block pos:line="27" pos:column="40">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">root<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <ternary><condition><expr><name pos:line="28" pos:column="32">am_sender<pos:position pos:line="28" pos:column="41"/></name></expr> ?<pos:position pos:line="28" pos:column="43"/></condition><then pos:line="28" pos:column="43"> <expr><call><name pos:line="28" pos:column="44">NS<pos:position pos:line="28" pos:column="46"/></name><argument_list pos:line="28" pos:column="46">(<argument><expr><call><name pos:line="28" pos:column="47">F_PATHNAME<pos:position pos:line="28" pos:column="57"/></name><argument_list pos:line="28" pos:column="57">(<argument><expr><name pos:line="28" pos:column="58">file<pos:position pos:line="28" pos:column="62"/></name></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr> <pos:position pos:line="28" pos:column="65"/></then><else pos:line="28" pos:column="65">: <expr><name pos:line="28" pos:column="67">depthbuf<pos:position pos:line="28" pos:column="75"/></name></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="76"/></expr_stmt>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><operator pos:line="29" pos:column="29">(<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">dir<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <name><name pos:line="29" pos:column="36">file<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">dirname<pos:position pos:line="29" pos:column="49"/></name></name><operator pos:line="29" pos:column="49">)<pos:position pos:line="29" pos:column="50"/></operator> <operator pos:line="29" pos:column="51">==<pos:position pos:line="29" pos:column="53"/></operator> <name pos:line="29" pos:column="54">NULL<pos:position pos:line="29" pos:column="58"/></name></expr>)<pos:position pos:line="29" pos:column="59"/></condition><then pos:line="29" pos:column="59">
				<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="33">dir<pos:position pos:line="30" pos:column="36"/></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <name pos:line="30" pos:column="39">slash<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">=<pos:position pos:line="30" pos:column="46"/></operator> <literal type="string" pos:line="30" pos:column="47">""<pos:position pos:line="30" pos:column="49"/></literal></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt></block></then>
			<else pos:line="31" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="33">slash<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">=<pos:position pos:line="32" pos:column="40"/></operator> <literal type="string" pos:line="32" pos:column="41">"/"<pos:position pos:line="32" pos:column="44"/></literal></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="33" pos:column="25">name<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">file<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">-&gt;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="38">basename<pos:position pos:line="33" pos:column="46"/></name></name></expr>;<pos:position pos:line="33" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">trail<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <ternary><condition><expr><call><name pos:line="34" pos:column="33">S_ISDIR<pos:position pos:line="34" pos:column="40"/></name><argument_list pos:line="34" pos:column="40">(<argument><expr><name><name pos:line="34" pos:column="41">file<pos:position pos:line="34" pos:column="45"/></name><operator pos:line="34" pos:column="45">-&gt;<pos:position pos:line="34" pos:column="50"/></operator><name pos:line="34" pos:column="47">mode<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr> ?<pos:position pos:line="34" pos:column="54"/></condition><then pos:line="34" pos:column="54"> <expr><literal type="string" pos:line="34" pos:column="55">"/"<pos:position pos:line="34" pos:column="58"/></literal></expr> <pos:position pos:line="34" pos:column="59"/></then><else pos:line="34" pos:column="59">: <expr><literal type="string" pos:line="34" pos:column="61">""<pos:position pos:line="34" pos:column="63"/></literal></expr></else></ternary></expr>;<pos:position pos:line="34" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then> <else pos:line="35" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="25">root<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <name pos:line="36" pos:column="32">dir<pos:position pos:line="36" pos:column="35"/></name> <operator pos:line="36" pos:column="36">=<pos:position pos:line="36" pos:column="37"/></operator> <name pos:line="36" pos:column="38">slash<pos:position pos:line="36" pos:column="43"/></name> <operator pos:line="36" pos:column="44">=<pos:position pos:line="36" pos:column="45"/></operator> <name pos:line="36" pos:column="46">name<pos:position pos:line="36" pos:column="50"/></name> <operator pos:line="36" pos:column="51">=<pos:position pos:line="36" pos:column="52"/></operator> <name pos:line="36" pos:column="53">trail<pos:position pos:line="36" pos:column="58"/></name> <operator pos:line="36" pos:column="59">=<pos:position pos:line="36" pos:column="60"/></operator> <literal type="string" pos:line="36" pos:column="61">""<pos:position pos:line="36" pos:column="63"/></literal></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">rprintf<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">FINFO<pos:position pos:line="37" pos:column="30"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="38" pos:column="25">"[%s] i=%d %s %s%s%s%s mode=0%o len=%s%s%s flags=%x\n"<pos:position pos:line="38" pos:column="79"/></literal></expr></argument>,
			<argument><expr><name pos:line="39" pos:column="25">who<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="30">i<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">+<pos:position pos:line="39" pos:column="33"/></operator> <name><name pos:line="39" pos:column="34">flist<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">ndx_start<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>,
			<argument><expr><name pos:line="40" pos:column="25">root<pos:position pos:line="40" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">dir<pos:position pos:line="40" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="36">slash<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">name<pos:position pos:line="40" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">trail<pos:position pos:line="40" pos:column="54"/></name></expr></argument>,
			<argument><expr><operator pos:line="41" pos:column="25">(<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">int<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">)<pos:position pos:line="41" pos:column="30"/></operator><name><name pos:line="41" pos:column="30">file<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">mode<pos:position pos:line="41" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="42">comma_num<pos:position pos:line="41" pos:column="51"/></name><argument_list pos:line="41" pos:column="51">(<argument><expr><call><name pos:line="41" pos:column="52">F_LENGTH<pos:position pos:line="41" pos:column="60"/></name><argument_list pos:line="41" pos:column="60">(<argument><expr><name pos:line="41" pos:column="61">file<pos:position pos:line="41" pos:column="65"/></name></expr></argument>)<pos:position pos:line="41" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr></argument>,
			<argument><expr><name pos:line="42" pos:column="25">uidbuf<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">gidbuf<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="41">file<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">-&gt;<pos:position pos:line="42" pos:column="50"/></operator><name pos:line="42" pos:column="47">flags<pos:position pos:line="42" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></for>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

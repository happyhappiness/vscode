<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_268_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">get_xattr_names<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier> <name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">fname<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ssize_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">list_len<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int64<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">arg<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">namebuf<pos:position pos:line="6" pos:column="21"/></name></expr>)<pos:position pos:line="6" pos:column="22"/></condition><then pos:line="6" pos:column="22"> <block pos:line="6" pos:column="23">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">namebuf_len<pos:position pos:line="7" pos:column="28"/></name> <operator pos:line="7" pos:column="29">=<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="31">1024<pos:position pos:line="7" pos:column="35"/></literal></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">namebuf<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <call><name pos:line="8" pos:column="27">new_array<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">char<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="43">namebuf_len<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">!<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">namebuf<pos:position pos:line="9" pos:column="29"/></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="25">out_of_memory<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">(<argument><expr><literal type="string" pos:line="10" pos:column="39">"get_xattr_names"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition> <block pos:line="13" pos:column="19">{
		<comment type="block" pos:line="14" pos:column="17">/* The length returned includes all the '\0' terminators. */</comment>
		<expr_stmt><expr><name pos:line="15" pos:column="17">list_len<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <call><name pos:line="15" pos:column="28">sys_llistxattr<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">fname<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">namebuf<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">namebuf_len<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">list_len<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">&gt;=<pos:position pos:line="16" pos:column="35"/></operator> <literal type="number" pos:line="16" pos:column="33">0<pos:position pos:line="16" pos:column="34"/></literal></expr>)<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <block pos:line="16" pos:column="36">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">size_t<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">list_len<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">&lt;=<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="49">namebuf_len<pos:position pos:line="17" pos:column="60"/></name></expr>)<pos:position pos:line="17" pos:column="61"/></condition><then pos:line="17" pos:column="61">
				<block type="pseudo"><break pos:line="18" pos:column="33">break;<pos:position pos:line="18" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="19" pos:column="18"/></block></then> <elseif pos:line="19" pos:column="19">else <if pos:line="19" pos:column="24">if <condition pos:line="19" pos:column="27">(<expr><name pos:line="19" pos:column="28">errno<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">==<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="37">ENOTSUP<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
			<block type="pseudo"><return pos:line="20" pos:column="25">return <expr><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr>;<pos:position pos:line="20" pos:column="34"/></return></block></then></if></elseif>
		<elseif pos:line="21" pos:column="17">else <if pos:line="21" pos:column="22">if <condition pos:line="21" pos:column="25">(<expr><name pos:line="21" pos:column="26">errno<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">!=<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">ERANGE<pos:position pos:line="21" pos:column="41"/></name></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42"> <block pos:line="21" pos:column="43">{
			<expr_stmt><expr><name pos:line="22" pos:column="25">arg<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">=<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">namebuf_len<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
		  <label><name pos:line="23" pos:column="19">got_error<pos:position pos:line="23" pos:column="28"/></name>:<pos:position pos:line="23" pos:column="29"/></label>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">rsyserr<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">FERROR_XFER<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="46">errno<pos:position pos:line="24" pos:column="51"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="25" pos:column="33">"get_xattr_names: llistxattr(\"%s\",%s) failed"<pos:position pos:line="25" pos:column="80"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="26" pos:column="33">full_fname<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><name pos:line="26" pos:column="44">fname<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="52">big_num<pos:position pos:line="26" pos:column="59"/></name><argument_list pos:line="26" pos:column="59">(<argument><expr><name pos:line="26" pos:column="60">arg<pos:position pos:line="26" pos:column="63"/></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
			<return pos:line="27" pos:column="25">return <expr><operator pos:line="27" pos:column="32">-<pos:position pos:line="27" pos:column="33"/></operator><literal type="number" pos:line="27" pos:column="33">1<pos:position pos:line="27" pos:column="34"/></literal></expr>;<pos:position pos:line="27" pos:column="35"/></return>
		}<pos:position pos:line="28" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="29" pos:column="17">list_len<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <call><name pos:line="29" pos:column="28">sys_llistxattr<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><name pos:line="29" pos:column="43">fname<pos:position pos:line="29" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">NULL<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="56">0<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">list_len<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">&lt;<pos:position pos:line="30" pos:column="34"/></operator> <literal type="number" pos:line="30" pos:column="32">0<pos:position pos:line="30" pos:column="33"/></literal></expr>)<pos:position pos:line="30" pos:column="34"/></condition><then pos:line="30" pos:column="34"> <block pos:line="30" pos:column="35">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">arg<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <literal type="number" pos:line="31" pos:column="31">0<pos:position pos:line="31" pos:column="32"/></literal></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
			<goto pos:line="32" pos:column="25">goto <name pos:line="32" pos:column="30">got_error<pos:position pos:line="32" pos:column="39"/></name>;<pos:position pos:line="32" pos:column="40"/></goto>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">namebuf_len<pos:position pos:line="34" pos:column="32"/></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="25">free<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">namebuf<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="36" pos:column="17">namebuf_len<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="31">list_len<pos:position pos:line="36" pos:column="39"/></name> <operator pos:line="36" pos:column="40">+<pos:position pos:line="36" pos:column="41"/></operator> <literal type="number" pos:line="36" pos:column="42">1024<pos:position pos:line="36" pos:column="46"/></literal></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><name pos:line="37" pos:column="17">namebuf<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">new_array<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">char<pos:position pos:line="37" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="43">namebuf_len<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">namebuf<pos:position pos:line="38" pos:column="29"/></name></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="25">out_of_memory<pos:position pos:line="39" pos:column="38"/></name><argument_list pos:line="39" pos:column="38">(<argument><expr><literal type="string" pos:line="39" pos:column="39">"get_xattr_names"<pos:position pos:line="39" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></while>

	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">list_len<pos:position pos:line="42" pos:column="24"/></name></expr>;<pos:position pos:line="42" pos:column="25"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

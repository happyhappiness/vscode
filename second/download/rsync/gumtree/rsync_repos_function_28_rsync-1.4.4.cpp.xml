<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_28_rsync-1.4.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">write_sparse<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">f<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="24">char<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buf<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">len<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">l<pos:position pos:line="3" pos:column="8"/></name><init pos:line="3" pos:column="8">=<expr><literal type="number" pos:line="3" pos:column="9">0<pos:position pos:line="3" pos:column="10"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">SPARSE_FILES<pos:position pos:line="5" pos:column="17"/></name></expr></cpp:if>
  <for pos:line="6" pos:column="3">for <control pos:line="6" pos:column="7">(<init><expr><name pos:line="6" pos:column="8">l<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator><literal type="number" pos:line="6" pos:column="10">0<pos:position pos:line="6" pos:column="11"/></literal></expr>;<pos:position pos:line="6" pos:column="12"/></init><condition><expr><name pos:line="6" pos:column="12">l<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">&lt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">len<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&amp;&amp;<pos:position pos:line="6" pos:column="28"/></operator> <name><name pos:line="6" pos:column="21">buf<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">l<pos:position pos:line="6" pos:column="26"/></name></expr>]<pos:position pos:line="6" pos:column="27"/></index></name><operator pos:line="6" pos:column="27">==<pos:position pos:line="6" pos:column="29"/></operator><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr>;<pos:position pos:line="6" pos:column="31"/></condition><incr><expr><name pos:line="6" pos:column="31">l<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">++<pos:position pos:line="6" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="35"/></control> <block type="pseudo"><empty_stmt pos:line="6" pos:column="36">;<pos:position pos:line="6" pos:column="37"/></empty_stmt></block></for>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">l<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">&gt;<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="11">0<pos:position pos:line="8" pos:column="12"/></literal></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">lseek<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">f<pos:position pos:line="9" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="13">l<pos:position pos:line="9" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="15">SEEK_CUR<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">last_byte<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name><name pos:line="11" pos:column="15">buf<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><name pos:line="11" pos:column="19">len<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator><literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr>]<pos:position pos:line="11" pos:column="25"/></index></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">l<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">==<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">len<pos:position pos:line="14" pos:column="15"/></name></expr>)<pos:position pos:line="14" pos:column="16"/></condition><then pos:line="14" pos:column="16"> <block pos:line="14" pos:column="17">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">last_sparse<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">len<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if> 

  <expr_stmt><expr><name pos:line="19" pos:column="3">last_sparse<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>

  <return pos:line="21" pos:column="3">return <expr><operator pos:line="21" pos:column="10">(<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">l<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">+<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">write<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">f<pos:position pos:line="21" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="21" pos:column="23">buf<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">+<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">l<pos:position pos:line="21" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="21" pos:column="29">len<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">l<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator></expr>;<pos:position pos:line="21" pos:column="37"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_430_rsync-2.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fmtint<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">buffer<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">size_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">currlen<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">maxlen<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">long<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">value<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">base<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">min<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">max<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">flags<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">signvalue<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">long<pos:position pos:line="5" pos:column="22"/></name></type> <name pos:line="5" pos:column="23">uvalue<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">convert<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">20<pos:position pos:line="6" pos:column="24"/></literal></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">place<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">spadlen<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt> <comment type="block" pos:line="8" pos:column="26">/* amount to space pad */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">zpadlen<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt> <comment type="block" pos:line="9" pos:column="26">/* amount to zero pad */</comment>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">caps<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><literal type="number" pos:line="10" pos:column="20">0<pos:position pos:line="10" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
	
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">max<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
		<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">max<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt></block></then></if>
	
	<expr_stmt><expr><name pos:line="15" pos:column="9">uvalue<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">value<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
	
	<if pos:line="17" pos:column="9">if<condition pos:line="17" pos:column="11">(<expr><operator pos:line="17" pos:column="12">!<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">flags<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="22">DP_F_UNSIGNED<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">)<pos:position pos:line="17" pos:column="36"/></operator></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37"> <block pos:line="17" pos:column="38">{
		<if pos:line="18" pos:column="17">if<condition pos:line="18" pos:column="19">( <expr><name pos:line="18" pos:column="21">value<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="29">0<pos:position pos:line="18" pos:column="30"/></literal></expr> )<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <block pos:line="18" pos:column="33">{
			<expr_stmt><expr><name pos:line="19" pos:column="25">signvalue<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <literal type="char" pos:line="19" pos:column="37">'-'<pos:position pos:line="19" pos:column="40"/></literal></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">uvalue<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <operator pos:line="20" pos:column="34">-<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">value<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <else pos:line="21" pos:column="19">else <block pos:line="21" pos:column="24">{
			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><name pos:line="22" pos:column="29">flags<pos:position pos:line="22" pos:column="34"/></name> <operator pos:line="22" pos:column="35">&amp;<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="37">DP_F_PLUS<pos:position pos:line="22" pos:column="46"/></name></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">  <comment type="block" pos:line="22" pos:column="49">/* Do a sign (+/i) */</comment>
				<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="33">signvalue<pos:position pos:line="23" pos:column="42"/></name> <operator pos:line="23" pos:column="43">=<pos:position pos:line="23" pos:column="44"/></operator> <literal type="char" pos:line="23" pos:column="45">'+'<pos:position pos:line="23" pos:column="48"/></literal></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt></block></then>
			<elseif pos:line="24" pos:column="25">else <if pos:line="24" pos:column="30">if <condition pos:line="24" pos:column="33">(<expr><name pos:line="24" pos:column="34">flags<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">&amp;<pos:position pos:line="24" pos:column="45"/></operator> <name pos:line="24" pos:column="42">DP_F_SPACE<pos:position pos:line="24" pos:column="52"/></name></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53">
				<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="33">signvalue<pos:position pos:line="25" pos:column="42"/></name> <operator pos:line="25" pos:column="43">=<pos:position pos:line="25" pos:column="44"/></operator> <literal type="char" pos:line="25" pos:column="45">' '<pos:position pos:line="25" pos:column="48"/></literal></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
  
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">flags<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&amp;<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="21">DP_F_UP<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="30">caps<pos:position pos:line="29" pos:column="34"/></name> <operator pos:line="29" pos:column="35">=<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="37">1<pos:position pos:line="29" pos:column="38"/></literal></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt></block></then></if> <comment type="block" pos:line="29" pos:column="40">/* Should characters be upper case? */</comment>

	<do pos:line="31" pos:column="9">do <block pos:line="31" pos:column="12">{
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">convert<pos:position pos:line="32" pos:column="24"/></name><index pos:line="32" pos:column="24">[<expr><name pos:line="32" pos:column="25">place<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">++<pos:position pos:line="32" pos:column="32"/></operator></expr>]<pos:position pos:line="32" pos:column="33"/></index></name> <operator pos:line="32" pos:column="34">=<pos:position pos:line="32" pos:column="35"/></operator>
			<operator pos:line="33" pos:column="25">(<pos:position pos:line="33" pos:column="26"/></operator><ternary><condition><expr><name pos:line="33" pos:column="26">caps<pos:position pos:line="33" pos:column="30"/></name></expr>?<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <expr><literal type="string" pos:line="33" pos:column="32">"0123456789ABCDEF"<pos:position pos:line="33" pos:column="50"/></literal></expr></then><else pos:line="33" pos:column="50">:<expr><literal type="string" pos:line="33" pos:column="51">"0123456789abcdef"<pos:position pos:line="33" pos:column="69"/></literal></expr></else></ternary><operator pos:line="33" pos:column="69">)<pos:position pos:line="33" pos:column="70"/></operator>
			<index pos:line="34" pos:column="25">[<expr><name pos:line="34" pos:column="26">uvalue<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">%<pos:position pos:line="34" pos:column="34"/></operator> <operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">unsigned<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">)<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">base<pos:position pos:line="34" pos:column="49"/></name></expr>  ]<pos:position pos:line="34" pos:column="52"/></index></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">uvalue<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <operator pos:line="35" pos:column="26">(<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">uvalue<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">/<pos:position pos:line="35" pos:column="35"/></operator> <operator pos:line="35" pos:column="36">(<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">unsigned<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">)<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="46">base<pos:position pos:line="35" pos:column="50"/></name> <operator pos:line="35" pos:column="51">)<pos:position pos:line="35" pos:column="52"/></operator></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block> while<condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">uvalue<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">&amp;&amp;<pos:position pos:line="36" pos:column="34"/></operator> <operator pos:line="36" pos:column="27">(<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">place<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">&lt;<pos:position pos:line="36" pos:column="38"/></operator> <literal type="number" pos:line="36" pos:column="36">20<pos:position pos:line="36" pos:column="38"/></literal><operator pos:line="36" pos:column="38">)<pos:position pos:line="36" pos:column="39"/></operator></expr>)<pos:position pos:line="36" pos:column="40"/></condition>;<pos:position pos:line="36" pos:column="41"/></do>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">place<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">==<pos:position pos:line="37" pos:column="21"/></operator> <literal type="number" pos:line="37" pos:column="22">20<pos:position pos:line="37" pos:column="24"/></literal></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="26">place<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">--<pos:position pos:line="37" pos:column="33"/></operator></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">convert<pos:position pos:line="38" pos:column="16"/></name><index pos:line="38" pos:column="16">[<expr><name pos:line="38" pos:column="17">place<pos:position pos:line="38" pos:column="22"/></name></expr>]<pos:position pos:line="38" pos:column="23"/></index></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">0<pos:position pos:line="38" pos:column="27"/></literal></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><name pos:line="40" pos:column="9">zpadlen<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">max<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">-<pos:position pos:line="40" pos:column="24"/></operator> <name pos:line="40" pos:column="25">place<pos:position pos:line="40" pos:column="30"/></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name pos:line="41" pos:column="9">spadlen<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name pos:line="41" pos:column="19">min<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">-<pos:position pos:line="41" pos:column="24"/></operator> <call><name pos:line="41" pos:column="25">MAX<pos:position pos:line="41" pos:column="28"/></name> <argument_list pos:line="41" pos:column="29">(<argument><expr><name pos:line="41" pos:column="30">max<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">place<pos:position pos:line="41" pos:column="40"/></name></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call> <operator pos:line="41" pos:column="42">-<pos:position pos:line="41" pos:column="43"/></operator> <operator pos:line="41" pos:column="44">(<pos:position pos:line="41" pos:column="45"/></operator><ternary><condition><expr><name pos:line="41" pos:column="45">signvalue<pos:position pos:line="41" pos:column="54"/></name></expr> ?<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <expr><literal type="number" pos:line="41" pos:column="57">1<pos:position pos:line="41" pos:column="58"/></literal></expr> <pos:position pos:line="41" pos:column="59"/></then><else pos:line="41" pos:column="59">: <expr><literal type="number" pos:line="41" pos:column="61">0<pos:position pos:line="41" pos:column="62"/></literal></expr></else></ternary><operator pos:line="41" pos:column="62">)<pos:position pos:line="41" pos:column="63"/></operator></expr>;<pos:position pos:line="41" pos:column="64"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">zpadlen<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">&lt;<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="26">zpadlen<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <literal type="number" pos:line="42" pos:column="36">0<pos:position pos:line="42" pos:column="37"/></literal></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt></block></then></if>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">spadlen<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">&lt;<pos:position pos:line="43" pos:column="25"/></operator> <literal type="number" pos:line="43" pos:column="23">0<pos:position pos:line="43" pos:column="24"/></literal></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="26">spadlen<pos:position pos:line="43" pos:column="33"/></name> <operator pos:line="43" pos:column="34">=<pos:position pos:line="43" pos:column="35"/></operator> <literal type="number" pos:line="43" pos:column="36">0<pos:position pos:line="43" pos:column="37"/></literal></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt></block></then></if>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">flags<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&amp;<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="21">DP_F_ZERO<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31"> <block pos:line="44" pos:column="32">{
		<expr_stmt><expr><name pos:line="45" pos:column="17">zpadlen<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <call><name pos:line="45" pos:column="27">MAX<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">zpadlen<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">spadlen<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">spadlen<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">=<pos:position pos:line="46" pos:column="26"/></operator> <literal type="number" pos:line="46" pos:column="27">0<pos:position pos:line="46" pos:column="28"/></literal></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then></if>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">flags<pos:position pos:line="48" pos:column="18"/></name> <operator pos:line="48" pos:column="19">&amp;<pos:position pos:line="48" pos:column="24"/></operator> <name pos:line="48" pos:column="21">DP_F_MINUS<pos:position pos:line="48" pos:column="31"/></name></expr>)<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32"> 
		<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="17">spadlen<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <operator pos:line="49" pos:column="27">-<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">spadlen<pos:position pos:line="49" pos:column="35"/></name></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt></block></then></if> <comment type="block" pos:line="49" pos:column="37">/* Left Justifty */</comment>

<cpp:ifdef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifdef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">DEBUG_SNPRINTF<pos:position pos:line="51" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">printf<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"zpad: %d, spad: %d, min: %d, max: %d, place: %d\n"<pos:position pos:line="52" pos:column="67"/></literal></expr></argument>,
	       <argument><expr><name pos:line="53" pos:column="16">zpadlen<pos:position pos:line="53" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="25">spadlen<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">min<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="39">max<pos:position pos:line="53" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="44">place<pos:position pos:line="53" pos:column="49"/></name></expr></argument>)<pos:position pos:line="53" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="56" pos:column="9">/* Spaces */</comment>
	<while pos:line="57" pos:column="9">while <condition pos:line="57" pos:column="15">(<expr><name pos:line="57" pos:column="16">spadlen<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">&gt;<pos:position pos:line="57" pos:column="28"/></operator> <literal type="number" pos:line="57" pos:column="26">0<pos:position pos:line="57" pos:column="27"/></literal></expr>)<pos:position pos:line="57" pos:column="28"/></condition> <block pos:line="57" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">dopr_outch<pos:position pos:line="58" pos:column="27"/></name> <argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">buffer<pos:position pos:line="58" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">currlen<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">maxlen<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="58" pos:column="54">' '<pos:position pos:line="58" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="59" pos:column="17">--<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">spadlen<pos:position pos:line="59" pos:column="26"/></name></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></while>

	<comment type="block" pos:line="62" pos:column="9">/* Sign */</comment>
	<if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">signvalue<pos:position pos:line="63" pos:column="22"/></name></expr>)<pos:position pos:line="63" pos:column="23"/></condition><then pos:line="63" pos:column="23"> 
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="17">dopr_outch<pos:position pos:line="64" pos:column="27"/></name> <argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">buffer<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="37">currlen<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="46">maxlen<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="54">signvalue<pos:position pos:line="64" pos:column="63"/></name></expr></argument>)<pos:position pos:line="64" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="65"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="66" pos:column="9">/* Zeros */</comment>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">zpadlen<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">&gt;<pos:position pos:line="67" pos:column="25"/></operator> <literal type="number" pos:line="67" pos:column="23">0<pos:position pos:line="67" pos:column="24"/></literal></expr>)<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25"> <block pos:line="67" pos:column="26">{
		<while pos:line="68" pos:column="17">while <condition pos:line="68" pos:column="23">(<expr><name pos:line="68" pos:column="24">zpadlen<pos:position pos:line="68" pos:column="31"/></name> <operator pos:line="68" pos:column="32">&gt;<pos:position pos:line="68" pos:column="36"/></operator> <literal type="number" pos:line="68" pos:column="34">0<pos:position pos:line="68" pos:column="35"/></literal></expr>)<pos:position pos:line="68" pos:column="36"/></condition> <block pos:line="68" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="69" pos:column="25">dopr_outch<pos:position pos:line="69" pos:column="35"/></name> <argument_list pos:line="69" pos:column="36">(<argument><expr><name pos:line="69" pos:column="37">buffer<pos:position pos:line="69" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="45">currlen<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">maxlen<pos:position pos:line="69" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="69" pos:column="62">'0'<pos:position pos:line="69" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="70" pos:column="25">--<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">zpadlen<pos:position pos:line="70" pos:column="34"/></name></expr>;<pos:position pos:line="70" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="71" pos:column="18"/></block></while>
	}<pos:position pos:line="72" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="74" pos:column="9">/* Digits */</comment>
	<while pos:line="75" pos:column="9">while <condition pos:line="75" pos:column="15">(<expr><name pos:line="75" pos:column="16">place<pos:position pos:line="75" pos:column="21"/></name> <operator pos:line="75" pos:column="22">&gt;<pos:position pos:line="75" pos:column="26"/></operator> <literal type="number" pos:line="75" pos:column="24">0<pos:position pos:line="75" pos:column="25"/></literal></expr>)<pos:position pos:line="75" pos:column="26"/></condition> 
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="17">dopr_outch<pos:position pos:line="76" pos:column="27"/></name> <argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">buffer<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">currlen<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="46">maxlen<pos:position pos:line="76" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="54">convert<pos:position pos:line="76" pos:column="61"/></name><index pos:line="76" pos:column="61">[<expr><operator pos:line="76" pos:column="62">--<pos:position pos:line="76" pos:column="64"/></operator><name pos:line="76" pos:column="64">place<pos:position pos:line="76" pos:column="69"/></name></expr>]<pos:position pos:line="76" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="76" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="72"/></expr_stmt></block></while>
  
	<comment type="block" pos:line="78" pos:column="9">/* Left Justified spaces */</comment>
	<while pos:line="79" pos:column="9">while <condition pos:line="79" pos:column="15">(<expr><name pos:line="79" pos:column="16">spadlen<pos:position pos:line="79" pos:column="23"/></name> <operator pos:line="79" pos:column="24">&lt;<pos:position pos:line="79" pos:column="28"/></operator> <literal type="number" pos:line="79" pos:column="26">0<pos:position pos:line="79" pos:column="27"/></literal></expr>)<pos:position pos:line="79" pos:column="28"/></condition> <block pos:line="79" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">dopr_outch<pos:position pos:line="80" pos:column="27"/></name> <argument_list pos:line="80" pos:column="28">(<argument><expr><name pos:line="80" pos:column="29">buffer<pos:position pos:line="80" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="37">currlen<pos:position pos:line="80" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="46">maxlen<pos:position pos:line="80" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="80" pos:column="54">' '<pos:position pos:line="80" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="81" pos:column="17">++<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="19">spadlen<pos:position pos:line="81" pos:column="26"/></name></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="82" pos:column="10"/></block></while>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

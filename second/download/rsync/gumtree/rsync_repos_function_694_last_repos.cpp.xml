<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_694_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">uInt<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">longest_match<pos:position pos:line="1" pos:column="25"/></name><argument_list pos:line="1" pos:column="25">(<argument><expr><name pos:line="1" pos:column="26">s<pos:position pos:line="1" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="29">cur_match<pos:position pos:line="1" pos:column="38"/></name></expr></argument>)<pos:position pos:line="1" pos:column="39"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">IPos<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">cur_match<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>                             <comment type="block" pos:line="3" pos:column="49">/* current match */</comment>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">chain_length<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">s<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">max_chain_length<pos:position pos:line="5" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt><comment type="block" pos:line="5" pos:column="49">/* max hash chain length */</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">register<pos:position pos:line="6" pos:column="13"/></specifier> <name pos:line="6" pos:column="14">Bytef<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">scan<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name><name pos:line="6" pos:column="28">s<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">window<pos:position pos:line="6" pos:column="37"/></name></name> <operator pos:line="6" pos:column="38">+<pos:position pos:line="6" pos:column="39"/></operator> <name><name pos:line="6" pos:column="40">s<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">strstart<pos:position pos:line="6" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt> <comment type="block" pos:line="6" pos:column="53">/* current string */</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">register<pos:position pos:line="7" pos:column="13"/></specifier> <name pos:line="7" pos:column="14">Bytef<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">match<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>                       <comment type="block" pos:line="7" pos:column="50">/* matched string */</comment>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">register<pos:position pos:line="8" pos:column="13"/></specifier> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">len<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>                           <comment type="block" pos:line="8" pos:column="49">/* length of current match */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">best_len<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><name><name pos:line="9" pos:column="20">s<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">prev_length<pos:position pos:line="9" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>              <comment type="block" pos:line="9" pos:column="49">/* best match length so far */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">nice_match<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name><name pos:line="10" pos:column="22">s<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">nice_match<pos:position pos:line="10" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>             <comment type="block" pos:line="10" pos:column="49">/* stop if match long enough */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">IPos<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">limit<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><ternary><condition><expr><name><name pos:line="11" pos:column="18">s<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">strstart<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">&gt;<pos:position pos:line="11" pos:column="34"/></operator> <operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">IPos<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator><call><name pos:line="11" pos:column="38">MAX_DIST<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">s<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr> ?<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51">
        <expr><name><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">strstart<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">-<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">IPos<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator><call><name pos:line="12" pos:column="29">MAX_DIST<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">s<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr> <pos:position pos:line="12" pos:column="41"/></then><else pos:line="12" pos:column="41">: <expr><name pos:line="12" pos:column="43">NIL<pos:position pos:line="12" pos:column="46"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>
    <comment type="block" pos:line="13" pos:column="5">/* Stop when cur_match becomes &lt;= limit. To simplify the code,
     * we prevent matches with the string of window index 0.
     */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">Posf<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">prev<pos:position pos:line="16" pos:column="15"/></name> <init pos:line="16" pos:column="16">= <expr><name><name pos:line="16" pos:column="18">s<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">prev<pos:position pos:line="16" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">uInt<pos:position pos:line="17" pos:column="9"/></name></type> <name pos:line="17" pos:column="10">wmask<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><name><name pos:line="17" pos:column="18">s<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">w_mask<pos:position pos:line="17" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>

<cpp:ifdef pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">ifdef<pos:position pos:line="19" pos:column="7"/></cpp:directive> <name pos:line="19" pos:column="8">UNALIGNED_OK<pos:position pos:line="19" pos:column="20"/></name></cpp:ifdef>
    <comment type="block" pos:line="20" pos:column="5">/* Compare two bytes at a time. Note: this is not always beneficial.
     * Try with and without -DUNALIGNED_OK to check.
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">register<pos:position pos:line="23" pos:column="13"/></specifier> <name pos:line="23" pos:column="14">Bytef<pos:position pos:line="23" pos:column="19"/></name> <modifier pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></modifier></type><name pos:line="23" pos:column="21">strend<pos:position pos:line="23" pos:column="27"/></name> <init pos:line="23" pos:column="28">= <expr><name><name pos:line="23" pos:column="30">s<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">window<pos:position pos:line="23" pos:column="39"/></name></name> <operator pos:line="23" pos:column="40">+<pos:position pos:line="23" pos:column="41"/></operator> <name><name pos:line="23" pos:column="42">s<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">strstart<pos:position pos:line="23" pos:column="53"/></name></name> <operator pos:line="23" pos:column="54">+<pos:position pos:line="23" pos:column="55"/></operator> <name pos:line="23" pos:column="56">MAX_MATCH<pos:position pos:line="23" pos:column="65"/></name> <operator pos:line="23" pos:column="66">-<pos:position pos:line="23" pos:column="67"/></operator> <literal type="number" pos:line="23" pos:column="68">1<pos:position pos:line="23" pos:column="69"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">register<pos:position pos:line="24" pos:column="13"/></specifier> <name pos:line="24" pos:column="14">ush<pos:position pos:line="24" pos:column="17"/></name></type> <name pos:line="24" pos:column="18">scan_start<pos:position pos:line="24" pos:column="28"/></name> <init pos:line="24" pos:column="29">= <expr><operator pos:line="24" pos:column="31">*<pos:position pos:line="24" pos:column="32"/></operator><operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">ushf<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">*<pos:position pos:line="24" pos:column="38"/></operator><operator pos:line="24" pos:column="38">)<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">scan<pos:position pos:line="24" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="25" pos:column="5">register<pos:position pos:line="25" pos:column="13"/></specifier> <name pos:line="25" pos:column="14">ush<pos:position pos:line="25" pos:column="17"/></name></type> <name pos:line="25" pos:column="18">scan_end<pos:position pos:line="25" pos:column="26"/></name>   <init pos:line="25" pos:column="29">= <expr><operator pos:line="25" pos:column="31">*<pos:position pos:line="25" pos:column="32"/></operator><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="33">ushf<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">*<pos:position pos:line="25" pos:column="38"/></operator><operator pos:line="25" pos:column="38">)<pos:position pos:line="25" pos:column="39"/></operator><operator pos:line="25" pos:column="39">(<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">scan<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">+<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">best_len<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-<pos:position pos:line="25" pos:column="54"/></operator><literal type="number" pos:line="25" pos:column="54">1<pos:position pos:line="25" pos:column="55"/></literal><operator pos:line="25" pos:column="55">)<pos:position pos:line="25" pos:column="56"/></operator></expr></init></decl>;<pos:position pos:line="25" pos:column="57"/></decl_stmt>
<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">register<pos:position pos:line="27" pos:column="13"/></specifier> <name pos:line="27" pos:column="14">Bytef<pos:position pos:line="27" pos:column="19"/></name> <modifier pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></modifier></type><name pos:line="27" pos:column="21">strend<pos:position pos:line="27" pos:column="27"/></name> <init pos:line="27" pos:column="28">= <expr><name><name pos:line="27" pos:column="30">s<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">window<pos:position pos:line="27" pos:column="39"/></name></name> <operator pos:line="27" pos:column="40">+<pos:position pos:line="27" pos:column="41"/></operator> <name><name pos:line="27" pos:column="42">s<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">strstart<pos:position pos:line="27" pos:column="53"/></name></name> <operator pos:line="27" pos:column="54">+<pos:position pos:line="27" pos:column="55"/></operator> <name pos:line="27" pos:column="56">MAX_MATCH<pos:position pos:line="27" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">register<pos:position pos:line="28" pos:column="13"/></specifier> <name pos:line="28" pos:column="14">Byte<pos:position pos:line="28" pos:column="18"/></name></type> <name pos:line="28" pos:column="19">scan_end1<pos:position pos:line="28" pos:column="28"/></name>  <init pos:line="28" pos:column="30">= <expr><name><name pos:line="28" pos:column="32">scan<pos:position pos:line="28" pos:column="36"/></name><index pos:line="28" pos:column="36">[<expr><name pos:line="28" pos:column="37">best_len<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-<pos:position pos:line="28" pos:column="46"/></operator><literal type="number" pos:line="28" pos:column="46">1<pos:position pos:line="28" pos:column="47"/></literal></expr>]<pos:position pos:line="28" pos:column="48"/></index></name></expr></init></decl>;<pos:position pos:line="28" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">register<pos:position pos:line="29" pos:column="13"/></specifier> <name pos:line="29" pos:column="14">Byte<pos:position pos:line="29" pos:column="18"/></name></type> <name pos:line="29" pos:column="19">scan_end<pos:position pos:line="29" pos:column="27"/></name>   <init pos:line="29" pos:column="30">= <expr><name><name pos:line="29" pos:column="32">scan<pos:position pos:line="29" pos:column="36"/></name><index pos:line="29" pos:column="36">[<expr><name pos:line="29" pos:column="37">best_len<pos:position pos:line="29" pos:column="45"/></name></expr>]<pos:position pos:line="29" pos:column="46"/></index></name></expr></init></decl>;<pos:position pos:line="29" pos:column="47"/></decl_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="32" pos:column="5">/* The code is optimized for HASH_BITS &gt;= 8 and MAX_MATCH-2 multiple of 16.
     * It is easy to get rid of this optimization if necessary.
     */</comment>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">Assert<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name><name pos:line="35" pos:column="12">s<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">hash_bits<pos:position pos:line="35" pos:column="24"/></name></name> <operator pos:line="35" pos:column="25">&gt;=<pos:position pos:line="35" pos:column="30"/></operator> <literal type="number" pos:line="35" pos:column="28">8<pos:position pos:line="35" pos:column="29"/></literal> <operator pos:line="35" pos:column="30">&amp;&amp;<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="33">MAX_MATCH<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">==<pos:position pos:line="35" pos:column="45"/></operator> <literal type="number" pos:line="35" pos:column="46">258<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="51">"Code too clever"<pos:position pos:line="35" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="70"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* Do not waste too much time if we already have a good match: */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">s<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">prev_length<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">&gt;=<pos:position pos:line="38" pos:column="29"/></operator> <name><name pos:line="38" pos:column="27">s<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">good_match<pos:position pos:line="38" pos:column="40"/></name></name></expr>)<pos:position pos:line="38" pos:column="41"/></condition><then pos:line="38" pos:column="41"> <block pos:line="38" pos:column="42">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">chain_length<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">&gt;&gt;=<pos:position pos:line="39" pos:column="31"/></operator> <literal type="number" pos:line="39" pos:column="26">2<pos:position pos:line="39" pos:column="27"/></literal></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="41" pos:column="5">/* Do not look for matches beyond the end of the input. This is necessary
     * to make deflate deterministic.
     */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">uInt<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">)<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">nice_match<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">&gt;<pos:position pos:line="44" pos:column="30"/></operator> <name><name pos:line="44" pos:column="28">s<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">lookahead<pos:position pos:line="44" pos:column="40"/></name></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41"> <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="42">nice_match<pos:position pos:line="44" pos:column="52"/></name> <operator pos:line="44" pos:column="53">=<pos:position pos:line="44" pos:column="54"/></operator> <name><name pos:line="44" pos:column="55">s<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">-&gt;<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="58">lookahead<pos:position pos:line="44" pos:column="67"/></name></name></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">Assert<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><operator pos:line="46" pos:column="12">(<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="13">ulg<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">)<pos:position pos:line="46" pos:column="17"/></operator><name><name pos:line="46" pos:column="17">s<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">-&gt;<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="20">strstart<pos:position pos:line="46" pos:column="28"/></name></name> <operator pos:line="46" pos:column="29">&lt;=<pos:position pos:line="46" pos:column="34"/></operator> <name><name pos:line="46" pos:column="32">s<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">-&gt;<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="35">window_size<pos:position pos:line="46" pos:column="46"/></name></name><operator pos:line="46" pos:column="46">-<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="47">MIN_LOOKAHEAD<pos:position pos:line="46" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="62">"need lookahead"<pos:position pos:line="46" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="80"/></expr_stmt>

    <do pos:line="48" pos:column="5">do <block pos:line="48" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">Assert<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">cur_match<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">&lt;<pos:position pos:line="49" pos:column="30"/></operator> <name><name pos:line="49" pos:column="28">s<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">strstart<pos:position pos:line="49" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="41">"no future"<pos:position pos:line="49" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">match<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <name><name pos:line="50" pos:column="17">s<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">-&gt;<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="20">window<pos:position pos:line="50" pos:column="26"/></name></name> <operator pos:line="50" pos:column="27">+<pos:position pos:line="50" pos:column="28"/></operator> <name pos:line="50" pos:column="29">cur_match<pos:position pos:line="50" pos:column="38"/></name></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>

        <comment type="block" pos:line="52" pos:column="9">/* Skip to next match if the match length cannot increase
         * or if the match length is less than 2.  Note that the checks below
         * for insufficient lookahead only occur occasionally for performance
         * reasons.  Therefore uninitialized memory will be accessed, and
         * conditional jumps will be made that depend on those values.
         * However the length of the match is limited to the lookahead, so
         * the output of deflate is not affected by the uninitialized values.
         */</comment>
<cpp:if pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">if<pos:position pos:line="60" pos:column="4"/></cpp:directive> <expr><operator pos:line="60" pos:column="5">(<pos:position pos:line="60" pos:column="6"/></operator><call><name pos:line="60" pos:column="6">defined<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">UNALIGNED_OK<pos:position pos:line="60" pos:column="26"/></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call> <operator pos:line="60" pos:column="28">&amp;&amp;<pos:position pos:line="60" pos:column="38"/></operator> <name pos:line="60" pos:column="31">MAX_MATCH<pos:position pos:line="60" pos:column="40"/></name> <operator pos:line="60" pos:column="41">==<pos:position pos:line="60" pos:column="43"/></operator> <literal type="number" pos:line="60" pos:column="44">258<pos:position pos:line="60" pos:column="47"/></literal><operator pos:line="60" pos:column="47">)<pos:position pos:line="60" pos:column="48"/></operator></expr></cpp:if>
        <comment type="block" pos:line="61" pos:column="9">/* This code assumes sizeof(unsigned short) == 2. Do not use
         * UNALIGNED_OK if your compiler uses a different size.
         */</comment>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">*<pos:position pos:line="64" pos:column="14"/></operator><operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">ushf<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">*<pos:position pos:line="64" pos:column="20"/></operator><operator pos:line="64" pos:column="20">)<pos:position pos:line="64" pos:column="21"/></operator><operator pos:line="64" pos:column="21">(<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="22">match<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">+<pos:position pos:line="64" pos:column="28"/></operator><name pos:line="64" pos:column="28">best_len<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">-<pos:position pos:line="64" pos:column="37"/></operator><literal type="number" pos:line="64" pos:column="37">1<pos:position pos:line="64" pos:column="38"/></literal><operator pos:line="64" pos:column="38">)<pos:position pos:line="64" pos:column="39"/></operator> <operator pos:line="64" pos:column="40">!=<pos:position pos:line="64" pos:column="42"/></operator> <name pos:line="64" pos:column="43">scan_end<pos:position pos:line="64" pos:column="51"/></name> <operator pos:line="64" pos:column="52">||<pos:position pos:line="64" pos:column="54"/></operator>
            <operator pos:line="65" pos:column="13">*<pos:position pos:line="65" pos:column="14"/></operator><operator pos:line="65" pos:column="14">(<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">ushf<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">*<pos:position pos:line="65" pos:column="20"/></operator><operator pos:line="65" pos:column="20">)<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">match<pos:position pos:line="65" pos:column="26"/></name> <operator pos:line="65" pos:column="27">!=<pos:position pos:line="65" pos:column="29"/></operator> <name pos:line="65" pos:column="30">scan_start<pos:position pos:line="65" pos:column="40"/></name></expr>)<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41"> <block type="pseudo"><continue pos:line="65" pos:column="42">continue;<pos:position pos:line="65" pos:column="51"/></continue></block></then></if>

        <comment type="block" pos:line="67" pos:column="9">/* It is not necessary to compare scan[2] and match[2] since they are
         * always equal when the other bytes match, given that the hash keys
         * are equal and that HASH_BITS &gt;= 8. Compare 2 bytes at a time at
         * strstart+3, +5, ... up to strstart+257. We check for insufficient
         * lookahead only every 4th comparison; the 128th check will be made
         * at strstart+257. If MAX_MATCH-2 is not a multiple of 8, it is
         * necessary to put more guard bytes at the end of the window, or
         * to check more often for insufficient lookahead.
         */</comment>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">Assert<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><name><name pos:line="76" pos:column="16">scan<pos:position pos:line="76" pos:column="20"/></name><index pos:line="76" pos:column="20">[<expr><literal type="number" pos:line="76" pos:column="21">2<pos:position pos:line="76" pos:column="22"/></literal></expr>]<pos:position pos:line="76" pos:column="23"/></index></name> <operator pos:line="76" pos:column="24">==<pos:position pos:line="76" pos:column="26"/></operator> <name><name pos:line="76" pos:column="27">match<pos:position pos:line="76" pos:column="32"/></name><index pos:line="76" pos:column="32">[<expr><literal type="number" pos:line="76" pos:column="33">2<pos:position pos:line="76" pos:column="34"/></literal></expr>]<pos:position pos:line="76" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="37">"scan[2]?"<pos:position pos:line="76" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="77" pos:column="9">scan<pos:position pos:line="77" pos:column="13"/></name><operator pos:line="77" pos:column="13">++<pos:position pos:line="77" pos:column="15"/></operator></expr><operator pos:line="77" pos:column="15">,<pos:position pos:line="77" pos:column="16"/></operator> <expr><name pos:line="77" pos:column="17">match<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">++<pos:position pos:line="77" pos:column="24"/></operator></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
        <do pos:line="78" pos:column="9">do <block pos:line="78" pos:column="12">{
        }<pos:position pos:line="79" pos:column="10"/></block> while <condition pos:line="79" pos:column="17">(<expr><operator pos:line="79" pos:column="18">*<pos:position pos:line="79" pos:column="19"/></operator><operator pos:line="79" pos:column="19">(<pos:position pos:line="79" pos:column="20"/></operator><name pos:line="79" pos:column="20">ushf<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">*<pos:position pos:line="79" pos:column="25"/></operator><operator pos:line="79" pos:column="25">)<pos:position pos:line="79" pos:column="26"/></operator><operator pos:line="79" pos:column="26">(<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">scan<pos:position pos:line="79" pos:column="31"/></name><operator pos:line="79" pos:column="31">+=<pos:position pos:line="79" pos:column="33"/></operator><literal type="number" pos:line="79" pos:column="33">2<pos:position pos:line="79" pos:column="34"/></literal><operator pos:line="79" pos:column="34">)<pos:position pos:line="79" pos:column="35"/></operator> <operator pos:line="79" pos:column="36">==<pos:position pos:line="79" pos:column="38"/></operator> <operator pos:line="79" pos:column="39">*<pos:position pos:line="79" pos:column="40"/></operator><operator pos:line="79" pos:column="40">(<pos:position pos:line="79" pos:column="41"/></operator><name pos:line="79" pos:column="41">ushf<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">*<pos:position pos:line="79" pos:column="46"/></operator><operator pos:line="79" pos:column="46">)<pos:position pos:line="79" pos:column="47"/></operator><operator pos:line="79" pos:column="47">(<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="48">match<pos:position pos:line="79" pos:column="53"/></name><operator pos:line="79" pos:column="53">+=<pos:position pos:line="79" pos:column="55"/></operator><literal type="number" pos:line="79" pos:column="55">2<pos:position pos:line="79" pos:column="56"/></literal><operator pos:line="79" pos:column="56">)<pos:position pos:line="79" pos:column="57"/></operator> <operator pos:line="79" pos:column="58">&amp;&amp;<pos:position pos:line="79" pos:column="68"/></operator>
                 <operator pos:line="80" pos:column="18">*<pos:position pos:line="80" pos:column="19"/></operator><operator pos:line="80" pos:column="19">(<pos:position pos:line="80" pos:column="20"/></operator><name pos:line="80" pos:column="20">ushf<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">*<pos:position pos:line="80" pos:column="25"/></operator><operator pos:line="80" pos:column="25">)<pos:position pos:line="80" pos:column="26"/></operator><operator pos:line="80" pos:column="26">(<pos:position pos:line="80" pos:column="27"/></operator><name pos:line="80" pos:column="27">scan<pos:position pos:line="80" pos:column="31"/></name><operator pos:line="80" pos:column="31">+=<pos:position pos:line="80" pos:column="33"/></operator><literal type="number" pos:line="80" pos:column="33">2<pos:position pos:line="80" pos:column="34"/></literal><operator pos:line="80" pos:column="34">)<pos:position pos:line="80" pos:column="35"/></operator> <operator pos:line="80" pos:column="36">==<pos:position pos:line="80" pos:column="38"/></operator> <operator pos:line="80" pos:column="39">*<pos:position pos:line="80" pos:column="40"/></operator><operator pos:line="80" pos:column="40">(<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="41">ushf<pos:position pos:line="80" pos:column="45"/></name><operator pos:line="80" pos:column="45">*<pos:position pos:line="80" pos:column="46"/></operator><operator pos:line="80" pos:column="46">)<pos:position pos:line="80" pos:column="47"/></operator><operator pos:line="80" pos:column="47">(<pos:position pos:line="80" pos:column="48"/></operator><name pos:line="80" pos:column="48">match<pos:position pos:line="80" pos:column="53"/></name><operator pos:line="80" pos:column="53">+=<pos:position pos:line="80" pos:column="55"/></operator><literal type="number" pos:line="80" pos:column="55">2<pos:position pos:line="80" pos:column="56"/></literal><operator pos:line="80" pos:column="56">)<pos:position pos:line="80" pos:column="57"/></operator> <operator pos:line="80" pos:column="58">&amp;&amp;<pos:position pos:line="80" pos:column="68"/></operator>
                 <operator pos:line="81" pos:column="18">*<pos:position pos:line="81" pos:column="19"/></operator><operator pos:line="81" pos:column="19">(<pos:position pos:line="81" pos:column="20"/></operator><name pos:line="81" pos:column="20">ushf<pos:position pos:line="81" pos:column="24"/></name><operator pos:line="81" pos:column="24">*<pos:position pos:line="81" pos:column="25"/></operator><operator pos:line="81" pos:column="25">)<pos:position pos:line="81" pos:column="26"/></operator><operator pos:line="81" pos:column="26">(<pos:position pos:line="81" pos:column="27"/></operator><name pos:line="81" pos:column="27">scan<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">+=<pos:position pos:line="81" pos:column="33"/></operator><literal type="number" pos:line="81" pos:column="33">2<pos:position pos:line="81" pos:column="34"/></literal><operator pos:line="81" pos:column="34">)<pos:position pos:line="81" pos:column="35"/></operator> <operator pos:line="81" pos:column="36">==<pos:position pos:line="81" pos:column="38"/></operator> <operator pos:line="81" pos:column="39">*<pos:position pos:line="81" pos:column="40"/></operator><operator pos:line="81" pos:column="40">(<pos:position pos:line="81" pos:column="41"/></operator><name pos:line="81" pos:column="41">ushf<pos:position pos:line="81" pos:column="45"/></name><operator pos:line="81" pos:column="45">*<pos:position pos:line="81" pos:column="46"/></operator><operator pos:line="81" pos:column="46">)<pos:position pos:line="81" pos:column="47"/></operator><operator pos:line="81" pos:column="47">(<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="48">match<pos:position pos:line="81" pos:column="53"/></name><operator pos:line="81" pos:column="53">+=<pos:position pos:line="81" pos:column="55"/></operator><literal type="number" pos:line="81" pos:column="55">2<pos:position pos:line="81" pos:column="56"/></literal><operator pos:line="81" pos:column="56">)<pos:position pos:line="81" pos:column="57"/></operator> <operator pos:line="81" pos:column="58">&amp;&amp;<pos:position pos:line="81" pos:column="68"/></operator>
                 <operator pos:line="82" pos:column="18">*<pos:position pos:line="82" pos:column="19"/></operator><operator pos:line="82" pos:column="19">(<pos:position pos:line="82" pos:column="20"/></operator><name pos:line="82" pos:column="20">ushf<pos:position pos:line="82" pos:column="24"/></name><operator pos:line="82" pos:column="24">*<pos:position pos:line="82" pos:column="25"/></operator><operator pos:line="82" pos:column="25">)<pos:position pos:line="82" pos:column="26"/></operator><operator pos:line="82" pos:column="26">(<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="27">scan<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">+=<pos:position pos:line="82" pos:column="33"/></operator><literal type="number" pos:line="82" pos:column="33">2<pos:position pos:line="82" pos:column="34"/></literal><operator pos:line="82" pos:column="34">)<pos:position pos:line="82" pos:column="35"/></operator> <operator pos:line="82" pos:column="36">==<pos:position pos:line="82" pos:column="38"/></operator> <operator pos:line="82" pos:column="39">*<pos:position pos:line="82" pos:column="40"/></operator><operator pos:line="82" pos:column="40">(<pos:position pos:line="82" pos:column="41"/></operator><name pos:line="82" pos:column="41">ushf<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">*<pos:position pos:line="82" pos:column="46"/></operator><operator pos:line="82" pos:column="46">)<pos:position pos:line="82" pos:column="47"/></operator><operator pos:line="82" pos:column="47">(<pos:position pos:line="82" pos:column="48"/></operator><name pos:line="82" pos:column="48">match<pos:position pos:line="82" pos:column="53"/></name><operator pos:line="82" pos:column="53">+=<pos:position pos:line="82" pos:column="55"/></operator><literal type="number" pos:line="82" pos:column="55">2<pos:position pos:line="82" pos:column="56"/></literal><operator pos:line="82" pos:column="56">)<pos:position pos:line="82" pos:column="57"/></operator> <operator pos:line="82" pos:column="58">&amp;&amp;<pos:position pos:line="82" pos:column="68"/></operator>
                 <name pos:line="83" pos:column="18">scan<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">&lt;<pos:position pos:line="83" pos:column="27"/></operator> <name pos:line="83" pos:column="25">strend<pos:position pos:line="83" pos:column="31"/></name></expr>)<pos:position pos:line="83" pos:column="32"/></condition>;<pos:position pos:line="83" pos:column="33"/></do>
        <comment type="block" pos:line="84" pos:column="9">/* The funny "do {}" generates better code on most compilers */</comment>

        <comment type="block" pos:line="86" pos:column="9">/* Here, scan &lt;= window+strstart+257 */</comment>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">Assert<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><name pos:line="87" pos:column="16">scan<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">&lt;=<pos:position pos:line="87" pos:column="26"/></operator> <name><name pos:line="87" pos:column="24">s<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">-&gt;<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="27">window<pos:position pos:line="87" pos:column="33"/></name></name><operator pos:line="87" pos:column="33">+<pos:position pos:line="87" pos:column="34"/></operator><call pos:line="87" pos:column="34">(<name pos:line="87" pos:column="35">unsigned<pos:position pos:line="87" pos:column="43"/></name>)<argument_list pos:line="87" pos:column="44">(<argument><expr><name><name pos:line="87" pos:column="45">s<pos:position pos:line="87" pos:column="46"/></name><operator pos:line="87" pos:column="46">-&gt;<pos:position pos:line="87" pos:column="51"/></operator><name pos:line="87" pos:column="48">window_size<pos:position pos:line="87" pos:column="59"/></name></name><operator pos:line="87" pos:column="59">-<pos:position pos:line="87" pos:column="60"/></operator><literal type="number" pos:line="87" pos:column="60">1<pos:position pos:line="87" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="64">"wild scan"<pos:position pos:line="87" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="77"/></expr_stmt>
        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><operator pos:line="88" pos:column="13">*<pos:position pos:line="88" pos:column="14"/></operator><name pos:line="88" pos:column="14">scan<pos:position pos:line="88" pos:column="18"/></name> <operator pos:line="88" pos:column="19">==<pos:position pos:line="88" pos:column="21"/></operator> <operator pos:line="88" pos:column="22">*<pos:position pos:line="88" pos:column="23"/></operator><name pos:line="88" pos:column="23">match<pos:position pos:line="88" pos:column="28"/></name></expr>)<pos:position pos:line="88" pos:column="29"/></condition><then pos:line="88" pos:column="29"> <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="30">scan<pos:position pos:line="88" pos:column="34"/></name><operator pos:line="88" pos:column="34">++<pos:position pos:line="88" pos:column="36"/></operator></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="90" pos:column="9">len<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">=<pos:position pos:line="90" pos:column="14"/></operator> <operator pos:line="90" pos:column="15">(<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">MAX_MATCH<pos:position pos:line="90" pos:column="25"/></name> <operator pos:line="90" pos:column="26">-<pos:position pos:line="90" pos:column="27"/></operator> <literal type="number" pos:line="90" pos:column="28">1<pos:position pos:line="90" pos:column="29"/></literal><operator pos:line="90" pos:column="29">)<pos:position pos:line="90" pos:column="30"/></operator> <operator pos:line="90" pos:column="31">-<pos:position pos:line="90" pos:column="32"/></operator> <call pos:line="90" pos:column="33">(<name pos:line="90" pos:column="34">int<pos:position pos:line="90" pos:column="37"/></name>)<argument_list pos:line="90" pos:column="38">(<argument><expr><name pos:line="90" pos:column="39">strend<pos:position pos:line="90" pos:column="45"/></name><operator pos:line="90" pos:column="45">-<pos:position pos:line="90" pos:column="46"/></operator><name pos:line="90" pos:column="46">scan<pos:position pos:line="90" pos:column="50"/></name></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">scan<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">=<pos:position pos:line="91" pos:column="15"/></operator> <name pos:line="91" pos:column="16">strend<pos:position pos:line="91" pos:column="22"/></name> <operator pos:line="91" pos:column="23">-<pos:position pos:line="91" pos:column="24"/></operator> <operator pos:line="91" pos:column="25">(<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="26">MAX_MATCH<pos:position pos:line="91" pos:column="35"/></name><operator pos:line="91" pos:column="35">-<pos:position pos:line="91" pos:column="36"/></operator><literal type="number" pos:line="91" pos:column="36">1<pos:position pos:line="91" pos:column="37"/></literal><operator pos:line="91" pos:column="37">)<pos:position pos:line="91" pos:column="38"/></operator></expr>;<pos:position pos:line="91" pos:column="39"/></expr_stmt>

<cpp:else pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">else<pos:position pos:line="93" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="93" pos:column="7">/* UNALIGNED_OK */</comment>

        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><name><name pos:line="95" pos:column="13">match<pos:position pos:line="95" pos:column="18"/></name><index pos:line="95" pos:column="18">[<expr><name pos:line="95" pos:column="19">best_len<pos:position pos:line="95" pos:column="27"/></name></expr>]<pos:position pos:line="95" pos:column="28"/></index></name>   <operator pos:line="95" pos:column="31">!=<pos:position pos:line="95" pos:column="33"/></operator> <name pos:line="95" pos:column="34">scan_end<pos:position pos:line="95" pos:column="42"/></name>  <operator pos:line="95" pos:column="44">||<pos:position pos:line="95" pos:column="46"/></operator>
            <name><name pos:line="96" pos:column="13">match<pos:position pos:line="96" pos:column="18"/></name><index pos:line="96" pos:column="18">[<expr><name pos:line="96" pos:column="19">best_len<pos:position pos:line="96" pos:column="27"/></name><operator pos:line="96" pos:column="27">-<pos:position pos:line="96" pos:column="28"/></operator><literal type="number" pos:line="96" pos:column="28">1<pos:position pos:line="96" pos:column="29"/></literal></expr>]<pos:position pos:line="96" pos:column="30"/></index></name> <operator pos:line="96" pos:column="31">!=<pos:position pos:line="96" pos:column="33"/></operator> <name pos:line="96" pos:column="34">scan_end1<pos:position pos:line="96" pos:column="43"/></name> <operator pos:line="96" pos:column="44">||<pos:position pos:line="96" pos:column="46"/></operator>
            <operator pos:line="97" pos:column="13">*<pos:position pos:line="97" pos:column="14"/></operator><name pos:line="97" pos:column="14">match<pos:position pos:line="97" pos:column="19"/></name>            <operator pos:line="97" pos:column="31">!=<pos:position pos:line="97" pos:column="33"/></operator> <operator pos:line="97" pos:column="34">*<pos:position pos:line="97" pos:column="35"/></operator><name pos:line="97" pos:column="35">scan<pos:position pos:line="97" pos:column="39"/></name>     <operator pos:line="97" pos:column="44">||<pos:position pos:line="97" pos:column="46"/></operator>
            <operator pos:line="98" pos:column="13">*<pos:position pos:line="98" pos:column="14"/></operator><operator pos:line="98" pos:column="14">++<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="16">match<pos:position pos:line="98" pos:column="21"/></name>          <operator pos:line="98" pos:column="31">!=<pos:position pos:line="98" pos:column="33"/></operator> <name><name pos:line="98" pos:column="34">scan<pos:position pos:line="98" pos:column="38"/></name><index pos:line="98" pos:column="38">[<expr><literal type="number" pos:line="98" pos:column="39">1<pos:position pos:line="98" pos:column="40"/></literal></expr>]<pos:position pos:line="98" pos:column="41"/></index></name></expr>)<pos:position pos:line="98" pos:column="42"/></condition><then pos:line="98" pos:column="42">      <block type="pseudo"><continue pos:line="98" pos:column="48">continue;<pos:position pos:line="98" pos:column="57"/></continue></block></then></if>

        <comment type="block" pos:line="100" pos:column="9">/* The check at best_len-1 can be removed because it will be made
         * again later. (This heuristic is not always a win.)
         * It is not necessary to compare scan[2] and match[2] since they
         * are always equal when the other bytes match, given that
         * the hash keys are equal and that HASH_BITS &gt;= 8.
         */</comment>
        <expr_stmt><expr><name pos:line="106" pos:column="9">scan<pos:position pos:line="106" pos:column="13"/></name> <operator pos:line="106" pos:column="14">+=<pos:position pos:line="106" pos:column="16"/></operator> <literal type="number" pos:line="106" pos:column="17">2<pos:position pos:line="106" pos:column="18"/></literal></expr><operator pos:line="106" pos:column="18">,<pos:position pos:line="106" pos:column="19"/></operator> <expr><name pos:line="106" pos:column="20">match<pos:position pos:line="106" pos:column="25"/></name><operator pos:line="106" pos:column="25">++<pos:position pos:line="106" pos:column="27"/></operator></expr>;<pos:position pos:line="106" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">Assert<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><operator pos:line="107" pos:column="16">*<pos:position pos:line="107" pos:column="17"/></operator><name pos:line="107" pos:column="17">scan<pos:position pos:line="107" pos:column="21"/></name> <operator pos:line="107" pos:column="22">==<pos:position pos:line="107" pos:column="24"/></operator> <operator pos:line="107" pos:column="25">*<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="26">match<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="33">"match[2]?"<pos:position pos:line="107" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="46"/></expr_stmt>

        <comment type="block" pos:line="109" pos:column="9">/* We check for insufficient lookahead only every 8th comparison;
         * the 256th check will be made at strstart+258.
         */</comment>
        <do pos:line="112" pos:column="9">do <block pos:line="112" pos:column="12">{
        }<pos:position pos:line="113" pos:column="10"/></block> while <condition pos:line="113" pos:column="17">(<expr><operator pos:line="113" pos:column="18">*<pos:position pos:line="113" pos:column="19"/></operator><operator pos:line="113" pos:column="19">++<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="21">scan<pos:position pos:line="113" pos:column="25"/></name> <operator pos:line="113" pos:column="26">==<pos:position pos:line="113" pos:column="28"/></operator> <operator pos:line="113" pos:column="29">*<pos:position pos:line="113" pos:column="30"/></operator><operator pos:line="113" pos:column="30">++<pos:position pos:line="113" pos:column="32"/></operator><name pos:line="113" pos:column="32">match<pos:position pos:line="113" pos:column="37"/></name> <operator pos:line="113" pos:column="38">&amp;&amp;<pos:position pos:line="113" pos:column="48"/></operator> <operator pos:line="113" pos:column="41">*<pos:position pos:line="113" pos:column="42"/></operator><operator pos:line="113" pos:column="42">++<pos:position pos:line="113" pos:column="44"/></operator><name pos:line="113" pos:column="44">scan<pos:position pos:line="113" pos:column="48"/></name> <operator pos:line="113" pos:column="49">==<pos:position pos:line="113" pos:column="51"/></operator> <operator pos:line="113" pos:column="52">*<pos:position pos:line="113" pos:column="53"/></operator><operator pos:line="113" pos:column="53">++<pos:position pos:line="113" pos:column="55"/></operator><name pos:line="113" pos:column="55">match<pos:position pos:line="113" pos:column="60"/></name> <operator pos:line="113" pos:column="61">&amp;&amp;<pos:position pos:line="113" pos:column="71"/></operator>
                 <operator pos:line="114" pos:column="18">*<pos:position pos:line="114" pos:column="19"/></operator><operator pos:line="114" pos:column="19">++<pos:position pos:line="114" pos:column="21"/></operator><name pos:line="114" pos:column="21">scan<pos:position pos:line="114" pos:column="25"/></name> <operator pos:line="114" pos:column="26">==<pos:position pos:line="114" pos:column="28"/></operator> <operator pos:line="114" pos:column="29">*<pos:position pos:line="114" pos:column="30"/></operator><operator pos:line="114" pos:column="30">++<pos:position pos:line="114" pos:column="32"/></operator><name pos:line="114" pos:column="32">match<pos:position pos:line="114" pos:column="37"/></name> <operator pos:line="114" pos:column="38">&amp;&amp;<pos:position pos:line="114" pos:column="48"/></operator> <operator pos:line="114" pos:column="41">*<pos:position pos:line="114" pos:column="42"/></operator><operator pos:line="114" pos:column="42">++<pos:position pos:line="114" pos:column="44"/></operator><name pos:line="114" pos:column="44">scan<pos:position pos:line="114" pos:column="48"/></name> <operator pos:line="114" pos:column="49">==<pos:position pos:line="114" pos:column="51"/></operator> <operator pos:line="114" pos:column="52">*<pos:position pos:line="114" pos:column="53"/></operator><operator pos:line="114" pos:column="53">++<pos:position pos:line="114" pos:column="55"/></operator><name pos:line="114" pos:column="55">match<pos:position pos:line="114" pos:column="60"/></name> <operator pos:line="114" pos:column="61">&amp;&amp;<pos:position pos:line="114" pos:column="71"/></operator>
                 <operator pos:line="115" pos:column="18">*<pos:position pos:line="115" pos:column="19"/></operator><operator pos:line="115" pos:column="19">++<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="21">scan<pos:position pos:line="115" pos:column="25"/></name> <operator pos:line="115" pos:column="26">==<pos:position pos:line="115" pos:column="28"/></operator> <operator pos:line="115" pos:column="29">*<pos:position pos:line="115" pos:column="30"/></operator><operator pos:line="115" pos:column="30">++<pos:position pos:line="115" pos:column="32"/></operator><name pos:line="115" pos:column="32">match<pos:position pos:line="115" pos:column="37"/></name> <operator pos:line="115" pos:column="38">&amp;&amp;<pos:position pos:line="115" pos:column="48"/></operator> <operator pos:line="115" pos:column="41">*<pos:position pos:line="115" pos:column="42"/></operator><operator pos:line="115" pos:column="42">++<pos:position pos:line="115" pos:column="44"/></operator><name pos:line="115" pos:column="44">scan<pos:position pos:line="115" pos:column="48"/></name> <operator pos:line="115" pos:column="49">==<pos:position pos:line="115" pos:column="51"/></operator> <operator pos:line="115" pos:column="52">*<pos:position pos:line="115" pos:column="53"/></operator><operator pos:line="115" pos:column="53">++<pos:position pos:line="115" pos:column="55"/></operator><name pos:line="115" pos:column="55">match<pos:position pos:line="115" pos:column="60"/></name> <operator pos:line="115" pos:column="61">&amp;&amp;<pos:position pos:line="115" pos:column="71"/></operator>
                 <operator pos:line="116" pos:column="18">*<pos:position pos:line="116" pos:column="19"/></operator><operator pos:line="116" pos:column="19">++<pos:position pos:line="116" pos:column="21"/></operator><name pos:line="116" pos:column="21">scan<pos:position pos:line="116" pos:column="25"/></name> <operator pos:line="116" pos:column="26">==<pos:position pos:line="116" pos:column="28"/></operator> <operator pos:line="116" pos:column="29">*<pos:position pos:line="116" pos:column="30"/></operator><operator pos:line="116" pos:column="30">++<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="32">match<pos:position pos:line="116" pos:column="37"/></name> <operator pos:line="116" pos:column="38">&amp;&amp;<pos:position pos:line="116" pos:column="48"/></operator> <operator pos:line="116" pos:column="41">*<pos:position pos:line="116" pos:column="42"/></operator><operator pos:line="116" pos:column="42">++<pos:position pos:line="116" pos:column="44"/></operator><name pos:line="116" pos:column="44">scan<pos:position pos:line="116" pos:column="48"/></name> <operator pos:line="116" pos:column="49">==<pos:position pos:line="116" pos:column="51"/></operator> <operator pos:line="116" pos:column="52">*<pos:position pos:line="116" pos:column="53"/></operator><operator pos:line="116" pos:column="53">++<pos:position pos:line="116" pos:column="55"/></operator><name pos:line="116" pos:column="55">match<pos:position pos:line="116" pos:column="60"/></name> <operator pos:line="116" pos:column="61">&amp;&amp;<pos:position pos:line="116" pos:column="71"/></operator>
                 <name pos:line="117" pos:column="18">scan<pos:position pos:line="117" pos:column="22"/></name> <operator pos:line="117" pos:column="23">&lt;<pos:position pos:line="117" pos:column="27"/></operator> <name pos:line="117" pos:column="25">strend<pos:position pos:line="117" pos:column="31"/></name></expr>)<pos:position pos:line="117" pos:column="32"/></condition>;<pos:position pos:line="117" pos:column="33"/></do>

        <expr_stmt><expr><call><name pos:line="119" pos:column="9">Assert<pos:position pos:line="119" pos:column="15"/></name><argument_list pos:line="119" pos:column="15">(<argument><expr><name pos:line="119" pos:column="16">scan<pos:position pos:line="119" pos:column="20"/></name> <operator pos:line="119" pos:column="21">&lt;=<pos:position pos:line="119" pos:column="26"/></operator> <name><name pos:line="119" pos:column="24">s<pos:position pos:line="119" pos:column="25"/></name><operator pos:line="119" pos:column="25">-&gt;<pos:position pos:line="119" pos:column="30"/></operator><name pos:line="119" pos:column="27">window<pos:position pos:line="119" pos:column="33"/></name></name><operator pos:line="119" pos:column="33">+<pos:position pos:line="119" pos:column="34"/></operator><call pos:line="119" pos:column="34">(<name pos:line="119" pos:column="35">unsigned<pos:position pos:line="119" pos:column="43"/></name>)<argument_list pos:line="119" pos:column="44">(<argument><expr><name><name pos:line="119" pos:column="45">s<pos:position pos:line="119" pos:column="46"/></name><operator pos:line="119" pos:column="46">-&gt;<pos:position pos:line="119" pos:column="51"/></operator><name pos:line="119" pos:column="48">window_size<pos:position pos:line="119" pos:column="59"/></name></name><operator pos:line="119" pos:column="59">-<pos:position pos:line="119" pos:column="60"/></operator><literal type="number" pos:line="119" pos:column="60">1<pos:position pos:line="119" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="64">"wild scan"<pos:position pos:line="119" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="77"/></expr_stmt>

        <expr_stmt><expr><name pos:line="121" pos:column="9">len<pos:position pos:line="121" pos:column="12"/></name> <operator pos:line="121" pos:column="13">=<pos:position pos:line="121" pos:column="14"/></operator> <name pos:line="121" pos:column="15">MAX_MATCH<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">-<pos:position pos:line="121" pos:column="26"/></operator> <call pos:line="121" pos:column="27">(<name pos:line="121" pos:column="28">int<pos:position pos:line="121" pos:column="31"/></name>)<argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">strend<pos:position pos:line="121" pos:column="39"/></name> <operator pos:line="121" pos:column="40">-<pos:position pos:line="121" pos:column="41"/></operator> <name pos:line="121" pos:column="42">scan<pos:position pos:line="121" pos:column="46"/></name></expr></argument>)<pos:position pos:line="121" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="122" pos:column="9">scan<pos:position pos:line="122" pos:column="13"/></name> <operator pos:line="122" pos:column="14">=<pos:position pos:line="122" pos:column="15"/></operator> <name pos:line="122" pos:column="16">strend<pos:position pos:line="122" pos:column="22"/></name> <operator pos:line="122" pos:column="23">-<pos:position pos:line="122" pos:column="24"/></operator> <name pos:line="122" pos:column="25">MAX_MATCH<pos:position pos:line="122" pos:column="34"/></name></expr>;<pos:position pos:line="122" pos:column="35"/></expr_stmt>

<cpp:endif pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">endif<pos:position pos:line="124" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="124" pos:column="8">/* UNALIGNED_OK */</comment>

        <if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><name pos:line="126" pos:column="13">len<pos:position pos:line="126" pos:column="16"/></name> <operator pos:line="126" pos:column="17">&gt;<pos:position pos:line="126" pos:column="21"/></operator> <name pos:line="126" pos:column="19">best_len<pos:position pos:line="126" pos:column="27"/></name></expr>)<pos:position pos:line="126" pos:column="28"/></condition><then pos:line="126" pos:column="28"> <block pos:line="126" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="127" pos:column="13">s<pos:position pos:line="127" pos:column="14"/></name><operator pos:line="127" pos:column="14">-&gt;<pos:position pos:line="127" pos:column="19"/></operator><name pos:line="127" pos:column="16">match_start<pos:position pos:line="127" pos:column="27"/></name></name> <operator pos:line="127" pos:column="28">=<pos:position pos:line="127" pos:column="29"/></operator> <name pos:line="127" pos:column="30">cur_match<pos:position pos:line="127" pos:column="39"/></name></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="128" pos:column="13">best_len<pos:position pos:line="128" pos:column="21"/></name> <operator pos:line="128" pos:column="22">=<pos:position pos:line="128" pos:column="23"/></operator> <name pos:line="128" pos:column="24">len<pos:position pos:line="128" pos:column="27"/></name></expr>;<pos:position pos:line="128" pos:column="28"/></expr_stmt>
            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name pos:line="129" pos:column="17">len<pos:position pos:line="129" pos:column="20"/></name> <operator pos:line="129" pos:column="21">&gt;=<pos:position pos:line="129" pos:column="26"/></operator> <name pos:line="129" pos:column="24">nice_match<pos:position pos:line="129" pos:column="34"/></name></expr>)<pos:position pos:line="129" pos:column="35"/></condition><then pos:line="129" pos:column="35"> <block type="pseudo"><break pos:line="129" pos:column="36">break;<pos:position pos:line="129" pos:column="42"/></break></block></then></if>
<cpp:ifdef pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">ifdef<pos:position pos:line="130" pos:column="7"/></cpp:directive> <name pos:line="130" pos:column="8">UNALIGNED_OK<pos:position pos:line="130" pos:column="20"/></name></cpp:ifdef>
            <expr_stmt><expr><name pos:line="131" pos:column="13">scan_end<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">=<pos:position pos:line="131" pos:column="23"/></operator> <operator pos:line="131" pos:column="24">*<pos:position pos:line="131" pos:column="25"/></operator><operator pos:line="131" pos:column="25">(<pos:position pos:line="131" pos:column="26"/></operator><name pos:line="131" pos:column="26">ushf<pos:position pos:line="131" pos:column="30"/></name><operator pos:line="131" pos:column="30">*<pos:position pos:line="131" pos:column="31"/></operator><operator pos:line="131" pos:column="31">)<pos:position pos:line="131" pos:column="32"/></operator><operator pos:line="131" pos:column="32">(<pos:position pos:line="131" pos:column="33"/></operator><name pos:line="131" pos:column="33">scan<pos:position pos:line="131" pos:column="37"/></name><operator pos:line="131" pos:column="37">+<pos:position pos:line="131" pos:column="38"/></operator><name pos:line="131" pos:column="38">best_len<pos:position pos:line="131" pos:column="46"/></name><operator pos:line="131" pos:column="46">-<pos:position pos:line="131" pos:column="47"/></operator><literal type="number" pos:line="131" pos:column="47">1<pos:position pos:line="131" pos:column="48"/></literal><operator pos:line="131" pos:column="48">)<pos:position pos:line="131" pos:column="49"/></operator></expr>;<pos:position pos:line="131" pos:column="50"/></expr_stmt>
<cpp:else pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">else<pos:position pos:line="132" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><name pos:line="133" pos:column="13">scan_end1<pos:position pos:line="133" pos:column="22"/></name>  <operator pos:line="133" pos:column="24">=<pos:position pos:line="133" pos:column="25"/></operator> <name><name pos:line="133" pos:column="26">scan<pos:position pos:line="133" pos:column="30"/></name><index pos:line="133" pos:column="30">[<expr><name pos:line="133" pos:column="31">best_len<pos:position pos:line="133" pos:column="39"/></name><operator pos:line="133" pos:column="39">-<pos:position pos:line="133" pos:column="40"/></operator><literal type="number" pos:line="133" pos:column="40">1<pos:position pos:line="133" pos:column="41"/></literal></expr>]<pos:position pos:line="133" pos:column="42"/></index></name></expr>;<pos:position pos:line="133" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="134" pos:column="13">scan_end<pos:position pos:line="134" pos:column="21"/></name>   <operator pos:line="134" pos:column="24">=<pos:position pos:line="134" pos:column="25"/></operator> <name><name pos:line="134" pos:column="26">scan<pos:position pos:line="134" pos:column="30"/></name><index pos:line="134" pos:column="30">[<expr><name pos:line="134" pos:column="31">best_len<pos:position pos:line="134" pos:column="39"/></name></expr>]<pos:position pos:line="134" pos:column="40"/></index></name></expr>;<pos:position pos:line="134" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">endif<pos:position pos:line="135" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="136" pos:column="10"/></block></then></if>
    }<pos:position pos:line="137" pos:column="6"/></block> while <condition pos:line="137" pos:column="13">(<expr><operator pos:line="137" pos:column="14">(<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">cur_match<pos:position pos:line="137" pos:column="24"/></name> <operator pos:line="137" pos:column="25">=<pos:position pos:line="137" pos:column="26"/></operator> <name><name pos:line="137" pos:column="27">prev<pos:position pos:line="137" pos:column="31"/></name><index pos:line="137" pos:column="31">[<expr><name pos:line="137" pos:column="32">cur_match<pos:position pos:line="137" pos:column="41"/></name> <operator pos:line="137" pos:column="42">&amp;<pos:position pos:line="137" pos:column="47"/></operator> <name pos:line="137" pos:column="44">wmask<pos:position pos:line="137" pos:column="49"/></name></expr>]<pos:position pos:line="137" pos:column="50"/></index></name><operator pos:line="137" pos:column="50">)<pos:position pos:line="137" pos:column="51"/></operator> <operator pos:line="137" pos:column="52">&gt;<pos:position pos:line="137" pos:column="56"/></operator> <name pos:line="137" pos:column="54">limit<pos:position pos:line="137" pos:column="59"/></name>
             <operator pos:line="138" pos:column="14">&amp;&amp;<pos:position pos:line="138" pos:column="24"/></operator> <operator pos:line="138" pos:column="17">--<pos:position pos:line="138" pos:column="19"/></operator><name pos:line="138" pos:column="19">chain_length<pos:position pos:line="138" pos:column="31"/></name> <operator pos:line="138" pos:column="32">!=<pos:position pos:line="138" pos:column="34"/></operator> <literal type="number" pos:line="138" pos:column="35">0<pos:position pos:line="138" pos:column="36"/></literal></expr>)<pos:position pos:line="138" pos:column="37"/></condition>;<pos:position pos:line="138" pos:column="38"/></do>

    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><operator pos:line="140" pos:column="9">(<pos:position pos:line="140" pos:column="10"/></operator><name pos:line="140" pos:column="10">uInt<pos:position pos:line="140" pos:column="14"/></name><operator pos:line="140" pos:column="14">)<pos:position pos:line="140" pos:column="15"/></operator><name pos:line="140" pos:column="15">best_len<pos:position pos:line="140" pos:column="23"/></name> <operator pos:line="140" pos:column="24">&lt;=<pos:position pos:line="140" pos:column="29"/></operator> <name><name pos:line="140" pos:column="27">s<pos:position pos:line="140" pos:column="28"/></name><operator pos:line="140" pos:column="28">-&gt;<pos:position pos:line="140" pos:column="33"/></operator><name pos:line="140" pos:column="30">lookahead<pos:position pos:line="140" pos:column="39"/></name></name></expr>)<pos:position pos:line="140" pos:column="40"/></condition><then pos:line="140" pos:column="40"> <block type="pseudo"><return pos:line="140" pos:column="41">return <expr><operator pos:line="140" pos:column="48">(<pos:position pos:line="140" pos:column="49"/></operator><name pos:line="140" pos:column="49">uInt<pos:position pos:line="140" pos:column="53"/></name><operator pos:line="140" pos:column="53">)<pos:position pos:line="140" pos:column="54"/></operator><name pos:line="140" pos:column="54">best_len<pos:position pos:line="140" pos:column="62"/></name></expr>;<pos:position pos:line="140" pos:column="63"/></return></block></then></if>
    <return pos:line="141" pos:column="5">return <expr><name><name pos:line="141" pos:column="12">s<pos:position pos:line="141" pos:column="13"/></name><operator pos:line="141" pos:column="13">-&gt;<pos:position pos:line="141" pos:column="18"/></operator><name pos:line="141" pos:column="15">lookahead<pos:position pos:line="141" pos:column="24"/></name></name></expr>;<pos:position pos:line="141" pos:column="25"/></return>
}<pos:position pos:line="142" pos:column="2"/></block></unit>

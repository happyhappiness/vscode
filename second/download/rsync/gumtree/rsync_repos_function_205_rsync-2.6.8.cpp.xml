<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_205_rsync-2.6.8.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">try_dests_non<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">file_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">file<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">fname<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">ndx<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
			 <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">itemizing<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">maybe_ATTRS_REPORT<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>,
			 <parameter><decl><type><name><name pos:line="3" pos:column="26">enum<pos:position pos:line="3" pos:column="30"/></name> <name pos:line="3" pos:column="31">logcode<pos:position pos:line="3" pos:column="38"/></name></name></type> <name pos:line="3" pos:column="39">code<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">fnamebuf<pos:position pos:line="5" pos:column="22"/></name><index pos:line="5" pos:column="22">[<expr><name pos:line="5" pos:column="23">MAXPATHLEN<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">STRUCT_STAT<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">st<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

	<do pos:line="9" pos:column="9">do <block pos:line="9" pos:column="12">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">pathjoin<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">fnamebuf<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">MAXPATHLEN<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">basis_dir<pos:position pos:line="10" pos:column="57"/></name><index pos:line="10" pos:column="57">[<expr><name pos:line="10" pos:column="58">i<pos:position pos:line="10" pos:column="59"/></name></expr>]<pos:position pos:line="10" pos:column="60"/></index></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="62">fname<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">link_stat<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">fnamebuf<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="41">&amp;<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="42">st<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="46">0<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call> <operator pos:line="11" pos:column="49">&lt;<pos:position pos:line="11" pos:column="53"/></operator> <literal type="number" pos:line="11" pos:column="51">0<pos:position pos:line="11" pos:column="52"/></literal> <operator pos:line="11" pos:column="53">||<pos:position pos:line="11" pos:column="55"/></operator> <call><name pos:line="11" pos:column="56">S_ISDIR<pos:position pos:line="11" pos:column="63"/></name><argument_list pos:line="11" pos:column="63">(<argument><expr><name><name pos:line="11" pos:column="64">st<pos:position pos:line="11" pos:column="66"/></name><operator pos:line="11" pos:column="66">.<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="67">st_mode<pos:position pos:line="11" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call>
		 <operator pos:line="12" pos:column="18">||<pos:position pos:line="12" pos:column="20"/></operator> <operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><call><name pos:line="12" pos:column="22">unchanged_attrs<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">file<pos:position pos:line="12" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="44">&amp;<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="45">st<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">S_ISLNK<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">file<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">mode<pos:position pos:line="14" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <block pos:line="14" pos:column="42">{
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">SUPPORT_LINKS<pos:position pos:line="15" pos:column="21"/></name></cpp:ifdef>
			<decl_stmt><decl><type><name pos:line="16" pos:column="25">char<pos:position pos:line="16" pos:column="29"/></name></type> <name><name pos:line="16" pos:column="30">lnk<pos:position pos:line="16" pos:column="33"/></name><index pos:line="16" pos:column="33">[<expr><name pos:line="16" pos:column="34">MAXPATHLEN<pos:position pos:line="16" pos:column="44"/></name></expr>]<pos:position pos:line="16" pos:column="45"/></index></name></decl>;<pos:position pos:line="16" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="17" pos:column="25">int<pos:position pos:line="17" pos:column="28"/></name></type> <name pos:line="17" pos:column="29">len<pos:position pos:line="17" pos:column="32"/></name></decl>;<pos:position pos:line="17" pos:column="33"/></decl_stmt>
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><operator pos:line="18" pos:column="29">(<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">len<pos:position pos:line="18" pos:column="33"/></name> <operator pos:line="18" pos:column="34">=<pos:position pos:line="18" pos:column="35"/></operator> <call><name pos:line="18" pos:column="36">readlink<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name pos:line="18" pos:column="45">fnamebuf<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">lnk<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="60">MAXPATHLEN<pos:position pos:line="18" pos:column="70"/></name><operator pos:line="18" pos:column="70">-<pos:position pos:line="18" pos:column="71"/></operator><literal type="number" pos:line="18" pos:column="71">1<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call><operator pos:line="18" pos:column="73">)<pos:position pos:line="18" pos:column="74"/></operator> <operator pos:line="18" pos:column="75">&lt;=<pos:position pos:line="18" pos:column="80"/></operator> <literal type="number" pos:line="18" pos:column="78">0<pos:position pos:line="18" pos:column="79"/></literal></expr>)<pos:position pos:line="18" pos:column="80"/></condition><then pos:line="18" pos:column="80">
				<block type="pseudo"><continue pos:line="19" pos:column="33">continue;<pos:position pos:line="19" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><name><name pos:line="20" pos:column="25">lnk<pos:position pos:line="20" pos:column="28"/></name><index pos:line="20" pos:column="28">[<expr><name pos:line="20" pos:column="29">len<pos:position pos:line="20" pos:column="32"/></name></expr>]<pos:position pos:line="20" pos:column="33"/></index></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <literal type="char" pos:line="20" pos:column="36">'\0'<pos:position pos:line="20" pos:column="40"/></literal></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><call><name pos:line="21" pos:column="29">strcmp<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">(<argument><expr><name pos:line="21" pos:column="36">lnk<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="41">file<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">-&gt;<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="47">u<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">.<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="49">link<pos:position pos:line="21" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call> <operator pos:line="21" pos:column="55">!=<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">0<pos:position pos:line="21" pos:column="59"/></literal></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
				<block type="pseudo"><continue pos:line="23" pos:column="33">continue;<pos:position pos:line="23" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then> <elseif pos:line="24" pos:column="19">else <if pos:line="24" pos:column="24">if <condition pos:line="24" pos:column="27">(<expr><call><name pos:line="24" pos:column="28">IS_SPECIAL<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">file<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">mode<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51"> <block pos:line="24" pos:column="52">{
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">IS_SPECIAL<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name><name pos:line="25" pos:column="41">st<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">.<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">st_mode<pos:position pos:line="25" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call> <operator pos:line="25" pos:column="53">||<pos:position pos:line="25" pos:column="55"/></operator> <name><name pos:line="25" pos:column="56">st<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">.<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">st_rdev<pos:position pos:line="25" pos:column="66"/></name></name> <operator pos:line="25" pos:column="67">!=<pos:position pos:line="25" pos:column="69"/></operator> <name><name pos:line="25" pos:column="70">file<pos:position pos:line="25" pos:column="74"/></name><operator pos:line="25" pos:column="74">-&gt;<pos:position pos:line="25" pos:column="79"/></operator><name pos:line="25" pos:column="76">u<pos:position pos:line="25" pos:column="77"/></name><operator pos:line="25" pos:column="77">.<pos:position pos:line="25" pos:column="78"/></operator><name pos:line="25" pos:column="78">rdev<pos:position pos:line="25" pos:column="82"/></name></name></expr>)<pos:position pos:line="25" pos:column="83"/></condition><then pos:line="25" pos:column="83">
				<block type="pseudo"><continue pos:line="26" pos:column="33">continue;<pos:position pos:line="26" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if></elseif> <elseif pos:line="27" pos:column="19">else <if pos:line="27" pos:column="24">if <condition pos:line="27" pos:column="27">(<expr><call><name pos:line="27" pos:column="28">IS_DEVICE<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name><name pos:line="27" pos:column="38">file<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">mode<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50"> <block pos:line="27" pos:column="51">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">!<pos:position pos:line="28" pos:column="30"/></operator><call><name pos:line="28" pos:column="30">IS_DEVICE<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">(<argument><expr><name><name pos:line="28" pos:column="40">st<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">.<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">st_mode<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call> <operator pos:line="28" pos:column="52">||<pos:position pos:line="28" pos:column="54"/></operator> <name><name pos:line="28" pos:column="55">st<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">.<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">st_rdev<pos:position pos:line="28" pos:column="65"/></name></name> <operator pos:line="28" pos:column="66">!=<pos:position pos:line="28" pos:column="68"/></operator> <name><name pos:line="28" pos:column="69">file<pos:position pos:line="28" pos:column="73"/></name><operator pos:line="28" pos:column="73">-&gt;<pos:position pos:line="28" pos:column="78"/></operator><name pos:line="28" pos:column="75">u<pos:position pos:line="28" pos:column="76"/></name><operator pos:line="28" pos:column="76">.<pos:position pos:line="28" pos:column="77"/></operator><name pos:line="28" pos:column="77">rdev<pos:position pos:line="28" pos:column="81"/></name></name></expr>)<pos:position pos:line="28" pos:column="82"/></condition><then pos:line="28" pos:column="82">
				<block type="pseudo"><continue pos:line="29" pos:column="33">continue;<pos:position pos:line="29" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="30" pos:column="18"/></block></then></if></elseif> <else pos:line="30" pos:column="19">else <block pos:line="30" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">rprintf<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">FERROR<pos:position pos:line="31" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="32" pos:column="33">"internal: try_dests_non() called with invalid mode (%o)\n"<pos:position pos:line="32" pos:column="92"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="33" pos:column="33">file<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">mode<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">exit_cleanup<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">RERR_UNSUPPORTED<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></else></if>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name pos:line="36" pos:column="21">link_dest<pos:position pos:line="36" pos:column="30"/></name>
<cpp:ifndef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifndef<pos:position pos:line="37" pos:column="8"/></cpp:directive> <name pos:line="37" pos:column="9">CAN_HARDLINK_SYMLINK<pos:position pos:line="37" pos:column="29"/></name></cpp:ifndef>
		 <operator pos:line="38" pos:column="18">&amp;&amp;<pos:position pos:line="38" pos:column="28"/></operator> <operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><call><name pos:line="38" pos:column="22">S_ISLNK<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name><name pos:line="38" pos:column="30">file<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">mode<pos:position pos:line="38" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifndef<pos:position pos:line="40" pos:column="8"/></cpp:directive> <name pos:line="40" pos:column="9">CAN_HARDLINK_SPECIAL<pos:position pos:line="40" pos:column="29"/></name></cpp:ifndef>
		 <operator pos:line="41" pos:column="18">&amp;&amp;<pos:position pos:line="41" pos:column="28"/></operator> <operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><call><name pos:line="41" pos:column="22">IS_SPECIAL<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name><name pos:line="41" pos:column="33">file<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">mode<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call> <operator pos:line="41" pos:column="45">&amp;&amp;<pos:position pos:line="41" pos:column="55"/></operator> <operator pos:line="41" pos:column="48">!<pos:position pos:line="41" pos:column="49"/></operator><call><name pos:line="41" pos:column="49">IS_DEVICE<pos:position pos:line="41" pos:column="58"/></name><argument_list pos:line="41" pos:column="58">(<argument><expr><name><name pos:line="41" pos:column="59">file<pos:position pos:line="41" pos:column="63"/></name><operator pos:line="41" pos:column="63">-&gt;<pos:position pos:line="41" pos:column="68"/></operator><name pos:line="41" pos:column="65">mode<pos:position pos:line="41" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
		)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><call><name pos:line="44" pos:column="29">do_link<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name pos:line="44" pos:column="37">fnamebuf<pos:position pos:line="44" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="47">fname<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call> <operator pos:line="44" pos:column="54">&lt;<pos:position pos:line="44" pos:column="58"/></operator> <literal type="number" pos:line="44" pos:column="56">0<pos:position pos:line="44" pos:column="57"/></literal></expr>)<pos:position pos:line="44" pos:column="58"/></condition><then pos:line="44" pos:column="58"> <block pos:line="44" pos:column="59">{
				<expr_stmt><expr><call><name pos:line="45" pos:column="33">rsyserr<pos:position pos:line="45" pos:column="40"/></name><argument_list pos:line="45" pos:column="40">(<argument><expr><name pos:line="45" pos:column="41">FERROR<pos:position pos:line="45" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="49">errno<pos:position pos:line="45" pos:column="54"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="46" pos:column="41">"failed to hard-link %s with %s"<pos:position pos:line="46" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name pos:line="47" pos:column="41">fnamebuf<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">fname<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
				<break pos:line="48" pos:column="33">break;<pos:position pos:line="48" pos:column="39"/></break>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">preserve_hard_links<pos:position pos:line="50" pos:column="48"/></name> <operator pos:line="50" pos:column="49">&amp;&amp;<pos:position pos:line="50" pos:column="59"/></operator> <name><name pos:line="50" pos:column="52">file<pos:position pos:line="50" pos:column="56"/></name><operator pos:line="50" pos:column="56">-&gt;<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="58">link_u<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">.<pos:position pos:line="50" pos:column="65"/></operator><name pos:line="50" pos:column="65">links<pos:position pos:line="50" pos:column="70"/></name></name></expr>)<pos:position pos:line="50" pos:column="71"/></condition><then pos:line="50" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="33">hard_link_cluster<pos:position pos:line="51" pos:column="50"/></name><argument_list pos:line="51" pos:column="50">(<argument><expr><name pos:line="51" pos:column="51">file<pos:position pos:line="51" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="57">ndx<pos:position pos:line="51" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="62">itemizing<pos:position pos:line="51" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="73">code<pos:position pos:line="51" pos:column="77"/></name></expr></argument>)<pos:position pos:line="51" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="79"/></expr_stmt></block></then></if>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>
		<if pos:line="53" pos:column="17">if <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">itemizing<pos:position pos:line="53" pos:column="30"/></name> <operator pos:line="53" pos:column="31">&amp;&amp;<pos:position pos:line="53" pos:column="41"/></operator> <name pos:line="53" pos:column="34">log_format_has_i<pos:position pos:line="53" pos:column="50"/></name> <operator pos:line="53" pos:column="51">&amp;&amp;<pos:position pos:line="53" pos:column="61"/></operator> <name pos:line="53" pos:column="54">verbose<pos:position pos:line="53" pos:column="61"/></name> <operator pos:line="53" pos:column="62">&gt;<pos:position pos:line="53" pos:column="66"/></operator> <literal type="number" pos:line="53" pos:column="64">1<pos:position pos:line="53" pos:column="65"/></literal></expr>)<pos:position pos:line="53" pos:column="66"/></condition><then pos:line="53" pos:column="66"> <block pos:line="53" pos:column="67">{
			<decl_stmt><decl><type><name pos:line="54" pos:column="25">int<pos:position pos:line="54" pos:column="28"/></name></type> <name pos:line="54" pos:column="29">changes<pos:position pos:line="54" pos:column="36"/></name> <init pos:line="54" pos:column="37">= <expr><ternary><condition><expr><name pos:line="54" pos:column="39">compare_dest<pos:position pos:line="54" pos:column="51"/></name></expr> ?<pos:position pos:line="54" pos:column="53"/></condition><then pos:line="54" pos:column="53"> <expr><literal type="number" pos:line="54" pos:column="54">0<pos:position pos:line="54" pos:column="55"/></literal></expr> <pos:position pos:line="54" pos:column="56"/></then><else pos:line="54" pos:column="56">: <expr><name pos:line="54" pos:column="58">ITEM_LOCAL_CHANGE<pos:position pos:line="54" pos:column="75"/></name>
				    <operator pos:line="55" pos:column="37">+<pos:position pos:line="55" pos:column="38"/></operator> <operator pos:line="55" pos:column="39">(<pos:position pos:line="55" pos:column="40"/></operator><ternary><condition><expr><name pos:line="55" pos:column="40">link_dest<pos:position pos:line="55" pos:column="49"/></name></expr> ?<pos:position pos:line="55" pos:column="51"/></condition><then pos:line="55" pos:column="51"> <expr><name pos:line="55" pos:column="52">ITEM_XNAME_FOLLOWS<pos:position pos:line="55" pos:column="70"/></name></expr> <pos:position pos:line="55" pos:column="71"/></then><else pos:line="55" pos:column="71">: <expr><literal type="number" pos:line="55" pos:column="73">0<pos:position pos:line="55" pos:column="74"/></literal></expr></else></ternary><operator pos:line="55" pos:column="74">)<pos:position pos:line="55" pos:column="75"/></operator></expr></else></ternary></expr></init></decl>;<pos:position pos:line="55" pos:column="76"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="56" pos:column="25">char<pos:position pos:line="56" pos:column="29"/></name> <modifier pos:line="56" pos:column="30">*<pos:position pos:line="56" pos:column="31"/></modifier></type><name pos:line="56" pos:column="31">lp<pos:position pos:line="56" pos:column="33"/></name> <init pos:line="56" pos:column="34">= <expr><ternary><condition><expr><name pos:line="56" pos:column="36">link_dest<pos:position pos:line="56" pos:column="45"/></name></expr> ?<pos:position pos:line="56" pos:column="47"/></condition><then pos:line="56" pos:column="47"> <expr><literal type="string" pos:line="56" pos:column="48">""<pos:position pos:line="56" pos:column="50"/></literal></expr> <pos:position pos:line="56" pos:column="51"/></then><else pos:line="56" pos:column="51">: <expr><name pos:line="56" pos:column="53">NULL<pos:position pos:line="56" pos:column="57"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="56" pos:column="58"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">itemize<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">file<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="39">ndx<pos:position pos:line="57" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="44">0<pos:position pos:line="57" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="47">&amp;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="48">st<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="52">changes<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="61">0<pos:position pos:line="57" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="64">lp<pos:position pos:line="57" pos:column="66"/></name></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">verbose<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">&gt;<pos:position pos:line="59" pos:column="33"/></operator> <literal type="number" pos:line="59" pos:column="31">1<pos:position pos:line="59" pos:column="32"/></literal> <operator pos:line="59" pos:column="33">&amp;&amp;<pos:position pos:line="59" pos:column="43"/></operator> <name pos:line="59" pos:column="36">maybe_ATTRS_REPORT<pos:position pos:line="59" pos:column="54"/></name></expr>)<pos:position pos:line="59" pos:column="55"/></condition><then pos:line="59" pos:column="55"> <block pos:line="59" pos:column="56">{
			<expr_stmt><expr><name pos:line="60" pos:column="25">code<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <ternary><condition><expr><name pos:line="60" pos:column="32">daemon_log_format_has_i<pos:position pos:line="60" pos:column="55"/></name> <operator pos:line="60" pos:column="56">||<pos:position pos:line="60" pos:column="58"/></operator> <name pos:line="60" pos:column="59">dry_run<pos:position pos:line="60" pos:column="66"/></name></expr>
			     ?<pos:position pos:line="61" pos:column="31"/></condition><then pos:line="61" pos:column="31"> <expr><name pos:line="61" pos:column="32">FCLIENT<pos:position pos:line="61" pos:column="39"/></name></expr> <pos:position pos:line="61" pos:column="40"/></then><else pos:line="61" pos:column="40">: <expr><name pos:line="61" pos:column="42">FINFO<pos:position pos:line="61" pos:column="47"/></name></expr></else></ternary></expr>;<pos:position pos:line="61" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">rprintf<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">code<pos:position pos:line="62" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="39">"%s is uptodate\n"<pos:position pos:line="62" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="59">fname<pos:position pos:line="62" pos:column="64"/></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="66"/></expr_stmt>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if>
		<return pos:line="64" pos:column="17">return <expr><operator pos:line="64" pos:column="24">-<pos:position pos:line="64" pos:column="25"/></operator><literal type="number" pos:line="64" pos:column="25">2<pos:position pos:line="64" pos:column="26"/></literal></expr>;<pos:position pos:line="64" pos:column="27"/></return>
	}<pos:position pos:line="65" pos:column="10"/></block> while <condition pos:line="65" pos:column="17">(<expr><name><name pos:line="65" pos:column="18">basis_dir<pos:position pos:line="65" pos:column="27"/></name><index pos:line="65" pos:column="27">[<expr><operator pos:line="65" pos:column="28">++<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="30">i<pos:position pos:line="65" pos:column="31"/></name></expr>]<pos:position pos:line="65" pos:column="32"/></index></name> <operator pos:line="65" pos:column="33">!=<pos:position pos:line="65" pos:column="35"/></operator> <name pos:line="65" pos:column="36">NULL<pos:position pos:line="65" pos:column="40"/></name></expr>)<pos:position pos:line="65" pos:column="41"/></condition>;<pos:position pos:line="65" pos:column="42"/></do>

	<return pos:line="67" pos:column="9">return <expr><operator pos:line="67" pos:column="16">-<pos:position pos:line="67" pos:column="17"/></operator><literal type="number" pos:line="67" pos:column="17">1<pos:position pos:line="67" pos:column="18"/></literal></expr>;<pos:position pos:line="67" pos:column="19"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

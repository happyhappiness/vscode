<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_64_rsync-1.4.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">get_checksum2<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">buf<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">len<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">sum<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">MDstruct<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">MD<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">MDbegin<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><operator pos:line="6" pos:column="11">&amp;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="12">MD<pos:position pos:line="6" pos:column="14"/></name></expr></argument>)<pos:position pos:line="6" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt>

  <for pos:line="8" pos:column="3">for<control pos:line="8" pos:column="6">(<init><expr><name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <literal type="number" pos:line="8" pos:column="11">0<pos:position pos:line="8" pos:column="12"/></literal></expr>;<pos:position pos:line="8" pos:column="13"/></init> <condition><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">+<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">CSUM_CHUNK<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&lt;=<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="32">len<pos:position pos:line="8" pos:column="35"/></name></expr>;<pos:position pos:line="8" pos:column="36"/></condition> <incr><expr><name pos:line="8" pos:column="37">i<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">+=<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="42">CSUM_CHUNK<pos:position pos:line="8" pos:column="52"/></name></expr></incr>)<pos:position pos:line="8" pos:column="53"/></control> <block pos:line="8" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">bcopy<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">buf<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">+<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="17">tmpchunk<pos:position pos:line="9" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="26">CSUM_CHUNK<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">MDupdate<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><operator pos:line="10" pos:column="14">&amp;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="15">MD<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="19">tmpchunk<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">CSUM_CHUNK<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><literal type="number" pos:line="10" pos:column="40">8<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">bcopy<pos:position pos:line="13" pos:column="8"/></name><argument_list pos:line="13" pos:column="8">(<argument><expr><name pos:line="13" pos:column="9">buf<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">+<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="15">tmpchunk<pos:position pos:line="13" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="24">len<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">i<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">MDupdate<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><operator pos:line="14" pos:column="12">&amp;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="13">MD<pos:position pos:line="14" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="17">tmpchunk<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="27">(<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">len<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">-<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">i<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">)<pos:position pos:line="14" pos:column="34"/></operator><operator pos:line="14" pos:column="34">*<pos:position pos:line="14" pos:column="35"/></operator><literal type="number" pos:line="14" pos:column="35">8<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">sum_put<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><operator pos:line="16" pos:column="11">&amp;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="12">MD<pos:position pos:line="16" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="15">sum<pos:position pos:line="16" pos:column="18"/></name></expr></argument>)<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>
